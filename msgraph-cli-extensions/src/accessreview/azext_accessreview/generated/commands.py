# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=too-many-statements
# pylint: disable=too-many-locals

from msgraph.cli.core.commands import CliCommandType


def load_command_table(self, _):

    from azext_accessreview.generated._client_factory import cf_access_review_decision_access_review_decision
    accessreview_access_review_decision_access_review_decision = CliCommandType(
        operations_tmpl='azext_accessreview.vendored_sdks.accessreview.operations._access_review_decision_access_review'
        '_decision_operations#AccessReviewDecisionAccessReviewDecisionOperations.{}',
        client_factory=cf_access_review_decision_access_review_decision)
    with self.command_group('accessreview access-review-decision-access-review-decision',
                            accessreview_access_review_decision_access_review_decision,
                            client_factory=cf_access_review_decision_access_review_decision,
                            is_experimental=True) as g:
        g.custom_command('update', 'accessreview_access_review_decision_access_review_decision_update')
        g.custom_command('delete', 'accessreview_access_review_decision_access_review_decision_delete')
        g.custom_command('create-access-review-decision', 'accessreview_access_review_decision_access_review_decision_c'
                         'reate_access_review_decision')
        g.custom_command('get-access-review-decision', 'accessreview_access_review_decision_access_review_decision_get_'
                         'access_review_decision')
        g.custom_command('list-access-review-decision', 'accessreview_access_review_decision_access_review_decision_lis'
                         't_access_review_decision')

    from azext_accessreview.generated._client_factory import cf_access_review_access_review
    accessreview_access_review_access_review = CliCommandType(
        operations_tmpl='azext_accessreview.vendored_sdks.accessreview.operations._access_review_access_review_operatio'
        'ns#AccessReviewOperations.{}',
        client_factory=cf_access_review_access_review)
    with self.command_group('accessreview access-review-access-review', accessreview_access_review_access_review,
                            client_factory=cf_access_review_access_review, is_experimental=True) as g:
        g.custom_command('update', 'accessreview_access_review_access_review_update')
        g.custom_command('delete', 'accessreview_access_review_access_review_delete')
        g.custom_command('create-access-review', 'accessreview_access_review_access_review_create_access_review')
        g.custom_command('get-access-review', 'accessreview_access_review_access_review_get_access_review')
        g.custom_command('list-access-review', 'accessreview_access_review_access_review_list_access_review')

    from azext_accessreview.generated._client_factory import cf_access_review
    accessreview_access_review = CliCommandType(
        operations_tmpl='azext_accessreview.vendored_sdks.accessreview.operations._access_review_operations#AccessRevie'
        'wOperations.{}',
        client_factory=cf_access_review)
    with self.command_group('accessreview access-review', accessreview_access_review, client_factory=cf_access_review,
                            is_experimental=True) as g:
        g.custom_command('update', 'accessreview_access_review_update')
        g.custom_command('apply-decision', 'accessreview_access_review_apply_decision')
        g.custom_command('create-decision', 'accessreview_access_review_create_decision')
        g.custom_command('create-instance', 'accessreview_access_review_create_instance')
        g.custom_command('create-my-decision', 'accessreview_access_review_create_my_decision')
        g.custom_command('create-reviewer', 'accessreview_access_review_create_reviewer')
        g.custom_command('get-decision', 'accessreview_access_review_get_decision')
        g.custom_command('get-instance', 'accessreview_access_review_get_instance')
        g.custom_command('get-my-decision', 'accessreview_access_review_get_my_decision')
        g.custom_command('get-reviewer', 'accessreview_access_review_get_reviewer')
        g.custom_command('list-decision', 'accessreview_access_review_list_decision')
        g.custom_command('list-instance', 'accessreview_access_review_list_instance')
        g.custom_command('list-my-decision', 'accessreview_access_review_list_my_decision')
        g.custom_command('list-reviewer', 'accessreview_access_review_list_reviewer')
        g.custom_command('reset-decision', 'accessreview_access_review_reset_decision')
        g.custom_command('send-reminder', 'accessreview_access_review_send_reminder')
        g.custom_command('stop', 'accessreview_access_review_stop')

    from azext_accessreview.generated._client_factory import cf_business_flow_template_business_flow_template
    accessreview_business_flow_template_business_flow_template = CliCommandType(
        operations_tmpl='azext_accessreview.vendored_sdks.accessreview.operations._business_flow_template_business_flow'
        '_template_operations#BusinessFlowTemplateBusinessFlowTemplateOperations.{}',
        client_factory=cf_business_flow_template_business_flow_template)
    with self.command_group('accessreview business-flow-template-business-flow-template',
                            accessreview_business_flow_template_business_flow_template,
                            client_factory=cf_business_flow_template_business_flow_template,
                            is_experimental=True) as g:
        g.custom_command('update', 'accessreview_business_flow_template_business_flow_template_update')
        g.custom_command('delete', 'accessreview_business_flow_template_business_flow_template_delete')
        g.custom_command('create-business-flow-template', 'accessreview_business_flow_template_business_flow_template_c'
                         'reate_business_flow_template')
        g.custom_command('get-business-flow-template', 'accessreview_business_flow_template_business_flow_template_get_'
                         'business_flow_template')
        g.custom_command('list-business-flow-template', 'accessreview_business_flow_template_business_flow_template_lis'
                         't_business_flow_template')

    from azext_accessreview.generated._client_factory import cf_program_control_program_control
    accessreview_program_control_program_control = CliCommandType(
        operations_tmpl='azext_accessreview.vendored_sdks.accessreview.operations._program_control_program_control_oper'
        'ations#ProgramControlOperations.{}',
        client_factory=cf_program_control_program_control)
    with self.command_group('accessreview program-control-program-control',
                            accessreview_program_control_program_control,
                            client_factory=cf_program_control_program_control, is_experimental=True) as g:
        g.custom_command('update', 'accessreview_program_control_program_control_update')
        g.custom_command('delete', 'accessreview_program_control_program_control_delete')
        g.custom_command('create-program-control', 'accessreview_program_control_program_control_create_program_control'
                         '')
        g.custom_command('get-program-control', 'accessreview_program_control_program_control_get_program_control')
        g.custom_command('list-program-control', 'accessreview_program_control_program_control_list_program_control')

    from azext_accessreview.generated._client_factory import cf_program_control
    accessreview_program_control = CliCommandType(
        operations_tmpl='azext_accessreview.vendored_sdks.accessreview.operations._program_control_operations#ProgramCo'
        'ntrolOperations.{}',
        client_factory=cf_program_control)
    with self.command_group('accessreview program-control', accessreview_program_control,
                            client_factory=cf_program_control, is_experimental=True) as g:
        g.custom_command('update', 'accessreview_program_control_update')
        g.custom_command('get-program', 'accessreview_program_control_get_program')

    from azext_accessreview.generated._client_factory import cf_program_control_type_program_control_type
    accessreview_program_control_type_program_control_type = CliCommandType(
        operations_tmpl='azext_accessreview.vendored_sdks.accessreview.operations._program_control_type_program_control'
        '_type_operations#ProgramControlTypeProgramControlTypeOperations.{}',
        client_factory=cf_program_control_type_program_control_type)
    with self.command_group('accessreview program-control-type-program-control-type',
                            accessreview_program_control_type_program_control_type,
                            client_factory=cf_program_control_type_program_control_type, is_experimental=True) as g:
        g.custom_command('update', 'accessreview_program_control_type_program_control_type_update')
        g.custom_command('delete', 'accessreview_program_control_type_program_control_type_delete')
        g.custom_command('create-program-control-type', 'accessreview_program_control_type_program_control_type_create_'
                         'program_control_type')
        g.custom_command('get-program-control-type', 'accessreview_program_control_type_program_control_type_get_progra'
                         'm_control_type')
        g.custom_command('list-program-control-type', 'accessreview_program_control_type_program_control_type_list_prog'
                         'ram_control_type')

    from azext_accessreview.generated._client_factory import cf_program_program
    accessreview_program_program = CliCommandType(
        operations_tmpl='azext_accessreview.vendored_sdks.accessreview.operations._program_program_operations#ProgramOp'
        'erations.{}',
        client_factory=cf_program_program)
    with self.command_group('accessreview program-program', accessreview_program_program,
                            client_factory=cf_program_program, is_experimental=True) as g:
        g.custom_command('update', 'accessreview_program_program_update')
        g.custom_command('delete', 'accessreview_program_program_delete')
        g.custom_command('create-program', 'accessreview_program_program_create_program')
        g.custom_command('get-program', 'accessreview_program_program_get_program')
        g.custom_command('list-program', 'accessreview_program_program_list_program')

    from azext_accessreview.generated._client_factory import cf_program
    accessreview_program = CliCommandType(
        operations_tmpl='azext_accessreview.vendored_sdks.accessreview.operations._program_operations#ProgramOperations'
        '.{}',
        client_factory=cf_program)
    with self.command_group('accessreview program', accessreview_program, client_factory=cf_program,
                            is_experimental=True) as g:
        g.custom_command('update', 'accessreview_program_update')
        g.custom_command('create-control', 'accessreview_program_create_control')
        g.custom_command('get-control', 'accessreview_program_get_control')
        g.custom_command('list-control', 'accessreview_program_list_control')
