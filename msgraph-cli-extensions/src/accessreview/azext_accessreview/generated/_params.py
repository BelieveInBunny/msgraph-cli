# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=line-too-long
# pylint: disable=too-many-lines
# pylint: disable=too-many-statements

from msgraph.cli.core.commands.parameters import get_three_state_flag
from msgraph.cli.core.commands.validators import validate_file_or_dict
from azext_accessreview.action import (
    AddReviewedBy,
    AddReviewedEntity,
    AddReviewers,
    AddSettingsRecurrenceSettings,
    AddSettingsAutoReviewSettings,
    AddResource
)


def load_arguments(self, _):

    with self.argument_context('accessreview access-review-decision-access-review-decision update') as c:
        c.argument('access_review_decision_id', help='key: accessReviewDecision-id of accessReviewDecision')
        c.argument('id_', options_list=['--id'], help='Read-only.')
        c.argument('access_review_id', help='')
        c.argument('reviewed_by', action=AddReviewedBy, nargs='*', help='userIdentity')
        c.argument('reviewed_date_time', help='')
        c.argument('review_result', help='')
        c.argument('justification', help='')
        c.argument('applied_by', action=AddReviewedBy, nargs='*', help='userIdentity')
        c.argument('applied_date_time', help='')
        c.argument('apply_result', help='')
        c.argument('access_recommendation', help='')

    with self.argument_context('accessreview access-review-decision-access-review-decision delete') as c:
        c.argument('access_review_decision_id', help='key: accessReviewDecision-id of accessReviewDecision')
        c.argument('if_match', help='ETag')

    with self.argument_context('accessreview access-review-decision-access-review-decision create-access-review-decision') as c:
        c.argument('id_', options_list=['--id'], help='Read-only.')
        c.argument('access_review_id', help='')
        c.argument('reviewed_by', action=AddReviewedBy, nargs='*', help='userIdentity')
        c.argument('reviewed_date_time', help='')
        c.argument('review_result', help='')
        c.argument('justification', help='')
        c.argument('applied_by', action=AddReviewedBy, nargs='*', help='userIdentity')
        c.argument('applied_date_time', help='')
        c.argument('apply_result', help='')
        c.argument('access_recommendation', help='')

    with self.argument_context('accessreview access-review-decision-access-review-decision get-access-review-decision') as c:
        c.argument('access_review_decision_id', help='key: accessReviewDecision-id of accessReviewDecision')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('accessreview access-review-decision-access-review-decision list-access-review-decision') as c:
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('accessreview access-review-access-review update') as c:
        c.argument('access_review_id', help='key: accessReview-id of accessReview')
        c.argument('id_', options_list=['--id'], help='Read-only.')
        c.argument('display_name', help='')
        c.argument('start_date_time', help='')
        c.argument('end_date_time', help='')
        c.argument('status', help='')
        c.argument('created_by', action=AddReviewedBy, nargs='*', help='userIdentity')
        c.argument('business_flow_template_id', help='')
        c.argument('reviewer_type', help='')
        c.argument('description', help='')
        c.argument('reviewed_entity', action=AddReviewedEntity, nargs='*', help='identity')
        c.argument('reviewers', action=AddReviewers, nargs='*', help='')
        c.argument('decisions', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('my_decisions', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('instances', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('settings_mail_notifications_enabled', arg_type=get_three_state_flag(), help='')
        c.argument('settings_reminders_enabled', arg_type=get_three_state_flag(), help='')
        c.argument('settings_justification_required_on_approval', arg_type=get_three_state_flag(), help='')
        c.argument('settings_recurrence_settings', action=AddSettingsRecurrenceSettings, nargs='*', help=''
                   'accessReviewRecurrenceSettings')
        c.argument('settings_auto_review_enabled', arg_type=get_three_state_flag(), help='')
        c.argument('settings_activity_duration_in_days', help='')
        c.argument('settings_auto_review_settings', action=AddSettingsAutoReviewSettings, nargs='*', help=''
                   'autoReviewSettings')
        c.argument('settings_auto_apply_review_results_enabled', arg_type=get_three_state_flag(), help='')
        c.argument('settings_access_recommendations_enabled', arg_type=get_three_state_flag(), help='')

    with self.argument_context('accessreview access-review-access-review delete') as c:
        c.argument('access_review_id', help='key: accessReview-id of accessReview')
        c.argument('if_match', help='ETag')

    with self.argument_context('accessreview access-review-access-review create-access-review') as c:
        c.argument('id_', options_list=['--id'], help='Read-only.')
        c.argument('display_name', help='')
        c.argument('start_date_time', help='')
        c.argument('end_date_time', help='')
        c.argument('status', help='')
        c.argument('created_by', action=AddReviewedBy, nargs='*', help='userIdentity')
        c.argument('business_flow_template_id', help='')
        c.argument('reviewer_type', help='')
        c.argument('description', help='')
        c.argument('reviewed_entity', action=AddReviewedEntity, nargs='*', help='identity')
        c.argument('reviewers', action=AddReviewers, nargs='*', help='')
        c.argument('decisions', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('my_decisions', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('instances', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('settings_mail_notifications_enabled', arg_type=get_three_state_flag(), help='')
        c.argument('settings_reminders_enabled', arg_type=get_three_state_flag(), help='')
        c.argument('settings_justification_required_on_approval', arg_type=get_three_state_flag(), help='')
        c.argument('settings_recurrence_settings', action=AddSettingsRecurrenceSettings, nargs='*', help=''
                   'accessReviewRecurrenceSettings')
        c.argument('settings_auto_review_enabled', arg_type=get_three_state_flag(), help='')
        c.argument('settings_activity_duration_in_days', help='')
        c.argument('settings_auto_review_settings', action=AddSettingsAutoReviewSettings, nargs='*', help=''
                   'autoReviewSettings')
        c.argument('settings_auto_apply_review_results_enabled', arg_type=get_three_state_flag(), help='')
        c.argument('settings_access_recommendations_enabled', arg_type=get_three_state_flag(), help='')

    with self.argument_context('accessreview access-review-access-review get-access-review') as c:
        c.argument('access_review_id', help='key: accessReview-id of accessReview')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('accessreview access-review-access-review list-access-review') as c:
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('accessreview access-review update') as c:
        c.argument('access_review_id', help='key: accessReview-id of accessReview')
        c.argument('access_review_decision_id', help='key: accessReviewDecision-id of accessReviewDecision')
        c.argument('id_', options_list=['--id'], help='Read-only.')
        c.argument('microsoft_graph_access_review_decision_access_review_id_access_review_id', help='')
        c.argument('reviewed_by', action=AddReviewedBy, nargs='*', help='userIdentity')
        c.argument('reviewed_date_time', help='')
        c.argument('review_result', help='')
        c.argument('justification', help='')
        c.argument('applied_by', action=AddReviewedBy, nargs='*', help='userIdentity')
        c.argument('applied_date_time', help='')
        c.argument('apply_result', help='')
        c.argument('access_recommendation', help='')
        c.argument('access_review_id1', help='key: accessReview-id of accessReview')
        c.argument('display_name', help='')
        c.argument('start_date_time', help='')
        c.argument('end_date_time', help='')
        c.argument('status', help='')
        c.argument('created_by', action=AddReviewedBy, nargs='*', help='userIdentity')
        c.argument('business_flow_template_id', help='')
        c.argument('reviewer_type', help='')
        c.argument('description', help='')
        c.argument('reviewed_entity', action=AddReviewedEntity, nargs='*', help='identity')
        c.argument('reviewers', action=AddReviewers, nargs='*', help='')
        c.argument('decisions', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('my_decisions', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('instances', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('settings_mail_notifications_enabled', arg_type=get_three_state_flag(), help='')
        c.argument('settings_reminders_enabled', arg_type=get_three_state_flag(), help='')
        c.argument('settings_justification_required_on_approval', arg_type=get_three_state_flag(), help='')
        c.argument('settings_recurrence_settings', action=AddSettingsRecurrenceSettings, nargs='*', help=''
                   'accessReviewRecurrenceSettings')
        c.argument('settings_auto_review_enabled', arg_type=get_three_state_flag(), help='')
        c.argument('settings_activity_duration_in_days', help='')
        c.argument('settings_auto_review_settings', action=AddSettingsAutoReviewSettings, nargs='*', help=''
                   'autoReviewSettings')
        c.argument('settings_auto_apply_review_results_enabled', arg_type=get_three_state_flag(), help='')
        c.argument('settings_access_recommendations_enabled', arg_type=get_three_state_flag(), help='')
        c.argument('access_review_reviewer_id', help='key: accessReviewReviewer-id of accessReviewReviewer')
        c.argument('user_principal_name', help='')

    with self.argument_context('accessreview access-review apply-decision') as c:
        c.argument('access_review_id', help='key: accessReview-id of accessReview')

    with self.argument_context('accessreview access-review create-decision') as c:
        c.argument('access_review_id', help='key: accessReview-id of accessReview')
        c.argument('id_', options_list=['--id'], help='Read-only.')
        c.argument('microsoft_graph_access_review_decision_access_review_id_access_review_id', help='')
        c.argument('reviewed_by', action=AddReviewedBy, nargs='*', help='userIdentity')
        c.argument('reviewed_date_time', help='')
        c.argument('review_result', help='')
        c.argument('justification', help='')
        c.argument('applied_by', action=AddReviewedBy, nargs='*', help='userIdentity')
        c.argument('applied_date_time', help='')
        c.argument('apply_result', help='')
        c.argument('access_recommendation', help='')

    with self.argument_context('accessreview access-review create-instance') as c:
        c.argument('access_review_id', help='key: accessReview-id of accessReview')
        c.argument('id_', options_list=['--id'], help='Read-only.')
        c.argument('display_name', help='')
        c.argument('start_date_time', help='')
        c.argument('end_date_time', help='')
        c.argument('status', help='')
        c.argument('created_by', action=AddReviewedBy, nargs='*', help='userIdentity')
        c.argument('business_flow_template_id', help='')
        c.argument('reviewer_type', help='')
        c.argument('description', help='')
        c.argument('reviewed_entity', action=AddReviewedEntity, nargs='*', help='identity')
        c.argument('reviewers', action=AddReviewers, nargs='*', help='')
        c.argument('decisions', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('my_decisions', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('instances', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('settings_mail_notifications_enabled', arg_type=get_three_state_flag(), help='')
        c.argument('settings_reminders_enabled', arg_type=get_three_state_flag(), help='')
        c.argument('settings_justification_required_on_approval', arg_type=get_three_state_flag(), help='')
        c.argument('settings_recurrence_settings', action=AddSettingsRecurrenceSettings, nargs='*', help=''
                   'accessReviewRecurrenceSettings')
        c.argument('settings_auto_review_enabled', arg_type=get_three_state_flag(), help='')
        c.argument('settings_activity_duration_in_days', help='')
        c.argument('settings_auto_review_settings', action=AddSettingsAutoReviewSettings, nargs='*', help=''
                   'autoReviewSettings')
        c.argument('settings_auto_apply_review_results_enabled', arg_type=get_three_state_flag(), help='')
        c.argument('settings_access_recommendations_enabled', arg_type=get_three_state_flag(), help='')

    with self.argument_context('accessreview access-review create-my-decision') as c:
        c.argument('access_review_id', help='key: accessReview-id of accessReview')
        c.argument('id_', options_list=['--id'], help='Read-only.')
        c.argument('microsoft_graph_access_review_decision_access_review_id_access_review_id', help='')
        c.argument('reviewed_by', action=AddReviewedBy, nargs='*', help='userIdentity')
        c.argument('reviewed_date_time', help='')
        c.argument('review_result', help='')
        c.argument('justification', help='')
        c.argument('applied_by', action=AddReviewedBy, nargs='*', help='userIdentity')
        c.argument('applied_date_time', help='')
        c.argument('apply_result', help='')
        c.argument('access_recommendation', help='')

    with self.argument_context('accessreview access-review create-reviewer') as c:
        c.argument('access_review_id', help='key: accessReview-id of accessReview')
        c.argument('id_', options_list=['--id'], help='Read-only.')
        c.argument('display_name', help='')
        c.argument('user_principal_name', help='')

    with self.argument_context('accessreview access-review get-decision') as c:
        c.argument('access_review_id', help='key: accessReview-id of accessReview')
        c.argument('access_review_decision_id', help='key: accessReviewDecision-id of accessReviewDecision')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('accessreview access-review get-instance') as c:
        c.argument('access_review_id', help='key: accessReview-id of accessReview')
        c.argument('access_review_id1', help='key: accessReview-id of accessReview')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('accessreview access-review get-my-decision') as c:
        c.argument('access_review_id', help='key: accessReview-id of accessReview')
        c.argument('access_review_decision_id', help='key: accessReviewDecision-id of accessReviewDecision')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('accessreview access-review get-reviewer') as c:
        c.argument('access_review_id', help='key: accessReview-id of accessReview')
        c.argument('access_review_reviewer_id', help='key: accessReviewReviewer-id of accessReviewReviewer')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('accessreview access-review list-decision') as c:
        c.argument('access_review_id', help='key: accessReview-id of accessReview')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('accessreview access-review list-instance') as c:
        c.argument('access_review_id', help='key: accessReview-id of accessReview')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('accessreview access-review list-my-decision') as c:
        c.argument('access_review_id', help='key: accessReview-id of accessReview')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('accessreview access-review list-reviewer') as c:
        c.argument('access_review_id', help='key: accessReview-id of accessReview')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('accessreview access-review reset-decision') as c:
        c.argument('access_review_id', help='key: accessReview-id of accessReview')

    with self.argument_context('accessreview access-review send-reminder') as c:
        c.argument('access_review_id', help='key: accessReview-id of accessReview')

    with self.argument_context('accessreview access-review stop') as c:
        c.argument('access_review_id', help='key: accessReview-id of accessReview')

    with self.argument_context('accessreview business-flow-template-business-flow-template update') as c:
        c.argument('business_flow_template_id', help='key: businessFlowTemplate-id of businessFlowTemplate')
        c.argument('id_', options_list=['--id'], help='Read-only.')
        c.argument('display_name', help='')

    with self.argument_context('accessreview business-flow-template-business-flow-template delete') as c:
        c.argument('business_flow_template_id', help='key: businessFlowTemplate-id of businessFlowTemplate')
        c.argument('if_match', help='ETag')

    with self.argument_context('accessreview business-flow-template-business-flow-template create-business-flow-template') as c:
        c.argument('id_', options_list=['--id'], help='Read-only.')
        c.argument('display_name', help='')

    with self.argument_context('accessreview business-flow-template-business-flow-template get-business-flow-template') as c:
        c.argument('business_flow_template_id', help='key: businessFlowTemplate-id of businessFlowTemplate')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('accessreview business-flow-template-business-flow-template list-business-flow-template') as c:
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('accessreview program-control-program-control update') as c:
        c.argument('program_control_id', help='key: programControl-id of programControl')
        c.argument('id_', options_list=['--id'], help='Read-only.')
        c.argument('control_id', help='')
        c.argument('program_id', help='')
        c.argument('control_type_id', help='')
        c.argument('display_name', help='')
        c.argument('status', help='')
        c.argument('owner', action=AddReviewedBy, nargs='*', help='userIdentity')
        c.argument('resource', action=AddResource, nargs='*', help='programResource')
        c.argument('created_date_time', help='')
        c.argument('program', type=validate_file_or_dict, help='program Expected value: json-string/@json-file.')

    with self.argument_context('accessreview program-control-program-control delete') as c:
        c.argument('program_control_id', help='key: programControl-id of programControl')
        c.argument('if_match', help='ETag')

    with self.argument_context('accessreview program-control-program-control create-program-control') as c:
        c.argument('id_', options_list=['--id'], help='Read-only.')
        c.argument('control_id', help='')
        c.argument('program_id', help='')
        c.argument('control_type_id', help='')
        c.argument('display_name', help='')
        c.argument('status', help='')
        c.argument('owner', action=AddReviewedBy, nargs='*', help='userIdentity')
        c.argument('resource', action=AddResource, nargs='*', help='programResource')
        c.argument('created_date_time', help='')
        c.argument('program', type=validate_file_or_dict, help='program Expected value: json-string/@json-file.')

    with self.argument_context('accessreview program-control-program-control get-program-control') as c:
        c.argument('program_control_id', help='key: programControl-id of programControl')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('accessreview program-control-program-control list-program-control') as c:
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('accessreview program-control update') as c:
        c.argument('program_control_id', help='key: programControl-id of programControl')
        c.argument('id_', options_list=['--id'], help='Read-only.')
        c.argument('display_name', help='')
        c.argument('description', help='')
        c.argument('controls', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')

    with self.argument_context('accessreview program-control get-program') as c:
        c.argument('program_control_id', help='key: programControl-id of programControl')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('accessreview program-control-type-program-control-type update') as c:
        c.argument('program_control_type_id', help='key: programControlType-id of programControlType')
        c.argument('id_', options_list=['--id'], help='Read-only.')
        c.argument('control_type_group_id', help='')
        c.argument('display_name', help='')

    with self.argument_context('accessreview program-control-type-program-control-type delete') as c:
        c.argument('program_control_type_id', help='key: programControlType-id of programControlType')
        c.argument('if_match', help='ETag')

    with self.argument_context('accessreview program-control-type-program-control-type create-program-control-type') as c:
        c.argument('id_', options_list=['--id'], help='Read-only.')
        c.argument('control_type_group_id', help='')
        c.argument('display_name', help='')

    with self.argument_context('accessreview program-control-type-program-control-type get-program-control-type') as c:
        c.argument('program_control_type_id', help='key: programControlType-id of programControlType')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('accessreview program-control-type-program-control-type list-program-control-type') as c:
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('accessreview program-program update') as c:
        c.argument('program_id', help='key: program-id of program')
        c.argument('id_', options_list=['--id'], help='Read-only.')
        c.argument('display_name', help='')
        c.argument('description', help='')
        c.argument('controls', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')

    with self.argument_context('accessreview program-program delete') as c:
        c.argument('program_id', help='key: program-id of program')
        c.argument('if_match', help='ETag')

    with self.argument_context('accessreview program-program create-program') as c:
        c.argument('id_', options_list=['--id'], help='Read-only.')
        c.argument('display_name', help='')
        c.argument('description', help='')
        c.argument('controls', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')

    with self.argument_context('accessreview program-program get-program') as c:
        c.argument('program_id', help='key: program-id of program')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('accessreview program-program list-program') as c:
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('accessreview program update') as c:
        c.argument('program_id', help='key: program-id of program')
        c.argument('program_control_id', help='key: programControl-id of programControl')
        c.argument('id_', options_list=['--id'], help='Read-only.')
        c.argument('control_id', help='')
        c.argument('microsoft_graph_program_control_program_id', help='')
        c.argument('control_type_id', help='')
        c.argument('display_name', help='')
        c.argument('status', help='')
        c.argument('owner', action=AddReviewedBy, nargs='*', help='userIdentity')
        c.argument('resource', action=AddResource, nargs='*', help='programResource')
        c.argument('created_date_time', help='')
        c.argument('program', type=validate_file_or_dict, help='program Expected value: json-string/@json-file.')

    with self.argument_context('accessreview program create-control') as c:
        c.argument('program_id', help='key: program-id of program')
        c.argument('id_', options_list=['--id'], help='Read-only.')
        c.argument('control_id', help='')
        c.argument('microsoft_graph_program_control_program_id', help='')
        c.argument('control_type_id', help='')
        c.argument('display_name', help='')
        c.argument('status', help='')
        c.argument('owner', action=AddReviewedBy, nargs='*', help='userIdentity')
        c.argument('resource', action=AddResource, nargs='*', help='programResource')
        c.argument('created_date_time', help='')
        c.argument('program', type=validate_file_or_dict, help='program Expected value: json-string/@json-file.')

    with self.argument_context('accessreview program get-control') as c:
        c.argument('program_id', help='key: program-id of program')
        c.argument('program_control_id', help='key: programControl-id of programControl')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('accessreview program list-control') as c:
        c.argument('program_id', help='key: program-id of program')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')
