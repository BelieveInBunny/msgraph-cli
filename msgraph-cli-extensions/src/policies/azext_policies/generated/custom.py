# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=line-too-long
# pylint: disable=too-many-lines


def policies_policy_policy_root_update(client,
                                       id_=None,
                                       activity_based_timeout_policies=None,
                                       claims_mapping_policies=None,
                                       home_realm_discovery_policies=None,
                                       token_issuance_policies=None,
                                       token_lifetime_policies=None,
                                       identity_security_defaults_enforcement_policy=None,
                                       conditional_access_policies=None,
                                       admin_consent_request_policy_id=None,
                                       admin_consent_request_policy_is_enabled=None,
                                       admin_consent_request_policy_version=None,
                                       admin_consent_request_policy_notify_reviewers=None,
                                       admin_consent_request_policy_reminders_enabled=None,
                                       admin_consent_request_policy_request_duration_in_days=None,
                                       admin_consent_request_policy_reviewers=None):
    return client.update_policy_root(id=id_,
                                     activity_based_timeout_policies=activity_based_timeout_policies,
                                     claims_mapping_policies=claims_mapping_policies,
                                     home_realm_discovery_policies=home_realm_discovery_policies,
                                     token_issuance_policies=token_issuance_policies,
                                     token_lifetime_policies=token_lifetime_policies,
                                     identity_security_defaults_enforcement_policy=identity_security_defaults_enforcement_policy,
                                     conditional_access_policies=conditional_access_policies,
                                     microsoft_graph_entity_id=admin_consent_request_policy_id,
                                     is_enabled=admin_consent_request_policy_is_enabled,
                                     version=admin_consent_request_policy_version,
                                     notify_reviewers=admin_consent_request_policy_notify_reviewers,
                                     reminders_enabled=admin_consent_request_policy_reminders_enabled,
                                     request_duration_in_days=admin_consent_request_policy_request_duration_in_days,
                                     reviewers=admin_consent_request_policy_reviewers)


def policies_policy_policy_root_get_policy_root(client,
                                                select=None,
                                                expand=None):
    return client.get_policy_root(select=select,
                                  expand=expand)


def policies_policy_update(client,
                           activity_based_timeout_policy_id=None,
                           id_=None,
                           deleted_date_time=None,
                           description=None,
                           display_name=None,
                           definition=None,
                           is_organization_default=None,
                           applies_to=None,
                           claims_mapping_policy_id=None,
                           conditional_access_policy_id=None,
                           created_date_time=None,
                           modified_date_time=None,
                           state=None,
                           grant_controls=None,
                           session_controls_cloud_app_security=None,
                           session_controls_sign_in_frequency=None,
                           session_controls_persistent_browser=None,
                           session_controls_application_enforced_restrictions_is_enabled=None,
                           conditions_applications=None,
                           conditions_users=None,
                           conditions_sign_in_risk_levels=None,
                           conditions_platforms=None,
                           conditions_locations=None,
                           conditions_client_app_types=None,
                           conditions_device_states=None,
                           conditions_devices=None,
                           home_realm_discovery_policy_id=None,
                           token_issuance_policy_id=None,
                           token_lifetime_policy_id=None,
                           is_enabled=None,
                           version=None,
                           notify_reviewers=None,
                           reminders_enabled=None,
                           request_duration_in_days=None,
                           reviewers=None):
    if activity_based_timeout_policy_id is not None:
        return client.update_activity_based_timeout_policy(activity_based_timeout_policy_id=activity_based_timeout_policy_id,
                                                           id=id_,
                                                           deleted_date_time=deleted_date_time,
                                                           description=description,
                                                           display_name=display_name,
                                                           definition=definition,
                                                           is_organization_default=is_organization_default,
                                                           applies_to=applies_to)
    elif claims_mapping_policy_id is not None:
        return client.update_claim_mapping_policy(claims_mapping_policy_id=claims_mapping_policy_id,
                                                  id=id_,
                                                  deleted_date_time=deleted_date_time,
                                                  description=description,
                                                  display_name=display_name,
                                                  definition=definition,
                                                  is_organization_default=is_organization_default,
                                                  applies_to=applies_to)
    elif conditional_access_policy_id is not None:
        return client.update_conditional_access_policy(conditional_access_policy_id=conditional_access_policy_id,
                                                       id=id_,
                                                       created_date_time=created_date_time,
                                                       modified_date_time=modified_date_time,
                                                       display_name=display_name,
                                                       description=description,
                                                       state=state,
                                                       grant_controls=grant_controls,
                                                       cloud_app_security=session_controls_cloud_app_security,
                                                       sign_in_frequency=session_controls_sign_in_frequency,
                                                       persistent_browser=session_controls_persistent_browser,
                                                       is_enabled=session_controls_application_enforced_restrictions_is_enabled,
                                                       applications=conditions_applications,
                                                       users=conditions_users,
                                                       sign_in_risk_levels=conditions_sign_in_risk_levels,
                                                       platforms=conditions_platforms,
                                                       locations=conditions_locations,
                                                       client_app_types=conditions_client_app_types,
                                                       device_states=conditions_device_states,
                                                       devices=conditions_devices)
    elif home_realm_discovery_policy_id is not None:
        return client.update_home_realm_discovery_policy(home_realm_discovery_policy_id=home_realm_discovery_policy_id,
                                                         id=id_,
                                                         deleted_date_time=deleted_date_time,
                                                         description=description,
                                                         display_name=display_name,
                                                         definition=definition,
                                                         is_organization_default=is_organization_default,
                                                         applies_to=applies_to)
    elif token_issuance_policy_id is not None:
        return client.update_token_issuance_policy(token_issuance_policy_id=token_issuance_policy_id,
                                                   id=id_,
                                                   deleted_date_time=deleted_date_time,
                                                   description=description,
                                                   display_name=display_name,
                                                   definition=definition,
                                                   is_organization_default=is_organization_default,
                                                   applies_to=applies_to)
    elif token_lifetime_policy_id is not None:
        return client.update_token_lifetime_policy(token_lifetime_policy_id=token_lifetime_policy_id,
                                                   id=id_,
                                                   deleted_date_time=deleted_date_time,
                                                   description=description,
                                                   display_name=display_name,
                                                   definition=definition,
                                                   is_organization_default=is_organization_default,
                                                   applies_to=applies_to)
    elif:
        return client.update_admin_consent_request_policy(id=id_,
                                                          is_enabled=is_enabled,
                                                          version=version,
                                                          notify_reviewers=notify_reviewers,
                                                          reminders_enabled=reminders_enabled,
                                                          request_duration_in_days=request_duration_in_days,
                                                          reviewers=reviewers)
    return client.update_identity_security_default_enforcement_policy(id=id_,
                                                                      deleted_date_time=deleted_date_time,
                                                                      description=description,
                                                                      display_name=display_name,
                                                                      is_enabled=is_enabled)


def policies_policy_create_activity_based_timeout_policy(client,
                                                         id_=None,
                                                         deleted_date_time=None,
                                                         description=None,
                                                         display_name=None,
                                                         definition=None,
                                                         is_organization_default=None,
                                                         applies_to=None):
    return client.create_activity_based_timeout_policy(id=id_,
                                                       deleted_date_time=deleted_date_time,
                                                       description=description,
                                                       display_name=display_name,
                                                       definition=definition,
                                                       is_organization_default=is_organization_default,
                                                       applies_to=applies_to)


def policies_policy_create_claim_mapping_policy(client,
                                                id_=None,
                                                deleted_date_time=None,
                                                description=None,
                                                display_name=None,
                                                definition=None,
                                                is_organization_default=None,
                                                applies_to=None):
    return client.create_claim_mapping_policy(id=id_,
                                              deleted_date_time=deleted_date_time,
                                              description=description,
                                              display_name=display_name,
                                              definition=definition,
                                              is_organization_default=is_organization_default,
                                              applies_to=applies_to)


def policies_policy_create_conditional_access_policy(client,
                                                     id_=None,
                                                     created_date_time=None,
                                                     modified_date_time=None,
                                                     display_name=None,
                                                     description=None,
                                                     state=None,
                                                     grant_controls=None,
                                                     session_controls_cloud_app_security=None,
                                                     session_controls_sign_in_frequency=None,
                                                     session_controls_persistent_browser=None,
                                                     session_controls_application_enforced_restrictions_is_enabled=None,
                                                     conditions_applications=None,
                                                     conditions_users=None,
                                                     conditions_sign_in_risk_levels=None,
                                                     conditions_platforms=None,
                                                     conditions_locations=None,
                                                     conditions_client_app_types=None,
                                                     conditions_device_states=None,
                                                     conditions_devices=None):
    return client.create_conditional_access_policy(id=id_,
                                                   created_date_time=created_date_time,
                                                   modified_date_time=modified_date_time,
                                                   display_name=display_name,
                                                   description=description,
                                                   state=state,
                                                   grant_controls=grant_controls,
                                                   cloud_app_security=session_controls_cloud_app_security,
                                                   sign_in_frequency=session_controls_sign_in_frequency,
                                                   persistent_browser=session_controls_persistent_browser,
                                                   is_enabled=session_controls_application_enforced_restrictions_is_enabled,
                                                   applications=conditions_applications,
                                                   users=conditions_users,
                                                   sign_in_risk_levels=conditions_sign_in_risk_levels,
                                                   platforms=conditions_platforms,
                                                   locations=conditions_locations,
                                                   client_app_types=conditions_client_app_types,
                                                   device_states=conditions_device_states,
                                                   devices=conditions_devices)


def policies_policy_create_home_realm_discovery_policy(client,
                                                       id_=None,
                                                       deleted_date_time=None,
                                                       description=None,
                                                       display_name=None,
                                                       definition=None,
                                                       is_organization_default=None,
                                                       applies_to=None):
    return client.create_home_realm_discovery_policy(id=id_,
                                                     deleted_date_time=deleted_date_time,
                                                     description=description,
                                                     display_name=display_name,
                                                     definition=definition,
                                                     is_organization_default=is_organization_default,
                                                     applies_to=applies_to)


def policies_policy_create_token_issuance_policy(client,
                                                 id_=None,
                                                 deleted_date_time=None,
                                                 description=None,
                                                 display_name=None,
                                                 definition=None,
                                                 is_organization_default=None,
                                                 applies_to=None):
    return client.create_token_issuance_policy(id=id_,
                                               deleted_date_time=deleted_date_time,
                                               description=description,
                                               display_name=display_name,
                                               definition=definition,
                                               is_organization_default=is_organization_default,
                                               applies_to=applies_to)


def policies_policy_create_token_lifetime_policy(client,
                                                 id_=None,
                                                 deleted_date_time=None,
                                                 description=None,
                                                 display_name=None,
                                                 definition=None,
                                                 is_organization_default=None,
                                                 applies_to=None):
    return client.create_token_lifetime_policy(id=id_,
                                               deleted_date_time=deleted_date_time,
                                               description=description,
                                               display_name=display_name,
                                               definition=definition,
                                               is_organization_default=is_organization_default,
                                               applies_to=applies_to)


def policies_policy_get_activity_based_timeout_policy(client,
                                                      activity_based_timeout_policy_id,
                                                      select=None,
                                                      expand=None):
    return client.get_activity_based_timeout_policy(activity_based_timeout_policy_id=activity_based_timeout_policy_id,
                                                    select=select,
                                                    expand=expand)


def policies_policy_get_admin_consent_request_policy(client,
                                                     select=None,
                                                     expand=None):
    return client.get_admin_consent_request_policy(select=select,
                                                   expand=expand)


def policies_policy_get_claim_mapping_policy(client,
                                             claims_mapping_policy_id,
                                             select=None,
                                             expand=None):
    return client.get_claim_mapping_policy(claims_mapping_policy_id=claims_mapping_policy_id,
                                           select=select,
                                           expand=expand)


def policies_policy_get_conditional_access_policy(client,
                                                  conditional_access_policy_id,
                                                  select=None,
                                                  expand=None):
    return client.get_conditional_access_policy(conditional_access_policy_id=conditional_access_policy_id,
                                                select=select,
                                                expand=expand)


def policies_policy_get_home_realm_discovery_policy(client,
                                                    home_realm_discovery_policy_id,
                                                    select=None,
                                                    expand=None):
    return client.get_home_realm_discovery_policy(home_realm_discovery_policy_id=home_realm_discovery_policy_id,
                                                  select=select,
                                                  expand=expand)


def policies_policy_get_identity_security_default_enforcement_policy(client,
                                                                     select=None,
                                                                     expand=None):
    return client.get_identity_security_default_enforcement_policy(select=select,
                                                                   expand=expand)


def policies_policy_get_token_issuance_policy(client,
                                              token_issuance_policy_id,
                                              select=None,
                                              expand=None):
    return client.get_token_issuance_policy(token_issuance_policy_id=token_issuance_policy_id,
                                            select=select,
                                            expand=expand)


def policies_policy_get_token_lifetime_policy(client,
                                              token_lifetime_policy_id,
                                              select=None,
                                              expand=None):
    return client.get_token_lifetime_policy(token_lifetime_policy_id=token_lifetime_policy_id,
                                            select=select,
                                            expand=expand)


def policies_policy_list_activity_based_timeout_policy(client,
                                                       orderby=None,
                                                       select=None,
                                                       expand=None):
    return client.list_activity_based_timeout_policy(orderby=orderby,
                                                     select=select,
                                                     expand=expand)


def policies_policy_list_claim_mapping_policy(client,
                                              orderby=None,
                                              select=None,
                                              expand=None):
    return client.list_claim_mapping_policy(orderby=orderby,
                                            select=select,
                                            expand=expand)


def policies_policy_list_conditional_access_policy(client,
                                                   orderby=None,
                                                   select=None,
                                                   expand=None):
    return client.list_conditional_access_policy(orderby=orderby,
                                                 select=select,
                                                 expand=expand)


def policies_policy_list_home_realm_discovery_policy(client,
                                                     orderby=None,
                                                     select=None,
                                                     expand=None):
    return client.list_home_realm_discovery_policy(orderby=orderby,
                                                   select=select,
                                                   expand=expand)


def policies_policy_list_token_issuance_policy(client,
                                               orderby=None,
                                               select=None,
                                               expand=None):
    return client.list_token_issuance_policy(orderby=orderby,
                                             select=select,
                                             expand=expand)


def policies_policy_list_token_lifetime_policy(client,
                                               orderby=None,
                                               select=None,
                                               expand=None):
    return client.list_token_lifetime_policy(orderby=orderby,
                                             select=select,
                                             expand=expand)
