# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from enum import Enum

class Enum13(str, Enum):

    id = "id"
    deleted_date_time = "deletedDateTime"
    description = "description"
    display_name = "displayName"
    definition = "definition"
    is_organization_default = "isOrganizationDefault"
    applies_to = "appliesTo"

class Enum15(str, Enum):

    id = "id"
    is_enabled = "isEnabled"
    version = "version"
    notify_reviewers = "notifyReviewers"
    reminders_enabled = "remindersEnabled"
    request_duration_in_days = "requestDurationInDays"
    reviewers = "reviewers"

class Enum16(str, Enum):

    id = "id"
    id_desc = "id desc"
    deleted_date_time = "deletedDateTime"
    deleted_date_time_desc = "deletedDateTime desc"
    description = "description"
    description_desc = "description desc"
    display_name = "displayName"
    display_name_desc = "displayName desc"
    definition = "definition"
    definition_desc = "definition desc"
    is_organization_default = "isOrganizationDefault"
    is_organization_default_desc = "isOrganizationDefault desc"

class Enum17(str, Enum):

    id = "id"
    deleted_date_time = "deletedDateTime"
    description = "description"
    display_name = "displayName"
    definition = "definition"
    is_organization_default = "isOrganizationDefault"
    applies_to = "appliesTo"

class Enum18(str, Enum):

    asterisk = "*"
    applies_to = "appliesTo"

class Enum19(str, Enum):

    id = "id"
    deleted_date_time = "deletedDateTime"
    description = "description"
    display_name = "displayName"
    definition = "definition"
    is_organization_default = "isOrganizationDefault"
    applies_to = "appliesTo"

class Enum20(str, Enum):

    asterisk = "*"
    applies_to = "appliesTo"

class Enum21(str, Enum):

    id = "id"
    id_desc = "id desc"
    created_date_time = "createdDateTime"
    created_date_time_desc = "createdDateTime desc"
    modified_date_time = "modifiedDateTime"
    modified_date_time_desc = "modifiedDateTime desc"
    display_name = "displayName"
    display_name_desc = "displayName desc"
    description = "description"
    description_desc = "description desc"
    state = "state"
    state_desc = "state desc"
    conditions = "conditions"
    conditions_desc = "conditions desc"
    grant_controls = "grantControls"
    grant_controls_desc = "grantControls desc"
    session_controls = "sessionControls"
    session_controls_desc = "sessionControls desc"

class Enum22(str, Enum):

    id = "id"
    created_date_time = "createdDateTime"
    modified_date_time = "modifiedDateTime"
    display_name = "displayName"
    description = "description"
    state = "state"
    conditions = "conditions"
    grant_controls = "grantControls"
    session_controls = "sessionControls"

class Enum23(str, Enum):

    id = "id"
    created_date_time = "createdDateTime"
    modified_date_time = "modifiedDateTime"
    display_name = "displayName"
    description = "description"
    state = "state"
    conditions = "conditions"
    grant_controls = "grantControls"
    session_controls = "sessionControls"

class Enum24(str, Enum):

    id = "id"
    id_desc = "id desc"
    deleted_date_time = "deletedDateTime"
    deleted_date_time_desc = "deletedDateTime desc"
    description = "description"
    description_desc = "description desc"
    display_name = "displayName"
    display_name_desc = "displayName desc"
    definition = "definition"
    definition_desc = "definition desc"
    is_organization_default = "isOrganizationDefault"
    is_organization_default_desc = "isOrganizationDefault desc"

class Enum25(str, Enum):

    id = "id"
    deleted_date_time = "deletedDateTime"
    description = "description"
    display_name = "displayName"
    definition = "definition"
    is_organization_default = "isOrganizationDefault"
    applies_to = "appliesTo"

class Enum26(str, Enum):

    asterisk = "*"
    applies_to = "appliesTo"

class Enum27(str, Enum):

    id = "id"
    deleted_date_time = "deletedDateTime"
    description = "description"
    display_name = "displayName"
    definition = "definition"
    is_organization_default = "isOrganizationDefault"
    applies_to = "appliesTo"

class Enum28(str, Enum):

    asterisk = "*"
    applies_to = "appliesTo"

class Enum29(str, Enum):

    id = "id"
    deleted_date_time = "deletedDateTime"
    description = "description"
    display_name = "displayName"
    is_enabled = "isEnabled"

class Enum30(str, Enum):

    id = "id"
    id_desc = "id desc"
    deleted_date_time = "deletedDateTime"
    deleted_date_time_desc = "deletedDateTime desc"
    description = "description"
    description_desc = "description desc"
    display_name = "displayName"
    display_name_desc = "displayName desc"
    definition = "definition"
    definition_desc = "definition desc"
    is_organization_default = "isOrganizationDefault"
    is_organization_default_desc = "isOrganizationDefault desc"

class Enum31(str, Enum):

    id = "id"
    deleted_date_time = "deletedDateTime"
    description = "description"
    display_name = "displayName"
    definition = "definition"
    is_organization_default = "isOrganizationDefault"
    applies_to = "appliesTo"

class Enum32(str, Enum):

    asterisk = "*"
    applies_to = "appliesTo"

class Enum33(str, Enum):

    id = "id"
    deleted_date_time = "deletedDateTime"
    description = "description"
    display_name = "displayName"
    definition = "definition"
    is_organization_default = "isOrganizationDefault"
    applies_to = "appliesTo"

class Enum34(str, Enum):

    asterisk = "*"
    applies_to = "appliesTo"

class Enum35(str, Enum):

    id = "id"
    id_desc = "id desc"
    deleted_date_time = "deletedDateTime"
    deleted_date_time_desc = "deletedDateTime desc"
    description = "description"
    description_desc = "description desc"
    display_name = "displayName"
    display_name_desc = "displayName desc"
    definition = "definition"
    definition_desc = "definition desc"
    is_organization_default = "isOrganizationDefault"
    is_organization_default_desc = "isOrganizationDefault desc"

class Enum36(str, Enum):

    id = "id"
    deleted_date_time = "deletedDateTime"
    description = "description"
    display_name = "displayName"
    definition = "definition"
    is_organization_default = "isOrganizationDefault"
    applies_to = "appliesTo"

class Enum37(str, Enum):

    asterisk = "*"
    applies_to = "appliesTo"

class Enum38(str, Enum):

    id = "id"
    deleted_date_time = "deletedDateTime"
    description = "description"
    display_name = "displayName"
    definition = "definition"
    is_organization_default = "isOrganizationDefault"
    applies_to = "appliesTo"

class Enum39(str, Enum):

    asterisk = "*"
    applies_to = "appliesTo"

class Get0ItemsItem(str, Enum):

    id = "id"
    activity_based_timeout_policies = "activityBasedTimeoutPolicies"
    claims_mapping_policies = "claimsMappingPolicies"
    home_realm_discovery_policies = "homeRealmDiscoveryPolicies"
    token_issuance_policies = "tokenIssuancePolicies"
    token_lifetime_policies = "tokenLifetimePolicies"
    admin_consent_request_policy = "adminConsentRequestPolicy"
    identity_security_defaults_enforcement_policy = "identitySecurityDefaultsEnforcementPolicy"
    conditional_access_policies = "conditionalAccessPolicies"

class Get1ItemsItem(str, Enum):

    asterisk = "*"
    activity_based_timeout_policies = "activityBasedTimeoutPolicies"
    claims_mapping_policies = "claimsMappingPolicies"
    home_realm_discovery_policies = "homeRealmDiscoveryPolicies"
    token_issuance_policies = "tokenIssuancePolicies"
    token_lifetime_policies = "tokenLifetimePolicies"
    admin_consent_request_policy = "adminConsentRequestPolicy"
    identity_security_defaults_enforcement_policy = "identitySecurityDefaultsEnforcementPolicy"
    conditional_access_policies = "conditionalAccessPolicies"

class Get2ItemsItem(str, Enum):

    asterisk = "*"
    applies_to = "appliesTo"

class Get5ItemsItem(str, Enum):

    id = "id"
    id_desc = "id desc"
    deleted_date_time = "deletedDateTime"
    deleted_date_time_desc = "deletedDateTime desc"
    description = "description"
    description_desc = "description desc"
    display_name = "displayName"
    display_name_desc = "displayName desc"
    definition = "definition"
    definition_desc = "definition desc"
    is_organization_default = "isOrganizationDefault"
    is_organization_default_desc = "isOrganizationDefault desc"

class Get6ItemsItem(str, Enum):

    id = "id"
    deleted_date_time = "deletedDateTime"
    description = "description"
    display_name = "displayName"
    definition = "definition"
    is_organization_default = "isOrganizationDefault"
    applies_to = "appliesTo"

class Get7ItemsItem(str, Enum):

    asterisk = "*"
    applies_to = "appliesTo"

class MicrosoftGraphCloudAppSecuritySessionControlType(str, Enum):
    """cloudAppSecuritySessionControlType
    """

    mcas_configured = "mcasConfigured"
    monitor_only = "monitorOnly"
    block_downloads = "blockDownloads"

class MicrosoftGraphConditionalAccessClientApp(str, Enum):
    """conditionalAccessClientApp
    """

    browser = "browser"
    modern = "modern"
    eas_supported = "easSupported"
    eas_unsupported = "easUnsupported"
    other = "other"

class MicrosoftGraphConditionalAccessDevicePlatform(str, Enum):
    """conditionalAccessDevicePlatform
    """

    android = "android"
    i_os = "iOS"
    windows = "windows"
    windows_phone = "windowsPhone"
    mac_os = "macOS"
    all = "all"

class MicrosoftGraphConditionalAccessGrantControl(str, Enum):
    """conditionalAccessGrantControl
    """

    block = "block"
    mfa = "mfa"
    compliant_device = "compliantDevice"
    domain_joined_device = "domainJoinedDevice"
    approved_application = "approvedApplication"
    compliant_application = "compliantApplication"

class MicrosoftGraphConditionalAccessPolicyState(str, Enum):
    """conditionalAccessPolicyState
    """

    enabled = "enabled"
    disabled = "disabled"
    enabled_for_reporting_but_not_enforced = "enabledForReportingButNotEnforced"

class MicrosoftGraphPersistentBrowserSessionMode(str, Enum):
    """persistentBrowserSessionMode
    """

    always = "always"
    never = "never"

class MicrosoftGraphRiskLevel(str, Enum):
    """riskLevel
    """

    low = "low"
    medium = "medium"
    high = "high"
    hidden = "hidden"
    none = "none"
    unknown_future_value = "unknownFutureValue"

class MicrosoftGraphSigninFrequencyType(str, Enum):
    """signinFrequencyType
    """

    days = "days"
    hours = "hours"
