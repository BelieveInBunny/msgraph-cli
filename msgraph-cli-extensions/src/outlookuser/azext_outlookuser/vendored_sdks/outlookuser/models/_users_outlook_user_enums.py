# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from enum import Enum

class Enum13(str, Enum):

    id = "id"
    display_name = "displayName"
    color = "color"

class Enum14(str, Enum):

    id = "id"
    id_desc = "id desc"
    change_key = "changeKey"
    change_key_desc = "changeKey desc"
    name = "name"
    name_desc = "name desc"
    is_default_folder = "isDefaultFolder"
    is_default_folder_desc = "isDefaultFolder desc"
    parent_group_key = "parentGroupKey"
    parent_group_key_desc = "parentGroupKey desc"

class Enum15(str, Enum):

    id = "id"
    change_key = "changeKey"
    name = "name"
    is_default_folder = "isDefaultFolder"
    parent_group_key = "parentGroupKey"
    tasks = "tasks"
    single_value_extended_properties = "singleValueExtendedProperties"
    multi_value_extended_properties = "multiValueExtendedProperties"

class Enum16(str, Enum):

    asterisk = "*"
    tasks = "tasks"
    single_value_extended_properties = "singleValueExtendedProperties"
    multi_value_extended_properties = "multiValueExtendedProperties"

class Enum17(str, Enum):

    id = "id"
    change_key = "changeKey"
    name = "name"
    is_default_folder = "isDefaultFolder"
    parent_group_key = "parentGroupKey"
    tasks = "tasks"
    single_value_extended_properties = "singleValueExtendedProperties"
    multi_value_extended_properties = "multiValueExtendedProperties"

class Enum18(str, Enum):

    asterisk = "*"
    tasks = "tasks"
    single_value_extended_properties = "singleValueExtendedProperties"
    multi_value_extended_properties = "multiValueExtendedProperties"

class Enum19(str, Enum):

    id = "id"
    id_desc = "id desc"
    value = "value"
    value_desc = "value desc"

class Enum20(str, Enum):

    id = "id"
    value = "value"

class Enum21(str, Enum):

    id = "id"
    value = "value"

class Enum22(str, Enum):

    id = "id"
    id_desc = "id desc"
    value = "value"
    value_desc = "value desc"

class Enum23(str, Enum):

    id = "id"
    value = "value"

class Enum24(str, Enum):

    id = "id"
    value = "value"

class Enum25(str, Enum):

    id = "id"
    id_desc = "id desc"
    created_date_time = "createdDateTime"
    created_date_time_desc = "createdDateTime desc"
    last_modified_date_time = "lastModifiedDateTime"
    last_modified_date_time_desc = "lastModifiedDateTime desc"
    change_key = "changeKey"
    change_key_desc = "changeKey desc"
    categories = "categories"
    categories_desc = "categories desc"
    assigned_to = "assignedTo"
    assigned_to_desc = "assignedTo desc"
    body = "body"
    body_desc = "body desc"
    completed_date_time = "completedDateTime"
    completed_date_time_desc = "completedDateTime desc"
    due_date_time = "dueDateTime"
    due_date_time_desc = "dueDateTime desc"
    has_attachments = "hasAttachments"
    has_attachments_desc = "hasAttachments desc"
    importance = "importance"
    importance_desc = "importance desc"
    is_reminder_on = "isReminderOn"
    is_reminder_on_desc = "isReminderOn desc"
    owner = "owner"
    owner_desc = "owner desc"
    parent_folder_id = "parentFolderId"
    parent_folder_id_desc = "parentFolderId desc"
    recurrence = "recurrence"
    recurrence_desc = "recurrence desc"
    reminder_date_time = "reminderDateTime"
    reminder_date_time_desc = "reminderDateTime desc"
    sensitivity = "sensitivity"
    sensitivity_desc = "sensitivity desc"
    start_date_time = "startDateTime"
    start_date_time_desc = "startDateTime desc"
    status = "status"
    status_desc = "status desc"
    subject = "subject"
    subject_desc = "subject desc"

class Enum26(str, Enum):

    id = "id"
    created_date_time = "createdDateTime"
    last_modified_date_time = "lastModifiedDateTime"
    change_key = "changeKey"
    categories = "categories"
    assigned_to = "assignedTo"
    body = "body"
    completed_date_time = "completedDateTime"
    due_date_time = "dueDateTime"
    has_attachments = "hasAttachments"
    importance = "importance"
    is_reminder_on = "isReminderOn"
    owner = "owner"
    parent_folder_id = "parentFolderId"
    recurrence = "recurrence"
    reminder_date_time = "reminderDateTime"
    sensitivity = "sensitivity"
    start_date_time = "startDateTime"
    status = "status"
    subject = "subject"
    single_value_extended_properties = "singleValueExtendedProperties"
    multi_value_extended_properties = "multiValueExtendedProperties"
    attachments = "attachments"

class Enum27(str, Enum):

    asterisk = "*"
    single_value_extended_properties = "singleValueExtendedProperties"
    multi_value_extended_properties = "multiValueExtendedProperties"
    attachments = "attachments"

class Enum28(str, Enum):

    id = "id"
    created_date_time = "createdDateTime"
    last_modified_date_time = "lastModifiedDateTime"
    change_key = "changeKey"
    categories = "categories"
    assigned_to = "assignedTo"
    body = "body"
    completed_date_time = "completedDateTime"
    due_date_time = "dueDateTime"
    has_attachments = "hasAttachments"
    importance = "importance"
    is_reminder_on = "isReminderOn"
    owner = "owner"
    parent_folder_id = "parentFolderId"
    recurrence = "recurrence"
    reminder_date_time = "reminderDateTime"
    sensitivity = "sensitivity"
    start_date_time = "startDateTime"
    status = "status"
    subject = "subject"
    single_value_extended_properties = "singleValueExtendedProperties"
    multi_value_extended_properties = "multiValueExtendedProperties"
    attachments = "attachments"

class Enum29(str, Enum):

    asterisk = "*"
    single_value_extended_properties = "singleValueExtendedProperties"
    multi_value_extended_properties = "multiValueExtendedProperties"
    attachments = "attachments"

class Enum30(str, Enum):

    id = "id"
    id_desc = "id desc"
    last_modified_date_time = "lastModifiedDateTime"
    last_modified_date_time_desc = "lastModifiedDateTime desc"
    name = "name"
    name_desc = "name desc"
    content_type = "contentType"
    content_type_desc = "contentType desc"
    size = "size"
    size_desc = "size desc"
    is_inline = "isInline"
    is_inline_desc = "isInline desc"

class Enum31(str, Enum):

    id = "id"
    last_modified_date_time = "lastModifiedDateTime"
    name = "name"
    content_type = "contentType"
    size = "size"
    is_inline = "isInline"

class Enum32(str, Enum):

    id = "id"
    last_modified_date_time = "lastModifiedDateTime"
    name = "name"
    content_type = "contentType"
    size = "size"
    is_inline = "isInline"

class Enum33(str, Enum):

    id = "id"
    id_desc = "id desc"
    value = "value"
    value_desc = "value desc"

class Enum34(str, Enum):

    id = "id"
    value = "value"

class Enum35(str, Enum):

    id = "id"
    value = "value"

class Enum36(str, Enum):

    id = "id"
    id_desc = "id desc"
    value = "value"
    value_desc = "value desc"

class Enum37(str, Enum):

    id = "id"
    value = "value"

class Enum38(str, Enum):

    id = "id"
    value = "value"

class Enum39(str, Enum):

    id = "id"
    id_desc = "id desc"
    change_key = "changeKey"
    change_key_desc = "changeKey desc"
    is_default_group = "isDefaultGroup"
    is_default_group_desc = "isDefaultGroup desc"
    name = "name"
    name_desc = "name desc"
    group_key = "groupKey"
    group_key_desc = "groupKey desc"

class Enum40(str, Enum):

    id = "id"
    change_key = "changeKey"
    is_default_group = "isDefaultGroup"
    name = "name"
    group_key = "groupKey"
    task_folders = "taskFolders"

class Enum41(str, Enum):

    asterisk = "*"
    task_folders = "taskFolders"

class Enum42(str, Enum):

    id = "id"
    change_key = "changeKey"
    is_default_group = "isDefaultGroup"
    name = "name"
    group_key = "groupKey"
    task_folders = "taskFolders"

class Enum43(str, Enum):

    asterisk = "*"
    task_folders = "taskFolders"

class Enum44(str, Enum):

    id = "id"
    id_desc = "id desc"
    change_key = "changeKey"
    change_key_desc = "changeKey desc"
    name = "name"
    name_desc = "name desc"
    is_default_folder = "isDefaultFolder"
    is_default_folder_desc = "isDefaultFolder desc"
    parent_group_key = "parentGroupKey"
    parent_group_key_desc = "parentGroupKey desc"

class Enum45(str, Enum):

    id = "id"
    change_key = "changeKey"
    name = "name"
    is_default_folder = "isDefaultFolder"
    parent_group_key = "parentGroupKey"
    tasks = "tasks"
    single_value_extended_properties = "singleValueExtendedProperties"
    multi_value_extended_properties = "multiValueExtendedProperties"

class Enum46(str, Enum):

    asterisk = "*"
    tasks = "tasks"
    single_value_extended_properties = "singleValueExtendedProperties"
    multi_value_extended_properties = "multiValueExtendedProperties"

class Enum47(str, Enum):

    id = "id"
    change_key = "changeKey"
    name = "name"
    is_default_folder = "isDefaultFolder"
    parent_group_key = "parentGroupKey"
    tasks = "tasks"
    single_value_extended_properties = "singleValueExtendedProperties"
    multi_value_extended_properties = "multiValueExtendedProperties"

class Enum48(str, Enum):

    asterisk = "*"
    tasks = "tasks"
    single_value_extended_properties = "singleValueExtendedProperties"
    multi_value_extended_properties = "multiValueExtendedProperties"

class Enum49(str, Enum):

    id = "id"
    id_desc = "id desc"
    value = "value"
    value_desc = "value desc"

class Enum50(str, Enum):

    id = "id"
    value = "value"

class Enum51(str, Enum):

    id = "id"
    value = "value"

class Enum52(str, Enum):

    id = "id"
    id_desc = "id desc"
    value = "value"
    value_desc = "value desc"

class Enum53(str, Enum):

    id = "id"
    value = "value"

class Enum54(str, Enum):

    id = "id"
    value = "value"

class Enum55(str, Enum):

    id = "id"
    id_desc = "id desc"
    created_date_time = "createdDateTime"
    created_date_time_desc = "createdDateTime desc"
    last_modified_date_time = "lastModifiedDateTime"
    last_modified_date_time_desc = "lastModifiedDateTime desc"
    change_key = "changeKey"
    change_key_desc = "changeKey desc"
    categories = "categories"
    categories_desc = "categories desc"
    assigned_to = "assignedTo"
    assigned_to_desc = "assignedTo desc"
    body = "body"
    body_desc = "body desc"
    completed_date_time = "completedDateTime"
    completed_date_time_desc = "completedDateTime desc"
    due_date_time = "dueDateTime"
    due_date_time_desc = "dueDateTime desc"
    has_attachments = "hasAttachments"
    has_attachments_desc = "hasAttachments desc"
    importance = "importance"
    importance_desc = "importance desc"
    is_reminder_on = "isReminderOn"
    is_reminder_on_desc = "isReminderOn desc"
    owner = "owner"
    owner_desc = "owner desc"
    parent_folder_id = "parentFolderId"
    parent_folder_id_desc = "parentFolderId desc"
    recurrence = "recurrence"
    recurrence_desc = "recurrence desc"
    reminder_date_time = "reminderDateTime"
    reminder_date_time_desc = "reminderDateTime desc"
    sensitivity = "sensitivity"
    sensitivity_desc = "sensitivity desc"
    start_date_time = "startDateTime"
    start_date_time_desc = "startDateTime desc"
    status = "status"
    status_desc = "status desc"
    subject = "subject"
    subject_desc = "subject desc"

class Enum56(str, Enum):

    id = "id"
    created_date_time = "createdDateTime"
    last_modified_date_time = "lastModifiedDateTime"
    change_key = "changeKey"
    categories = "categories"
    assigned_to = "assignedTo"
    body = "body"
    completed_date_time = "completedDateTime"
    due_date_time = "dueDateTime"
    has_attachments = "hasAttachments"
    importance = "importance"
    is_reminder_on = "isReminderOn"
    owner = "owner"
    parent_folder_id = "parentFolderId"
    recurrence = "recurrence"
    reminder_date_time = "reminderDateTime"
    sensitivity = "sensitivity"
    start_date_time = "startDateTime"
    status = "status"
    subject = "subject"
    single_value_extended_properties = "singleValueExtendedProperties"
    multi_value_extended_properties = "multiValueExtendedProperties"
    attachments = "attachments"

class Enum57(str, Enum):

    asterisk = "*"
    single_value_extended_properties = "singleValueExtendedProperties"
    multi_value_extended_properties = "multiValueExtendedProperties"
    attachments = "attachments"

class Enum58(str, Enum):

    id = "id"
    created_date_time = "createdDateTime"
    last_modified_date_time = "lastModifiedDateTime"
    change_key = "changeKey"
    categories = "categories"
    assigned_to = "assignedTo"
    body = "body"
    completed_date_time = "completedDateTime"
    due_date_time = "dueDateTime"
    has_attachments = "hasAttachments"
    importance = "importance"
    is_reminder_on = "isReminderOn"
    owner = "owner"
    parent_folder_id = "parentFolderId"
    recurrence = "recurrence"
    reminder_date_time = "reminderDateTime"
    sensitivity = "sensitivity"
    start_date_time = "startDateTime"
    status = "status"
    subject = "subject"
    single_value_extended_properties = "singleValueExtendedProperties"
    multi_value_extended_properties = "multiValueExtendedProperties"
    attachments = "attachments"

class Enum59(str, Enum):

    asterisk = "*"
    single_value_extended_properties = "singleValueExtendedProperties"
    multi_value_extended_properties = "multiValueExtendedProperties"
    attachments = "attachments"

class Enum60(str, Enum):

    id = "id"
    id_desc = "id desc"
    last_modified_date_time = "lastModifiedDateTime"
    last_modified_date_time_desc = "lastModifiedDateTime desc"
    name = "name"
    name_desc = "name desc"
    content_type = "contentType"
    content_type_desc = "contentType desc"
    size = "size"
    size_desc = "size desc"
    is_inline = "isInline"
    is_inline_desc = "isInline desc"

class Enum61(str, Enum):

    id = "id"
    last_modified_date_time = "lastModifiedDateTime"
    name = "name"
    content_type = "contentType"
    size = "size"
    is_inline = "isInline"

class Enum62(str, Enum):

    id = "id"
    last_modified_date_time = "lastModifiedDateTime"
    name = "name"
    content_type = "contentType"
    size = "size"
    is_inline = "isInline"

class Enum63(str, Enum):

    id = "id"
    id_desc = "id desc"
    value = "value"
    value_desc = "value desc"

class Enum64(str, Enum):

    id = "id"
    value = "value"

class Enum65(str, Enum):

    id = "id"
    value = "value"

class Enum66(str, Enum):

    id = "id"
    id_desc = "id desc"
    value = "value"
    value_desc = "value desc"

class Enum67(str, Enum):

    id = "id"
    value = "value"

class Enum68(str, Enum):

    id = "id"
    value = "value"

class Enum69(str, Enum):

    id = "id"
    id_desc = "id desc"
    created_date_time = "createdDateTime"
    created_date_time_desc = "createdDateTime desc"
    last_modified_date_time = "lastModifiedDateTime"
    last_modified_date_time_desc = "lastModifiedDateTime desc"
    change_key = "changeKey"
    change_key_desc = "changeKey desc"
    categories = "categories"
    categories_desc = "categories desc"
    assigned_to = "assignedTo"
    assigned_to_desc = "assignedTo desc"
    body = "body"
    body_desc = "body desc"
    completed_date_time = "completedDateTime"
    completed_date_time_desc = "completedDateTime desc"
    due_date_time = "dueDateTime"
    due_date_time_desc = "dueDateTime desc"
    has_attachments = "hasAttachments"
    has_attachments_desc = "hasAttachments desc"
    importance = "importance"
    importance_desc = "importance desc"
    is_reminder_on = "isReminderOn"
    is_reminder_on_desc = "isReminderOn desc"
    owner = "owner"
    owner_desc = "owner desc"
    parent_folder_id = "parentFolderId"
    parent_folder_id_desc = "parentFolderId desc"
    recurrence = "recurrence"
    recurrence_desc = "recurrence desc"
    reminder_date_time = "reminderDateTime"
    reminder_date_time_desc = "reminderDateTime desc"
    sensitivity = "sensitivity"
    sensitivity_desc = "sensitivity desc"
    start_date_time = "startDateTime"
    start_date_time_desc = "startDateTime desc"
    status = "status"
    status_desc = "status desc"
    subject = "subject"
    subject_desc = "subject desc"

class Enum70(str, Enum):

    id = "id"
    created_date_time = "createdDateTime"
    last_modified_date_time = "lastModifiedDateTime"
    change_key = "changeKey"
    categories = "categories"
    assigned_to = "assignedTo"
    body = "body"
    completed_date_time = "completedDateTime"
    due_date_time = "dueDateTime"
    has_attachments = "hasAttachments"
    importance = "importance"
    is_reminder_on = "isReminderOn"
    owner = "owner"
    parent_folder_id = "parentFolderId"
    recurrence = "recurrence"
    reminder_date_time = "reminderDateTime"
    sensitivity = "sensitivity"
    start_date_time = "startDateTime"
    status = "status"
    subject = "subject"
    single_value_extended_properties = "singleValueExtendedProperties"
    multi_value_extended_properties = "multiValueExtendedProperties"
    attachments = "attachments"

class Enum71(str, Enum):

    asterisk = "*"
    single_value_extended_properties = "singleValueExtendedProperties"
    multi_value_extended_properties = "multiValueExtendedProperties"
    attachments = "attachments"

class Enum72(str, Enum):

    id = "id"
    created_date_time = "createdDateTime"
    last_modified_date_time = "lastModifiedDateTime"
    change_key = "changeKey"
    categories = "categories"
    assigned_to = "assignedTo"
    body = "body"
    completed_date_time = "completedDateTime"
    due_date_time = "dueDateTime"
    has_attachments = "hasAttachments"
    importance = "importance"
    is_reminder_on = "isReminderOn"
    owner = "owner"
    parent_folder_id = "parentFolderId"
    recurrence = "recurrence"
    reminder_date_time = "reminderDateTime"
    sensitivity = "sensitivity"
    start_date_time = "startDateTime"
    status = "status"
    subject = "subject"
    single_value_extended_properties = "singleValueExtendedProperties"
    multi_value_extended_properties = "multiValueExtendedProperties"
    attachments = "attachments"

class Enum73(str, Enum):

    asterisk = "*"
    single_value_extended_properties = "singleValueExtendedProperties"
    multi_value_extended_properties = "multiValueExtendedProperties"
    attachments = "attachments"

class Enum74(str, Enum):

    id = "id"
    id_desc = "id desc"
    last_modified_date_time = "lastModifiedDateTime"
    last_modified_date_time_desc = "lastModifiedDateTime desc"
    name = "name"
    name_desc = "name desc"
    content_type = "contentType"
    content_type_desc = "contentType desc"
    size = "size"
    size_desc = "size desc"
    is_inline = "isInline"
    is_inline_desc = "isInline desc"

class Enum75(str, Enum):

    id = "id"
    last_modified_date_time = "lastModifiedDateTime"
    name = "name"
    content_type = "contentType"
    size = "size"
    is_inline = "isInline"

class Enum76(str, Enum):

    id = "id"
    last_modified_date_time = "lastModifiedDateTime"
    name = "name"
    content_type = "contentType"
    size = "size"
    is_inline = "isInline"

class Enum77(str, Enum):

    id = "id"
    id_desc = "id desc"
    value = "value"
    value_desc = "value desc"

class Enum78(str, Enum):

    id = "id"
    value = "value"

class Enum79(str, Enum):

    id = "id"
    value = "value"

class Enum80(str, Enum):

    id = "id"
    id_desc = "id desc"
    value = "value"
    value_desc = "value desc"

class Enum81(str, Enum):

    id = "id"
    value = "value"

class Enum82(str, Enum):

    id = "id"
    value = "value"

class Get1ItemsItem(str, Enum):

    id = "id"
    master_categories = "masterCategories"
    task_groups = "taskGroups"
    task_folders = "taskFolders"
    tasks = "tasks"

class Get2ItemsItem(str, Enum):

    asterisk = "*"
    master_categories = "masterCategories"
    task_groups = "taskGroups"
    task_folders = "taskFolders"
    tasks = "tasks"

class Get6ItemsItem(str, Enum):

    id = "id"
    id_desc = "id desc"
    display_name = "displayName"
    display_name_desc = "displayName desc"
    color = "color"
    color_desc = "color desc"

class Get7ItemsItem(str, Enum):

    id = "id"
    display_name = "displayName"
    color = "color"

class MicrosoftGraphBodyType(str, Enum):
    """bodyType
    """

    text = "text"
    html = "html"

class MicrosoftGraphCategoryColor(str, Enum):
    """categoryColor
    """

    preset0 = "preset0"
    preset1 = "preset1"
    preset2 = "preset2"
    preset3 = "preset3"
    preset4 = "preset4"
    preset5 = "preset5"
    preset6 = "preset6"
    preset7 = "preset7"
    preset8 = "preset8"
    preset9 = "preset9"
    preset10 = "preset10"
    preset11 = "preset11"
    preset12 = "preset12"
    preset13 = "preset13"
    preset14 = "preset14"
    preset15 = "preset15"
    preset16 = "preset16"
    preset17 = "preset17"
    preset18 = "preset18"
    preset19 = "preset19"
    preset20 = "preset20"
    preset21 = "preset21"
    preset22 = "preset22"
    preset23 = "preset23"
    preset24 = "preset24"
    none = "none"

class MicrosoftGraphDayOfWeek(str, Enum):
    """dayOfWeek
    """

    sunday = "sunday"
    monday = "monday"
    tuesday = "tuesday"
    wednesday = "wednesday"
    thursday = "thursday"
    friday = "friday"
    saturday = "saturday"

class MicrosoftGraphImportance(str, Enum):
    """importance
    """

    low = "low"
    normal = "normal"
    high = "high"

class MicrosoftGraphRecurrencePatternType(str, Enum):
    """recurrencePatternType
    """

    daily = "daily"
    weekly = "weekly"
    absolute_monthly = "absoluteMonthly"
    relative_monthly = "relativeMonthly"
    absolute_yearly = "absoluteYearly"
    relative_yearly = "relativeYearly"

class MicrosoftGraphRecurrenceRangeType(str, Enum):
    """recurrenceRangeType
    """

    end_date = "endDate"
    no_end = "noEnd"
    numbered = "numbered"

class MicrosoftGraphSensitivity(str, Enum):
    """sensitivity
    """

    normal = "normal"
    personal = "personal"
    private = "private"
    confidential = "confidential"

class MicrosoftGraphTaskStatus(str, Enum):
    """taskStatus
    """

    not_started = "notStarted"
    in_progress = "inProgress"
    completed = "completed"
    waiting_on_others = "waitingOnOthers"
    deferred = "deferred"

class MicrosoftGraphWeekIndex(str, Enum):
    """weekIndex
    """

    first = "first"
    second = "second"
    third = "third"
    fourth = "fourth"
    last = "last"
