# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=too-many-statements
# pylint: disable=too-many-locals

from msgraph.cli.core.commands import CliCommandType


def load_command_table(self, _):

    from azext_conversation.generated._client_factory import cf_group
    conversation_group = CliCommandType(
        operations_tmpl='azext_conversation.vendored_sdks.conversation.operations._group_operations#GroupOperations.{}',
        client_factory=cf_group)
    with self.command_group('conversation group', conversation_group, client_factory=cf_group,
                            is_experimental=True) as g:
        g.custom_command('update', 'conversation_group_update')
        g.custom_command('create-conversation', 'conversation_group_create_conversation')
        g.custom_command('get-conversation', 'conversation_group_get_conversation')
        g.custom_command('list-conversation', 'conversation_group_list_conversation')

    from azext_conversation.generated._client_factory import cf_group_conversation
    conversation_group_conversation = CliCommandType(
        operations_tmpl='azext_conversation.vendored_sdks.conversation.operations._group_conversation_operations#GroupC'
        'onversationOperations.{}',
        client_factory=cf_group_conversation)
    with self.command_group('conversation group-conversation', conversation_group_conversation,
                            client_factory=cf_group_conversation, is_experimental=True) as g:
        g.custom_command('update', 'conversation_group_conversation_update')
        g.custom_command('create-thread', 'conversation_group_conversation_create_thread')
        g.custom_command('get-thread', 'conversation_group_conversation_get_thread')
        g.custom_command('list-thread', 'conversation_group_conversation_list_thread')

    from azext_conversation.generated._client_factory import cf_group_conversation_thread
    conversation_group_conversation_thread = CliCommandType(
        operations_tmpl='azext_conversation.vendored_sdks.conversation.operations._group_conversation_thread_operations'
        '#GroupConversationThreadOperations.{}',
        client_factory=cf_group_conversation_thread)
    with self.command_group('conversation group-conversation-thread', conversation_group_conversation_thread,
                            client_factory=cf_group_conversation_thread, is_experimental=True) as g:
        g.custom_command('update', 'conversation_group_conversation_thread_update')
        g.custom_command('create-post', 'conversation_group_conversation_thread_create_post')
        g.custom_command('get-post', 'conversation_group_conversation_thread_get_post')
        g.custom_command('list-post', 'conversation_group_conversation_thread_list_post')

    from azext_conversation.generated._client_factory import cf_group_conversation_thread_post
    conversation_group_conversation_thread_post = CliCommandType(
        operations_tmpl='azext_conversation.vendored_sdks.conversation.operations._group_conversation_thread_post_opera'
        'tions#GroupConversationThreadPostOperations.{}',
        client_factory=cf_group_conversation_thread_post)
    with self.command_group('conversation group-conversation-thread-post', conversation_group_conversation_thread_post,
                             client_factory=cf_group_conversation_thread_post, is_experimental=True) as g:
        g.custom_command('update', 'conversation_group_conversation_thread_post_update')
        g.custom_command('create-attachment', 'conversation_group_conversation_thread_post_create_attachment')
        g.custom_command('create-extension', 'conversation_group_conversation_thread_post_create_extension')
        g.custom_command('create-mention', 'conversation_group_conversation_thread_post_create_mention')
        g.custom_command('create-multi-value-extended-property', 'conversation_group_conversation_thread_post_create_mu'
                         'lti_value_extended_property')
        g.custom_command('create-single-value-extended-property', 'conversation_group_conversation_thread_post_create_s'
                         'ingle_value_extended_property')
        g.custom_command('get-attachment', 'conversation_group_conversation_thread_post_get_attachment')
        g.custom_command('get-extension', 'conversation_group_conversation_thread_post_get_extension')
        g.custom_command('get-in-reply-to', 'conversation_group_conversation_thread_post_get_in_reply_to')
        g.custom_command('get-mention', 'conversation_group_conversation_thread_post_get_mention')
        g.custom_command('get-multi-value-extended-property', 'conversation_group_conversation_thread_post_get_multi_va'
                         'lue_extended_property')
        g.custom_command('get-single-value-extended-property', 'conversation_group_conversation_thread_post_get_single_'
                         'value_extended_property')
        g.custom_command('list-attachment', 'conversation_group_conversation_thread_post_list_attachment')
        g.custom_command('list-extension', 'conversation_group_conversation_thread_post_list_extension')
        g.custom_command('list-mention', 'conversation_group_conversation_thread_post_list_mention')
        g.custom_command('list-multi-value-extended-property', 'conversation_group_conversation_thread_post_list_multi_'
                         'value_extended_property')
        g.custom_command('list-single-value-extended-property', 'conversation_group_conversation_thread_post_list_singl'
                         'e_value_extended_property')
