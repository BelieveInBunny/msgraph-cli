# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from enum import Enum

class Enum10(str, Enum):

    id = "id"
    to_recipients = "toRecipients"
    topic = "topic"
    has_attachments = "hasAttachments"
    last_delivered_date_time = "lastDeliveredDateTime"
    unique_senders = "uniqueSenders"
    cc_recipients = "ccRecipients"
    preview = "preview"
    is_locked = "isLocked"
    posts = "posts"

class Enum12(str, Enum):

    id = "id"
    id_desc = "id desc"
    created_date_time = "createdDateTime"
    created_date_time_desc = "createdDateTime desc"
    last_modified_date_time = "lastModifiedDateTime"
    last_modified_date_time_desc = "lastModifiedDateTime desc"
    change_key = "changeKey"
    change_key_desc = "changeKey desc"
    categories = "categories"
    categories_desc = "categories desc"
    body = "body"
    body_desc = "body desc"
    received_date_time = "receivedDateTime"
    received_date_time_desc = "receivedDateTime desc"
    has_attachments = "hasAttachments"
    has_attachments_desc = "hasAttachments desc"
    from_enum = "from"
    from_desc = "from desc"
    sender = "sender"
    sender_desc = "sender desc"
    conversation_thread_id = "conversationThreadId"
    conversation_thread_id_desc = "conversationThreadId desc"
    new_participants = "newParticipants"
    new_participants_desc = "newParticipants desc"
    conversation_id = "conversationId"
    conversation_id_desc = "conversationId desc"
    importance = "importance"
    importance_desc = "importance desc"

class Enum13(str, Enum):

    id = "id"
    created_date_time = "createdDateTime"
    last_modified_date_time = "lastModifiedDateTime"
    change_key = "changeKey"
    categories = "categories"
    body = "body"
    received_date_time = "receivedDateTime"
    has_attachments = "hasAttachments"
    from_enum = "from"
    sender = "sender"
    conversation_thread_id = "conversationThreadId"
    new_participants = "newParticipants"
    conversation_id = "conversationId"
    importance = "importance"
    in_reply_to = "inReplyTo"
    single_value_extended_properties = "singleValueExtendedProperties"
    multi_value_extended_properties = "multiValueExtendedProperties"
    extensions = "extensions"
    attachments = "attachments"
    mentions = "mentions"

class Enum15(str, Enum):

    id = "id"
    created_date_time = "createdDateTime"
    last_modified_date_time = "lastModifiedDateTime"
    change_key = "changeKey"
    categories = "categories"
    body = "body"
    received_date_time = "receivedDateTime"
    has_attachments = "hasAttachments"
    from_enum = "from"
    sender = "sender"
    conversation_thread_id = "conversationThreadId"
    new_participants = "newParticipants"
    conversation_id = "conversationId"
    importance = "importance"
    in_reply_to = "inReplyTo"
    single_value_extended_properties = "singleValueExtendedProperties"
    multi_value_extended_properties = "multiValueExtendedProperties"
    extensions = "extensions"
    attachments = "attachments"
    mentions = "mentions"

class Enum17(str, Enum):

    id = "id"
    id_desc = "id desc"
    last_modified_date_time = "lastModifiedDateTime"
    last_modified_date_time_desc = "lastModifiedDateTime desc"
    name = "name"
    name_desc = "name desc"
    content_type = "contentType"
    content_type_desc = "contentType desc"
    size = "size"
    size_desc = "size desc"
    is_inline = "isInline"
    is_inline_desc = "isInline desc"

class Enum18(str, Enum):

    id = "id"
    last_modified_date_time = "lastModifiedDateTime"
    name = "name"
    content_type = "contentType"
    size = "size"
    is_inline = "isInline"

class Enum19(str, Enum):

    id = "id"
    last_modified_date_time = "lastModifiedDateTime"
    name = "name"
    content_type = "contentType"
    size = "size"
    is_inline = "isInline"

class Enum20(str, Enum):

    id = "id"
    id_desc = "id desc"

class Enum21(str, Enum):

    id = "id"
    created_date_time = "createdDateTime"
    last_modified_date_time = "lastModifiedDateTime"
    change_key = "changeKey"
    categories = "categories"
    body = "body"
    received_date_time = "receivedDateTime"
    has_attachments = "hasAttachments"
    from_enum = "from"
    sender = "sender"
    conversation_thread_id = "conversationThreadId"
    new_participants = "newParticipants"
    conversation_id = "conversationId"
    importance = "importance"
    in_reply_to = "inReplyTo"
    single_value_extended_properties = "singleValueExtendedProperties"
    multi_value_extended_properties = "multiValueExtendedProperties"
    extensions = "extensions"
    attachments = "attachments"
    mentions = "mentions"

class Enum22(str, Enum):

    asterisk = "*"
    in_reply_to = "inReplyTo"
    single_value_extended_properties = "singleValueExtendedProperties"
    multi_value_extended_properties = "multiValueExtendedProperties"
    extensions = "extensions"
    attachments = "attachments"
    mentions = "mentions"

class Enum23(str, Enum):

    id = "id"
    id_desc = "id desc"
    mentioned = "mentioned"
    mentioned_desc = "mentioned desc"
    mention_text = "mentionText"
    mention_text_desc = "mentionText desc"
    client_reference = "clientReference"
    client_reference_desc = "clientReference desc"
    created_by = "createdBy"
    created_by_desc = "createdBy desc"
    created_date_time = "createdDateTime"
    created_date_time_desc = "createdDateTime desc"
    server_created_date_time = "serverCreatedDateTime"
    server_created_date_time_desc = "serverCreatedDateTime desc"
    deep_link = "deepLink"
    deep_link_desc = "deepLink desc"
    application = "application"
    application_desc = "application desc"

class Enum24(str, Enum):

    id = "id"
    mentioned = "mentioned"
    mention_text = "mentionText"
    client_reference = "clientReference"
    created_by = "createdBy"
    created_date_time = "createdDateTime"
    server_created_date_time = "serverCreatedDateTime"
    deep_link = "deepLink"
    application = "application"

class Enum25(str, Enum):

    id = "id"
    mentioned = "mentioned"
    mention_text = "mentionText"
    client_reference = "clientReference"
    created_by = "createdBy"
    created_date_time = "createdDateTime"
    server_created_date_time = "serverCreatedDateTime"
    deep_link = "deepLink"
    application = "application"

class Enum26(str, Enum):

    id = "id"
    id_desc = "id desc"
    value = "value"
    value_desc = "value desc"

class Enum27(str, Enum):

    id = "id"
    value = "value"

class Enum28(str, Enum):

    id = "id"
    value = "value"

class Enum29(str, Enum):

    id = "id"
    id_desc = "id desc"
    value = "value"
    value_desc = "value desc"

class Enum30(str, Enum):

    id = "id"
    value = "value"

class Enum31(str, Enum):

    id = "id"
    value = "value"

class Enum7(str, Enum):

    id = "id"
    id_desc = "id desc"
    to_recipients = "toRecipients"
    to_recipients_desc = "toRecipients desc"
    topic = "topic"
    topic_desc = "topic desc"
    has_attachments = "hasAttachments"
    has_attachments_desc = "hasAttachments desc"
    last_delivered_date_time = "lastDeliveredDateTime"
    last_delivered_date_time_desc = "lastDeliveredDateTime desc"
    unique_senders = "uniqueSenders"
    unique_senders_desc = "uniqueSenders desc"
    cc_recipients = "ccRecipients"
    cc_recipients_desc = "ccRecipients desc"
    preview = "preview"
    preview_desc = "preview desc"
    is_locked = "isLocked"
    is_locked_desc = "isLocked desc"

class Enum8(str, Enum):

    id = "id"
    to_recipients = "toRecipients"
    topic = "topic"
    has_attachments = "hasAttachments"
    last_delivered_date_time = "lastDeliveredDateTime"
    unique_senders = "uniqueSenders"
    cc_recipients = "ccRecipients"
    preview = "preview"
    is_locked = "isLocked"
    posts = "posts"

class Get10ItemsItem(str, Enum):

    asterisk = "*"
    in_reply_to = "inReplyTo"
    single_value_extended_properties = "singleValueExtendedProperties"
    multi_value_extended_properties = "multiValueExtendedProperties"
    extensions = "extensions"
    attachments = "attachments"
    mentions = "mentions"

class Get2ItemsItem(str, Enum):

    id = "id"
    topic = "topic"
    has_attachments = "hasAttachments"
    last_delivered_date_time = "lastDeliveredDateTime"
    unique_senders = "uniqueSenders"
    preview = "preview"
    threads = "threads"

class Get3ItemsItem(str, Enum):

    asterisk = "*"
    threads = "threads"

class Get4ItemsItem(str, Enum):

    asterisk = "*"
    posts = "posts"

class Get5ItemsItem(str, Enum):

    asterisk = "*"
    in_reply_to = "inReplyTo"
    single_value_extended_properties = "singleValueExtendedProperties"
    multi_value_extended_properties = "multiValueExtendedProperties"
    extensions = "extensions"
    attachments = "attachments"
    mentions = "mentions"

class Get6ItemsItem(str, Enum):

    id = "id"
    id_desc = "id desc"
    topic = "topic"
    topic_desc = "topic desc"
    has_attachments = "hasAttachments"
    has_attachments_desc = "hasAttachments desc"
    last_delivered_date_time = "lastDeliveredDateTime"
    last_delivered_date_time_desc = "lastDeliveredDateTime desc"
    unique_senders = "uniqueSenders"
    unique_senders_desc = "uniqueSenders desc"
    preview = "preview"
    preview_desc = "preview desc"

class Get7ItemsItem(str, Enum):

    id = "id"
    topic = "topic"
    has_attachments = "hasAttachments"
    last_delivered_date_time = "lastDeliveredDateTime"
    unique_senders = "uniqueSenders"
    preview = "preview"
    threads = "threads"

class Get8ItemsItem(str, Enum):

    asterisk = "*"
    threads = "threads"

class Get9ItemsItem(str, Enum):

    asterisk = "*"
    posts = "posts"

class MicrosoftGraphBodyType(str, Enum):
    """bodyType
    """

    text = "text"
    html = "html"

class MicrosoftGraphImportance(str, Enum):
    """importance
    """

    low = "low"
    normal = "normal"
    high = "high"
