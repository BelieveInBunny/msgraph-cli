# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from typing import TYPE_CHECKING

from azure.mgmt.core import ARMPipelineClient
from msrest import Deserializer, Serializer

if TYPE_CHECKING:
    # pylint: disable=unused-import,ungrouped-imports
    from typing import Any, Optional

    from azure.core.credentials import TokenCredential

from ._configuration import FilesSharesConfiguration
from .operations import ShareSharedDriveItemOperations
from .operations import ShareOperations
from .operations import ShareListOperations
from .operations import ShareListActivityOperations
from .operations import ShareListActivityListItemOperations
from .operations import ShareListActivityListItemVersionOperations
from .operations import ShareListContentTypeOperations
from .operations import ShareListItemOperations
from .operations import ShareListItemActivityOperations
from .operations import ShareListItemActivityListItemOperations
from .operations import ShareListItemVersionOperations
from .operations import ShareListItemOperations
from .operations import ShareListItemActivityOperations
from .operations import ShareListItemActivityListItemOperations
from .operations import ShareListItemVersionOperations
from .operations import SharePermissionOperations
from . import models


class FilesShares(object):
    """FilesShares.

    :ivar share_shared_drive_item: ShareSharedDriveItemOperations operations
    :vartype share_shared_drive_item: files_shares.operations.ShareSharedDriveItemOperations
    :ivar share: ShareOperations operations
    :vartype share: files_shares.operations.ShareOperations
    :ivar share_list: ShareListOperations operations
    :vartype share_list: files_shares.operations.ShareListOperations
    :ivar share_list_activity: ShareListActivityOperations operations
    :vartype share_list_activity: files_shares.operations.ShareListActivityOperations
    :ivar share_list_activity_list_item: ShareListActivityListItemOperations operations
    :vartype share_list_activity_list_item: files_shares.operations.ShareListActivityListItemOperations
    :ivar share_list_activity_list_item_version: ShareListActivityListItemVersionOperations operations
    :vartype share_list_activity_list_item_version: files_shares.operations.ShareListActivityListItemVersionOperations
    :ivar share_list_content_type: ShareListContentTypeOperations operations
    :vartype share_list_content_type: files_shares.operations.ShareListContentTypeOperations
    :ivar share_list_item: ShareListItemOperations operations
    :vartype share_list_item: files_shares.operations.ShareListItemOperations
    :ivar share_list_item_activity: ShareListItemActivityOperations operations
    :vartype share_list_item_activity: files_shares.operations.ShareListItemActivityOperations
    :ivar share_list_item_activity_list_item: ShareListItemActivityListItemOperations operations
    :vartype share_list_item_activity_list_item: files_shares.operations.ShareListItemActivityListItemOperations
    :ivar share_list_item_version: ShareListItemVersionOperations operations
    :vartype share_list_item_version: files_shares.operations.ShareListItemVersionOperations
    :ivar share_list_item: ShareListItemOperations operations
    :vartype share_list_item: files_shares.operations.ShareListItemOperations
    :ivar share_list_item_activity: ShareListItemActivityOperations operations
    :vartype share_list_item_activity: files_shares.operations.ShareListItemActivityOperations
    :ivar share_list_item_activity_list_item: ShareListItemActivityListItemOperations operations
    :vartype share_list_item_activity_list_item: files_shares.operations.ShareListItemActivityListItemOperations
    :ivar share_list_item_version: ShareListItemVersionOperations operations
    :vartype share_list_item_version: files_shares.operations.ShareListItemVersionOperations
    :ivar share_permission: SharePermissionOperations operations
    :vartype share_permission: files_shares.operations.SharePermissionOperations
    :param credential: Credential needed for the client to connect to Azure.
    :type credential: ~azure.core.credentials.TokenCredential
    :param top: Show only the first n items.
    :type top: int
    :param skip: Skip the first n items.
    :type skip: int
    :param search: Search items by search phrases.
    :type search: str
    :param filter: Filter items by property values.
    :type filter: str
    :param count: Include count of items.
    :type count: bool
    :param str base_url: Service URL
    :keyword int polling_interval: Default waiting time between two polls for LRO operations if no Retry-After header is present.
    """

    def __init__(
        self,
        credential,  # type: "TokenCredential"
        top=None,  # type: Optional[int]
        skip=None,  # type: Optional[int]
        search=None,  # type: Optional[str]
        filter=None,  # type: Optional[str]
        count=None,  # type: Optional[bool]
        base_url=None,  # type: Optional[str]
        **kwargs  # type: Any
    ):
        # type: (...) -> None
        if not base_url:
            base_url = 'https://graph.microsoft.com/beta'
        self._config = FilesSharesConfiguration(credential, top, skip, search, filter, count, **kwargs)
        self._client = ARMPipelineClient(base_url=base_url, config=self._config, **kwargs)

        client_models = {k: v for k, v in models.__dict__.items() if isinstance(v, type)}
        self._serialize = Serializer(client_models)
        self._deserialize = Deserializer(client_models)

        self.share_shared_drive_item = ShareSharedDriveItemOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.share = ShareOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.share_list = ShareListOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.share_list_activity = ShareListActivityOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.share_list_activity_list_item = ShareListActivityListItemOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.share_list_activity_list_item_version = ShareListActivityListItemVersionOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.share_list_content_type = ShareListContentTypeOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.share_list_item = ShareListItemOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.share_list_item_activity = ShareListItemActivityOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.share_list_item_activity_list_item = ShareListItemActivityListItemOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.share_list_item_version = ShareListItemVersionOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.share_list_item = ShareListItemOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.share_list_item_activity = ShareListItemActivityOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.share_list_item_activity_list_item = ShareListItemActivityListItemOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.share_list_item_version = ShareListItemVersionOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.share_permission = SharePermissionOperations(
            self._client, self._config, self._serialize, self._deserialize)

    def close(self):
        # type: () -> None
        self._client.close()

    def __enter__(self):
        # type: () -> FilesShares
        self._client.__enter__()
        return self

    def __exit__(self, *exc_details):
        # type: (Any) -> None
        self._client.__exit__(*exc_details)
