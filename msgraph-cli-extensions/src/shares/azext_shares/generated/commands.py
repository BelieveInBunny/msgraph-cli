# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=too-many-statements
# pylint: disable=too-many-locals

from msgraph.cli.core.commands import CliCommandType


def load_command_table(self, _):

    from azext_shares.generated._client_factory import cf_share_shared_drive_item
    shares_share_shared_drive_item = CliCommandType(
        operations_tmpl='azext_shares.vendored_sdks.shares.operations._share_shared_drive_item_operations#ShareSharedDr'
        'iveItemOperations.{}',
        client_factory=cf_share_shared_drive_item)
    with self.command_group('shares share-shared-drive-item', shares_share_shared_drive_item,
                            client_factory=cf_share_shared_drive_item, is_experimental=True) as g:
        g.custom_command('update', 'shares_share_shared_drive_item_update')
        g.custom_command('delete', 'shares_share_shared_drive_item_delete')
        g.custom_command('create-shared-drive-item', 'shares_share_shared_drive_item_create_shared_drive_item')
        g.custom_command('get-shared-drive-item', 'shares_share_shared_drive_item_get_shared_drive_item')
        g.custom_command('list-shared-drive-item', 'shares_share_shared_drive_item_list_shared_drive_item')

    from azext_shares.generated._client_factory import cf_share
    shares_share = CliCommandType(
        operations_tmpl='azext_shares.vendored_sdks.shares.operations._share_operations#ShareOperations.{}',
        client_factory=cf_share)
    with self.command_group('shares share', shares_share, client_factory=cf_share, is_experimental=True) as g:
        g.custom_command('update', 'shares_share_update')
        g.custom_command('create-item', 'shares_share_create_item')
        g.custom_command('get-drive-item', 'shares_share_get_drive_item')
        g.custom_command('get-item', 'shares_share_get_item')
        g.custom_command('get-list', 'shares_share_get_list')
        g.custom_command('get-list-item', 'shares_share_get_list_item')
        g.custom_command('get-permission', 'shares_share_get_permission')
        g.custom_command('get-root', 'shares_share_get_root')
        g.custom_command('get-site', 'shares_share_get_site')
        g.custom_command('list-item', 'shares_share_list_item')

    from azext_shares.generated._client_factory import cf_share_list
    shares_share_list = CliCommandType(
        operations_tmpl='azext_shares.vendored_sdks.shares.operations._share_list_operations#ShareListOperations.{}',
        client_factory=cf_share_list)
    with self.command_group('shares share-list', shares_share_list, client_factory=cf_share_list,
                            is_experimental=True) as g:
        g.custom_command('update', 'shares_share_list_update')
        g.custom_command('create-activity', 'shares_share_list_create_activity')
        g.custom_command('create-column', 'shares_share_list_create_column')
        g.custom_command('create-content-type', 'shares_share_list_create_content_type')
        g.custom_command('create-item', 'shares_share_list_create_item')
        g.custom_command('create-subscription', 'shares_share_list_create_subscription')
        g.custom_command('get-activity', 'shares_share_list_get_activity')
        g.custom_command('get-column', 'shares_share_list_get_column')
        g.custom_command('get-content-type', 'shares_share_list_get_content_type')
        g.custom_command('get-drive', 'shares_share_list_get_drive')
        g.custom_command('get-item', 'shares_share_list_get_item')
        g.custom_command('get-subscription', 'shares_share_list_get_subscription')
        g.custom_command('list-activity', 'shares_share_list_list_activity')
        g.custom_command('list-column', 'shares_share_list_list_column')
        g.custom_command('list-content-type', 'shares_share_list_list_content_type')
        g.custom_command('list-item', 'shares_share_list_list_item')
        g.custom_command('list-subscription', 'shares_share_list_list_subscription')

    from azext_shares.generated._client_factory import cf_share_list_activity
    shares_share_list_activity = CliCommandType(
        operations_tmpl='azext_shares.vendored_sdks.shares.operations._share_list_activity_operations#ShareListActivity'
        'Operations.{}',
        client_factory=cf_share_list_activity)
    with self.command_group('shares share-list-activity', shares_share_list_activity,
                            client_factory=cf_share_list_activity, is_experimental=True) as g:
        g.custom_command('update', 'shares_share_list_activity_update')
        g.custom_command('get-drive-item', 'shares_share_list_activity_get_drive_item')
        g.custom_command('get-list-item', 'shares_share_list_activity_get_list_item')

    from azext_shares.generated._client_factory import cf_share_list_activity_list_item
    shares_share_list_activity_list_item = CliCommandType(
        operations_tmpl='azext_shares.vendored_sdks.shares.operations._share_list_activity_list_item_operations#ShareLi'
        'stActivityListItemOperations.{}',
        client_factory=cf_share_list_activity_list_item)
    with self.command_group('shares share-list-activity-list-item', shares_share_list_activity_list_item,
                            client_factory=cf_share_list_activity_list_item, is_experimental=True) as g:
        g.custom_command('update', 'shares_share_list_activity_list_item_update')
        g.custom_command('create-activity', 'shares_share_list_activity_list_item_create_activity')
        g.custom_command('create-version', 'shares_share_list_activity_list_item_create_version')
        g.custom_command('get-activity', 'shares_share_list_activity_list_item_get_activity')
        g.custom_command('get-activity-by-interval', 'shares_share_list_activity_list_item_get_activity_by_interval')
        g.custom_command('get-analytic', 'shares_share_list_activity_list_item_get_analytic')
        g.custom_command('get-drive-item', 'shares_share_list_activity_list_item_get_drive_item')
        g.custom_command('get-field', 'shares_share_list_activity_list_item_get_field')
        g.custom_command('get-version', 'shares_share_list_activity_list_item_get_version')
        g.custom_command('list-activity', 'shares_share_list_activity_list_item_list_activity')
        g.custom_command('list-version', 'shares_share_list_activity_list_item_list_version')

    from azext_shares.generated._client_factory import cf_share_list_activity_list_item_version
    shares_share_list_activity_list_item_version = CliCommandType(
        operations_tmpl='azext_shares.vendored_sdks.shares.operations._share_list_activity_list_item_version_operations'
        '#ShareListActivityListItemVersionOperations.{}',
        client_factory=cf_share_list_activity_list_item_version)
    with self.command_group('shares share-list-activity-list-item-version',
                            shares_share_list_activity_list_item_version,
                            client_factory=cf_share_list_activity_list_item_version, is_experimental=True) as g:
        g.custom_command('update', 'shares_share_list_activity_list_item_version_update')
        g.custom_command('get-field', 'shares_share_list_activity_list_item_version_get_field')
        g.custom_command('restore-version', 'shares_share_list_activity_list_item_version_restore_version')

    from azext_shares.generated._client_factory import cf_share_list_content_type
    shares_share_list_content_type = CliCommandType(
        operations_tmpl='azext_shares.vendored_sdks.shares.operations._share_list_content_type_operations#ShareListCont'
        'entTypeOperations.{}',
        client_factory=cf_share_list_content_type)
    with self.command_group('shares share-list-content-type', shares_share_list_content_type,
                            client_factory=cf_share_list_content_type, is_experimental=True) as g:
        g.custom_command('update', 'shares_share_list_content_type_update')
        g.custom_command('create-column-link', 'shares_share_list_content_type_create_column_link')
        g.custom_command('get-column-link', 'shares_share_list_content_type_get_column_link')
        g.custom_command('list-column-link', 'shares_share_list_content_type_list_column_link')

    from azext_shares.generated._client_factory import cf_share_list_item
    shares_share_list_item = CliCommandType(
        operations_tmpl='azext_shares.vendored_sdks.shares.operations._share_list_item_operations#ShareListItemOperatio'
        'ns.{}',
        client_factory=cf_share_list_item)
    with self.command_group('shares share-list-item', shares_share_list_item, client_factory=cf_share_list_item,
                            is_experimental=True) as g:
        g.custom_command('update', 'shares_share_list_item_update')
        g.custom_command('create-activity', 'shares_share_list_item_create_activity')
        g.custom_command('create-version', 'shares_share_list_item_create_version')
        g.custom_command('get-activity', 'shares_share_list_item_get_activity')
        g.custom_command('get-activity-by-interval', 'shares_share_list_item_get_activity_by_interval')
        g.custom_command('get-analytic', 'shares_share_list_item_get_analytic')
        g.custom_command('get-drive-item', 'shares_share_list_item_get_drive_item')
        g.custom_command('get-field', 'shares_share_list_item_get_field')
        g.custom_command('get-version', 'shares_share_list_item_get_version')
        g.custom_command('list-activity', 'shares_share_list_item_list_activity')
        g.custom_command('list-version', 'shares_share_list_item_list_version')

    from azext_shares.generated._client_factory import cf_share_list_item_activity
    shares_share_list_item_activity = CliCommandType(
        operations_tmpl='azext_shares.vendored_sdks.shares.operations._share_list_item_activity_operations#ShareListIte'
        'mActivityOperations.{}',
        client_factory=cf_share_list_item_activity)
    with self.command_group('shares share-list-item-activity', shares_share_list_item_activity,
                            client_factory=cf_share_list_item_activity, is_experimental=True) as g:
        g.custom_command('update', 'shares_share_list_item_activity_update')
        g.custom_command('get-drive-item', 'shares_share_list_item_activity_get_drive_item')
        g.custom_command('get-list-item', 'shares_share_list_item_activity_get_list_item')

    from azext_shares.generated._client_factory import cf_share_list_item_activity_list_item
    shares_share_list_item_activity_list_item = CliCommandType(
        operations_tmpl='azext_shares.vendored_sdks.shares.operations._share_list_item_activity_list_item_operations#Sh'
        'areListItemActivityListItemOperations.{}',
        client_factory=cf_share_list_item_activity_list_item)
    with self.command_group('shares share-list-item-activity-list-item', shares_share_list_item_activity_list_item,
                            client_factory=cf_share_list_item_activity_list_item, is_experimental=True) as g:
        g.custom_command('get-activity-by-interval', 'shares_share_list_item_activity_list_item_get_activity_by_interva'
                         'l')

    from azext_shares.generated._client_factory import cf_share_list_item_version
    shares_share_list_item_version = CliCommandType(
        operations_tmpl='azext_shares.vendored_sdks.shares.operations._share_list_item_version_operations#ShareListItem'
        'VersionOperations.{}',
        client_factory=cf_share_list_item_version)
    with self.command_group('shares share-list-item-version', shares_share_list_item_version,
                            client_factory=cf_share_list_item_version, is_experimental=True) as g:
        g.custom_command('update', 'shares_share_list_item_version_update')
        g.custom_command('get-field', 'shares_share_list_item_version_get_field')
        g.custom_command('restore-version', 'shares_share_list_item_version_restore_version')

    from azext_shares.generated._client_factory import cf_share_list_item
    shares_share_list_item = CliCommandType(
        operations_tmpl='azext_shares.vendored_sdks.shares.operations._share_list_item_operations#ShareListItemOperatio'
        'ns.{}',
        client_factory=cf_share_list_item)
    with self.command_group('shares share-list-item', shares_share_list_item, client_factory=cf_share_list_item,
                            is_experimental=True) as g:
        g.custom_command('update', 'shares_share_list_item_update')
        g.custom_command('create-activity', 'shares_share_list_item_create_activity')
        g.custom_command('create-version', 'shares_share_list_item_create_version')
        g.custom_command('get-activity', 'shares_share_list_item_get_activity')
        g.custom_command('get-activity-by-interval', 'shares_share_list_item_get_activity_by_interval')
        g.custom_command('get-analytic', 'shares_share_list_item_get_analytic')
        g.custom_command('get-drive-item', 'shares_share_list_item_get_drive_item')
        g.custom_command('get-field', 'shares_share_list_item_get_field')
        g.custom_command('get-version', 'shares_share_list_item_get_version')
        g.custom_command('list-activity', 'shares_share_list_item_list_activity')
        g.custom_command('list-version', 'shares_share_list_item_list_version')

    from azext_shares.generated._client_factory import cf_share_list_item_activity
    shares_share_list_item_activity = CliCommandType(
        operations_tmpl='azext_shares.vendored_sdks.shares.operations._share_list_item_activity_operations#ShareListIte'
        'mActivityOperations.{}',
        client_factory=cf_share_list_item_activity)
    with self.command_group('shares share-list-item-activity', shares_share_list_item_activity,
                            client_factory=cf_share_list_item_activity, is_experimental=True) as g:
        g.custom_command('update', 'shares_share_list_item_activity_update')
        g.custom_command('get-drive-item', 'shares_share_list_item_activity_get_drive_item')
        g.custom_command('get-list-item', 'shares_share_list_item_activity_get_list_item')

    from azext_shares.generated._client_factory import cf_share_list_item_activity_list_item
    shares_share_list_item_activity_list_item = CliCommandType(
        operations_tmpl='azext_shares.vendored_sdks.shares.operations._share_list_item_activity_list_item_operations#Sh'
        'areListItemActivityListItemOperations.{}',
        client_factory=cf_share_list_item_activity_list_item)
    with self.command_group('shares share-list-item-activity-list-item', shares_share_list_item_activity_list_item,
                            client_factory=cf_share_list_item_activity_list_item, is_experimental=True) as g:
        g.custom_command('get-activity-by-interval', 'shares_share_list_item_activity_list_item_get_activity_by_interva'
                         'l')

    from azext_shares.generated._client_factory import cf_share_list_item_version
    shares_share_list_item_version = CliCommandType(
        operations_tmpl='azext_shares.vendored_sdks.shares.operations._share_list_item_version_operations#ShareListItem'
        'VersionOperations.{}',
        client_factory=cf_share_list_item_version)
    with self.command_group('shares share-list-item-version', shares_share_list_item_version,
                            client_factory=cf_share_list_item_version, is_experimental=True) as g:
        g.custom_command('update', 'shares_share_list_item_version_update')
        g.custom_command('get-field', 'shares_share_list_item_version_get_field')
        g.custom_command('restore-version', 'shares_share_list_item_version_restore_version')

    from azext_shares.generated._client_factory import cf_share_permission
    shares_share_permission = CliCommandType(
        operations_tmpl='azext_shares.vendored_sdks.shares.operations._share_permission_operations#SharePermissionOpera'
        'tions.{}',
        client_factory=cf_share_permission)
    with self.command_group('shares share-permission', shares_share_permission, client_factory=cf_share_permission,
                            is_experimental=True) as g:
        g.custom_command('grant', 'shares_share_permission_grant')
