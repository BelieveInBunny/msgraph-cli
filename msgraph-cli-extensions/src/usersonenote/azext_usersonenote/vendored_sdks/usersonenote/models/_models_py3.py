# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

import datetime
from typing import List, Optional, Union

from azure.core.exceptions import HttpResponseError
import msrest.serialization

from ._users_one_note_enums import *


class CollectionOfNotebook(msrest.serialization.Model):
    """Collection of notebook.

    :param value:
    :type value: list[~users_one_note.models.MicrosoftGraphNotebook]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'value': {'key': 'value', 'type': '[MicrosoftGraphNotebook]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        value: Optional[List["MicrosoftGraphNotebook"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfNotebook, self).__init__(**kwargs)
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfOnenoteOperation(msrest.serialization.Model):
    """Collection of onenoteOperation.

    :param value:
    :type value: list[~users_one_note.models.MicrosoftGraphOnenoteOperation]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'value': {'key': 'value', 'type': '[MicrosoftGraphOnenoteOperation]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        value: Optional[List["MicrosoftGraphOnenoteOperation"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfOnenoteOperation, self).__init__(**kwargs)
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfOnenotePage(msrest.serialization.Model):
    """Collection of onenotePage.

    :param value:
    :type value: list[~users_one_note.models.MicrosoftGraphOnenotePage]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'value': {'key': 'value', 'type': '[MicrosoftGraphOnenotePage]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        value: Optional[List["MicrosoftGraphOnenotePage"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfOnenotePage, self).__init__(**kwargs)
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfOnenotePage0(msrest.serialization.Model):
    """Collection of onenotePage.

    :param value:
    :type value: list[~users_one_note.models.MicrosoftGraphOnenotePage]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'value': {'key': 'value', 'type': '[MicrosoftGraphOnenotePage]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        value: Optional[List["MicrosoftGraphOnenotePage"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfOnenotePage0, self).__init__(**kwargs)
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfOnenotePage1(msrest.serialization.Model):
    """Collection of onenotePage.

    :param value:
    :type value: list[~users_one_note.models.MicrosoftGraphOnenotePage]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'value': {'key': 'value', 'type': '[MicrosoftGraphOnenotePage]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        value: Optional[List["MicrosoftGraphOnenotePage"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfOnenotePage1, self).__init__(**kwargs)
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfOnenotePage2(msrest.serialization.Model):
    """Collection of onenotePage.

    :param value:
    :type value: list[~users_one_note.models.MicrosoftGraphOnenotePage]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'value': {'key': 'value', 'type': '[MicrosoftGraphOnenotePage]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        value: Optional[List["MicrosoftGraphOnenotePage"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfOnenotePage2, self).__init__(**kwargs)
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfOnenotePage3(msrest.serialization.Model):
    """Collection of onenotePage.

    :param value:
    :type value: list[~users_one_note.models.MicrosoftGraphOnenotePage]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'value': {'key': 'value', 'type': '[MicrosoftGraphOnenotePage]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        value: Optional[List["MicrosoftGraphOnenotePage"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfOnenotePage3, self).__init__(**kwargs)
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfOnenotePage4(msrest.serialization.Model):
    """Collection of onenotePage.

    :param value:
    :type value: list[~users_one_note.models.MicrosoftGraphOnenotePage]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'value': {'key': 'value', 'type': '[MicrosoftGraphOnenotePage]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        value: Optional[List["MicrosoftGraphOnenotePage"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfOnenotePage4, self).__init__(**kwargs)
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfOnenotePage5(msrest.serialization.Model):
    """Collection of onenotePage.

    :param value:
    :type value: list[~users_one_note.models.MicrosoftGraphOnenotePage]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'value': {'key': 'value', 'type': '[MicrosoftGraphOnenotePage]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        value: Optional[List["MicrosoftGraphOnenotePage"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfOnenotePage5, self).__init__(**kwargs)
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfOnenotePage6(msrest.serialization.Model):
    """Collection of onenotePage.

    :param value:
    :type value: list[~users_one_note.models.MicrosoftGraphOnenotePage]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'value': {'key': 'value', 'type': '[MicrosoftGraphOnenotePage]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        value: Optional[List["MicrosoftGraphOnenotePage"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfOnenotePage6, self).__init__(**kwargs)
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfOnenotePage7(msrest.serialization.Model):
    """Collection of onenotePage.

    :param value:
    :type value: list[~users_one_note.models.MicrosoftGraphOnenotePage]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'value': {'key': 'value', 'type': '[MicrosoftGraphOnenotePage]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        value: Optional[List["MicrosoftGraphOnenotePage"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfOnenotePage7, self).__init__(**kwargs)
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfOnenoteResource(msrest.serialization.Model):
    """Collection of onenoteResource.

    :param value:
    :type value: list[~users_one_note.models.MicrosoftGraphOnenoteResource]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'value': {'key': 'value', 'type': '[MicrosoftGraphOnenoteResource]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        value: Optional[List["MicrosoftGraphOnenoteResource"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfOnenoteResource, self).__init__(**kwargs)
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfOnenoteSection(msrest.serialization.Model):
    """Collection of onenoteSection.

    :param value:
    :type value: list[~users_one_note.models.MicrosoftGraphOnenoteSection]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'value': {'key': 'value', 'type': '[MicrosoftGraphOnenoteSection]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        value: Optional[List["MicrosoftGraphOnenoteSection"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfOnenoteSection, self).__init__(**kwargs)
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfOnenoteSection0(msrest.serialization.Model):
    """Collection of onenoteSection.

    :param value:
    :type value: list[~users_one_note.models.MicrosoftGraphOnenoteSection]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'value': {'key': 'value', 'type': '[MicrosoftGraphOnenoteSection]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        value: Optional[List["MicrosoftGraphOnenoteSection"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfOnenoteSection0, self).__init__(**kwargs)
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfOnenoteSection1(msrest.serialization.Model):
    """Collection of onenoteSection.

    :param value:
    :type value: list[~users_one_note.models.MicrosoftGraphOnenoteSection]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'value': {'key': 'value', 'type': '[MicrosoftGraphOnenoteSection]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        value: Optional[List["MicrosoftGraphOnenoteSection"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfOnenoteSection1, self).__init__(**kwargs)
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfOnenoteSection10(msrest.serialization.Model):
    """Collection of onenoteSection.

    :param value:
    :type value: list[~users_one_note.models.MicrosoftGraphOnenoteSection]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'value': {'key': 'value', 'type': '[MicrosoftGraphOnenoteSection]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        value: Optional[List["MicrosoftGraphOnenoteSection"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfOnenoteSection10, self).__init__(**kwargs)
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfOnenoteSection11(msrest.serialization.Model):
    """Collection of onenoteSection.

    :param value:
    :type value: list[~users_one_note.models.MicrosoftGraphOnenoteSection]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'value': {'key': 'value', 'type': '[MicrosoftGraphOnenoteSection]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        value: Optional[List["MicrosoftGraphOnenoteSection"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfOnenoteSection11, self).__init__(**kwargs)
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfOnenoteSection12(msrest.serialization.Model):
    """Collection of onenoteSection.

    :param value:
    :type value: list[~users_one_note.models.MicrosoftGraphOnenoteSection]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'value': {'key': 'value', 'type': '[MicrosoftGraphOnenoteSection]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        value: Optional[List["MicrosoftGraphOnenoteSection"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfOnenoteSection12, self).__init__(**kwargs)
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfOnenoteSection13(msrest.serialization.Model):
    """Collection of onenoteSection.

    :param value:
    :type value: list[~users_one_note.models.MicrosoftGraphOnenoteSection]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'value': {'key': 'value', 'type': '[MicrosoftGraphOnenoteSection]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        value: Optional[List["MicrosoftGraphOnenoteSection"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfOnenoteSection13, self).__init__(**kwargs)
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfOnenoteSection14(msrest.serialization.Model):
    """Collection of onenoteSection.

    :param value:
    :type value: list[~users_one_note.models.MicrosoftGraphOnenoteSection]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'value': {'key': 'value', 'type': '[MicrosoftGraphOnenoteSection]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        value: Optional[List["MicrosoftGraphOnenoteSection"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfOnenoteSection14, self).__init__(**kwargs)
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfOnenoteSection15(msrest.serialization.Model):
    """Collection of onenoteSection.

    :param value:
    :type value: list[~users_one_note.models.MicrosoftGraphOnenoteSection]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'value': {'key': 'value', 'type': '[MicrosoftGraphOnenoteSection]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        value: Optional[List["MicrosoftGraphOnenoteSection"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfOnenoteSection15, self).__init__(**kwargs)
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfOnenoteSection16(msrest.serialization.Model):
    """Collection of onenoteSection.

    :param value:
    :type value: list[~users_one_note.models.MicrosoftGraphOnenoteSection]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'value': {'key': 'value', 'type': '[MicrosoftGraphOnenoteSection]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        value: Optional[List["MicrosoftGraphOnenoteSection"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfOnenoteSection16, self).__init__(**kwargs)
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfOnenoteSection17(msrest.serialization.Model):
    """Collection of onenoteSection.

    :param value:
    :type value: list[~users_one_note.models.MicrosoftGraphOnenoteSection]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'value': {'key': 'value', 'type': '[MicrosoftGraphOnenoteSection]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        value: Optional[List["MicrosoftGraphOnenoteSection"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfOnenoteSection17, self).__init__(**kwargs)
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfOnenoteSection18(msrest.serialization.Model):
    """Collection of onenoteSection.

    :param value:
    :type value: list[~users_one_note.models.MicrosoftGraphOnenoteSection]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'value': {'key': 'value', 'type': '[MicrosoftGraphOnenoteSection]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        value: Optional[List["MicrosoftGraphOnenoteSection"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfOnenoteSection18, self).__init__(**kwargs)
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfOnenoteSection19(msrest.serialization.Model):
    """Collection of onenoteSection.

    :param value:
    :type value: list[~users_one_note.models.MicrosoftGraphOnenoteSection]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'value': {'key': 'value', 'type': '[MicrosoftGraphOnenoteSection]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        value: Optional[List["MicrosoftGraphOnenoteSection"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfOnenoteSection19, self).__init__(**kwargs)
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfOnenoteSection2(msrest.serialization.Model):
    """Collection of onenoteSection.

    :param value:
    :type value: list[~users_one_note.models.MicrosoftGraphOnenoteSection]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'value': {'key': 'value', 'type': '[MicrosoftGraphOnenoteSection]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        value: Optional[List["MicrosoftGraphOnenoteSection"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfOnenoteSection2, self).__init__(**kwargs)
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfOnenoteSection3(msrest.serialization.Model):
    """Collection of onenoteSection.

    :param value:
    :type value: list[~users_one_note.models.MicrosoftGraphOnenoteSection]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'value': {'key': 'value', 'type': '[MicrosoftGraphOnenoteSection]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        value: Optional[List["MicrosoftGraphOnenoteSection"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfOnenoteSection3, self).__init__(**kwargs)
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfOnenoteSection4(msrest.serialization.Model):
    """Collection of onenoteSection.

    :param value:
    :type value: list[~users_one_note.models.MicrosoftGraphOnenoteSection]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'value': {'key': 'value', 'type': '[MicrosoftGraphOnenoteSection]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        value: Optional[List["MicrosoftGraphOnenoteSection"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfOnenoteSection4, self).__init__(**kwargs)
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfOnenoteSection5(msrest.serialization.Model):
    """Collection of onenoteSection.

    :param value:
    :type value: list[~users_one_note.models.MicrosoftGraphOnenoteSection]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'value': {'key': 'value', 'type': '[MicrosoftGraphOnenoteSection]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        value: Optional[List["MicrosoftGraphOnenoteSection"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfOnenoteSection5, self).__init__(**kwargs)
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfOnenoteSection6(msrest.serialization.Model):
    """Collection of onenoteSection.

    :param value:
    :type value: list[~users_one_note.models.MicrosoftGraphOnenoteSection]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'value': {'key': 'value', 'type': '[MicrosoftGraphOnenoteSection]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        value: Optional[List["MicrosoftGraphOnenoteSection"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfOnenoteSection6, self).__init__(**kwargs)
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfOnenoteSection7(msrest.serialization.Model):
    """Collection of onenoteSection.

    :param value:
    :type value: list[~users_one_note.models.MicrosoftGraphOnenoteSection]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'value': {'key': 'value', 'type': '[MicrosoftGraphOnenoteSection]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        value: Optional[List["MicrosoftGraphOnenoteSection"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfOnenoteSection7, self).__init__(**kwargs)
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfOnenoteSection8(msrest.serialization.Model):
    """Collection of onenoteSection.

    :param value:
    :type value: list[~users_one_note.models.MicrosoftGraphOnenoteSection]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'value': {'key': 'value', 'type': '[MicrosoftGraphOnenoteSection]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        value: Optional[List["MicrosoftGraphOnenoteSection"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfOnenoteSection8, self).__init__(**kwargs)
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfOnenoteSection9(msrest.serialization.Model):
    """Collection of onenoteSection.

    :param value:
    :type value: list[~users_one_note.models.MicrosoftGraphOnenoteSection]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'value': {'key': 'value', 'type': '[MicrosoftGraphOnenoteSection]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        value: Optional[List["MicrosoftGraphOnenoteSection"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfOnenoteSection9, self).__init__(**kwargs)
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfSectionGroup(msrest.serialization.Model):
    """Collection of sectionGroup.

    :param value:
    :type value: list[~users_one_note.models.MicrosoftGraphSectionGroup]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'value': {'key': 'value', 'type': '[MicrosoftGraphSectionGroup]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        value: Optional[List["MicrosoftGraphSectionGroup"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfSectionGroup, self).__init__(**kwargs)
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfSectionGroup0(msrest.serialization.Model):
    """Collection of sectionGroup.

    :param value:
    :type value: list[~users_one_note.models.MicrosoftGraphSectionGroup]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'value': {'key': 'value', 'type': '[MicrosoftGraphSectionGroup]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        value: Optional[List["MicrosoftGraphSectionGroup"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfSectionGroup0, self).__init__(**kwargs)
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfSectionGroup1(msrest.serialization.Model):
    """Collection of sectionGroup.

    :param value:
    :type value: list[~users_one_note.models.MicrosoftGraphSectionGroup]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'value': {'key': 'value', 'type': '[MicrosoftGraphSectionGroup]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        value: Optional[List["MicrosoftGraphSectionGroup"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfSectionGroup1, self).__init__(**kwargs)
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfSectionGroup10(msrest.serialization.Model):
    """Collection of sectionGroup.

    :param value:
    :type value: list[~users_one_note.models.MicrosoftGraphSectionGroup]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'value': {'key': 'value', 'type': '[MicrosoftGraphSectionGroup]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        value: Optional[List["MicrosoftGraphSectionGroup"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfSectionGroup10, self).__init__(**kwargs)
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfSectionGroup11(msrest.serialization.Model):
    """Collection of sectionGroup.

    :param value:
    :type value: list[~users_one_note.models.MicrosoftGraphSectionGroup]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'value': {'key': 'value', 'type': '[MicrosoftGraphSectionGroup]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        value: Optional[List["MicrosoftGraphSectionGroup"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfSectionGroup11, self).__init__(**kwargs)
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfSectionGroup12(msrest.serialization.Model):
    """Collection of sectionGroup.

    :param value:
    :type value: list[~users_one_note.models.MicrosoftGraphSectionGroup]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'value': {'key': 'value', 'type': '[MicrosoftGraphSectionGroup]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        value: Optional[List["MicrosoftGraphSectionGroup"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfSectionGroup12, self).__init__(**kwargs)
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfSectionGroup13(msrest.serialization.Model):
    """Collection of sectionGroup.

    :param value:
    :type value: list[~users_one_note.models.MicrosoftGraphSectionGroup]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'value': {'key': 'value', 'type': '[MicrosoftGraphSectionGroup]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        value: Optional[List["MicrosoftGraphSectionGroup"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfSectionGroup13, self).__init__(**kwargs)
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfSectionGroup14(msrest.serialization.Model):
    """Collection of sectionGroup.

    :param value:
    :type value: list[~users_one_note.models.MicrosoftGraphSectionGroup]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'value': {'key': 'value', 'type': '[MicrosoftGraphSectionGroup]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        value: Optional[List["MicrosoftGraphSectionGroup"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfSectionGroup14, self).__init__(**kwargs)
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfSectionGroup15(msrest.serialization.Model):
    """Collection of sectionGroup.

    :param value:
    :type value: list[~users_one_note.models.MicrosoftGraphSectionGroup]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'value': {'key': 'value', 'type': '[MicrosoftGraphSectionGroup]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        value: Optional[List["MicrosoftGraphSectionGroup"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfSectionGroup15, self).__init__(**kwargs)
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfSectionGroup16(msrest.serialization.Model):
    """Collection of sectionGroup.

    :param value:
    :type value: list[~users_one_note.models.MicrosoftGraphSectionGroup]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'value': {'key': 'value', 'type': '[MicrosoftGraphSectionGroup]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        value: Optional[List["MicrosoftGraphSectionGroup"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfSectionGroup16, self).__init__(**kwargs)
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfSectionGroup17(msrest.serialization.Model):
    """Collection of sectionGroup.

    :param value:
    :type value: list[~users_one_note.models.MicrosoftGraphSectionGroup]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'value': {'key': 'value', 'type': '[MicrosoftGraphSectionGroup]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        value: Optional[List["MicrosoftGraphSectionGroup"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfSectionGroup17, self).__init__(**kwargs)
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfSectionGroup18(msrest.serialization.Model):
    """Collection of sectionGroup.

    :param value:
    :type value: list[~users_one_note.models.MicrosoftGraphSectionGroup]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'value': {'key': 'value', 'type': '[MicrosoftGraphSectionGroup]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        value: Optional[List["MicrosoftGraphSectionGroup"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfSectionGroup18, self).__init__(**kwargs)
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfSectionGroup19(msrest.serialization.Model):
    """Collection of sectionGroup.

    :param value:
    :type value: list[~users_one_note.models.MicrosoftGraphSectionGroup]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'value': {'key': 'value', 'type': '[MicrosoftGraphSectionGroup]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        value: Optional[List["MicrosoftGraphSectionGroup"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfSectionGroup19, self).__init__(**kwargs)
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfSectionGroup2(msrest.serialization.Model):
    """Collection of sectionGroup.

    :param value:
    :type value: list[~users_one_note.models.MicrosoftGraphSectionGroup]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'value': {'key': 'value', 'type': '[MicrosoftGraphSectionGroup]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        value: Optional[List["MicrosoftGraphSectionGroup"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfSectionGroup2, self).__init__(**kwargs)
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfSectionGroup3(msrest.serialization.Model):
    """Collection of sectionGroup.

    :param value:
    :type value: list[~users_one_note.models.MicrosoftGraphSectionGroup]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'value': {'key': 'value', 'type': '[MicrosoftGraphSectionGroup]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        value: Optional[List["MicrosoftGraphSectionGroup"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfSectionGroup3, self).__init__(**kwargs)
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfSectionGroup4(msrest.serialization.Model):
    """Collection of sectionGroup.

    :param value:
    :type value: list[~users_one_note.models.MicrosoftGraphSectionGroup]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'value': {'key': 'value', 'type': '[MicrosoftGraphSectionGroup]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        value: Optional[List["MicrosoftGraphSectionGroup"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfSectionGroup4, self).__init__(**kwargs)
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfSectionGroup5(msrest.serialization.Model):
    """Collection of sectionGroup.

    :param value:
    :type value: list[~users_one_note.models.MicrosoftGraphSectionGroup]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'value': {'key': 'value', 'type': '[MicrosoftGraphSectionGroup]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        value: Optional[List["MicrosoftGraphSectionGroup"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfSectionGroup5, self).__init__(**kwargs)
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfSectionGroup6(msrest.serialization.Model):
    """Collection of sectionGroup.

    :param value:
    :type value: list[~users_one_note.models.MicrosoftGraphSectionGroup]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'value': {'key': 'value', 'type': '[MicrosoftGraphSectionGroup]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        value: Optional[List["MicrosoftGraphSectionGroup"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfSectionGroup6, self).__init__(**kwargs)
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfSectionGroup7(msrest.serialization.Model):
    """Collection of sectionGroup.

    :param value:
    :type value: list[~users_one_note.models.MicrosoftGraphSectionGroup]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'value': {'key': 'value', 'type': '[MicrosoftGraphSectionGroup]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        value: Optional[List["MicrosoftGraphSectionGroup"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfSectionGroup7, self).__init__(**kwargs)
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfSectionGroup8(msrest.serialization.Model):
    """Collection of sectionGroup.

    :param value:
    :type value: list[~users_one_note.models.MicrosoftGraphSectionGroup]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'value': {'key': 'value', 'type': '[MicrosoftGraphSectionGroup]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        value: Optional[List["MicrosoftGraphSectionGroup"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfSectionGroup8, self).__init__(**kwargs)
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfSectionGroup9(msrest.serialization.Model):
    """Collection of sectionGroup.

    :param value:
    :type value: list[~users_one_note.models.MicrosoftGraphSectionGroup]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'value': {'key': 'value', 'type': '[MicrosoftGraphSectionGroup]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        value: Optional[List["MicrosoftGraphSectionGroup"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfSectionGroup9, self).__init__(**kwargs)
        self.value = value
        self.odata_next_link = odata_next_link


class MicrosoftGraphEntity(msrest.serialization.Model):
    """entity.

    :param id: Read-only.
    :type id: str
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,
        **kwargs
    ):
        super(MicrosoftGraphEntity, self).__init__(**kwargs)
        self.id = id


class MicrosoftGraphExternalLink(msrest.serialization.Model):
    """externalLink.

    :param href: The url of the link.
    :type href: str
    """

    _attribute_map = {
        'href': {'key': 'href', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        href: Optional[str] = None,
        **kwargs
    ):
        super(MicrosoftGraphExternalLink, self).__init__(**kwargs)
        self.href = href


class MicrosoftGraphIdentity(msrest.serialization.Model):
    """identity.

    :param id: Unique identifier for the identity.
    :type id: str
    :param display_name: The identity's display name. Note that this may not always be available or
     up to date. For example, if a user changes their display name, the API may show the new value
     in a future response, but the items associated with the user won't show up as having changed
     when using delta.
    :type display_name: str
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'display_name': {'key': 'displayName', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,
        display_name: Optional[str] = None,
        **kwargs
    ):
        super(MicrosoftGraphIdentity, self).__init__(**kwargs)
        self.id = id
        self.display_name = display_name


class MicrosoftGraphOnenoteEntityBaseModel(MicrosoftGraphEntity):
    """onenoteEntityBaseModel.

    :param id: Read-only.
    :type id: str
    :param self_property: The endpoint where you can get details about the page. Read-only.
    :type self_property: str
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'self_property': {'key': 'self', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,
        self_property: Optional[str] = None,
        **kwargs
    ):
        super(MicrosoftGraphOnenoteEntityBaseModel, self).__init__(id=id, **kwargs)
        self.self_property = self_property


class MicrosoftGraphOnenoteEntitySchemaObjectModel(MicrosoftGraphOnenoteEntityBaseModel):
    """onenoteEntitySchemaObjectModel.

    :param id: Read-only.
    :type id: str
    :param self_property: The endpoint where you can get details about the page. Read-only.
    :type self_property: str
    :param created_date_time: The date and time when the page was created. The timestamp represents
     date and time information using ISO 8601 format and is always in UTC time. For example,
     midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'. Read-only.
    :type created_date_time: ~datetime.datetime
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'self_property': {'key': 'self', 'type': 'str'},
        'created_date_time': {'key': 'createdDateTime', 'type': 'iso-8601'},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,
        self_property: Optional[str] = None,
        created_date_time: Optional[datetime.datetime] = None,
        **kwargs
    ):
        super(MicrosoftGraphOnenoteEntitySchemaObjectModel, self).__init__(id=id, self_property=self_property, **kwargs)
        self.created_date_time = created_date_time


class MicrosoftGraphOnenoteEntityHierarchyModel(MicrosoftGraphOnenoteEntitySchemaObjectModel):
    """onenoteEntityHierarchyModel.

    :param id: Read-only.
    :type id: str
    :param id: Read-only.
    :type id: str
    :param self_property: The endpoint where you can get details about the page. Read-only.
    :type self_property: str
    :param created_date_time: The date and time when the page was created. The timestamp represents
     date and time information using ISO 8601 format and is always in UTC time. For example,
     midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'. Read-only.
    :type created_date_time: ~datetime.datetime
    :param display_name: The name of the notebook.
    :type display_name: str
    :param last_modified_date_time: The date and time when the notebook was last modified. The
     timestamp represents date and time information using ISO 8601 format and is always in UTC time.
     For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'. Read-
     only.
    :type last_modified_date_time: ~datetime.datetime
    :param application_last_modified_by_application: identity.
    :type application_last_modified_by_application: ~users_one_note.models.MicrosoftGraphIdentity
    :param device_last_modified_by_device: identity.
    :type device_last_modified_by_device: ~users_one_note.models.MicrosoftGraphIdentity
    :param user_last_modified_by_user: identity.
    :type user_last_modified_by_user: ~users_one_note.models.MicrosoftGraphIdentity
    :param application_created_by_application: identity.
    :type application_created_by_application: ~users_one_note.models.MicrosoftGraphIdentity
    :param device_created_by_device: identity.
    :type device_created_by_device: ~users_one_note.models.MicrosoftGraphIdentity
    :param user_created_by_user: identity.
    :type user_created_by_user: ~users_one_note.models.MicrosoftGraphIdentity
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'id': {'key': 'id', 'type': 'str'},
        'self_property': {'key': 'self', 'type': 'str'},
        'created_date_time': {'key': 'createdDateTime', 'type': 'iso-8601'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'last_modified_date_time': {'key': 'lastModifiedDateTime', 'type': 'iso-8601'},
        'application_last_modified_by_application': {'key': 'lastModifiedBy.application', 'type': 'MicrosoftGraphIdentity'},
        'device_last_modified_by_device': {'key': 'lastModifiedBy.device', 'type': 'MicrosoftGraphIdentity'},
        'user_last_modified_by_user': {'key': 'lastModifiedBy.user', 'type': 'MicrosoftGraphIdentity'},
        'application_created_by_application': {'key': 'createdBy.application', 'type': 'MicrosoftGraphIdentity'},
        'device_created_by_device': {'key': 'createdBy.device', 'type': 'MicrosoftGraphIdentity'},
        'user_created_by_user': {'key': 'createdBy.user', 'type': 'MicrosoftGraphIdentity'},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,
        id: Optional[str] = None,
        self_property: Optional[str] = None,
        created_date_time: Optional[datetime.datetime] = None,
        display_name: Optional[str] = None,
        last_modified_date_time: Optional[datetime.datetime] = None,
        application_last_modified_by_application: Optional["MicrosoftGraphIdentity"] = None,
        device_last_modified_by_device: Optional["MicrosoftGraphIdentity"] = None,
        user_last_modified_by_user: Optional["MicrosoftGraphIdentity"] = None,
        application_created_by_application: Optional["MicrosoftGraphIdentity"] = None,
        device_created_by_device: Optional["MicrosoftGraphIdentity"] = None,
        user_created_by_user: Optional["MicrosoftGraphIdentity"] = None,
        **kwargs
    ):
        super(MicrosoftGraphOnenoteEntityHierarchyModel, self).__init__(id=id, id=id, self_property=self_property, created_date_time=created_date_time, **kwargs)
        self.display_name = display_name
        self.last_modified_date_time = last_modified_date_time
        self.application_last_modified_by_application = application_last_modified_by_application
        self.device_last_modified_by_device = device_last_modified_by_device
        self.user_last_modified_by_user = user_last_modified_by_user
        self.application_created_by_application = application_created_by_application
        self.device_created_by_device = device_created_by_device
        self.user_created_by_user = user_created_by_user


class MicrosoftGraphNotebook(MicrosoftGraphOnenoteEntityHierarchyModel):
    """notebook.

    :param id: Read-only.
    :type id: str
    :param self_property: The endpoint where you can get details about the page. Read-only.
    :type self_property: str
    :param created_date_time: The date and time when the page was created. The timestamp represents
     date and time information using ISO 8601 format and is always in UTC time. For example,
     midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'. Read-only.
    :type created_date_time: ~datetime.datetime
    :param display_name: The name of the notebook.
    :type display_name: str
    :param last_modified_date_time: The date and time when the notebook was last modified. The
     timestamp represents date and time information using ISO 8601 format and is always in UTC time.
     For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'. Read-
     only.
    :type last_modified_date_time: ~datetime.datetime
    :param application_last_modified_by_application: identity.
    :type application_last_modified_by_application: ~users_one_note.models.MicrosoftGraphIdentity
    :param device_last_modified_by_device: identity.
    :type device_last_modified_by_device: ~users_one_note.models.MicrosoftGraphIdentity
    :param user_last_modified_by_user: identity.
    :type user_last_modified_by_user: ~users_one_note.models.MicrosoftGraphIdentity
    :param application_created_by_application: identity.
    :type application_created_by_application: ~users_one_note.models.MicrosoftGraphIdentity
    :param device_created_by_device: identity.
    :type device_created_by_device: ~users_one_note.models.MicrosoftGraphIdentity
    :param user_created_by_user: identity.
    :type user_created_by_user: ~users_one_note.models.MicrosoftGraphIdentity
    :param is_default: Indicates whether this is the user's default notebook. Read-only.
    :type is_default: bool
    :param user_role:  Possible values include: "Owner", "Contributor", "Reader", "None".
    :type user_role: str or ~users_one_note.models.MicrosoftGraphOnenoteUserRole
    :param is_shared: Indicates whether the notebook is shared. If true, the contents of the
     notebook can be seen by people other than the owner. Read-only.
    :type is_shared: bool
    :param sections_url: The URL for the sections navigation property, which returns all the
     sections in the notebook. Read-only.
    :type sections_url: str
    :param section_groups_url: The URL for the sectionGroups navigation property, which returns all
     the section groups in the notebook. Read-only.
    :type section_groups_url: str
    :param sections: The sections in the notebook. Read-only. Nullable.
    :type sections: list[~users_one_note.models.MicrosoftGraphOnenoteSection]
    :param section_groups: The section groups in the notebook. Read-only. Nullable.
    :type section_groups: list[~users_one_note.models.MicrosoftGraphSectionGroup]
    :param one_note_client_url: externalLink.
    :type one_note_client_url: ~users_one_note.models.MicrosoftGraphExternalLink
    :param one_note_web_url: externalLink.
    :type one_note_web_url: ~users_one_note.models.MicrosoftGraphExternalLink
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'self_property': {'key': 'self', 'type': 'str'},
        'created_date_time': {'key': 'createdDateTime', 'type': 'iso-8601'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'last_modified_date_time': {'key': 'lastModifiedDateTime', 'type': 'iso-8601'},
        'application_last_modified_by_application': {'key': 'lastModifiedBy.application', 'type': 'MicrosoftGraphIdentity'},
        'device_last_modified_by_device': {'key': 'lastModifiedBy.device', 'type': 'MicrosoftGraphIdentity'},
        'user_last_modified_by_user': {'key': 'lastModifiedBy.user', 'type': 'MicrosoftGraphIdentity'},
        'application_created_by_application': {'key': 'createdBy.application', 'type': 'MicrosoftGraphIdentity'},
        'device_created_by_device': {'key': 'createdBy.device', 'type': 'MicrosoftGraphIdentity'},
        'user_created_by_user': {'key': 'createdBy.user', 'type': 'MicrosoftGraphIdentity'},
        'is_default': {'key': 'isDefault', 'type': 'bool'},
        'user_role': {'key': 'userRole', 'type': 'str'},
        'is_shared': {'key': 'isShared', 'type': 'bool'},
        'sections_url': {'key': 'sectionsUrl', 'type': 'str'},
        'section_groups_url': {'key': 'sectionGroupsUrl', 'type': 'str'},
        'sections': {'key': 'sections', 'type': '[MicrosoftGraphOnenoteSection]'},
        'section_groups': {'key': 'sectionGroups', 'type': '[MicrosoftGraphSectionGroup]'},
        'one_note_client_url': {'key': 'links.oneNoteClientUrl', 'type': 'MicrosoftGraphExternalLink'},
        'one_note_web_url': {'key': 'links.oneNoteWebUrl', 'type': 'MicrosoftGraphExternalLink'},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,
        self_property: Optional[str] = None,
        created_date_time: Optional[datetime.datetime] = None,
        display_name: Optional[str] = None,
        last_modified_date_time: Optional[datetime.datetime] = None,
        application_last_modified_by_application: Optional["MicrosoftGraphIdentity"] = None,
        device_last_modified_by_device: Optional["MicrosoftGraphIdentity"] = None,
        user_last_modified_by_user: Optional["MicrosoftGraphIdentity"] = None,
        application_created_by_application: Optional["MicrosoftGraphIdentity"] = None,
        device_created_by_device: Optional["MicrosoftGraphIdentity"] = None,
        user_created_by_user: Optional["MicrosoftGraphIdentity"] = None,
        is_default: Optional[bool] = None,
        user_role: Optional[Union[str, "MicrosoftGraphOnenoteUserRole"]] = None,
        is_shared: Optional[bool] = None,
        sections_url: Optional[str] = None,
        section_groups_url: Optional[str] = None,
        sections: Optional[List["MicrosoftGraphOnenoteSection"]] = None,
        section_groups: Optional[List["MicrosoftGraphSectionGroup"]] = None,
        one_note_client_url: Optional["MicrosoftGraphExternalLink"] = None,
        one_note_web_url: Optional["MicrosoftGraphExternalLink"] = None,
        **kwargs
    ):
        super(MicrosoftGraphNotebook, self).__init__(id=id, self_property=self_property, created_date_time=created_date_time, display_name=display_name, last_modified_date_time=last_modified_date_time, application_last_modified_by_application=application_last_modified_by_application, device_last_modified_by_device=device_last_modified_by_device, user_last_modified_by_user=user_last_modified_by_user, application_created_by_application=application_created_by_application, device_created_by_device=device_created_by_device, user_created_by_user=user_created_by_user, **kwargs)
        self.is_default = is_default
        self.user_role = user_role
        self.is_shared = is_shared
        self.sections_url = sections_url
        self.section_groups_url = section_groups_url
        self.sections = sections
        self.section_groups = section_groups
        self.one_note_client_url = one_note_client_url
        self.one_note_web_url = one_note_web_url


class MicrosoftGraphOnenote(MicrosoftGraphEntity):
    """onenote.

    :param id: Read-only.
    :type id: str
    :param notebooks: The collection of OneNote notebooks that are owned by the user or group.
     Read-only. Nullable.
    :type notebooks: list[~users_one_note.models.MicrosoftGraphNotebook]
    :param sections: The sections in all OneNote notebooks that are owned by the user or group.
     Read-only. Nullable.
    :type sections: list[~users_one_note.models.MicrosoftGraphOnenoteSection]
    :param section_groups: The section groups in all OneNote notebooks that are owned by the user
     or group.  Read-only. Nullable.
    :type section_groups: list[~users_one_note.models.MicrosoftGraphSectionGroup]
    :param pages: The pages in all OneNote notebooks that are owned by the user or group.  Read-
     only. Nullable.
    :type pages: list[~users_one_note.models.MicrosoftGraphOnenotePage]
    :param resources: The image and other file resources in OneNote pages. Getting a resources
     collection is not supported, but you can get the binary content of a specific resource. Read-
     only. Nullable.
    :type resources: list[~users_one_note.models.MicrosoftGraphOnenoteResource]
    :param operations: The status of OneNote operations. Getting an operations collection is not
     supported, but you can get the status of long-running operations if the Operation-Location
     header is returned in the response. Read-only. Nullable.
    :type operations: list[~users_one_note.models.MicrosoftGraphOnenoteOperation]
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'notebooks': {'key': 'notebooks', 'type': '[MicrosoftGraphNotebook]'},
        'sections': {'key': 'sections', 'type': '[MicrosoftGraphOnenoteSection]'},
        'section_groups': {'key': 'sectionGroups', 'type': '[MicrosoftGraphSectionGroup]'},
        'pages': {'key': 'pages', 'type': '[MicrosoftGraphOnenotePage]'},
        'resources': {'key': 'resources', 'type': '[MicrosoftGraphOnenoteResource]'},
        'operations': {'key': 'operations', 'type': '[MicrosoftGraphOnenoteOperation]'},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,
        notebooks: Optional[List["MicrosoftGraphNotebook"]] = None,
        sections: Optional[List["MicrosoftGraphOnenoteSection"]] = None,
        section_groups: Optional[List["MicrosoftGraphSectionGroup"]] = None,
        pages: Optional[List["MicrosoftGraphOnenotePage"]] = None,
        resources: Optional[List["MicrosoftGraphOnenoteResource"]] = None,
        operations: Optional[List["MicrosoftGraphOnenoteOperation"]] = None,
        **kwargs
    ):
        super(MicrosoftGraphOnenote, self).__init__(id=id, **kwargs)
        self.notebooks = notebooks
        self.sections = sections
        self.section_groups = section_groups
        self.pages = pages
        self.resources = resources
        self.operations = operations


class MicrosoftGraphOperation(MicrosoftGraphEntity):
    """operation.

    :param id: Read-only.
    :type id: str
    :param status:  Possible values include: "NotStarted", "Running", "Completed", "Failed".
    :type status: str or ~users_one_note.models.MicrosoftGraphOperationStatus
    :param created_date_time: The start time of the operation.
    :type created_date_time: ~datetime.datetime
    :param last_action_date_time: The time of the last action of the operation.
    :type last_action_date_time: ~datetime.datetime
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'status': {'key': 'status', 'type': 'str'},
        'created_date_time': {'key': 'createdDateTime', 'type': 'iso-8601'},
        'last_action_date_time': {'key': 'lastActionDateTime', 'type': 'iso-8601'},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,
        status: Optional[Union[str, "MicrosoftGraphOperationStatus"]] = None,
        created_date_time: Optional[datetime.datetime] = None,
        last_action_date_time: Optional[datetime.datetime] = None,
        **kwargs
    ):
        super(MicrosoftGraphOperation, self).__init__(id=id, **kwargs)
        self.status = status
        self.created_date_time = created_date_time
        self.last_action_date_time = last_action_date_time


class MicrosoftGraphOnenoteOperation(MicrosoftGraphOperation):
    """onenoteOperation.

    :param id: Read-only.
    :type id: str
    :param status:  Possible values include: "NotStarted", "Running", "Completed", "Failed".
    :type status: str or ~users_one_note.models.MicrosoftGraphOperationStatus
    :param created_date_time: The start time of the operation.
    :type created_date_time: ~datetime.datetime
    :param last_action_date_time: The time of the last action of the operation.
    :type last_action_date_time: ~datetime.datetime
    :param resource_location: The resource URI for the object. For example, the resource URI for a
     copied page or section.
    :type resource_location: str
    :param resource_id: The resource id.
    :type resource_id: str
    :param error: onenoteOperationError.
    :type error: ~users_one_note.models.MicrosoftGraphOnenoteOperationError
    :param percent_complete: The operation percent complete if the operation is still in running
     status.
    :type percent_complete: str
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'status': {'key': 'status', 'type': 'str'},
        'created_date_time': {'key': 'createdDateTime', 'type': 'iso-8601'},
        'last_action_date_time': {'key': 'lastActionDateTime', 'type': 'iso-8601'},
        'resource_location': {'key': 'resourceLocation', 'type': 'str'},
        'resource_id': {'key': 'resourceId', 'type': 'str'},
        'error': {'key': 'error', 'type': 'MicrosoftGraphOnenoteOperationError'},
        'percent_complete': {'key': 'percentComplete', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,
        status: Optional[Union[str, "MicrosoftGraphOperationStatus"]] = None,
        created_date_time: Optional[datetime.datetime] = None,
        last_action_date_time: Optional[datetime.datetime] = None,
        resource_location: Optional[str] = None,
        resource_id: Optional[str] = None,
        error: Optional["MicrosoftGraphOnenoteOperationError"] = None,
        percent_complete: Optional[str] = None,
        **kwargs
    ):
        super(MicrosoftGraphOnenoteOperation, self).__init__(id=id, status=status, created_date_time=created_date_time, last_action_date_time=last_action_date_time, **kwargs)
        self.resource_location = resource_location
        self.resource_id = resource_id
        self.error = error
        self.percent_complete = percent_complete


class MicrosoftGraphOnenoteOperationError(msrest.serialization.Model):
    """onenoteOperationError.

    :param code: The error code.
    :type code: str
    :param message: The error message.
    :type message: str
    """

    _attribute_map = {
        'code': {'key': 'code', 'type': 'str'},
        'message': {'key': 'message', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        code: Optional[str] = None,
        message: Optional[str] = None,
        **kwargs
    ):
        super(MicrosoftGraphOnenoteOperationError, self).__init__(**kwargs)
        self.code = code
        self.message = message


class MicrosoftGraphOnenotePage(MicrosoftGraphOnenoteEntitySchemaObjectModel):
    """onenotePage.

    :param id: Read-only.
    :type id: str
    :param self_property: The endpoint where you can get details about the page. Read-only.
    :type self_property: str
    :param created_date_time: The date and time when the page was created. The timestamp represents
     date and time information using ISO 8601 format and is always in UTC time. For example,
     midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'. Read-only.
    :type created_date_time: ~datetime.datetime
    :param title: The title of the page.
    :type title: str
    :param created_by_app_id: The unique identifier of the application that created the page. Read-
     only.
    :type created_by_app_id: str
    :param links: pageLinks.
    :type links: ~users_one_note.models.MicrosoftGraphPageLinks
    :param content_url: The URL for the page's HTML content.  Read-only.
    :type content_url: str
    :param content: The page's HTML content.
    :type content: bytes
    :param last_modified_date_time: The date and time when the page was last modified. The
     timestamp represents date and time information using ISO 8601 format and is always in UTC time.
     For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'. Read-
     only.
    :type last_modified_date_time: ~datetime.datetime
    :param level: The indentation level of the page. Read-only.
    :type level: int
    :param order: The order of the page within its parent section. Read-only.
    :type order: int
    :param user_tags:
    :type user_tags: list[str]
    :param parent_section: onenoteSection.
    :type parent_section: ~users_one_note.models.MicrosoftGraphOnenoteSection
    :param parent_notebook: notebook.
    :type parent_notebook: ~users_one_note.models.MicrosoftGraphNotebook
    """

    _validation = {
        'level': {'maximum': 2147483647, 'minimum': -2147483648},
        'order': {'maximum': 2147483647, 'minimum': -2147483648},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'self_property': {'key': 'self', 'type': 'str'},
        'created_date_time': {'key': 'createdDateTime', 'type': 'iso-8601'},
        'title': {'key': 'title', 'type': 'str'},
        'created_by_app_id': {'key': 'createdByAppId', 'type': 'str'},
        'links': {'key': 'links', 'type': 'MicrosoftGraphPageLinks'},
        'content_url': {'key': 'contentUrl', 'type': 'str'},
        'content': {'key': 'content', 'type': 'base64'},
        'last_modified_date_time': {'key': 'lastModifiedDateTime', 'type': 'iso-8601'},
        'level': {'key': 'level', 'type': 'int'},
        'order': {'key': 'order', 'type': 'int'},
        'user_tags': {'key': 'userTags', 'type': '[str]'},
        'parent_section': {'key': 'parentSection', 'type': 'MicrosoftGraphOnenoteSection'},
        'parent_notebook': {'key': 'parentNotebook', 'type': 'MicrosoftGraphNotebook'},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,
        self_property: Optional[str] = None,
        created_date_time: Optional[datetime.datetime] = None,
        title: Optional[str] = None,
        created_by_app_id: Optional[str] = None,
        links: Optional["MicrosoftGraphPageLinks"] = None,
        content_url: Optional[str] = None,
        content: Optional[bytes] = None,
        last_modified_date_time: Optional[datetime.datetime] = None,
        level: Optional[int] = None,
        order: Optional[int] = None,
        user_tags: Optional[List[str]] = None,
        parent_section: Optional["MicrosoftGraphOnenoteSection"] = None,
        parent_notebook: Optional["MicrosoftGraphNotebook"] = None,
        **kwargs
    ):
        super(MicrosoftGraphOnenotePage, self).__init__(id=id, self_property=self_property, created_date_time=created_date_time, **kwargs)
        self.title = title
        self.created_by_app_id = created_by_app_id
        self.links = links
        self.content_url = content_url
        self.content = content
        self.last_modified_date_time = last_modified_date_time
        self.level = level
        self.order = order
        self.user_tags = user_tags
        self.parent_section = parent_section
        self.parent_notebook = parent_notebook


class MicrosoftGraphOnenoteResource(MicrosoftGraphOnenoteEntityBaseModel):
    """onenoteResource.

    :param id: Read-only.
    :type id: str
    :param self_property: The endpoint where you can get details about the page. Read-only.
    :type self_property: str
    :param content: The content stream.
    :type content: bytes
    :param content_url: The URL for downloading the content.
    :type content_url: str
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'self_property': {'key': 'self', 'type': 'str'},
        'content': {'key': 'content', 'type': 'base64'},
        'content_url': {'key': 'contentUrl', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,
        self_property: Optional[str] = None,
        content: Optional[bytes] = None,
        content_url: Optional[str] = None,
        **kwargs
    ):
        super(MicrosoftGraphOnenoteResource, self).__init__(id=id, self_property=self_property, **kwargs)
        self.content = content
        self.content_url = content_url


class MicrosoftGraphOnenoteSection(MicrosoftGraphOnenoteEntityHierarchyModel):
    """onenoteSection.

    :param id: Read-only.
    :type id: str
    :param self_property: The endpoint where you can get details about the page. Read-only.
    :type self_property: str
    :param created_date_time: The date and time when the page was created. The timestamp represents
     date and time information using ISO 8601 format and is always in UTC time. For example,
     midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'. Read-only.
    :type created_date_time: ~datetime.datetime
    :param display_name: The name of the notebook.
    :type display_name: str
    :param last_modified_date_time: The date and time when the notebook was last modified. The
     timestamp represents date and time information using ISO 8601 format and is always in UTC time.
     For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'. Read-
     only.
    :type last_modified_date_time: ~datetime.datetime
    :param application_last_modified_by_application: identity.
    :type application_last_modified_by_application: ~users_one_note.models.MicrosoftGraphIdentity
    :param device_last_modified_by_device: identity.
    :type device_last_modified_by_device: ~users_one_note.models.MicrosoftGraphIdentity
    :param user_last_modified_by_user: identity.
    :type user_last_modified_by_user: ~users_one_note.models.MicrosoftGraphIdentity
    :param application_created_by_application: identity.
    :type application_created_by_application: ~users_one_note.models.MicrosoftGraphIdentity
    :param device_created_by_device: identity.
    :type device_created_by_device: ~users_one_note.models.MicrosoftGraphIdentity
    :param user_created_by_user: identity.
    :type user_created_by_user: ~users_one_note.models.MicrosoftGraphIdentity
    :param is_default: Indicates whether this is the user's default section. Read-only.
    :type is_default: bool
    :param pages_url: The pages endpoint where you can get details for all the pages in the
     section. Read-only.
    :type pages_url: str
    :param parent_notebook: notebook.
    :type parent_notebook: ~users_one_note.models.MicrosoftGraphNotebook
    :param parent_section_group: sectionGroup.
    :type parent_section_group: ~users_one_note.models.MicrosoftGraphSectionGroup
    :param pages: The collection of pages in the section.  Read-only. Nullable.
    :type pages: list[~users_one_note.models.MicrosoftGraphOnenotePage]
    :param one_note_client_url: externalLink.
    :type one_note_client_url: ~users_one_note.models.MicrosoftGraphExternalLink
    :param one_note_web_url: externalLink.
    :type one_note_web_url: ~users_one_note.models.MicrosoftGraphExternalLink
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'self_property': {'key': 'self', 'type': 'str'},
        'created_date_time': {'key': 'createdDateTime', 'type': 'iso-8601'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'last_modified_date_time': {'key': 'lastModifiedDateTime', 'type': 'iso-8601'},
        'application_last_modified_by_application': {'key': 'lastModifiedBy.application', 'type': 'MicrosoftGraphIdentity'},
        'device_last_modified_by_device': {'key': 'lastModifiedBy.device', 'type': 'MicrosoftGraphIdentity'},
        'user_last_modified_by_user': {'key': 'lastModifiedBy.user', 'type': 'MicrosoftGraphIdentity'},
        'application_created_by_application': {'key': 'createdBy.application', 'type': 'MicrosoftGraphIdentity'},
        'device_created_by_device': {'key': 'createdBy.device', 'type': 'MicrosoftGraphIdentity'},
        'user_created_by_user': {'key': 'createdBy.user', 'type': 'MicrosoftGraphIdentity'},
        'is_default': {'key': 'isDefault', 'type': 'bool'},
        'pages_url': {'key': 'pagesUrl', 'type': 'str'},
        'parent_notebook': {'key': 'parentNotebook', 'type': 'MicrosoftGraphNotebook'},
        'parent_section_group': {'key': 'parentSectionGroup', 'type': 'MicrosoftGraphSectionGroup'},
        'pages': {'key': 'pages', 'type': '[MicrosoftGraphOnenotePage]'},
        'one_note_client_url': {'key': 'links.oneNoteClientUrl', 'type': 'MicrosoftGraphExternalLink'},
        'one_note_web_url': {'key': 'links.oneNoteWebUrl', 'type': 'MicrosoftGraphExternalLink'},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,
        self_property: Optional[str] = None,
        created_date_time: Optional[datetime.datetime] = None,
        display_name: Optional[str] = None,
        last_modified_date_time: Optional[datetime.datetime] = None,
        application_last_modified_by_application: Optional["MicrosoftGraphIdentity"] = None,
        device_last_modified_by_device: Optional["MicrosoftGraphIdentity"] = None,
        user_last_modified_by_user: Optional["MicrosoftGraphIdentity"] = None,
        application_created_by_application: Optional["MicrosoftGraphIdentity"] = None,
        device_created_by_device: Optional["MicrosoftGraphIdentity"] = None,
        user_created_by_user: Optional["MicrosoftGraphIdentity"] = None,
        is_default: Optional[bool] = None,
        pages_url: Optional[str] = None,
        parent_notebook: Optional["MicrosoftGraphNotebook"] = None,
        parent_section_group: Optional["MicrosoftGraphSectionGroup"] = None,
        pages: Optional[List["MicrosoftGraphOnenotePage"]] = None,
        one_note_client_url: Optional["MicrosoftGraphExternalLink"] = None,
        one_note_web_url: Optional["MicrosoftGraphExternalLink"] = None,
        **kwargs
    ):
        super(MicrosoftGraphOnenoteSection, self).__init__(id=id, self_property=self_property, created_date_time=created_date_time, display_name=display_name, last_modified_date_time=last_modified_date_time, application_last_modified_by_application=application_last_modified_by_application, device_last_modified_by_device=device_last_modified_by_device, user_last_modified_by_user=user_last_modified_by_user, application_created_by_application=application_created_by_application, device_created_by_device=device_created_by_device, user_created_by_user=user_created_by_user, **kwargs)
        self.is_default = is_default
        self.pages_url = pages_url
        self.parent_notebook = parent_notebook
        self.parent_section_group = parent_section_group
        self.pages = pages
        self.one_note_client_url = one_note_client_url
        self.one_note_web_url = one_note_web_url


class MicrosoftGraphPageLinks(msrest.serialization.Model):
    """pageLinks.

    :param one_note_client_url: externalLink.
    :type one_note_client_url: ~users_one_note.models.MicrosoftGraphExternalLink
    :param one_note_web_url: externalLink.
    :type one_note_web_url: ~users_one_note.models.MicrosoftGraphExternalLink
    """

    _attribute_map = {
        'one_note_client_url': {'key': 'oneNoteClientUrl', 'type': 'MicrosoftGraphExternalLink'},
        'one_note_web_url': {'key': 'oneNoteWebUrl', 'type': 'MicrosoftGraphExternalLink'},
    }

    def __init__(
        self,
        *,
        one_note_client_url: Optional["MicrosoftGraphExternalLink"] = None,
        one_note_web_url: Optional["MicrosoftGraphExternalLink"] = None,
        **kwargs
    ):
        super(MicrosoftGraphPageLinks, self).__init__(**kwargs)
        self.one_note_client_url = one_note_client_url
        self.one_note_web_url = one_note_web_url


class MicrosoftGraphSectionGroup(MicrosoftGraphOnenoteEntityHierarchyModel):
    """sectionGroup.

    :param id: Read-only.
    :type id: str
    :param self_property: The endpoint where you can get details about the page. Read-only.
    :type self_property: str
    :param created_date_time: The date and time when the page was created. The timestamp represents
     date and time information using ISO 8601 format and is always in UTC time. For example,
     midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'. Read-only.
    :type created_date_time: ~datetime.datetime
    :param display_name: The name of the notebook.
    :type display_name: str
    :param last_modified_date_time: The date and time when the notebook was last modified. The
     timestamp represents date and time information using ISO 8601 format and is always in UTC time.
     For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'. Read-
     only.
    :type last_modified_date_time: ~datetime.datetime
    :param application_last_modified_by_application: identity.
    :type application_last_modified_by_application: ~users_one_note.models.MicrosoftGraphIdentity
    :param device_last_modified_by_device: identity.
    :type device_last_modified_by_device: ~users_one_note.models.MicrosoftGraphIdentity
    :param user_last_modified_by_user: identity.
    :type user_last_modified_by_user: ~users_one_note.models.MicrosoftGraphIdentity
    :param application_created_by_application: identity.
    :type application_created_by_application: ~users_one_note.models.MicrosoftGraphIdentity
    :param device_created_by_device: identity.
    :type device_created_by_device: ~users_one_note.models.MicrosoftGraphIdentity
    :param user_created_by_user: identity.
    :type user_created_by_user: ~users_one_note.models.MicrosoftGraphIdentity
    :param sections_url: The URL for the sections navigation property, which returns all the
     sections in the section group. Read-only.
    :type sections_url: str
    :param section_groups_url: The URL for the sectionGroups navigation property, which returns all
     the section groups in the section group. Read-only.
    :type section_groups_url: str
    :param parent_notebook: notebook.
    :type parent_notebook: ~users_one_note.models.MicrosoftGraphNotebook
    :param parent_section_group: sectionGroup.
    :type parent_section_group: ~users_one_note.models.MicrosoftGraphSectionGroup
    :param sections: The sections in the section group. Read-only. Nullable.
    :type sections: list[~users_one_note.models.MicrosoftGraphOnenoteSection]
    :param section_groups: The section groups in the section. Read-only. Nullable.
    :type section_groups: list[~users_one_note.models.MicrosoftGraphSectionGroup]
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'self_property': {'key': 'self', 'type': 'str'},
        'created_date_time': {'key': 'createdDateTime', 'type': 'iso-8601'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'last_modified_date_time': {'key': 'lastModifiedDateTime', 'type': 'iso-8601'},
        'application_last_modified_by_application': {'key': 'lastModifiedBy.application', 'type': 'MicrosoftGraphIdentity'},
        'device_last_modified_by_device': {'key': 'lastModifiedBy.device', 'type': 'MicrosoftGraphIdentity'},
        'user_last_modified_by_user': {'key': 'lastModifiedBy.user', 'type': 'MicrosoftGraphIdentity'},
        'application_created_by_application': {'key': 'createdBy.application', 'type': 'MicrosoftGraphIdentity'},
        'device_created_by_device': {'key': 'createdBy.device', 'type': 'MicrosoftGraphIdentity'},
        'user_created_by_user': {'key': 'createdBy.user', 'type': 'MicrosoftGraphIdentity'},
        'sections_url': {'key': 'sectionsUrl', 'type': 'str'},
        'section_groups_url': {'key': 'sectionGroupsUrl', 'type': 'str'},
        'parent_notebook': {'key': 'parentNotebook', 'type': 'MicrosoftGraphNotebook'},
        'parent_section_group': {'key': 'parentSectionGroup', 'type': 'MicrosoftGraphSectionGroup'},
        'sections': {'key': 'sections', 'type': '[MicrosoftGraphOnenoteSection]'},
        'section_groups': {'key': 'sectionGroups', 'type': '[MicrosoftGraphSectionGroup]'},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,
        self_property: Optional[str] = None,
        created_date_time: Optional[datetime.datetime] = None,
        display_name: Optional[str] = None,
        last_modified_date_time: Optional[datetime.datetime] = None,
        application_last_modified_by_application: Optional["MicrosoftGraphIdentity"] = None,
        device_last_modified_by_device: Optional["MicrosoftGraphIdentity"] = None,
        user_last_modified_by_user: Optional["MicrosoftGraphIdentity"] = None,
        application_created_by_application: Optional["MicrosoftGraphIdentity"] = None,
        device_created_by_device: Optional["MicrosoftGraphIdentity"] = None,
        user_created_by_user: Optional["MicrosoftGraphIdentity"] = None,
        sections_url: Optional[str] = None,
        section_groups_url: Optional[str] = None,
        parent_notebook: Optional["MicrosoftGraphNotebook"] = None,
        parent_section_group: Optional["MicrosoftGraphSectionGroup"] = None,
        sections: Optional[List["MicrosoftGraphOnenoteSection"]] = None,
        section_groups: Optional[List["MicrosoftGraphSectionGroup"]] = None,
        **kwargs
    ):
        super(MicrosoftGraphSectionGroup, self).__init__(id=id, self_property=self_property, created_date_time=created_date_time, display_name=display_name, last_modified_date_time=last_modified_date_time, application_last_modified_by_application=application_last_modified_by_application, device_last_modified_by_device=device_last_modified_by_device, user_last_modified_by_user=user_last_modified_by_user, application_created_by_application=application_created_by_application, device_created_by_device=device_created_by_device, user_created_by_user=user_created_by_user, **kwargs)
        self.sections_url = sections_url
        self.section_groups_url = section_groups_url
        self.parent_notebook = parent_notebook
        self.parent_section_group = parent_section_group
        self.sections = sections
        self.section_groups = section_groups


class OdataError(msrest.serialization.Model):
    """OdataError.

    All required parameters must be populated in order to send to Azure.

    :param error: Required.
    :type error: ~users_one_note.models.OdataErrorMain
    """

    _validation = {
        'error': {'required': True},
    }

    _attribute_map = {
        'error': {'key': 'error', 'type': 'OdataErrorMain'},
    }

    def __init__(
        self,
        *,
        error: "OdataErrorMain",
        **kwargs
    ):
        super(OdataError, self).__init__(**kwargs)
        self.error = error


class OdataErrorDetail(msrest.serialization.Model):
    """OdataErrorDetail.

    All required parameters must be populated in order to send to Azure.

    :param code: Required.
    :type code: str
    :param message: Required.
    :type message: str
    :param target:
    :type target: str
    """

    _validation = {
        'code': {'required': True},
        'message': {'required': True},
    }

    _attribute_map = {
        'code': {'key': 'code', 'type': 'str'},
        'message': {'key': 'message', 'type': 'str'},
        'target': {'key': 'target', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        code: str,
        message: str,
        target: Optional[str] = None,
        **kwargs
    ):
        super(OdataErrorDetail, self).__init__(**kwargs)
        self.code = code
        self.message = message
        self.target = target


class OdataErrorMain(msrest.serialization.Model):
    """OdataErrorMain.

    All required parameters must be populated in order to send to Azure.

    :param code: Required.
    :type code: str
    :param message: Required.
    :type message: str
    :param target:
    :type target: str
    :param details:
    :type details: list[~users_one_note.models.OdataErrorDetail]
    :param innererror: The structure of this object is service-specific.
    :type innererror: object
    """

    _validation = {
        'code': {'required': True},
        'message': {'required': True},
    }

    _attribute_map = {
        'code': {'key': 'code', 'type': 'str'},
        'message': {'key': 'message', 'type': 'str'},
        'target': {'key': 'target', 'type': 'str'},
        'details': {'key': 'details', 'type': '[OdataErrorDetail]'},
        'innererror': {'key': 'innererror', 'type': 'object'},
    }

    def __init__(
        self,
        *,
        code: str,
        message: str,
        target: Optional[str] = None,
        details: Optional[List["OdataErrorDetail"]] = None,
        innererror: Optional[object] = None,
        **kwargs
    ):
        super(OdataErrorMain, self).__init__(**kwargs)
        self.code = code
        self.message = message
        self.target = target
        self.details = details
        self.innererror = innererror
