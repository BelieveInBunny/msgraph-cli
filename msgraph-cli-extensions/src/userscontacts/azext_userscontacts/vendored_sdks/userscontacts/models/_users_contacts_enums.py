# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from enum import Enum, EnumMeta
from six import with_metaclass

class _CaseInsensitiveEnumMeta(EnumMeta):
    def __getitem__(self, name):
        return super().__getitem__(name.upper())

    def __getattr__(cls, name):
        """Return the enum member matching `name`
        We use __getattr__ instead of descriptors or inserting into the enum
        class' __dict__ in order to support `name` and `value` being both
        properties for enum members (which live in the class' __dict__) and
        enum members themselves.
        """
        try:
            return cls._member_map_[name.upper()]
        except KeyError:
            raise AttributeError(name)


class Enum10(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    PARENT_FOLDER_ID = "parentFolderId"
    PARENT_FOLDER_ID_DESC = "parentFolderId desc"
    DISPLAY_NAME = "displayName"
    DISPLAY_NAME_DESC = "displayName desc"
    WELL_KNOWN_NAME = "wellKnownName"
    WELL_KNOWN_NAME_DESC = "wellKnownName desc"

class Enum11(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    PARENT_FOLDER_ID = "parentFolderId"
    DISPLAY_NAME = "displayName"
    WELL_KNOWN_NAME = "wellKnownName"
    SINGLE_VALUE_EXTENDED_PROPERTIES = "singleValueExtendedProperties"
    MULTI_VALUE_EXTENDED_PROPERTIES = "multiValueExtendedProperties"
    CONTACTS = "contacts"
    CHILD_FOLDERS = "childFolders"

class Enum13(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    PARENT_FOLDER_ID = "parentFolderId"
    DISPLAY_NAME = "displayName"
    WELL_KNOWN_NAME = "wellKnownName"
    SINGLE_VALUE_EXTENDED_PROPERTIES = "singleValueExtendedProperties"
    MULTI_VALUE_EXTENDED_PROPERTIES = "multiValueExtendedProperties"
    CONTACTS = "contacts"
    CHILD_FOLDERS = "childFolders"

class Enum15(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    CREATED_DATE_TIME = "createdDateTime"
    CREATED_DATE_TIME_DESC = "createdDateTime desc"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    LAST_MODIFIED_DATE_TIME_DESC = "lastModifiedDateTime desc"
    CHANGE_KEY = "changeKey"
    CHANGE_KEY_DESC = "changeKey desc"
    CATEGORIES = "categories"
    CATEGORIES_DESC = "categories desc"
    PARENT_FOLDER_ID = "parentFolderId"
    PARENT_FOLDER_ID_DESC = "parentFolderId desc"
    BIRTHDAY = "birthday"
    BIRTHDAY_DESC = "birthday desc"
    FILE_AS = "fileAs"
    FILE_AS_DESC = "fileAs desc"
    DISPLAY_NAME = "displayName"
    DISPLAY_NAME_DESC = "displayName desc"
    GIVEN_NAME = "givenName"
    GIVEN_NAME_DESC = "givenName desc"
    INITIALS = "initials"
    INITIALS_DESC = "initials desc"
    MIDDLE_NAME = "middleName"
    MIDDLE_NAME_DESC = "middleName desc"
    NICK_NAME = "nickName"
    NICK_NAME_DESC = "nickName desc"
    SURNAME = "surname"
    SURNAME_DESC = "surname desc"
    TITLE = "title"
    TITLE_DESC = "title desc"
    YOMI_GIVEN_NAME = "yomiGivenName"
    YOMI_GIVEN_NAME_DESC = "yomiGivenName desc"
    YOMI_SURNAME = "yomiSurname"
    YOMI_SURNAME_DESC = "yomiSurname desc"
    YOMI_COMPANY_NAME = "yomiCompanyName"
    YOMI_COMPANY_NAME_DESC = "yomiCompanyName desc"
    GENERATION = "generation"
    GENERATION_DESC = "generation desc"
    EMAIL_ADDRESSES = "emailAddresses"
    EMAIL_ADDRESSES_DESC = "emailAddresses desc"
    WEBSITES = "websites"
    WEBSITES_DESC = "websites desc"
    IM_ADDRESSES = "imAddresses"
    IM_ADDRESSES_DESC = "imAddresses desc"
    JOB_TITLE = "jobTitle"
    JOB_TITLE_DESC = "jobTitle desc"
    COMPANY_NAME = "companyName"
    COMPANY_NAME_DESC = "companyName desc"
    DEPARTMENT = "department"
    DEPARTMENT_DESC = "department desc"
    OFFICE_LOCATION = "officeLocation"
    OFFICE_LOCATION_DESC = "officeLocation desc"
    PROFESSION = "profession"
    PROFESSION_DESC = "profession desc"
    ASSISTANT_NAME = "assistantName"
    ASSISTANT_NAME_DESC = "assistantName desc"
    MANAGER = "manager"
    MANAGER_DESC = "manager desc"
    PHONES = "phones"
    PHONES_DESC = "phones desc"
    POSTAL_ADDRESSES = "postalAddresses"
    POSTAL_ADDRESSES_DESC = "postalAddresses desc"
    SPOUSE_NAME = "spouseName"
    SPOUSE_NAME_DESC = "spouseName desc"
    PERSONAL_NOTES = "personalNotes"
    PERSONAL_NOTES_DESC = "personalNotes desc"
    CHILDREN = "children"
    CHILDREN_DESC = "children desc"
    WEDDING_ANNIVERSARY = "weddingAnniversary"
    WEDDING_ANNIVERSARY_DESC = "weddingAnniversary desc"
    GENDER = "gender"
    GENDER_DESC = "gender desc"
    IS_FAVORITE = "isFavorite"
    IS_FAVORITE_DESC = "isFavorite desc"
    FLAG = "flag"
    FLAG_DESC = "flag desc"

class Enum16(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CREATED_DATE_TIME = "createdDateTime"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    CHANGE_KEY = "changeKey"
    CATEGORIES = "categories"
    PARENT_FOLDER_ID = "parentFolderId"
    BIRTHDAY = "birthday"
    FILE_AS = "fileAs"
    DISPLAY_NAME = "displayName"
    GIVEN_NAME = "givenName"
    INITIALS = "initials"
    MIDDLE_NAME = "middleName"
    NICK_NAME = "nickName"
    SURNAME = "surname"
    TITLE = "title"
    YOMI_GIVEN_NAME = "yomiGivenName"
    YOMI_SURNAME = "yomiSurname"
    YOMI_COMPANY_NAME = "yomiCompanyName"
    GENERATION = "generation"
    EMAIL_ADDRESSES = "emailAddresses"
    WEBSITES = "websites"
    IM_ADDRESSES = "imAddresses"
    JOB_TITLE = "jobTitle"
    COMPANY_NAME = "companyName"
    DEPARTMENT = "department"
    OFFICE_LOCATION = "officeLocation"
    PROFESSION = "profession"
    ASSISTANT_NAME = "assistantName"
    MANAGER = "manager"
    PHONES = "phones"
    POSTAL_ADDRESSES = "postalAddresses"
    SPOUSE_NAME = "spouseName"
    PERSONAL_NOTES = "personalNotes"
    CHILDREN = "children"
    WEDDING_ANNIVERSARY = "weddingAnniversary"
    GENDER = "gender"
    IS_FAVORITE = "isFavorite"
    FLAG = "flag"
    SINGLE_VALUE_EXTENDED_PROPERTIES = "singleValueExtendedProperties"
    MULTI_VALUE_EXTENDED_PROPERTIES = "multiValueExtendedProperties"
    PHOTO = "photo"
    EXTENSIONS = "extensions"

class Enum17(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    SINGLE_VALUE_EXTENDED_PROPERTIES = "singleValueExtendedProperties"
    MULTI_VALUE_EXTENDED_PROPERTIES = "multiValueExtendedProperties"
    PHOTO = "photo"
    EXTENSIONS = "extensions"

class Enum18(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CREATED_DATE_TIME = "createdDateTime"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    CHANGE_KEY = "changeKey"
    CATEGORIES = "categories"
    PARENT_FOLDER_ID = "parentFolderId"
    BIRTHDAY = "birthday"
    FILE_AS = "fileAs"
    DISPLAY_NAME = "displayName"
    GIVEN_NAME = "givenName"
    INITIALS = "initials"
    MIDDLE_NAME = "middleName"
    NICK_NAME = "nickName"
    SURNAME = "surname"
    TITLE = "title"
    YOMI_GIVEN_NAME = "yomiGivenName"
    YOMI_SURNAME = "yomiSurname"
    YOMI_COMPANY_NAME = "yomiCompanyName"
    GENERATION = "generation"
    EMAIL_ADDRESSES = "emailAddresses"
    WEBSITES = "websites"
    IM_ADDRESSES = "imAddresses"
    JOB_TITLE = "jobTitle"
    COMPANY_NAME = "companyName"
    DEPARTMENT = "department"
    OFFICE_LOCATION = "officeLocation"
    PROFESSION = "profession"
    ASSISTANT_NAME = "assistantName"
    MANAGER = "manager"
    PHONES = "phones"
    POSTAL_ADDRESSES = "postalAddresses"
    SPOUSE_NAME = "spouseName"
    PERSONAL_NOTES = "personalNotes"
    CHILDREN = "children"
    WEDDING_ANNIVERSARY = "weddingAnniversary"
    GENDER = "gender"
    IS_FAVORITE = "isFavorite"
    FLAG = "flag"
    SINGLE_VALUE_EXTENDED_PROPERTIES = "singleValueExtendedProperties"
    MULTI_VALUE_EXTENDED_PROPERTIES = "multiValueExtendedProperties"
    PHOTO = "photo"
    EXTENSIONS = "extensions"

class Enum19(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    SINGLE_VALUE_EXTENDED_PROPERTIES = "singleValueExtendedProperties"
    MULTI_VALUE_EXTENDED_PROPERTIES = "multiValueExtendedProperties"
    PHOTO = "photo"
    EXTENSIONS = "extensions"

class Enum20(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"

class Enum21(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    VALUE = "value"
    VALUE_DESC = "value desc"

class Enum22(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    VALUE = "value"

class Enum23(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    VALUE = "value"

class Enum24(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    HEIGHT = "height"
    WIDTH = "width"

class Enum25(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    VALUE = "value"
    VALUE_DESC = "value desc"

class Enum26(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    VALUE = "value"

class Enum27(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    VALUE = "value"

class Enum28(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    VALUE = "value"
    VALUE_DESC = "value desc"

class Enum29(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    VALUE = "value"

class Enum30(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    VALUE = "value"

class Enum31(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    VALUE = "value"
    VALUE_DESC = "value desc"

class Enum32(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    VALUE = "value"

class Enum33(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    VALUE = "value"

class Enum34(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    CREATED_DATE_TIME = "createdDateTime"
    CREATED_DATE_TIME_DESC = "createdDateTime desc"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    LAST_MODIFIED_DATE_TIME_DESC = "lastModifiedDateTime desc"
    CHANGE_KEY = "changeKey"
    CHANGE_KEY_DESC = "changeKey desc"
    CATEGORIES = "categories"
    CATEGORIES_DESC = "categories desc"
    PARENT_FOLDER_ID = "parentFolderId"
    PARENT_FOLDER_ID_DESC = "parentFolderId desc"
    BIRTHDAY = "birthday"
    BIRTHDAY_DESC = "birthday desc"
    FILE_AS = "fileAs"
    FILE_AS_DESC = "fileAs desc"
    DISPLAY_NAME = "displayName"
    DISPLAY_NAME_DESC = "displayName desc"
    GIVEN_NAME = "givenName"
    GIVEN_NAME_DESC = "givenName desc"
    INITIALS = "initials"
    INITIALS_DESC = "initials desc"
    MIDDLE_NAME = "middleName"
    MIDDLE_NAME_DESC = "middleName desc"
    NICK_NAME = "nickName"
    NICK_NAME_DESC = "nickName desc"
    SURNAME = "surname"
    SURNAME_DESC = "surname desc"
    TITLE = "title"
    TITLE_DESC = "title desc"
    YOMI_GIVEN_NAME = "yomiGivenName"
    YOMI_GIVEN_NAME_DESC = "yomiGivenName desc"
    YOMI_SURNAME = "yomiSurname"
    YOMI_SURNAME_DESC = "yomiSurname desc"
    YOMI_COMPANY_NAME = "yomiCompanyName"
    YOMI_COMPANY_NAME_DESC = "yomiCompanyName desc"
    GENERATION = "generation"
    GENERATION_DESC = "generation desc"
    EMAIL_ADDRESSES = "emailAddresses"
    EMAIL_ADDRESSES_DESC = "emailAddresses desc"
    WEBSITES = "websites"
    WEBSITES_DESC = "websites desc"
    IM_ADDRESSES = "imAddresses"
    IM_ADDRESSES_DESC = "imAddresses desc"
    JOB_TITLE = "jobTitle"
    JOB_TITLE_DESC = "jobTitle desc"
    COMPANY_NAME = "companyName"
    COMPANY_NAME_DESC = "companyName desc"
    DEPARTMENT = "department"
    DEPARTMENT_DESC = "department desc"
    OFFICE_LOCATION = "officeLocation"
    OFFICE_LOCATION_DESC = "officeLocation desc"
    PROFESSION = "profession"
    PROFESSION_DESC = "profession desc"
    ASSISTANT_NAME = "assistantName"
    ASSISTANT_NAME_DESC = "assistantName desc"
    MANAGER = "manager"
    MANAGER_DESC = "manager desc"
    PHONES = "phones"
    PHONES_DESC = "phones desc"
    POSTAL_ADDRESSES = "postalAddresses"
    POSTAL_ADDRESSES_DESC = "postalAddresses desc"
    SPOUSE_NAME = "spouseName"
    SPOUSE_NAME_DESC = "spouseName desc"
    PERSONAL_NOTES = "personalNotes"
    PERSONAL_NOTES_DESC = "personalNotes desc"
    CHILDREN = "children"
    CHILDREN_DESC = "children desc"
    WEDDING_ANNIVERSARY = "weddingAnniversary"
    WEDDING_ANNIVERSARY_DESC = "weddingAnniversary desc"
    GENDER = "gender"
    GENDER_DESC = "gender desc"
    IS_FAVORITE = "isFavorite"
    IS_FAVORITE_DESC = "isFavorite desc"
    FLAG = "flag"
    FLAG_DESC = "flag desc"

class Enum35(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CREATED_DATE_TIME = "createdDateTime"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    CHANGE_KEY = "changeKey"
    CATEGORIES = "categories"
    PARENT_FOLDER_ID = "parentFolderId"
    BIRTHDAY = "birthday"
    FILE_AS = "fileAs"
    DISPLAY_NAME = "displayName"
    GIVEN_NAME = "givenName"
    INITIALS = "initials"
    MIDDLE_NAME = "middleName"
    NICK_NAME = "nickName"
    SURNAME = "surname"
    TITLE = "title"
    YOMI_GIVEN_NAME = "yomiGivenName"
    YOMI_SURNAME = "yomiSurname"
    YOMI_COMPANY_NAME = "yomiCompanyName"
    GENERATION = "generation"
    EMAIL_ADDRESSES = "emailAddresses"
    WEBSITES = "websites"
    IM_ADDRESSES = "imAddresses"
    JOB_TITLE = "jobTitle"
    COMPANY_NAME = "companyName"
    DEPARTMENT = "department"
    OFFICE_LOCATION = "officeLocation"
    PROFESSION = "profession"
    ASSISTANT_NAME = "assistantName"
    MANAGER = "manager"
    PHONES = "phones"
    POSTAL_ADDRESSES = "postalAddresses"
    SPOUSE_NAME = "spouseName"
    PERSONAL_NOTES = "personalNotes"
    CHILDREN = "children"
    WEDDING_ANNIVERSARY = "weddingAnniversary"
    GENDER = "gender"
    IS_FAVORITE = "isFavorite"
    FLAG = "flag"
    SINGLE_VALUE_EXTENDED_PROPERTIES = "singleValueExtendedProperties"
    MULTI_VALUE_EXTENDED_PROPERTIES = "multiValueExtendedProperties"
    PHOTO = "photo"
    EXTENSIONS = "extensions"

class Enum36(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    SINGLE_VALUE_EXTENDED_PROPERTIES = "singleValueExtendedProperties"
    MULTI_VALUE_EXTENDED_PROPERTIES = "multiValueExtendedProperties"
    PHOTO = "photo"
    EXTENSIONS = "extensions"

class Enum37(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CREATED_DATE_TIME = "createdDateTime"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    CHANGE_KEY = "changeKey"
    CATEGORIES = "categories"
    PARENT_FOLDER_ID = "parentFolderId"
    BIRTHDAY = "birthday"
    FILE_AS = "fileAs"
    DISPLAY_NAME = "displayName"
    GIVEN_NAME = "givenName"
    INITIALS = "initials"
    MIDDLE_NAME = "middleName"
    NICK_NAME = "nickName"
    SURNAME = "surname"
    TITLE = "title"
    YOMI_GIVEN_NAME = "yomiGivenName"
    YOMI_SURNAME = "yomiSurname"
    YOMI_COMPANY_NAME = "yomiCompanyName"
    GENERATION = "generation"
    EMAIL_ADDRESSES = "emailAddresses"
    WEBSITES = "websites"
    IM_ADDRESSES = "imAddresses"
    JOB_TITLE = "jobTitle"
    COMPANY_NAME = "companyName"
    DEPARTMENT = "department"
    OFFICE_LOCATION = "officeLocation"
    PROFESSION = "profession"
    ASSISTANT_NAME = "assistantName"
    MANAGER = "manager"
    PHONES = "phones"
    POSTAL_ADDRESSES = "postalAddresses"
    SPOUSE_NAME = "spouseName"
    PERSONAL_NOTES = "personalNotes"
    CHILDREN = "children"
    WEDDING_ANNIVERSARY = "weddingAnniversary"
    GENDER = "gender"
    IS_FAVORITE = "isFavorite"
    FLAG = "flag"
    SINGLE_VALUE_EXTENDED_PROPERTIES = "singleValueExtendedProperties"
    MULTI_VALUE_EXTENDED_PROPERTIES = "multiValueExtendedProperties"
    PHOTO = "photo"
    EXTENSIONS = "extensions"

class Enum38(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    SINGLE_VALUE_EXTENDED_PROPERTIES = "singleValueExtendedProperties"
    MULTI_VALUE_EXTENDED_PROPERTIES = "multiValueExtendedProperties"
    PHOTO = "photo"
    EXTENSIONS = "extensions"

class Enum39(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"

class Enum40(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    VALUE = "value"
    VALUE_DESC = "value desc"

class Enum41(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    VALUE = "value"

class Enum42(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    VALUE = "value"

class Enum43(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    HEIGHT = "height"
    WIDTH = "width"

class Enum44(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    VALUE = "value"
    VALUE_DESC = "value desc"

class Enum45(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    VALUE = "value"

class Enum46(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    VALUE = "value"

class Get2ItemsItem(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    PARENT_FOLDER_ID = "parentFolderId"
    DISPLAY_NAME = "displayName"
    WELL_KNOWN_NAME = "wellKnownName"
    SINGLE_VALUE_EXTENDED_PROPERTIES = "singleValueExtendedProperties"
    MULTI_VALUE_EXTENDED_PROPERTIES = "multiValueExtendedProperties"
    CONTACTS = "contacts"
    CHILD_FOLDERS = "childFolders"

class Get3ItemsItem(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    SINGLE_VALUE_EXTENDED_PROPERTIES = "singleValueExtendedProperties"
    MULTI_VALUE_EXTENDED_PROPERTIES = "multiValueExtendedProperties"
    CONTACTS = "contacts"
    CHILD_FOLDERS = "childFolders"

class Get4ItemsItem(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    SINGLE_VALUE_EXTENDED_PROPERTIES = "singleValueExtendedProperties"
    MULTI_VALUE_EXTENDED_PROPERTIES = "multiValueExtendedProperties"
    CONTACTS = "contacts"
    CHILD_FOLDERS = "childFolders"

class Get6ItemsItem(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    PARENT_FOLDER_ID = "parentFolderId"
    PARENT_FOLDER_ID_DESC = "parentFolderId desc"
    DISPLAY_NAME = "displayName"
    DISPLAY_NAME_DESC = "displayName desc"
    WELL_KNOWN_NAME = "wellKnownName"
    WELL_KNOWN_NAME_DESC = "wellKnownName desc"

class Get7ItemsItem(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    PARENT_FOLDER_ID = "parentFolderId"
    DISPLAY_NAME = "displayName"
    WELL_KNOWN_NAME = "wellKnownName"
    SINGLE_VALUE_EXTENDED_PROPERTIES = "singleValueExtendedProperties"
    MULTI_VALUE_EXTENDED_PROPERTIES = "multiValueExtendedProperties"
    CONTACTS = "contacts"
    CHILD_FOLDERS = "childFolders"

class Get8ItemsItem(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    SINGLE_VALUE_EXTENDED_PROPERTIES = "singleValueExtendedProperties"
    MULTI_VALUE_EXTENDED_PROPERTIES = "multiValueExtendedProperties"
    CONTACTS = "contacts"
    CHILD_FOLDERS = "childFolders"

class Get9ItemsItem(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    SINGLE_VALUE_EXTENDED_PROPERTIES = "singleValueExtendedProperties"
    MULTI_VALUE_EXTENDED_PROPERTIES = "multiValueExtendedProperties"
    CONTACTS = "contacts"
    CHILD_FOLDERS = "childFolders"

class MicrosoftGraphEmailType(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    UNKNOWN = "unknown"
    WORK = "work"
    PERSONAL = "personal"
    MAIN = "main"
    OTHER = "other"

class MicrosoftGraphFollowupFlagStatus(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    NOT_FLAGGED = "notFlagged"
    COMPLETE = "complete"
    FLAGGED = "flagged"

class MicrosoftGraphPhoneType(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    HOME = "home"
    BUSINESS = "business"
    MOBILE = "mobile"
    OTHER = "other"
    ASSISTANT = "assistant"
    HOME_FAX = "homeFax"
    BUSINESS_FAX = "businessFax"
    OTHER_FAX = "otherFax"
    PAGER = "pager"
    RADIO = "radio"

class MicrosoftGraphPhysicalAddressType(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    UNKNOWN = "unknown"
    HOME = "home"
    BUSINESS = "business"
    OTHER = "other"

class MicrosoftGraphWebsiteType(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    OTHER = "other"
    HOME = "home"
    WORK = "work"
    BLOG = "blog"
    PROFILE = "profile"
