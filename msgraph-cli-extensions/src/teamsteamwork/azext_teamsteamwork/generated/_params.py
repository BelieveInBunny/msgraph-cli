# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=too-many-lines
# pylint: disable=too-many-statements

from msgraph.cli.core.commands.parameters import get_enum_type
from msgraph.cli.core.commands.validators import validate_file_or_dict
from azext_teamsteamwork.action import (
    AddTeamsAppDefinition,
    AddTeamsAppAppDefinitions
)


def load_arguments(self, _):

    with self.argument_context('teamsteamwork get-teamwork') as c:
        c.argument('user_id', type=str, help='key: user-id of user')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('teamsteamwork update-teamwork') as c:
        c.argument('user_id', type=str, help='key: user-id of user')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('installed_apps', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')

    with self.argument_context('teamsteamwork create-installed-app') as c:
        c.argument('user_id', type=str, help='key: user-id of user')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('teams_app_definition', action=AddTeamsAppDefinition, nargs='*', help='teamsAppDefinition')
        c.argument('teams_app_id', type=str, help='Read-only.')
        c.argument('teams_app_external_id', type=str, help='The ID of the catalog provided by the app developer in the '
                   'Microsoft Teams zip app package.')
        c.argument('teams_app_name', type=str, help='')
        c.argument('teams_app_display_name', type=str, help='The name of the catalog app provided by the app developer '
                   'in the Microsoft Teams zip app package.')
        c.argument('teams_app_distribution_method', arg_type=get_enum_type(['store', 'organization', 'sideloaded', ''
                                                                            'unknownFutureValue']), help='')
        c.argument('teams_app_app_definitions', action=AddTeamsAppAppDefinitions, nargs='*', help='The details for '
                   'each version of the app.')

    with self.argument_context('teamsteamwork get-installed-app') as c:
        c.argument('user_id', type=str, help='key: user-id of user')
        c.argument('teams_app_installation_id', type=str, help='key: teamsAppInstallation-id of teamsAppInstallation')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('teamsteamwork list-installed-app') as c:
        c.argument('user_id', type=str, help='key: user-id of user')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('teamsteamwork update-installed-app') as c:
        c.argument('user_id', type=str, help='key: user-id of user')
        c.argument('teams_app_installation_id', type=str, help='key: teamsAppInstallation-id of teamsAppInstallation')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('teams_app_definition', action=AddTeamsAppDefinition, nargs='*', help='teamsAppDefinition')
        c.argument('teams_app_id', type=str, help='Read-only.')
        c.argument('teams_app_external_id', type=str, help='The ID of the catalog provided by the app developer in the '
                   'Microsoft Teams zip app package.')
        c.argument('teams_app_name', type=str, help='')
        c.argument('teams_app_display_name', type=str, help='The name of the catalog app provided by the app developer '
                   'in the Microsoft Teams zip app package.')
        c.argument('teams_app_distribution_method', arg_type=get_enum_type(['store', 'organization', 'sideloaded', ''
                                                                            'unknownFutureValue']), help='')
        c.argument('teams_app_app_definitions', action=AddTeamsAppAppDefinitions, nargs='*', help='The details for '
                   'each version of the app.')

    with self.argument_context('teamsteamwork get-team-app') as c:
        c.argument('user_id', type=str, help='key: user-id of user')
        c.argument('teams_app_installation_id', type=str, help='key: teamsAppInstallation-id of teamsAppInstallation')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('teamsteamwork get-team-app-definition') as c:
        c.argument('user_id', type=str, help='key: user-id of user')
        c.argument('teams_app_installation_id', type=str, help='key: teamsAppInstallation-id of teamsAppInstallation')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')
