# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=line-too-long
# pylint: disable=too-many-lines
# pylint: disable=too-many-statements
# pylint: disable=too-many-locals

from msgraph.cli.core.commands import CliCommandType


def load_command_table(self, _):

    from azext_notes.generated._client_factory import cf_group
    notes_group = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._group_operations#GroupOperations.{}',
        client_factory=cf_group)
    with self.command_group('notes', notes_group, client_factory=cf_group) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('get-onenote', 'notes_get_onenote')
        g.custom_command('update-onenote', 'notes_update_onenote')

    from azext_notes.generated._client_factory import cf_group_onenote
    notes_group_onenote = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._group_onenote_operations#GroupOnenoteOperations.{}'
        '',
        client_factory=cf_group_onenote)
    with self.command_group('notes', notes_group_onenote, client_factory=cf_group_onenote) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('create-notebook', 'notes_create_notebook')
        g.custom_command('create-operation', 'notes_create_operation')
        g.custom_command('create-page', 'notes_create_page')
        g.custom_command('create-resource', 'notes_create_resource')
        g.custom_command('create-section', 'notes_create_section')
        g.custom_command('create-section-group', 'notes_create_section_group')
        g.custom_command('get-notebook', 'notes_get_notebook')
        g.custom_command('get-operation', 'notes_get_operation')
        g.custom_command('get-page', 'notes_get_page')
        g.custom_command('get-page-content', 'notes_get_page_content')
        g.custom_command('get-resource', 'notes_get_resource')
        g.custom_command('get-resource-content', 'notes_get_resource_content')
        g.custom_command('get-section', 'notes_get_section')
        g.custom_command('get-section-group', 'notes_get_section_group')
        g.custom_command('list-notebook', 'notes_list_notebook')
        g.custom_command('list-operation', 'notes_list_operation')
        g.custom_command('list-page', 'notes_list_page')
        g.custom_command('list-resource', 'notes_list_resource')
        g.custom_command('list-section', 'notes_list_section')
        g.custom_command('list-section-group', 'notes_list_section_group')
        g.custom_command('set-page-content', 'notes_set_page_content')
        g.custom_command('set-resource-content', 'notes_set_resource_content')
        g.custom_command('update-notebook', 'notes_update_notebook')
        g.custom_command('update-operation', 'notes_update_operation')
        g.custom_command('update-page', 'notes_update_page')
        g.custom_command('update-resource', 'notes_update_resource')
        g.custom_command('update-section', 'notes_update_section')
        g.custom_command('update-section-group', 'notes_update_section_group')

    from azext_notes.generated._client_factory import cf_group_onenote_notebook
    notes_group_onenote_notebook = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._group_onenote_notebook_operations#GroupOnenoteNote'
        'bookOperations.{}',
        client_factory=cf_group_onenote_notebook)
    with self.command_group('notes', notes_group_onenote_notebook, client_factory=cf_group_onenote_notebook) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('create-section', 'notes_create_section')
        g.custom_command('create-section-group', 'notes_create_section_group')
        g.custom_command('get-section', 'notes_get_section')
        g.custom_command('get-section-group', 'notes_get_section_group')
        g.custom_command('list-section', 'notes_list_section')
        g.custom_command('list-section-group', 'notes_list_section_group')
        g.custom_command('update-section', 'notes_update_section')
        g.custom_command('update-section-group', 'notes_update_section_group')

    from azext_notes.generated._client_factory import cf_group_onenote_notebook_section_group
    notes_group_onenote_notebook_section_group = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._group_onenote_notebook_section_group_operations#Gr'
        'oupOnenoteNotebookSectionGroupOperations.{}',
        client_factory=cf_group_onenote_notebook_section_group)
    with self.command_group('notes', notes_group_onenote_notebook_section_group,
                            client_factory=cf_group_onenote_notebook_section_group) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('create-section', 'notes_create_section')
        g.custom_command('create-section-group', 'notes_create_section_group')
        g.custom_command('get-parent-notebook', 'notes_get_parent_notebook')
        g.custom_command('get-parent-section-group', 'notes_get_parent_section_group')
        g.custom_command('get-section', 'notes_get_section')
        g.custom_command('get-section-group', 'notes_get_section_group')
        g.custom_command('list-section', 'notes_list_section')
        g.custom_command('list-section-group', 'notes_list_section_group')
        g.custom_command('update-parent-notebook', 'notes_update_parent_notebook')
        g.custom_command('update-parent-section-group', 'notes_update_parent_section_group')
        g.custom_command('update-section', 'notes_update_section')
        g.custom_command('update-section-group', 'notes_update_section_group')

    from azext_notes.generated._client_factory import cf_group_onenote_notebook_section_group_section
    notes_group_onenote_notebook_section_group_section = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._group_onenote_notebook_section_group_section_opera'
        'tions#GroupOnenoteNotebookSectionGroupSectionOperations.{}',
        client_factory=cf_group_onenote_notebook_section_group_section)
    with self.command_group('notes', notes_group_onenote_notebook_section_group_section,
                            client_factory=cf_group_onenote_notebook_section_group_section) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('create-page', 'notes_create_page')
        g.custom_command('get-page', 'notes_get_page')
        g.custom_command('get-page-content', 'notes_get_page_content')
        g.custom_command('get-parent-notebook', 'notes_get_parent_notebook')
        g.custom_command('get-parent-section-group', 'notes_get_parent_section_group')
        g.custom_command('list-page', 'notes_list_page')
        g.custom_command('set-page-content', 'notes_set_page_content')
        g.custom_command('update-page', 'notes_update_page')
        g.custom_command('update-parent-notebook', 'notes_update_parent_notebook')
        g.custom_command('update-parent-section-group', 'notes_update_parent_section_group')

    from azext_notes.generated._client_factory import cf_group_onenote_notebook_section_group_section_page
    notes_group_onenote_notebook_section_group_section_page = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._group_onenote_notebook_section_group_section_page_'
        'operations#GroupOnenoteNotebookSectionGroupSectionPageOperations.{}',
        client_factory=cf_group_onenote_notebook_section_group_section_page)
    with self.command_group('notes', notes_group_onenote_notebook_section_group_section_page,
                            client_factory=cf_group_onenote_notebook_section_group_section_page) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('get-parent-notebook', 'notes_get_parent_notebook')
        g.custom_command('get-parent-section', 'notes_get_parent_section')
        g.custom_command('update-parent-notebook', 'notes_update_parent_notebook')
        g.custom_command('update-parent-section', 'notes_update_parent_section')

    from azext_notes.generated._client_factory import cf_group_onenote_notebook_section
    notes_group_onenote_notebook_section = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._group_onenote_notebook_section_operations#GroupOne'
        'noteNotebookSectionOperations.{}',
        client_factory=cf_group_onenote_notebook_section)
    with self.command_group('notes', notes_group_onenote_notebook_section,
                            client_factory=cf_group_onenote_notebook_section) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('create-page', 'notes_create_page')
        g.custom_command('get-page', 'notes_get_page')
        g.custom_command('get-page-content', 'notes_get_page_content')
        g.custom_command('get-parent-notebook', 'notes_get_parent_notebook')
        g.custom_command('get-parent-section-group', 'notes_get_parent_section_group')
        g.custom_command('list-page', 'notes_list_page')
        g.custom_command('set-page-content', 'notes_set_page_content')
        g.custom_command('update-page', 'notes_update_page')
        g.custom_command('update-parent-notebook', 'notes_update_parent_notebook')
        g.custom_command('update-parent-section-group', 'notes_update_parent_section_group')

    from azext_notes.generated._client_factory import cf_group_onenote_notebook_section_page
    notes_group_onenote_notebook_section_page = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._group_onenote_notebook_section_page_operations#Gro'
        'upOnenoteNotebookSectionPageOperations.{}',
        client_factory=cf_group_onenote_notebook_section_page)
    with self.command_group('notes', notes_group_onenote_notebook_section_page,
                            client_factory=cf_group_onenote_notebook_section_page) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('get-parent-notebook', 'notes_get_parent_notebook')
        g.custom_command('get-parent-section', 'notes_get_parent_section')
        g.custom_command('update-parent-notebook', 'notes_update_parent_notebook')
        g.custom_command('update-parent-section', 'notes_update_parent_section')

    from azext_notes.generated._client_factory import cf_group_onenote_notebook_section_parent_section_group
    notes_group_onenote_notebook_section_parent_section_group = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._group_onenote_notebook_section_parent_section_grou'
        'p_operations#GroupOnenoteNotebookSectionParentSectionGroupOperations.{}',
        client_factory=cf_group_onenote_notebook_section_parent_section_group)
    with self.command_group('notes', notes_group_onenote_notebook_section_parent_section_group,
                            client_factory=cf_group_onenote_notebook_section_parent_section_group) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('create-section', 'notes_create_section')
        g.custom_command('create-section-group', 'notes_create_section_group')
        g.custom_command('get-parent-notebook', 'notes_get_parent_notebook')
        g.custom_command('get-parent-section-group', 'notes_get_parent_section_group')
        g.custom_command('get-section', 'notes_get_section')
        g.custom_command('get-section-group', 'notes_get_section_group')
        g.custom_command('list-section', 'notes_list_section')
        g.custom_command('list-section-group', 'notes_list_section_group')
        g.custom_command('update-parent-notebook', 'notes_update_parent_notebook')
        g.custom_command('update-parent-section-group', 'notes_update_parent_section_group')
        g.custom_command('update-section', 'notes_update_section')
        g.custom_command('update-section-group', 'notes_update_section_group')

    from azext_notes.generated._client_factory import cf_group_onenote_page
    notes_group_onenote_page = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._group_onenote_page_operations#GroupOnenotePageOper'
        'ations.{}',
        client_factory=cf_group_onenote_page)
    with self.command_group('notes', notes_group_onenote_page, client_factory=cf_group_onenote_page) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('get-parent-notebook', 'notes_get_parent_notebook')
        g.custom_command('get-parent-section', 'notes_get_parent_section')
        g.custom_command('update-parent-notebook', 'notes_update_parent_notebook')
        g.custom_command('update-parent-section', 'notes_update_parent_section')

    from azext_notes.generated._client_factory import cf_group_onenote_page_parent_notebook
    notes_group_onenote_page_parent_notebook = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._group_onenote_page_parent_notebook_operations#Grou'
        'pOnenotePageParentNotebookOperations.{}',
        client_factory=cf_group_onenote_page_parent_notebook)
    with self.command_group('notes', notes_group_onenote_page_parent_notebook,
                            client_factory=cf_group_onenote_page_parent_notebook) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('create-section', 'notes_create_section')
        g.custom_command('create-section-group', 'notes_create_section_group')
        g.custom_command('get-section', 'notes_get_section')
        g.custom_command('get-section-group', 'notes_get_section_group')
        g.custom_command('list-section', 'notes_list_section')
        g.custom_command('list-section-group', 'notes_list_section_group')
        g.custom_command('update-section', 'notes_update_section')
        g.custom_command('update-section-group', 'notes_update_section_group')

    from azext_notes.generated._client_factory import cf_group_onenote_page_parent_notebook_section_group
    notes_group_onenote_page_parent_notebook_section_group = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._group_onenote_page_parent_notebook_section_group_o'
        'perations#GroupOnenotePageParentNotebookSectionGroupOperations.{}',
        client_factory=cf_group_onenote_page_parent_notebook_section_group)
    with self.command_group('notes', notes_group_onenote_page_parent_notebook_section_group,
                            client_factory=cf_group_onenote_page_parent_notebook_section_group) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('create-section', 'notes_create_section')
        g.custom_command('create-section-group', 'notes_create_section_group')
        g.custom_command('get-parent-notebook', 'notes_get_parent_notebook')
        g.custom_command('get-parent-section-group', 'notes_get_parent_section_group')
        g.custom_command('get-section', 'notes_get_section')
        g.custom_command('get-section-group', 'notes_get_section_group')
        g.custom_command('list-section', 'notes_list_section')
        g.custom_command('list-section-group', 'notes_list_section_group')
        g.custom_command('update-parent-notebook', 'notes_update_parent_notebook')
        g.custom_command('update-parent-section-group', 'notes_update_parent_section_group')
        g.custom_command('update-section', 'notes_update_section')
        g.custom_command('update-section-group', 'notes_update_section_group')

    from azext_notes.generated._client_factory import cf_group_onenote_page_parent_notebook_section_group_section
    notes_group_onenote_page_parent_notebook_section_group_section = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._group_onenote_page_parent_notebook_section_group_s'
        'ection_operations#GroupOnenotePageParentNotebookSectionGroupSectionOperations.{}',
        client_factory=cf_group_onenote_page_parent_notebook_section_group_section)
    with self.command_group('notes', notes_group_onenote_page_parent_notebook_section_group_section,
                            client_factory=cf_group_onenote_page_parent_notebook_section_group_section) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('create-page', 'notes_create_page')
        g.custom_command('get-page', 'notes_get_page')
        g.custom_command('get-parent-notebook', 'notes_get_parent_notebook')
        g.custom_command('get-parent-section-group', 'notes_get_parent_section_group')
        g.custom_command('list-page', 'notes_list_page')
        g.custom_command('update-page', 'notes_update_page')
        g.custom_command('update-parent-notebook', 'notes_update_parent_notebook')
        g.custom_command('update-parent-section-group', 'notes_update_parent_section_group')

    from azext_notes.generated._client_factory import cf_group_onenote_parent_notebook_section_group_section_page
    notes_group_onenote_parent_notebook_section_group_section_page = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._group_onenote_parent_notebook_section_group_sectio'
        'n_page_operations#GroupOnenoteParentNotebookSectionGroupSectionPageOperations.{}',
        client_factory=cf_group_onenote_parent_notebook_section_group_section_page)
    with self.command_group('notes', notes_group_onenote_parent_notebook_section_group_section_page,
                            client_factory=cf_group_onenote_parent_notebook_section_group_section_page) as g:
        g.custom_command('get-page-content', 'notes_get_page_content')
        g.custom_command('set-page-content', 'notes_set_page_content')

    from azext_notes.generated._client_factory import cf_group_onenote_page_parent_notebook_section
    notes_group_onenote_page_parent_notebook_section = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._group_onenote_page_parent_notebook_section_operati'
        'ons#GroupOnenotePageParentNotebookSectionOperations.{}',
        client_factory=cf_group_onenote_page_parent_notebook_section)
    with self.command_group('notes', notes_group_onenote_page_parent_notebook_section,
                            client_factory=cf_group_onenote_page_parent_notebook_section) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('create-page', 'notes_create_page')
        g.custom_command('get-page', 'notes_get_page')
        g.custom_command('get-parent-notebook', 'notes_get_parent_notebook')
        g.custom_command('get-parent-section-group', 'notes_get_parent_section_group')
        g.custom_command('list-page', 'notes_list_page')
        g.custom_command('update-page', 'notes_update_page')
        g.custom_command('update-parent-notebook', 'notes_update_parent_notebook')
        g.custom_command('update-parent-section-group', 'notes_update_parent_section_group')

    from azext_notes.generated._client_factory import cf_group_onenote_parent_notebook_section_page
    notes_group_onenote_parent_notebook_section_page = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._group_onenote_parent_notebook_section_page_operati'
        'ons#GroupOnenoteParentNotebookSectionPageOperations.{}',
        client_factory=cf_group_onenote_parent_notebook_section_page)
    with self.command_group('notes', notes_group_onenote_parent_notebook_section_page,
                            client_factory=cf_group_onenote_parent_notebook_section_page) as g:
        g.custom_command('get-page-content', 'notes_get_page_content')
        g.custom_command('set-page-content', 'notes_set_page_content')

    from azext_notes.generated._client_factory import cf_group_onenote_page_parent_notebook_section_parent_section_group
    notes_group_onenote_page_parent_notebook_section_parent_section_group = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._group_onenote_page_parent_notebook_section_parent_'
        'section_group_operations#GroupOnenotePageParentNotebookSectionParentSectionGroupOperations.{}',
        client_factory=cf_group_onenote_page_parent_notebook_section_parent_section_group)
    with self.command_group('notes', notes_group_onenote_page_parent_notebook_section_parent_section_group,
                            client_factory=cf_group_onenote_page_parent_notebook_section_parent_section_group) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('create-section', 'notes_create_section')
        g.custom_command('create-section-group', 'notes_create_section_group')
        g.custom_command('get-parent-notebook', 'notes_get_parent_notebook')
        g.custom_command('get-parent-section-group', 'notes_get_parent_section_group')
        g.custom_command('get-section', 'notes_get_section')
        g.custom_command('get-section-group', 'notes_get_section_group')
        g.custom_command('list-section', 'notes_list_section')
        g.custom_command('list-section-group', 'notes_list_section_group')
        g.custom_command('update-parent-notebook', 'notes_update_parent_notebook')
        g.custom_command('update-parent-section-group', 'notes_update_parent_section_group')
        g.custom_command('update-section', 'notes_update_section')
        g.custom_command('update-section-group', 'notes_update_section_group')

    from azext_notes.generated._client_factory import cf_group_onenote_page_parent_section
    notes_group_onenote_page_parent_section = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._group_onenote_page_parent_section_operations#Group'
        'OnenotePageParentSectionOperations.{}',
        client_factory=cf_group_onenote_page_parent_section)
    with self.command_group('notes', notes_group_onenote_page_parent_section,
                            client_factory=cf_group_onenote_page_parent_section) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('create-page', 'notes_create_page')
        g.custom_command('get-page', 'notes_get_page')
        g.custom_command('get-parent-notebook', 'notes_get_parent_notebook')
        g.custom_command('get-parent-section-group', 'notes_get_parent_section_group')
        g.custom_command('list-page', 'notes_list_page')
        g.custom_command('update-page', 'notes_update_page')
        g.custom_command('update-parent-notebook', 'notes_update_parent_notebook')
        g.custom_command('update-parent-section-group', 'notes_update_parent_section_group')

    from azext_notes.generated._client_factory import cf_group_onenote_parent_section_page
    notes_group_onenote_parent_section_page = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._group_onenote_parent_section_page_operations#Group'
        'OnenoteParentSectionPageOperations.{}',
        client_factory=cf_group_onenote_parent_section_page)
    with self.command_group('notes', notes_group_onenote_parent_section_page,
                            client_factory=cf_group_onenote_parent_section_page) as g:
        g.custom_command('get-page-content', 'notes_get_page_content')
        g.custom_command('set-page-content', 'notes_set_page_content')

    from azext_notes.generated._client_factory import cf_group_onenote_page_parent_section_parent_notebook
    notes_group_onenote_page_parent_section_parent_notebook = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._group_onenote_page_parent_section_parent_notebook_'
        'operations#GroupOnenotePageParentSectionParentNotebookOperations.{}',
        client_factory=cf_group_onenote_page_parent_section_parent_notebook)
    with self.command_group('notes', notes_group_onenote_page_parent_section_parent_notebook,
                            client_factory=cf_group_onenote_page_parent_section_parent_notebook) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('create-section', 'notes_create_section')
        g.custom_command('create-section-group', 'notes_create_section_group')
        g.custom_command('get-section', 'notes_get_section')
        g.custom_command('get-section-group', 'notes_get_section_group')
        g.custom_command('list-section', 'notes_list_section')
        g.custom_command('list-section-group', 'notes_list_section_group')
        g.custom_command('update-section', 'notes_update_section')
        g.custom_command('update-section-group', 'notes_update_section_group')

    from azext_notes.generated._client_factory import cf_group_onenote_page_parent_section_parent_notebook_section_group
    notes_group_onenote_page_parent_section_parent_notebook_section_group = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._group_onenote_page_parent_section_parent_notebook_'
        'section_group_operations#GroupOnenotePageParentSectionParentNotebookSectionGroupOperations.{}',
        client_factory=cf_group_onenote_page_parent_section_parent_notebook_section_group)
    with self.command_group('notes', notes_group_onenote_page_parent_section_parent_notebook_section_group,
                            client_factory=cf_group_onenote_page_parent_section_parent_notebook_section_group) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('create-section', 'notes_create_section')
        g.custom_command('create-section-group', 'notes_create_section_group')
        g.custom_command('get-parent-notebook', 'notes_get_parent_notebook')
        g.custom_command('get-parent-section-group', 'notes_get_parent_section_group')
        g.custom_command('get-section', 'notes_get_section')
        g.custom_command('get-section-group', 'notes_get_section_group')
        g.custom_command('list-section', 'notes_list_section')
        g.custom_command('list-section-group', 'notes_list_section_group')
        g.custom_command('update-parent-notebook', 'notes_update_parent_notebook')
        g.custom_command('update-parent-section-group', 'notes_update_parent_section_group')
        g.custom_command('update-section', 'notes_update_section')
        g.custom_command('update-section-group', 'notes_update_section_group')

    from azext_notes.generated._client_factory import cf_group_onenote_page_parent_section_parent_section_group
    notes_group_onenote_page_parent_section_parent_section_group = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._group_onenote_page_parent_section_parent_section_g'
        'roup_operations#GroupOnenotePageParentSectionParentSectionGroupOperations.{}',
        client_factory=cf_group_onenote_page_parent_section_parent_section_group)
    with self.command_group('notes', notes_group_onenote_page_parent_section_parent_section_group,
                            client_factory=cf_group_onenote_page_parent_section_parent_section_group) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('create-section', 'notes_create_section')
        g.custom_command('create-section-group', 'notes_create_section_group')
        g.custom_command('get-parent-notebook', 'notes_get_parent_notebook')
        g.custom_command('get-parent-section-group', 'notes_get_parent_section_group')
        g.custom_command('get-section', 'notes_get_section')
        g.custom_command('get-section-group', 'notes_get_section_group')
        g.custom_command('list-section', 'notes_list_section')
        g.custom_command('list-section-group', 'notes_list_section_group')
        g.custom_command('update-parent-notebook', 'notes_update_parent_notebook')
        g.custom_command('update-parent-section-group', 'notes_update_parent_section_group')
        g.custom_command('update-section', 'notes_update_section')
        g.custom_command('update-section-group', 'notes_update_section_group')

    from azext_notes.generated._client_factory import cf_group_onenote_page_parent_section_parent_section_group_parent_notebook
    notes_group_onenote_page_parent_section_parent_section_group_parent_notebook = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._group_onenote_page_parent_section_parent_section_g'
        'roup_parent_notebook_operations#GroupOnenotePageParentSectionParentSectionGroupParentNotebookOperations.{}',
        client_factory=cf_group_onenote_page_parent_section_parent_section_group_parent_notebook)
    with self.command_group('notes', notes_group_onenote_page_parent_section_parent_section_group_parent_notebook,
                            client_factory=cf_group_onenote_page_parent_section_parent_section_group_parent_notebook) \
                            as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('create-section', 'notes_create_section')
        g.custom_command('create-section-group', 'notes_create_section_group')
        g.custom_command('get-section', 'notes_get_section')
        g.custom_command('get-section-group', 'notes_get_section_group')
        g.custom_command('list-section', 'notes_list_section')
        g.custom_command('list-section-group', 'notes_list_section_group')
        g.custom_command('update-section', 'notes_update_section')
        g.custom_command('update-section-group', 'notes_update_section_group')

    from azext_notes.generated._client_factory import cf_group_onenote_section_group
    notes_group_onenote_section_group = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._group_onenote_section_group_operations#GroupOnenot'
        'eSectionGroupOperations.{}',
        client_factory=cf_group_onenote_section_group)
    with self.command_group('notes', notes_group_onenote_section_group,
                            client_factory=cf_group_onenote_section_group) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('create-section', 'notes_create_section')
        g.custom_command('create-section-group', 'notes_create_section_group')
        g.custom_command('get-parent-notebook', 'notes_get_parent_notebook')
        g.custom_command('get-parent-section-group', 'notes_get_parent_section_group')
        g.custom_command('get-section', 'notes_get_section')
        g.custom_command('get-section-group', 'notes_get_section_group')
        g.custom_command('list-section', 'notes_list_section')
        g.custom_command('list-section-group', 'notes_list_section_group')
        g.custom_command('update-parent-notebook', 'notes_update_parent_notebook')
        g.custom_command('update-parent-section-group', 'notes_update_parent_section_group')
        g.custom_command('update-section', 'notes_update_section')
        g.custom_command('update-section-group', 'notes_update_section_group')

    from azext_notes.generated._client_factory import cf_group_onenote_section_group_parent_notebook
    notes_group_onenote_section_group_parent_notebook = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._group_onenote_section_group_parent_notebook_operat'
        'ions#GroupOnenoteSectionGroupParentNotebookOperations.{}',
        client_factory=cf_group_onenote_section_group_parent_notebook)
    with self.command_group('notes', notes_group_onenote_section_group_parent_notebook,
                            client_factory=cf_group_onenote_section_group_parent_notebook) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('create-section', 'notes_create_section')
        g.custom_command('create-section-group', 'notes_create_section_group')
        g.custom_command('get-section', 'notes_get_section')
        g.custom_command('get-section-group', 'notes_get_section_group')
        g.custom_command('list-section', 'notes_list_section')
        g.custom_command('list-section-group', 'notes_list_section_group')
        g.custom_command('update-section', 'notes_update_section')
        g.custom_command('update-section-group', 'notes_update_section_group')

    from azext_notes.generated._client_factory import cf_group_onenote_section_group_parent_notebook_section
    notes_group_onenote_section_group_parent_notebook_section = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._group_onenote_section_group_parent_notebook_sectio'
        'n_operations#GroupOnenoteSectionGroupParentNotebookSectionOperations.{}',
        client_factory=cf_group_onenote_section_group_parent_notebook_section)
    with self.command_group('notes', notes_group_onenote_section_group_parent_notebook_section,
                            client_factory=cf_group_onenote_section_group_parent_notebook_section) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('create-page', 'notes_create_page')
        g.custom_command('get-page', 'notes_get_page')
        g.custom_command('get-page-content', 'notes_get_page_content')
        g.custom_command('get-parent-notebook', 'notes_get_parent_notebook')
        g.custom_command('get-parent-section-group', 'notes_get_parent_section_group')
        g.custom_command('list-page', 'notes_list_page')
        g.custom_command('set-page-content', 'notes_set_page_content')
        g.custom_command('update-page', 'notes_update_page')
        g.custom_command('update-parent-notebook', 'notes_update_parent_notebook')
        g.custom_command('update-parent-section-group', 'notes_update_parent_section_group')

    from azext_notes.generated._client_factory import cf_group_onenote_section_group_parent_notebook_section_page
    notes_group_onenote_section_group_parent_notebook_section_page = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._group_onenote_section_group_parent_notebook_sectio'
        'n_page_operations#GroupOnenoteSectionGroupParentNotebookSectionPageOperations.{}',
        client_factory=cf_group_onenote_section_group_parent_notebook_section_page)
    with self.command_group('notes', notes_group_onenote_section_group_parent_notebook_section_page,
                            client_factory=cf_group_onenote_section_group_parent_notebook_section_page) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('get-parent-notebook', 'notes_get_parent_notebook')
        g.custom_command('get-parent-section', 'notes_get_parent_section')
        g.custom_command('update-parent-notebook', 'notes_update_parent_notebook')
        g.custom_command('update-parent-section', 'notes_update_parent_section')

    from azext_notes.generated._client_factory import cf_group_onenote_section_group_section
    notes_group_onenote_section_group_section = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._group_onenote_section_group_section_operations#Gro'
        'upOnenoteSectionGroupSectionOperations.{}',
        client_factory=cf_group_onenote_section_group_section)
    with self.command_group('notes', notes_group_onenote_section_group_section,
                            client_factory=cf_group_onenote_section_group_section) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('create-page', 'notes_create_page')
        g.custom_command('get-page', 'notes_get_page')
        g.custom_command('get-page-content', 'notes_get_page_content')
        g.custom_command('get-parent-notebook', 'notes_get_parent_notebook')
        g.custom_command('get-parent-section-group', 'notes_get_parent_section_group')
        g.custom_command('list-page', 'notes_list_page')
        g.custom_command('set-page-content', 'notes_set_page_content')
        g.custom_command('update-page', 'notes_update_page')
        g.custom_command('update-parent-notebook', 'notes_update_parent_notebook')
        g.custom_command('update-parent-section-group', 'notes_update_parent_section_group')

    from azext_notes.generated._client_factory import cf_group_onenote_section_group_section_page
    notes_group_onenote_section_group_section_page = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._group_onenote_section_group_section_page_operation'
        's#GroupOnenoteSectionGroupSectionPageOperations.{}',
        client_factory=cf_group_onenote_section_group_section_page)
    with self.command_group('notes', notes_group_onenote_section_group_section_page,
                            client_factory=cf_group_onenote_section_group_section_page) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('get-parent-notebook', 'notes_get_parent_notebook')
        g.custom_command('get-parent-section', 'notes_get_parent_section')
        g.custom_command('update-parent-notebook', 'notes_update_parent_notebook')
        g.custom_command('update-parent-section', 'notes_update_parent_section')

    from azext_notes.generated._client_factory import cf_group_onenote_section_group_section_page_parent_notebook
    notes_group_onenote_section_group_section_page_parent_notebook = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._group_onenote_section_group_section_page_parent_no'
        'tebook_operations#GroupOnenoteSectionGroupSectionPageParentNotebookOperations.{}',
        client_factory=cf_group_onenote_section_group_section_page_parent_notebook)
    with self.command_group('notes', notes_group_onenote_section_group_section_page_parent_notebook,
                            client_factory=cf_group_onenote_section_group_section_page_parent_notebook) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('create-section', 'notes_create_section')
        g.custom_command('create-section-group', 'notes_create_section_group')
        g.custom_command('get-section', 'notes_get_section')
        g.custom_command('get-section-group', 'notes_get_section_group')
        g.custom_command('list-section', 'notes_list_section')
        g.custom_command('list-section-group', 'notes_list_section_group')
        g.custom_command('update-section', 'notes_update_section')
        g.custom_command('update-section-group', 'notes_update_section_group')

    from azext_notes.generated._client_factory import cf_group_onenote_section_group_section_parent_notebook
    notes_group_onenote_section_group_section_parent_notebook = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._group_onenote_section_group_section_parent_noteboo'
        'k_operations#GroupOnenoteSectionGroupSectionParentNotebookOperations.{}',
        client_factory=cf_group_onenote_section_group_section_parent_notebook)
    with self.command_group('notes', notes_group_onenote_section_group_section_parent_notebook,
                            client_factory=cf_group_onenote_section_group_section_parent_notebook) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('create-section', 'notes_create_section')
        g.custom_command('create-section-group', 'notes_create_section_group')
        g.custom_command('get-section', 'notes_get_section')
        g.custom_command('get-section-group', 'notes_get_section_group')
        g.custom_command('list-section', 'notes_list_section')
        g.custom_command('list-section-group', 'notes_list_section_group')
        g.custom_command('update-section', 'notes_update_section')
        g.custom_command('update-section-group', 'notes_update_section_group')

    from azext_notes.generated._client_factory import cf_group_onenote_section
    notes_group_onenote_section = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._group_onenote_section_operations#GroupOnenoteSecti'
        'onOperations.{}',
        client_factory=cf_group_onenote_section)
    with self.command_group('notes', notes_group_onenote_section, client_factory=cf_group_onenote_section) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('create-page', 'notes_create_page')
        g.custom_command('get-page', 'notes_get_page')
        g.custom_command('get-page-content', 'notes_get_page_content')
        g.custom_command('get-parent-notebook', 'notes_get_parent_notebook')
        g.custom_command('get-parent-section-group', 'notes_get_parent_section_group')
        g.custom_command('list-page', 'notes_list_page')
        g.custom_command('set-page-content', 'notes_set_page_content')
        g.custom_command('update-page', 'notes_update_page')
        g.custom_command('update-parent-notebook', 'notes_update_parent_notebook')
        g.custom_command('update-parent-section-group', 'notes_update_parent_section_group')

    from azext_notes.generated._client_factory import cf_group_onenote_section_page
    notes_group_onenote_section_page = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._group_onenote_section_page_operations#GroupOnenote'
        'SectionPageOperations.{}',
        client_factory=cf_group_onenote_section_page)
    with self.command_group('notes', notes_group_onenote_section_page,
                            client_factory=cf_group_onenote_section_page) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('get-parent-notebook', 'notes_get_parent_notebook')
        g.custom_command('get-parent-section', 'notes_get_parent_section')
        g.custom_command('update-parent-notebook', 'notes_update_parent_notebook')
        g.custom_command('update-parent-section', 'notes_update_parent_section')

    from azext_notes.generated._client_factory import cf_group_onenote_section_page_parent_notebook
    notes_group_onenote_section_page_parent_notebook = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._group_onenote_section_page_parent_notebook_operati'
        'ons#GroupOnenoteSectionPageParentNotebookOperations.{}',
        client_factory=cf_group_onenote_section_page_parent_notebook)
    with self.command_group('notes', notes_group_onenote_section_page_parent_notebook,
                            client_factory=cf_group_onenote_section_page_parent_notebook) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('create-section', 'notes_create_section')
        g.custom_command('create-section-group', 'notes_create_section_group')
        g.custom_command('get-section', 'notes_get_section')
        g.custom_command('get-section-group', 'notes_get_section_group')
        g.custom_command('list-section', 'notes_list_section')
        g.custom_command('list-section-group', 'notes_list_section_group')
        g.custom_command('update-section', 'notes_update_section')
        g.custom_command('update-section-group', 'notes_update_section_group')

    from azext_notes.generated._client_factory import cf_group_onenote_section_page_parent_notebook_section_group
    notes_group_onenote_section_page_parent_notebook_section_group = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._group_onenote_section_page_parent_notebook_section'
        '_group_operations#GroupOnenoteSectionPageParentNotebookSectionGroupOperations.{}',
        client_factory=cf_group_onenote_section_page_parent_notebook_section_group)
    with self.command_group('notes', notes_group_onenote_section_page_parent_notebook_section_group,
                            client_factory=cf_group_onenote_section_page_parent_notebook_section_group) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('create-section', 'notes_create_section')
        g.custom_command('create-section-group', 'notes_create_section_group')
        g.custom_command('get-parent-notebook', 'notes_get_parent_notebook')
        g.custom_command('get-parent-section-group', 'notes_get_parent_section_group')
        g.custom_command('get-section', 'notes_get_section')
        g.custom_command('get-section-group', 'notes_get_section_group')
        g.custom_command('list-section', 'notes_list_section')
        g.custom_command('list-section-group', 'notes_list_section_group')
        g.custom_command('update-parent-notebook', 'notes_update_parent_notebook')
        g.custom_command('update-parent-section-group', 'notes_update_parent_section_group')
        g.custom_command('update-section', 'notes_update_section')
        g.custom_command('update-section-group', 'notes_update_section_group')

    from azext_notes.generated._client_factory import cf_group_onenote_section_parent_notebook
    notes_group_onenote_section_parent_notebook = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._group_onenote_section_parent_notebook_operations#G'
        'roupOnenoteSectionParentNotebookOperations.{}',
        client_factory=cf_group_onenote_section_parent_notebook)
    with self.command_group('notes', notes_group_onenote_section_parent_notebook,
                            client_factory=cf_group_onenote_section_parent_notebook) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('create-section', 'notes_create_section')
        g.custom_command('create-section-group', 'notes_create_section_group')
        g.custom_command('get-section', 'notes_get_section')
        g.custom_command('get-section-group', 'notes_get_section_group')
        g.custom_command('list-section', 'notes_list_section')
        g.custom_command('list-section-group', 'notes_list_section_group')
        g.custom_command('update-section', 'notes_update_section')
        g.custom_command('update-section-group', 'notes_update_section_group')

    from azext_notes.generated._client_factory import cf_group_onenote_section_parent_notebook_section_group
    notes_group_onenote_section_parent_notebook_section_group = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._group_onenote_section_parent_notebook_section_grou'
        'p_operations#GroupOnenoteSectionParentNotebookSectionGroupOperations.{}',
        client_factory=cf_group_onenote_section_parent_notebook_section_group)
    with self.command_group('notes', notes_group_onenote_section_parent_notebook_section_group,
                            client_factory=cf_group_onenote_section_parent_notebook_section_group) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('create-section', 'notes_create_section')
        g.custom_command('create-section-group', 'notes_create_section_group')
        g.custom_command('get-parent-notebook', 'notes_get_parent_notebook')
        g.custom_command('get-parent-section-group', 'notes_get_parent_section_group')
        g.custom_command('get-section', 'notes_get_section')
        g.custom_command('get-section-group', 'notes_get_section_group')
        g.custom_command('list-section', 'notes_list_section')
        g.custom_command('list-section-group', 'notes_list_section_group')
        g.custom_command('update-parent-notebook', 'notes_update_parent_notebook')
        g.custom_command('update-parent-section-group', 'notes_update_parent_section_group')
        g.custom_command('update-section', 'notes_update_section')
        g.custom_command('update-section-group', 'notes_update_section_group')

    from azext_notes.generated._client_factory import cf_group_onenote_section_parent_section_group
    notes_group_onenote_section_parent_section_group = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._group_onenote_section_parent_section_group_operati'
        'ons#GroupOnenoteSectionParentSectionGroupOperations.{}',
        client_factory=cf_group_onenote_section_parent_section_group)
    with self.command_group('notes', notes_group_onenote_section_parent_section_group,
                            client_factory=cf_group_onenote_section_parent_section_group) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('create-section', 'notes_create_section')
        g.custom_command('create-section-group', 'notes_create_section_group')
        g.custom_command('get-parent-notebook', 'notes_get_parent_notebook')
        g.custom_command('get-parent-section-group', 'notes_get_parent_section_group')
        g.custom_command('get-section', 'notes_get_section')
        g.custom_command('get-section-group', 'notes_get_section_group')
        g.custom_command('list-section', 'notes_list_section')
        g.custom_command('list-section-group', 'notes_list_section_group')
        g.custom_command('update-parent-notebook', 'notes_update_parent_notebook')
        g.custom_command('update-parent-section-group', 'notes_update_parent_section_group')
        g.custom_command('update-section', 'notes_update_section')
        g.custom_command('update-section-group', 'notes_update_section_group')

    from azext_notes.generated._client_factory import cf_group_onenote_section_parent_section_group_parent_notebook
    notes_group_onenote_section_parent_section_group_parent_notebook = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._group_onenote_section_parent_section_group_parent_'
        'notebook_operations#GroupOnenoteSectionParentSectionGroupParentNotebookOperations.{}',
        client_factory=cf_group_onenote_section_parent_section_group_parent_notebook)
    with self.command_group('notes', notes_group_onenote_section_parent_section_group_parent_notebook,
                            client_factory=cf_group_onenote_section_parent_section_group_parent_notebook) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('create-section', 'notes_create_section')
        g.custom_command('create-section-group', 'notes_create_section_group')
        g.custom_command('get-section', 'notes_get_section')
        g.custom_command('get-section-group', 'notes_get_section_group')
        g.custom_command('list-section', 'notes_list_section')
        g.custom_command('list-section-group', 'notes_list_section_group')
        g.custom_command('update-section', 'notes_update_section')
        g.custom_command('update-section-group', 'notes_update_section_group')

    from azext_notes.generated._client_factory import cf_site
    notes_site = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._site_operations#SiteOperations.{}',
        client_factory=cf_site)
    with self.command_group('notes', notes_site, client_factory=cf_site) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('get-onenote', 'notes_get_onenote')
        g.custom_command('update-onenote', 'notes_update_onenote')

    from azext_notes.generated._client_factory import cf_site_onenote
    notes_site_onenote = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._site_onenote_operations#SiteOnenoteOperations.{}',
        client_factory=cf_site_onenote)
    with self.command_group('notes', notes_site_onenote, client_factory=cf_site_onenote) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('create-notebook', 'notes_create_notebook')
        g.custom_command('create-operation', 'notes_create_operation')
        g.custom_command('create-page', 'notes_create_page')
        g.custom_command('create-resource', 'notes_create_resource')
        g.custom_command('create-section', 'notes_create_section')
        g.custom_command('create-section-group', 'notes_create_section_group')
        g.custom_command('get-notebook', 'notes_get_notebook')
        g.custom_command('get-operation', 'notes_get_operation')
        g.custom_command('get-page', 'notes_get_page')
        g.custom_command('get-page-content', 'notes_get_page_content')
        g.custom_command('get-resource', 'notes_get_resource')
        g.custom_command('get-resource-content', 'notes_get_resource_content')
        g.custom_command('get-section', 'notes_get_section')
        g.custom_command('get-section-group', 'notes_get_section_group')
        g.custom_command('list-notebook', 'notes_list_notebook')
        g.custom_command('list-operation', 'notes_list_operation')
        g.custom_command('list-page', 'notes_list_page')
        g.custom_command('list-resource', 'notes_list_resource')
        g.custom_command('list-section', 'notes_list_section')
        g.custom_command('list-section-group', 'notes_list_section_group')
        g.custom_command('set-page-content', 'notes_set_page_content')
        g.custom_command('set-resource-content', 'notes_set_resource_content')
        g.custom_command('update-notebook', 'notes_update_notebook')
        g.custom_command('update-operation', 'notes_update_operation')
        g.custom_command('update-page', 'notes_update_page')
        g.custom_command('update-resource', 'notes_update_resource')
        g.custom_command('update-section', 'notes_update_section')
        g.custom_command('update-section-group', 'notes_update_section_group')

    from azext_notes.generated._client_factory import cf_site_onenote_notebook
    notes_site_onenote_notebook = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._site_onenote_notebook_operations#SiteOnenoteNotebo'
        'okOperations.{}',
        client_factory=cf_site_onenote_notebook)
    with self.command_group('notes', notes_site_onenote_notebook, client_factory=cf_site_onenote_notebook) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('create-section', 'notes_create_section')
        g.custom_command('create-section-group', 'notes_create_section_group')
        g.custom_command('get-section', 'notes_get_section')
        g.custom_command('get-section-group', 'notes_get_section_group')
        g.custom_command('list-section', 'notes_list_section')
        g.custom_command('list-section-group', 'notes_list_section_group')
        g.custom_command('update-section', 'notes_update_section')
        g.custom_command('update-section-group', 'notes_update_section_group')

    from azext_notes.generated._client_factory import cf_site_onenote_notebook_section_group
    notes_site_onenote_notebook_section_group = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._site_onenote_notebook_section_group_operations#Sit'
        'eOnenoteNotebookSectionGroupOperations.{}',
        client_factory=cf_site_onenote_notebook_section_group)
    with self.command_group('notes', notes_site_onenote_notebook_section_group,
                            client_factory=cf_site_onenote_notebook_section_group) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('create-section', 'notes_create_section')
        g.custom_command('create-section-group', 'notes_create_section_group')
        g.custom_command('get-parent-notebook', 'notes_get_parent_notebook')
        g.custom_command('get-parent-section-group', 'notes_get_parent_section_group')
        g.custom_command('get-section', 'notes_get_section')
        g.custom_command('get-section-group', 'notes_get_section_group')
        g.custom_command('list-section', 'notes_list_section')
        g.custom_command('list-section-group', 'notes_list_section_group')
        g.custom_command('update-parent-notebook', 'notes_update_parent_notebook')
        g.custom_command('update-parent-section-group', 'notes_update_parent_section_group')
        g.custom_command('update-section', 'notes_update_section')
        g.custom_command('update-section-group', 'notes_update_section_group')

    from azext_notes.generated._client_factory import cf_site_onenote_notebook_section_group_section
    notes_site_onenote_notebook_section_group_section = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._site_onenote_notebook_section_group_section_operat'
        'ions#SiteOnenoteNotebookSectionGroupSectionOperations.{}',
        client_factory=cf_site_onenote_notebook_section_group_section)
    with self.command_group('notes', notes_site_onenote_notebook_section_group_section,
                            client_factory=cf_site_onenote_notebook_section_group_section) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('create-page', 'notes_create_page')
        g.custom_command('get-page', 'notes_get_page')
        g.custom_command('get-page-content', 'notes_get_page_content')
        g.custom_command('get-parent-notebook', 'notes_get_parent_notebook')
        g.custom_command('get-parent-section-group', 'notes_get_parent_section_group')
        g.custom_command('list-page', 'notes_list_page')
        g.custom_command('set-page-content', 'notes_set_page_content')
        g.custom_command('update-page', 'notes_update_page')
        g.custom_command('update-parent-notebook', 'notes_update_parent_notebook')
        g.custom_command('update-parent-section-group', 'notes_update_parent_section_group')

    from azext_notes.generated._client_factory import cf_site_onenote_notebook_section_group_section_page
    notes_site_onenote_notebook_section_group_section_page = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._site_onenote_notebook_section_group_section_page_o'
        'perations#SiteOnenoteNotebookSectionGroupSectionPageOperations.{}',
        client_factory=cf_site_onenote_notebook_section_group_section_page)
    with self.command_group('notes', notes_site_onenote_notebook_section_group_section_page,
                            client_factory=cf_site_onenote_notebook_section_group_section_page) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('get-parent-notebook', 'notes_get_parent_notebook')
        g.custom_command('get-parent-section', 'notes_get_parent_section')
        g.custom_command('update-parent-notebook', 'notes_update_parent_notebook')
        g.custom_command('update-parent-section', 'notes_update_parent_section')

    from azext_notes.generated._client_factory import cf_site_onenote_notebook_section
    notes_site_onenote_notebook_section = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._site_onenote_notebook_section_operations#SiteOneno'
        'teNotebookSectionOperations.{}',
        client_factory=cf_site_onenote_notebook_section)
    with self.command_group('notes', notes_site_onenote_notebook_section,
                            client_factory=cf_site_onenote_notebook_section) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('create-page', 'notes_create_page')
        g.custom_command('get-page', 'notes_get_page')
        g.custom_command('get-page-content', 'notes_get_page_content')
        g.custom_command('get-parent-notebook', 'notes_get_parent_notebook')
        g.custom_command('get-parent-section-group', 'notes_get_parent_section_group')
        g.custom_command('list-page', 'notes_list_page')
        g.custom_command('set-page-content', 'notes_set_page_content')
        g.custom_command('update-page', 'notes_update_page')
        g.custom_command('update-parent-notebook', 'notes_update_parent_notebook')
        g.custom_command('update-parent-section-group', 'notes_update_parent_section_group')

    from azext_notes.generated._client_factory import cf_site_onenote_notebook_section_page
    notes_site_onenote_notebook_section_page = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._site_onenote_notebook_section_page_operations#Site'
        'OnenoteNotebookSectionPageOperations.{}',
        client_factory=cf_site_onenote_notebook_section_page)
    with self.command_group('notes', notes_site_onenote_notebook_section_page,
                            client_factory=cf_site_onenote_notebook_section_page) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('get-parent-notebook', 'notes_get_parent_notebook')
        g.custom_command('get-parent-section', 'notes_get_parent_section')
        g.custom_command('update-parent-notebook', 'notes_update_parent_notebook')
        g.custom_command('update-parent-section', 'notes_update_parent_section')

    from azext_notes.generated._client_factory import cf_site_onenote_notebook_section_parent_section_group
    notes_site_onenote_notebook_section_parent_section_group = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._site_onenote_notebook_section_parent_section_group'
        '_operations#SiteOnenoteNotebookSectionParentSectionGroupOperations.{}',
        client_factory=cf_site_onenote_notebook_section_parent_section_group)
    with self.command_group('notes', notes_site_onenote_notebook_section_parent_section_group,
                            client_factory=cf_site_onenote_notebook_section_parent_section_group) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('create-section', 'notes_create_section')
        g.custom_command('create-section-group', 'notes_create_section_group')
        g.custom_command('get-parent-notebook', 'notes_get_parent_notebook')
        g.custom_command('get-parent-section-group', 'notes_get_parent_section_group')
        g.custom_command('get-section', 'notes_get_section')
        g.custom_command('get-section-group', 'notes_get_section_group')
        g.custom_command('list-section', 'notes_list_section')
        g.custom_command('list-section-group', 'notes_list_section_group')
        g.custom_command('update-parent-notebook', 'notes_update_parent_notebook')
        g.custom_command('update-parent-section-group', 'notes_update_parent_section_group')
        g.custom_command('update-section', 'notes_update_section')
        g.custom_command('update-section-group', 'notes_update_section_group')

    from azext_notes.generated._client_factory import cf_site_onenote_page
    notes_site_onenote_page = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._site_onenote_page_operations#SiteOnenotePageOperat'
        'ions.{}',
        client_factory=cf_site_onenote_page)
    with self.command_group('notes', notes_site_onenote_page, client_factory=cf_site_onenote_page) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('get-parent-notebook', 'notes_get_parent_notebook')
        g.custom_command('get-parent-section', 'notes_get_parent_section')
        g.custom_command('update-parent-notebook', 'notes_update_parent_notebook')
        g.custom_command('update-parent-section', 'notes_update_parent_section')

    from azext_notes.generated._client_factory import cf_site_onenote_page_parent_notebook
    notes_site_onenote_page_parent_notebook = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._site_onenote_page_parent_notebook_operations#SiteO'
        'nenotePageParentNotebookOperations.{}',
        client_factory=cf_site_onenote_page_parent_notebook)
    with self.command_group('notes', notes_site_onenote_page_parent_notebook,
                            client_factory=cf_site_onenote_page_parent_notebook) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('create-section', 'notes_create_section')
        g.custom_command('create-section-group', 'notes_create_section_group')
        g.custom_command('get-section', 'notes_get_section')
        g.custom_command('get-section-group', 'notes_get_section_group')
        g.custom_command('list-section', 'notes_list_section')
        g.custom_command('list-section-group', 'notes_list_section_group')
        g.custom_command('update-section', 'notes_update_section')
        g.custom_command('update-section-group', 'notes_update_section_group')

    from azext_notes.generated._client_factory import cf_site_onenote_page_parent_notebook_section_group
    notes_site_onenote_page_parent_notebook_section_group = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._site_onenote_page_parent_notebook_section_group_op'
        'erations#SiteOnenotePageParentNotebookSectionGroupOperations.{}',
        client_factory=cf_site_onenote_page_parent_notebook_section_group)
    with self.command_group('notes', notes_site_onenote_page_parent_notebook_section_group,
                            client_factory=cf_site_onenote_page_parent_notebook_section_group) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('create-section', 'notes_create_section')
        g.custom_command('create-section-group', 'notes_create_section_group')
        g.custom_command('get-parent-notebook', 'notes_get_parent_notebook')
        g.custom_command('get-parent-section-group', 'notes_get_parent_section_group')
        g.custom_command('get-section', 'notes_get_section')
        g.custom_command('get-section-group', 'notes_get_section_group')
        g.custom_command('list-section', 'notes_list_section')
        g.custom_command('list-section-group', 'notes_list_section_group')
        g.custom_command('update-parent-notebook', 'notes_update_parent_notebook')
        g.custom_command('update-parent-section-group', 'notes_update_parent_section_group')
        g.custom_command('update-section', 'notes_update_section')
        g.custom_command('update-section-group', 'notes_update_section_group')

    from azext_notes.generated._client_factory import cf_site_onenote_page_parent_notebook_section_group_section
    notes_site_onenote_page_parent_notebook_section_group_section = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._site_onenote_page_parent_notebook_section_group_se'
        'ction_operations#SiteOnenotePageParentNotebookSectionGroupSectionOperations.{}',
        client_factory=cf_site_onenote_page_parent_notebook_section_group_section)
    with self.command_group('notes', notes_site_onenote_page_parent_notebook_section_group_section,
                            client_factory=cf_site_onenote_page_parent_notebook_section_group_section) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('create-page', 'notes_create_page')
        g.custom_command('get-page', 'notes_get_page')
        g.custom_command('get-parent-notebook', 'notes_get_parent_notebook')
        g.custom_command('get-parent-section-group', 'notes_get_parent_section_group')
        g.custom_command('list-page', 'notes_list_page')
        g.custom_command('update-page', 'notes_update_page')
        g.custom_command('update-parent-notebook', 'notes_update_parent_notebook')
        g.custom_command('update-parent-section-group', 'notes_update_parent_section_group')

    from azext_notes.generated._client_factory import cf_site_onenote_parent_notebook_section_group_section_page
    notes_site_onenote_parent_notebook_section_group_section_page = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._site_onenote_parent_notebook_section_group_section'
        '_page_operations#SiteOnenoteParentNotebookSectionGroupSectionPageOperations.{}',
        client_factory=cf_site_onenote_parent_notebook_section_group_section_page)
    with self.command_group('notes', notes_site_onenote_parent_notebook_section_group_section_page,
                            client_factory=cf_site_onenote_parent_notebook_section_group_section_page) as g:
        g.custom_command('get-page-content', 'notes_get_page_content')
        g.custom_command('set-page-content', 'notes_set_page_content')

    from azext_notes.generated._client_factory import cf_site_onenote_page_parent_notebook_section
    notes_site_onenote_page_parent_notebook_section = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._site_onenote_page_parent_notebook_section_operatio'
        'ns#SiteOnenotePageParentNotebookSectionOperations.{}',
        client_factory=cf_site_onenote_page_parent_notebook_section)
    with self.command_group('notes', notes_site_onenote_page_parent_notebook_section,
                            client_factory=cf_site_onenote_page_parent_notebook_section) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('create-page', 'notes_create_page')
        g.custom_command('get-page', 'notes_get_page')
        g.custom_command('get-parent-notebook', 'notes_get_parent_notebook')
        g.custom_command('get-parent-section-group', 'notes_get_parent_section_group')
        g.custom_command('list-page', 'notes_list_page')
        g.custom_command('update-page', 'notes_update_page')
        g.custom_command('update-parent-notebook', 'notes_update_parent_notebook')
        g.custom_command('update-parent-section-group', 'notes_update_parent_section_group')

    from azext_notes.generated._client_factory import cf_site_onenote_parent_notebook_section_page
    notes_site_onenote_parent_notebook_section_page = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._site_onenote_parent_notebook_section_page_operatio'
        'ns#SiteOnenoteParentNotebookSectionPageOperations.{}',
        client_factory=cf_site_onenote_parent_notebook_section_page)
    with self.command_group('notes', notes_site_onenote_parent_notebook_section_page,
                            client_factory=cf_site_onenote_parent_notebook_section_page) as g:
        g.custom_command('get-page-content', 'notes_get_page_content')
        g.custom_command('set-page-content', 'notes_set_page_content')

    from azext_notes.generated._client_factory import cf_site_onenote_page_parent_notebook_section_parent_section_group
    notes_site_onenote_page_parent_notebook_section_parent_section_group = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._site_onenote_page_parent_notebook_section_parent_s'
        'ection_group_operations#SiteOnenotePageParentNotebookSectionParentSectionGroupOperations.{}',
        client_factory=cf_site_onenote_page_parent_notebook_section_parent_section_group)
    with self.command_group('notes', notes_site_onenote_page_parent_notebook_section_parent_section_group,
                            client_factory=cf_site_onenote_page_parent_notebook_section_parent_section_group) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('create-section', 'notes_create_section')
        g.custom_command('create-section-group', 'notes_create_section_group')
        g.custom_command('get-parent-notebook', 'notes_get_parent_notebook')
        g.custom_command('get-parent-section-group', 'notes_get_parent_section_group')
        g.custom_command('get-section', 'notes_get_section')
        g.custom_command('get-section-group', 'notes_get_section_group')
        g.custom_command('list-section', 'notes_list_section')
        g.custom_command('list-section-group', 'notes_list_section_group')
        g.custom_command('update-parent-notebook', 'notes_update_parent_notebook')
        g.custom_command('update-parent-section-group', 'notes_update_parent_section_group')
        g.custom_command('update-section', 'notes_update_section')
        g.custom_command('update-section-group', 'notes_update_section_group')

    from azext_notes.generated._client_factory import cf_site_onenote_page_parent_section
    notes_site_onenote_page_parent_section = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._site_onenote_page_parent_section_operations#SiteOn'
        'enotePageParentSectionOperations.{}',
        client_factory=cf_site_onenote_page_parent_section)
    with self.command_group('notes', notes_site_onenote_page_parent_section,
                            client_factory=cf_site_onenote_page_parent_section) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('create-page', 'notes_create_page')
        g.custom_command('get-page', 'notes_get_page')
        g.custom_command('get-parent-notebook', 'notes_get_parent_notebook')
        g.custom_command('get-parent-section-group', 'notes_get_parent_section_group')
        g.custom_command('list-page', 'notes_list_page')
        g.custom_command('update-page', 'notes_update_page')
        g.custom_command('update-parent-notebook', 'notes_update_parent_notebook')
        g.custom_command('update-parent-section-group', 'notes_update_parent_section_group')

    from azext_notes.generated._client_factory import cf_site_onenote_parent_section_page
    notes_site_onenote_parent_section_page = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._site_onenote_parent_section_page_operations#SiteOn'
        'enoteParentSectionPageOperations.{}',
        client_factory=cf_site_onenote_parent_section_page)
    with self.command_group('notes', notes_site_onenote_parent_section_page,
                            client_factory=cf_site_onenote_parent_section_page) as g:
        g.custom_command('get-page-content', 'notes_get_page_content')
        g.custom_command('set-page-content', 'notes_set_page_content')

    from azext_notes.generated._client_factory import cf_site_onenote_page_parent_section_parent_notebook
    notes_site_onenote_page_parent_section_parent_notebook = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._site_onenote_page_parent_section_parent_notebook_o'
        'perations#SiteOnenotePageParentSectionParentNotebookOperations.{}',
        client_factory=cf_site_onenote_page_parent_section_parent_notebook)
    with self.command_group('notes', notes_site_onenote_page_parent_section_parent_notebook,
                            client_factory=cf_site_onenote_page_parent_section_parent_notebook) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('create-section', 'notes_create_section')
        g.custom_command('create-section-group', 'notes_create_section_group')
        g.custom_command('get-section', 'notes_get_section')
        g.custom_command('get-section-group', 'notes_get_section_group')
        g.custom_command('list-section', 'notes_list_section')
        g.custom_command('list-section-group', 'notes_list_section_group')
        g.custom_command('update-section', 'notes_update_section')
        g.custom_command('update-section-group', 'notes_update_section_group')

    from azext_notes.generated._client_factory import cf_site_onenote_page_parent_section_parent_notebook_section_group
    notes_site_onenote_page_parent_section_parent_notebook_section_group = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._site_onenote_page_parent_section_parent_notebook_s'
        'ection_group_operations#SiteOnenotePageParentSectionParentNotebookSectionGroupOperations.{}',
        client_factory=cf_site_onenote_page_parent_section_parent_notebook_section_group)
    with self.command_group('notes', notes_site_onenote_page_parent_section_parent_notebook_section_group,
                            client_factory=cf_site_onenote_page_parent_section_parent_notebook_section_group) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('create-section', 'notes_create_section')
        g.custom_command('create-section-group', 'notes_create_section_group')
        g.custom_command('get-parent-notebook', 'notes_get_parent_notebook')
        g.custom_command('get-parent-section-group', 'notes_get_parent_section_group')
        g.custom_command('get-section', 'notes_get_section')
        g.custom_command('get-section-group', 'notes_get_section_group')
        g.custom_command('list-section', 'notes_list_section')
        g.custom_command('list-section-group', 'notes_list_section_group')
        g.custom_command('update-parent-notebook', 'notes_update_parent_notebook')
        g.custom_command('update-parent-section-group', 'notes_update_parent_section_group')
        g.custom_command('update-section', 'notes_update_section')
        g.custom_command('update-section-group', 'notes_update_section_group')

    from azext_notes.generated._client_factory import cf_site_onenote_page_parent_section_parent_section_group
    notes_site_onenote_page_parent_section_parent_section_group = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._site_onenote_page_parent_section_parent_section_gr'
        'oup_operations#SiteOnenotePageParentSectionParentSectionGroupOperations.{}',
        client_factory=cf_site_onenote_page_parent_section_parent_section_group)
    with self.command_group('notes', notes_site_onenote_page_parent_section_parent_section_group,
                            client_factory=cf_site_onenote_page_parent_section_parent_section_group) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('create-section', 'notes_create_section')
        g.custom_command('create-section-group', 'notes_create_section_group')
        g.custom_command('get-parent-notebook', 'notes_get_parent_notebook')
        g.custom_command('get-parent-section-group', 'notes_get_parent_section_group')
        g.custom_command('get-section', 'notes_get_section')
        g.custom_command('get-section-group', 'notes_get_section_group')
        g.custom_command('list-section', 'notes_list_section')
        g.custom_command('list-section-group', 'notes_list_section_group')
        g.custom_command('update-parent-notebook', 'notes_update_parent_notebook')
        g.custom_command('update-parent-section-group', 'notes_update_parent_section_group')
        g.custom_command('update-section', 'notes_update_section')
        g.custom_command('update-section-group', 'notes_update_section_group')

    from azext_notes.generated._client_factory import cf_site_onenote_page_parent_section_parent_section_group_parent_notebook
    notes_site_onenote_page_parent_section_parent_section_group_parent_notebook = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._site_onenote_page_parent_section_parent_section_gr'
        'oup_parent_notebook_operations#SiteOnenotePageParentSectionParentSectionGroupParentNotebookOperations.{}',
        client_factory=cf_site_onenote_page_parent_section_parent_section_group_parent_notebook)
    with self.command_group('notes', notes_site_onenote_page_parent_section_parent_section_group_parent_notebook,
                            client_factory=cf_site_onenote_page_parent_section_parent_section_group_parent_notebook) \
                            as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('create-section', 'notes_create_section')
        g.custom_command('create-section-group', 'notes_create_section_group')
        g.custom_command('get-section', 'notes_get_section')
        g.custom_command('get-section-group', 'notes_get_section_group')
        g.custom_command('list-section', 'notes_list_section')
        g.custom_command('list-section-group', 'notes_list_section_group')
        g.custom_command('update-section', 'notes_update_section')
        g.custom_command('update-section-group', 'notes_update_section_group')

    from azext_notes.generated._client_factory import cf_site_onenote_section_group
    notes_site_onenote_section_group = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._site_onenote_section_group_operations#SiteOnenoteS'
        'ectionGroupOperations.{}',
        client_factory=cf_site_onenote_section_group)
    with self.command_group('notes', notes_site_onenote_section_group,
                            client_factory=cf_site_onenote_section_group) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('create-section', 'notes_create_section')
        g.custom_command('create-section-group', 'notes_create_section_group')
        g.custom_command('get-parent-notebook', 'notes_get_parent_notebook')
        g.custom_command('get-parent-section-group', 'notes_get_parent_section_group')
        g.custom_command('get-section', 'notes_get_section')
        g.custom_command('get-section-group', 'notes_get_section_group')
        g.custom_command('list-section', 'notes_list_section')
        g.custom_command('list-section-group', 'notes_list_section_group')
        g.custom_command('update-parent-notebook', 'notes_update_parent_notebook')
        g.custom_command('update-parent-section-group', 'notes_update_parent_section_group')
        g.custom_command('update-section', 'notes_update_section')
        g.custom_command('update-section-group', 'notes_update_section_group')

    from azext_notes.generated._client_factory import cf_site_onenote_section_group_parent_notebook
    notes_site_onenote_section_group_parent_notebook = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._site_onenote_section_group_parent_notebook_operati'
        'ons#SiteOnenoteSectionGroupParentNotebookOperations.{}',
        client_factory=cf_site_onenote_section_group_parent_notebook)
    with self.command_group('notes', notes_site_onenote_section_group_parent_notebook,
                            client_factory=cf_site_onenote_section_group_parent_notebook) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('create-section', 'notes_create_section')
        g.custom_command('create-section-group', 'notes_create_section_group')
        g.custom_command('get-section', 'notes_get_section')
        g.custom_command('get-section-group', 'notes_get_section_group')
        g.custom_command('list-section', 'notes_list_section')
        g.custom_command('list-section-group', 'notes_list_section_group')
        g.custom_command('update-section', 'notes_update_section')
        g.custom_command('update-section-group', 'notes_update_section_group')

    from azext_notes.generated._client_factory import cf_site_onenote_section_group_parent_notebook_section
    notes_site_onenote_section_group_parent_notebook_section = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._site_onenote_section_group_parent_notebook_section'
        '_operations#SiteOnenoteSectionGroupParentNotebookSectionOperations.{}',
        client_factory=cf_site_onenote_section_group_parent_notebook_section)
    with self.command_group('notes', notes_site_onenote_section_group_parent_notebook_section,
                            client_factory=cf_site_onenote_section_group_parent_notebook_section) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('create-page', 'notes_create_page')
        g.custom_command('get-page', 'notes_get_page')
        g.custom_command('get-page-content', 'notes_get_page_content')
        g.custom_command('get-parent-notebook', 'notes_get_parent_notebook')
        g.custom_command('get-parent-section-group', 'notes_get_parent_section_group')
        g.custom_command('list-page', 'notes_list_page')
        g.custom_command('set-page-content', 'notes_set_page_content')
        g.custom_command('update-page', 'notes_update_page')
        g.custom_command('update-parent-notebook', 'notes_update_parent_notebook')
        g.custom_command('update-parent-section-group', 'notes_update_parent_section_group')

    from azext_notes.generated._client_factory import cf_site_onenote_section_group_parent_notebook_section_page
    notes_site_onenote_section_group_parent_notebook_section_page = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._site_onenote_section_group_parent_notebook_section'
        '_page_operations#SiteOnenoteSectionGroupParentNotebookSectionPageOperations.{}',
        client_factory=cf_site_onenote_section_group_parent_notebook_section_page)
    with self.command_group('notes', notes_site_onenote_section_group_parent_notebook_section_page,
                            client_factory=cf_site_onenote_section_group_parent_notebook_section_page) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('get-parent-notebook', 'notes_get_parent_notebook')
        g.custom_command('get-parent-section', 'notes_get_parent_section')
        g.custom_command('update-parent-notebook', 'notes_update_parent_notebook')
        g.custom_command('update-parent-section', 'notes_update_parent_section')

    from azext_notes.generated._client_factory import cf_site_onenote_section_group_section
    notes_site_onenote_section_group_section = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._site_onenote_section_group_section_operations#Site'
        'OnenoteSectionGroupSectionOperations.{}',
        client_factory=cf_site_onenote_section_group_section)
    with self.command_group('notes', notes_site_onenote_section_group_section,
                            client_factory=cf_site_onenote_section_group_section) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('create-page', 'notes_create_page')
        g.custom_command('get-page', 'notes_get_page')
        g.custom_command('get-page-content', 'notes_get_page_content')
        g.custom_command('get-parent-notebook', 'notes_get_parent_notebook')
        g.custom_command('get-parent-section-group', 'notes_get_parent_section_group')
        g.custom_command('list-page', 'notes_list_page')
        g.custom_command('set-page-content', 'notes_set_page_content')
        g.custom_command('update-page', 'notes_update_page')
        g.custom_command('update-parent-notebook', 'notes_update_parent_notebook')
        g.custom_command('update-parent-section-group', 'notes_update_parent_section_group')

    from azext_notes.generated._client_factory import cf_site_onenote_section_group_section_page
    notes_site_onenote_section_group_section_page = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._site_onenote_section_group_section_page_operations'
        '#SiteOnenoteSectionGroupSectionPageOperations.{}',
        client_factory=cf_site_onenote_section_group_section_page)
    with self.command_group('notes', notes_site_onenote_section_group_section_page,
                            client_factory=cf_site_onenote_section_group_section_page) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('get-parent-notebook', 'notes_get_parent_notebook')
        g.custom_command('get-parent-section', 'notes_get_parent_section')
        g.custom_command('update-parent-notebook', 'notes_update_parent_notebook')
        g.custom_command('update-parent-section', 'notes_update_parent_section')

    from azext_notes.generated._client_factory import cf_site_onenote_section_group_section_page_parent_notebook
    notes_site_onenote_section_group_section_page_parent_notebook = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._site_onenote_section_group_section_page_parent_not'
        'ebook_operations#SiteOnenoteSectionGroupSectionPageParentNotebookOperations.{}',
        client_factory=cf_site_onenote_section_group_section_page_parent_notebook)
    with self.command_group('notes', notes_site_onenote_section_group_section_page_parent_notebook,
                            client_factory=cf_site_onenote_section_group_section_page_parent_notebook) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('create-section', 'notes_create_section')
        g.custom_command('create-section-group', 'notes_create_section_group')
        g.custom_command('get-section', 'notes_get_section')
        g.custom_command('get-section-group', 'notes_get_section_group')
        g.custom_command('list-section', 'notes_list_section')
        g.custom_command('list-section-group', 'notes_list_section_group')
        g.custom_command('update-section', 'notes_update_section')
        g.custom_command('update-section-group', 'notes_update_section_group')

    from azext_notes.generated._client_factory import cf_site_onenote_section_group_section_parent_notebook
    notes_site_onenote_section_group_section_parent_notebook = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._site_onenote_section_group_section_parent_notebook'
        '_operations#SiteOnenoteSectionGroupSectionParentNotebookOperations.{}',
        client_factory=cf_site_onenote_section_group_section_parent_notebook)
    with self.command_group('notes', notes_site_onenote_section_group_section_parent_notebook,
                            client_factory=cf_site_onenote_section_group_section_parent_notebook) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('create-section', 'notes_create_section')
        g.custom_command('create-section-group', 'notes_create_section_group')
        g.custom_command('get-section', 'notes_get_section')
        g.custom_command('get-section-group', 'notes_get_section_group')
        g.custom_command('list-section', 'notes_list_section')
        g.custom_command('list-section-group', 'notes_list_section_group')
        g.custom_command('update-section', 'notes_update_section')
        g.custom_command('update-section-group', 'notes_update_section_group')

    from azext_notes.generated._client_factory import cf_site_onenote_section
    notes_site_onenote_section = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._site_onenote_section_operations#SiteOnenoteSection'
        'Operations.{}',
        client_factory=cf_site_onenote_section)
    with self.command_group('notes', notes_site_onenote_section, client_factory=cf_site_onenote_section) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('create-page', 'notes_create_page')
        g.custom_command('get-page', 'notes_get_page')
        g.custom_command('get-page-content', 'notes_get_page_content')
        g.custom_command('get-parent-notebook', 'notes_get_parent_notebook')
        g.custom_command('get-parent-section-group', 'notes_get_parent_section_group')
        g.custom_command('list-page', 'notes_list_page')
        g.custom_command('set-page-content', 'notes_set_page_content')
        g.custom_command('update-page', 'notes_update_page')
        g.custom_command('update-parent-notebook', 'notes_update_parent_notebook')
        g.custom_command('update-parent-section-group', 'notes_update_parent_section_group')

    from azext_notes.generated._client_factory import cf_site_onenote_section_page
    notes_site_onenote_section_page = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._site_onenote_section_page_operations#SiteOnenoteSe'
        'ctionPageOperations.{}',
        client_factory=cf_site_onenote_section_page)
    with self.command_group('notes', notes_site_onenote_section_page,
                            client_factory=cf_site_onenote_section_page) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('get-parent-notebook', 'notes_get_parent_notebook')
        g.custom_command('get-parent-section', 'notes_get_parent_section')
        g.custom_command('update-parent-notebook', 'notes_update_parent_notebook')
        g.custom_command('update-parent-section', 'notes_update_parent_section')

    from azext_notes.generated._client_factory import cf_site_onenote_section_page_parent_notebook
    notes_site_onenote_section_page_parent_notebook = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._site_onenote_section_page_parent_notebook_operatio'
        'ns#SiteOnenoteSectionPageParentNotebookOperations.{}',
        client_factory=cf_site_onenote_section_page_parent_notebook)
    with self.command_group('notes', notes_site_onenote_section_page_parent_notebook,
                            client_factory=cf_site_onenote_section_page_parent_notebook) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('create-section', 'notes_create_section')
        g.custom_command('create-section-group', 'notes_create_section_group')
        g.custom_command('get-section', 'notes_get_section')
        g.custom_command('get-section-group', 'notes_get_section_group')
        g.custom_command('list-section', 'notes_list_section')
        g.custom_command('list-section-group', 'notes_list_section_group')
        g.custom_command('update-section', 'notes_update_section')
        g.custom_command('update-section-group', 'notes_update_section_group')

    from azext_notes.generated._client_factory import cf_site_onenote_section_page_parent_notebook_section_group
    notes_site_onenote_section_page_parent_notebook_section_group = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._site_onenote_section_page_parent_notebook_section_'
        'group_operations#SiteOnenoteSectionPageParentNotebookSectionGroupOperations.{}',
        client_factory=cf_site_onenote_section_page_parent_notebook_section_group)
    with self.command_group('notes', notes_site_onenote_section_page_parent_notebook_section_group,
                            client_factory=cf_site_onenote_section_page_parent_notebook_section_group) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('create-section', 'notes_create_section')
        g.custom_command('create-section-group', 'notes_create_section_group')
        g.custom_command('get-parent-notebook', 'notes_get_parent_notebook')
        g.custom_command('get-parent-section-group', 'notes_get_parent_section_group')
        g.custom_command('get-section', 'notes_get_section')
        g.custom_command('get-section-group', 'notes_get_section_group')
        g.custom_command('list-section', 'notes_list_section')
        g.custom_command('list-section-group', 'notes_list_section_group')
        g.custom_command('update-parent-notebook', 'notes_update_parent_notebook')
        g.custom_command('update-parent-section-group', 'notes_update_parent_section_group')
        g.custom_command('update-section', 'notes_update_section')
        g.custom_command('update-section-group', 'notes_update_section_group')

    from azext_notes.generated._client_factory import cf_site_onenote_section_parent_notebook
    notes_site_onenote_section_parent_notebook = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._site_onenote_section_parent_notebook_operations#Si'
        'teOnenoteSectionParentNotebookOperations.{}',
        client_factory=cf_site_onenote_section_parent_notebook)
    with self.command_group('notes', notes_site_onenote_section_parent_notebook,
                            client_factory=cf_site_onenote_section_parent_notebook) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('create-section', 'notes_create_section')
        g.custom_command('create-section-group', 'notes_create_section_group')
        g.custom_command('get-section', 'notes_get_section')
        g.custom_command('get-section-group', 'notes_get_section_group')
        g.custom_command('list-section', 'notes_list_section')
        g.custom_command('list-section-group', 'notes_list_section_group')
        g.custom_command('update-section', 'notes_update_section')
        g.custom_command('update-section-group', 'notes_update_section_group')

    from azext_notes.generated._client_factory import cf_site_onenote_section_parent_notebook_section_group
    notes_site_onenote_section_parent_notebook_section_group = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._site_onenote_section_parent_notebook_section_group'
        '_operations#SiteOnenoteSectionParentNotebookSectionGroupOperations.{}',
        client_factory=cf_site_onenote_section_parent_notebook_section_group)
    with self.command_group('notes', notes_site_onenote_section_parent_notebook_section_group,
                            client_factory=cf_site_onenote_section_parent_notebook_section_group) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('create-section', 'notes_create_section')
        g.custom_command('create-section-group', 'notes_create_section_group')
        g.custom_command('get-parent-notebook', 'notes_get_parent_notebook')
        g.custom_command('get-parent-section-group', 'notes_get_parent_section_group')
        g.custom_command('get-section', 'notes_get_section')
        g.custom_command('get-section-group', 'notes_get_section_group')
        g.custom_command('list-section', 'notes_list_section')
        g.custom_command('list-section-group', 'notes_list_section_group')
        g.custom_command('update-parent-notebook', 'notes_update_parent_notebook')
        g.custom_command('update-parent-section-group', 'notes_update_parent_section_group')
        g.custom_command('update-section', 'notes_update_section')
        g.custom_command('update-section-group', 'notes_update_section_group')

    from azext_notes.generated._client_factory import cf_site_onenote_section_parent_section_group
    notes_site_onenote_section_parent_section_group = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._site_onenote_section_parent_section_group_operatio'
        'ns#SiteOnenoteSectionParentSectionGroupOperations.{}',
        client_factory=cf_site_onenote_section_parent_section_group)
    with self.command_group('notes', notes_site_onenote_section_parent_section_group,
                            client_factory=cf_site_onenote_section_parent_section_group) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('create-section', 'notes_create_section')
        g.custom_command('create-section-group', 'notes_create_section_group')
        g.custom_command('get-parent-notebook', 'notes_get_parent_notebook')
        g.custom_command('get-parent-section-group', 'notes_get_parent_section_group')
        g.custom_command('get-section', 'notes_get_section')
        g.custom_command('get-section-group', 'notes_get_section_group')
        g.custom_command('list-section', 'notes_list_section')
        g.custom_command('list-section-group', 'notes_list_section_group')
        g.custom_command('update-parent-notebook', 'notes_update_parent_notebook')
        g.custom_command('update-parent-section-group', 'notes_update_parent_section_group')
        g.custom_command('update-section', 'notes_update_section')
        g.custom_command('update-section-group', 'notes_update_section_group')

    from azext_notes.generated._client_factory import cf_site_onenote_section_parent_section_group_parent_notebook
    notes_site_onenote_section_parent_section_group_parent_notebook = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._site_onenote_section_parent_section_group_parent_n'
        'otebook_operations#SiteOnenoteSectionParentSectionGroupParentNotebookOperations.{}',
        client_factory=cf_site_onenote_section_parent_section_group_parent_notebook)
    with self.command_group('notes', notes_site_onenote_section_parent_section_group_parent_notebook,
                            client_factory=cf_site_onenote_section_parent_section_group_parent_notebook) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('create-section', 'notes_create_section')
        g.custom_command('create-section-group', 'notes_create_section_group')
        g.custom_command('get-section', 'notes_get_section')
        g.custom_command('get-section-group', 'notes_get_section_group')
        g.custom_command('list-section', 'notes_list_section')
        g.custom_command('list-section-group', 'notes_list_section_group')
        g.custom_command('update-section', 'notes_update_section')
        g.custom_command('update-section-group', 'notes_update_section_group')

    from azext_notes.generated._client_factory import cf_user
    notes_user = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._user_operations#UserOperations.{}',
        client_factory=cf_user)
    with self.command_group('notes', notes_user, client_factory=cf_user) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('get-onenote', 'notes_get_onenote')
        g.custom_command('update-onenote', 'notes_update_onenote')

    from azext_notes.generated._client_factory import cf_user_onenote
    notes_user_onenote = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._user_onenote_operations#UserOnenoteOperations.{}',
        client_factory=cf_user_onenote)
    with self.command_group('notes', notes_user_onenote, client_factory=cf_user_onenote) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('create-notebook', 'notes_create_notebook')
        g.custom_command('create-operation', 'notes_create_operation')
        g.custom_command('create-page', 'notes_create_page')
        g.custom_command('create-resource', 'notes_create_resource')
        g.custom_command('create-section', 'notes_create_section')
        g.custom_command('create-section-group', 'notes_create_section_group')
        g.custom_command('get-notebook', 'notes_get_notebook')
        g.custom_command('get-operation', 'notes_get_operation')
        g.custom_command('get-page', 'notes_get_page')
        g.custom_command('get-page-content', 'notes_get_page_content')
        g.custom_command('get-resource', 'notes_get_resource')
        g.custom_command('get-resource-content', 'notes_get_resource_content')
        g.custom_command('get-section', 'notes_get_section')
        g.custom_command('get-section-group', 'notes_get_section_group')
        g.custom_command('list-notebook', 'notes_list_notebook')
        g.custom_command('list-operation', 'notes_list_operation')
        g.custom_command('list-page', 'notes_list_page')
        g.custom_command('list-resource', 'notes_list_resource')
        g.custom_command('list-section', 'notes_list_section')
        g.custom_command('list-section-group', 'notes_list_section_group')
        g.custom_command('set-page-content', 'notes_set_page_content')
        g.custom_command('set-resource-content', 'notes_set_resource_content')
        g.custom_command('update-notebook', 'notes_update_notebook')
        g.custom_command('update-operation', 'notes_update_operation')
        g.custom_command('update-page', 'notes_update_page')
        g.custom_command('update-resource', 'notes_update_resource')
        g.custom_command('update-section', 'notes_update_section')
        g.custom_command('update-section-group', 'notes_update_section_group')

    from azext_notes.generated._client_factory import cf_user_onenote_notebook
    notes_user_onenote_notebook = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._user_onenote_notebook_operations#UserOnenoteNotebo'
        'okOperations.{}',
        client_factory=cf_user_onenote_notebook)
    with self.command_group('notes', notes_user_onenote_notebook, client_factory=cf_user_onenote_notebook) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('create-section', 'notes_create_section')
        g.custom_command('create-section-group', 'notes_create_section_group')
        g.custom_command('get-section', 'notes_get_section')
        g.custom_command('get-section-group', 'notes_get_section_group')
        g.custom_command('list-section', 'notes_list_section')
        g.custom_command('list-section-group', 'notes_list_section_group')
        g.custom_command('update-section', 'notes_update_section')
        g.custom_command('update-section-group', 'notes_update_section_group')

    from azext_notes.generated._client_factory import cf_user_onenote_notebook_section_group
    notes_user_onenote_notebook_section_group = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._user_onenote_notebook_section_group_operations#Use'
        'rOnenoteNotebookSectionGroupOperations.{}',
        client_factory=cf_user_onenote_notebook_section_group)
    with self.command_group('notes', notes_user_onenote_notebook_section_group,
                            client_factory=cf_user_onenote_notebook_section_group) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('create-section', 'notes_create_section')
        g.custom_command('create-section-group', 'notes_create_section_group')
        g.custom_command('get-parent-notebook', 'notes_get_parent_notebook')
        g.custom_command('get-parent-section-group', 'notes_get_parent_section_group')
        g.custom_command('get-section', 'notes_get_section')
        g.custom_command('get-section-group', 'notes_get_section_group')
        g.custom_command('list-section', 'notes_list_section')
        g.custom_command('list-section-group', 'notes_list_section_group')
        g.custom_command('update-parent-notebook', 'notes_update_parent_notebook')
        g.custom_command('update-parent-section-group', 'notes_update_parent_section_group')
        g.custom_command('update-section', 'notes_update_section')
        g.custom_command('update-section-group', 'notes_update_section_group')

    from azext_notes.generated._client_factory import cf_user_onenote_notebook_section_group_section
    notes_user_onenote_notebook_section_group_section = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._user_onenote_notebook_section_group_section_operat'
        'ions#UserOnenoteNotebookSectionGroupSectionOperations.{}',
        client_factory=cf_user_onenote_notebook_section_group_section)
    with self.command_group('notes', notes_user_onenote_notebook_section_group_section,
                            client_factory=cf_user_onenote_notebook_section_group_section) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('create-page', 'notes_create_page')
        g.custom_command('get-page', 'notes_get_page')
        g.custom_command('get-page-content', 'notes_get_page_content')
        g.custom_command('get-parent-notebook', 'notes_get_parent_notebook')
        g.custom_command('get-parent-section-group', 'notes_get_parent_section_group')
        g.custom_command('list-page', 'notes_list_page')
        g.custom_command('set-page-content', 'notes_set_page_content')
        g.custom_command('update-page', 'notes_update_page')
        g.custom_command('update-parent-notebook', 'notes_update_parent_notebook')
        g.custom_command('update-parent-section-group', 'notes_update_parent_section_group')

    from azext_notes.generated._client_factory import cf_user_onenote_notebook_section_group_section_page
    notes_user_onenote_notebook_section_group_section_page = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._user_onenote_notebook_section_group_section_page_o'
        'perations#UserOnenoteNotebookSectionGroupSectionPageOperations.{}',
        client_factory=cf_user_onenote_notebook_section_group_section_page)
    with self.command_group('notes', notes_user_onenote_notebook_section_group_section_page,
                            client_factory=cf_user_onenote_notebook_section_group_section_page) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('get-parent-notebook', 'notes_get_parent_notebook')
        g.custom_command('get-parent-section', 'notes_get_parent_section')
        g.custom_command('update-parent-notebook', 'notes_update_parent_notebook')
        g.custom_command('update-parent-section', 'notes_update_parent_section')

    from azext_notes.generated._client_factory import cf_user_onenote_notebook_section
    notes_user_onenote_notebook_section = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._user_onenote_notebook_section_operations#UserOneno'
        'teNotebookSectionOperations.{}',
        client_factory=cf_user_onenote_notebook_section)
    with self.command_group('notes', notes_user_onenote_notebook_section,
                            client_factory=cf_user_onenote_notebook_section) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('create-page', 'notes_create_page')
        g.custom_command('get-page', 'notes_get_page')
        g.custom_command('get-page-content', 'notes_get_page_content')
        g.custom_command('get-parent-notebook', 'notes_get_parent_notebook')
        g.custom_command('get-parent-section-group', 'notes_get_parent_section_group')
        g.custom_command('list-page', 'notes_list_page')
        g.custom_command('set-page-content', 'notes_set_page_content')
        g.custom_command('update-page', 'notes_update_page')
        g.custom_command('update-parent-notebook', 'notes_update_parent_notebook')
        g.custom_command('update-parent-section-group', 'notes_update_parent_section_group')

    from azext_notes.generated._client_factory import cf_user_onenote_notebook_section_page
    notes_user_onenote_notebook_section_page = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._user_onenote_notebook_section_page_operations#User'
        'OnenoteNotebookSectionPageOperations.{}',
        client_factory=cf_user_onenote_notebook_section_page)
    with self.command_group('notes', notes_user_onenote_notebook_section_page,
                            client_factory=cf_user_onenote_notebook_section_page) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('get-parent-notebook', 'notes_get_parent_notebook')
        g.custom_command('get-parent-section', 'notes_get_parent_section')
        g.custom_command('update-parent-notebook', 'notes_update_parent_notebook')
        g.custom_command('update-parent-section', 'notes_update_parent_section')

    from azext_notes.generated._client_factory import cf_user_onenote_notebook_section_parent_section_group
    notes_user_onenote_notebook_section_parent_section_group = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._user_onenote_notebook_section_parent_section_group'
        '_operations#UserOnenoteNotebookSectionParentSectionGroupOperations.{}',
        client_factory=cf_user_onenote_notebook_section_parent_section_group)
    with self.command_group('notes', notes_user_onenote_notebook_section_parent_section_group,
                            client_factory=cf_user_onenote_notebook_section_parent_section_group) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('create-section', 'notes_create_section')
        g.custom_command('create-section-group', 'notes_create_section_group')
        g.custom_command('get-parent-notebook', 'notes_get_parent_notebook')
        g.custom_command('get-parent-section-group', 'notes_get_parent_section_group')
        g.custom_command('get-section', 'notes_get_section')
        g.custom_command('get-section-group', 'notes_get_section_group')
        g.custom_command('list-section', 'notes_list_section')
        g.custom_command('list-section-group', 'notes_list_section_group')
        g.custom_command('update-parent-notebook', 'notes_update_parent_notebook')
        g.custom_command('update-parent-section-group', 'notes_update_parent_section_group')
        g.custom_command('update-section', 'notes_update_section')
        g.custom_command('update-section-group', 'notes_update_section_group')

    from azext_notes.generated._client_factory import cf_user_onenote_page
    notes_user_onenote_page = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._user_onenote_page_operations#UserOnenotePageOperat'
        'ions.{}',
        client_factory=cf_user_onenote_page)
    with self.command_group('notes', notes_user_onenote_page, client_factory=cf_user_onenote_page) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('get-parent-notebook', 'notes_get_parent_notebook')
        g.custom_command('get-parent-section', 'notes_get_parent_section')
        g.custom_command('update-parent-notebook', 'notes_update_parent_notebook')
        g.custom_command('update-parent-section', 'notes_update_parent_section')

    from azext_notes.generated._client_factory import cf_user_onenote_page_parent_notebook
    notes_user_onenote_page_parent_notebook = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._user_onenote_page_parent_notebook_operations#UserO'
        'nenotePageParentNotebookOperations.{}',
        client_factory=cf_user_onenote_page_parent_notebook)
    with self.command_group('notes', notes_user_onenote_page_parent_notebook,
                            client_factory=cf_user_onenote_page_parent_notebook) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('create-section', 'notes_create_section')
        g.custom_command('create-section-group', 'notes_create_section_group')
        g.custom_command('get-section', 'notes_get_section')
        g.custom_command('get-section-group', 'notes_get_section_group')
        g.custom_command('list-section', 'notes_list_section')
        g.custom_command('list-section-group', 'notes_list_section_group')
        g.custom_command('update-section', 'notes_update_section')
        g.custom_command('update-section-group', 'notes_update_section_group')

    from azext_notes.generated._client_factory import cf_user_onenote_page_parent_notebook_section_group
    notes_user_onenote_page_parent_notebook_section_group = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._user_onenote_page_parent_notebook_section_group_op'
        'erations#UserOnenotePageParentNotebookSectionGroupOperations.{}',
        client_factory=cf_user_onenote_page_parent_notebook_section_group)
    with self.command_group('notes', notes_user_onenote_page_parent_notebook_section_group,
                            client_factory=cf_user_onenote_page_parent_notebook_section_group) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('create-section', 'notes_create_section')
        g.custom_command('create-section-group', 'notes_create_section_group')
        g.custom_command('get-parent-notebook', 'notes_get_parent_notebook')
        g.custom_command('get-parent-section-group', 'notes_get_parent_section_group')
        g.custom_command('get-section', 'notes_get_section')
        g.custom_command('get-section-group', 'notes_get_section_group')
        g.custom_command('list-section', 'notes_list_section')
        g.custom_command('list-section-group', 'notes_list_section_group')
        g.custom_command('update-parent-notebook', 'notes_update_parent_notebook')
        g.custom_command('update-parent-section-group', 'notes_update_parent_section_group')
        g.custom_command('update-section', 'notes_update_section')
        g.custom_command('update-section-group', 'notes_update_section_group')

    from azext_notes.generated._client_factory import cf_user_onenote_page_parent_notebook_section_group_section
    notes_user_onenote_page_parent_notebook_section_group_section = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._user_onenote_page_parent_notebook_section_group_se'
        'ction_operations#UserOnenotePageParentNotebookSectionGroupSectionOperations.{}',
        client_factory=cf_user_onenote_page_parent_notebook_section_group_section)
    with self.command_group('notes', notes_user_onenote_page_parent_notebook_section_group_section,
                            client_factory=cf_user_onenote_page_parent_notebook_section_group_section) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('create-page', 'notes_create_page')
        g.custom_command('get-page', 'notes_get_page')
        g.custom_command('get-parent-notebook', 'notes_get_parent_notebook')
        g.custom_command('get-parent-section-group', 'notes_get_parent_section_group')
        g.custom_command('list-page', 'notes_list_page')
        g.custom_command('update-page', 'notes_update_page')
        g.custom_command('update-parent-notebook', 'notes_update_parent_notebook')
        g.custom_command('update-parent-section-group', 'notes_update_parent_section_group')

    from azext_notes.generated._client_factory import cf_user_onenote_parent_notebook_section_group_section_page
    notes_user_onenote_parent_notebook_section_group_section_page = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._user_onenote_parent_notebook_section_group_section'
        '_page_operations#UserOnenoteParentNotebookSectionGroupSectionPageOperations.{}',
        client_factory=cf_user_onenote_parent_notebook_section_group_section_page)
    with self.command_group('notes', notes_user_onenote_parent_notebook_section_group_section_page,
                            client_factory=cf_user_onenote_parent_notebook_section_group_section_page) as g:
        g.custom_command('get-page-content', 'notes_get_page_content')
        g.custom_command('set-page-content', 'notes_set_page_content')

    from azext_notes.generated._client_factory import cf_user_onenote_page_parent_notebook_section
    notes_user_onenote_page_parent_notebook_section = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._user_onenote_page_parent_notebook_section_operatio'
        'ns#UserOnenotePageParentNotebookSectionOperations.{}',
        client_factory=cf_user_onenote_page_parent_notebook_section)
    with self.command_group('notes', notes_user_onenote_page_parent_notebook_section,
                            client_factory=cf_user_onenote_page_parent_notebook_section) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('create-page', 'notes_create_page')
        g.custom_command('get-page', 'notes_get_page')
        g.custom_command('get-parent-notebook', 'notes_get_parent_notebook')
        g.custom_command('get-parent-section-group', 'notes_get_parent_section_group')
        g.custom_command('list-page', 'notes_list_page')
        g.custom_command('update-page', 'notes_update_page')
        g.custom_command('update-parent-notebook', 'notes_update_parent_notebook')
        g.custom_command('update-parent-section-group', 'notes_update_parent_section_group')

    from azext_notes.generated._client_factory import cf_user_onenote_parent_notebook_section_page
    notes_user_onenote_parent_notebook_section_page = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._user_onenote_parent_notebook_section_page_operatio'
        'ns#UserOnenoteParentNotebookSectionPageOperations.{}',
        client_factory=cf_user_onenote_parent_notebook_section_page)
    with self.command_group('notes', notes_user_onenote_parent_notebook_section_page,
                            client_factory=cf_user_onenote_parent_notebook_section_page) as g:
        g.custom_command('get-page-content', 'notes_get_page_content')
        g.custom_command('set-page-content', 'notes_set_page_content')

    from azext_notes.generated._client_factory import cf_user_onenote_page_parent_notebook_section_parent_section_group
    notes_user_onenote_page_parent_notebook_section_parent_section_group = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._user_onenote_page_parent_notebook_section_parent_s'
        'ection_group_operations#UserOnenotePageParentNotebookSectionParentSectionGroupOperations.{}',
        client_factory=cf_user_onenote_page_parent_notebook_section_parent_section_group)
    with self.command_group('notes', notes_user_onenote_page_parent_notebook_section_parent_section_group,
                            client_factory=cf_user_onenote_page_parent_notebook_section_parent_section_group) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('create-section', 'notes_create_section')
        g.custom_command('create-section-group', 'notes_create_section_group')
        g.custom_command('get-parent-notebook', 'notes_get_parent_notebook')
        g.custom_command('get-parent-section-group', 'notes_get_parent_section_group')
        g.custom_command('get-section', 'notes_get_section')
        g.custom_command('get-section-group', 'notes_get_section_group')
        g.custom_command('list-section', 'notes_list_section')
        g.custom_command('list-section-group', 'notes_list_section_group')
        g.custom_command('update-parent-notebook', 'notes_update_parent_notebook')
        g.custom_command('update-parent-section-group', 'notes_update_parent_section_group')
        g.custom_command('update-section', 'notes_update_section')
        g.custom_command('update-section-group', 'notes_update_section_group')

    from azext_notes.generated._client_factory import cf_user_onenote_page_parent_section
    notes_user_onenote_page_parent_section = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._user_onenote_page_parent_section_operations#UserOn'
        'enotePageParentSectionOperations.{}',
        client_factory=cf_user_onenote_page_parent_section)
    with self.command_group('notes', notes_user_onenote_page_parent_section,
                            client_factory=cf_user_onenote_page_parent_section) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('create-page', 'notes_create_page')
        g.custom_command('get-page', 'notes_get_page')
        g.custom_command('get-parent-notebook', 'notes_get_parent_notebook')
        g.custom_command('get-parent-section-group', 'notes_get_parent_section_group')
        g.custom_command('list-page', 'notes_list_page')
        g.custom_command('update-page', 'notes_update_page')
        g.custom_command('update-parent-notebook', 'notes_update_parent_notebook')
        g.custom_command('update-parent-section-group', 'notes_update_parent_section_group')

    from azext_notes.generated._client_factory import cf_user_onenote_parent_section_page
    notes_user_onenote_parent_section_page = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._user_onenote_parent_section_page_operations#UserOn'
        'enoteParentSectionPageOperations.{}',
        client_factory=cf_user_onenote_parent_section_page)
    with self.command_group('notes', notes_user_onenote_parent_section_page,
                            client_factory=cf_user_onenote_parent_section_page) as g:
        g.custom_command('get-page-content', 'notes_get_page_content')
        g.custom_command('set-page-content', 'notes_set_page_content')

    from azext_notes.generated._client_factory import cf_user_onenote_page_parent_section_parent_notebook
    notes_user_onenote_page_parent_section_parent_notebook = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._user_onenote_page_parent_section_parent_notebook_o'
        'perations#UserOnenotePageParentSectionParentNotebookOperations.{}',
        client_factory=cf_user_onenote_page_parent_section_parent_notebook)
    with self.command_group('notes', notes_user_onenote_page_parent_section_parent_notebook,
                            client_factory=cf_user_onenote_page_parent_section_parent_notebook) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('create-section', 'notes_create_section')
        g.custom_command('create-section-group', 'notes_create_section_group')
        g.custom_command('get-section', 'notes_get_section')
        g.custom_command('get-section-group', 'notes_get_section_group')
        g.custom_command('list-section', 'notes_list_section')
        g.custom_command('list-section-group', 'notes_list_section_group')
        g.custom_command('update-section', 'notes_update_section')
        g.custom_command('update-section-group', 'notes_update_section_group')

    from azext_notes.generated._client_factory import cf_user_onenote_page_parent_section_parent_notebook_section_group
    notes_user_onenote_page_parent_section_parent_notebook_section_group = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._user_onenote_page_parent_section_parent_notebook_s'
        'ection_group_operations#UserOnenotePageParentSectionParentNotebookSectionGroupOperations.{}',
        client_factory=cf_user_onenote_page_parent_section_parent_notebook_section_group)
    with self.command_group('notes', notes_user_onenote_page_parent_section_parent_notebook_section_group,
                            client_factory=cf_user_onenote_page_parent_section_parent_notebook_section_group) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('create-section', 'notes_create_section')
        g.custom_command('create-section-group', 'notes_create_section_group')
        g.custom_command('get-parent-notebook', 'notes_get_parent_notebook')
        g.custom_command('get-parent-section-group', 'notes_get_parent_section_group')
        g.custom_command('get-section', 'notes_get_section')
        g.custom_command('get-section-group', 'notes_get_section_group')
        g.custom_command('list-section', 'notes_list_section')
        g.custom_command('list-section-group', 'notes_list_section_group')
        g.custom_command('update-parent-notebook', 'notes_update_parent_notebook')
        g.custom_command('update-parent-section-group', 'notes_update_parent_section_group')
        g.custom_command('update-section', 'notes_update_section')
        g.custom_command('update-section-group', 'notes_update_section_group')

    from azext_notes.generated._client_factory import cf_user_onenote_page_parent_section_parent_section_group
    notes_user_onenote_page_parent_section_parent_section_group = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._user_onenote_page_parent_section_parent_section_gr'
        'oup_operations#UserOnenotePageParentSectionParentSectionGroupOperations.{}',
        client_factory=cf_user_onenote_page_parent_section_parent_section_group)
    with self.command_group('notes', notes_user_onenote_page_parent_section_parent_section_group,
                            client_factory=cf_user_onenote_page_parent_section_parent_section_group) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('create-section', 'notes_create_section')
        g.custom_command('create-section-group', 'notes_create_section_group')
        g.custom_command('get-parent-notebook', 'notes_get_parent_notebook')
        g.custom_command('get-parent-section-group', 'notes_get_parent_section_group')
        g.custom_command('get-section', 'notes_get_section')
        g.custom_command('get-section-group', 'notes_get_section_group')
        g.custom_command('list-section', 'notes_list_section')
        g.custom_command('list-section-group', 'notes_list_section_group')
        g.custom_command('update-parent-notebook', 'notes_update_parent_notebook')
        g.custom_command('update-parent-section-group', 'notes_update_parent_section_group')
        g.custom_command('update-section', 'notes_update_section')
        g.custom_command('update-section-group', 'notes_update_section_group')

    from azext_notes.generated._client_factory import cf_user_onenote_page_parent_section_parent_section_group_parent_notebook
    notes_user_onenote_page_parent_section_parent_section_group_parent_notebook = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._user_onenote_page_parent_section_parent_section_gr'
        'oup_parent_notebook_operations#UserOnenotePageParentSectionParentSectionGroupParentNotebookOperations.{}',
        client_factory=cf_user_onenote_page_parent_section_parent_section_group_parent_notebook)
    with self.command_group('notes', notes_user_onenote_page_parent_section_parent_section_group_parent_notebook,
                            client_factory=cf_user_onenote_page_parent_section_parent_section_group_parent_notebook) \
                            as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('create-section', 'notes_create_section')
        g.custom_command('create-section-group', 'notes_create_section_group')
        g.custom_command('get-section', 'notes_get_section')
        g.custom_command('get-section-group', 'notes_get_section_group')
        g.custom_command('list-section', 'notes_list_section')
        g.custom_command('list-section-group', 'notes_list_section_group')
        g.custom_command('update-section', 'notes_update_section')
        g.custom_command('update-section-group', 'notes_update_section_group')

    from azext_notes.generated._client_factory import cf_user_onenote_section_group
    notes_user_onenote_section_group = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._user_onenote_section_group_operations#UserOnenoteS'
        'ectionGroupOperations.{}',
        client_factory=cf_user_onenote_section_group)
    with self.command_group('notes', notes_user_onenote_section_group,
                            client_factory=cf_user_onenote_section_group) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('create-section', 'notes_create_section')
        g.custom_command('create-section-group', 'notes_create_section_group')
        g.custom_command('get-parent-notebook', 'notes_get_parent_notebook')
        g.custom_command('get-parent-section-group', 'notes_get_parent_section_group')
        g.custom_command('get-section', 'notes_get_section')
        g.custom_command('get-section-group', 'notes_get_section_group')
        g.custom_command('list-section', 'notes_list_section')
        g.custom_command('list-section-group', 'notes_list_section_group')
        g.custom_command('update-parent-notebook', 'notes_update_parent_notebook')
        g.custom_command('update-parent-section-group', 'notes_update_parent_section_group')
        g.custom_command('update-section', 'notes_update_section')
        g.custom_command('update-section-group', 'notes_update_section_group')

    from azext_notes.generated._client_factory import cf_user_onenote_section_group_parent_notebook
    notes_user_onenote_section_group_parent_notebook = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._user_onenote_section_group_parent_notebook_operati'
        'ons#UserOnenoteSectionGroupParentNotebookOperations.{}',
        client_factory=cf_user_onenote_section_group_parent_notebook)
    with self.command_group('notes', notes_user_onenote_section_group_parent_notebook,
                            client_factory=cf_user_onenote_section_group_parent_notebook) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('create-section', 'notes_create_section')
        g.custom_command('create-section-group', 'notes_create_section_group')
        g.custom_command('get-section', 'notes_get_section')
        g.custom_command('get-section-group', 'notes_get_section_group')
        g.custom_command('list-section', 'notes_list_section')
        g.custom_command('list-section-group', 'notes_list_section_group')
        g.custom_command('update-section', 'notes_update_section')
        g.custom_command('update-section-group', 'notes_update_section_group')

    from azext_notes.generated._client_factory import cf_user_onenote_section_group_parent_notebook_section
    notes_user_onenote_section_group_parent_notebook_section = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._user_onenote_section_group_parent_notebook_section'
        '_operations#UserOnenoteSectionGroupParentNotebookSectionOperations.{}',
        client_factory=cf_user_onenote_section_group_parent_notebook_section)
    with self.command_group('notes', notes_user_onenote_section_group_parent_notebook_section,
                            client_factory=cf_user_onenote_section_group_parent_notebook_section) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('create-page', 'notes_create_page')
        g.custom_command('get-page', 'notes_get_page')
        g.custom_command('get-page-content', 'notes_get_page_content')
        g.custom_command('get-parent-notebook', 'notes_get_parent_notebook')
        g.custom_command('get-parent-section-group', 'notes_get_parent_section_group')
        g.custom_command('list-page', 'notes_list_page')
        g.custom_command('set-page-content', 'notes_set_page_content')
        g.custom_command('update-page', 'notes_update_page')
        g.custom_command('update-parent-notebook', 'notes_update_parent_notebook')
        g.custom_command('update-parent-section-group', 'notes_update_parent_section_group')

    from azext_notes.generated._client_factory import cf_user_onenote_section_group_parent_notebook_section_page
    notes_user_onenote_section_group_parent_notebook_section_page = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._user_onenote_section_group_parent_notebook_section'
        '_page_operations#UserOnenoteSectionGroupParentNotebookSectionPageOperations.{}',
        client_factory=cf_user_onenote_section_group_parent_notebook_section_page)
    with self.command_group('notes', notes_user_onenote_section_group_parent_notebook_section_page,
                            client_factory=cf_user_onenote_section_group_parent_notebook_section_page) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('get-parent-notebook', 'notes_get_parent_notebook')
        g.custom_command('get-parent-section', 'notes_get_parent_section')
        g.custom_command('update-parent-notebook', 'notes_update_parent_notebook')
        g.custom_command('update-parent-section', 'notes_update_parent_section')

    from azext_notes.generated._client_factory import cf_user_onenote_section_group_section
    notes_user_onenote_section_group_section = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._user_onenote_section_group_section_operations#User'
        'OnenoteSectionGroupSectionOperations.{}',
        client_factory=cf_user_onenote_section_group_section)
    with self.command_group('notes', notes_user_onenote_section_group_section,
                            client_factory=cf_user_onenote_section_group_section) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('create-page', 'notes_create_page')
        g.custom_command('get-page', 'notes_get_page')
        g.custom_command('get-page-content', 'notes_get_page_content')
        g.custom_command('get-parent-notebook', 'notes_get_parent_notebook')
        g.custom_command('get-parent-section-group', 'notes_get_parent_section_group')
        g.custom_command('list-page', 'notes_list_page')
        g.custom_command('set-page-content', 'notes_set_page_content')
        g.custom_command('update-page', 'notes_update_page')
        g.custom_command('update-parent-notebook', 'notes_update_parent_notebook')
        g.custom_command('update-parent-section-group', 'notes_update_parent_section_group')

    from azext_notes.generated._client_factory import cf_user_onenote_section_group_section_page
    notes_user_onenote_section_group_section_page = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._user_onenote_section_group_section_page_operations'
        '#UserOnenoteSectionGroupSectionPageOperations.{}',
        client_factory=cf_user_onenote_section_group_section_page)
    with self.command_group('notes', notes_user_onenote_section_group_section_page,
                            client_factory=cf_user_onenote_section_group_section_page) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('get-parent-notebook', 'notes_get_parent_notebook')
        g.custom_command('get-parent-section', 'notes_get_parent_section')
        g.custom_command('update-parent-notebook', 'notes_update_parent_notebook')
        g.custom_command('update-parent-section', 'notes_update_parent_section')

    from azext_notes.generated._client_factory import cf_user_onenote_section_group_section_page_parent_notebook
    notes_user_onenote_section_group_section_page_parent_notebook = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._user_onenote_section_group_section_page_parent_not'
        'ebook_operations#UserOnenoteSectionGroupSectionPageParentNotebookOperations.{}',
        client_factory=cf_user_onenote_section_group_section_page_parent_notebook)
    with self.command_group('notes', notes_user_onenote_section_group_section_page_parent_notebook,
                            client_factory=cf_user_onenote_section_group_section_page_parent_notebook) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('create-section', 'notes_create_section')
        g.custom_command('create-section-group', 'notes_create_section_group')
        g.custom_command('get-section', 'notes_get_section')
        g.custom_command('get-section-group', 'notes_get_section_group')
        g.custom_command('list-section', 'notes_list_section')
        g.custom_command('list-section-group', 'notes_list_section_group')
        g.custom_command('update-section', 'notes_update_section')
        g.custom_command('update-section-group', 'notes_update_section_group')

    from azext_notes.generated._client_factory import cf_user_onenote_section_group_section_parent_notebook
    notes_user_onenote_section_group_section_parent_notebook = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._user_onenote_section_group_section_parent_notebook'
        '_operations#UserOnenoteSectionGroupSectionParentNotebookOperations.{}',
        client_factory=cf_user_onenote_section_group_section_parent_notebook)
    with self.command_group('notes', notes_user_onenote_section_group_section_parent_notebook,
                            client_factory=cf_user_onenote_section_group_section_parent_notebook) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('create-section', 'notes_create_section')
        g.custom_command('create-section-group', 'notes_create_section_group')
        g.custom_command('get-section', 'notes_get_section')
        g.custom_command('get-section-group', 'notes_get_section_group')
        g.custom_command('list-section', 'notes_list_section')
        g.custom_command('list-section-group', 'notes_list_section_group')
        g.custom_command('update-section', 'notes_update_section')
        g.custom_command('update-section-group', 'notes_update_section_group')

    from azext_notes.generated._client_factory import cf_user_onenote_section
    notes_user_onenote_section = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._user_onenote_section_operations#UserOnenoteSection'
        'Operations.{}',
        client_factory=cf_user_onenote_section)
    with self.command_group('notes', notes_user_onenote_section, client_factory=cf_user_onenote_section) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('create-page', 'notes_create_page')
        g.custom_command('get-page', 'notes_get_page')
        g.custom_command('get-page-content', 'notes_get_page_content')
        g.custom_command('get-parent-notebook', 'notes_get_parent_notebook')
        g.custom_command('get-parent-section-group', 'notes_get_parent_section_group')
        g.custom_command('list-page', 'notes_list_page')
        g.custom_command('set-page-content', 'notes_set_page_content')
        g.custom_command('update-page', 'notes_update_page')
        g.custom_command('update-parent-notebook', 'notes_update_parent_notebook')
        g.custom_command('update-parent-section-group', 'notes_update_parent_section_group')

    from azext_notes.generated._client_factory import cf_user_onenote_section_page
    notes_user_onenote_section_page = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._user_onenote_section_page_operations#UserOnenoteSe'
        'ctionPageOperations.{}',
        client_factory=cf_user_onenote_section_page)
    with self.command_group('notes', notes_user_onenote_section_page,
                            client_factory=cf_user_onenote_section_page) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('get-parent-notebook', 'notes_get_parent_notebook')
        g.custom_command('get-parent-section', 'notes_get_parent_section')
        g.custom_command('update-parent-notebook', 'notes_update_parent_notebook')
        g.custom_command('update-parent-section', 'notes_update_parent_section')

    from azext_notes.generated._client_factory import cf_user_onenote_section_page_parent_notebook
    notes_user_onenote_section_page_parent_notebook = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._user_onenote_section_page_parent_notebook_operatio'
        'ns#UserOnenoteSectionPageParentNotebookOperations.{}',
        client_factory=cf_user_onenote_section_page_parent_notebook)
    with self.command_group('notes', notes_user_onenote_section_page_parent_notebook,
                            client_factory=cf_user_onenote_section_page_parent_notebook) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('create-section', 'notes_create_section')
        g.custom_command('create-section-group', 'notes_create_section_group')
        g.custom_command('get-section', 'notes_get_section')
        g.custom_command('get-section-group', 'notes_get_section_group')
        g.custom_command('list-section', 'notes_list_section')
        g.custom_command('list-section-group', 'notes_list_section_group')
        g.custom_command('update-section', 'notes_update_section')
        g.custom_command('update-section-group', 'notes_update_section_group')

    from azext_notes.generated._client_factory import cf_user_onenote_section_page_parent_notebook_section_group
    notes_user_onenote_section_page_parent_notebook_section_group = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._user_onenote_section_page_parent_notebook_section_'
        'group_operations#UserOnenoteSectionPageParentNotebookSectionGroupOperations.{}',
        client_factory=cf_user_onenote_section_page_parent_notebook_section_group)
    with self.command_group('notes', notes_user_onenote_section_page_parent_notebook_section_group,
                            client_factory=cf_user_onenote_section_page_parent_notebook_section_group) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('create-section', 'notes_create_section')
        g.custom_command('create-section-group', 'notes_create_section_group')
        g.custom_command('get-parent-notebook', 'notes_get_parent_notebook')
        g.custom_command('get-parent-section-group', 'notes_get_parent_section_group')
        g.custom_command('get-section', 'notes_get_section')
        g.custom_command('get-section-group', 'notes_get_section_group')
        g.custom_command('list-section', 'notes_list_section')
        g.custom_command('list-section-group', 'notes_list_section_group')
        g.custom_command('update-parent-notebook', 'notes_update_parent_notebook')
        g.custom_command('update-parent-section-group', 'notes_update_parent_section_group')
        g.custom_command('update-section', 'notes_update_section')
        g.custom_command('update-section-group', 'notes_update_section_group')

    from azext_notes.generated._client_factory import cf_user_onenote_section_parent_notebook
    notes_user_onenote_section_parent_notebook = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._user_onenote_section_parent_notebook_operations#Us'
        'erOnenoteSectionParentNotebookOperations.{}',
        client_factory=cf_user_onenote_section_parent_notebook)
    with self.command_group('notes', notes_user_onenote_section_parent_notebook,
                            client_factory=cf_user_onenote_section_parent_notebook) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('create-section', 'notes_create_section')
        g.custom_command('create-section-group', 'notes_create_section_group')
        g.custom_command('get-section', 'notes_get_section')
        g.custom_command('get-section-group', 'notes_get_section_group')
        g.custom_command('list-section', 'notes_list_section')
        g.custom_command('list-section-group', 'notes_list_section_group')
        g.custom_command('update-section', 'notes_update_section')
        g.custom_command('update-section-group', 'notes_update_section_group')

    from azext_notes.generated._client_factory import cf_user_onenote_section_parent_notebook_section_group
    notes_user_onenote_section_parent_notebook_section_group = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._user_onenote_section_parent_notebook_section_group'
        '_operations#UserOnenoteSectionParentNotebookSectionGroupOperations.{}',
        client_factory=cf_user_onenote_section_parent_notebook_section_group)
    with self.command_group('notes', notes_user_onenote_section_parent_notebook_section_group,
                            client_factory=cf_user_onenote_section_parent_notebook_section_group) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('create-section', 'notes_create_section')
        g.custom_command('create-section-group', 'notes_create_section_group')
        g.custom_command('get-parent-notebook', 'notes_get_parent_notebook')
        g.custom_command('get-parent-section-group', 'notes_get_parent_section_group')
        g.custom_command('get-section', 'notes_get_section')
        g.custom_command('get-section-group', 'notes_get_section_group')
        g.custom_command('list-section', 'notes_list_section')
        g.custom_command('list-section-group', 'notes_list_section_group')
        g.custom_command('update-parent-notebook', 'notes_update_parent_notebook')
        g.custom_command('update-parent-section-group', 'notes_update_parent_section_group')
        g.custom_command('update-section', 'notes_update_section')
        g.custom_command('update-section-group', 'notes_update_section_group')

    from azext_notes.generated._client_factory import cf_user_onenote_section_parent_section_group
    notes_user_onenote_section_parent_section_group = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._user_onenote_section_parent_section_group_operatio'
        'ns#UserOnenoteSectionParentSectionGroupOperations.{}',
        client_factory=cf_user_onenote_section_parent_section_group)
    with self.command_group('notes', notes_user_onenote_section_parent_section_group,
                            client_factory=cf_user_onenote_section_parent_section_group) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('create-section', 'notes_create_section')
        g.custom_command('create-section-group', 'notes_create_section_group')
        g.custom_command('get-parent-notebook', 'notes_get_parent_notebook')
        g.custom_command('get-parent-section-group', 'notes_get_parent_section_group')
        g.custom_command('get-section', 'notes_get_section')
        g.custom_command('get-section-group', 'notes_get_section_group')
        g.custom_command('list-section', 'notes_list_section')
        g.custom_command('list-section-group', 'notes_list_section_group')
        g.custom_command('update-parent-notebook', 'notes_update_parent_notebook')
        g.custom_command('update-parent-section-group', 'notes_update_parent_section_group')
        g.custom_command('update-section', 'notes_update_section')
        g.custom_command('update-section-group', 'notes_update_section_group')

    from azext_notes.generated._client_factory import cf_user_onenote_section_parent_section_group_parent_notebook
    notes_user_onenote_section_parent_section_group_parent_notebook = CliCommandType(
        operations_tmpl='azext_notes.vendored_sdks.notes.operations._user_onenote_section_parent_section_group_parent_n'
        'otebook_operations#UserOnenoteSectionParentSectionGroupParentNotebookOperations.{}',
        client_factory=cf_user_onenote_section_parent_section_group_parent_notebook)
    with self.command_group('notes', notes_user_onenote_section_parent_section_group_parent_notebook,
                            client_factory=cf_user_onenote_section_parent_section_group_parent_notebook) as g:
        g.custom_command('delete', 'notes_delete', confirmation=True)
        g.custom_command('create-section', 'notes_create_section')
        g.custom_command('create-section-group', 'notes_create_section_group')
        g.custom_command('get-section', 'notes_get_section')
        g.custom_command('get-section-group', 'notes_get_section_group')
        g.custom_command('list-section', 'notes_list_section')
        g.custom_command('list-section-group', 'notes_list_section_group')
        g.custom_command('update-section', 'notes_update_section')
        g.custom_command('update-section-group', 'notes_update_section_group')
