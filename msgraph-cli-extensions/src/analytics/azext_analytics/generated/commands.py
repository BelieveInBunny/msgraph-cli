# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=too-many-statements
# pylint: disable=too-many-locals

from msgraph.cli.core.commands import CliCommandType


def load_command_table(self, _):

    from azext_analytics.generated._client_factory import cf_activitystatistic_activity_statistics
    analytics_activitystatistic_activity_statistics = CliCommandType(
        operations_tmpl='azext_analytics.vendored_sdks.analytics.operations._activitystatistic_activity_statistics_oper'
        'ations#ActivitystatisticActivityStatisticsOperations.{}',
        client_factory=cf_activitystatistic_activity_statistics)
    with self.command_group('analytics', analytics_activitystatistic_activity_statistics,
                            client_factory=cf_activitystatistic_activity_statistics) as g:
        g.custom_command('update', 'analytics_update')
        g.custom_command('delete', 'analytics_delete')
        g.custom_command('create-activity-statistics', 'analytics_create_activity_statistics')
        g.custom_command('get-activity-statistics', 'analytics_get_activity_statistics')
        g.custom_command('list-activity-statistics', 'analytics_list_activity_statistics')

    from azext_analytics.generated._client_factory import cf_user
    analytics_user = CliCommandType(
        operations_tmpl='azext_analytics.vendored_sdks.analytics.operations._user_operations#UserOperations.{}',
        client_factory=cf_user)
    with self.command_group('analytics', analytics_user, client_factory=cf_user) as g:
        g.custom_command('update', 'analytics_update')
        g.custom_command('get-analytic', 'analytics_get_analytic')
        g.custom_command('get-insight', 'analytics_get_insight')

    from azext_analytics.generated._client_factory import cf_user_analytic
    analytics_user_analytic = CliCommandType(
        operations_tmpl='azext_analytics.vendored_sdks.analytics.operations._user_analytic_operations#UserAnalyticOpera'
        'tions.{}',
        client_factory=cf_user_analytic)
    with self.command_group('analytics', analytics_user_analytic, client_factory=cf_user_analytic) as g:
        g.custom_command('update', 'analytics_update')
        g.custom_command('create-activity-statistics', 'analytics_create_activity_statistics')
        g.custom_command('get-activity-statistics', 'analytics_get_activity_statistics')
        g.custom_command('list-activity-statistics', 'analytics_list_activity_statistics')

    from azext_analytics.generated._client_factory import cf_user_insight
    analytics_user_insight = CliCommandType(
        operations_tmpl='azext_analytics.vendored_sdks.analytics.operations._user_insight_operations#UserInsightOperati'
        'ons.{}',
        client_factory=cf_user_insight)
    with self.command_group('analytics', analytics_user_insight, client_factory=cf_user_insight) as g:
        g.custom_command('update', 'analytics_update')
        g.custom_command('create-shared', 'analytics_create_shared')
        g.custom_command('create-trending', 'analytics_create_trending')
        g.custom_command('create-used', 'analytics_create_used')
        g.custom_command('get-shared', 'analytics_get_shared')
        g.custom_command('get-trending', 'analytics_get_trending')
        g.custom_command('get-used', 'analytics_get_used')
        g.custom_command('list-shared', 'analytics_list_shared')
        g.custom_command('list-trending', 'analytics_list_trending')
        g.custom_command('list-used', 'analytics_list_used')

    from azext_analytics.generated._client_factory import cf_user_insight_shared
    analytics_user_insight_shared = CliCommandType(
        operations_tmpl='azext_analytics.vendored_sdks.analytics.operations._user_insight_shared_operations#UserInsight'
        'SharedOperations.{}',
        client_factory=cf_user_insight_shared)
    with self.command_group('analytics', analytics_user_insight_shared, client_factory=cf_user_insight_shared) as g:
        g.custom_command('get-last-shared-method', 'analytics_get_last_shared_method')
        g.custom_command('get-resource', 'analytics_get_resource')

    from azext_analytics.generated._client_factory import cf_user_insight_trending
    analytics_user_insight_trending = CliCommandType(
        operations_tmpl='azext_analytics.vendored_sdks.analytics.operations._user_insight_trending_operations#UserInsig'
        'htTrendingOperations.{}',
        client_factory=cf_user_insight_trending)
    with self.command_group('analytics', analytics_user_insight_trending,
                            client_factory=cf_user_insight_trending) as g:
        g.custom_command('get-resource', 'analytics_get_resource')

    from azext_analytics.generated._client_factory import cf_user_insight_used
    analytics_user_insight_used = CliCommandType(
        operations_tmpl='azext_analytics.vendored_sdks.analytics.operations._user_insight_used_operations#UserInsightUs'
        'edOperations.{}',
        client_factory=cf_user_insight_used)
    with self.command_group('analytics', analytics_user_insight_used, client_factory=cf_user_insight_used) as g:
        g.custom_command('get-resource', 'analytics_get_resource')
