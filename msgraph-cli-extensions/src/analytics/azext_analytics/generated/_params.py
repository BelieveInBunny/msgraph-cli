# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=too-many-lines
# pylint: disable=too-many-statements

from msgraph.cli.core.commands.parameters import get_enum_type
from msgraph.cli.core.commands.validators import validate_file_or_dict
from azext_analytics.action import (
    AddSettings,
    AddActivityStatistics,
    AddResourceVisualization,
    AddResourceReference,
    AddLastSharedSharedBy,
    AddLastUsed
)


def load_arguments(self, _):

    with self.argument_context('analytics delete') as c:
        c.argument('activity_statistics_id', type=str, help='key: activityStatistics-id of activityStatistics')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('analytics create-activity-statistics') as c:
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('activity', arg_type=get_enum_type(['Email', 'Meeting', 'Focus', 'Chat', 'Call']), help='')
        c.argument('start_date', help='')
        c.argument('end_date', help='')
        c.argument('time_zone_used', type=str, help='')
        c.argument('duration', help='')

    with self.argument_context('analytics get-activity-statistics') as c:
        c.argument('activity_statistics_id', type=str, help='key: activityStatistics-id of activityStatistics')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('analytics list-activity-statistics') as c:
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('analytics update-activity-statistics') as c:
        c.argument('activity_statistics_id', type=str, help='key: activityStatistics-id of activityStatistics')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('activity', arg_type=get_enum_type(['Email', 'Meeting', 'Focus', 'Chat', 'Call']), help='')
        c.argument('start_date', help='')
        c.argument('end_date', help='')
        c.argument('time_zone_used', type=str, help='')
        c.argument('duration', help='')

    with self.argument_context('analytics get-analytic') as c:
        c.argument('user_id', type=str, help='key: user-id of user')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('analytics get-insight') as c:
        c.argument('user_id', type=str, help='key: user-id of user')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('analytics update-analytic') as c:
        c.argument('user_id', type=str, help='key: user-id of user')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('settings', action=AddSettings, nargs='*', help='settings')
        c.argument('activity_statistics', action=AddActivityStatistics, nargs='*', help='')

    with self.argument_context('analytics update-insight') as c:
        c.argument('user_id', type=str, help='key: user-id of user')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('trending', type=validate_file_or_dict, help='Calculated relationship identifying trending '
                   'documents. Trending documents can be stored in OneDrive or in SharePoint sites. Expected value: '
                   'json-string/@json-file.')
        c.argument('shared', type=validate_file_or_dict, help='Calculated relationship identifying documents shared '
                   'with a user. Documents can be shared as email attachments or as OneDrive for Business links sent '
                   'in emails. Expected value: json-string/@json-file.')
        c.argument('used', type=validate_file_or_dict, help='Calculated relationship identifying documents viewed and '
                   'modified by a user. Includes documents the user used in OneDrive for Business, SharePoint, opened '
                   'as email attachments, and as link attachments from sources like Box, DropBox and Google Drive. '
                   'Expected value: json-string/@json-file.')

    with self.argument_context('analytics create-activity-statistics') as c:
        c.argument('user_id', type=str, help='key: user-id of user')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('activity', arg_type=get_enum_type(['Email', 'Meeting', 'Focus', 'Chat', 'Call']), help='')
        c.argument('start_date', help='')
        c.argument('end_date', help='')
        c.argument('time_zone_used', type=str, help='')
        c.argument('duration', help='')

    with self.argument_context('analytics get-activity-statistics') as c:
        c.argument('user_id', type=str, help='key: user-id of user')
        c.argument('activity_statistics_id', type=str, help='key: activityStatistics-id of activityStatistics')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('analytics list-activity-statistics') as c:
        c.argument('user_id', type=str, help='key: user-id of user')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('analytics update-activity-statistics') as c:
        c.argument('user_id', type=str, help='key: user-id of user')
        c.argument('activity_statistics_id', type=str, help='key: activityStatistics-id of activityStatistics')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('activity', arg_type=get_enum_type(['Email', 'Meeting', 'Focus', 'Chat', 'Call']), help='')
        c.argument('start_date', help='')
        c.argument('end_date', help='')
        c.argument('time_zone_used', type=str, help='')
        c.argument('duration', help='')

    with self.argument_context('analytics create-shared') as c:
        c.argument('user_id', type=str, help='key: user-id of user')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('sharing_history', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('resource_visualization', action=AddResourceVisualization, nargs='*', help='resourceVisualization')
        c.argument('resource_reference', action=AddResourceReference, nargs='*', help='resourceReference')
        c.argument('resource_id', type=str, help='Read-only.')
        c.argument('last_shared_method_id', type=str, help='Read-only.')
        c.argument('last_shared_shared_by', action=AddLastSharedSharedBy, nargs='*', help='insightIdentity')
        c.argument('last_shared_shared_date_time', help='The date and time the file was last shared. The timestamp '
                   'represents date and time information using ISO 8601 format and is always in UTC time. For example, '
                   'midnight UTC on Jan 1, 2014 would look like this: 2014-01-01T00:00:00Z. Read-only.')
        c.argument('last_shared_sharing_subject', type=str, help='The subject with which the document was shared.')
        c.argument('last_shared_sharing_type', type=str, help='Determines the way the document was shared, can be by a '
                   '\'Link\', \'Attachment\', \'Group\', \'Site\'.')
        c.argument('last_shared_sharing_reference', action=AddResourceReference, nargs='*', help='resourceReference')

    with self.argument_context('analytics create-trending') as c:
        c.argument('user_id', type=str, help='key: user-id of user')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('weight', type=float, help='Value indicating how much the document is currently trending. The '
                   'larger the number, the more the document is currently trending around the user (the more relevant '
                   'it is). Returned documents are sorted by this value.')
        c.argument('resource_visualization', action=AddResourceVisualization, nargs='*', help='resourceVisualization')
        c.argument('resource_reference', action=AddResourceReference, nargs='*', help='resourceReference')
        c.argument('last_modified_date_time', help='')
        c.argument('resource_id', type=str, help='Read-only.')

    with self.argument_context('analytics create-used') as c:
        c.argument('user_id', type=str, help='key: user-id of user')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('last_used', action=AddLastUsed, nargs='*', help='usageDetails')
        c.argument('resource_visualization', action=AddResourceVisualization, nargs='*', help='resourceVisualization')
        c.argument('resource_reference', action=AddResourceReference, nargs='*', help='resourceReference')
        c.argument('resource_id', type=str, help='Read-only.')

    with self.argument_context('analytics get-shared') as c:
        c.argument('user_id', type=str, help='key: user-id of user')
        c.argument('shared_insight_id', type=str, help='key: sharedInsight-id of sharedInsight')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('analytics get-trending') as c:
        c.argument('user_id', type=str, help='key: user-id of user')
        c.argument('trending_id', type=str, help='key: trending-id of trending')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('analytics get-used') as c:
        c.argument('user_id', type=str, help='key: user-id of user')
        c.argument('used_insight_id', type=str, help='key: usedInsight-id of usedInsight')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('analytics list-shared') as c:
        c.argument('user_id', type=str, help='key: user-id of user')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('analytics list-trending') as c:
        c.argument('user_id', type=str, help='key: user-id of user')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('analytics list-used') as c:
        c.argument('user_id', type=str, help='key: user-id of user')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('analytics update-shared') as c:
        c.argument('user_id', type=str, help='key: user-id of user')
        c.argument('shared_insight_id', type=str, help='key: sharedInsight-id of sharedInsight')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('sharing_history', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('resource_visualization', action=AddResourceVisualization, nargs='*', help='resourceVisualization')
        c.argument('resource_reference', action=AddResourceReference, nargs='*', help='resourceReference')
        c.argument('resource_id', type=str, help='Read-only.')
        c.argument('last_shared_method_id', type=str, help='Read-only.')
        c.argument('last_shared_shared_by', action=AddLastSharedSharedBy, nargs='*', help='insightIdentity')
        c.argument('last_shared_shared_date_time', help='The date and time the file was last shared. The timestamp '
                   'represents date and time information using ISO 8601 format and is always in UTC time. For example, '
                   'midnight UTC on Jan 1, 2014 would look like this: 2014-01-01T00:00:00Z. Read-only.')
        c.argument('last_shared_sharing_subject', type=str, help='The subject with which the document was shared.')
        c.argument('last_shared_sharing_type', type=str, help='Determines the way the document was shared, can be by a '
                   '\'Link\', \'Attachment\', \'Group\', \'Site\'.')
        c.argument('last_shared_sharing_reference', action=AddResourceReference, nargs='*', help='resourceReference')

    with self.argument_context('analytics update-trending') as c:
        c.argument('user_id', type=str, help='key: user-id of user')
        c.argument('trending_id', type=str, help='key: trending-id of trending')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('weight', type=float, help='Value indicating how much the document is currently trending. The '
                   'larger the number, the more the document is currently trending around the user (the more relevant '
                   'it is). Returned documents are sorted by this value.')
        c.argument('resource_visualization', action=AddResourceVisualization, nargs='*', help='resourceVisualization')
        c.argument('resource_reference', action=AddResourceReference, nargs='*', help='resourceReference')
        c.argument('last_modified_date_time', help='')
        c.argument('resource_id', type=str, help='Read-only.')

    with self.argument_context('analytics update-used') as c:
        c.argument('user_id', type=str, help='key: user-id of user')
        c.argument('used_insight_id', type=str, help='key: usedInsight-id of usedInsight')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('last_used', action=AddLastUsed, nargs='*', help='usageDetails')
        c.argument('resource_visualization', action=AddResourceVisualization, nargs='*', help='resourceVisualization')
        c.argument('resource_reference', action=AddResourceReference, nargs='*', help='resourceReference')
        c.argument('resource_id', type=str, help='Read-only.')

    with self.argument_context('analytics get-last-shared-method') as c:
        c.argument('user_id', type=str, help='key: user-id of user')
        c.argument('shared_insight_id', type=str, help='key: sharedInsight-id of sharedInsight')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('analytics get-resource') as c:
        c.argument('user_id', type=str, help='key: user-id of user')
        c.argument('shared_insight_id', type=str, help='key: sharedInsight-id of sharedInsight')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('analytics get-resource') as c:
        c.argument('user_id', type=str, help='key: user-id of user')
        c.argument('trending_id', type=str, help='key: trending-id of trending')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('analytics get-resource') as c:
        c.argument('user_id', type=str, help='key: user-id of user')
        c.argument('used_insight_id', type=str, help='key: usedInsight-id of usedInsight')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')
