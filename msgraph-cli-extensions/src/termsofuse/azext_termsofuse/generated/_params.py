# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=too-many-lines
# pylint: disable=too-many-statements

from msgraph.cli.core.commands.parameters import (
    get_three_state_flag,
    get_enum_type
)
from azext_termsofuse.action import AddFiles


def load_arguments(self, _):

    with self.argument_context('termsofuse agreement-acceptance-agreement-acceptance update') as c:
        c.argument('agreement_acceptance_id', help='key: agreementAcceptance-id of agreementAcceptance')
        c.argument('id_', options_list=['--id'], help='Read-only.')
        c.argument('agreement_id', help='')
        c.argument('user_id', help='')
        c.argument('agreement_file_id', help='')
        c.argument('recorded_date_time', help='')
        c.argument('user_display_name', help='')
        c.argument('user_principal_name', help='')
        c.argument('user_email', help='')
        c.argument('state', arg_type=get_enum_type(['accepted', 'declined']), help='agreementAcceptanceState')

    with self.argument_context('termsofuse agreement-acceptance-agreement-acceptance delete') as c:
        c.argument('agreement_acceptance_id', help='key: agreementAcceptance-id of agreementAcceptance')
        c.argument('if_match', help='ETag')

    with self.argument_context('termsofuse agreement-acceptance-agreement-acceptance create-agreement-acceptance') as c:
        c.argument('id_', options_list=['--id'], help='Read-only.')
        c.argument('agreement_id', help='')
        c.argument('user_id', help='')
        c.argument('agreement_file_id', help='')
        c.argument('recorded_date_time', help='')
        c.argument('user_display_name', help='')
        c.argument('user_principal_name', help='')
        c.argument('user_email', help='')
        c.argument('state', arg_type=get_enum_type(['accepted', 'declined']), help='agreementAcceptanceState')

    with self.argument_context('termsofuse agreement-acceptance-agreement-acceptance get-agreement-acceptance') as c:
        c.argument('agreement_acceptance_id', help='key: agreementAcceptance-id of agreementAcceptance')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('termsofuse agreement-acceptance-agreement-acceptance list-agreement-acceptance') as c:
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('termsofuse agreement-agreement update') as c:
        c.argument('agreement_id', help='key: agreement-id of agreement')
        c.argument('id_', options_list=['--id'], help='Read-only.')
        c.argument('display_name', help='')
        c.argument('is_viewing_before_acceptance_required', arg_type=get_three_state_flag(), help='')
        c.argument('files', action=AddFiles, nargs='*', help='')

    with self.argument_context('termsofuse agreement-agreement delete') as c:
        c.argument('agreement_id', help='key: agreement-id of agreement')
        c.argument('if_match', help='ETag')

    with self.argument_context('termsofuse agreement-agreement create-agreement') as c:
        c.argument('id_', options_list=['--id'], help='Read-only.')
        c.argument('display_name', help='')
        c.argument('is_viewing_before_acceptance_required', arg_type=get_three_state_flag(), help='')
        c.argument('files', action=AddFiles, nargs='*', help='')

    with self.argument_context('termsofuse agreement-agreement get-agreement') as c:
        c.argument('agreement_id', help='key: agreement-id of agreement')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('termsofuse agreement-agreement list-agreement') as c:
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('termsofuse agreement update') as c:
        c.argument('agreement_id', help='key: agreement-id of agreement')
        c.argument('agreement_file_id', help='key: agreementFile-id of agreementFile')
        c.argument('id_', options_list=['--id'], help='Read-only.')
        c.argument('language', help='')
        c.argument('file_name', help='')
        c.argument('is_default', arg_type=get_three_state_flag(), help='')
        c.argument('file_data_data', help='')

    with self.argument_context('termsofuse agreement create-file') as c:
        c.argument('agreement_id', help='key: agreement-id of agreement')
        c.argument('id_', options_list=['--id'], help='Read-only.')
        c.argument('language', help='')
        c.argument('file_name', help='')
        c.argument('is_default', arg_type=get_three_state_flag(), help='')
        c.argument('file_data_data', help='')

    with self.argument_context('termsofuse agreement get-file') as c:
        c.argument('agreement_id', help='key: agreement-id of agreement')
        c.argument('agreement_file_id', help='key: agreementFile-id of agreementFile')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('termsofuse agreement list-file') as c:
        c.argument('agreement_id', help='key: agreement-id of agreement')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('termsofuse user get-agreement-acceptance') as c:
        c.argument('user_id', help='key: user-id of user')
        c.argument('agreement_acceptance_id', help='key: agreementAcceptance-id of agreementAcceptance')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('termsofuse user list-agreement-acceptance') as c:
        c.argument('user_id', help='key: user-id of user')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')
