# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=too-many-lines
# pylint: disable=too-many-statements



def load_arguments(self, _):

    with self.argument_context('permissions group update') as c:
        c.argument('group_id', help='key: group-id of group')
        c.argument('resource_specific_permission_grant_id', help='key: resourceSpecificPermissionGrant-id of '
                   'resourceSpecificPermissionGrant')
        c.argument('id_', options_list=['--id'], help='Read-only.')
        c.argument('deleted_date_time', help='')
        c.argument('client_id', help='')
        c.argument('client_app_id', help='')
        c.argument('resource_app_id', help='')
        c.argument('permission_type', help='')
        c.argument('permission', help='')

    with self.argument_context('permissions group create-permission-grant') as c:
        c.argument('group_id', help='key: group-id of group')
        c.argument('id_', options_list=['--id'], help='Read-only.')
        c.argument('deleted_date_time', help='')
        c.argument('client_id', help='')
        c.argument('client_app_id', help='')
        c.argument('resource_app_id', help='')
        c.argument('permission_type', help='')
        c.argument('permission', help='')

    with self.argument_context('permissions group get-permission-grant') as c:
        c.argument('group_id', help='key: group-id of group')
        c.argument('resource_specific_permission_grant_id', help='key: resourceSpecificPermissionGrant-id of '
                   'resourceSpecificPermissionGrant')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('permissions group list-permission-grant') as c:
        c.argument('group_id', help='key: group-id of group')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')
