# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from enum import Enum

class Enum10(str, Enum):

    id = "id"
    user_principal_name = "userPrincipalName"
    user_display_name = "userDisplayName"
    auth_methods = "authMethods"
    is_registered = "isRegistered"
    is_enabled = "isEnabled"
    is_capable = "isCapable"
    is_mfa_registered = "isMfaRegistered"

class Enum11(str, Enum):

    id = "id"
    id_desc = "id desc"
    printer_id = "printerId"
    printer_id_desc = "printerId desc"
    usage_date = "usageDate"
    usage_date_desc = "usageDate desc"
    completed_black_and_white_job_count = "completedBlackAndWhiteJobCount"
    completed_black_and_white_job_count_desc = "completedBlackAndWhiteJobCount desc"
    completed_color_job_count = "completedColorJobCount"
    completed_color_job_count_desc = "completedColorJobCount desc"
    incomplete_job_count = "incompleteJobCount"
    incomplete_job_count_desc = "incompleteJobCount desc"

class Enum12(str, Enum):

    id = "id"
    printer_id = "printerId"
    usage_date = "usageDate"
    completed_black_and_white_job_count = "completedBlackAndWhiteJobCount"
    completed_color_job_count = "completedColorJobCount"
    incomplete_job_count = "incompleteJobCount"

class Enum13(str, Enum):

    id = "id"
    printer_id = "printerId"
    usage_date = "usageDate"
    completed_black_and_white_job_count = "completedBlackAndWhiteJobCount"
    completed_color_job_count = "completedColorJobCount"
    incomplete_job_count = "incompleteJobCount"

class Enum14(str, Enum):

    id = "id"
    id_desc = "id desc"
    user_principal_name = "userPrincipalName"
    user_principal_name_desc = "userPrincipalName desc"
    usage_date = "usageDate"
    usage_date_desc = "usageDate desc"
    completed_black_and_white_job_count = "completedBlackAndWhiteJobCount"
    completed_black_and_white_job_count_desc = "completedBlackAndWhiteJobCount desc"
    completed_color_job_count = "completedColorJobCount"
    completed_color_job_count_desc = "completedColorJobCount desc"
    incomplete_job_count = "incompleteJobCount"
    incomplete_job_count_desc = "incompleteJobCount desc"

class Enum15(str, Enum):

    id = "id"
    user_principal_name = "userPrincipalName"
    usage_date = "usageDate"
    completed_black_and_white_job_count = "completedBlackAndWhiteJobCount"
    completed_color_job_count = "completedColorJobCount"
    incomplete_job_count = "incompleteJobCount"

class Enum16(str, Enum):

    id = "id"
    user_principal_name = "userPrincipalName"
    usage_date = "usageDate"
    completed_black_and_white_job_count = "completedBlackAndWhiteJobCount"
    completed_color_job_count = "completedColorJobCount"
    incomplete_job_count = "incompleteJobCount"

class Enum20(str, Enum):

    id = "id"
    id_desc = "id desc"
    printer_id = "printerId"
    printer_id_desc = "printerId desc"
    usage_date = "usageDate"
    usage_date_desc = "usageDate desc"
    completed_black_and_white_job_count = "completedBlackAndWhiteJobCount"
    completed_black_and_white_job_count_desc = "completedBlackAndWhiteJobCount desc"
    completed_color_job_count = "completedColorJobCount"
    completed_color_job_count_desc = "completedColorJobCount desc"
    incomplete_job_count = "incompleteJobCount"
    incomplete_job_count_desc = "incompleteJobCount desc"

class Enum21(str, Enum):

    id = "id"
    printer_id = "printerId"
    usage_date = "usageDate"
    completed_black_and_white_job_count = "completedBlackAndWhiteJobCount"
    completed_color_job_count = "completedColorJobCount"
    incomplete_job_count = "incompleteJobCount"

class Enum22(str, Enum):

    id = "id"
    printer_id = "printerId"
    usage_date = "usageDate"
    completed_black_and_white_job_count = "completedBlackAndWhiteJobCount"
    completed_color_job_count = "completedColorJobCount"
    incomplete_job_count = "incompleteJobCount"

class Enum23(str, Enum):

    id = "id"
    id_desc = "id desc"
    user_principal_name = "userPrincipalName"
    user_principal_name_desc = "userPrincipalName desc"
    usage_date = "usageDate"
    usage_date_desc = "usageDate desc"
    completed_black_and_white_job_count = "completedBlackAndWhiteJobCount"
    completed_black_and_white_job_count_desc = "completedBlackAndWhiteJobCount desc"
    completed_color_job_count = "completedColorJobCount"
    completed_color_job_count_desc = "completedColorJobCount desc"
    incomplete_job_count = "incompleteJobCount"
    incomplete_job_count_desc = "incompleteJobCount desc"

class Enum24(str, Enum):

    id = "id"
    user_principal_name = "userPrincipalName"
    usage_date = "usageDate"
    completed_black_and_white_job_count = "completedBlackAndWhiteJobCount"
    completed_color_job_count = "completedColorJobCount"
    incomplete_job_count = "incompleteJobCount"

class Enum25(str, Enum):

    id = "id"
    user_principal_name = "userPrincipalName"
    usage_date = "usageDate"
    completed_black_and_white_job_count = "completedBlackAndWhiteJobCount"
    completed_color_job_count = "completedColorJobCount"
    incomplete_job_count = "incompleteJobCount"

class Enum26(str, Enum):

    id = "id"
    id_desc = "id desc"
    feature = "feature"
    feature_desc = "feature desc"
    user_principal_name = "userPrincipalName"
    user_principal_name_desc = "userPrincipalName desc"
    user_display_name = "userDisplayName"
    user_display_name_desc = "userDisplayName desc"
    is_success = "isSuccess"
    is_success_desc = "isSuccess desc"
    auth_method = "authMethod"
    auth_method_desc = "authMethod desc"
    failure_reason = "failureReason"
    failure_reason_desc = "failureReason desc"
    event_date_time = "eventDateTime"
    event_date_time_desc = "eventDateTime desc"

class Enum27(str, Enum):

    id = "id"
    feature = "feature"
    user_principal_name = "userPrincipalName"
    user_display_name = "userDisplayName"
    is_success = "isSuccess"
    auth_method = "authMethod"
    failure_reason = "failureReason"
    event_date_time = "eventDateTime"

class Enum28(str, Enum):

    id = "id"
    feature = "feature"
    user_principal_name = "userPrincipalName"
    user_display_name = "userDisplayName"
    is_success = "isSuccess"
    auth_method = "authMethod"
    failure_reason = "failureReason"
    event_date_time = "eventDateTime"

class Enum7(str, Enum):

    id = "id"
    app_id = "appId"
    app_display_name = "appDisplayName"
    status = "status"
    sign_in_count = "signInCount"
    aggregated_event_date_time = "aggregatedEventDateTime"

class Enum8(str, Enum):

    id = "id"
    id_desc = "id desc"
    user_principal_name = "userPrincipalName"
    user_principal_name_desc = "userPrincipalName desc"
    user_display_name = "userDisplayName"
    user_display_name_desc = "userDisplayName desc"
    auth_methods = "authMethods"
    auth_methods_desc = "authMethods desc"
    is_registered = "isRegistered"
    is_registered_desc = "isRegistered desc"
    is_enabled = "isEnabled"
    is_enabled_desc = "isEnabled desc"
    is_capable = "isCapable"
    is_capable_desc = "isCapable desc"
    is_mfa_registered = "isMfaRegistered"
    is_mfa_registered_desc = "isMfaRegistered desc"

class Enum9(str, Enum):

    id = "id"
    user_principal_name = "userPrincipalName"
    user_display_name = "userDisplayName"
    auth_methods = "authMethods"
    is_registered = "isRegistered"
    is_enabled = "isEnabled"
    is_capable = "isCapable"
    is_mfa_registered = "isMfaRegistered"

class Get0ItemsItem(str, Enum):

    id = "id"
    application_sign_in_detailed_summary = "applicationSignInDetailedSummary"
    credential_user_registration_details = "credentialUserRegistrationDetails"
    user_credential_usage_details = "userCredentialUsageDetails"
    daily_print_usage_summaries_by_user = "dailyPrintUsageSummariesByUser"
    monthly_print_usage_summaries_by_user = "monthlyPrintUsageSummariesByUser"
    daily_print_usage_summaries_by_printer = "dailyPrintUsageSummariesByPrinter"
    monthly_print_usage_summaries_by_printer = "monthlyPrintUsageSummariesByPrinter"

class Get1ItemsItem(str, Enum):

    asterisk = "*"
    application_sign_in_detailed_summary = "applicationSignInDetailedSummary"
    credential_user_registration_details = "credentialUserRegistrationDetails"
    user_credential_usage_details = "userCredentialUsageDetails"
    daily_print_usage_summaries_by_user = "dailyPrintUsageSummariesByUser"
    monthly_print_usage_summaries_by_user = "monthlyPrintUsageSummariesByUser"
    daily_print_usage_summaries_by_printer = "dailyPrintUsageSummariesByPrinter"
    monthly_print_usage_summaries_by_printer = "monthlyPrintUsageSummariesByPrinter"

class Get5ItemsItem(str, Enum):

    id = "id"
    id_desc = "id desc"
    app_id = "appId"
    app_id_desc = "appId desc"
    app_display_name = "appDisplayName"
    app_display_name_desc = "appDisplayName desc"
    status = "status"
    status_desc = "status desc"
    sign_in_count = "signInCount"
    sign_in_count_desc = "signInCount desc"
    aggregated_event_date_time = "aggregatedEventDateTime"
    aggregated_event_date_time_desc = "aggregatedEventDateTime desc"

class Get6ItemsItem(str, Enum):

    id = "id"
    app_id = "appId"
    app_display_name = "appDisplayName"
    status = "status"
    sign_in_count = "signInCount"
    aggregated_event_date_time = "aggregatedEventDateTime"

class MicrosoftGraphAzureAdLicenseType(str, Enum):
    """azureADLicenseType
    """

    none = "none"
    free = "free"
    basic = "basic"
    premium_p1 = "premiumP1"
    premium_p2 = "premiumP2"
    unknown_future_value = "unknownFutureValue"

class MicrosoftGraphFeatureType(str, Enum):
    """featureType
    """

    registration = "registration"
    reset = "reset"
    unknown_future_value = "unknownFutureValue"

class MicrosoftGraphMigrationStatus(str, Enum):
    """migrationStatus
    """

    ready = "ready"
    needs_review = "needsReview"
    additional_steps_required = "additionalStepsRequired"
    unknown_future_value = "unknownFutureValue"

class MicrosoftGraphRegistrationAuthMethod(str, Enum):
    """registrationAuthMethod
    """

    email = "email"
    mobile_phone = "mobilePhone"
    office_phone = "officePhone"
    security_question = "securityQuestion"
    app_notification = "appNotification"
    app_code = "appCode"
    alternate_mobile_phone = "alternateMobilePhone"
    fido = "fido"
    app_password = "appPassword"
    unknown_future_value = "unknownFutureValue"

class MicrosoftGraphRegistrationStatusType(str, Enum):
    """registrationStatusType
    """

    registered = "registered"
    enabled = "enabled"
    capable = "capable"
    mfa_registered = "mfaRegistered"
    unknown_future_value = "unknownFutureValue"

class MicrosoftGraphUsageAuthMethod(str, Enum):
    """usageAuthMethod
    """

    email = "email"
    mobile_sms = "mobileSMS"
    mobile_call = "mobileCall"
    office_phone = "officePhone"
    security_question = "securityQuestion"
    app_notification = "appNotification"
    app_code = "appCode"
    alternate_mobile_call = "alternateMobileCall"
    fido = "fido"
    app_password = "appPassword"
    unknown_future_value = "unknownFutureValue"
