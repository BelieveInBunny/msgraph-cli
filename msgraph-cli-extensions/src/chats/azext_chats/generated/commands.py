# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=too-many-statements
# pylint: disable=too-many-locals

from msgraph.cli.core.commands import CliCommandType


def load_command_table(self, _):

    from azext_chats.generated._client_factory import cf_chat_chat
    chats_chat_chat = CliCommandType(
        operations_tmpl='azext_chats.vendored_sdks.chats.operations._chat_chat_operations#ChatOperations.{}',
        client_factory=cf_chat_chat)
    with self.command_group('chats chat-chat', chats_chat_chat, client_factory=cf_chat_chat,
                            is_experimental=True) as g:
        g.custom_command('update', 'chats_chat_chat_update')
        g.custom_command('delete', 'chats_chat_chat_delete')
        g.custom_command('create-chat', 'chats_chat_chat_create_chat')
        g.custom_command('get-chat', 'chats_chat_chat_get_chat')
        g.custom_command('list-chat', 'chats_chat_chat_list_chat')

    from azext_chats.generated._client_factory import cf_chat
    chats_chat = CliCommandType(
        operations_tmpl='azext_chats.vendored_sdks.chats.operations._chat_operations#ChatOperations.{}',
        client_factory=cf_chat)
    with self.command_group('chats chat', chats_chat, client_factory=cf_chat, is_experimental=True) as g:
        g.custom_command('update', 'chats_chat_update')
        g.custom_command('all-message', 'chats_chat_all_message')
        g.custom_command('create-installed-app', 'chats_chat_create_installed_app')
        g.custom_command('create-member', 'chats_chat_create_member')
        g.custom_command('create-message', 'chats_chat_create_message')
        g.custom_command('get-installed-app', 'chats_chat_get_installed_app')
        g.custom_command('get-member', 'chats_chat_get_member')
        g.custom_command('get-message', 'chats_chat_get_message')
        g.custom_command('list-installed-app', 'chats_chat_list_installed_app')
        g.custom_command('list-member', 'chats_chat_list_member')
        g.custom_command('list-message', 'chats_chat_list_message')

    from azext_chats.generated._client_factory import cf_chat_installed_app
    chats_chat_installed_app = CliCommandType(
        operations_tmpl='azext_chats.vendored_sdks.chats.operations._chat_installed_app_operations#ChatInstalledAppOper'
        'ations.{}',
        client_factory=cf_chat_installed_app)
    with self.command_group('chats chat-installed-app', chats_chat_installed_app, client_factory=cf_chat_installed_app,
                             is_experimental=True) as g:
        g.custom_command('get-team-app', 'chats_chat_installed_app_get_team_app')
        g.custom_command('get-team-app-definition', 'chats_chat_installed_app_get_team_app_definition')
        g.custom_command('upgrade', 'chats_chat_installed_app_upgrade')

    from azext_chats.generated._client_factory import cf_chat_message
    chats_chat_message = CliCommandType(
        operations_tmpl='azext_chats.vendored_sdks.chats.operations._chat_message_operations#ChatMessageOperations.{}',
        client_factory=cf_chat_message)
    with self.command_group('chats chat-message', chats_chat_message, client_factory=cf_chat_message,
                            is_experimental=True) as g:
        g.custom_command('update', 'chats_chat_message_update')
        g.custom_command('create-hosted-content', 'chats_chat_message_create_hosted_content')
        g.custom_command('create-reply', 'chats_chat_message_create_reply')
        g.custom_command('delta', 'chats_chat_message_delta')
        g.custom_command('get-hosted-content', 'chats_chat_message_get_hosted_content')
        g.custom_command('get-reply', 'chats_chat_message_get_reply')
        g.custom_command('list-hosted-content', 'chats_chat_message_list_hosted_content')
        g.custom_command('list-reply', 'chats_chat_message_list_reply')

    from azext_chats.generated._client_factory import cf_chat_message_reply
    chats_chat_message_reply = CliCommandType(
        operations_tmpl='azext_chats.vendored_sdks.chats.operations._chat_message_reply_operations#ChatMessageReplyOper'
        'ations.{}',
        client_factory=cf_chat_message_reply)
    with self.command_group('chats chat-message-reply', chats_chat_message_reply, client_factory=cf_chat_message_reply,
                             is_experimental=True) as g:
        g.custom_command('delta', 'chats_chat_message_reply_delta')

    from azext_chats.generated._client_factory import cf_user
    chats_user = CliCommandType(
        operations_tmpl='azext_chats.vendored_sdks.chats.operations._user_operations#UserOperations.{}',
        client_factory=cf_user)
    with self.command_group('chats user', chats_user, client_factory=cf_user, is_experimental=True) as g:
        g.custom_command('update', 'chats_user_update')
        g.custom_command('create-chat', 'chats_user_create_chat')
        g.custom_command('get-chat', 'chats_user_get_chat')
        g.custom_command('list-chat', 'chats_user_list_chat')
