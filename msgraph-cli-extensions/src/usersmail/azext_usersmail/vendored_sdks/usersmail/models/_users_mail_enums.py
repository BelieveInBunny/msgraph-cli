# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from enum import Enum

class Enum14(str, Enum):

    id = "id"
    display_name = "displayName"
    parent_folder_id = "parentFolderId"
    child_folder_count = "childFolderCount"
    unread_item_count = "unreadItemCount"
    total_item_count = "totalItemCount"
    well_known_name = "wellKnownName"
    single_value_extended_properties = "singleValueExtendedProperties"
    multi_value_extended_properties = "multiValueExtendedProperties"
    messages = "messages"
    message_rules = "messageRules"
    child_folders = "childFolders"
    user_configurations = "userConfigurations"

class Enum15(str, Enum):

    asterisk = "*"
    single_value_extended_properties = "singleValueExtendedProperties"
    multi_value_extended_properties = "multiValueExtendedProperties"
    messages = "messages"
    message_rules = "messageRules"
    child_folders = "childFolders"
    user_configurations = "userConfigurations"

class Enum16(str, Enum):

    id = "id"
    id_desc = "id desc"
    display_name = "displayName"
    display_name_desc = "displayName desc"
    parent_folder_id = "parentFolderId"
    parent_folder_id_desc = "parentFolderId desc"
    child_folder_count = "childFolderCount"
    child_folder_count_desc = "childFolderCount desc"
    unread_item_count = "unreadItemCount"
    unread_item_count_desc = "unreadItemCount desc"
    total_item_count = "totalItemCount"
    total_item_count_desc = "totalItemCount desc"
    well_known_name = "wellKnownName"
    well_known_name_desc = "wellKnownName desc"

class Enum17(str, Enum):

    id = "id"
    display_name = "displayName"
    parent_folder_id = "parentFolderId"
    child_folder_count = "childFolderCount"
    unread_item_count = "unreadItemCount"
    total_item_count = "totalItemCount"
    well_known_name = "wellKnownName"
    single_value_extended_properties = "singleValueExtendedProperties"
    multi_value_extended_properties = "multiValueExtendedProperties"
    messages = "messages"
    message_rules = "messageRules"
    child_folders = "childFolders"
    user_configurations = "userConfigurations"

class Enum19(str, Enum):

    id = "id"
    display_name = "displayName"
    parent_folder_id = "parentFolderId"
    child_folder_count = "childFolderCount"
    unread_item_count = "unreadItemCount"
    total_item_count = "totalItemCount"
    well_known_name = "wellKnownName"
    single_value_extended_properties = "singleValueExtendedProperties"
    multi_value_extended_properties = "multiValueExtendedProperties"
    messages = "messages"
    message_rules = "messageRules"
    child_folders = "childFolders"
    user_configurations = "userConfigurations"

class Enum21(str, Enum):

    id = "id"
    id_desc = "id desc"
    display_name = "displayName"
    display_name_desc = "displayName desc"
    sequence = "sequence"
    sequence_desc = "sequence desc"
    conditions = "conditions"
    conditions_desc = "conditions desc"
    actions = "actions"
    actions_desc = "actions desc"
    exceptions = "exceptions"
    exceptions_desc = "exceptions desc"
    is_enabled = "isEnabled"
    is_enabled_desc = "isEnabled desc"
    has_error = "hasError"
    has_error_desc = "hasError desc"
    is_read_only = "isReadOnly"
    is_read_only_desc = "isReadOnly desc"

class Enum22(str, Enum):

    id = "id"
    display_name = "displayName"
    sequence = "sequence"
    conditions = "conditions"
    actions = "actions"
    exceptions = "exceptions"
    is_enabled = "isEnabled"
    has_error = "hasError"
    is_read_only = "isReadOnly"

class Enum23(str, Enum):

    id = "id"
    display_name = "displayName"
    sequence = "sequence"
    conditions = "conditions"
    actions = "actions"
    exceptions = "exceptions"
    is_enabled = "isEnabled"
    has_error = "hasError"
    is_read_only = "isReadOnly"

class Enum24(str, Enum):

    id = "id"
    id_desc = "id desc"
    created_date_time = "createdDateTime"
    created_date_time_desc = "createdDateTime desc"
    last_modified_date_time = "lastModifiedDateTime"
    last_modified_date_time_desc = "lastModifiedDateTime desc"
    change_key = "changeKey"
    change_key_desc = "changeKey desc"
    categories = "categories"
    categories_desc = "categories desc"
    received_date_time = "receivedDateTime"
    received_date_time_desc = "receivedDateTime desc"
    sent_date_time = "sentDateTime"
    sent_date_time_desc = "sentDateTime desc"
    has_attachments = "hasAttachments"
    has_attachments_desc = "hasAttachments desc"
    internet_message_id = "internetMessageId"
    internet_message_id_desc = "internetMessageId desc"
    internet_message_headers = "internetMessageHeaders"
    internet_message_headers_desc = "internetMessageHeaders desc"
    subject = "subject"
    subject_desc = "subject desc"
    body = "body"
    body_desc = "body desc"
    body_preview = "bodyPreview"
    body_preview_desc = "bodyPreview desc"
    importance = "importance"
    importance_desc = "importance desc"
    parent_folder_id = "parentFolderId"
    parent_folder_id_desc = "parentFolderId desc"
    sender = "sender"
    sender_desc = "sender desc"
    from_enum = "from"
    from_desc = "from desc"
    to_recipients = "toRecipients"
    to_recipients_desc = "toRecipients desc"
    cc_recipients = "ccRecipients"
    cc_recipients_desc = "ccRecipients desc"
    bcc_recipients = "bccRecipients"
    bcc_recipients_desc = "bccRecipients desc"
    reply_to = "replyTo"
    reply_to_desc = "replyTo desc"
    conversation_id = "conversationId"
    conversation_id_desc = "conversationId desc"
    conversation_index = "conversationIndex"
    conversation_index_desc = "conversationIndex desc"
    unique_body = "uniqueBody"
    unique_body_desc = "uniqueBody desc"
    is_delivery_receipt_requested = "isDeliveryReceiptRequested"
    is_delivery_receipt_requested_desc = "isDeliveryReceiptRequested desc"
    is_read_receipt_requested = "isReadReceiptRequested"
    is_read_receipt_requested_desc = "isReadReceiptRequested desc"
    is_read = "isRead"
    is_read_desc = "isRead desc"
    is_draft = "isDraft"
    is_draft_desc = "isDraft desc"
    web_link = "webLink"
    web_link_desc = "webLink desc"
    mentions_preview = "mentionsPreview"
    mentions_preview_desc = "mentionsPreview desc"
    inference_classification = "inferenceClassification"
    inference_classification_desc = "inferenceClassification desc"
    unsubscribe_data = "unsubscribeData"
    unsubscribe_data_desc = "unsubscribeData desc"
    unsubscribe_enabled = "unsubscribeEnabled"
    unsubscribe_enabled_desc = "unsubscribeEnabled desc"
    flag = "flag"
    flag_desc = "flag desc"

class Enum25(str, Enum):

    id = "id"
    created_date_time = "createdDateTime"
    last_modified_date_time = "lastModifiedDateTime"
    change_key = "changeKey"
    categories = "categories"
    received_date_time = "receivedDateTime"
    sent_date_time = "sentDateTime"
    has_attachments = "hasAttachments"
    internet_message_id = "internetMessageId"
    internet_message_headers = "internetMessageHeaders"
    subject = "subject"
    body = "body"
    body_preview = "bodyPreview"
    importance = "importance"
    parent_folder_id = "parentFolderId"
    sender = "sender"
    from_enum = "from"
    to_recipients = "toRecipients"
    cc_recipients = "ccRecipients"
    bcc_recipients = "bccRecipients"
    reply_to = "replyTo"
    conversation_id = "conversationId"
    conversation_index = "conversationIndex"
    unique_body = "uniqueBody"
    is_delivery_receipt_requested = "isDeliveryReceiptRequested"
    is_read_receipt_requested = "isReadReceiptRequested"
    is_read = "isRead"
    is_draft = "isDraft"
    web_link = "webLink"
    mentions_preview = "mentionsPreview"
    inference_classification = "inferenceClassification"
    unsubscribe_data = "unsubscribeData"
    unsubscribe_enabled = "unsubscribeEnabled"
    flag = "flag"
    single_value_extended_properties = "singleValueExtendedProperties"
    multi_value_extended_properties = "multiValueExtendedProperties"
    attachments = "attachments"
    extensions = "extensions"
    mentions = "mentions"

class Enum26(str, Enum):

    asterisk = "*"
    single_value_extended_properties = "singleValueExtendedProperties"
    multi_value_extended_properties = "multiValueExtendedProperties"
    attachments = "attachments"
    extensions = "extensions"
    mentions = "mentions"

class Enum27(str, Enum):

    id = "id"
    created_date_time = "createdDateTime"
    last_modified_date_time = "lastModifiedDateTime"
    change_key = "changeKey"
    categories = "categories"
    received_date_time = "receivedDateTime"
    sent_date_time = "sentDateTime"
    has_attachments = "hasAttachments"
    internet_message_id = "internetMessageId"
    internet_message_headers = "internetMessageHeaders"
    subject = "subject"
    body = "body"
    body_preview = "bodyPreview"
    importance = "importance"
    parent_folder_id = "parentFolderId"
    sender = "sender"
    from_enum = "from"
    to_recipients = "toRecipients"
    cc_recipients = "ccRecipients"
    bcc_recipients = "bccRecipients"
    reply_to = "replyTo"
    conversation_id = "conversationId"
    conversation_index = "conversationIndex"
    unique_body = "uniqueBody"
    is_delivery_receipt_requested = "isDeliveryReceiptRequested"
    is_read_receipt_requested = "isReadReceiptRequested"
    is_read = "isRead"
    is_draft = "isDraft"
    web_link = "webLink"
    mentions_preview = "mentionsPreview"
    inference_classification = "inferenceClassification"
    unsubscribe_data = "unsubscribeData"
    unsubscribe_enabled = "unsubscribeEnabled"
    flag = "flag"
    single_value_extended_properties = "singleValueExtendedProperties"
    multi_value_extended_properties = "multiValueExtendedProperties"
    attachments = "attachments"
    extensions = "extensions"
    mentions = "mentions"

class Enum28(str, Enum):

    asterisk = "*"
    single_value_extended_properties = "singleValueExtendedProperties"
    multi_value_extended_properties = "multiValueExtendedProperties"
    attachments = "attachments"
    extensions = "extensions"
    mentions = "mentions"

class Enum29(str, Enum):

    id = "id"
    id_desc = "id desc"
    last_modified_date_time = "lastModifiedDateTime"
    last_modified_date_time_desc = "lastModifiedDateTime desc"
    name = "name"
    name_desc = "name desc"
    content_type = "contentType"
    content_type_desc = "contentType desc"
    size = "size"
    size_desc = "size desc"
    is_inline = "isInline"
    is_inline_desc = "isInline desc"

class Enum30(str, Enum):

    id = "id"
    last_modified_date_time = "lastModifiedDateTime"
    name = "name"
    content_type = "contentType"
    size = "size"
    is_inline = "isInline"

class Enum31(str, Enum):

    id = "id"
    last_modified_date_time = "lastModifiedDateTime"
    name = "name"
    content_type = "contentType"
    size = "size"
    is_inline = "isInline"

class Enum32(str, Enum):

    id = "id"
    id_desc = "id desc"

class Enum33(str, Enum):

    id = "id"
    id_desc = "id desc"
    mentioned = "mentioned"
    mentioned_desc = "mentioned desc"
    mention_text = "mentionText"
    mention_text_desc = "mentionText desc"
    client_reference = "clientReference"
    client_reference_desc = "clientReference desc"
    created_by = "createdBy"
    created_by_desc = "createdBy desc"
    created_date_time = "createdDateTime"
    created_date_time_desc = "createdDateTime desc"
    server_created_date_time = "serverCreatedDateTime"
    server_created_date_time_desc = "serverCreatedDateTime desc"
    deep_link = "deepLink"
    deep_link_desc = "deepLink desc"
    application = "application"
    application_desc = "application desc"

class Enum34(str, Enum):

    id = "id"
    mentioned = "mentioned"
    mention_text = "mentionText"
    client_reference = "clientReference"
    created_by = "createdBy"
    created_date_time = "createdDateTime"
    server_created_date_time = "serverCreatedDateTime"
    deep_link = "deepLink"
    application = "application"

class Enum35(str, Enum):

    id = "id"
    mentioned = "mentioned"
    mention_text = "mentionText"
    client_reference = "clientReference"
    created_by = "createdBy"
    created_date_time = "createdDateTime"
    server_created_date_time = "serverCreatedDateTime"
    deep_link = "deepLink"
    application = "application"

class Enum36(str, Enum):

    id = "id"
    id_desc = "id desc"
    value = "value"
    value_desc = "value desc"

class Enum37(str, Enum):

    id = "id"
    value = "value"

class Enum38(str, Enum):

    id = "id"
    value = "value"

class Enum39(str, Enum):

    id = "id"
    id_desc = "id desc"
    value = "value"
    value_desc = "value desc"

class Enum40(str, Enum):

    id = "id"
    value = "value"

class Enum41(str, Enum):

    id = "id"
    value = "value"

class Enum42(str, Enum):

    id = "id"
    id_desc = "id desc"
    value = "value"
    value_desc = "value desc"

class Enum43(str, Enum):

    id = "id"
    value = "value"

class Enum44(str, Enum):

    id = "id"
    value = "value"

class Enum45(str, Enum):

    id = "id"
    id_desc = "id desc"
    value = "value"
    value_desc = "value desc"

class Enum46(str, Enum):

    id = "id"
    value = "value"

class Enum47(str, Enum):

    id = "id"
    value = "value"

class Enum48(str, Enum):

    id = "id"
    id_desc = "id desc"
    binary_data = "binaryData"
    binary_data_desc = "binaryData desc"

class Enum49(str, Enum):

    id = "id"
    binary_data = "binaryData"

class Enum5(str, Enum):

    id = "id"
    classify_as = "classifyAs"
    sender_email_address = "senderEmailAddress"

class Enum50(str, Enum):

    id = "id"
    binary_data = "binaryData"

class Enum51(str, Enum):

    id = "id"
    id_desc = "id desc"
    created_date_time = "createdDateTime"
    created_date_time_desc = "createdDateTime desc"
    last_modified_date_time = "lastModifiedDateTime"
    last_modified_date_time_desc = "lastModifiedDateTime desc"
    change_key = "changeKey"
    change_key_desc = "changeKey desc"
    categories = "categories"
    categories_desc = "categories desc"
    received_date_time = "receivedDateTime"
    received_date_time_desc = "receivedDateTime desc"
    sent_date_time = "sentDateTime"
    sent_date_time_desc = "sentDateTime desc"
    has_attachments = "hasAttachments"
    has_attachments_desc = "hasAttachments desc"
    internet_message_id = "internetMessageId"
    internet_message_id_desc = "internetMessageId desc"
    internet_message_headers = "internetMessageHeaders"
    internet_message_headers_desc = "internetMessageHeaders desc"
    subject = "subject"
    subject_desc = "subject desc"
    body = "body"
    body_desc = "body desc"
    body_preview = "bodyPreview"
    body_preview_desc = "bodyPreview desc"
    importance = "importance"
    importance_desc = "importance desc"
    parent_folder_id = "parentFolderId"
    parent_folder_id_desc = "parentFolderId desc"
    sender = "sender"
    sender_desc = "sender desc"
    from_enum = "from"
    from_desc = "from desc"
    to_recipients = "toRecipients"
    to_recipients_desc = "toRecipients desc"
    cc_recipients = "ccRecipients"
    cc_recipients_desc = "ccRecipients desc"
    bcc_recipients = "bccRecipients"
    bcc_recipients_desc = "bccRecipients desc"
    reply_to = "replyTo"
    reply_to_desc = "replyTo desc"
    conversation_id = "conversationId"
    conversation_id_desc = "conversationId desc"
    conversation_index = "conversationIndex"
    conversation_index_desc = "conversationIndex desc"
    unique_body = "uniqueBody"
    unique_body_desc = "uniqueBody desc"
    is_delivery_receipt_requested = "isDeliveryReceiptRequested"
    is_delivery_receipt_requested_desc = "isDeliveryReceiptRequested desc"
    is_read_receipt_requested = "isReadReceiptRequested"
    is_read_receipt_requested_desc = "isReadReceiptRequested desc"
    is_read = "isRead"
    is_read_desc = "isRead desc"
    is_draft = "isDraft"
    is_draft_desc = "isDraft desc"
    web_link = "webLink"
    web_link_desc = "webLink desc"
    mentions_preview = "mentionsPreview"
    mentions_preview_desc = "mentionsPreview desc"
    inference_classification = "inferenceClassification"
    inference_classification_desc = "inferenceClassification desc"
    unsubscribe_data = "unsubscribeData"
    unsubscribe_data_desc = "unsubscribeData desc"
    unsubscribe_enabled = "unsubscribeEnabled"
    unsubscribe_enabled_desc = "unsubscribeEnabled desc"
    flag = "flag"
    flag_desc = "flag desc"

class Enum52(str, Enum):

    id = "id"
    created_date_time = "createdDateTime"
    last_modified_date_time = "lastModifiedDateTime"
    change_key = "changeKey"
    categories = "categories"
    received_date_time = "receivedDateTime"
    sent_date_time = "sentDateTime"
    has_attachments = "hasAttachments"
    internet_message_id = "internetMessageId"
    internet_message_headers = "internetMessageHeaders"
    subject = "subject"
    body = "body"
    body_preview = "bodyPreview"
    importance = "importance"
    parent_folder_id = "parentFolderId"
    sender = "sender"
    from_enum = "from"
    to_recipients = "toRecipients"
    cc_recipients = "ccRecipients"
    bcc_recipients = "bccRecipients"
    reply_to = "replyTo"
    conversation_id = "conversationId"
    conversation_index = "conversationIndex"
    unique_body = "uniqueBody"
    is_delivery_receipt_requested = "isDeliveryReceiptRequested"
    is_read_receipt_requested = "isReadReceiptRequested"
    is_read = "isRead"
    is_draft = "isDraft"
    web_link = "webLink"
    mentions_preview = "mentionsPreview"
    inference_classification = "inferenceClassification"
    unsubscribe_data = "unsubscribeData"
    unsubscribe_enabled = "unsubscribeEnabled"
    flag = "flag"
    single_value_extended_properties = "singleValueExtendedProperties"
    multi_value_extended_properties = "multiValueExtendedProperties"
    attachments = "attachments"
    extensions = "extensions"
    mentions = "mentions"

class Enum53(str, Enum):

    asterisk = "*"
    single_value_extended_properties = "singleValueExtendedProperties"
    multi_value_extended_properties = "multiValueExtendedProperties"
    attachments = "attachments"
    extensions = "extensions"
    mentions = "mentions"

class Enum54(str, Enum):

    id = "id"
    created_date_time = "createdDateTime"
    last_modified_date_time = "lastModifiedDateTime"
    change_key = "changeKey"
    categories = "categories"
    received_date_time = "receivedDateTime"
    sent_date_time = "sentDateTime"
    has_attachments = "hasAttachments"
    internet_message_id = "internetMessageId"
    internet_message_headers = "internetMessageHeaders"
    subject = "subject"
    body = "body"
    body_preview = "bodyPreview"
    importance = "importance"
    parent_folder_id = "parentFolderId"
    sender = "sender"
    from_enum = "from"
    to_recipients = "toRecipients"
    cc_recipients = "ccRecipients"
    bcc_recipients = "bccRecipients"
    reply_to = "replyTo"
    conversation_id = "conversationId"
    conversation_index = "conversationIndex"
    unique_body = "uniqueBody"
    is_delivery_receipt_requested = "isDeliveryReceiptRequested"
    is_read_receipt_requested = "isReadReceiptRequested"
    is_read = "isRead"
    is_draft = "isDraft"
    web_link = "webLink"
    mentions_preview = "mentionsPreview"
    inference_classification = "inferenceClassification"
    unsubscribe_data = "unsubscribeData"
    unsubscribe_enabled = "unsubscribeEnabled"
    flag = "flag"
    single_value_extended_properties = "singleValueExtendedProperties"
    multi_value_extended_properties = "multiValueExtendedProperties"
    attachments = "attachments"
    extensions = "extensions"
    mentions = "mentions"

class Enum55(str, Enum):

    asterisk = "*"
    single_value_extended_properties = "singleValueExtendedProperties"
    multi_value_extended_properties = "multiValueExtendedProperties"
    attachments = "attachments"
    extensions = "extensions"
    mentions = "mentions"

class Enum56(str, Enum):

    id = "id"
    id_desc = "id desc"
    last_modified_date_time = "lastModifiedDateTime"
    last_modified_date_time_desc = "lastModifiedDateTime desc"
    name = "name"
    name_desc = "name desc"
    content_type = "contentType"
    content_type_desc = "contentType desc"
    size = "size"
    size_desc = "size desc"
    is_inline = "isInline"
    is_inline_desc = "isInline desc"

class Enum57(str, Enum):

    id = "id"
    last_modified_date_time = "lastModifiedDateTime"
    name = "name"
    content_type = "contentType"
    size = "size"
    is_inline = "isInline"

class Enum58(str, Enum):

    id = "id"
    last_modified_date_time = "lastModifiedDateTime"
    name = "name"
    content_type = "contentType"
    size = "size"
    is_inline = "isInline"

class Enum59(str, Enum):

    id = "id"
    id_desc = "id desc"

class Enum6(str, Enum):

    id = "id"
    id_desc = "id desc"
    display_name = "displayName"
    display_name_desc = "displayName desc"
    parent_folder_id = "parentFolderId"
    parent_folder_id_desc = "parentFolderId desc"
    child_folder_count = "childFolderCount"
    child_folder_count_desc = "childFolderCount desc"
    unread_item_count = "unreadItemCount"
    unread_item_count_desc = "unreadItemCount desc"
    total_item_count = "totalItemCount"
    total_item_count_desc = "totalItemCount desc"
    well_known_name = "wellKnownName"
    well_known_name_desc = "wellKnownName desc"

class Enum60(str, Enum):

    id = "id"
    id_desc = "id desc"
    mentioned = "mentioned"
    mentioned_desc = "mentioned desc"
    mention_text = "mentionText"
    mention_text_desc = "mentionText desc"
    client_reference = "clientReference"
    client_reference_desc = "clientReference desc"
    created_by = "createdBy"
    created_by_desc = "createdBy desc"
    created_date_time = "createdDateTime"
    created_date_time_desc = "createdDateTime desc"
    server_created_date_time = "serverCreatedDateTime"
    server_created_date_time_desc = "serverCreatedDateTime desc"
    deep_link = "deepLink"
    deep_link_desc = "deepLink desc"
    application = "application"
    application_desc = "application desc"

class Enum61(str, Enum):

    id = "id"
    mentioned = "mentioned"
    mention_text = "mentionText"
    client_reference = "clientReference"
    created_by = "createdBy"
    created_date_time = "createdDateTime"
    server_created_date_time = "serverCreatedDateTime"
    deep_link = "deepLink"
    application = "application"

class Enum62(str, Enum):

    id = "id"
    mentioned = "mentioned"
    mention_text = "mentionText"
    client_reference = "clientReference"
    created_by = "createdBy"
    created_date_time = "createdDateTime"
    server_created_date_time = "serverCreatedDateTime"
    deep_link = "deepLink"
    application = "application"

class Enum63(str, Enum):

    id = "id"
    id_desc = "id desc"
    value = "value"
    value_desc = "value desc"

class Enum64(str, Enum):

    id = "id"
    value = "value"

class Enum65(str, Enum):

    id = "id"
    value = "value"

class Enum66(str, Enum):

    id = "id"
    id_desc = "id desc"
    value = "value"
    value_desc = "value desc"

class Enum67(str, Enum):

    id = "id"
    value = "value"

class Enum68(str, Enum):

    id = "id"
    value = "value"

class Enum7(str, Enum):

    id = "id"
    display_name = "displayName"
    parent_folder_id = "parentFolderId"
    child_folder_count = "childFolderCount"
    unread_item_count = "unreadItemCount"
    total_item_count = "totalItemCount"
    well_known_name = "wellKnownName"
    single_value_extended_properties = "singleValueExtendedProperties"
    multi_value_extended_properties = "multiValueExtendedProperties"
    messages = "messages"
    message_rules = "messageRules"
    child_folders = "childFolders"
    user_configurations = "userConfigurations"

class Enum8(str, Enum):

    asterisk = "*"
    single_value_extended_properties = "singleValueExtendedProperties"
    multi_value_extended_properties = "multiValueExtendedProperties"
    messages = "messages"
    message_rules = "messageRules"
    child_folders = "childFolders"
    user_configurations = "userConfigurations"

class Get1ItemsItem(str, Enum):

    id = "id"
    overrides = "overrides"

class Get2ItemsItem(str, Enum):

    asterisk = "*"
    overrides = "overrides"

class Get4ItemsItem(str, Enum):

    asterisk = "*"
    single_value_extended_properties = "singleValueExtendedProperties"
    multi_value_extended_properties = "multiValueExtendedProperties"
    messages = "messages"
    message_rules = "messageRules"
    child_folders = "childFolders"
    user_configurations = "userConfigurations"

class Get6ItemsItem(str, Enum):

    id = "id"
    id_desc = "id desc"
    classify_as = "classifyAs"
    classify_as_desc = "classifyAs desc"
    sender_email_address = "senderEmailAddress"
    sender_email_address_desc = "senderEmailAddress desc"

class Get7ItemsItem(str, Enum):

    id = "id"
    classify_as = "classifyAs"
    sender_email_address = "senderEmailAddress"

class Get9ItemsItem(str, Enum):

    asterisk = "*"
    single_value_extended_properties = "singleValueExtendedProperties"
    multi_value_extended_properties = "multiValueExtendedProperties"
    messages = "messages"
    message_rules = "messageRules"
    child_folders = "childFolders"
    user_configurations = "userConfigurations"

class MicrosoftGraphBodyType(str, Enum):

    text = "text"
    html = "html"

class MicrosoftGraphFollowupFlagStatus(str, Enum):

    not_flagged = "notFlagged"
    complete = "complete"
    flagged = "flagged"

class MicrosoftGraphImportance(str, Enum):

    low = "low"
    normal = "normal"
    high = "high"

class MicrosoftGraphInferenceClassificationType(str, Enum):

    focused = "focused"
    other = "other"

class MicrosoftGraphMessageActionFlag(str, Enum):

    any = "any"
    call = "call"
    do_not_forward = "doNotForward"
    follow_up = "followUp"
    fyi = "fyi"
    forward = "forward"
    no_response_necessary = "noResponseNecessary"
    read = "read"
    reply = "reply"
    reply_to_all = "replyToAll"
    review = "review"

class MicrosoftGraphSensitivity(str, Enum):

    normal = "normal"
    personal = "personal"
    private = "private"
    confidential = "confidential"
