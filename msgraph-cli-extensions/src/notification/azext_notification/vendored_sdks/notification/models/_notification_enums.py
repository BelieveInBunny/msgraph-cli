# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from enum import Enum, EnumMeta
from six import with_metaclass

class _CaseInsensitiveEnumMeta(EnumMeta):
    def __getitem__(self, name):
        return super().__getitem__(name.upper())

    def __getattr__(cls, name):
        """Return the enum member matching `name`
        We use __getattr__ instead of descriptors or inserting into the enum
        class' __dict__ in order to support `name` and `value` being both
        properties for enum members (which live in the class' __dict__) and
        enum members themselves.
        """
        try:
            return cls._member_map_[name.upper()]
        except KeyError:
            raise AttributeError(name)


class Get2ItemsItem(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    TARGET_HOST_NAME = "targetHostName"
    EXPIRATION_DATE_TIME = "expirationDateTime"
    PAYLOAD = "payload"
    DISPLAY_TIME_TO_LIVE = "displayTimeToLive"
    PRIORITY = "priority"
    GROUP_NAME = "groupName"
    TARGET_POLICY = "targetPolicy"

class Get6ItemsItem(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    TARGET_HOST_NAME = "targetHostName"
    TARGET_HOST_NAME_DESC = "targetHostName desc"
    EXPIRATION_DATE_TIME = "expirationDateTime"
    EXPIRATION_DATE_TIME_DESC = "expirationDateTime desc"
    PAYLOAD = "payload"
    PAYLOAD_DESC = "payload desc"
    DISPLAY_TIME_TO_LIVE = "displayTimeToLive"
    DISPLAY_TIME_TO_LIVE_DESC = "displayTimeToLive desc"
    PRIORITY = "priority"
    PRIORITY_DESC = "priority desc"
    GROUP_NAME = "groupName"
    GROUP_NAME_DESC = "groupName desc"
    TARGET_POLICY = "targetPolicy"
    TARGET_POLICY_DESC = "targetPolicy desc"

class Get7ItemsItem(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    TARGET_HOST_NAME = "targetHostName"
    EXPIRATION_DATE_TIME = "expirationDateTime"
    PAYLOAD = "payload"
    DISPLAY_TIME_TO_LIVE = "displayTimeToLive"
    PRIORITY = "priority"
    GROUP_NAME = "groupName"
    TARGET_POLICY = "targetPolicy"

class MicrosoftGraphPriority(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    NONE = "None"
    HIGH = "High"
    LOW = "Low"
