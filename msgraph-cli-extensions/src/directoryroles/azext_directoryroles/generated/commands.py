# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=too-many-statements
# pylint: disable=too-many-locals

from msgraph.cli.core.commands import CliCommandType


def load_command_table(self, _):

    from azext_directoryroles.generated._client_factory import cf_directory_role_directory_role
    directoryroles_directory_role_directory_role = CliCommandType(
        operations_tmpl='azext_directoryroles.vendored_sdks.directoryroles.operations._directory_role_directory_role_op'
        'erations#DirectoryRoleOperations.{}',
        client_factory=cf_directory_role_directory_role)
    with self.command_group('directoryroles directory-role-directory-role',
                            directoryroles_directory_role_directory_role,
                            client_factory=cf_directory_role_directory_role, is_experimental=True) as g:
        g.custom_command('update', 'directoryroles_directory_role_directory_role_update')
        g.custom_command('delete', 'directoryroles_directory_role_directory_role_delete')
        g.custom_command('create-directory-role',
                         'directoryroles_directory_role_directory_role_create_directory_role')
        g.custom_command('get-directory-role', 'directoryroles_directory_role_directory_role_get_directory_role')
        g.custom_command('list-directory-role', 'directoryroles_directory_role_directory_role_list_directory_role')

    from azext_directoryroles.generated._client_factory import cf_directory_role
    directoryroles_directory_role = CliCommandType(
        operations_tmpl='azext_directoryroles.vendored_sdks.directoryroles.operations._directory_role_operations#Direct'
        'oryRoleOperations.{}',
        client_factory=cf_directory_role)
    with self.command_group('directoryroles directory-role', directoryroles_directory_role,
                            client_factory=cf_directory_role, is_experimental=True) as g:
        g.custom_command('update', 'directoryroles_directory_role_update')
        g.custom_command('check-member-group', 'directoryroles_directory_role_check_member_group')
        g.custom_command('check-member-object', 'directoryroles_directory_role_check_member_object')
        g.custom_command('create-scoped-member', 'directoryroles_directory_role_create_scoped_member')
        g.custom_command('delta', 'directoryroles_directory_role_delta')
        g.custom_command('get-by-id', 'directoryroles_directory_role_get_by_id')
        g.custom_command('get-member', 'directoryroles_directory_role_get_member')
        g.custom_command('get-member-group', 'directoryroles_directory_role_get_member_group')
        g.custom_command('get-member-object', 'directoryroles_directory_role_get_member_object')
        g.custom_command('get-scoped-member', 'directoryroles_directory_role_get_scoped_member')
        g.custom_command('get-user-owned-object', 'directoryroles_directory_role_get_user_owned_object')
        g.custom_command('list-member', 'directoryroles_directory_role_list_member')
        g.custom_command('list-scoped-member', 'directoryroles_directory_role_list_scoped_member')
        g.custom_command('restore', 'directoryroles_directory_role_restore')
        g.custom_command('validate-property', 'directoryroles_directory_role_validate_property')
