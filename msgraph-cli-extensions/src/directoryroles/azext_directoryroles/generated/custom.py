# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=too-many-lines


def directoryroles_directory_role_directory_role_update(client,
                                                        directory_role_id,
                                                        id_=None,
                                                        deleted_date_time=None,
                                                        description=None,
                                                        display_name=None,
                                                        role_template_id=None,
                                                        members=None,
                                                        scoped_members=None):
    return client.update_directory_role(directory_role_id=directory_role_id,
                                        id=id_,
                                        deleted_date_time=deleted_date_time,
                                        description=description,
                                        display_name=display_name,
                                        role_template_id=role_template_id,
                                        members=members,
                                        scoped_members=scoped_members)


def directoryroles_directory_role_directory_role_delete(client,
                                                        directory_role_id,
                                                        if_match=None):
    return client.delete_directory_role(directory_role_id=directory_role_id,
                                        if_match=if_match)


def directoryroles_directory_role_directory_role_create_directory_role(client,
                                                                       id_=None,
                                                                       deleted_date_time=None,
                                                                       description=None,
                                                                       display_name=None,
                                                                       role_template_id=None,
                                                                       members=None,
                                                                       scoped_members=None):
    return client.create_directory_role(id=id_,
                                        deleted_date_time=deleted_date_time,
                                        description=description,
                                        display_name=display_name,
                                        role_template_id=role_template_id,
                                        members=members,
                                        scoped_members=scoped_members)


def directoryroles_directory_role_directory_role_get_directory_role(client,
                                                                    directory_role_id,
                                                                    select=None,
                                                                    expand=None):
    return client.get_directory_role(directory_role_id=directory_role_id,
                                     select=select,
                                     expand=expand)


def directoryroles_directory_role_directory_role_list_directory_role(client,
                                                                     orderby=None,
                                                                     select=None,
                                                                     expand=None):
    return client.list_directory_role(orderby=orderby,
                                      select=select,
                                      expand=expand)


def directoryroles_directory_role_update(client,
                                         directory_role_id,
                                         scoped_role_membership_id,
                                         id_=None,
                                         role_id=None,
                                         administrative_unit_id=None,
                                         role_member_info_id=None,
                                         role_member_info_display_name=None):
    return client.update_scoped_member(directory_role_id=directory_role_id,
                                       scoped_role_membership_id=scoped_role_membership_id,
                                       id=id_,
                                       role_id=role_id,
                                       administrative_unit_id=administrative_unit_id,
                                       microsoft_graph_identity_id=role_member_info_id,
                                       display_name=role_member_info_display_name)


def directoryroles_directory_role_check_member_group(client,
                                                     directory_role_id,
                                                     group_ids=None):
    return client.check_member_group(directory_role_id=directory_role_id,
                                     group_ids=group_ids)


def directoryroles_directory_role_check_member_object(client,
                                                      directory_role_id,
                                                      ids=None):
    return client.check_member_object(directory_role_id=directory_role_id,
                                      ids=ids)


def directoryroles_directory_role_create_scoped_member(client,
                                                       directory_role_id,
                                                       id_=None,
                                                       role_id=None,
                                                       administrative_unit_id=None,
                                                       role_member_info_id=None,
                                                       role_member_info_display_name=None):
    return client.create_scoped_member(directory_role_id=directory_role_id,
                                       id=id_,
                                       role_id=role_id,
                                       administrative_unit_id=administrative_unit_id,
                                       microsoft_graph_identity_id=role_member_info_id,
                                       display_name=role_member_info_display_name)


def directoryroles_directory_role_delta(client):
    return client.delta()


def directoryroles_directory_role_get_by_id(client,
                                            ids=None,
                                            types=None):
    return client.get_by_id(ids=ids,
                            types=types)


def directoryroles_directory_role_get_member(client,
                                             directory_role_id,
                                             directory_object_id,
                                             select=None,
                                             expand=None):
    return client.get_member(directory_role_id=directory_role_id,
                             directory_object_id=directory_object_id,
                             select=select,
                             expand=expand)


def directoryroles_directory_role_get_member_group(client,
                                                   directory_role_id,
                                                   security_enabled_only=None):
    if security_enabled_only == None:
        security_enabled_only = False
    return client.get_member_group(directory_role_id=directory_role_id,
                                   security_enabled_only=security_enabled_only)


def directoryroles_directory_role_get_member_object(client,
                                                    directory_role_id,
                                                    security_enabled_only=None):
    if security_enabled_only == None:
        security_enabled_only = False
    return client.get_member_object(directory_role_id=directory_role_id,
                                    security_enabled_only=security_enabled_only)


def directoryroles_directory_role_get_scoped_member(client,
                                                    directory_role_id,
                                                    scoped_role_membership_id,
                                                    select=None,
                                                    expand=None):
    return client.get_scoped_member(directory_role_id=directory_role_id,
                                    scoped_role_membership_id=scoped_role_membership_id,
                                    select=select,
                                    expand=expand)


def directoryroles_directory_role_get_user_owned_object(client,
                                                        user_id=None,
                                                        type_=None):
    return client.get_user_owned_object(user_id=user_id,
                                        type=type_)


def directoryroles_directory_role_list_member(client,
                                              directory_role_id,
                                              orderby=None,
                                              select=None,
                                              expand=None):
    return client.list_member(directory_role_id=directory_role_id,
                              orderby=orderby,
                              select=select,
                              expand=expand)


def directoryroles_directory_role_list_scoped_member(client,
                                                     directory_role_id,
                                                     orderby=None,
                                                     select=None,
                                                     expand=None):
    return client.list_scoped_member(directory_role_id=directory_role_id,
                                     orderby=orderby,
                                     select=select,
                                     expand=expand)


def directoryroles_directory_role_restore(client,
                                          directory_role_id):
    return client.restore(directory_role_id=directory_role_id)


def directoryroles_directory_role_validate_property(client,
                                                    entity_type=None,
                                                    display_name=None,
                                                    mail_nickname=None,
                                                    on_behalf_of_user_id=None):
    return client.validate_property(entity_type=entity_type,
                                    display_name=display_name,
                                    mail_nickname=mail_nickname,
                                    on_behalf_of_user_id=on_behalf_of_user_id)
