# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=too-many-lines
# pylint: disable=too-many-statements

from azext_licensedetails.action import AddServicePlans


def load_arguments(self, _):

    with self.argument_context('licensedetails user update') as c:
        c.argument('user_id', help='key: user-id of user')
        c.argument('license_details_id', help='key: licenseDetails-id of licenseDetails')
        c.argument('id_', options_list=['--id'], help='Read-only.')
        c.argument('service_plans', action=AddServicePlans, nargs='*', help='Information about the service plans '
                   'assigned with the license. Read-only, Not nullable')
        c.argument('sku_id', help='Unique identifier (GUID) for the service SKU. Equal to the skuId property on the '
                   'related SubscribedSku object. Read-only')
        c.argument('sku_part_number', help='Unique SKU display name. Equal to the skuPartNumber on the related '
                   'SubscribedSku object; for example: \'AAD_Premium\'. Read-only')

    with self.argument_context('licensedetails user create-license-detail') as c:
        c.argument('user_id', help='key: user-id of user')
        c.argument('id_', options_list=['--id'], help='Read-only.')
        c.argument('service_plans', action=AddServicePlans, nargs='*', help='Information about the service plans '
                   'assigned with the license. Read-only, Not nullable')
        c.argument('sku_id', help='Unique identifier (GUID) for the service SKU. Equal to the skuId property on the '
                   'related SubscribedSku object. Read-only')
        c.argument('sku_part_number', help='Unique SKU display name. Equal to the skuPartNumber on the related '
                   'SubscribedSku object; for example: \'AAD_Premium\'. Read-only')

    with self.argument_context('licensedetails user get-license-detail') as c:
        c.argument('user_id', help='key: user-id of user')
        c.argument('license_details_id', help='key: licenseDetails-id of licenseDetails')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('licensedetails user list-license-detail') as c:
        c.argument('user_id', help='key: user-id of user')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')
