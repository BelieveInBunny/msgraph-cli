# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=line-too-long
# pylint: disable=too-many-statements
# pylint: disable=too-many-locals

from msgraph.cli.core.commands import CliCommandType


def load_command_table(self, _):

    from azext_usersfunctions.generated._client_factory import cf_user_activity
    usersfunctions_user_activity = CliCommandType(
        operations_tmpl='azext_usersfunctions.vendored_sdks.usersfunctions.operations._user_activity_operations#UserAct'
        'ivityOperations.{}',
        client_factory=cf_user_activity)
    with self.command_group('usersfunctions', usersfunctions_user_activity, client_factory=cf_user_activity) as g:
        g.custom_command('recent', 'usersfunctions_recent')

    from azext_usersfunctions.generated._client_factory import cf_user_calendar_calendar_view_calendar
    usersfunctions_user_calendar_calendar_view_calendar = CliCommandType(
        operations_tmpl='azext_usersfunctions.vendored_sdks.usersfunctions.operations._user_calendar_calendar_view_cale'
        'ndar_operations#UserCalendarCalendarViewCalendarOperations.{}',
        client_factory=cf_user_calendar_calendar_view_calendar)
    with self.command_group('usersfunctions', usersfunctions_user_calendar_calendar_view_calendar,
                            client_factory=cf_user_calendar_calendar_view_calendar) as g:
        g.custom_command('allowed-calendar-sharing-role', 'usersfunctions_allowed_calendar_sharing_role')

    from azext_usersfunctions.generated._client_factory import cf_user_calendar_calendar_view_instance
    usersfunctions_user_calendar_calendar_view_instance = CliCommandType(
        operations_tmpl='azext_usersfunctions.vendored_sdks.usersfunctions.operations._user_calendar_calendar_view_inst'
        'ance_operations#UserCalendarCalendarViewInstanceOperations.{}',
        client_factory=cf_user_calendar_calendar_view_instance)
    with self.command_group('usersfunctions', usersfunctions_user_calendar_calendar_view_instance,
                            client_factory=cf_user_calendar_calendar_view_instance) as g:
        g.custom_command('delta', 'usersfunctions_delta')

    from azext_usersfunctions.generated._client_factory import cf_user_calendar_calendar_view
    usersfunctions_user_calendar_calendar_view = CliCommandType(
        operations_tmpl='azext_usersfunctions.vendored_sdks.usersfunctions.operations._user_calendar_calendar_view_oper'
        'ations#UserCalendarCalendarViewOperations.{}',
        client_factory=cf_user_calendar_calendar_view)
    with self.command_group('usersfunctions', usersfunctions_user_calendar_calendar_view,
                            client_factory=cf_user_calendar_calendar_view) as g:
        g.custom_command('delta', 'usersfunctions_delta')

    from azext_usersfunctions.generated._client_factory import cf_user_calendar_event_calendar
    usersfunctions_user_calendar_event_calendar = CliCommandType(
        operations_tmpl='azext_usersfunctions.vendored_sdks.usersfunctions.operations._user_calendar_event_calendar_ope'
        'rations#UserCalendarEventCalendarOperations.{}',
        client_factory=cf_user_calendar_event_calendar)
    with self.command_group('usersfunctions', usersfunctions_user_calendar_event_calendar,
                            client_factory=cf_user_calendar_event_calendar) as g:
        g.custom_command('allowed-calendar-sharing-role', 'usersfunctions_allowed_calendar_sharing_role')

    from azext_usersfunctions.generated._client_factory import cf_user_calendar_event_instance
    usersfunctions_user_calendar_event_instance = CliCommandType(
        operations_tmpl='azext_usersfunctions.vendored_sdks.usersfunctions.operations._user_calendar_event_instance_ope'
        'rations#UserCalendarEventInstanceOperations.{}',
        client_factory=cf_user_calendar_event_instance)
    with self.command_group('usersfunctions', usersfunctions_user_calendar_event_instance,
                            client_factory=cf_user_calendar_event_instance) as g:
        g.custom_command('delta', 'usersfunctions_delta')

    from azext_usersfunctions.generated._client_factory import cf_user_calendar_event
    usersfunctions_user_calendar_event = CliCommandType(
        operations_tmpl='azext_usersfunctions.vendored_sdks.usersfunctions.operations._user_calendar_event_operations#U'
        'serCalendarEventOperations.{}',
        client_factory=cf_user_calendar_event)
    with self.command_group('usersfunctions', usersfunctions_user_calendar_event,
                            client_factory=cf_user_calendar_event) as g:
        g.custom_command('delta', 'usersfunctions_delta')

    from azext_usersfunctions.generated._client_factory import cf_user_calendar
    usersfunctions_user_calendar = CliCommandType(
        operations_tmpl='azext_usersfunctions.vendored_sdks.usersfunctions.operations._user_calendar_operations#UserCal'
        'endarOperations.{}',
        client_factory=cf_user_calendar)
    with self.command_group('usersfunctions', usersfunctions_user_calendar, client_factory=cf_user_calendar) as g:
        g.custom_command('allowed-calendar-sharing-role', 'usersfunctions_allowed_calendar_sharing_role')

    from azext_usersfunctions.generated._client_factory import cf_user_calendar_group_calendar_calendar_view_calendar
    usersfunctions_user_calendar_group_calendar_calendar_view_calendar = CliCommandType(
        operations_tmpl='azext_usersfunctions.vendored_sdks.usersfunctions.operations._user_calendar_group_calendar_cal'
        'endar_view_calendar_operations#UserCalendarGroupCalendarCalendarViewCalendarOperations.{}',
        client_factory=cf_user_calendar_group_calendar_calendar_view_calendar)
    with self.command_group('usersfunctions', usersfunctions_user_calendar_group_calendar_calendar_view_calendar,
                            client_factory=cf_user_calendar_group_calendar_calendar_view_calendar) as g:
        g.custom_command('allowed-calendar-sharing-role', 'usersfunctions_allowed_calendar_sharing_role')

    from azext_usersfunctions.generated._client_factory import cf_user_calendar_group_calendar_calendar_view_instance
    usersfunctions_user_calendar_group_calendar_calendar_view_instance = CliCommandType(
        operations_tmpl='azext_usersfunctions.vendored_sdks.usersfunctions.operations._user_calendar_group_calendar_cal'
        'endar_view_instance_operations#UserCalendarGroupCalendarCalendarViewInstanceOperations.{}',
        client_factory=cf_user_calendar_group_calendar_calendar_view_instance)
    with self.command_group('usersfunctions', usersfunctions_user_calendar_group_calendar_calendar_view_instance,
                            client_factory=cf_user_calendar_group_calendar_calendar_view_instance) as g:
        g.custom_command('delta', 'usersfunctions_delta')

    from azext_usersfunctions.generated._client_factory import cf_user_calendar_group_calendar_calendar_view
    usersfunctions_user_calendar_group_calendar_calendar_view = CliCommandType(
        operations_tmpl='azext_usersfunctions.vendored_sdks.usersfunctions.operations._user_calendar_group_calendar_cal'
        'endar_view_operations#UserCalendarGroupCalendarCalendarViewOperations.{}',
        client_factory=cf_user_calendar_group_calendar_calendar_view)
    with self.command_group('usersfunctions', usersfunctions_user_calendar_group_calendar_calendar_view,
                            client_factory=cf_user_calendar_group_calendar_calendar_view) as g:
        g.custom_command('delta', 'usersfunctions_delta')

    from azext_usersfunctions.generated._client_factory import cf_user_calendar_group_calendar_event_calendar
    usersfunctions_user_calendar_group_calendar_event_calendar = CliCommandType(
        operations_tmpl='azext_usersfunctions.vendored_sdks.usersfunctions.operations._user_calendar_group_calendar_eve'
        'nt_calendar_operations#UserCalendarGroupCalendarEventCalendarOperations.{}',
        client_factory=cf_user_calendar_group_calendar_event_calendar)
    with self.command_group('usersfunctions', usersfunctions_user_calendar_group_calendar_event_calendar,
                            client_factory=cf_user_calendar_group_calendar_event_calendar) as g:
        g.custom_command('allowed-calendar-sharing-role', 'usersfunctions_allowed_calendar_sharing_role')

    from azext_usersfunctions.generated._client_factory import cf_user_calendar_group_calendar_event_instance
    usersfunctions_user_calendar_group_calendar_event_instance = CliCommandType(
        operations_tmpl='azext_usersfunctions.vendored_sdks.usersfunctions.operations._user_calendar_group_calendar_eve'
        'nt_instance_operations#UserCalendarGroupCalendarEventInstanceOperations.{}',
        client_factory=cf_user_calendar_group_calendar_event_instance)
    with self.command_group('usersfunctions', usersfunctions_user_calendar_group_calendar_event_instance,
                            client_factory=cf_user_calendar_group_calendar_event_instance) as g:
        g.custom_command('delta', 'usersfunctions_delta')

    from azext_usersfunctions.generated._client_factory import cf_user_calendar_group_calendar_event
    usersfunctions_user_calendar_group_calendar_event = CliCommandType(
        operations_tmpl='azext_usersfunctions.vendored_sdks.usersfunctions.operations._user_calendar_group_calendar_eve'
        'nt_operations#UserCalendarGroupCalendarEventOperations.{}',
        client_factory=cf_user_calendar_group_calendar_event)
    with self.command_group('usersfunctions', usersfunctions_user_calendar_group_calendar_event,
                            client_factory=cf_user_calendar_group_calendar_event) as g:
        g.custom_command('delta', 'usersfunctions_delta')

    from azext_usersfunctions.generated._client_factory import cf_user_calendar_group_calendar
    usersfunctions_user_calendar_group_calendar = CliCommandType(
        operations_tmpl='azext_usersfunctions.vendored_sdks.usersfunctions.operations._user_calendar_group_calendar_ope'
        'rations#UserCalendarGroupCalendarOperations.{}',
        client_factory=cf_user_calendar_group_calendar)
    with self.command_group('usersfunctions', usersfunctions_user_calendar_group_calendar,
                            client_factory=cf_user_calendar_group_calendar) as g:
        g.custom_command('allowed-calendar-sharing-role', 'usersfunctions_allowed_calendar_sharing_role')

    from azext_usersfunctions.generated._client_factory import cf_user_calendar_calendar_view_calendar
    usersfunctions_user_calendar_calendar_view_calendar = CliCommandType(
        operations_tmpl='azext_usersfunctions.vendored_sdks.usersfunctions.operations._user_calendar_calendar_view_cale'
        'ndar_operations#UserCalendarCalendarViewCalendarOperations.{}',
        client_factory=cf_user_calendar_calendar_view_calendar)
    with self.command_group('usersfunctions', usersfunctions_user_calendar_calendar_view_calendar,
                            client_factory=cf_user_calendar_calendar_view_calendar) as g:
        g.custom_command('allowed-calendar-sharing-role', 'usersfunctions_allowed_calendar_sharing_role')

    from azext_usersfunctions.generated._client_factory import cf_user_calendar_calendar_view_instance
    usersfunctions_user_calendar_calendar_view_instance = CliCommandType(
        operations_tmpl='azext_usersfunctions.vendored_sdks.usersfunctions.operations._user_calendar_calendar_view_inst'
        'ance_operations#UserCalendarCalendarViewInstanceOperations.{}',
        client_factory=cf_user_calendar_calendar_view_instance)
    with self.command_group('usersfunctions', usersfunctions_user_calendar_calendar_view_instance,
                            client_factory=cf_user_calendar_calendar_view_instance) as g:
        g.custom_command('delta', 'usersfunctions_delta')

    from azext_usersfunctions.generated._client_factory import cf_user_calendar_calendar_view
    usersfunctions_user_calendar_calendar_view = CliCommandType(
        operations_tmpl='azext_usersfunctions.vendored_sdks.usersfunctions.operations._user_calendar_calendar_view_oper'
        'ations#UserCalendarCalendarViewOperations.{}',
        client_factory=cf_user_calendar_calendar_view)
    with self.command_group('usersfunctions', usersfunctions_user_calendar_calendar_view,
                            client_factory=cf_user_calendar_calendar_view) as g:
        g.custom_command('delta', 'usersfunctions_delta')

    from azext_usersfunctions.generated._client_factory import cf_user_calendar_event_calendar
    usersfunctions_user_calendar_event_calendar = CliCommandType(
        operations_tmpl='azext_usersfunctions.vendored_sdks.usersfunctions.operations._user_calendar_event_calendar_ope'
        'rations#UserCalendarEventCalendarOperations.{}',
        client_factory=cf_user_calendar_event_calendar)
    with self.command_group('usersfunctions', usersfunctions_user_calendar_event_calendar,
                            client_factory=cf_user_calendar_event_calendar) as g:
        g.custom_command('allowed-calendar-sharing-role', 'usersfunctions_allowed_calendar_sharing_role')

    from azext_usersfunctions.generated._client_factory import cf_user_calendar_event_instance
    usersfunctions_user_calendar_event_instance = CliCommandType(
        operations_tmpl='azext_usersfunctions.vendored_sdks.usersfunctions.operations._user_calendar_event_instance_ope'
        'rations#UserCalendarEventInstanceOperations.{}',
        client_factory=cf_user_calendar_event_instance)
    with self.command_group('usersfunctions', usersfunctions_user_calendar_event_instance,
                            client_factory=cf_user_calendar_event_instance) as g:
        g.custom_command('delta', 'usersfunctions_delta')

    from azext_usersfunctions.generated._client_factory import cf_user_calendar_event
    usersfunctions_user_calendar_event = CliCommandType(
        operations_tmpl='azext_usersfunctions.vendored_sdks.usersfunctions.operations._user_calendar_event_operations#U'
        'serCalendarEventOperations.{}',
        client_factory=cf_user_calendar_event)
    with self.command_group('usersfunctions', usersfunctions_user_calendar_event,
                            client_factory=cf_user_calendar_event) as g:
        g.custom_command('delta', 'usersfunctions_delta')

    from azext_usersfunctions.generated._client_factory import cf_user_calendar
    usersfunctions_user_calendar = CliCommandType(
        operations_tmpl='azext_usersfunctions.vendored_sdks.usersfunctions.operations._user_calendar_operations#UserCal'
        'endarOperations.{}',
        client_factory=cf_user_calendar)
    with self.command_group('usersfunctions', usersfunctions_user_calendar, client_factory=cf_user_calendar) as g:
        g.custom_command('allowed-calendar-sharing-role', 'usersfunctions_allowed_calendar_sharing_role')

    from azext_usersfunctions.generated._client_factory import cf_user_calendar_view_calendar_calendar_view
    usersfunctions_user_calendar_view_calendar_calendar_view = CliCommandType(
        operations_tmpl='azext_usersfunctions.vendored_sdks.usersfunctions.operations._user_calendar_view_calendar_cale'
        'ndar_view_operations#UserCalendarViewCalendarCalendarViewOperations.{}',
        client_factory=cf_user_calendar_view_calendar_calendar_view)
    with self.command_group('usersfunctions', usersfunctions_user_calendar_view_calendar_calendar_view,
                            client_factory=cf_user_calendar_view_calendar_calendar_view) as g:
        g.custom_command('delta', 'usersfunctions_delta')

    from azext_usersfunctions.generated._client_factory import cf_user_calendar_view_calendar_event
    usersfunctions_user_calendar_view_calendar_event = CliCommandType(
        operations_tmpl='azext_usersfunctions.vendored_sdks.usersfunctions.operations._user_calendar_view_calendar_even'
        't_operations#UserCalendarViewCalendarEventOperations.{}',
        client_factory=cf_user_calendar_view_calendar_event)
    with self.command_group('usersfunctions', usersfunctions_user_calendar_view_calendar_event,
                            client_factory=cf_user_calendar_view_calendar_event) as g:
        g.custom_command('delta', 'usersfunctions_delta')

    from azext_usersfunctions.generated._client_factory import cf_user_calendar_view_calendar
    usersfunctions_user_calendar_view_calendar = CliCommandType(
        operations_tmpl='azext_usersfunctions.vendored_sdks.usersfunctions.operations._user_calendar_view_calendar_oper'
        'ations#UserCalendarViewCalendarOperations.{}',
        client_factory=cf_user_calendar_view_calendar)
    with self.command_group('usersfunctions', usersfunctions_user_calendar_view_calendar,
                            client_factory=cf_user_calendar_view_calendar) as g:
        g.custom_command('allowed-calendar-sharing-role', 'usersfunctions_allowed_calendar_sharing_role')

    from azext_usersfunctions.generated._client_factory import cf_user_calendar_view_instance
    usersfunctions_user_calendar_view_instance = CliCommandType(
        operations_tmpl='azext_usersfunctions.vendored_sdks.usersfunctions.operations._user_calendar_view_instance_oper'
        'ations#UserCalendarViewInstanceOperations.{}',
        client_factory=cf_user_calendar_view_instance)
    with self.command_group('usersfunctions', usersfunctions_user_calendar_view_instance,
                            client_factory=cf_user_calendar_view_instance) as g:
        g.custom_command('delta', 'usersfunctions_delta')

    from azext_usersfunctions.generated._client_factory import cf_user_calendar_view
    usersfunctions_user_calendar_view = CliCommandType(
        operations_tmpl='azext_usersfunctions.vendored_sdks.usersfunctions.operations._user_calendar_view_operations#Us'
        'erCalendarViewOperations.{}',
        client_factory=cf_user_calendar_view)
    with self.command_group('usersfunctions', usersfunctions_user_calendar_view,
                            client_factory=cf_user_calendar_view) as g:
        g.custom_command('delta', 'usersfunctions_delta')

    from azext_usersfunctions.generated._client_factory import cf_user_contact_folder_child_folder
    usersfunctions_user_contact_folder_child_folder = CliCommandType(
        operations_tmpl='azext_usersfunctions.vendored_sdks.usersfunctions.operations._user_contact_folder_child_folder'
        '_operations#UserContactFolderChildFolderOperations.{}',
        client_factory=cf_user_contact_folder_child_folder)
    with self.command_group('usersfunctions', usersfunctions_user_contact_folder_child_folder,
                            client_factory=cf_user_contact_folder_child_folder) as g:
        g.custom_command('delta', 'usersfunctions_delta')

    from azext_usersfunctions.generated._client_factory import cf_user_contact_folder_contact
    usersfunctions_user_contact_folder_contact = CliCommandType(
        operations_tmpl='azext_usersfunctions.vendored_sdks.usersfunctions.operations._user_contact_folder_contact_oper'
        'ations#UserContactFolderContactOperations.{}',
        client_factory=cf_user_contact_folder_contact)
    with self.command_group('usersfunctions', usersfunctions_user_contact_folder_contact,
                            client_factory=cf_user_contact_folder_contact) as g:
        g.custom_command('delta', 'usersfunctions_delta')

    from azext_usersfunctions.generated._client_factory import cf_user_contact_folder
    usersfunctions_user_contact_folder = CliCommandType(
        operations_tmpl='azext_usersfunctions.vendored_sdks.usersfunctions.operations._user_contact_folder_operations#U'
        'serContactFolderOperations.{}',
        client_factory=cf_user_contact_folder)
    with self.command_group('usersfunctions', usersfunctions_user_contact_folder,
                            client_factory=cf_user_contact_folder) as g:
        g.custom_command('delta', 'usersfunctions_delta')

    from azext_usersfunctions.generated._client_factory import cf_user_contact
    usersfunctions_user_contact = CliCommandType(
        operations_tmpl='azext_usersfunctions.vendored_sdks.usersfunctions.operations._user_contact_operations#UserCont'
        'actOperations.{}',
        client_factory=cf_user_contact)
    with self.command_group('usersfunctions', usersfunctions_user_contact, client_factory=cf_user_contact) as g:
        g.custom_command('delta', 'usersfunctions_delta')

    from azext_usersfunctions.generated._client_factory import cf_user_event_calendar_calendar_view
    usersfunctions_user_event_calendar_calendar_view = CliCommandType(
        operations_tmpl='azext_usersfunctions.vendored_sdks.usersfunctions.operations._user_event_calendar_calendar_vie'
        'w_operations#UserEventCalendarCalendarViewOperations.{}',
        client_factory=cf_user_event_calendar_calendar_view)
    with self.command_group('usersfunctions', usersfunctions_user_event_calendar_calendar_view,
                            client_factory=cf_user_event_calendar_calendar_view) as g:
        g.custom_command('delta', 'usersfunctions_delta')

    from azext_usersfunctions.generated._client_factory import cf_user_event_calendar_event
    usersfunctions_user_event_calendar_event = CliCommandType(
        operations_tmpl='azext_usersfunctions.vendored_sdks.usersfunctions.operations._user_event_calendar_event_operat'
        'ions#UserEventCalendarEventOperations.{}',
        client_factory=cf_user_event_calendar_event)
    with self.command_group('usersfunctions', usersfunctions_user_event_calendar_event,
                            client_factory=cf_user_event_calendar_event) as g:
        g.custom_command('delta', 'usersfunctions_delta')

    from azext_usersfunctions.generated._client_factory import cf_user_event_calendar
    usersfunctions_user_event_calendar = CliCommandType(
        operations_tmpl='azext_usersfunctions.vendored_sdks.usersfunctions.operations._user_event_calendar_operations#U'
        'serEventCalendarOperations.{}',
        client_factory=cf_user_event_calendar)
    with self.command_group('usersfunctions', usersfunctions_user_event_calendar,
                            client_factory=cf_user_event_calendar) as g:
        g.custom_command('allowed-calendar-sharing-role', 'usersfunctions_allowed_calendar_sharing_role')

    from azext_usersfunctions.generated._client_factory import cf_user_event_instance
    usersfunctions_user_event_instance = CliCommandType(
        operations_tmpl='azext_usersfunctions.vendored_sdks.usersfunctions.operations._user_event_instance_operations#U'
        'serEventInstanceOperations.{}',
        client_factory=cf_user_event_instance)
    with self.command_group('usersfunctions', usersfunctions_user_event_instance,
                            client_factory=cf_user_event_instance) as g:
        g.custom_command('delta', 'usersfunctions_delta')

    from azext_usersfunctions.generated._client_factory import cf_user_event
    usersfunctions_user_event = CliCommandType(
        operations_tmpl='azext_usersfunctions.vendored_sdks.usersfunctions.operations._user_event_operations#UserEventO'
        'perations.{}',
        client_factory=cf_user_event)
    with self.command_group('usersfunctions', usersfunctions_user_event, client_factory=cf_user_event) as g:
        g.custom_command('delta', 'usersfunctions_delta')

    from azext_usersfunctions.generated._client_factory import cf_user_mail_folder_child_folder
    usersfunctions_user_mail_folder_child_folder = CliCommandType(
        operations_tmpl='azext_usersfunctions.vendored_sdks.usersfunctions.operations._user_mail_folder_child_folder_op'
        'erations#UserMailFolderChildFolderOperations.{}',
        client_factory=cf_user_mail_folder_child_folder)
    with self.command_group('usersfunctions', usersfunctions_user_mail_folder_child_folder,
                            client_factory=cf_user_mail_folder_child_folder) as g:
        g.custom_command('delta', 'usersfunctions_delta')

    from azext_usersfunctions.generated._client_factory import cf_user_mail_folder_message
    usersfunctions_user_mail_folder_message = CliCommandType(
        operations_tmpl='azext_usersfunctions.vendored_sdks.usersfunctions.operations._user_mail_folder_message_operati'
        'ons#UserMailFolderMessageOperations.{}',
        client_factory=cf_user_mail_folder_message)
    with self.command_group('usersfunctions', usersfunctions_user_mail_folder_message,
                            client_factory=cf_user_mail_folder_message) as g:
        g.custom_command('delta', 'usersfunctions_delta')

    from azext_usersfunctions.generated._client_factory import cf_user_mail_folder
    usersfunctions_user_mail_folder = CliCommandType(
        operations_tmpl='azext_usersfunctions.vendored_sdks.usersfunctions.operations._user_mail_folder_operations#User'
        'MailFolderOperations.{}',
        client_factory=cf_user_mail_folder)
    with self.command_group('usersfunctions', usersfunctions_user_mail_folder,
                            client_factory=cf_user_mail_folder) as g:
        g.custom_command('delta', 'usersfunctions_delta')

    from azext_usersfunctions.generated._client_factory import cf_user_managed_app_registration
    usersfunctions_user_managed_app_registration = CliCommandType(
        operations_tmpl='azext_usersfunctions.vendored_sdks.usersfunctions.operations._user_managed_app_registration_op'
        'erations#UserManagedAppRegistrationOperations.{}',
        client_factory=cf_user_managed_app_registration)
    with self.command_group('usersfunctions', usersfunctions_user_managed_app_registration,
                            client_factory=cf_user_managed_app_registration) as g:
        g.custom_command('get-user-id-with-flagged-app-registration', 'usersfunctions_get_user_id_with_flagged_app_regi'
                         'stration')

    from azext_usersfunctions.generated._client_factory import cf_user_message
    usersfunctions_user_message = CliCommandType(
        operations_tmpl='azext_usersfunctions.vendored_sdks.usersfunctions.operations._user_message_operations#UserMess'
        'ageOperations.{}',
        client_factory=cf_user_message)
    with self.command_group('usersfunctions', usersfunctions_user_message, client_factory=cf_user_message) as g:
        g.custom_command('delta', 'usersfunctions_delta')

    from azext_usersfunctions.generated._client_factory import cf_user
    usersfunctions_user = CliCommandType(
        operations_tmpl='azext_usersfunctions.vendored_sdks.usersfunctions.operations._user_operations#UserOperations.{'
        '}',
        client_factory=cf_user)
    with self.command_group('usersfunctions', usersfunctions_user, client_factory=cf_user) as g:
        g.custom_command('delta', 'usersfunctions_delta')
        g.custom_command('get-managed-app-diagnostic-statuses', 'usersfunctions_get_managed_app_diagnostic_statuses')
        g.custom_command('get-managed-app-policy', 'usersfunctions_get_managed_app_policy')
        g.custom_command('reminder-view', 'usersfunctions_reminder_view')

    from azext_usersfunctions.generated._client_factory import cf_user_onenote_notebook_section_group_section_page
    usersfunctions_user_onenote_notebook_section_group_section_page = CliCommandType(
        operations_tmpl='azext_usersfunctions.vendored_sdks.usersfunctions.operations._user_onenote_notebook_section_gr'
        'oup_section_page_operations#UserOnenoteNotebookSectionGroupSectionPageOperations.{}',
        client_factory=cf_user_onenote_notebook_section_group_section_page)
    with self.command_group('usersfunctions', usersfunctions_user_onenote_notebook_section_group_section_page,
                            client_factory=cf_user_onenote_notebook_section_group_section_page) as g:
        g.custom_command('preview', 'usersfunctions_preview')

    from azext_usersfunctions.generated._client_factory import cf_user_onenote_notebook_section_page
    usersfunctions_user_onenote_notebook_section_page = CliCommandType(
        operations_tmpl='azext_usersfunctions.vendored_sdks.usersfunctions.operations._user_onenote_notebook_section_pa'
        'ge_operations#UserOnenoteNotebookSectionPageOperations.{}',
        client_factory=cf_user_onenote_notebook_section_page)
    with self.command_group('usersfunctions', usersfunctions_user_onenote_notebook_section_page,
                            client_factory=cf_user_onenote_notebook_section_page) as g:
        g.custom_command('preview', 'usersfunctions_preview')

    from azext_usersfunctions.generated._client_factory import cf_user_onenote_notebook
    usersfunctions_user_onenote_notebook = CliCommandType(
        operations_tmpl='azext_usersfunctions.vendored_sdks.usersfunctions.operations._user_onenote_notebook_operations'
        '#UserOnenoteNotebookOperations.{}',
        client_factory=cf_user_onenote_notebook)
    with self.command_group('usersfunctions', usersfunctions_user_onenote_notebook,
                            client_factory=cf_user_onenote_notebook) as g:
        g.custom_command('get-recent-notebook', 'usersfunctions_get_recent_notebook')

    from azext_usersfunctions.generated._client_factory import cf_user_onenote_page
    usersfunctions_user_onenote_page = CliCommandType(
        operations_tmpl='azext_usersfunctions.vendored_sdks.usersfunctions.operations._user_onenote_page_operations#Use'
        'rOnenotePageOperations.{}',
        client_factory=cf_user_onenote_page)
    with self.command_group('usersfunctions', usersfunctions_user_onenote_page,
                            client_factory=cf_user_onenote_page) as g:
        g.custom_command('preview', 'usersfunctions_preview')

    from azext_usersfunctions.generated._client_factory import cf_user_onenote_page_parent_notebook_section_group_section_page
    usersfunctions_user_onenote_page_parent_notebook_section_group_section_page = CliCommandType(
        operations_tmpl='azext_usersfunctions.vendored_sdks.usersfunctions.operations._user_onenote_page_parent_noteboo'
        'k_section_group_section_page_operations#UserOnenotePageParentNotebookSectionGroupSectionPageOperations.{}',
        client_factory=cf_user_onenote_page_parent_notebook_section_group_section_page)
    with self.command_group('usersfunctions',
                            usersfunctions_user_onenote_page_parent_notebook_section_group_section_page,
                            client_factory=cf_user_onenote_page_parent_notebook_section_group_section_page) as g:
        g.custom_command('preview', 'usersfunctions_preview')

    from azext_usersfunctions.generated._client_factory import cf_user_onenote_page_parent_notebook_section_page
    usersfunctions_user_onenote_page_parent_notebook_section_page = CliCommandType(
        operations_tmpl='azext_usersfunctions.vendored_sdks.usersfunctions.operations._user_onenote_page_parent_noteboo'
        'k_section_page_operations#UserOnenotePageParentNotebookSectionPageOperations.{}',
        client_factory=cf_user_onenote_page_parent_notebook_section_page)
    with self.command_group('usersfunctions', usersfunctions_user_onenote_page_parent_notebook_section_page,
                            client_factory=cf_user_onenote_page_parent_notebook_section_page) as g:
        g.custom_command('preview', 'usersfunctions_preview')

    from azext_usersfunctions.generated._client_factory import cf_user_onenote_page_parent_section_page
    usersfunctions_user_onenote_page_parent_section_page = CliCommandType(
        operations_tmpl='azext_usersfunctions.vendored_sdks.usersfunctions.operations._user_onenote_page_parent_section'
        '_page_operations#UserOnenotePageParentSectionPageOperations.{}',
        client_factory=cf_user_onenote_page_parent_section_page)
    with self.command_group('usersfunctions', usersfunctions_user_onenote_page_parent_section_page,
                            client_factory=cf_user_onenote_page_parent_section_page) as g:
        g.custom_command('preview', 'usersfunctions_preview')

    from azext_usersfunctions.generated._client_factory import cf_user_onenote_section_group_parent_notebook_section_page
    usersfunctions_user_onenote_section_group_parent_notebook_section_page = CliCommandType(
        operations_tmpl='azext_usersfunctions.vendored_sdks.usersfunctions.operations._user_onenote_section_group_paren'
        't_notebook_section_page_operations#UserOnenoteSectionGroupParentNotebookSectionPageOperations.{}',
        client_factory=cf_user_onenote_section_group_parent_notebook_section_page)
    with self.command_group('usersfunctions', usersfunctions_user_onenote_section_group_parent_notebook_section_page,
                            client_factory=cf_user_onenote_section_group_parent_notebook_section_page) as g:
        g.custom_command('preview', 'usersfunctions_preview')

    from azext_usersfunctions.generated._client_factory import cf_user_onenote_section_group_section_page
    usersfunctions_user_onenote_section_group_section_page = CliCommandType(
        operations_tmpl='azext_usersfunctions.vendored_sdks.usersfunctions.operations._user_onenote_section_group_secti'
        'on_page_operations#UserOnenoteSectionGroupSectionPageOperations.{}',
        client_factory=cf_user_onenote_section_group_section_page)
    with self.command_group('usersfunctions', usersfunctions_user_onenote_section_group_section_page,
                            client_factory=cf_user_onenote_section_group_section_page) as g:
        g.custom_command('preview', 'usersfunctions_preview')

    from azext_usersfunctions.generated._client_factory import cf_user_onenote_section_page
    usersfunctions_user_onenote_section_page = CliCommandType(
        operations_tmpl='azext_usersfunctions.vendored_sdks.usersfunctions.operations._user_onenote_section_page_operat'
        'ions#UserOnenoteSectionPageOperations.{}',
        client_factory=cf_user_onenote_section_page)
    with self.command_group('usersfunctions', usersfunctions_user_onenote_section_page,
                            client_factory=cf_user_onenote_section_page) as g:
        g.custom_command('preview', 'usersfunctions_preview')

    from azext_usersfunctions.generated._client_factory import cf_user_outlook
    usersfunctions_user_outlook = CliCommandType(
        operations_tmpl='azext_usersfunctions.vendored_sdks.usersfunctions.operations._user_outlook_operations#UserOutl'
        'ookOperations.{}',
        client_factory=cf_user_outlook)
    with self.command_group('usersfunctions', usersfunctions_user_outlook, client_factory=cf_user_outlook) as g:
        g.custom_command('supported-language', 'usersfunctions_supported_language')
        g.custom_command('supported-time-zone-ee48', 'usersfunctions_supported_time_zone_ee48')
        g.custom_command('supported-time-zones51-c6', 'usersfunctions_supported_time_zones51_c6')

    from azext_usersfunctions.generated._client_factory import cf_user_todo_list_task
    usersfunctions_user_todo_list_task = CliCommandType(
        operations_tmpl='azext_usersfunctions.vendored_sdks.usersfunctions.operations._user_todo_list_task_operations#U'
        'serTodoListTaskOperations.{}',
        client_factory=cf_user_todo_list_task)
    with self.command_group('usersfunctions', usersfunctions_user_todo_list_task,
                            client_factory=cf_user_todo_list_task) as g:
        g.custom_command('delta', 'usersfunctions_delta')

    from azext_usersfunctions.generated._client_factory import cf_user_todo_list
    usersfunctions_user_todo_list = CliCommandType(
        operations_tmpl='azext_usersfunctions.vendored_sdks.usersfunctions.operations._user_todo_list_operations#UserTo'
        'doListOperations.{}',
        client_factory=cf_user_todo_list)
    with self.command_group('usersfunctions', usersfunctions_user_todo_list, client_factory=cf_user_todo_list) as g:
        g.custom_command('delta', 'usersfunctions_delta')
