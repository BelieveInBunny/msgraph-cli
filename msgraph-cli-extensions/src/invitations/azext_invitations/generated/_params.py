# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=too-many-lines
# pylint: disable=too-many-statements

from msgraph.cli.core.commands.parameters import get_three_state_flag
from msgraph.cli.core.commands.validators import validate_file_or_dict


def load_arguments(self, _):

    with self.argument_context('invitations invitation-invitation update') as c:
        c.argument('invitation_id', help='key: invitation-id of invitation')
        c.argument('id_', options_list=['--id'], help='Read-only.')
        c.argument('invited_user_display_name', help='The display name of the user being invited.')
        c.argument('invited_user_type', help='The userType of the user being invited. By default, this is Guest. You '
                   'can invite as Member if you are a company administrator.')
        c.argument('invited_user_email_address', help='The email address of the user being invited. Required. The '
                   'following special characters are not permitted in the email address:Tilde (~)Exclamation point '
                   '(!)Number sign (#)Dollar sign ($)Percent (%)Circumflex (^)Ampersand (&)Asterisk (*)Parentheses (( '
                   '))Plus sign (+)Equal sign (=)Brackets ([ ])Braces ({ })Backslash (/)Slash mark (/)Pipe '
                   '(/|)Semicolon (;)Colon (:)Quotation marks (\')Angle brackets (< >)Question mark (?)Comma '
                   '(,)However, the following exceptions apply:A period (.) or a hyphen (-) is permitted anywhere in '
                   'the user name, except at the beginning or end of the name.An underscore (_) is permitted anywhere '
                   'in the user name. This includes at the beginning or end of the name.')
        c.argument('send_invitation_message', arg_type=get_three_state_flag(), help='Indicates whether an email should '
                   'be sent to the user being invited or not. The default is false.')
        c.argument('invite_redirect_url', help='The URL user should be redirected to once the invitation is redeemed. '
                   'Required.')
        c.argument('invite_redeem_url', help='The URL user can use to redeem his invitation. Read-Only')
        c.argument('status', help='The status of the invitation. Possible values: PendingAcceptance, Completed, '
                   'InProgress, and Error')
        c.argument('reset_redemption', arg_type=get_three_state_flag(), help='')
        c.argument('invited_user', type=validate_file_or_dict, help='Represents an Azure Active Directory user object. '
                   'Expected value: json-string/@json-file.')
        c.argument('invited_user_message_info_cc_recipients', type=validate_file_or_dict, help='Additional recipients '
                   'the invitation message should be sent to. Currently only 1 additional recipient is supported. '
                   'Expected value: json-string/@json-file.')
        c.argument('invited_user_message_info_message_language', help='The language you want to send the default '
                   'message in. If the customizedMessageBody is specified, this property is ignored, and the message '
                   'is sent using the customizedMessageBody. The language format should be in ISO 639. The default is '
                   'en-US.')
        c.argument('invited_user_message_info_customized_message_body', help='Customized message body you want to send '
                   'if you don\'t want the default message.')

    with self.argument_context('invitations invitation-invitation delete') as c:
        c.argument('invitation_id', help='key: invitation-id of invitation')
        c.argument('if_match', help='ETag')

    with self.argument_context('invitations invitation-invitation create-invitation') as c:
        c.argument('id_', options_list=['--id'], help='Read-only.')
        c.argument('invited_user_display_name', help='The display name of the user being invited.')
        c.argument('invited_user_type', help='The userType of the user being invited. By default, this is Guest. You '
                   'can invite as Member if you are a company administrator.')
        c.argument('invited_user_email_address', help='The email address of the user being invited. Required. The '
                   'following special characters are not permitted in the email address:Tilde (~)Exclamation point '
                   '(!)Number sign (#)Dollar sign ($)Percent (%)Circumflex (^)Ampersand (&)Asterisk (*)Parentheses (( '
                   '))Plus sign (+)Equal sign (=)Brackets ([ ])Braces ({ })Backslash (/)Slash mark (/)Pipe '
                   '(/|)Semicolon (;)Colon (:)Quotation marks (\')Angle brackets (< >)Question mark (?)Comma '
                   '(,)However, the following exceptions apply:A period (.) or a hyphen (-) is permitted anywhere in '
                   'the user name, except at the beginning or end of the name.An underscore (_) is permitted anywhere '
                   'in the user name. This includes at the beginning or end of the name.')
        c.argument('send_invitation_message', arg_type=get_three_state_flag(), help='Indicates whether an email should '
                   'be sent to the user being invited or not. The default is false.')
        c.argument('invite_redirect_url', help='The URL user should be redirected to once the invitation is redeemed. '
                   'Required.')
        c.argument('invite_redeem_url', help='The URL user can use to redeem his invitation. Read-Only')
        c.argument('status', help='The status of the invitation. Possible values: PendingAcceptance, Completed, '
                   'InProgress, and Error')
        c.argument('reset_redemption', arg_type=get_three_state_flag(), help='')
        c.argument('invited_user', type=validate_file_or_dict, help='Represents an Azure Active Directory user object. '
                   'Expected value: json-string/@json-file.')
        c.argument('invited_user_message_info_cc_recipients', type=validate_file_or_dict, help='Additional recipients '
                   'the invitation message should be sent to. Currently only 1 additional recipient is supported. '
                   'Expected value: json-string/@json-file.')
        c.argument('invited_user_message_info_message_language', help='The language you want to send the default '
                   'message in. If the customizedMessageBody is specified, this property is ignored, and the message '
                   'is sent using the customizedMessageBody. The language format should be in ISO 639. The default is '
                   'en-US.')
        c.argument('invited_user_message_info_customized_message_body', help='Customized message body you want to send '
                   'if you don\'t want the default message.')

    with self.argument_context('invitations invitation-invitation get-invitation') as c:
        c.argument('invitation_id', help='key: invitation-id of invitation')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('invitations invitation-invitation list-invitation') as c:
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('invitations invitation get-invited-user') as c:
        c.argument('invitation_id', help='key: invitation-id of invitation')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')
