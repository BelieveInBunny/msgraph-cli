# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=line-too-long
# pylint: disable=too-many-lines


def protection_anonymou_ip_risk_event_anonymou_ip_risk_event_update(client,
                                                                    anonymous_ip_risk_event_id,
                                                                    id_=None,
                                                                    user_display_name=None,
                                                                    user_principal_name=None,
                                                                    risk_event_date_time=None,
                                                                    risk_event_type=None,
                                                                    risk_level=None,
                                                                    risk_event_status=None,
                                                                    closed_date_time=None,
                                                                    created_date_time=None,
                                                                    user_id=None,
                                                                    impacted_user=None,
                                                                    ip_address=None,
                                                                    location_city=None,
                                                                    location_state=None,
                                                                    location_country_or_region=None,
                                                                    location_geo_coordinates=None):
    return client.update_anonymou_ip_risk_event(anonymous_ip_risk_event_id=anonymous_ip_risk_event_id,
                                                id=id_,
                                                user_display_name=user_display_name,
                                                user_principal_name=user_principal_name,
                                                risk_event_date_time=risk_event_date_time,
                                                risk_event_type=risk_event_type,
                                                risk_level=risk_level,
                                                risk_event_status=risk_event_status,
                                                closed_date_time=closed_date_time,
                                                created_date_time=created_date_time,
                                                user_id=user_id,
                                                impacted_user=impacted_user,
                                                ip_address=ip_address,
                                                city=location_city,
                                                state=location_state,
                                                country_or_region=location_country_or_region,
                                                geo_coordinates=location_geo_coordinates)


def protection_anonymou_ip_risk_event_anonymou_ip_risk_event_delete(client,
                                                                    anonymous_ip_risk_event_id,
                                                                    if_match=None):
    return client.delete_anonymou_ip_risk_event(anonymous_ip_risk_event_id=anonymous_ip_risk_event_id,
                                                if_match=if_match)


def protection_anonymou_ip_risk_event_anonymou_ip_risk_event_create_anonymou_ip_risk_event(client,
                                                                                           id_=None,
                                                                                           user_display_name=None,
                                                                                           user_principal_name=None,
                                                                                           risk_event_date_time=None,
                                                                                           risk_event_type=None,
                                                                                           risk_level=None,
                                                                                           risk_event_status=None,
                                                                                           closed_date_time=None,
                                                                                           created_date_time=None,
                                                                                           user_id=None,
                                                                                           impacted_user=None,
                                                                                           ip_address=None,
                                                                                           location_city=None,
                                                                                           location_state=None,
                                                                                           location_country_or_region=None,
                                                                                           location_geo_coordinates=None):
    return client.create_anonymou_ip_risk_event(id=id_,
                                                user_display_name=user_display_name,
                                                user_principal_name=user_principal_name,
                                                risk_event_date_time=risk_event_date_time,
                                                risk_event_type=risk_event_type,
                                                risk_level=risk_level,
                                                risk_event_status=risk_event_status,
                                                closed_date_time=closed_date_time,
                                                created_date_time=created_date_time,
                                                user_id=user_id,
                                                impacted_user=impacted_user,
                                                ip_address=ip_address,
                                                city=location_city,
                                                state=location_state,
                                                country_or_region=location_country_or_region,
                                                geo_coordinates=location_geo_coordinates)


def protection_anonymou_ip_risk_event_anonymou_ip_risk_event_get_anonymou_ip_risk_event(client,
                                                                                        anonymous_ip_risk_event_id,
                                                                                        select=None,
                                                                                        expand=None):
    return client.get_anonymou_ip_risk_event(anonymous_ip_risk_event_id=anonymous_ip_risk_event_id,
                                             select=select,
                                             expand=expand)


def protection_anonymou_ip_risk_event_anonymou_ip_risk_event_list_anonymou_ip_risk_event(client,
                                                                                         orderby=None,
                                                                                         select=None,
                                                                                         expand=None):
    return client.list_anonymou_ip_risk_event(orderby=orderby,
                                              select=select,
                                              expand=expand)


def protection_identity_risk_event_identity_risk_event_update(client,
                                                              identity_risk_event_id,
                                                              id_=None,
                                                              user_display_name=None,
                                                              user_principal_name=None,
                                                              risk_event_date_time=None,
                                                              risk_event_type=None,
                                                              risk_level=None,
                                                              risk_event_status=None,
                                                              closed_date_time=None,
                                                              created_date_time=None,
                                                              user_id=None,
                                                              impacted_user=None):
    return client.update_identity_risk_event(identity_risk_event_id=identity_risk_event_id,
                                             id=id_,
                                             user_display_name=user_display_name,
                                             user_principal_name=user_principal_name,
                                             risk_event_date_time=risk_event_date_time,
                                             risk_event_type=risk_event_type,
                                             risk_level=risk_level,
                                             risk_event_status=risk_event_status,
                                             closed_date_time=closed_date_time,
                                             created_date_time=created_date_time,
                                             user_id=user_id,
                                             impacted_user=impacted_user)


def protection_identity_risk_event_identity_risk_event_delete(client,
                                                              identity_risk_event_id,
                                                              if_match=None):
    return client.delete_identity_risk_event(identity_risk_event_id=identity_risk_event_id,
                                             if_match=if_match)


def protection_identity_risk_event_identity_risk_event_create_identity_risk_event(client,
                                                                                  id_=None,
                                                                                  user_display_name=None,
                                                                                  user_principal_name=None,
                                                                                  risk_event_date_time=None,
                                                                                  risk_event_type=None,
                                                                                  risk_level=None,
                                                                                  risk_event_status=None,
                                                                                  closed_date_time=None,
                                                                                  created_date_time=None,
                                                                                  user_id=None,
                                                                                  impacted_user=None):
    return client.create_identity_risk_event(id=id_,
                                             user_display_name=user_display_name,
                                             user_principal_name=user_principal_name,
                                             risk_event_date_time=risk_event_date_time,
                                             risk_event_type=risk_event_type,
                                             risk_level=risk_level,
                                             risk_event_status=risk_event_status,
                                             closed_date_time=closed_date_time,
                                             created_date_time=created_date_time,
                                             user_id=user_id,
                                             impacted_user=impacted_user)


def protection_identity_risk_event_identity_risk_event_get_identity_risk_event(client,
                                                                               identity_risk_event_id,
                                                                               select=None,
                                                                               expand=None):
    return client.get_identity_risk_event(identity_risk_event_id=identity_risk_event_id,
                                          select=select,
                                          expand=expand)


def protection_identity_risk_event_identity_risk_event_list_identity_risk_event(client,
                                                                                orderby=None,
                                                                                select=None,
                                                                                expand=None):
    return client.list_identity_risk_event(orderby=orderby,
                                           select=select,
                                           expand=expand)


def protection_identity_risk_event_get_impacted_user(client,
                                                     identity_risk_event_id,
                                                     select=None,
                                                     expand=None):
    return client.get_impacted_user(identity_risk_event_id=identity_risk_event_id,
                                    select=select,
                                    expand=expand)


def protection_impossible_travel_risk_event_impossible_travel_risk_event_update(client,
                                                                                impossible_travel_risk_event_id,
                                                                                body):
    return client.update_impossible_travel_risk_event(impossible_travel_risk_event_id=impossible_travel_risk_event_id,
                                                      body=body)


def protection_impossible_travel_risk_event_impossible_travel_risk_event_delete(client,
                                                                                impossible_travel_risk_event_id,
                                                                                if_match=None):
    return client.delete_impossible_travel_risk_event(impossible_travel_risk_event_id=impossible_travel_risk_event_id,
                                                      if_match=if_match)


def protection_impossible_travel_risk_event_impossible_travel_risk_event_create_impossible_travel_risk_event(client,
                                                                                                             body):
    return client.create_impossible_travel_risk_event(body=body)


def protection_impossible_travel_risk_event_impossible_travel_risk_event_get_impossible_travel_risk_event(client,
                                                                                                          impossible_travel_risk_event_id,
                                                                                                          select=None,
                                                                                                          expand=None):
    return client.get_impossible_travel_risk_event(impossible_travel_risk_event_id=impossible_travel_risk_event_id,
                                                   select=select,
                                                   expand=expand)


def protection_impossible_travel_risk_event_impossible_travel_risk_event_list_impossible_travel_risk_event(client,
                                                                                                           orderby=None,
                                                                                                           select=None,
                                                                                                           expand=None):
    return client.list_impossible_travel_risk_event(orderby=orderby,
                                                    select=select,
                                                    expand=expand)


def protection_leaked_credentials_risk_event_leaked_credentials_risk_event_update(client,
                                                                                  leaked_credentials_risk_event_id,
                                                                                  id_=None,
                                                                                  user_display_name=None,
                                                                                  user_principal_name=None,
                                                                                  risk_event_date_time=None,
                                                                                  risk_event_type=None,
                                                                                  risk_level=None,
                                                                                  risk_event_status=None,
                                                                                  closed_date_time=None,
                                                                                  created_date_time=None,
                                                                                  user_id=None,
                                                                                  impacted_user=None):
    return client.update_leaked_credentials_risk_event(leaked_credentials_risk_event_id=leaked_credentials_risk_event_id,
                                                       id=id_,
                                                       user_display_name=user_display_name,
                                                       user_principal_name=user_principal_name,
                                                       risk_event_date_time=risk_event_date_time,
                                                       risk_event_type=risk_event_type,
                                                       risk_level=risk_level,
                                                       risk_event_status=risk_event_status,
                                                       closed_date_time=closed_date_time,
                                                       created_date_time=created_date_time,
                                                       user_id=user_id,
                                                       impacted_user=impacted_user)


def protection_leaked_credentials_risk_event_leaked_credentials_risk_event_delete(client,
                                                                                  leaked_credentials_risk_event_id,
                                                                                  if_match=None):
    return client.delete_leaked_credentials_risk_event(leaked_credentials_risk_event_id=leaked_credentials_risk_event_id,
                                                       if_match=if_match)


def protection_leaked_credentials_risk_event_leaked_credentials_risk_event_create_leaked_credentials_risk_event(client,
                                                                                                                id_=None,
                                                                                                                user_display_name=None,
                                                                                                                user_principal_name=None,
                                                                                                                risk_event_date_time=None,
                                                                                                                risk_event_type=None,
                                                                                                                risk_level=None,
                                                                                                                risk_event_status=None,
                                                                                                                closed_date_time=None,
                                                                                                                created_date_time=None,
                                                                                                                user_id=None,
                                                                                                                impacted_user=None):
    return client.create_leaked_credentials_risk_event(id=id_,
                                                       user_display_name=user_display_name,
                                                       user_principal_name=user_principal_name,
                                                       risk_event_date_time=risk_event_date_time,
                                                       risk_event_type=risk_event_type,
                                                       risk_level=risk_level,
                                                       risk_event_status=risk_event_status,
                                                       closed_date_time=closed_date_time,
                                                       created_date_time=created_date_time,
                                                       user_id=user_id,
                                                       impacted_user=impacted_user)


def protection_leaked_credentials_risk_event_leaked_credentials_risk_event_get_leaked_credentials_risk_event(client,
                                                                                                             leaked_credentials_risk_event_id,
                                                                                                             select=None,
                                                                                                             expand=None):
    return client.get_leaked_credentials_risk_event(leaked_credentials_risk_event_id=leaked_credentials_risk_event_id,
                                                    select=select,
                                                    expand=expand)


def protection_leaked_credentials_risk_event_leaked_credentials_risk_event_list_leaked_credentials_risk_event(client,
                                                                                                              orderby=None,
                                                                                                              select=None,
                                                                                                              expand=None):
    return client.list_leaked_credentials_risk_event(orderby=orderby,
                                                     select=select,
                                                     expand=expand)


def protection_malware_risk_event_malware_risk_event_update(client,
                                                            malware_risk_event_id,
                                                            id_=None,
                                                            user_display_name=None,
                                                            user_principal_name=None,
                                                            risk_event_date_time=None,
                                                            risk_event_type=None,
                                                            risk_level=None,
                                                            risk_event_status=None,
                                                            closed_date_time=None,
                                                            created_date_time=None,
                                                            user_id=None,
                                                            impacted_user=None,
                                                            ip_address=None,
                                                            location_city=None,
                                                            location_state=None,
                                                            location_country_or_region=None,
                                                            location_geo_coordinates=None,
                                                            device_information=None,
                                                            malware_name=None):
    return client.update_malware_risk_event(malware_risk_event_id=malware_risk_event_id,
                                            id=id_,
                                            user_display_name=user_display_name,
                                            user_principal_name=user_principal_name,
                                            risk_event_date_time=risk_event_date_time,
                                            risk_event_type=risk_event_type,
                                            risk_level=risk_level,
                                            risk_event_status=risk_event_status,
                                            closed_date_time=closed_date_time,
                                            created_date_time=created_date_time,
                                            user_id=user_id,
                                            impacted_user=impacted_user,
                                            ip_address=ip_address,
                                            city=location_city,
                                            state=location_state,
                                            country_or_region=location_country_or_region,
                                            geo_coordinates=location_geo_coordinates,
                                            device_information=device_information,
                                            malware_name=malware_name)


def protection_malware_risk_event_malware_risk_event_delete(client,
                                                            malware_risk_event_id,
                                                            if_match=None):
    return client.delete_malware_risk_event(malware_risk_event_id=malware_risk_event_id,
                                            if_match=if_match)


def protection_malware_risk_event_malware_risk_event_create_malware_risk_event(client,
                                                                               id_=None,
                                                                               user_display_name=None,
                                                                               user_principal_name=None,
                                                                               risk_event_date_time=None,
                                                                               risk_event_type=None,
                                                                               risk_level=None,
                                                                               risk_event_status=None,
                                                                               closed_date_time=None,
                                                                               created_date_time=None,
                                                                               user_id=None,
                                                                               impacted_user=None,
                                                                               ip_address=None,
                                                                               location_city=None,
                                                                               location_state=None,
                                                                               location_country_or_region=None,
                                                                               location_geo_coordinates=None,
                                                                               device_information=None,
                                                                               malware_name=None):
    return client.create_malware_risk_event(id=id_,
                                            user_display_name=user_display_name,
                                            user_principal_name=user_principal_name,
                                            risk_event_date_time=risk_event_date_time,
                                            risk_event_type=risk_event_type,
                                            risk_level=risk_level,
                                            risk_event_status=risk_event_status,
                                            closed_date_time=closed_date_time,
                                            created_date_time=created_date_time,
                                            user_id=user_id,
                                            impacted_user=impacted_user,
                                            ip_address=ip_address,
                                            city=location_city,
                                            state=location_state,
                                            country_or_region=location_country_or_region,
                                            geo_coordinates=location_geo_coordinates,
                                            device_information=device_information,
                                            malware_name=malware_name)


def protection_malware_risk_event_malware_risk_event_get_malware_risk_event(client,
                                                                            malware_risk_event_id,
                                                                            select=None,
                                                                            expand=None):
    return client.get_malware_risk_event(malware_risk_event_id=malware_risk_event_id,
                                         select=select,
                                         expand=expand)


def protection_malware_risk_event_malware_risk_event_list_malware_risk_event(client,
                                                                             orderby=None,
                                                                             select=None,
                                                                             expand=None):
    return client.list_malware_risk_event(orderby=orderby,
                                          select=select,
                                          expand=expand)


def protection_risk_detection_risk_detection_update(client,
                                                    risk_detection_id,
                                                    id_=None,
                                                    request_id=None,
                                                    correlation_id=None,
                                                    risk_event_type=None,
                                                    risk_type=None,
                                                    risk_state=None,
                                                    risk_level=None,
                                                    risk_detail=None,
                                                    source=None,
                                                    detection_timing_type=None,
                                                    activity=None,
                                                    token_issuer_type=None,
                                                    ip_address=None,
                                                    activity_date_time=None,
                                                    detected_date_time=None,
                                                    last_updated_date_time=None,
                                                    user_id=None,
                                                    user_display_name=None,
                                                    user_principal_name=None,
                                                    additional_info=None,
                                                    location_city=None,
                                                    location_state=None,
                                                    location_country_or_region=None,
                                                    location_geo_coordinates=None):
    return client.update_risk_detection(risk_detection_id=risk_detection_id,
                                        id=id_,
                                        request_id_parameter=request_id,
                                        correlation_id=correlation_id,
                                        risk_event_type=risk_event_type,
                                        risk_type=risk_type,
                                        risk_state=risk_state,
                                        risk_level=risk_level,
                                        risk_detail=risk_detail,
                                        source=source,
                                        detection_timing_type=detection_timing_type,
                                        activity=activity,
                                        token_issuer_type=token_issuer_type,
                                        ip_address=ip_address,
                                        activity_date_time=activity_date_time,
                                        detected_date_time=detected_date_time,
                                        last_updated_date_time=last_updated_date_time,
                                        user_id=user_id,
                                        user_display_name=user_display_name,
                                        user_principal_name=user_principal_name,
                                        additional_info=additional_info,
                                        city=location_city,
                                        state=location_state,
                                        country_or_region=location_country_or_region,
                                        geo_coordinates=location_geo_coordinates)


def protection_risk_detection_risk_detection_delete(client,
                                                    risk_detection_id,
                                                    if_match=None):
    return client.delete_risk_detection(risk_detection_id=risk_detection_id,
                                        if_match=if_match)


def protection_risk_detection_risk_detection_create_risk_detection(client,
                                                                   id_=None,
                                                                   request_id=None,
                                                                   correlation_id=None,
                                                                   risk_event_type=None,
                                                                   risk_type=None,
                                                                   risk_state=None,
                                                                   risk_level=None,
                                                                   risk_detail=None,
                                                                   source=None,
                                                                   detection_timing_type=None,
                                                                   activity=None,
                                                                   token_issuer_type=None,
                                                                   ip_address=None,
                                                                   activity_date_time=None,
                                                                   detected_date_time=None,
                                                                   last_updated_date_time=None,
                                                                   user_id=None,
                                                                   user_display_name=None,
                                                                   user_principal_name=None,
                                                                   additional_info=None,
                                                                   location_city=None,
                                                                   location_state=None,
                                                                   location_country_or_region=None,
                                                                   location_geo_coordinates=None):
    return client.create_risk_detection(id=id_,
                                        request_id_parameter=request_id,
                                        correlation_id=correlation_id,
                                        risk_event_type=risk_event_type,
                                        risk_type=risk_type,
                                        risk_state=risk_state,
                                        risk_level=risk_level,
                                        risk_detail=risk_detail,
                                        source=source,
                                        detection_timing_type=detection_timing_type,
                                        activity=activity,
                                        token_issuer_type=token_issuer_type,
                                        ip_address=ip_address,
                                        activity_date_time=activity_date_time,
                                        detected_date_time=detected_date_time,
                                        last_updated_date_time=last_updated_date_time,
                                        user_id=user_id,
                                        user_display_name=user_display_name,
                                        user_principal_name=user_principal_name,
                                        additional_info=additional_info,
                                        city=location_city,
                                        state=location_state,
                                        country_or_region=location_country_or_region,
                                        geo_coordinates=location_geo_coordinates)


def protection_risk_detection_risk_detection_get_risk_detection(client,
                                                                risk_detection_id,
                                                                select=None,
                                                                expand=None):
    return client.get_risk_detection(risk_detection_id=risk_detection_id,
                                     select=select,
                                     expand=expand)


def protection_risk_detection_risk_detection_list_risk_detection(client,
                                                                 orderby=None,
                                                                 select=None,
                                                                 expand=None):
    return client.list_risk_detection(orderby=orderby,
                                      select=select,
                                      expand=expand)


def protection_risky_user_risky_user_update(client,
                                            risky_user_id,
                                            id_=None,
                                            is_deleted=None,
                                            is_guest=None,
                                            is_processing=None,
                                            risk_last_updated_date_time=None,
                                            risk_level=None,
                                            risk_state=None,
                                            risk_detail=None,
                                            user_display_name=None,
                                            user_principal_name=None,
                                            history=None):
    return client.update_risky_user(risky_user_id=risky_user_id,
                                    id=id_,
                                    is_deleted=is_deleted,
                                    is_guest=is_guest,
                                    is_processing=is_processing,
                                    risk_last_updated_date_time=risk_last_updated_date_time,
                                    risk_level=risk_level,
                                    risk_state=risk_state,
                                    risk_detail=risk_detail,
                                    user_display_name=user_display_name,
                                    user_principal_name=user_principal_name,
                                    history=history)


def protection_risky_user_risky_user_delete(client,
                                            risky_user_id,
                                            if_match=None):
    return client.delete_risky_user(risky_user_id=risky_user_id,
                                    if_match=if_match)


def protection_risky_user_risky_user_create_risky_user(client,
                                                       id_=None,
                                                       is_deleted=None,
                                                       is_guest=None,
                                                       is_processing=None,
                                                       risk_last_updated_date_time=None,
                                                       risk_level=None,
                                                       risk_state=None,
                                                       risk_detail=None,
                                                       user_display_name=None,
                                                       user_principal_name=None,
                                                       history=None):
    return client.create_risky_user(id=id_,
                                    is_deleted=is_deleted,
                                    is_guest=is_guest,
                                    is_processing=is_processing,
                                    risk_last_updated_date_time=risk_last_updated_date_time,
                                    risk_level=risk_level,
                                    risk_state=risk_state,
                                    risk_detail=risk_detail,
                                    user_display_name=user_display_name,
                                    user_principal_name=user_principal_name,
                                    history=history)


def protection_risky_user_risky_user_get_risky_user(client,
                                                    risky_user_id,
                                                    select=None,
                                                    expand=None):
    return client.get_risky_user(risky_user_id=risky_user_id,
                                 select=select,
                                 expand=expand)


def protection_risky_user_risky_user_list_risky_user(client,
                                                     orderby=None,
                                                     select=None,
                                                     expand=None):
    return client.list_risky_user(orderby=orderby,
                                  select=select,
                                  expand=expand)


def protection_risky_user_update(client,
                                 risky_user_id,
                                 risky_user_history_item_id,
                                 id_=None,
                                 is_deleted=None,
                                 is_guest=None,
                                 is_processing=None,
                                 risk_last_updated_date_time=None,
                                 risk_level=None,
                                 risk_state=None,
                                 risk_detail=None,
                                 user_display_name=None,
                                 user_principal_name=None,
                                 history=None,
                                 user_id=None,
                                 initiated_by=None,
                                 activity=None):
    return client.update_history(risky_user_id=risky_user_id,
                                 risky_user_history_item_id=risky_user_history_item_id,
                                 id=id_,
                                 is_deleted=is_deleted,
                                 is_guest=is_guest,
                                 is_processing=is_processing,
                                 risk_last_updated_date_time=risk_last_updated_date_time,
                                 risk_level=risk_level,
                                 risk_state=risk_state,
                                 risk_detail=risk_detail,
                                 user_display_name=user_display_name,
                                 user_principal_name=user_principal_name,
                                 history=history,
                                 user_id=user_id,
                                 initiated_by=initiated_by,
                                 activity=activity)


def protection_risky_user_confirm_compromised(client,
                                              user_ids=None):
    return client.confirm_compromised(user_ids=user_ids)


def protection_risky_user_create_history(client,
                                         risky_user_id,
                                         id_=None,
                                         is_deleted=None,
                                         is_guest=None,
                                         is_processing=None,
                                         risk_last_updated_date_time=None,
                                         risk_level=None,
                                         risk_state=None,
                                         risk_detail=None,
                                         user_display_name=None,
                                         user_principal_name=None,
                                         history=None,
                                         user_id=None,
                                         initiated_by=None,
                                         activity=None):
    return client.create_history(risky_user_id=risky_user_id,
                                 id=id_,
                                 is_deleted=is_deleted,
                                 is_guest=is_guest,
                                 is_processing=is_processing,
                                 risk_last_updated_date_time=risk_last_updated_date_time,
                                 risk_level=risk_level,
                                 risk_state=risk_state,
                                 risk_detail=risk_detail,
                                 user_display_name=user_display_name,
                                 user_principal_name=user_principal_name,
                                 history=history,
                                 user_id=user_id,
                                 initiated_by=initiated_by,
                                 activity=activity)


def protection_risky_user_dismiss(client,
                                  user_ids=None):
    return client.dismiss(user_ids=user_ids)


def protection_risky_user_get_history(client,
                                      risky_user_id,
                                      risky_user_history_item_id,
                                      select=None,
                                      expand=None):
    return client.get_history(risky_user_id=risky_user_id,
                              risky_user_history_item_id=risky_user_history_item_id,
                              select=select,
                              expand=expand)


def protection_risky_user_list_history(client,
                                       risky_user_id,
                                       orderby=None,
                                       select=None,
                                       expand=None):
    return client.list_history(risky_user_id=risky_user_id,
                               orderby=orderby,
                               select=select,
                               expand=expand)


def protection_suspiciou_ip_risk_event_suspiciou_ip_risk_event_update(client,
                                                                      suspicious_ip_risk_event_id,
                                                                      id_=None,
                                                                      user_display_name=None,
                                                                      user_principal_name=None,
                                                                      risk_event_date_time=None,
                                                                      risk_event_type=None,
                                                                      risk_level=None,
                                                                      risk_event_status=None,
                                                                      closed_date_time=None,
                                                                      created_date_time=None,
                                                                      user_id=None,
                                                                      impacted_user=None,
                                                                      ip_address=None,
                                                                      location_city=None,
                                                                      location_state=None,
                                                                      location_country_or_region=None,
                                                                      location_geo_coordinates=None):
    return client.update_suspiciou_ip_risk_event(suspicious_ip_risk_event_id=suspicious_ip_risk_event_id,
                                                 id=id_,
                                                 user_display_name=user_display_name,
                                                 user_principal_name=user_principal_name,
                                                 risk_event_date_time=risk_event_date_time,
                                                 risk_event_type=risk_event_type,
                                                 risk_level=risk_level,
                                                 risk_event_status=risk_event_status,
                                                 closed_date_time=closed_date_time,
                                                 created_date_time=created_date_time,
                                                 user_id=user_id,
                                                 impacted_user=impacted_user,
                                                 ip_address=ip_address,
                                                 city=location_city,
                                                 state=location_state,
                                                 country_or_region=location_country_or_region,
                                                 geo_coordinates=location_geo_coordinates)


def protection_suspiciou_ip_risk_event_suspiciou_ip_risk_event_delete(client,
                                                                      suspicious_ip_risk_event_id,
                                                                      if_match=None):
    return client.delete_suspiciou_ip_risk_event(suspicious_ip_risk_event_id=suspicious_ip_risk_event_id,
                                                 if_match=if_match)


def protection_suspiciou_ip_risk_event_suspiciou_ip_risk_event_create_suspiciou_ip_risk_event(client,
                                                                                              id_=None,
                                                                                              user_display_name=None,
                                                                                              user_principal_name=None,
                                                                                              risk_event_date_time=None,
                                                                                              risk_event_type=None,
                                                                                              risk_level=None,
                                                                                              risk_event_status=None,
                                                                                              closed_date_time=None,
                                                                                              created_date_time=None,
                                                                                              user_id=None,
                                                                                              impacted_user=None,
                                                                                              ip_address=None,
                                                                                              location_city=None,
                                                                                              location_state=None,
                                                                                              location_country_or_region=None,
                                                                                              location_geo_coordinates=None):
    return client.create_suspiciou_ip_risk_event(id=id_,
                                                 user_display_name=user_display_name,
                                                 user_principal_name=user_principal_name,
                                                 risk_event_date_time=risk_event_date_time,
                                                 risk_event_type=risk_event_type,
                                                 risk_level=risk_level,
                                                 risk_event_status=risk_event_status,
                                                 closed_date_time=closed_date_time,
                                                 created_date_time=created_date_time,
                                                 user_id=user_id,
                                                 impacted_user=impacted_user,
                                                 ip_address=ip_address,
                                                 city=location_city,
                                                 state=location_state,
                                                 country_or_region=location_country_or_region,
                                                 geo_coordinates=location_geo_coordinates)


def protection_suspiciou_ip_risk_event_suspiciou_ip_risk_event_get_suspiciou_ip_risk_event(client,
                                                                                           suspicious_ip_risk_event_id,
                                                                                           select=None,
                                                                                           expand=None):
    return client.get_suspiciou_ip_risk_event(suspicious_ip_risk_event_id=suspicious_ip_risk_event_id,
                                              select=select,
                                              expand=expand)


def protection_suspiciou_ip_risk_event_suspiciou_ip_risk_event_list_suspiciou_ip_risk_event(client,
                                                                                            orderby=None,
                                                                                            select=None,
                                                                                            expand=None):
    return client.list_suspiciou_ip_risk_event(orderby=orderby,
                                               select=select,
                                               expand=expand)


def protection_unfamiliar_location_risk_event_unfamiliar_location_risk_event_update(client,
                                                                                    unfamiliar_location_risk_event_id,
                                                                                    id_=None,
                                                                                    user_display_name=None,
                                                                                    user_principal_name=None,
                                                                                    risk_event_date_time=None,
                                                                                    risk_event_type=None,
                                                                                    risk_level=None,
                                                                                    risk_event_status=None,
                                                                                    closed_date_time=None,
                                                                                    created_date_time=None,
                                                                                    user_id=None,
                                                                                    impacted_user=None,
                                                                                    ip_address=None,
                                                                                    location_city=None,
                                                                                    location_state=None,
                                                                                    location_country_or_region=None,
                                                                                    location_geo_coordinates=None):
    return client.update_unfamiliar_location_risk_event(unfamiliar_location_risk_event_id=unfamiliar_location_risk_event_id,
                                                        id=id_,
                                                        user_display_name=user_display_name,
                                                        user_principal_name=user_principal_name,
                                                        risk_event_date_time=risk_event_date_time,
                                                        risk_event_type=risk_event_type,
                                                        risk_level=risk_level,
                                                        risk_event_status=risk_event_status,
                                                        closed_date_time=closed_date_time,
                                                        created_date_time=created_date_time,
                                                        user_id=user_id,
                                                        impacted_user=impacted_user,
                                                        ip_address=ip_address,
                                                        city=location_city,
                                                        state=location_state,
                                                        country_or_region=location_country_or_region,
                                                        geo_coordinates=location_geo_coordinates)


def protection_unfamiliar_location_risk_event_unfamiliar_location_risk_event_delete(client,
                                                                                    unfamiliar_location_risk_event_id,
                                                                                    if_match=None):
    return client.delete_unfamiliar_location_risk_event(unfamiliar_location_risk_event_id=unfamiliar_location_risk_event_id,
                                                        if_match=if_match)


def protection_unfamiliar_location_risk_event_unfamiliar_location_risk_event_create_unfamiliar_location_risk_event(client,
                                                                                                                   id_=None,
                                                                                                                   user_display_name=None,
                                                                                                                   user_principal_name=None,
                                                                                                                   risk_event_date_time=None,
                                                                                                                   risk_event_type=None,
                                                                                                                   risk_level=None,
                                                                                                                   risk_event_status=None,
                                                                                                                   closed_date_time=None,
                                                                                                                   created_date_time=None,
                                                                                                                   user_id=None,
                                                                                                                   impacted_user=None,
                                                                                                                   ip_address=None,
                                                                                                                   location_city=None,
                                                                                                                   location_state=None,
                                                                                                                   location_country_or_region=None,
                                                                                                                   location_geo_coordinates=None):
    return client.create_unfamiliar_location_risk_event(id=id_,
                                                        user_display_name=user_display_name,
                                                        user_principal_name=user_principal_name,
                                                        risk_event_date_time=risk_event_date_time,
                                                        risk_event_type=risk_event_type,
                                                        risk_level=risk_level,
                                                        risk_event_status=risk_event_status,
                                                        closed_date_time=closed_date_time,
                                                        created_date_time=created_date_time,
                                                        user_id=user_id,
                                                        impacted_user=impacted_user,
                                                        ip_address=ip_address,
                                                        city=location_city,
                                                        state=location_state,
                                                        country_or_region=location_country_or_region,
                                                        geo_coordinates=location_geo_coordinates)


def protection_unfamiliar_location_risk_event_unfamiliar_location_risk_event_get_unfamiliar_location_risk_event(client,
                                                                                                                unfamiliar_location_risk_event_id,
                                                                                                                select=None,
                                                                                                                expand=None):
    return client.get_unfamiliar_location_risk_event(unfamiliar_location_risk_event_id=unfamiliar_location_risk_event_id,
                                                     select=select,
                                                     expand=expand)


def protection_unfamiliar_location_risk_event_unfamiliar_location_risk_event_list_unfamiliar_location_risk_event(client,
                                                                                                                 orderby=None,
                                                                                                                 select=None,
                                                                                                                 expand=None):
    return client.list_unfamiliar_location_risk_event(orderby=orderby,
                                                      select=select,
                                                      expand=expand)
