# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from enum import Enum, EnumMeta
from six import with_metaclass

class _CaseInsensitiveEnumMeta(EnumMeta):
    def __getitem__(self, name):
        return super().__getitem__(name.upper())

    def __getattr__(cls, name):
        """Return the enum member matching `name`
        We use __getattr__ instead of descriptors or inserting into the enum
        class' __dict__ in order to support `name` and `value` being both
        properties for enum members (which live in the class' __dict__) and
        enum members themselves.
        """
        try:
            return cls._member_map_[name.upper()]
        except KeyError:
            raise AttributeError(name)


class Get2ItemsItem(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CREATION_DATE_TIME = "creationDateTime"
    START_DATE_TIME = "startDateTime"
    END_DATE_TIME = "endDateTime"
    CANCELED_DATE_TIME = "canceledDateTime"
    EXPIRATION_DATE_TIME = "expirationDateTime"
    ENTRY_EXIT_ANNOUNCEMENT = "entryExitAnnouncement"
    JOIN_URL = "joinUrl"
    SUBJECT = "subject"
    IS_CANCELLED = "isCancelled"
    PARTICIPANTS = "participants"
    IS_BROADCAST = "isBroadcast"
    ACCESS_LEVEL = "accessLevel"
    CAPABILITIES = "capabilities"
    AUDIO_CONFERENCING = "audioConferencing"
    CHAT_INFO = "chatInfo"
    VIDEO_TELECONFERENCE_ID = "videoTeleconferenceId"
    EXTERNAL_ID = "externalId"
    JOIN_INFORMATION = "joinInformation"

class Get6ItemsItem(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    CREATION_DATE_TIME = "creationDateTime"
    CREATION_DATE_TIME_DESC = "creationDateTime desc"
    START_DATE_TIME = "startDateTime"
    START_DATE_TIME_DESC = "startDateTime desc"
    END_DATE_TIME = "endDateTime"
    END_DATE_TIME_DESC = "endDateTime desc"
    CANCELED_DATE_TIME = "canceledDateTime"
    CANCELED_DATE_TIME_DESC = "canceledDateTime desc"
    EXPIRATION_DATE_TIME = "expirationDateTime"
    EXPIRATION_DATE_TIME_DESC = "expirationDateTime desc"
    ENTRY_EXIT_ANNOUNCEMENT = "entryExitAnnouncement"
    ENTRY_EXIT_ANNOUNCEMENT_DESC = "entryExitAnnouncement desc"
    JOIN_URL = "joinUrl"
    JOIN_URL_DESC = "joinUrl desc"
    SUBJECT = "subject"
    SUBJECT_DESC = "subject desc"
    IS_CANCELLED = "isCancelled"
    IS_CANCELLED_DESC = "isCancelled desc"
    PARTICIPANTS = "participants"
    PARTICIPANTS_DESC = "participants desc"
    IS_BROADCAST = "isBroadcast"
    IS_BROADCAST_DESC = "isBroadcast desc"
    ACCESS_LEVEL = "accessLevel"
    ACCESS_LEVEL_DESC = "accessLevel desc"
    CAPABILITIES = "capabilities"
    CAPABILITIES_DESC = "capabilities desc"
    AUDIO_CONFERENCING = "audioConferencing"
    AUDIO_CONFERENCING_DESC = "audioConferencing desc"
    CHAT_INFO = "chatInfo"
    CHAT_INFO_DESC = "chatInfo desc"
    VIDEO_TELECONFERENCE_ID = "videoTeleconferenceId"
    VIDEO_TELECONFERENCE_ID_DESC = "videoTeleconferenceId desc"
    EXTERNAL_ID = "externalId"
    EXTERNAL_ID_DESC = "externalId desc"
    JOIN_INFORMATION = "joinInformation"
    JOIN_INFORMATION_DESC = "joinInformation desc"

class Get7ItemsItem(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CREATION_DATE_TIME = "creationDateTime"
    START_DATE_TIME = "startDateTime"
    END_DATE_TIME = "endDateTime"
    CANCELED_DATE_TIME = "canceledDateTime"
    EXPIRATION_DATE_TIME = "expirationDateTime"
    ENTRY_EXIT_ANNOUNCEMENT = "entryExitAnnouncement"
    JOIN_URL = "joinUrl"
    SUBJECT = "subject"
    IS_CANCELLED = "isCancelled"
    PARTICIPANTS = "participants"
    IS_BROADCAST = "isBroadcast"
    ACCESS_LEVEL = "accessLevel"
    CAPABILITIES = "capabilities"
    AUDIO_CONFERENCING = "audioConferencing"
    CHAT_INFO = "chatInfo"
    VIDEO_TELECONFERENCE_ID = "videoTeleconferenceId"
    EXTERNAL_ID = "externalId"
    JOIN_INFORMATION = "joinInformation"

class MicrosoftGraphAccessLevel(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    EVERYONE = "everyone"
    INVITED = "invited"
    LOCKED = "locked"
    SAME_ENTERPRISE = "sameEnterprise"
    SAME_ENTERPRISE_AND_FEDERATED = "sameEnterpriseAndFederated"

class MicrosoftGraphBodyType(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    TEXT = "text"
    HTML = "html"

class MicrosoftGraphMeetingCapabilities(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    QUESTION_AND_ANSWER = "questionAndAnswer"
    UNKNOWN_FUTURE_VALUE = "unknownFutureValue"
