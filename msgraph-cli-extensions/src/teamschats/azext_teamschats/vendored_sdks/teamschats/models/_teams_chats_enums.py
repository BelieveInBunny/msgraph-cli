# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from enum import Enum

class Enum12(str, Enum):

    id = "id"
    id_desc = "id desc"

class Enum13(str, Enum):

    id = "id"
    teams_app = "teamsApp"
    teams_app_definition = "teamsAppDefinition"

class Enum15(str, Enum):

    id = "id"
    teams_app = "teamsApp"
    teams_app_definition = "teamsAppDefinition"

class Enum17(str, Enum):

    id = "id"
    external_id = "externalId"
    name = "name"
    display_name = "displayName"
    distribution_method = "distributionMethod"
    app_definitions = "appDefinitions"

class Enum18(str, Enum):

    asterisk = "*"
    app_definitions = "appDefinitions"

class Enum19(str, Enum):

    id = "id"
    teams_app_id = "teamsAppId"
    display_name = "displayName"
    version = "version"

class Enum20(str, Enum):

    id = "id"
    id_desc = "id desc"
    roles = "roles"
    roles_desc = "roles desc"
    display_name = "displayName"
    display_name_desc = "displayName desc"

class Enum21(str, Enum):

    id = "id"
    roles = "roles"
    display_name = "displayName"

class Enum22(str, Enum):

    id = "id"
    roles = "roles"
    display_name = "displayName"

class Enum23(str, Enum):

    id = "id"
    id_desc = "id desc"
    reply_to_id = "replyToId"
    reply_to_id_desc = "replyToId desc"
    from_enum = "from"
    from_desc = "from desc"
    etag = "etag"
    etag_desc = "etag desc"
    message_type = "messageType"
    message_type_desc = "messageType desc"
    created_date_time = "createdDateTime"
    created_date_time_desc = "createdDateTime desc"
    last_modified_date_time = "lastModifiedDateTime"
    last_modified_date_time_desc = "lastModifiedDateTime desc"
    deleted_date_time = "deletedDateTime"
    deleted_date_time_desc = "deletedDateTime desc"
    subject = "subject"
    subject_desc = "subject desc"
    body = "body"
    body_desc = "body desc"
    summary = "summary"
    summary_desc = "summary desc"
    attachments = "attachments"
    attachments_desc = "attachments desc"
    mentions = "mentions"
    mentions_desc = "mentions desc"
    importance = "importance"
    importance_desc = "importance desc"
    policy_violation = "policyViolation"
    policy_violation_desc = "policyViolation desc"
    reactions = "reactions"
    reactions_desc = "reactions desc"
    locale = "locale"
    locale_desc = "locale desc"
    web_url = "webUrl"
    web_url_desc = "webUrl desc"

class Enum24(str, Enum):

    id = "id"
    reply_to_id = "replyToId"
    from_enum = "from"
    etag = "etag"
    message_type = "messageType"
    created_date_time = "createdDateTime"
    last_modified_date_time = "lastModifiedDateTime"
    deleted_date_time = "deletedDateTime"
    subject = "subject"
    body = "body"
    summary = "summary"
    attachments = "attachments"
    mentions = "mentions"
    importance = "importance"
    policy_violation = "policyViolation"
    reactions = "reactions"
    locale = "locale"
    web_url = "webUrl"
    replies = "replies"
    hosted_contents = "hostedContents"

class Enum25(str, Enum):

    asterisk = "*"
    replies = "replies"
    hosted_contents = "hostedContents"

class Enum26(str, Enum):

    id = "id"
    reply_to_id = "replyToId"
    from_enum = "from"
    etag = "etag"
    message_type = "messageType"
    created_date_time = "createdDateTime"
    last_modified_date_time = "lastModifiedDateTime"
    deleted_date_time = "deletedDateTime"
    subject = "subject"
    body = "body"
    summary = "summary"
    attachments = "attachments"
    mentions = "mentions"
    importance = "importance"
    policy_violation = "policyViolation"
    reactions = "reactions"
    locale = "locale"
    web_url = "webUrl"
    replies = "replies"
    hosted_contents = "hostedContents"

class Enum27(str, Enum):

    asterisk = "*"
    replies = "replies"
    hosted_contents = "hostedContents"

class Enum28(str, Enum):

    id = "id"
    id_desc = "id desc"

class Enum29(str, Enum):

    id = "id"
    id_desc = "id desc"
    reply_to_id = "replyToId"
    reply_to_id_desc = "replyToId desc"
    from_enum = "from"
    from_desc = "from desc"
    etag = "etag"
    etag_desc = "etag desc"
    message_type = "messageType"
    message_type_desc = "messageType desc"
    created_date_time = "createdDateTime"
    created_date_time_desc = "createdDateTime desc"
    last_modified_date_time = "lastModifiedDateTime"
    last_modified_date_time_desc = "lastModifiedDateTime desc"
    deleted_date_time = "deletedDateTime"
    deleted_date_time_desc = "deletedDateTime desc"
    subject = "subject"
    subject_desc = "subject desc"
    body = "body"
    body_desc = "body desc"
    summary = "summary"
    summary_desc = "summary desc"
    attachments = "attachments"
    attachments_desc = "attachments desc"
    mentions = "mentions"
    mentions_desc = "mentions desc"
    importance = "importance"
    importance_desc = "importance desc"
    policy_violation = "policyViolation"
    policy_violation_desc = "policyViolation desc"
    reactions = "reactions"
    reactions_desc = "reactions desc"
    locale = "locale"
    locale_desc = "locale desc"
    web_url = "webUrl"
    web_url_desc = "webUrl desc"

class Enum30(str, Enum):

    id = "id"
    reply_to_id = "replyToId"
    from_enum = "from"
    etag = "etag"
    message_type = "messageType"
    created_date_time = "createdDateTime"
    last_modified_date_time = "lastModifiedDateTime"
    deleted_date_time = "deletedDateTime"
    subject = "subject"
    body = "body"
    summary = "summary"
    attachments = "attachments"
    mentions = "mentions"
    importance = "importance"
    policy_violation = "policyViolation"
    reactions = "reactions"
    locale = "locale"
    web_url = "webUrl"
    replies = "replies"
    hosted_contents = "hostedContents"

class Enum31(str, Enum):

    asterisk = "*"
    replies = "replies"
    hosted_contents = "hostedContents"

class Enum32(str, Enum):

    id = "id"
    reply_to_id = "replyToId"
    from_enum = "from"
    etag = "etag"
    message_type = "messageType"
    created_date_time = "createdDateTime"
    last_modified_date_time = "lastModifiedDateTime"
    deleted_date_time = "deletedDateTime"
    subject = "subject"
    body = "body"
    summary = "summary"
    attachments = "attachments"
    mentions = "mentions"
    importance = "importance"
    policy_violation = "policyViolation"
    reactions = "reactions"
    locale = "locale"
    web_url = "webUrl"
    replies = "replies"
    hosted_contents = "hostedContents"

class Enum33(str, Enum):

    asterisk = "*"
    replies = "replies"
    hosted_contents = "hostedContents"

class Enum34(str, Enum):

    id = "id"
    id_desc = "id desc"
    topic = "topic"
    topic_desc = "topic desc"
    created_date_time = "createdDateTime"
    created_date_time_desc = "createdDateTime desc"
    last_updated_date_time = "lastUpdatedDateTime"
    last_updated_date_time_desc = "lastUpdatedDateTime desc"

class Enum35(str, Enum):

    id = "id"
    topic = "topic"
    created_date_time = "createdDateTime"
    last_updated_date_time = "lastUpdatedDateTime"
    members = "members"
    messages = "messages"
    installed_apps = "installedApps"

class Enum36(str, Enum):

    asterisk = "*"
    members = "members"
    messages = "messages"
    installed_apps = "installedApps"

class Enum37(str, Enum):

    id = "id"
    topic = "topic"
    created_date_time = "createdDateTime"
    last_updated_date_time = "lastUpdatedDateTime"
    members = "members"
    messages = "messages"
    installed_apps = "installedApps"

class Enum38(str, Enum):

    asterisk = "*"
    members = "members"
    messages = "messages"
    installed_apps = "installedApps"

class Get1ItemsItem(str, Enum):

    id = "id"
    topic = "topic"
    created_date_time = "createdDateTime"
    last_updated_date_time = "lastUpdatedDateTime"
    members = "members"
    messages = "messages"
    installed_apps = "installedApps"

class Get2ItemsItem(str, Enum):

    asterisk = "*"
    members = "members"
    messages = "messages"
    installed_apps = "installedApps"

class Get3ItemsItem(str, Enum):

    asterisk = "*"
    teams_app = "teamsApp"
    teams_app_definition = "teamsAppDefinition"

class Get5ItemsItem(str, Enum):

    id = "id"
    id_desc = "id desc"
    topic = "topic"
    topic_desc = "topic desc"
    created_date_time = "createdDateTime"
    created_date_time_desc = "createdDateTime desc"
    last_updated_date_time = "lastUpdatedDateTime"
    last_updated_date_time_desc = "lastUpdatedDateTime desc"

class Get6ItemsItem(str, Enum):

    id = "id"
    topic = "topic"
    created_date_time = "createdDateTime"
    last_updated_date_time = "lastUpdatedDateTime"
    members = "members"
    messages = "messages"
    installed_apps = "installedApps"

class Get7ItemsItem(str, Enum):

    asterisk = "*"
    members = "members"
    messages = "messages"
    installed_apps = "installedApps"

class Get8ItemsItem(str, Enum):

    asterisk = "*"
    teams_app = "teamsApp"
    teams_app_definition = "teamsAppDefinition"

class MicrosoftGraphBodyType(str, Enum):

    text = "text"
    html = "html"

class MicrosoftGraphChatMessageImportance(str, Enum):

    normal = "normal"
    high = "high"
    urgent = "urgent"

class MicrosoftGraphChatMessagePolicyViolationDlpActionTypes(str, Enum):

    none = "none"
    notify_sender = "notifySender"
    block_access = "blockAccess"
    block_access_external = "blockAccessExternal"

class MicrosoftGraphChatMessagePolicyViolationUserActionTypes(str, Enum):

    none = "none"
    override = "override"
    report_false_positive = "reportFalsePositive"

class MicrosoftGraphChatMessagePolicyViolationVerdictDetailsTypes(str, Enum):

    none = "none"
    allow_false_positive_override = "allowFalsePositiveOverride"
    allow_override_without_justification = "allowOverrideWithoutJustification"
    allow_override_with_justification = "allowOverrideWithJustification"

class MicrosoftGraphChatMessageType(str, Enum):

    message = "message"
    chat_event = "chatEvent"
    typing = "typing"

class MicrosoftGraphTeamsAppDistributionMethod(str, Enum):

    store = "store"
    organization = "organization"
    sideloaded = "sideloaded"
    unknown_future_value = "unknownFutureValue"
