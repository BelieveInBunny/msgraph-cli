# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

import datetime
from typing import List, Optional

from azure.core.exceptions import HttpResponseError
import msrest.serialization


class CollectionOfContract(msrest.serialization.Model):
    """Collection of contract.

    :param value:
    :type value: list[~identity_contracts.models.MicrosoftGraphContract]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'value': {'key': 'value', 'type': '[MicrosoftGraphContract]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        value: Optional[List["MicrosoftGraphContract"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfContract, self).__init__(**kwargs)
        self.value = value
        self.odata_next_link = odata_next_link


class MicrosoftGraphEntity(msrest.serialization.Model):
    """entity.

    :param id: Read-only.
    :type id: str
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,
        **kwargs
    ):
        super(MicrosoftGraphEntity, self).__init__(**kwargs)
        self.id = id


class MicrosoftGraphDirectoryObject(MicrosoftGraphEntity):
    """Represents an Azure Active Directory object. The directoryObject type is the base type for many other directory entity types.

    :param id: Read-only.
    :type id: str
    :param deleted_date_time:
    :type deleted_date_time: ~datetime.datetime
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'deleted_date_time': {'key': 'deletedDateTime', 'type': 'iso-8601'},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,
        deleted_date_time: Optional[datetime.datetime] = None,
        **kwargs
    ):
        super(MicrosoftGraphDirectoryObject, self).__init__(id=id, **kwargs)
        self.deleted_date_time = deleted_date_time


class MicrosoftGraphContract(MicrosoftGraphDirectoryObject):
    """Represents an Azure Active Directory object. The directoryObject type is the base type for many other directory entity types.

    :param id: Read-only.
    :type id: str
    :param deleted_date_time:
    :type deleted_date_time: ~datetime.datetime
    :param contract_type: Type of contract.Possible values are: SyndicationPartner - Partner that
     exclusively resells and manages O365 and Intune for this customer. They resell and support
     their customers. BreadthPartner - Partner has the ability to provide administrative support for
     this customer. However, the partner is not allowed to resell to the customer.ResellerPartner -
     Partner that is similar to a syndication partner, except that the partner doesnâ€™t have
     exclusive access to a tenant. In the syndication case, the customer cannot buy additional
     direct subscriptions from Microsoft or from other partners.
    :type contract_type: str
    :param customer_id: The unique identifier for the customer tenant referenced by this
     partnership. Corresponds to the id property of the customer tenant's organization resource.
    :type customer_id: str
    :param default_domain_name: A copy of the customer tenant's default domain name. The copy is
     made when the partnership with the customer is established. It is not automatically updated if
     the customer tenant's default domain name changes.
    :type default_domain_name: str
    :param display_name: A copy of the customer tenant's display name. The copy is made when the
     partnership with the customer is established. It is not automatically updated if the customer
     tenant's display name changes.
    :type display_name: str
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'deleted_date_time': {'key': 'deletedDateTime', 'type': 'iso-8601'},
        'contract_type': {'key': 'contractType', 'type': 'str'},
        'customer_id': {'key': 'customerId', 'type': 'str'},
        'default_domain_name': {'key': 'defaultDomainName', 'type': 'str'},
        'display_name': {'key': 'displayName', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,
        deleted_date_time: Optional[datetime.datetime] = None,
        contract_type: Optional[str] = None,
        customer_id: Optional[str] = None,
        default_domain_name: Optional[str] = None,
        display_name: Optional[str] = None,
        **kwargs
    ):
        super(MicrosoftGraphContract, self).__init__(id=id, deleted_date_time=deleted_date_time, **kwargs)
        self.contract_type = contract_type
        self.customer_id = customer_id
        self.default_domain_name = default_domain_name
        self.display_name = display_name


class OdataError(msrest.serialization.Model):
    """OdataError.

    All required parameters must be populated in order to send to Azure.

    :param error: Required.
    :type error: ~identity_contracts.models.OdataErrorMain
    """

    _validation = {
        'error': {'required': True},
    }

    _attribute_map = {
        'error': {'key': 'error', 'type': 'OdataErrorMain'},
    }

    def __init__(
        self,
        *,
        error: "OdataErrorMain",
        **kwargs
    ):
        super(OdataError, self).__init__(**kwargs)
        self.error = error


class OdataErrorDetail(msrest.serialization.Model):
    """OdataErrorDetail.

    All required parameters must be populated in order to send to Azure.

    :param code: Required.
    :type code: str
    :param message: Required.
    :type message: str
    :param target:
    :type target: str
    """

    _validation = {
        'code': {'required': True},
        'message': {'required': True},
    }

    _attribute_map = {
        'code': {'key': 'code', 'type': 'str'},
        'message': {'key': 'message', 'type': 'str'},
        'target': {'key': 'target', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        code: str,
        message: str,
        target: Optional[str] = None,
        **kwargs
    ):
        super(OdataErrorDetail, self).__init__(**kwargs)
        self.code = code
        self.message = message
        self.target = target


class OdataErrorMain(msrest.serialization.Model):
    """OdataErrorMain.

    All required parameters must be populated in order to send to Azure.

    :param code: Required.
    :type code: str
    :param message: Required.
    :type message: str
    :param target:
    :type target: str
    :param details:
    :type details: list[~identity_contracts.models.OdataErrorDetail]
    :param innererror: The structure of this object is service-specific.
    :type innererror: object
    """

    _validation = {
        'code': {'required': True},
        'message': {'required': True},
    }

    _attribute_map = {
        'code': {'key': 'code', 'type': 'str'},
        'message': {'key': 'message', 'type': 'str'},
        'target': {'key': 'target', 'type': 'str'},
        'details': {'key': 'details', 'type': '[OdataErrorDetail]'},
        'innererror': {'key': 'innererror', 'type': 'object'},
    }

    def __init__(
        self,
        *,
        code: str,
        message: str,
        target: Optional[str] = None,
        details: Optional[List["OdataErrorDetail"]] = None,
        innererror: Optional[object] = None,
        **kwargs
    ):
        super(OdataErrorMain, self).__init__(**kwargs)
        self.code = code
        self.message = message
        self.target = target
        self.details = details
        self.innererror = innererror


class Paths1T6Lra6ContractsMicrosoftGraphGetbyidsPostRequestbodyContentApplicationJsonSchema(msrest.serialization.Model):
    """Paths1T6Lra6ContractsMicrosoftGraphGetbyidsPostRequestbodyContentApplicationJsonSchema.

    :param ids:
    :type ids: list[str]
    :param types:
    :type types: list[str]
    """

    _attribute_map = {
        'ids': {'key': 'ids', 'type': '[str]'},
        'types': {'key': 'types', 'type': '[str]'},
    }

    def __init__(
        self,
        *,
        ids: Optional[List[str]] = None,
        types: Optional[List[str]] = None,
        **kwargs
    ):
        super(Paths1T6Lra6ContractsMicrosoftGraphGetbyidsPostRequestbodyContentApplicationJsonSchema, self).__init__(**kwargs)
        self.ids = ids
        self.types = types


class Paths30M7S8ContractsContractIdMicrosoftGraphCheckmembergroupsPostRequestbodyContentApplicationJsonSchema(msrest.serialization.Model):
    """Paths30M7S8ContractsContractIdMicrosoftGraphCheckmembergroupsPostRequestbodyContentApplicationJsonSchema.

    :param group_ids:
    :type group_ids: list[str]
    """

    _attribute_map = {
        'group_ids': {'key': 'groupIds', 'type': '[str]'},
    }

    def __init__(
        self,
        *,
        group_ids: Optional[List[str]] = None,
        **kwargs
    ):
        super(Paths30M7S8ContractsContractIdMicrosoftGraphCheckmembergroupsPostRequestbodyContentApplicationJsonSchema, self).__init__(**kwargs)
        self.group_ids = group_ids


class Paths6Crxp6ContractsContractIdMicrosoftGraphGetmemberobjectsPostRequestbodyContentApplicationJsonSchema(msrest.serialization.Model):
    """Paths6Crxp6ContractsContractIdMicrosoftGraphGetmemberobjectsPostRequestbodyContentApplicationJsonSchema.

    :param security_enabled_only:
    :type security_enabled_only: bool
    """

    _attribute_map = {
        'security_enabled_only': {'key': 'securityEnabledOnly', 'type': 'bool'},
    }

    def __init__(
        self,
        *,
        security_enabled_only: Optional[bool] = False,
        **kwargs
    ):
        super(Paths6Crxp6ContractsContractIdMicrosoftGraphGetmemberobjectsPostRequestbodyContentApplicationJsonSchema, self).__init__(**kwargs)
        self.security_enabled_only = security_enabled_only


class Paths9PdmsbContractsContractIdMicrosoftGraphGetmembergroupsPostRequestbodyContentApplicationJsonSchema(msrest.serialization.Model):
    """Paths9PdmsbContractsContractIdMicrosoftGraphGetmembergroupsPostRequestbodyContentApplicationJsonSchema.

    :param security_enabled_only:
    :type security_enabled_only: bool
    """

    _attribute_map = {
        'security_enabled_only': {'key': 'securityEnabledOnly', 'type': 'bool'},
    }

    def __init__(
        self,
        *,
        security_enabled_only: Optional[bool] = False,
        **kwargs
    ):
        super(Paths9PdmsbContractsContractIdMicrosoftGraphGetmembergroupsPostRequestbodyContentApplicationJsonSchema, self).__init__(**kwargs)
        self.security_enabled_only = security_enabled_only


class PathsOpnxc9ContractsMicrosoftGraphGetuserownedobjectsPostRequestbodyContentApplicationJsonSchema(msrest.serialization.Model):
    """PathsOpnxc9ContractsMicrosoftGraphGetuserownedobjectsPostRequestbodyContentApplicationJsonSchema.

    :param user_id:
    :type user_id: str
    :param type:
    :type type: str
    """

    _attribute_map = {
        'user_id': {'key': 'userId', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        user_id: Optional[str] = None,
        type: Optional[str] = None,
        **kwargs
    ):
        super(PathsOpnxc9ContractsMicrosoftGraphGetuserownedobjectsPostRequestbodyContentApplicationJsonSchema, self).__init__(**kwargs)
        self.user_id = user_id
        self.type = type


class PathsXq94UjContractsContractIdMicrosoftGraphCheckmemberobjectsPostRequestbodyContentApplicationJsonSchema(msrest.serialization.Model):
    """PathsXq94UjContractsContractIdMicrosoftGraphCheckmemberobjectsPostRequestbodyContentApplicationJsonSchema.

    :param ids:
    :type ids: list[str]
    """

    _attribute_map = {
        'ids': {'key': 'ids', 'type': '[str]'},
    }

    def __init__(
        self,
        *,
        ids: Optional[List[str]] = None,
        **kwargs
    ):
        super(PathsXq94UjContractsContractIdMicrosoftGraphCheckmemberobjectsPostRequestbodyContentApplicationJsonSchema, self).__init__(**kwargs)
        self.ids = ids


class PathsZahmwmContractsMicrosoftGraphValidatepropertiesPostRequestbodyContentApplicationJsonSchema(msrest.serialization.Model):
    """PathsZahmwmContractsMicrosoftGraphValidatepropertiesPostRequestbodyContentApplicationJsonSchema.

    :param entity_type:
    :type entity_type: str
    :param display_name:
    :type display_name: str
    :param mail_nickname:
    :type mail_nickname: str
    :param on_behalf_of_user_id:
    :type on_behalf_of_user_id: str
    """

    _attribute_map = {
        'entity_type': {'key': 'entityType', 'type': 'str'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'mail_nickname': {'key': 'mailNickname', 'type': 'str'},
        'on_behalf_of_user_id': {'key': 'onBehalfOfUserId', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        entity_type: Optional[str] = None,
        display_name: Optional[str] = None,
        mail_nickname: Optional[str] = None,
        on_behalf_of_user_id: Optional[str] = None,
        **kwargs
    ):
        super(PathsZahmwmContractsMicrosoftGraphValidatepropertiesPostRequestbodyContentApplicationJsonSchema, self).__init__(**kwargs)
        self.entity_type = entity_type
        self.display_name = display_name
        self.mail_nickname = mail_nickname
        self.on_behalf_of_user_id = on_behalf_of_user_id
