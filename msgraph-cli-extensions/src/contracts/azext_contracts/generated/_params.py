# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=too-many-lines
# pylint: disable=too-many-statements

from msgraph.cli.core.commands.parameters import get_three_state_flag


def load_arguments(self, _):

    with self.argument_context('contracts contract-contract update') as c:
        c.argument('contract_id', help='key: contract-id of contract')
        c.argument('id_', options_list=['--id'], help='Read-only.')
        c.argument('deleted_date_time', help='')
        c.argument('contract_type', help='Type of contract.Possible values are: SyndicationPartner - Partner that '
                   'exclusively resells and manages O365 and Intune for this customer. They resell and support their '
                   'customers. BreadthPartner - Partner has the ability to provide administrative support for this '
                   'customer. However, the partner is not allowed to resell to the customer.ResellerPartner - Partner '
                   'that is similar to a syndication partner, except that the partner doesn’t have exclusive access to '
                   'a tenant. In the syndication case, the customer cannot buy additional direct subscriptions from '
                   'Microsoft or from other partners.')
        c.argument('customer_id', help='The unique identifier for the customer tenant referenced by this partnership. '
                   'Corresponds to the id property of the customer tenant\'s organization resource.')
        c.argument('default_domain_name', help='A copy of the customer tenant\'s default domain name. The copy is made '
                   'when the partnership with the customer is established. It is not automatically updated if the '
                   'customer tenant\'s default domain name changes.')
        c.argument('display_name', help='A copy of the customer tenant\'s display name. The copy is made when the '
                   'partnership with the customer is established. It is not automatically updated if the customer '
                   'tenant\'s display name changes.')

    with self.argument_context('contracts contract-contract delete') as c:
        c.argument('contract_id', help='key: contract-id of contract')
        c.argument('if_match', help='ETag')

    with self.argument_context('contracts contract-contract create-contract') as c:
        c.argument('id_', options_list=['--id'], help='Read-only.')
        c.argument('deleted_date_time', help='')
        c.argument('contract_type', help='Type of contract.Possible values are: SyndicationPartner - Partner that '
                   'exclusively resells and manages O365 and Intune for this customer. They resell and support their '
                   'customers. BreadthPartner - Partner has the ability to provide administrative support for this '
                   'customer. However, the partner is not allowed to resell to the customer.ResellerPartner - Partner '
                   'that is similar to a syndication partner, except that the partner doesn’t have exclusive access to '
                   'a tenant. In the syndication case, the customer cannot buy additional direct subscriptions from '
                   'Microsoft or from other partners.')
        c.argument('customer_id', help='The unique identifier for the customer tenant referenced by this partnership. '
                   'Corresponds to the id property of the customer tenant\'s organization resource.')
        c.argument('default_domain_name', help='A copy of the customer tenant\'s default domain name. The copy is made '
                   'when the partnership with the customer is established. It is not automatically updated if the '
                   'customer tenant\'s default domain name changes.')
        c.argument('display_name', help='A copy of the customer tenant\'s display name. The copy is made when the '
                   'partnership with the customer is established. It is not automatically updated if the customer '
                   'tenant\'s display name changes.')

    with self.argument_context('contracts contract-contract get-contract') as c:
        c.argument('contract_id', help='key: contract-id of contract')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('contracts contract-contract list-contract') as c:
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('contracts contract check-member-group') as c:
        c.argument('contract_id', help='key: contract-id of contract')
        c.argument('group_ids', nargs='*', help='')

    with self.argument_context('contracts contract check-member-object') as c:
        c.argument('contract_id', help='key: contract-id of contract')
        c.argument('ids', nargs='*', help='')

    with self.argument_context('contracts contract get-by-id') as c:
        c.argument('ids', nargs='*', help='')
        c.argument('types', nargs='*', help='')

    with self.argument_context('contracts contract get-member-group') as c:
        c.argument('contract_id', help='key: contract-id of contract')
        c.argument('security_enabled_only', arg_type=get_three_state_flag(), help='')

    with self.argument_context('contracts contract get-member-object') as c:
        c.argument('contract_id', help='key: contract-id of contract')
        c.argument('security_enabled_only', arg_type=get_three_state_flag(), help='')

    with self.argument_context('contracts contract get-user-owned-object') as c:
        c.argument('user_id', help='')
        c.argument('type_', options_list=['--type'], help='')

    with self.argument_context('contracts contract restore') as c:
        c.argument('contract_id', help='key: contract-id of contract')

    with self.argument_context('contracts contract validate-property') as c:
        c.argument('entity_type', help='')
        c.argument('display_name', help='')
        c.argument('mail_nickname', help='')
        c.argument('on_behalf_of_user_id', help='')
