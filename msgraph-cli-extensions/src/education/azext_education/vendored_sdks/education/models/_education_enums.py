# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from enum import Enum

class Enum117(str, Enum):

    id = "id"
    display_name = "displayName"
    mail_nickname = "mailNickname"
    description = "description"
    created_by = "createdBy"
    class_code = "classCode"
    external_name = "externalName"
    external_id = "externalId"
    external_source = "externalSource"
    grade = "grade"
    term = "term"
    course = "course"
    assignments = "assignments"
    assignment_categories = "assignmentCategories"
    members = "members"
    teachers = "teachers"
    schools = "schools"
    group = "group"

class Enum119(str, Enum):

    id = "id"
    id_desc = "id desc"
    display_name = "displayName"
    display_name_desc = "displayName desc"

class Enum120(str, Enum):

    id = "id"
    display_name = "displayName"

class Enum121(str, Enum):

    id = "id"
    display_name = "displayName"

class Enum122(str, Enum):

    id = "id"
    id_desc = "id desc"
    class_id = "classId"
    class_id_desc = "classId desc"
    display_name = "displayName"
    display_name_desc = "displayName desc"
    instructions = "instructions"
    instructions_desc = "instructions desc"
    close_date_time = "closeDateTime"
    close_date_time_desc = "closeDateTime desc"
    due_date_time = "dueDateTime"
    due_date_time_desc = "dueDateTime desc"
    assign_date_time = "assignDateTime"
    assign_date_time_desc = "assignDateTime desc"
    assigned_date_time = "assignedDateTime"
    assigned_date_time_desc = "assignedDateTime desc"
    grading = "grading"
    grading_desc = "grading desc"
    assign_to = "assignTo"
    assign_to_desc = "assignTo desc"
    allow_late_submissions = "allowLateSubmissions"
    allow_late_submissions_desc = "allowLateSubmissions desc"
    created_date_time = "createdDateTime"
    created_date_time_desc = "createdDateTime desc"
    created_by = "createdBy"
    created_by_desc = "createdBy desc"
    last_modified_date_time = "lastModifiedDateTime"
    last_modified_date_time_desc = "lastModifiedDateTime desc"
    last_modified_by = "lastModifiedBy"
    last_modified_by_desc = "lastModifiedBy desc"
    allow_students_to_add_resources_to_submission = "allowStudentsToAddResourcesToSubmission"
    allow_students_to_add_resources_to_submission_desc = "allowStudentsToAddResourcesToSubmission desc"
    status = "status"
    status_desc = "status desc"

class Enum123(str, Enum):

    id = "id"
    class_id = "classId"
    display_name = "displayName"
    instructions = "instructions"
    close_date_time = "closeDateTime"
    due_date_time = "dueDateTime"
    assign_date_time = "assignDateTime"
    assigned_date_time = "assignedDateTime"
    grading = "grading"
    assign_to = "assignTo"
    allow_late_submissions = "allowLateSubmissions"
    created_date_time = "createdDateTime"
    created_by = "createdBy"
    last_modified_date_time = "lastModifiedDateTime"
    last_modified_by = "lastModifiedBy"
    allow_students_to_add_resources_to_submission = "allowStudentsToAddResourcesToSubmission"
    status = "status"
    resources = "resources"
    submissions = "submissions"
    categories = "categories"
    rubric = "rubric"

class Enum124(str, Enum):

    asterisk = "*"
    resources = "resources"
    submissions = "submissions"
    categories = "categories"
    rubric = "rubric"

class Enum125(str, Enum):

    id = "id"
    class_id = "classId"
    display_name = "displayName"
    instructions = "instructions"
    close_date_time = "closeDateTime"
    due_date_time = "dueDateTime"
    assign_date_time = "assignDateTime"
    assigned_date_time = "assignedDateTime"
    grading = "grading"
    assign_to = "assignTo"
    allow_late_submissions = "allowLateSubmissions"
    created_date_time = "createdDateTime"
    created_by = "createdBy"
    last_modified_date_time = "lastModifiedDateTime"
    last_modified_by = "lastModifiedBy"
    allow_students_to_add_resources_to_submission = "allowStudentsToAddResourcesToSubmission"
    status = "status"
    resources = "resources"
    submissions = "submissions"
    categories = "categories"
    rubric = "rubric"

class Enum126(str, Enum):

    asterisk = "*"
    resources = "resources"
    submissions = "submissions"
    categories = "categories"
    rubric = "rubric"

class Enum127(str, Enum):

    id = "id"
    id_desc = "id desc"
    display_name = "displayName"
    display_name_desc = "displayName desc"

class Enum128(str, Enum):

    id = "id"
    display_name = "displayName"

class Enum129(str, Enum):

    id = "id"
    display_name = "displayName"

class Enum130(str, Enum):

    id = "id"
    id_desc = "id desc"
    distribute_for_student_work = "distributeForStudentWork"
    distribute_for_student_work_desc = "distributeForStudentWork desc"
    resource = "resource"
    resource_desc = "resource desc"

class Enum131(str, Enum):

    id = "id"
    distribute_for_student_work = "distributeForStudentWork"
    resource = "resource"

class Enum132(str, Enum):

    id = "id"
    distribute_for_student_work = "distributeForStudentWork"
    resource = "resource"

class Enum133(str, Enum):

    id = "id"
    display_name = "displayName"
    description = "description"
    qualities = "qualities"
    levels = "levels"
    grading = "grading"
    created_date_time = "createdDateTime"
    created_by = "createdBy"
    last_modified_date_time = "lastModifiedDateTime"
    last_modified_by = "lastModifiedBy"

class Enum134(str, Enum):

    id = "id"
    id_desc = "id desc"
    recipient = "recipient"
    recipient_desc = "recipient desc"
    status = "status"
    status_desc = "status desc"
    submitted_by = "submittedBy"
    submitted_by_desc = "submittedBy desc"
    submitted_date_time = "submittedDateTime"
    submitted_date_time_desc = "submittedDateTime desc"
    unsubmitted_by = "unsubmittedBy"
    unsubmitted_by_desc = "unsubmittedBy desc"
    unsubmitted_date_time = "unsubmittedDateTime"
    unsubmitted_date_time_desc = "unsubmittedDateTime desc"
    released_by = "releasedBy"
    released_by_desc = "releasedBy desc"
    released_date_time = "releasedDateTime"
    released_date_time_desc = "releasedDateTime desc"
    returned_by = "returnedBy"
    returned_by_desc = "returnedBy desc"
    returned_date_time = "returnedDateTime"
    returned_date_time_desc = "returnedDateTime desc"
    resources_folder_url = "resourcesFolderUrl"
    resources_folder_url_desc = "resourcesFolderUrl desc"

class Enum135(str, Enum):

    id = "id"
    recipient = "recipient"
    status = "status"
    submitted_by = "submittedBy"
    submitted_date_time = "submittedDateTime"
    unsubmitted_by = "unsubmittedBy"
    unsubmitted_date_time = "unsubmittedDateTime"
    released_by = "releasedBy"
    released_date_time = "releasedDateTime"
    returned_by = "returnedBy"
    returned_date_time = "returnedDateTime"
    resources_folder_url = "resourcesFolderUrl"
    resources = "resources"
    submitted_resources = "submittedResources"
    outcomes = "outcomes"

class Enum136(str, Enum):

    asterisk = "*"
    resources = "resources"
    submitted_resources = "submittedResources"
    outcomes = "outcomes"

class Enum137(str, Enum):

    id = "id"
    recipient = "recipient"
    status = "status"
    submitted_by = "submittedBy"
    submitted_date_time = "submittedDateTime"
    unsubmitted_by = "unsubmittedBy"
    unsubmitted_date_time = "unsubmittedDateTime"
    released_by = "releasedBy"
    released_date_time = "releasedDateTime"
    returned_by = "returnedBy"
    returned_date_time = "returnedDateTime"
    resources_folder_url = "resourcesFolderUrl"
    resources = "resources"
    submitted_resources = "submittedResources"
    outcomes = "outcomes"

class Enum138(str, Enum):

    asterisk = "*"
    resources = "resources"
    submitted_resources = "submittedResources"
    outcomes = "outcomes"

class Enum139(str, Enum):

    id = "id"
    id_desc = "id desc"
    last_modified_by = "lastModifiedBy"
    last_modified_by_desc = "lastModifiedBy desc"
    last_modified_date_time = "lastModifiedDateTime"
    last_modified_date_time_desc = "lastModifiedDateTime desc"

class Enum140(str, Enum):

    id = "id"
    last_modified_by = "lastModifiedBy"
    last_modified_date_time = "lastModifiedDateTime"

class Enum141(str, Enum):

    id = "id"
    last_modified_by = "lastModifiedBy"
    last_modified_date_time = "lastModifiedDateTime"

class Enum142(str, Enum):

    id = "id"
    id_desc = "id desc"
    resource = "resource"
    resource_desc = "resource desc"
    assignment_resource_url = "assignmentResourceUrl"
    assignment_resource_url_desc = "assignmentResourceUrl desc"

class Enum143(str, Enum):

    id = "id"
    resource = "resource"
    assignment_resource_url = "assignmentResourceUrl"

class Enum144(str, Enum):

    id = "id"
    resource = "resource"
    assignment_resource_url = "assignmentResourceUrl"

class Enum145(str, Enum):

    id = "id"
    id_desc = "id desc"
    resource = "resource"
    resource_desc = "resource desc"
    assignment_resource_url = "assignmentResourceUrl"
    assignment_resource_url_desc = "assignmentResourceUrl desc"

class Enum146(str, Enum):

    id = "id"
    resource = "resource"
    assignment_resource_url = "assignmentResourceUrl"

class Enum147(str, Enum):

    id = "id"
    resource = "resource"
    assignment_resource_url = "assignmentResourceUrl"

class Enum148(str, Enum):

    id = "id"
    deleted_date_time = "deletedDateTime"
    assigned_labels = "assignedLabels"
    assigned_licenses = "assignedLicenses"
    classification = "classification"
    created_by_app_id = "createdByAppId"
    created_date_time = "createdDateTime"
    description = "description"
    display_name = "displayName"
    expiration_date_time = "expirationDateTime"
    group_types = "groupTypes"
    has_members_with_license_errors = "hasMembersWithLicenseErrors"
    is_assignable_to_role = "isAssignableToRole"
    license_processing_state = "licenseProcessingState"
    mail = "mail"
    mail_enabled = "mailEnabled"
    mail_nickname = "mailNickname"
    mdm_app_id = "mdmAppId"
    membership_rule = "membershipRule"
    membership_rule_processing_state = "membershipRuleProcessingState"
    on_premises_domain_name = "onPremisesDomainName"
    on_premises_last_sync_date_time = "onPremisesLastSyncDateTime"
    on_premises_net_bios_name = "onPremisesNetBiosName"
    on_premises_provisioning_errors = "onPremisesProvisioningErrors"
    on_premises_sam_account_name = "onPremisesSamAccountName"
    on_premises_security_identifier = "onPremisesSecurityIdentifier"
    on_premises_sync_enabled = "onPremisesSyncEnabled"
    preferred_data_location = "preferredDataLocation"
    preferred_language = "preferredLanguage"
    proxy_addresses = "proxyAddresses"
    renewed_date_time = "renewedDateTime"
    resource_behavior_options = "resourceBehaviorOptions"
    resource_provisioning_options = "resourceProvisioningOptions"
    security_enabled = "securityEnabled"
    security_identifier = "securityIdentifier"
    theme = "theme"
    visibility = "visibility"
    access_type = "accessType"
    allow_external_senders = "allowExternalSenders"
    auto_subscribe_new_members = "autoSubscribeNewMembers"
    is_favorite = "isFavorite"
    is_subscribed_by_mail = "isSubscribedByMail"
    unseen_count = "unseenCount"
    unseen_conversations_count = "unseenConversationsCount"
    unseen_messages_count = "unseenMessagesCount"
    hide_from_outlook_clients = "hideFromOutlookClients"
    hide_from_address_lists = "hideFromAddressLists"
    is_archived = "isArchived"
    app_role_assignments = "appRoleAssignments"
    members = "members"
    members_with_license_errors = "membersWithLicenseErrors"
    member_of = "memberOf"
    transitive_members = "transitiveMembers"
    transitive_member_of = "transitiveMemberOf"
    created_on_behalf_of = "createdOnBehalfOf"
    owners = "owners"
    settings = "settings"
    endpoints = "endpoints"
    permission_grants = "permissionGrants"
    conversations = "conversations"
    photos = "photos"
    accepted_senders = "acceptedSenders"
    rejected_senders = "rejectedSenders"
    threads = "threads"
    calendar = "calendar"
    calendar_view = "calendarView"
    events = "events"
    photo = "photo"
    drive = "drive"
    drives = "drives"
    sites = "sites"
    extensions = "extensions"
    group_lifecycle_policies = "groupLifecyclePolicies"
    planner = "planner"
    onenote = "onenote"
    team = "team"

class Enum149(str, Enum):

    asterisk = "*"
    app_role_assignments = "appRoleAssignments"
    members = "members"
    members_with_license_errors = "membersWithLicenseErrors"
    member_of = "memberOf"
    transitive_members = "transitiveMembers"
    transitive_member_of = "transitiveMemberOf"
    created_on_behalf_of = "createdOnBehalfOf"
    owners = "owners"
    settings = "settings"
    endpoints = "endpoints"
    permission_grants = "permissionGrants"
    conversations = "conversations"
    photos = "photos"
    accepted_senders = "acceptedSenders"
    rejected_senders = "rejectedSenders"
    threads = "threads"
    calendar = "calendar"
    calendar_view = "calendarView"
    events = "events"
    photo = "photo"
    drive = "drive"
    drives = "drives"
    sites = "sites"
    extensions = "extensions"
    group_lifecycle_policies = "groupLifecyclePolicies"
    planner = "planner"
    onenote = "onenote"
    team = "team"

class Enum150(str, Enum):

    id = "id"
    id_desc = "id desc"
    related_contacts = "relatedContacts"
    related_contacts_desc = "relatedContacts desc"
    primary_role = "primaryRole"
    primary_role_desc = "primaryRole desc"
    middle_name = "middleName"
    middle_name_desc = "middleName desc"
    external_source = "externalSource"
    external_source_desc = "externalSource desc"
    residence_address = "residenceAddress"
    residence_address_desc = "residenceAddress desc"
    mailing_address = "mailingAddress"
    mailing_address_desc = "mailingAddress desc"
    student = "student"
    student_desc = "student desc"
    teacher = "teacher"
    teacher_desc = "teacher desc"
    created_by = "createdBy"
    created_by_desc = "createdBy desc"
    account_enabled = "accountEnabled"
    account_enabled_desc = "accountEnabled desc"
    assigned_licenses = "assignedLicenses"
    assigned_licenses_desc = "assignedLicenses desc"
    assigned_plans = "assignedPlans"
    assigned_plans_desc = "assignedPlans desc"
    business_phones = "businessPhones"
    business_phones_desc = "businessPhones desc"
    department = "department"
    department_desc = "department desc"
    display_name = "displayName"
    display_name_desc = "displayName desc"
    given_name = "givenName"
    given_name_desc = "givenName desc"
    mail = "mail"
    mail_desc = "mail desc"
    mail_nickname = "mailNickname"
    mail_nickname_desc = "mailNickname desc"
    mobile_phone = "mobilePhone"
    mobile_phone_desc = "mobilePhone desc"
    password_policies = "passwordPolicies"
    password_policies_desc = "passwordPolicies desc"
    password_profile = "passwordProfile"
    password_profile_desc = "passwordProfile desc"
    office_location = "officeLocation"
    office_location_desc = "officeLocation desc"
    preferred_language = "preferredLanguage"
    preferred_language_desc = "preferredLanguage desc"
    provisioned_plans = "provisionedPlans"
    provisioned_plans_desc = "provisionedPlans desc"
    refresh_tokens_valid_from_date_time = "refreshTokensValidFromDateTime"
    refresh_tokens_valid_from_date_time_desc = "refreshTokensValidFromDateTime desc"
    show_in_address_list = "showInAddressList"
    show_in_address_list_desc = "showInAddressList desc"
    surname = "surname"
    surname_desc = "surname desc"
    usage_location = "usageLocation"
    usage_location_desc = "usageLocation desc"
    user_principal_name = "userPrincipalName"
    user_principal_name_desc = "userPrincipalName desc"
    user_type = "userType"
    user_type_desc = "userType desc"
    on_premises_info = "onPremisesInfo"
    on_premises_info_desc = "onPremisesInfo desc"

class Enum151(str, Enum):

    id = "id"
    related_contacts = "relatedContacts"
    primary_role = "primaryRole"
    middle_name = "middleName"
    external_source = "externalSource"
    residence_address = "residenceAddress"
    mailing_address = "mailingAddress"
    student = "student"
    teacher = "teacher"
    created_by = "createdBy"
    account_enabled = "accountEnabled"
    assigned_licenses = "assignedLicenses"
    assigned_plans = "assignedPlans"
    business_phones = "businessPhones"
    department = "department"
    display_name = "displayName"
    given_name = "givenName"
    mail = "mail"
    mail_nickname = "mailNickname"
    mobile_phone = "mobilePhone"
    password_policies = "passwordPolicies"
    password_profile = "passwordProfile"
    office_location = "officeLocation"
    preferred_language = "preferredLanguage"
    provisioned_plans = "provisionedPlans"
    refresh_tokens_valid_from_date_time = "refreshTokensValidFromDateTime"
    show_in_address_list = "showInAddressList"
    surname = "surname"
    usage_location = "usageLocation"
    user_principal_name = "userPrincipalName"
    user_type = "userType"
    on_premises_info = "onPremisesInfo"
    assignments = "assignments"
    rubrics = "rubrics"
    classes = "classes"
    taught_classes = "taughtClasses"
    schools = "schools"
    user = "user"

class Enum152(str, Enum):

    asterisk = "*"
    assignments = "assignments"
    rubrics = "rubrics"
    classes = "classes"
    taught_classes = "taughtClasses"
    schools = "schools"
    user = "user"

class Enum153(str, Enum):

    id = "id"
    related_contacts = "relatedContacts"
    primary_role = "primaryRole"
    middle_name = "middleName"
    external_source = "externalSource"
    residence_address = "residenceAddress"
    mailing_address = "mailingAddress"
    student = "student"
    teacher = "teacher"
    created_by = "createdBy"
    account_enabled = "accountEnabled"
    assigned_licenses = "assignedLicenses"
    assigned_plans = "assignedPlans"
    business_phones = "businessPhones"
    department = "department"
    display_name = "displayName"
    given_name = "givenName"
    mail = "mail"
    mail_nickname = "mailNickname"
    mobile_phone = "mobilePhone"
    password_policies = "passwordPolicies"
    password_profile = "passwordProfile"
    office_location = "officeLocation"
    preferred_language = "preferredLanguage"
    provisioned_plans = "provisionedPlans"
    refresh_tokens_valid_from_date_time = "refreshTokensValidFromDateTime"
    show_in_address_list = "showInAddressList"
    surname = "surname"
    usage_location = "usageLocation"
    user_principal_name = "userPrincipalName"
    user_type = "userType"
    on_premises_info = "onPremisesInfo"
    assignments = "assignments"
    rubrics = "rubrics"
    classes = "classes"
    taught_classes = "taughtClasses"
    schools = "schools"
    user = "user"

class Enum154(str, Enum):

    asterisk = "*"
    assignments = "assignments"
    rubrics = "rubrics"
    classes = "classes"
    taught_classes = "taughtClasses"
    schools = "schools"
    user = "user"

class Enum155(str, Enum):

    id = "id"
    id_desc = "id desc"
    display_name = "displayName"
    display_name_desc = "displayName desc"
    description = "description"
    description_desc = "description desc"
    external_source = "externalSource"
    external_source_desc = "externalSource desc"
    principal_email = "principalEmail"
    principal_email_desc = "principalEmail desc"
    principal_name = "principalName"
    principal_name_desc = "principalName desc"
    external_principal_id = "externalPrincipalId"
    external_principal_id_desc = "externalPrincipalId desc"
    lowest_grade = "lowestGrade"
    lowest_grade_desc = "lowestGrade desc"
    highest_grade = "highestGrade"
    highest_grade_desc = "highestGrade desc"
    school_number = "schoolNumber"
    school_number_desc = "schoolNumber desc"
    external_id = "externalId"
    external_id_desc = "externalId desc"
    phone = "phone"
    phone_desc = "phone desc"
    fax = "fax"
    fax_desc = "fax desc"
    created_by = "createdBy"
    created_by_desc = "createdBy desc"
    address = "address"
    address_desc = "address desc"

class Enum156(str, Enum):

    id = "id"
    display_name = "displayName"
    description = "description"
    external_source = "externalSource"
    principal_email = "principalEmail"
    principal_name = "principalName"
    external_principal_id = "externalPrincipalId"
    lowest_grade = "lowestGrade"
    highest_grade = "highestGrade"
    school_number = "schoolNumber"
    external_id = "externalId"
    phone = "phone"
    fax = "fax"
    created_by = "createdBy"
    address = "address"
    classes = "classes"
    users = "users"
    administrative_unit = "administrativeUnit"

class Enum157(str, Enum):

    asterisk = "*"
    classes = "classes"
    users = "users"
    administrative_unit = "administrativeUnit"

class Enum158(str, Enum):

    id = "id"
    display_name = "displayName"
    description = "description"
    external_source = "externalSource"
    principal_email = "principalEmail"
    principal_name = "principalName"
    external_principal_id = "externalPrincipalId"
    lowest_grade = "lowestGrade"
    highest_grade = "highestGrade"
    school_number = "schoolNumber"
    external_id = "externalId"
    phone = "phone"
    fax = "fax"
    created_by = "createdBy"
    address = "address"
    classes = "classes"
    users = "users"
    administrative_unit = "administrativeUnit"

class Enum159(str, Enum):

    asterisk = "*"
    classes = "classes"
    users = "users"
    administrative_unit = "administrativeUnit"

class Enum160(str, Enum):

    id = "id"
    id_desc = "id desc"
    related_contacts = "relatedContacts"
    related_contacts_desc = "relatedContacts desc"
    primary_role = "primaryRole"
    primary_role_desc = "primaryRole desc"
    middle_name = "middleName"
    middle_name_desc = "middleName desc"
    external_source = "externalSource"
    external_source_desc = "externalSource desc"
    residence_address = "residenceAddress"
    residence_address_desc = "residenceAddress desc"
    mailing_address = "mailingAddress"
    mailing_address_desc = "mailingAddress desc"
    student = "student"
    student_desc = "student desc"
    teacher = "teacher"
    teacher_desc = "teacher desc"
    created_by = "createdBy"
    created_by_desc = "createdBy desc"
    account_enabled = "accountEnabled"
    account_enabled_desc = "accountEnabled desc"
    assigned_licenses = "assignedLicenses"
    assigned_licenses_desc = "assignedLicenses desc"
    assigned_plans = "assignedPlans"
    assigned_plans_desc = "assignedPlans desc"
    business_phones = "businessPhones"
    business_phones_desc = "businessPhones desc"
    department = "department"
    department_desc = "department desc"
    display_name = "displayName"
    display_name_desc = "displayName desc"
    given_name = "givenName"
    given_name_desc = "givenName desc"
    mail = "mail"
    mail_desc = "mail desc"
    mail_nickname = "mailNickname"
    mail_nickname_desc = "mailNickname desc"
    mobile_phone = "mobilePhone"
    mobile_phone_desc = "mobilePhone desc"
    password_policies = "passwordPolicies"
    password_policies_desc = "passwordPolicies desc"
    password_profile = "passwordProfile"
    password_profile_desc = "passwordProfile desc"
    office_location = "officeLocation"
    office_location_desc = "officeLocation desc"
    preferred_language = "preferredLanguage"
    preferred_language_desc = "preferredLanguage desc"
    provisioned_plans = "provisionedPlans"
    provisioned_plans_desc = "provisionedPlans desc"
    refresh_tokens_valid_from_date_time = "refreshTokensValidFromDateTime"
    refresh_tokens_valid_from_date_time_desc = "refreshTokensValidFromDateTime desc"
    show_in_address_list = "showInAddressList"
    show_in_address_list_desc = "showInAddressList desc"
    surname = "surname"
    surname_desc = "surname desc"
    usage_location = "usageLocation"
    usage_location_desc = "usageLocation desc"
    user_principal_name = "userPrincipalName"
    user_principal_name_desc = "userPrincipalName desc"
    user_type = "userType"
    user_type_desc = "userType desc"
    on_premises_info = "onPremisesInfo"
    on_premises_info_desc = "onPremisesInfo desc"

class Enum161(str, Enum):

    id = "id"
    related_contacts = "relatedContacts"
    primary_role = "primaryRole"
    middle_name = "middleName"
    external_source = "externalSource"
    residence_address = "residenceAddress"
    mailing_address = "mailingAddress"
    student = "student"
    teacher = "teacher"
    created_by = "createdBy"
    account_enabled = "accountEnabled"
    assigned_licenses = "assignedLicenses"
    assigned_plans = "assignedPlans"
    business_phones = "businessPhones"
    department = "department"
    display_name = "displayName"
    given_name = "givenName"
    mail = "mail"
    mail_nickname = "mailNickname"
    mobile_phone = "mobilePhone"
    password_policies = "passwordPolicies"
    password_profile = "passwordProfile"
    office_location = "officeLocation"
    preferred_language = "preferredLanguage"
    provisioned_plans = "provisionedPlans"
    refresh_tokens_valid_from_date_time = "refreshTokensValidFromDateTime"
    show_in_address_list = "showInAddressList"
    surname = "surname"
    usage_location = "usageLocation"
    user_principal_name = "userPrincipalName"
    user_type = "userType"
    on_premises_info = "onPremisesInfo"
    assignments = "assignments"
    rubrics = "rubrics"
    classes = "classes"
    taught_classes = "taughtClasses"
    schools = "schools"
    user = "user"

class Enum162(str, Enum):

    asterisk = "*"
    assignments = "assignments"
    rubrics = "rubrics"
    classes = "classes"
    taught_classes = "taughtClasses"
    schools = "schools"
    user = "user"

class Enum163(str, Enum):

    id = "id"
    related_contacts = "relatedContacts"
    primary_role = "primaryRole"
    middle_name = "middleName"
    external_source = "externalSource"
    residence_address = "residenceAddress"
    mailing_address = "mailingAddress"
    student = "student"
    teacher = "teacher"
    created_by = "createdBy"
    account_enabled = "accountEnabled"
    assigned_licenses = "assignedLicenses"
    assigned_plans = "assignedPlans"
    business_phones = "businessPhones"
    department = "department"
    display_name = "displayName"
    given_name = "givenName"
    mail = "mail"
    mail_nickname = "mailNickname"
    mobile_phone = "mobilePhone"
    password_policies = "passwordPolicies"
    password_profile = "passwordProfile"
    office_location = "officeLocation"
    preferred_language = "preferredLanguage"
    provisioned_plans = "provisionedPlans"
    refresh_tokens_valid_from_date_time = "refreshTokensValidFromDateTime"
    show_in_address_list = "showInAddressList"
    surname = "surname"
    usage_location = "usageLocation"
    user_principal_name = "userPrincipalName"
    user_type = "userType"
    on_premises_info = "onPremisesInfo"
    assignments = "assignments"
    rubrics = "rubrics"
    classes = "classes"
    taught_classes = "taughtClasses"
    schools = "schools"
    user = "user"

class Enum164(str, Enum):

    asterisk = "*"
    assignments = "assignments"
    rubrics = "rubrics"
    classes = "classes"
    taught_classes = "taughtClasses"
    schools = "schools"
    user = "user"

class Enum165(str, Enum):

    id = "id"
    related_contacts = "relatedContacts"
    primary_role = "primaryRole"
    middle_name = "middleName"
    external_source = "externalSource"
    residence_address = "residenceAddress"
    mailing_address = "mailingAddress"
    student = "student"
    teacher = "teacher"
    created_by = "createdBy"
    account_enabled = "accountEnabled"
    assigned_licenses = "assignedLicenses"
    assigned_plans = "assignedPlans"
    business_phones = "businessPhones"
    department = "department"
    display_name = "displayName"
    given_name = "givenName"
    mail = "mail"
    mail_nickname = "mailNickname"
    mobile_phone = "mobilePhone"
    password_policies = "passwordPolicies"
    password_profile = "passwordProfile"
    office_location = "officeLocation"
    preferred_language = "preferredLanguage"
    provisioned_plans = "provisionedPlans"
    refresh_tokens_valid_from_date_time = "refreshTokensValidFromDateTime"
    show_in_address_list = "showInAddressList"
    surname = "surname"
    usage_location = "usageLocation"
    user_principal_name = "userPrincipalName"
    user_type = "userType"
    on_premises_info = "onPremisesInfo"
    assignments = "assignments"
    rubrics = "rubrics"
    classes = "classes"
    taught_classes = "taughtClasses"
    schools = "schools"
    user = "user"

class Enum166(str, Enum):

    asterisk = "*"
    assignments = "assignments"
    rubrics = "rubrics"
    classes = "classes"
    taught_classes = "taughtClasses"
    schools = "schools"
    user = "user"

class Enum167(str, Enum):

    id = "id"
    id_desc = "id desc"
    class_id = "classId"
    class_id_desc = "classId desc"
    display_name = "displayName"
    display_name_desc = "displayName desc"
    instructions = "instructions"
    instructions_desc = "instructions desc"
    close_date_time = "closeDateTime"
    close_date_time_desc = "closeDateTime desc"
    due_date_time = "dueDateTime"
    due_date_time_desc = "dueDateTime desc"
    assign_date_time = "assignDateTime"
    assign_date_time_desc = "assignDateTime desc"
    assigned_date_time = "assignedDateTime"
    assigned_date_time_desc = "assignedDateTime desc"
    grading = "grading"
    grading_desc = "grading desc"
    assign_to = "assignTo"
    assign_to_desc = "assignTo desc"
    allow_late_submissions = "allowLateSubmissions"
    allow_late_submissions_desc = "allowLateSubmissions desc"
    created_date_time = "createdDateTime"
    created_date_time_desc = "createdDateTime desc"
    created_by = "createdBy"
    created_by_desc = "createdBy desc"
    last_modified_date_time = "lastModifiedDateTime"
    last_modified_date_time_desc = "lastModifiedDateTime desc"
    last_modified_by = "lastModifiedBy"
    last_modified_by_desc = "lastModifiedBy desc"
    allow_students_to_add_resources_to_submission = "allowStudentsToAddResourcesToSubmission"
    allow_students_to_add_resources_to_submission_desc = "allowStudentsToAddResourcesToSubmission desc"
    status = "status"
    status_desc = "status desc"

class Enum168(str, Enum):

    id = "id"
    class_id = "classId"
    display_name = "displayName"
    instructions = "instructions"
    close_date_time = "closeDateTime"
    due_date_time = "dueDateTime"
    assign_date_time = "assignDateTime"
    assigned_date_time = "assignedDateTime"
    grading = "grading"
    assign_to = "assignTo"
    allow_late_submissions = "allowLateSubmissions"
    created_date_time = "createdDateTime"
    created_by = "createdBy"
    last_modified_date_time = "lastModifiedDateTime"
    last_modified_by = "lastModifiedBy"
    allow_students_to_add_resources_to_submission = "allowStudentsToAddResourcesToSubmission"
    status = "status"
    resources = "resources"
    submissions = "submissions"
    categories = "categories"
    rubric = "rubric"

class Enum169(str, Enum):

    asterisk = "*"
    resources = "resources"
    submissions = "submissions"
    categories = "categories"
    rubric = "rubric"

class Enum170(str, Enum):

    id = "id"
    class_id = "classId"
    display_name = "displayName"
    instructions = "instructions"
    close_date_time = "closeDateTime"
    due_date_time = "dueDateTime"
    assign_date_time = "assignDateTime"
    assigned_date_time = "assignedDateTime"
    grading = "grading"
    assign_to = "assignTo"
    allow_late_submissions = "allowLateSubmissions"
    created_date_time = "createdDateTime"
    created_by = "createdBy"
    last_modified_date_time = "lastModifiedDateTime"
    last_modified_by = "lastModifiedBy"
    allow_students_to_add_resources_to_submission = "allowStudentsToAddResourcesToSubmission"
    status = "status"
    resources = "resources"
    submissions = "submissions"
    categories = "categories"
    rubric = "rubric"

class Enum171(str, Enum):

    asterisk = "*"
    resources = "resources"
    submissions = "submissions"
    categories = "categories"
    rubric = "rubric"

class Enum172(str, Enum):

    id = "id"
    id_desc = "id desc"
    display_name = "displayName"
    display_name_desc = "displayName desc"

class Enum173(str, Enum):

    id = "id"
    display_name = "displayName"

class Enum174(str, Enum):

    id = "id"
    display_name = "displayName"

class Enum175(str, Enum):

    id = "id"
    id_desc = "id desc"
    distribute_for_student_work = "distributeForStudentWork"
    distribute_for_student_work_desc = "distributeForStudentWork desc"
    resource = "resource"
    resource_desc = "resource desc"

class Enum176(str, Enum):

    id = "id"
    distribute_for_student_work = "distributeForStudentWork"
    resource = "resource"

class Enum177(str, Enum):

    id = "id"
    distribute_for_student_work = "distributeForStudentWork"
    resource = "resource"

class Enum178(str, Enum):

    id = "id"
    display_name = "displayName"
    description = "description"
    qualities = "qualities"
    levels = "levels"
    grading = "grading"
    created_date_time = "createdDateTime"
    created_by = "createdBy"
    last_modified_date_time = "lastModifiedDateTime"
    last_modified_by = "lastModifiedBy"

class Enum179(str, Enum):

    id = "id"
    id_desc = "id desc"
    recipient = "recipient"
    recipient_desc = "recipient desc"
    status = "status"
    status_desc = "status desc"
    submitted_by = "submittedBy"
    submitted_by_desc = "submittedBy desc"
    submitted_date_time = "submittedDateTime"
    submitted_date_time_desc = "submittedDateTime desc"
    unsubmitted_by = "unsubmittedBy"
    unsubmitted_by_desc = "unsubmittedBy desc"
    unsubmitted_date_time = "unsubmittedDateTime"
    unsubmitted_date_time_desc = "unsubmittedDateTime desc"
    released_by = "releasedBy"
    released_by_desc = "releasedBy desc"
    released_date_time = "releasedDateTime"
    released_date_time_desc = "releasedDateTime desc"
    returned_by = "returnedBy"
    returned_by_desc = "returnedBy desc"
    returned_date_time = "returnedDateTime"
    returned_date_time_desc = "returnedDateTime desc"
    resources_folder_url = "resourcesFolderUrl"
    resources_folder_url_desc = "resourcesFolderUrl desc"

class Enum180(str, Enum):

    id = "id"
    recipient = "recipient"
    status = "status"
    submitted_by = "submittedBy"
    submitted_date_time = "submittedDateTime"
    unsubmitted_by = "unsubmittedBy"
    unsubmitted_date_time = "unsubmittedDateTime"
    released_by = "releasedBy"
    released_date_time = "releasedDateTime"
    returned_by = "returnedBy"
    returned_date_time = "returnedDateTime"
    resources_folder_url = "resourcesFolderUrl"
    resources = "resources"
    submitted_resources = "submittedResources"
    outcomes = "outcomes"

class Enum181(str, Enum):

    asterisk = "*"
    resources = "resources"
    submitted_resources = "submittedResources"
    outcomes = "outcomes"

class Enum182(str, Enum):

    id = "id"
    recipient = "recipient"
    status = "status"
    submitted_by = "submittedBy"
    submitted_date_time = "submittedDateTime"
    unsubmitted_by = "unsubmittedBy"
    unsubmitted_date_time = "unsubmittedDateTime"
    released_by = "releasedBy"
    released_date_time = "releasedDateTime"
    returned_by = "returnedBy"
    returned_date_time = "returnedDateTime"
    resources_folder_url = "resourcesFolderUrl"
    resources = "resources"
    submitted_resources = "submittedResources"
    outcomes = "outcomes"

class Enum183(str, Enum):

    asterisk = "*"
    resources = "resources"
    submitted_resources = "submittedResources"
    outcomes = "outcomes"

class Enum184(str, Enum):

    id = "id"
    id_desc = "id desc"
    last_modified_by = "lastModifiedBy"
    last_modified_by_desc = "lastModifiedBy desc"
    last_modified_date_time = "lastModifiedDateTime"
    last_modified_date_time_desc = "lastModifiedDateTime desc"

class Enum185(str, Enum):

    id = "id"
    last_modified_by = "lastModifiedBy"
    last_modified_date_time = "lastModifiedDateTime"

class Enum186(str, Enum):

    id = "id"
    last_modified_by = "lastModifiedBy"
    last_modified_date_time = "lastModifiedDateTime"

class Enum187(str, Enum):

    id = "id"
    id_desc = "id desc"
    resource = "resource"
    resource_desc = "resource desc"
    assignment_resource_url = "assignmentResourceUrl"
    assignment_resource_url_desc = "assignmentResourceUrl desc"

class Enum188(str, Enum):

    id = "id"
    resource = "resource"
    assignment_resource_url = "assignmentResourceUrl"

class Enum189(str, Enum):

    id = "id"
    resource = "resource"
    assignment_resource_url = "assignmentResourceUrl"

class Enum190(str, Enum):

    id = "id"
    id_desc = "id desc"
    resource = "resource"
    resource_desc = "resource desc"
    assignment_resource_url = "assignmentResourceUrl"
    assignment_resource_url_desc = "assignmentResourceUrl desc"

class Enum191(str, Enum):

    id = "id"
    resource = "resource"
    assignment_resource_url = "assignmentResourceUrl"

class Enum192(str, Enum):

    id = "id"
    resource = "resource"
    assignment_resource_url = "assignmentResourceUrl"

class Enum193(str, Enum):

    id = "id"
    id_desc = "id desc"
    display_name = "displayName"
    display_name_desc = "displayName desc"
    mail_nickname = "mailNickname"
    mail_nickname_desc = "mailNickname desc"
    description = "description"
    description_desc = "description desc"
    created_by = "createdBy"
    created_by_desc = "createdBy desc"
    class_code = "classCode"
    class_code_desc = "classCode desc"
    external_name = "externalName"
    external_name_desc = "externalName desc"
    external_id = "externalId"
    external_id_desc = "externalId desc"
    external_source = "externalSource"
    external_source_desc = "externalSource desc"
    grade = "grade"
    grade_desc = "grade desc"
    term = "term"
    term_desc = "term desc"
    course = "course"
    course_desc = "course desc"

class Enum194(str, Enum):

    id = "id"
    display_name = "displayName"
    mail_nickname = "mailNickname"
    description = "description"
    created_by = "createdBy"
    class_code = "classCode"
    external_name = "externalName"
    external_id = "externalId"
    external_source = "externalSource"
    grade = "grade"
    term = "term"
    course = "course"
    assignments = "assignments"
    assignment_categories = "assignmentCategories"
    members = "members"
    teachers = "teachers"
    schools = "schools"
    group = "group"

class Enum195(str, Enum):

    asterisk = "*"
    assignments = "assignments"
    assignment_categories = "assignmentCategories"
    members = "members"
    teachers = "teachers"
    schools = "schools"
    group = "group"

class Enum196(str, Enum):

    id = "id"
    display_name = "displayName"
    mail_nickname = "mailNickname"
    description = "description"
    created_by = "createdBy"
    class_code = "classCode"
    external_name = "externalName"
    external_id = "externalId"
    external_source = "externalSource"
    grade = "grade"
    term = "term"
    course = "course"
    assignments = "assignments"
    assignment_categories = "assignmentCategories"
    members = "members"
    teachers = "teachers"
    schools = "schools"
    group = "group"

class Enum197(str, Enum):

    asterisk = "*"
    assignments = "assignments"
    assignment_categories = "assignmentCategories"
    members = "members"
    teachers = "teachers"
    schools = "schools"
    group = "group"

class Enum198(str, Enum):

    id = "id"
    id_desc = "id desc"
    display_name = "displayName"
    display_name_desc = "displayName desc"
    description = "description"
    description_desc = "description desc"
    qualities = "qualities"
    qualities_desc = "qualities desc"
    levels = "levels"
    levels_desc = "levels desc"
    grading = "grading"
    grading_desc = "grading desc"
    created_date_time = "createdDateTime"
    created_date_time_desc = "createdDateTime desc"
    created_by = "createdBy"
    created_by_desc = "createdBy desc"
    last_modified_date_time = "lastModifiedDateTime"
    last_modified_date_time_desc = "lastModifiedDateTime desc"
    last_modified_by = "lastModifiedBy"
    last_modified_by_desc = "lastModifiedBy desc"

class Enum199(str, Enum):

    id = "id"
    display_name = "displayName"
    description = "description"
    qualities = "qualities"
    levels = "levels"
    grading = "grading"
    created_date_time = "createdDateTime"
    created_by = "createdBy"
    last_modified_date_time = "lastModifiedDateTime"
    last_modified_by = "lastModifiedBy"

class Enum200(str, Enum):

    id = "id"
    display_name = "displayName"
    description = "description"
    qualities = "qualities"
    levels = "levels"
    grading = "grading"
    created_date_time = "createdDateTime"
    created_by = "createdBy"
    last_modified_date_time = "lastModifiedDateTime"
    last_modified_by = "lastModifiedBy"

class Enum201(str, Enum):

    id = "id"
    id_desc = "id desc"
    display_name = "displayName"
    display_name_desc = "displayName desc"
    description = "description"
    description_desc = "description desc"
    external_source = "externalSource"
    external_source_desc = "externalSource desc"
    principal_email = "principalEmail"
    principal_email_desc = "principalEmail desc"
    principal_name = "principalName"
    principal_name_desc = "principalName desc"
    external_principal_id = "externalPrincipalId"
    external_principal_id_desc = "externalPrincipalId desc"
    lowest_grade = "lowestGrade"
    lowest_grade_desc = "lowestGrade desc"
    highest_grade = "highestGrade"
    highest_grade_desc = "highestGrade desc"
    school_number = "schoolNumber"
    school_number_desc = "schoolNumber desc"
    external_id = "externalId"
    external_id_desc = "externalId desc"
    phone = "phone"
    phone_desc = "phone desc"
    fax = "fax"
    fax_desc = "fax desc"
    created_by = "createdBy"
    created_by_desc = "createdBy desc"
    address = "address"
    address_desc = "address desc"

class Enum202(str, Enum):

    id = "id"
    display_name = "displayName"
    description = "description"
    external_source = "externalSource"
    principal_email = "principalEmail"
    principal_name = "principalName"
    external_principal_id = "externalPrincipalId"
    lowest_grade = "lowestGrade"
    highest_grade = "highestGrade"
    school_number = "schoolNumber"
    external_id = "externalId"
    phone = "phone"
    fax = "fax"
    created_by = "createdBy"
    address = "address"
    classes = "classes"
    users = "users"
    administrative_unit = "administrativeUnit"

class Enum203(str, Enum):

    asterisk = "*"
    classes = "classes"
    users = "users"
    administrative_unit = "administrativeUnit"

class Enum204(str, Enum):

    id = "id"
    display_name = "displayName"
    description = "description"
    external_source = "externalSource"
    principal_email = "principalEmail"
    principal_name = "principalName"
    external_principal_id = "externalPrincipalId"
    lowest_grade = "lowestGrade"
    highest_grade = "highestGrade"
    school_number = "schoolNumber"
    external_id = "externalId"
    phone = "phone"
    fax = "fax"
    created_by = "createdBy"
    address = "address"
    classes = "classes"
    users = "users"
    administrative_unit = "administrativeUnit"

class Enum205(str, Enum):

    asterisk = "*"
    classes = "classes"
    users = "users"
    administrative_unit = "administrativeUnit"

class Enum206(str, Enum):

    id = "id"
    id_desc = "id desc"
    display_name = "displayName"
    display_name_desc = "displayName desc"
    mail_nickname = "mailNickname"
    mail_nickname_desc = "mailNickname desc"
    description = "description"
    description_desc = "description desc"
    created_by = "createdBy"
    created_by_desc = "createdBy desc"
    class_code = "classCode"
    class_code_desc = "classCode desc"
    external_name = "externalName"
    external_name_desc = "externalName desc"
    external_id = "externalId"
    external_id_desc = "externalId desc"
    external_source = "externalSource"
    external_source_desc = "externalSource desc"
    grade = "grade"
    grade_desc = "grade desc"
    term = "term"
    term_desc = "term desc"
    course = "course"
    course_desc = "course desc"

class Enum207(str, Enum):

    id = "id"
    display_name = "displayName"
    mail_nickname = "mailNickname"
    description = "description"
    created_by = "createdBy"
    class_code = "classCode"
    external_name = "externalName"
    external_id = "externalId"
    external_source = "externalSource"
    grade = "grade"
    term = "term"
    course = "course"
    assignments = "assignments"
    assignment_categories = "assignmentCategories"
    members = "members"
    teachers = "teachers"
    schools = "schools"
    group = "group"

class Enum208(str, Enum):

    asterisk = "*"
    assignments = "assignments"
    assignment_categories = "assignmentCategories"
    members = "members"
    teachers = "teachers"
    schools = "schools"
    group = "group"

class Enum209(str, Enum):

    id = "id"
    display_name = "displayName"
    mail_nickname = "mailNickname"
    description = "description"
    created_by = "createdBy"
    class_code = "classCode"
    external_name = "externalName"
    external_id = "externalId"
    external_source = "externalSource"
    grade = "grade"
    term = "term"
    course = "course"
    assignments = "assignments"
    assignment_categories = "assignmentCategories"
    members = "members"
    teachers = "teachers"
    schools = "schools"
    group = "group"

class Enum210(str, Enum):

    asterisk = "*"
    assignments = "assignments"
    assignment_categories = "assignmentCategories"
    members = "members"
    teachers = "teachers"
    schools = "schools"
    group = "group"

class Enum211(str, Enum):

    id = "id"
    deleted_date_time = "deletedDateTime"
    sign_in_activity = "signInActivity"
    account_enabled = "accountEnabled"
    age_group = "ageGroup"
    assigned_licenses = "assignedLicenses"
    assigned_plans = "assignedPlans"
    business_phones = "businessPhones"
    city = "city"
    company_name = "companyName"
    consent_provided_for_minor = "consentProvidedForMinor"
    country = "country"
    created_date_time = "createdDateTime"
    creation_type = "creationType"
    department = "department"
    device_keys = "deviceKeys"
    display_name = "displayName"
    employee_id = "employeeId"
    fax_number = "faxNumber"
    given_name = "givenName"
    identities = "identities"
    im_addresses = "imAddresses"
    is_resource_account = "isResourceAccount"
    job_title = "jobTitle"
    last_password_change_date_time = "lastPasswordChangeDateTime"
    legal_age_group_classification = "legalAgeGroupClassification"
    license_assignment_states = "licenseAssignmentStates"
    mail = "mail"
    mail_nickname = "mailNickname"
    mobile_phone = "mobilePhone"
    on_premises_distinguished_name = "onPremisesDistinguishedName"
    on_premises_extension_attributes = "onPremisesExtensionAttributes"
    on_premises_immutable_id = "onPremisesImmutableId"
    on_premises_last_sync_date_time = "onPremisesLastSyncDateTime"
    on_premises_provisioning_errors = "onPremisesProvisioningErrors"
    on_premises_security_identifier = "onPremisesSecurityIdentifier"
    on_premises_sync_enabled = "onPremisesSyncEnabled"
    on_premises_domain_name = "onPremisesDomainName"
    on_premises_sam_account_name = "onPremisesSamAccountName"
    on_premises_user_principal_name = "onPremisesUserPrincipalName"
    other_mails = "otherMails"
    password_policies = "passwordPolicies"
    password_profile = "passwordProfile"
    office_location = "officeLocation"
    postal_code = "postalCode"
    preferred_data_location = "preferredDataLocation"
    preferred_language = "preferredLanguage"
    provisioned_plans = "provisionedPlans"
    proxy_addresses = "proxyAddresses"
    refresh_tokens_valid_from_date_time = "refreshTokensValidFromDateTime"
    show_in_address_list = "showInAddressList"
    sign_in_sessions_valid_from_date_time = "signInSessionsValidFromDateTime"
    state = "state"
    street_address = "streetAddress"
    surname = "surname"
    usage_location = "usageLocation"
    user_principal_name = "userPrincipalName"
    external_user_state = "externalUserState"
    external_user_state_change_date_time = "externalUserStateChangeDateTime"
    user_type = "userType"
    mailbox_settings = "mailboxSettings"
    identity_user_risk = "identityUserRisk"
    device_enrollment_limit = "deviceEnrollmentLimit"
    about_me = "aboutMe"
    birthday = "birthday"
    hire_date = "hireDate"
    interests = "interests"
    my_site = "mySite"
    past_projects = "pastProjects"
    preferred_name = "preferredName"
    responsibilities = "responsibilities"
    schools = "schools"
    skills = "skills"
    analytics = "analytics"
    information_protection = "informationProtection"
    app_role_assignments = "appRoleAssignments"
    created_objects = "createdObjects"
    direct_reports = "directReports"
    license_details = "licenseDetails"
    manager = "manager"
    member_of = "memberOf"
    owned_devices = "ownedDevices"
    owned_objects = "ownedObjects"
    registered_devices = "registeredDevices"
    scoped_role_member_of = "scopedRoleMemberOf"
    transitive_member_of = "transitiveMemberOf"
    outlook = "outlook"
    messages = "messages"
    joined_groups = "joinedGroups"
    mail_folders = "mailFolders"
    calendar = "calendar"
    calendars = "calendars"
    calendar_groups = "calendarGroups"
    calendar_view = "calendarView"
    events = "events"
    people = "people"
    contacts = "contacts"
    contact_folders = "contactFolders"
    inference_classification = "inferenceClassification"
    photo = "photo"
    photos = "photos"
    drive = "drive"
    drives = "drives"
    followed_sites = "followedSites"
    extensions = "extensions"
    approvals = "approvals"
    app_consent_requests_for_approval = "appConsentRequestsForApproval"
    agreement_acceptances = "agreementAcceptances"
    device_enrollment_configurations = "deviceEnrollmentConfigurations"
    managed_devices = "managedDevices"
    managed_app_registrations = "managedAppRegistrations"
    windows_information_protection_device_registrations = "windowsInformationProtectionDeviceRegistrations"
    device_management_troubleshooting_events = "deviceManagementTroubleshootingEvents"
    mobile_app_intent_and_states = "mobileAppIntentAndStates"
    mobile_app_troubleshooting_events = "mobileAppTroubleshootingEvents"
    notifications = "notifications"
    planner = "planner"
    insights = "insights"
    settings = "settings"
    onenote = "onenote"
    profile = "profile"
    activities = "activities"
    devices = "devices"
    online_meetings = "onlineMeetings"
    presence = "presence"
    authentication = "authentication"
    chats = "chats"
    joined_teams = "joinedTeams"
    teamwork = "teamwork"

class Enum212(str, Enum):

    asterisk = "*"
    analytics = "analytics"
    information_protection = "informationProtection"
    app_role_assignments = "appRoleAssignments"
    created_objects = "createdObjects"
    direct_reports = "directReports"
    license_details = "licenseDetails"
    manager = "manager"
    member_of = "memberOf"
    owned_devices = "ownedDevices"
    owned_objects = "ownedObjects"
    registered_devices = "registeredDevices"
    scoped_role_member_of = "scopedRoleMemberOf"
    transitive_member_of = "transitiveMemberOf"
    outlook = "outlook"
    messages = "messages"
    joined_groups = "joinedGroups"
    mail_folders = "mailFolders"
    calendar = "calendar"
    calendars = "calendars"
    calendar_groups = "calendarGroups"
    calendar_view = "calendarView"
    events = "events"
    people = "people"
    contacts = "contacts"
    contact_folders = "contactFolders"
    inference_classification = "inferenceClassification"
    photo = "photo"
    photos = "photos"
    drive = "drive"
    drives = "drives"
    followed_sites = "followedSites"
    extensions = "extensions"
    approvals = "approvals"
    app_consent_requests_for_approval = "appConsentRequestsForApproval"
    agreement_acceptances = "agreementAcceptances"
    device_enrollment_configurations = "deviceEnrollmentConfigurations"
    managed_devices = "managedDevices"
    managed_app_registrations = "managedAppRegistrations"
    windows_information_protection_device_registrations = "windowsInformationProtectionDeviceRegistrations"
    device_management_troubleshooting_events = "deviceManagementTroubleshootingEvents"
    mobile_app_intent_and_states = "mobileAppIntentAndStates"
    mobile_app_troubleshooting_events = "mobileAppTroubleshootingEvents"
    notifications = "notifications"
    planner = "planner"
    insights = "insights"
    settings = "settings"
    onenote = "onenote"
    profile = "profile"
    activities = "activities"
    devices = "devices"
    online_meetings = "onlineMeetings"
    presence = "presence"
    authentication = "authentication"
    chats = "chats"
    joined_teams = "joinedTeams"
    teamwork = "teamwork"

class Enum213(str, Enum):

    id = "id"
    id_desc = "id desc"
    display_name = "displayName"
    display_name_desc = "displayName desc"
    description = "description"
    description_desc = "description desc"
    external_source = "externalSource"
    external_source_desc = "externalSource desc"
    principal_email = "principalEmail"
    principal_email_desc = "principalEmail desc"
    principal_name = "principalName"
    principal_name_desc = "principalName desc"
    external_principal_id = "externalPrincipalId"
    external_principal_id_desc = "externalPrincipalId desc"
    lowest_grade = "lowestGrade"
    lowest_grade_desc = "lowestGrade desc"
    highest_grade = "highestGrade"
    highest_grade_desc = "highestGrade desc"
    school_number = "schoolNumber"
    school_number_desc = "schoolNumber desc"
    external_id = "externalId"
    external_id_desc = "externalId desc"
    phone = "phone"
    phone_desc = "phone desc"
    fax = "fax"
    fax_desc = "fax desc"
    created_by = "createdBy"
    created_by_desc = "createdBy desc"
    address = "address"
    address_desc = "address desc"

class Enum214(str, Enum):

    id = "id"
    display_name = "displayName"
    description = "description"
    external_source = "externalSource"
    principal_email = "principalEmail"
    principal_name = "principalName"
    external_principal_id = "externalPrincipalId"
    lowest_grade = "lowestGrade"
    highest_grade = "highestGrade"
    school_number = "schoolNumber"
    external_id = "externalId"
    phone = "phone"
    fax = "fax"
    created_by = "createdBy"
    address = "address"
    classes = "classes"
    users = "users"
    administrative_unit = "administrativeUnit"

class Enum215(str, Enum):

    asterisk = "*"
    classes = "classes"
    users = "users"
    administrative_unit = "administrativeUnit"

class Enum216(str, Enum):

    id = "id"
    display_name = "displayName"
    description = "description"
    external_source = "externalSource"
    principal_email = "principalEmail"
    principal_name = "principalName"
    external_principal_id = "externalPrincipalId"
    lowest_grade = "lowestGrade"
    highest_grade = "highestGrade"
    school_number = "schoolNumber"
    external_id = "externalId"
    phone = "phone"
    fax = "fax"
    created_by = "createdBy"
    address = "address"
    classes = "classes"
    users = "users"
    administrative_unit = "administrativeUnit"

class Enum217(str, Enum):

    asterisk = "*"
    classes = "classes"
    users = "users"
    administrative_unit = "administrativeUnit"

class Enum218(str, Enum):

    id = "id"
    deleted_date_time = "deletedDateTime"
    display_name = "displayName"
    description = "description"
    visibility = "visibility"
    members = "members"
    scoped_role_members = "scopedRoleMembers"
    extensions = "extensions"

class Enum219(str, Enum):

    asterisk = "*"
    members = "members"
    scoped_role_members = "scopedRoleMembers"
    extensions = "extensions"

class Enum220(str, Enum):

    id = "id"
    id_desc = "id desc"
    display_name = "displayName"
    display_name_desc = "displayName desc"
    mail_nickname = "mailNickname"
    mail_nickname_desc = "mailNickname desc"
    description = "description"
    description_desc = "description desc"
    created_by = "createdBy"
    created_by_desc = "createdBy desc"
    class_code = "classCode"
    class_code_desc = "classCode desc"
    external_name = "externalName"
    external_name_desc = "externalName desc"
    external_id = "externalId"
    external_id_desc = "externalId desc"
    external_source = "externalSource"
    external_source_desc = "externalSource desc"
    grade = "grade"
    grade_desc = "grade desc"
    term = "term"
    term_desc = "term desc"
    course = "course"
    course_desc = "course desc"

class Enum221(str, Enum):

    id = "id"
    display_name = "displayName"
    mail_nickname = "mailNickname"
    description = "description"
    created_by = "createdBy"
    class_code = "classCode"
    external_name = "externalName"
    external_id = "externalId"
    external_source = "externalSource"
    grade = "grade"
    term = "term"
    course = "course"
    assignments = "assignments"
    assignment_categories = "assignmentCategories"
    members = "members"
    teachers = "teachers"
    schools = "schools"
    group = "group"

class Enum222(str, Enum):

    asterisk = "*"
    assignments = "assignments"
    assignment_categories = "assignmentCategories"
    members = "members"
    teachers = "teachers"
    schools = "schools"
    group = "group"

class Enum223(str, Enum):

    id = "id"
    display_name = "displayName"
    mail_nickname = "mailNickname"
    description = "description"
    created_by = "createdBy"
    class_code = "classCode"
    external_name = "externalName"
    external_id = "externalId"
    external_source = "externalSource"
    grade = "grade"
    term = "term"
    course = "course"
    assignments = "assignments"
    assignment_categories = "assignmentCategories"
    members = "members"
    teachers = "teachers"
    schools = "schools"
    group = "group"

class Enum224(str, Enum):

    asterisk = "*"
    assignments = "assignments"
    assignment_categories = "assignmentCategories"
    members = "members"
    teachers = "teachers"
    schools = "schools"
    group = "group"

class Enum225(str, Enum):

    id = "id"
    id_desc = "id desc"
    related_contacts = "relatedContacts"
    related_contacts_desc = "relatedContacts desc"
    primary_role = "primaryRole"
    primary_role_desc = "primaryRole desc"
    middle_name = "middleName"
    middle_name_desc = "middleName desc"
    external_source = "externalSource"
    external_source_desc = "externalSource desc"
    residence_address = "residenceAddress"
    residence_address_desc = "residenceAddress desc"
    mailing_address = "mailingAddress"
    mailing_address_desc = "mailingAddress desc"
    student = "student"
    student_desc = "student desc"
    teacher = "teacher"
    teacher_desc = "teacher desc"
    created_by = "createdBy"
    created_by_desc = "createdBy desc"
    account_enabled = "accountEnabled"
    account_enabled_desc = "accountEnabled desc"
    assigned_licenses = "assignedLicenses"
    assigned_licenses_desc = "assignedLicenses desc"
    assigned_plans = "assignedPlans"
    assigned_plans_desc = "assignedPlans desc"
    business_phones = "businessPhones"
    business_phones_desc = "businessPhones desc"
    department = "department"
    department_desc = "department desc"
    display_name = "displayName"
    display_name_desc = "displayName desc"
    given_name = "givenName"
    given_name_desc = "givenName desc"
    mail = "mail"
    mail_desc = "mail desc"
    mail_nickname = "mailNickname"
    mail_nickname_desc = "mailNickname desc"
    mobile_phone = "mobilePhone"
    mobile_phone_desc = "mobilePhone desc"
    password_policies = "passwordPolicies"
    password_policies_desc = "passwordPolicies desc"
    password_profile = "passwordProfile"
    password_profile_desc = "passwordProfile desc"
    office_location = "officeLocation"
    office_location_desc = "officeLocation desc"
    preferred_language = "preferredLanguage"
    preferred_language_desc = "preferredLanguage desc"
    provisioned_plans = "provisionedPlans"
    provisioned_plans_desc = "provisionedPlans desc"
    refresh_tokens_valid_from_date_time = "refreshTokensValidFromDateTime"
    refresh_tokens_valid_from_date_time_desc = "refreshTokensValidFromDateTime desc"
    show_in_address_list = "showInAddressList"
    show_in_address_list_desc = "showInAddressList desc"
    surname = "surname"
    surname_desc = "surname desc"
    usage_location = "usageLocation"
    usage_location_desc = "usageLocation desc"
    user_principal_name = "userPrincipalName"
    user_principal_name_desc = "userPrincipalName desc"
    user_type = "userType"
    user_type_desc = "userType desc"
    on_premises_info = "onPremisesInfo"
    on_premises_info_desc = "onPremisesInfo desc"

class Enum226(str, Enum):

    id = "id"
    related_contacts = "relatedContacts"
    primary_role = "primaryRole"
    middle_name = "middleName"
    external_source = "externalSource"
    residence_address = "residenceAddress"
    mailing_address = "mailingAddress"
    student = "student"
    teacher = "teacher"
    created_by = "createdBy"
    account_enabled = "accountEnabled"
    assigned_licenses = "assignedLicenses"
    assigned_plans = "assignedPlans"
    business_phones = "businessPhones"
    department = "department"
    display_name = "displayName"
    given_name = "givenName"
    mail = "mail"
    mail_nickname = "mailNickname"
    mobile_phone = "mobilePhone"
    password_policies = "passwordPolicies"
    password_profile = "passwordProfile"
    office_location = "officeLocation"
    preferred_language = "preferredLanguage"
    provisioned_plans = "provisionedPlans"
    refresh_tokens_valid_from_date_time = "refreshTokensValidFromDateTime"
    show_in_address_list = "showInAddressList"
    surname = "surname"
    usage_location = "usageLocation"
    user_principal_name = "userPrincipalName"
    user_type = "userType"
    on_premises_info = "onPremisesInfo"
    assignments = "assignments"
    rubrics = "rubrics"
    classes = "classes"
    taught_classes = "taughtClasses"
    schools = "schools"
    user = "user"

class Enum227(str, Enum):

    asterisk = "*"
    assignments = "assignments"
    rubrics = "rubrics"
    classes = "classes"
    taught_classes = "taughtClasses"
    schools = "schools"
    user = "user"

class Enum228(str, Enum):

    id = "id"
    related_contacts = "relatedContacts"
    primary_role = "primaryRole"
    middle_name = "middleName"
    external_source = "externalSource"
    residence_address = "residenceAddress"
    mailing_address = "mailingAddress"
    student = "student"
    teacher = "teacher"
    created_by = "createdBy"
    account_enabled = "accountEnabled"
    assigned_licenses = "assignedLicenses"
    assigned_plans = "assignedPlans"
    business_phones = "businessPhones"
    department = "department"
    display_name = "displayName"
    given_name = "givenName"
    mail = "mail"
    mail_nickname = "mailNickname"
    mobile_phone = "mobilePhone"
    password_policies = "passwordPolicies"
    password_profile = "passwordProfile"
    office_location = "officeLocation"
    preferred_language = "preferredLanguage"
    provisioned_plans = "provisionedPlans"
    refresh_tokens_valid_from_date_time = "refreshTokensValidFromDateTime"
    show_in_address_list = "showInAddressList"
    surname = "surname"
    usage_location = "usageLocation"
    user_principal_name = "userPrincipalName"
    user_type = "userType"
    on_premises_info = "onPremisesInfo"
    assignments = "assignments"
    rubrics = "rubrics"
    classes = "classes"
    taught_classes = "taughtClasses"
    schools = "schools"
    user = "user"

class Enum229(str, Enum):

    asterisk = "*"
    assignments = "assignments"
    rubrics = "rubrics"
    classes = "classes"
    taught_classes = "taughtClasses"
    schools = "schools"
    user = "user"

class Enum230(str, Enum):

    id = "id"
    id_desc = "id desc"
    display_name = "displayName"
    display_name_desc = "displayName desc"
    data_provider = "dataProvider"
    data_provider_desc = "dataProvider desc"
    identity_synchronization_configuration = "identitySynchronizationConfiguration"
    identity_synchronization_configuration_desc = "identitySynchronizationConfiguration desc"
    licenses_to_assign = "licensesToAssign"
    licenses_to_assign_desc = "licensesToAssign desc"
    state = "state"
    state_desc = "state desc"
    handle_special_character_constraint = "handleSpecialCharacterConstraint"
    handle_special_character_constraint_desc = "handleSpecialCharacterConstraint desc"

class Enum231(str, Enum):

    id = "id"
    display_name = "displayName"
    data_provider = "dataProvider"
    identity_synchronization_configuration = "identitySynchronizationConfiguration"
    licenses_to_assign = "licensesToAssign"
    state = "state"
    handle_special_character_constraint = "handleSpecialCharacterConstraint"
    errors = "errors"
    profile_status = "profileStatus"

class Enum232(str, Enum):

    asterisk = "*"
    errors = "errors"
    profile_status = "profileStatus"

class Enum233(str, Enum):

    id = "id"
    display_name = "displayName"
    data_provider = "dataProvider"
    identity_synchronization_configuration = "identitySynchronizationConfiguration"
    licenses_to_assign = "licensesToAssign"
    state = "state"
    handle_special_character_constraint = "handleSpecialCharacterConstraint"
    errors = "errors"
    profile_status = "profileStatus"

class Enum234(str, Enum):

    asterisk = "*"
    errors = "errors"
    profile_status = "profileStatus"

class Enum235(str, Enum):

    id = "id"
    id_desc = "id desc"
    entry_type = "entryType"
    entry_type_desc = "entryType desc"
    error_code = "errorCode"
    error_code_desc = "errorCode desc"
    error_message = "errorMessage"
    error_message_desc = "errorMessage desc"
    joining_value = "joiningValue"
    joining_value_desc = "joiningValue desc"
    recorded_date_time = "recordedDateTime"
    recorded_date_time_desc = "recordedDateTime desc"
    reportable_identifier = "reportableIdentifier"
    reportable_identifier_desc = "reportableIdentifier desc"

class Enum236(str, Enum):

    id = "id"
    entry_type = "entryType"
    error_code = "errorCode"
    error_message = "errorMessage"
    joining_value = "joiningValue"
    recorded_date_time = "recordedDateTime"
    reportable_identifier = "reportableIdentifier"

class Enum237(str, Enum):

    id = "id"
    entry_type = "entryType"
    error_code = "errorCode"
    error_message = "errorMessage"
    joining_value = "joiningValue"
    recorded_date_time = "recordedDateTime"
    reportable_identifier = "reportableIdentifier"

class Enum238(str, Enum):

    id = "id"
    status = "status"
    last_synchronization_date_time = "lastSynchronizationDateTime"

class Enum239(str, Enum):

    id = "id"
    id_desc = "id desc"
    related_contacts = "relatedContacts"
    related_contacts_desc = "relatedContacts desc"
    primary_role = "primaryRole"
    primary_role_desc = "primaryRole desc"
    middle_name = "middleName"
    middle_name_desc = "middleName desc"
    external_source = "externalSource"
    external_source_desc = "externalSource desc"
    residence_address = "residenceAddress"
    residence_address_desc = "residenceAddress desc"
    mailing_address = "mailingAddress"
    mailing_address_desc = "mailingAddress desc"
    student = "student"
    student_desc = "student desc"
    teacher = "teacher"
    teacher_desc = "teacher desc"
    created_by = "createdBy"
    created_by_desc = "createdBy desc"
    account_enabled = "accountEnabled"
    account_enabled_desc = "accountEnabled desc"
    assigned_licenses = "assignedLicenses"
    assigned_licenses_desc = "assignedLicenses desc"
    assigned_plans = "assignedPlans"
    assigned_plans_desc = "assignedPlans desc"
    business_phones = "businessPhones"
    business_phones_desc = "businessPhones desc"
    department = "department"
    department_desc = "department desc"
    display_name = "displayName"
    display_name_desc = "displayName desc"
    given_name = "givenName"
    given_name_desc = "givenName desc"
    mail = "mail"
    mail_desc = "mail desc"
    mail_nickname = "mailNickname"
    mail_nickname_desc = "mailNickname desc"
    mobile_phone = "mobilePhone"
    mobile_phone_desc = "mobilePhone desc"
    password_policies = "passwordPolicies"
    password_policies_desc = "passwordPolicies desc"
    password_profile = "passwordProfile"
    password_profile_desc = "passwordProfile desc"
    office_location = "officeLocation"
    office_location_desc = "officeLocation desc"
    preferred_language = "preferredLanguage"
    preferred_language_desc = "preferredLanguage desc"
    provisioned_plans = "provisionedPlans"
    provisioned_plans_desc = "provisionedPlans desc"
    refresh_tokens_valid_from_date_time = "refreshTokensValidFromDateTime"
    refresh_tokens_valid_from_date_time_desc = "refreshTokensValidFromDateTime desc"
    show_in_address_list = "showInAddressList"
    show_in_address_list_desc = "showInAddressList desc"
    surname = "surname"
    surname_desc = "surname desc"
    usage_location = "usageLocation"
    usage_location_desc = "usageLocation desc"
    user_principal_name = "userPrincipalName"
    user_principal_name_desc = "userPrincipalName desc"
    user_type = "userType"
    user_type_desc = "userType desc"
    on_premises_info = "onPremisesInfo"
    on_premises_info_desc = "onPremisesInfo desc"

class Enum240(str, Enum):

    id = "id"
    related_contacts = "relatedContacts"
    primary_role = "primaryRole"
    middle_name = "middleName"
    external_source = "externalSource"
    residence_address = "residenceAddress"
    mailing_address = "mailingAddress"
    student = "student"
    teacher = "teacher"
    created_by = "createdBy"
    account_enabled = "accountEnabled"
    assigned_licenses = "assignedLicenses"
    assigned_plans = "assignedPlans"
    business_phones = "businessPhones"
    department = "department"
    display_name = "displayName"
    given_name = "givenName"
    mail = "mail"
    mail_nickname = "mailNickname"
    mobile_phone = "mobilePhone"
    password_policies = "passwordPolicies"
    password_profile = "passwordProfile"
    office_location = "officeLocation"
    preferred_language = "preferredLanguage"
    provisioned_plans = "provisionedPlans"
    refresh_tokens_valid_from_date_time = "refreshTokensValidFromDateTime"
    show_in_address_list = "showInAddressList"
    surname = "surname"
    usage_location = "usageLocation"
    user_principal_name = "userPrincipalName"
    user_type = "userType"
    on_premises_info = "onPremisesInfo"
    assignments = "assignments"
    rubrics = "rubrics"
    classes = "classes"
    taught_classes = "taughtClasses"
    schools = "schools"
    user = "user"

class Enum241(str, Enum):

    asterisk = "*"
    assignments = "assignments"
    rubrics = "rubrics"
    classes = "classes"
    taught_classes = "taughtClasses"
    schools = "schools"
    user = "user"

class Enum242(str, Enum):

    id = "id"
    related_contacts = "relatedContacts"
    primary_role = "primaryRole"
    middle_name = "middleName"
    external_source = "externalSource"
    residence_address = "residenceAddress"
    mailing_address = "mailingAddress"
    student = "student"
    teacher = "teacher"
    created_by = "createdBy"
    account_enabled = "accountEnabled"
    assigned_licenses = "assignedLicenses"
    assigned_plans = "assignedPlans"
    business_phones = "businessPhones"
    department = "department"
    display_name = "displayName"
    given_name = "givenName"
    mail = "mail"
    mail_nickname = "mailNickname"
    mobile_phone = "mobilePhone"
    password_policies = "passwordPolicies"
    password_profile = "passwordProfile"
    office_location = "officeLocation"
    preferred_language = "preferredLanguage"
    provisioned_plans = "provisionedPlans"
    refresh_tokens_valid_from_date_time = "refreshTokensValidFromDateTime"
    show_in_address_list = "showInAddressList"
    surname = "surname"
    usage_location = "usageLocation"
    user_principal_name = "userPrincipalName"
    user_type = "userType"
    on_premises_info = "onPremisesInfo"
    assignments = "assignments"
    rubrics = "rubrics"
    classes = "classes"
    taught_classes = "taughtClasses"
    schools = "schools"
    user = "user"

class Enum243(str, Enum):

    asterisk = "*"
    assignments = "assignments"
    rubrics = "rubrics"
    classes = "classes"
    taught_classes = "taughtClasses"
    schools = "schools"
    user = "user"

class Enum244(str, Enum):

    id = "id"
    id_desc = "id desc"
    class_id = "classId"
    class_id_desc = "classId desc"
    display_name = "displayName"
    display_name_desc = "displayName desc"
    instructions = "instructions"
    instructions_desc = "instructions desc"
    close_date_time = "closeDateTime"
    close_date_time_desc = "closeDateTime desc"
    due_date_time = "dueDateTime"
    due_date_time_desc = "dueDateTime desc"
    assign_date_time = "assignDateTime"
    assign_date_time_desc = "assignDateTime desc"
    assigned_date_time = "assignedDateTime"
    assigned_date_time_desc = "assignedDateTime desc"
    grading = "grading"
    grading_desc = "grading desc"
    assign_to = "assignTo"
    assign_to_desc = "assignTo desc"
    allow_late_submissions = "allowLateSubmissions"
    allow_late_submissions_desc = "allowLateSubmissions desc"
    created_date_time = "createdDateTime"
    created_date_time_desc = "createdDateTime desc"
    created_by = "createdBy"
    created_by_desc = "createdBy desc"
    last_modified_date_time = "lastModifiedDateTime"
    last_modified_date_time_desc = "lastModifiedDateTime desc"
    last_modified_by = "lastModifiedBy"
    last_modified_by_desc = "lastModifiedBy desc"
    allow_students_to_add_resources_to_submission = "allowStudentsToAddResourcesToSubmission"
    allow_students_to_add_resources_to_submission_desc = "allowStudentsToAddResourcesToSubmission desc"
    status = "status"
    status_desc = "status desc"

class Enum245(str, Enum):

    id = "id"
    class_id = "classId"
    display_name = "displayName"
    instructions = "instructions"
    close_date_time = "closeDateTime"
    due_date_time = "dueDateTime"
    assign_date_time = "assignDateTime"
    assigned_date_time = "assignedDateTime"
    grading = "grading"
    assign_to = "assignTo"
    allow_late_submissions = "allowLateSubmissions"
    created_date_time = "createdDateTime"
    created_by = "createdBy"
    last_modified_date_time = "lastModifiedDateTime"
    last_modified_by = "lastModifiedBy"
    allow_students_to_add_resources_to_submission = "allowStudentsToAddResourcesToSubmission"
    status = "status"
    resources = "resources"
    submissions = "submissions"
    categories = "categories"
    rubric = "rubric"

class Enum246(str, Enum):

    asterisk = "*"
    resources = "resources"
    submissions = "submissions"
    categories = "categories"
    rubric = "rubric"

class Enum247(str, Enum):

    id = "id"
    class_id = "classId"
    display_name = "displayName"
    instructions = "instructions"
    close_date_time = "closeDateTime"
    due_date_time = "dueDateTime"
    assign_date_time = "assignDateTime"
    assigned_date_time = "assignedDateTime"
    grading = "grading"
    assign_to = "assignTo"
    allow_late_submissions = "allowLateSubmissions"
    created_date_time = "createdDateTime"
    created_by = "createdBy"
    last_modified_date_time = "lastModifiedDateTime"
    last_modified_by = "lastModifiedBy"
    allow_students_to_add_resources_to_submission = "allowStudentsToAddResourcesToSubmission"
    status = "status"
    resources = "resources"
    submissions = "submissions"
    categories = "categories"
    rubric = "rubric"

class Enum248(str, Enum):

    asterisk = "*"
    resources = "resources"
    submissions = "submissions"
    categories = "categories"
    rubric = "rubric"

class Enum249(str, Enum):

    id = "id"
    id_desc = "id desc"
    display_name = "displayName"
    display_name_desc = "displayName desc"

class Enum250(str, Enum):

    id = "id"
    display_name = "displayName"

class Enum251(str, Enum):

    id = "id"
    display_name = "displayName"

class Enum252(str, Enum):

    id = "id"
    id_desc = "id desc"
    distribute_for_student_work = "distributeForStudentWork"
    distribute_for_student_work_desc = "distributeForStudentWork desc"
    resource = "resource"
    resource_desc = "resource desc"

class Enum253(str, Enum):

    id = "id"
    distribute_for_student_work = "distributeForStudentWork"
    resource = "resource"

class Enum254(str, Enum):

    id = "id"
    distribute_for_student_work = "distributeForStudentWork"
    resource = "resource"

class Enum255(str, Enum):

    id = "id"
    display_name = "displayName"
    description = "description"
    qualities = "qualities"
    levels = "levels"
    grading = "grading"
    created_date_time = "createdDateTime"
    created_by = "createdBy"
    last_modified_date_time = "lastModifiedDateTime"
    last_modified_by = "lastModifiedBy"

class Enum256(str, Enum):

    id = "id"
    id_desc = "id desc"
    recipient = "recipient"
    recipient_desc = "recipient desc"
    status = "status"
    status_desc = "status desc"
    submitted_by = "submittedBy"
    submitted_by_desc = "submittedBy desc"
    submitted_date_time = "submittedDateTime"
    submitted_date_time_desc = "submittedDateTime desc"
    unsubmitted_by = "unsubmittedBy"
    unsubmitted_by_desc = "unsubmittedBy desc"
    unsubmitted_date_time = "unsubmittedDateTime"
    unsubmitted_date_time_desc = "unsubmittedDateTime desc"
    released_by = "releasedBy"
    released_by_desc = "releasedBy desc"
    released_date_time = "releasedDateTime"
    released_date_time_desc = "releasedDateTime desc"
    returned_by = "returnedBy"
    returned_by_desc = "returnedBy desc"
    returned_date_time = "returnedDateTime"
    returned_date_time_desc = "returnedDateTime desc"
    resources_folder_url = "resourcesFolderUrl"
    resources_folder_url_desc = "resourcesFolderUrl desc"

class Enum257(str, Enum):

    id = "id"
    recipient = "recipient"
    status = "status"
    submitted_by = "submittedBy"
    submitted_date_time = "submittedDateTime"
    unsubmitted_by = "unsubmittedBy"
    unsubmitted_date_time = "unsubmittedDateTime"
    released_by = "releasedBy"
    released_date_time = "releasedDateTime"
    returned_by = "returnedBy"
    returned_date_time = "returnedDateTime"
    resources_folder_url = "resourcesFolderUrl"
    resources = "resources"
    submitted_resources = "submittedResources"
    outcomes = "outcomes"

class Enum258(str, Enum):

    asterisk = "*"
    resources = "resources"
    submitted_resources = "submittedResources"
    outcomes = "outcomes"

class Enum259(str, Enum):

    id = "id"
    recipient = "recipient"
    status = "status"
    submitted_by = "submittedBy"
    submitted_date_time = "submittedDateTime"
    unsubmitted_by = "unsubmittedBy"
    unsubmitted_date_time = "unsubmittedDateTime"
    released_by = "releasedBy"
    released_date_time = "releasedDateTime"
    returned_by = "returnedBy"
    returned_date_time = "returnedDateTime"
    resources_folder_url = "resourcesFolderUrl"
    resources = "resources"
    submitted_resources = "submittedResources"
    outcomes = "outcomes"

class Enum260(str, Enum):

    asterisk = "*"
    resources = "resources"
    submitted_resources = "submittedResources"
    outcomes = "outcomes"

class Enum261(str, Enum):

    id = "id"
    id_desc = "id desc"
    last_modified_by = "lastModifiedBy"
    last_modified_by_desc = "lastModifiedBy desc"
    last_modified_date_time = "lastModifiedDateTime"
    last_modified_date_time_desc = "lastModifiedDateTime desc"

class Enum262(str, Enum):

    id = "id"
    last_modified_by = "lastModifiedBy"
    last_modified_date_time = "lastModifiedDateTime"

class Enum263(str, Enum):

    id = "id"
    last_modified_by = "lastModifiedBy"
    last_modified_date_time = "lastModifiedDateTime"

class Enum264(str, Enum):

    id = "id"
    id_desc = "id desc"
    resource = "resource"
    resource_desc = "resource desc"
    assignment_resource_url = "assignmentResourceUrl"
    assignment_resource_url_desc = "assignmentResourceUrl desc"

class Enum265(str, Enum):

    id = "id"
    resource = "resource"
    assignment_resource_url = "assignmentResourceUrl"

class Enum266(str, Enum):

    id = "id"
    resource = "resource"
    assignment_resource_url = "assignmentResourceUrl"

class Enum267(str, Enum):

    id = "id"
    id_desc = "id desc"
    resource = "resource"
    resource_desc = "resource desc"
    assignment_resource_url = "assignmentResourceUrl"
    assignment_resource_url_desc = "assignmentResourceUrl desc"

class Enum268(str, Enum):

    id = "id"
    resource = "resource"
    assignment_resource_url = "assignmentResourceUrl"

class Enum269(str, Enum):

    id = "id"
    resource = "resource"
    assignment_resource_url = "assignmentResourceUrl"

class Enum270(str, Enum):

    id = "id"
    id_desc = "id desc"
    display_name = "displayName"
    display_name_desc = "displayName desc"
    mail_nickname = "mailNickname"
    mail_nickname_desc = "mailNickname desc"
    description = "description"
    description_desc = "description desc"
    created_by = "createdBy"
    created_by_desc = "createdBy desc"
    class_code = "classCode"
    class_code_desc = "classCode desc"
    external_name = "externalName"
    external_name_desc = "externalName desc"
    external_id = "externalId"
    external_id_desc = "externalId desc"
    external_source = "externalSource"
    external_source_desc = "externalSource desc"
    grade = "grade"
    grade_desc = "grade desc"
    term = "term"
    term_desc = "term desc"
    course = "course"
    course_desc = "course desc"

class Enum271(str, Enum):

    id = "id"
    display_name = "displayName"
    mail_nickname = "mailNickname"
    description = "description"
    created_by = "createdBy"
    class_code = "classCode"
    external_name = "externalName"
    external_id = "externalId"
    external_source = "externalSource"
    grade = "grade"
    term = "term"
    course = "course"
    assignments = "assignments"
    assignment_categories = "assignmentCategories"
    members = "members"
    teachers = "teachers"
    schools = "schools"
    group = "group"

class Enum272(str, Enum):

    asterisk = "*"
    assignments = "assignments"
    assignment_categories = "assignmentCategories"
    members = "members"
    teachers = "teachers"
    schools = "schools"
    group = "group"

class Enum273(str, Enum):

    id = "id"
    display_name = "displayName"
    mail_nickname = "mailNickname"
    description = "description"
    created_by = "createdBy"
    class_code = "classCode"
    external_name = "externalName"
    external_id = "externalId"
    external_source = "externalSource"
    grade = "grade"
    term = "term"
    course = "course"
    assignments = "assignments"
    assignment_categories = "assignmentCategories"
    members = "members"
    teachers = "teachers"
    schools = "schools"
    group = "group"

class Enum274(str, Enum):

    asterisk = "*"
    assignments = "assignments"
    assignment_categories = "assignmentCategories"
    members = "members"
    teachers = "teachers"
    schools = "schools"
    group = "group"

class Enum275(str, Enum):

    id = "id"
    id_desc = "id desc"
    display_name = "displayName"
    display_name_desc = "displayName desc"
    description = "description"
    description_desc = "description desc"
    qualities = "qualities"
    qualities_desc = "qualities desc"
    levels = "levels"
    levels_desc = "levels desc"
    grading = "grading"
    grading_desc = "grading desc"
    created_date_time = "createdDateTime"
    created_date_time_desc = "createdDateTime desc"
    created_by = "createdBy"
    created_by_desc = "createdBy desc"
    last_modified_date_time = "lastModifiedDateTime"
    last_modified_date_time_desc = "lastModifiedDateTime desc"
    last_modified_by = "lastModifiedBy"
    last_modified_by_desc = "lastModifiedBy desc"

class Enum276(str, Enum):

    id = "id"
    display_name = "displayName"
    description = "description"
    qualities = "qualities"
    levels = "levels"
    grading = "grading"
    created_date_time = "createdDateTime"
    created_by = "createdBy"
    last_modified_date_time = "lastModifiedDateTime"
    last_modified_by = "lastModifiedBy"

class Enum277(str, Enum):

    id = "id"
    display_name = "displayName"
    description = "description"
    qualities = "qualities"
    levels = "levels"
    grading = "grading"
    created_date_time = "createdDateTime"
    created_by = "createdBy"
    last_modified_date_time = "lastModifiedDateTime"
    last_modified_by = "lastModifiedBy"

class Enum278(str, Enum):

    id = "id"
    id_desc = "id desc"
    display_name = "displayName"
    display_name_desc = "displayName desc"
    description = "description"
    description_desc = "description desc"
    external_source = "externalSource"
    external_source_desc = "externalSource desc"
    principal_email = "principalEmail"
    principal_email_desc = "principalEmail desc"
    principal_name = "principalName"
    principal_name_desc = "principalName desc"
    external_principal_id = "externalPrincipalId"
    external_principal_id_desc = "externalPrincipalId desc"
    lowest_grade = "lowestGrade"
    lowest_grade_desc = "lowestGrade desc"
    highest_grade = "highestGrade"
    highest_grade_desc = "highestGrade desc"
    school_number = "schoolNumber"
    school_number_desc = "schoolNumber desc"
    external_id = "externalId"
    external_id_desc = "externalId desc"
    phone = "phone"
    phone_desc = "phone desc"
    fax = "fax"
    fax_desc = "fax desc"
    created_by = "createdBy"
    created_by_desc = "createdBy desc"
    address = "address"
    address_desc = "address desc"

class Enum279(str, Enum):

    id = "id"
    display_name = "displayName"
    description = "description"
    external_source = "externalSource"
    principal_email = "principalEmail"
    principal_name = "principalName"
    external_principal_id = "externalPrincipalId"
    lowest_grade = "lowestGrade"
    highest_grade = "highestGrade"
    school_number = "schoolNumber"
    external_id = "externalId"
    phone = "phone"
    fax = "fax"
    created_by = "createdBy"
    address = "address"
    classes = "classes"
    users = "users"
    administrative_unit = "administrativeUnit"

class Enum280(str, Enum):

    asterisk = "*"
    classes = "classes"
    users = "users"
    administrative_unit = "administrativeUnit"

class Enum281(str, Enum):

    id = "id"
    display_name = "displayName"
    description = "description"
    external_source = "externalSource"
    principal_email = "principalEmail"
    principal_name = "principalName"
    external_principal_id = "externalPrincipalId"
    lowest_grade = "lowestGrade"
    highest_grade = "highestGrade"
    school_number = "schoolNumber"
    external_id = "externalId"
    phone = "phone"
    fax = "fax"
    created_by = "createdBy"
    address = "address"
    classes = "classes"
    users = "users"
    administrative_unit = "administrativeUnit"

class Enum282(str, Enum):

    asterisk = "*"
    classes = "classes"
    users = "users"
    administrative_unit = "administrativeUnit"

class Enum283(str, Enum):

    id = "id"
    id_desc = "id desc"
    display_name = "displayName"
    display_name_desc = "displayName desc"
    mail_nickname = "mailNickname"
    mail_nickname_desc = "mailNickname desc"
    description = "description"
    description_desc = "description desc"
    created_by = "createdBy"
    created_by_desc = "createdBy desc"
    class_code = "classCode"
    class_code_desc = "classCode desc"
    external_name = "externalName"
    external_name_desc = "externalName desc"
    external_id = "externalId"
    external_id_desc = "externalId desc"
    external_source = "externalSource"
    external_source_desc = "externalSource desc"
    grade = "grade"
    grade_desc = "grade desc"
    term = "term"
    term_desc = "term desc"
    course = "course"
    course_desc = "course desc"

class Enum284(str, Enum):

    id = "id"
    display_name = "displayName"
    mail_nickname = "mailNickname"
    description = "description"
    created_by = "createdBy"
    class_code = "classCode"
    external_name = "externalName"
    external_id = "externalId"
    external_source = "externalSource"
    grade = "grade"
    term = "term"
    course = "course"
    assignments = "assignments"
    assignment_categories = "assignmentCategories"
    members = "members"
    teachers = "teachers"
    schools = "schools"
    group = "group"

class Enum285(str, Enum):

    asterisk = "*"
    assignments = "assignments"
    assignment_categories = "assignmentCategories"
    members = "members"
    teachers = "teachers"
    schools = "schools"
    group = "group"

class Enum286(str, Enum):

    id = "id"
    display_name = "displayName"
    mail_nickname = "mailNickname"
    description = "description"
    created_by = "createdBy"
    class_code = "classCode"
    external_name = "externalName"
    external_id = "externalId"
    external_source = "externalSource"
    grade = "grade"
    term = "term"
    course = "course"
    assignments = "assignments"
    assignment_categories = "assignmentCategories"
    members = "members"
    teachers = "teachers"
    schools = "schools"
    group = "group"

class Enum287(str, Enum):

    asterisk = "*"
    assignments = "assignments"
    assignment_categories = "assignmentCategories"
    members = "members"
    teachers = "teachers"
    schools = "schools"
    group = "group"

class Enum288(str, Enum):

    id = "id"
    deleted_date_time = "deletedDateTime"
    sign_in_activity = "signInActivity"
    account_enabled = "accountEnabled"
    age_group = "ageGroup"
    assigned_licenses = "assignedLicenses"
    assigned_plans = "assignedPlans"
    business_phones = "businessPhones"
    city = "city"
    company_name = "companyName"
    consent_provided_for_minor = "consentProvidedForMinor"
    country = "country"
    created_date_time = "createdDateTime"
    creation_type = "creationType"
    department = "department"
    device_keys = "deviceKeys"
    display_name = "displayName"
    employee_id = "employeeId"
    fax_number = "faxNumber"
    given_name = "givenName"
    identities = "identities"
    im_addresses = "imAddresses"
    is_resource_account = "isResourceAccount"
    job_title = "jobTitle"
    last_password_change_date_time = "lastPasswordChangeDateTime"
    legal_age_group_classification = "legalAgeGroupClassification"
    license_assignment_states = "licenseAssignmentStates"
    mail = "mail"
    mail_nickname = "mailNickname"
    mobile_phone = "mobilePhone"
    on_premises_distinguished_name = "onPremisesDistinguishedName"
    on_premises_extension_attributes = "onPremisesExtensionAttributes"
    on_premises_immutable_id = "onPremisesImmutableId"
    on_premises_last_sync_date_time = "onPremisesLastSyncDateTime"
    on_premises_provisioning_errors = "onPremisesProvisioningErrors"
    on_premises_security_identifier = "onPremisesSecurityIdentifier"
    on_premises_sync_enabled = "onPremisesSyncEnabled"
    on_premises_domain_name = "onPremisesDomainName"
    on_premises_sam_account_name = "onPremisesSamAccountName"
    on_premises_user_principal_name = "onPremisesUserPrincipalName"
    other_mails = "otherMails"
    password_policies = "passwordPolicies"
    password_profile = "passwordProfile"
    office_location = "officeLocation"
    postal_code = "postalCode"
    preferred_data_location = "preferredDataLocation"
    preferred_language = "preferredLanguage"
    provisioned_plans = "provisionedPlans"
    proxy_addresses = "proxyAddresses"
    refresh_tokens_valid_from_date_time = "refreshTokensValidFromDateTime"
    show_in_address_list = "showInAddressList"
    sign_in_sessions_valid_from_date_time = "signInSessionsValidFromDateTime"
    state = "state"
    street_address = "streetAddress"
    surname = "surname"
    usage_location = "usageLocation"
    user_principal_name = "userPrincipalName"
    external_user_state = "externalUserState"
    external_user_state_change_date_time = "externalUserStateChangeDateTime"
    user_type = "userType"
    mailbox_settings = "mailboxSettings"
    identity_user_risk = "identityUserRisk"
    device_enrollment_limit = "deviceEnrollmentLimit"
    about_me = "aboutMe"
    birthday = "birthday"
    hire_date = "hireDate"
    interests = "interests"
    my_site = "mySite"
    past_projects = "pastProjects"
    preferred_name = "preferredName"
    responsibilities = "responsibilities"
    schools = "schools"
    skills = "skills"
    analytics = "analytics"
    information_protection = "informationProtection"
    app_role_assignments = "appRoleAssignments"
    created_objects = "createdObjects"
    direct_reports = "directReports"
    license_details = "licenseDetails"
    manager = "manager"
    member_of = "memberOf"
    owned_devices = "ownedDevices"
    owned_objects = "ownedObjects"
    registered_devices = "registeredDevices"
    scoped_role_member_of = "scopedRoleMemberOf"
    transitive_member_of = "transitiveMemberOf"
    outlook = "outlook"
    messages = "messages"
    joined_groups = "joinedGroups"
    mail_folders = "mailFolders"
    calendar = "calendar"
    calendars = "calendars"
    calendar_groups = "calendarGroups"
    calendar_view = "calendarView"
    events = "events"
    people = "people"
    contacts = "contacts"
    contact_folders = "contactFolders"
    inference_classification = "inferenceClassification"
    photo = "photo"
    photos = "photos"
    drive = "drive"
    drives = "drives"
    followed_sites = "followedSites"
    extensions = "extensions"
    approvals = "approvals"
    app_consent_requests_for_approval = "appConsentRequestsForApproval"
    agreement_acceptances = "agreementAcceptances"
    device_enrollment_configurations = "deviceEnrollmentConfigurations"
    managed_devices = "managedDevices"
    managed_app_registrations = "managedAppRegistrations"
    windows_information_protection_device_registrations = "windowsInformationProtectionDeviceRegistrations"
    device_management_troubleshooting_events = "deviceManagementTroubleshootingEvents"
    mobile_app_intent_and_states = "mobileAppIntentAndStates"
    mobile_app_troubleshooting_events = "mobileAppTroubleshootingEvents"
    notifications = "notifications"
    planner = "planner"
    insights = "insights"
    settings = "settings"
    onenote = "onenote"
    profile = "profile"
    activities = "activities"
    devices = "devices"
    online_meetings = "onlineMeetings"
    presence = "presence"
    authentication = "authentication"
    chats = "chats"
    joined_teams = "joinedTeams"
    teamwork = "teamwork"

class Enum289(str, Enum):

    asterisk = "*"
    analytics = "analytics"
    information_protection = "informationProtection"
    app_role_assignments = "appRoleAssignments"
    created_objects = "createdObjects"
    direct_reports = "directReports"
    license_details = "licenseDetails"
    manager = "manager"
    member_of = "memberOf"
    owned_devices = "ownedDevices"
    owned_objects = "ownedObjects"
    registered_devices = "registeredDevices"
    scoped_role_member_of = "scopedRoleMemberOf"
    transitive_member_of = "transitiveMemberOf"
    outlook = "outlook"
    messages = "messages"
    joined_groups = "joinedGroups"
    mail_folders = "mailFolders"
    calendar = "calendar"
    calendars = "calendars"
    calendar_groups = "calendarGroups"
    calendar_view = "calendarView"
    events = "events"
    people = "people"
    contacts = "contacts"
    contact_folders = "contactFolders"
    inference_classification = "inferenceClassification"
    photo = "photo"
    photos = "photos"
    drive = "drive"
    drives = "drives"
    followed_sites = "followedSites"
    extensions = "extensions"
    approvals = "approvals"
    app_consent_requests_for_approval = "appConsentRequestsForApproval"
    agreement_acceptances = "agreementAcceptances"
    device_enrollment_configurations = "deviceEnrollmentConfigurations"
    managed_devices = "managedDevices"
    managed_app_registrations = "managedAppRegistrations"
    windows_information_protection_device_registrations = "windowsInformationProtectionDeviceRegistrations"
    device_management_troubleshooting_events = "deviceManagementTroubleshootingEvents"
    mobile_app_intent_and_states = "mobileAppIntentAndStates"
    mobile_app_troubleshooting_events = "mobileAppTroubleshootingEvents"
    notifications = "notifications"
    planner = "planner"
    insights = "insights"
    settings = "settings"
    onenote = "onenote"
    profile = "profile"
    activities = "activities"
    devices = "devices"
    online_meetings = "onlineMeetings"
    presence = "presence"
    authentication = "authentication"
    chats = "chats"
    joined_teams = "joinedTeams"
    teamwork = "teamwork"

class Get0ItemsItem(str, Enum):

    id = "id"
    synchronization_profiles = "synchronizationProfiles"
    classes = "classes"
    schools = "schools"
    users = "users"
    me = "me"

class Get1ItemsItem(str, Enum):

    asterisk = "*"
    synchronization_profiles = "synchronizationProfiles"
    classes = "classes"
    schools = "schools"
    users = "users"
    me = "me"

class Get2ItemsItem(str, Enum):

    asterisk = "*"
    assignments = "assignments"
    assignment_categories = "assignmentCategories"
    members = "members"
    teachers = "teachers"
    schools = "schools"
    group = "group"

class Get5ItemsItem(str, Enum):

    id = "id"
    id_desc = "id desc"
    display_name = "displayName"
    display_name_desc = "displayName desc"
    mail_nickname = "mailNickname"
    mail_nickname_desc = "mailNickname desc"
    description = "description"
    description_desc = "description desc"
    created_by = "createdBy"
    created_by_desc = "createdBy desc"
    class_code = "classCode"
    class_code_desc = "classCode desc"
    external_name = "externalName"
    external_name_desc = "externalName desc"
    external_id = "externalId"
    external_id_desc = "externalId desc"
    external_source = "externalSource"
    external_source_desc = "externalSource desc"
    grade = "grade"
    grade_desc = "grade desc"
    term = "term"
    term_desc = "term desc"
    course = "course"
    course_desc = "course desc"

class Get6ItemsItem(str, Enum):

    id = "id"
    display_name = "displayName"
    mail_nickname = "mailNickname"
    description = "description"
    created_by = "createdBy"
    class_code = "classCode"
    external_name = "externalName"
    external_id = "externalId"
    external_source = "externalSource"
    grade = "grade"
    term = "term"
    course = "course"
    assignments = "assignments"
    assignment_categories = "assignmentCategories"
    members = "members"
    teachers = "teachers"
    schools = "schools"
    group = "group"

class Get7ItemsItem(str, Enum):

    asterisk = "*"
    assignments = "assignments"
    assignment_categories = "assignmentCategories"
    members = "members"
    teachers = "teachers"
    schools = "schools"
    group = "group"

class MicrosoftGraphAccessLevel(str, Enum):

    everyone = "everyone"
    invited = "invited"
    locked = "locked"
    same_enterprise = "sameEnterprise"
    same_enterprise_and_federated = "sameEnterpriseAndFederated"

class MicrosoftGraphActionState(str, Enum):

    none = "none"
    pending = "pending"
    canceled = "canceled"
    active = "active"
    done = "done"
    failed = "failed"
    not_supported = "notSupported"

class MicrosoftGraphAgreementAcceptanceState(str, Enum):

    accepted = "accepted"
    declined = "declined"

class MicrosoftGraphAllowedAudiences(str, Enum):

    me = "me"
    family = "family"
    contacts = "contacts"
    group_members = "groupMembers"
    organization = "organization"
    federated_organizations = "federatedOrganizations"
    everyone = "everyone"
    unknown_future_value = "unknownFutureValue"

class MicrosoftGraphAnalyticsActivityType(str, Enum):

    email = "Email"
    meeting = "Meeting"
    focus = "Focus"
    chat = "Chat"
    call = "Call"

class MicrosoftGraphAnniversaryType(str, Enum):

    birthday = "birthday"
    wedding = "wedding"
    unknown_future_value = "unknownFutureValue"

class MicrosoftGraphApplicationMode(str, Enum):

    manual = "manual"
    automatic = "automatic"
    recommended = "recommended"

class MicrosoftGraphAppLogUploadState(str, Enum):

    pending = "pending"
    completed = "completed"
    failed = "failed"

class MicrosoftGraphAttendeeType(str, Enum):

    required = "required"
    optional = "optional"
    resource = "resource"

class MicrosoftGraphAuthenticationMethodSignInState(str, Enum):

    not_supported = "notSupported"
    not_allowed_by_policy = "notAllowedByPolicy"
    not_enabled = "notEnabled"
    phone_number_not_unique = "phoneNumberNotUnique"
    ready = "ready"
    not_configured = "notConfigured"
    unknown_future_value = "unknownFutureValue"

class MicrosoftGraphAuthenticationPhoneType(str, Enum):

    mobile = "mobile"
    alternate_mobile = "alternateMobile"
    office = "office"
    unknown_future_value = "unknownFutureValue"

class MicrosoftGraphAutomaticRepliesStatus(str, Enum):

    disabled = "disabled"
    always_enabled = "alwaysEnabled"
    scheduled = "scheduled"

class MicrosoftGraphBodyType(str, Enum):

    text = "text"
    html = "html"

class MicrosoftGraphCalendarColor(str, Enum):

    light_blue = "lightBlue"
    light_green = "lightGreen"
    light_orange = "lightOrange"
    light_gray = "lightGray"
    light_yellow = "lightYellow"
    light_teal = "lightTeal"
    light_pink = "lightPink"
    light_brown = "lightBrown"
    light_red = "lightRed"
    max_color = "maxColor"
    auto = "auto"

class MicrosoftGraphCalendarRoleType(str, Enum):

    none = "none"
    free_busy_read = "freeBusyRead"
    limited_read = "limitedRead"
    read = "read"
    write = "write"
    delegate_without_private_event_access = "delegateWithoutPrivateEventAccess"
    delegate_with_private_event_access = "delegateWithPrivateEventAccess"
    custom = "custom"

class MicrosoftGraphCategoryColor(str, Enum):

    preset0 = "preset0"
    preset1 = "preset1"
    preset2 = "preset2"
    preset3 = "preset3"
    preset4 = "preset4"
    preset5 = "preset5"
    preset6 = "preset6"
    preset7 = "preset7"
    preset8 = "preset8"
    preset9 = "preset9"
    preset10 = "preset10"
    preset11 = "preset11"
    preset12 = "preset12"
    preset13 = "preset13"
    preset14 = "preset14"
    preset15 = "preset15"
    preset16 = "preset16"
    preset17 = "preset17"
    preset18 = "preset18"
    preset19 = "preset19"
    preset20 = "preset20"
    preset21 = "preset21"
    preset22 = "preset22"
    preset23 = "preset23"
    preset24 = "preset24"
    none = "none"

class MicrosoftGraphChannelMembershipType(str, Enum):

    standard = "standard"
    private = "private"
    unknown_future_value = "unknownFutureValue"

class MicrosoftGraphChassisType(str, Enum):

    unknown = "unknown"
    desktop = "desktop"
    laptop = "laptop"
    works_workstation = "worksWorkstation"
    enterprise_server = "enterpriseServer"
    phone = "phone"
    tablet = "tablet"
    mobile_other = "mobileOther"
    mobile_unknown = "mobileUnknown"

class MicrosoftGraphChatMessageImportance(str, Enum):

    normal = "normal"
    high = "high"
    urgent = "urgent"

class MicrosoftGraphChatMessagePolicyViolationDlpActionTypes(str, Enum):

    none = "none"
    notify_sender = "notifySender"
    block_access = "blockAccess"
    block_access_external = "blockAccessExternal"

class MicrosoftGraphChatMessagePolicyViolationUserActionTypes(str, Enum):

    none = "none"
    override = "override"
    report_false_positive = "reportFalsePositive"

class MicrosoftGraphChatMessagePolicyViolationVerdictDetailsTypes(str, Enum):

    none = "none"
    allow_false_positive_override = "allowFalsePositiveOverride"
    allow_override_without_justification = "allowOverrideWithoutJustification"
    allow_override_with_justification = "allowOverrideWithJustification"

class MicrosoftGraphChatMessageType(str, Enum):

    message = "message"
    chat_event = "chatEvent"
    typing = "typing"

class MicrosoftGraphComplianceState(str, Enum):

    unknown = "unknown"
    compliant = "compliant"
    noncompliant = "noncompliant"
    conflict = "conflict"
    error = "error"
    in_grace_period = "inGracePeriod"
    config_manager = "configManager"

class MicrosoftGraphComplianceStatus(str, Enum):

    unknown = "unknown"
    not_applicable = "notApplicable"
    compliant = "compliant"
    remediated = "remediated"
    non_compliant = "nonCompliant"
    error = "error"
    conflict = "conflict"
    not_assigned = "notAssigned"

class MicrosoftGraphConfigurationManagerClientState(str, Enum):

    unknown = "unknown"
    installed = "installed"
    healthy = "healthy"
    install_failed = "installFailed"
    update_failed = "updateFailed"
    communication_error = "communicationError"

class MicrosoftGraphContactRelationship(str, Enum):

    parent = "parent"
    relative = "relative"
    aide = "aide"
    doctor = "doctor"
    guardian = "guardian"
    child = "child"
    other = "other"
    unknown_future_value = "unknownFutureValue"

class MicrosoftGraphDayOfWeek(str, Enum):

    sunday = "sunday"
    monday = "monday"
    tuesday = "tuesday"
    wednesday = "wednesday"
    thursday = "thursday"
    friday = "friday"
    saturday = "saturday"

class MicrosoftGraphDelegateMeetingMessageDeliveryOptions(str, Enum):

    send_to_delegate_and_information_to_principal = "sendToDelegateAndInformationToPrincipal"
    send_to_delegate_and_principal = "sendToDelegateAndPrincipal"
    send_to_delegate_only = "sendToDelegateOnly"

class MicrosoftGraphDeviceAndAppManagementAssignmentSource(str, Enum):

    direct = "direct"
    policy_sets = "policySets"

class MicrosoftGraphDeviceEnrollmentType(str, Enum):

    unknown = "unknown"
    user_enrollment = "userEnrollment"
    device_enrollment_manager = "deviceEnrollmentManager"
    apple_bulk_with_user = "appleBulkWithUser"
    apple_bulk_without_user = "appleBulkWithoutUser"
    windows_azure_ad_join = "windowsAzureADJoin"
    windows_bulk_userless = "windowsBulkUserless"
    windows_auto_enrollment = "windowsAutoEnrollment"
    windows_bulk_azure_domain_join = "windowsBulkAzureDomainJoin"
    windows_co_management = "windowsCoManagement"
    apple_user_enrollment = "appleUserEnrollment"
    apple_user_enrollment_with_service_account = "appleUserEnrollmentWithServiceAccount"
    azure_ad_join_using_azure_vm_extension = "azureAdJoinUsingAzureVmExtension"

class MicrosoftGraphDeviceGuardLocalSystemAuthorityCredentialGuardState(str, Enum):

    running = "running"
    reboot_required = "rebootRequired"
    not_licensed = "notLicensed"
    not_configured = "notConfigured"
    virtualization_based_security_not_running = "virtualizationBasedSecurityNotRunning"

class MicrosoftGraphDeviceGuardVirtualizationBasedSecurityHardwareRequirementState(str, Enum):

    meet_hardware_requirements = "meetHardwareRequirements"
    secure_boot_required = "secureBootRequired"
    dma_protection_required = "dmaProtectionRequired"
    hyper_v_not_supported_for_guest_vm = "hyperVNotSupportedForGuestVM"
    hyper_v_not_available = "hyperVNotAvailable"

class MicrosoftGraphDeviceGuardVirtualizationBasedSecurityState(str, Enum):

    running = "running"
    reboot_required = "rebootRequired"
    require64_bit_architecture = "require64BitArchitecture"
    not_licensed = "notLicensed"
    not_configured = "notConfigured"
    does_not_meet_hardware_requirements = "doesNotMeetHardwareRequirements"
    other = "other"

class MicrosoftGraphDeviceManagementExchangeAccessState(str, Enum):

    none = "none"
    unknown = "unknown"
    allowed = "allowed"
    blocked = "blocked"
    quarantined = "quarantined"

class MicrosoftGraphDeviceManagementExchangeAccessStateReason(str, Enum):

    none = "none"
    unknown = "unknown"
    exchange_global_rule = "exchangeGlobalRule"
    exchange_individual_rule = "exchangeIndividualRule"
    exchange_device_rule = "exchangeDeviceRule"
    exchange_upgrade = "exchangeUpgrade"
    exchange_mailbox_policy = "exchangeMailboxPolicy"
    other = "other"
    compliant = "compliant"
    not_compliant = "notCompliant"
    not_enrolled = "notEnrolled"
    unknown_location = "unknownLocation"
    mfa_required = "mfaRequired"
    azure_ad_block_due_to_access_policy = "azureADBlockDueToAccessPolicy"
    compromised_password = "compromisedPassword"
    device_not_known_with_managed_app = "deviceNotKnownWithManagedApp"

class MicrosoftGraphDeviceRegistrationState(str, Enum):

    not_registered = "notRegistered"
    registered = "registered"
    revoked = "revoked"
    key_conflict = "keyConflict"
    approval_pending = "approvalPending"
    certificate_reset = "certificateReset"
    not_registered_pending_enrollment = "notRegisteredPendingEnrollment"
    unknown = "unknown"

class MicrosoftGraphDeviceType(str, Enum):

    desktop = "desktop"
    windows_rt = "windowsRT"
    win_mo6 = "winMO6"
    nokia = "nokia"
    windows_phone = "windowsPhone"
    mac = "mac"
    win_ce = "winCE"
    win_embedded = "winEmbedded"
    i_phone = "iPhone"
    i_pad = "iPad"
    i_pod = "iPod"
    android = "android"
    i_soc_consumer = "iSocConsumer"
    unix = "unix"
    mac_mdm = "macMDM"
    holo_lens = "holoLens"
    surface_hub = "surfaceHub"
    android_for_work = "androidForWork"
    android_enterprise = "androidEnterprise"
    windows10_x = "windows10x"
    blackberry = "blackberry"
    palm = "palm"
    unknown = "unknown"

class MicrosoftGraphEducationAssignmentStatus(str, Enum):

    draft = "draft"
    published = "published"
    assigned = "assigned"
    unknown_future_value = "unknownFutureValue"

class MicrosoftGraphEducationExternalSource(str, Enum):

    sis = "sis"
    manual = "manual"
    unknown_future_value = "unknownFutureValue"

class MicrosoftGraphEducationGender(str, Enum):

    female = "female"
    male = "male"
    other = "other"
    unknown_future_value = "unknownFutureValue"

class MicrosoftGraphEducationSubmissionStatus(str, Enum):

    working = "working"
    submitted = "submitted"
    released = "released"
    returned = "returned"
    unknown_future_value = "unknownFutureValue"

class MicrosoftGraphEducationSynchronizationProfileState(str, Enum):

    deleting = "deleting"
    deletion_failed = "deletionFailed"
    provisioning_failed = "provisioningFailed"
    provisioned = "provisioned"
    provisioning = "provisioning"
    unknown_future_value = "unknownFutureValue"

class MicrosoftGraphEducationSynchronizationStatus(str, Enum):

    paused = "paused"
    in_progress = "inProgress"
    success = "success"
    error = "error"
    validation_error = "validationError"
    quarantined = "quarantined"
    unknown_future_value = "unknownFutureValue"

class MicrosoftGraphEducationUserRole(str, Enum):

    student = "student"
    teacher = "teacher"
    none = "none"
    unknown_future_value = "unknownFutureValue"
    faculty = "faculty"

class MicrosoftGraphEmailType(str, Enum):

    unknown = "unknown"
    work = "work"
    personal = "personal"
    main = "main"
    other = "other"

class MicrosoftGraphEventType(str, Enum):

    single_instance = "singleInstance"
    occurrence = "occurrence"
    exception = "exception"
    series_master = "seriesMaster"

class MicrosoftGraphExternalAudienceScope(str, Enum):

    none = "none"
    contacts_only = "contactsOnly"
    all = "all"

class MicrosoftGraphFollowupFlagStatus(str, Enum):

    not_flagged = "notFlagged"
    complete = "complete"
    flagged = "flagged"

class MicrosoftGraphFreeBusyStatus(str, Enum):

    free = "free"
    tentative = "tentative"
    busy = "busy"
    oof = "oof"
    working_elsewhere = "workingElsewhere"
    unknown = "unknown"

class MicrosoftGraphGiphyRatingType(str, Enum):

    strict = "strict"
    moderate = "moderate"
    unknown_future_value = "unknownFutureValue"

class MicrosoftGraphGroupAccessType(str, Enum):

    none = "none"
    private = "private"
    secret = "secret"
    public = "public"

class MicrosoftGraphImportance(str, Enum):

    low = "low"
    normal = "normal"
    high = "high"

class MicrosoftGraphInferenceClassificationType(str, Enum):

    focused = "focused"
    other = "other"

class MicrosoftGraphLanguageProficiencyLevel(str, Enum):

    elementary = "elementary"
    conversational = "conversational"
    limited_working = "limitedWorking"
    professional_working = "professionalWorking"
    full_professional = "fullProfessional"
    native_or_bilingual = "nativeOrBilingual"
    unknown_future_value = "unknownFutureValue"

class MicrosoftGraphLocationType(str, Enum):

    default = "default"
    conference_room = "conferenceRoom"
    home_address = "homeAddress"
    business_address = "businessAddress"
    geo_coordinates = "geoCoordinates"
    street_address = "streetAddress"
    hotel = "hotel"
    restaurant = "restaurant"
    local_business = "localBusiness"
    postal_address = "postalAddress"

class MicrosoftGraphLocationUniqueIdType(str, Enum):

    unknown = "unknown"
    location_store = "locationStore"
    directory = "directory"
    private = "private"
    bing = "bing"

class MicrosoftGraphLongRunningOperationStatus(str, Enum):

    notstarted = "notstarted"
    running = "running"
    succeeded = "succeeded"
    failed = "failed"

class MicrosoftGraphLostModeState(str, Enum):

    disabled = "disabled"
    enabled = "enabled"

class MicrosoftGraphManagedAppFlaggedReason(str, Enum):

    none = "none"
    rooted_device = "rootedDevice"
    android_bootloader_unlocked = "androidBootloaderUnlocked"
    android_factory_rom_modified = "androidFactoryRomModified"

class MicrosoftGraphManagedDeviceArchitecture(str, Enum):

    unknown = "unknown"
    x86 = "x86"
    x64 = "x64"
    arm = "arm"
    ar_m64 = "arM64"

class MicrosoftGraphManagedDeviceOwnerType(str, Enum):

    unknown = "unknown"
    company = "company"
    personal = "personal"

class MicrosoftGraphManagedDevicePartnerReportedHealthState(str, Enum):

    unknown = "unknown"
    activated = "activated"
    deactivated = "deactivated"
    secured = "secured"
    low_severity = "lowSeverity"
    medium_severity = "mediumSeverity"
    high_severity = "highSeverity"
    unresponsive = "unresponsive"
    compromised = "compromised"
    misconfigured = "misconfigured"

class MicrosoftGraphManagementAgentType(str, Enum):

    eas = "eas"
    mdm = "mdm"
    eas_mdm = "easMdm"
    intune_client = "intuneClient"
    eas_intune_client = "easIntuneClient"
    configuration_manager_client = "configurationManagerClient"
    configuration_manager_client_mdm = "configurationManagerClientMdm"
    configuration_manager_client_mdm_eas = "configurationManagerClientMdmEas"
    unknown = "unknown"
    jamf = "jamf"
    google_cloud_device_policy_controller = "googleCloudDevicePolicyController"
    microsoft365_managed_mdm = "microsoft365ManagedMdm"
    windows_management_cloud_api = "windowsManagementCloudApi"

class MicrosoftGraphManagementState(str, Enum):

    managed = "managed"
    retire_pending = "retirePending"
    retire_failed = "retireFailed"
    wipe_pending = "wipePending"
    wipe_failed = "wipeFailed"
    unhealthy = "unhealthy"
    delete_pending = "deletePending"
    retire_issued = "retireIssued"
    wipe_issued = "wipeIssued"
    wipe_canceled = "wipeCanceled"
    retire_canceled = "retireCanceled"
    discovered = "discovered"

class MicrosoftGraphMeetingCapabilities(str, Enum):

    question_and_answer = "questionAndAnswer"
    unknown_future_value = "unknownFutureValue"

class MicrosoftGraphMessageActionFlag(str, Enum):

    any = "any"
    call = "call"
    do_not_forward = "doNotForward"
    follow_up = "followUp"
    fyi = "fyi"
    forward = "forward"
    no_response_necessary = "noResponseNecessary"
    read = "read"
    reply = "reply"
    reply_to_all = "replyToAll"
    review = "review"

class MicrosoftGraphMobileAppIntent(str, Enum):

    available = "available"
    not_available = "notAvailable"
    required_install = "requiredInstall"
    required_uninstall = "requiredUninstall"
    required_and_available_install = "requiredAndAvailableInstall"
    available_install_without_enrollment = "availableInstallWithoutEnrollment"
    exclude = "exclude"

class MicrosoftGraphOnenoteUserRole(str, Enum):

    owner = "Owner"
    contributor = "Contributor"
    reader = "Reader"
    none = "None"

class MicrosoftGraphOnlineMeetingProviderType(str, Enum):

    unknown = "unknown"
    skype_for_business = "skypeForBusiness"
    skype_for_consumer = "skypeForConsumer"
    teams_for_business = "teamsForBusiness"

class MicrosoftGraphOperationStatus(str, Enum):

    not_started = "NotStarted"
    running = "Running"
    completed = "Completed"
    failed = "Failed"

class MicrosoftGraphOwnerType(str, Enum):

    unknown = "unknown"
    company = "company"
    personal = "personal"

class MicrosoftGraphPersonRelationship(str, Enum):

    manager = "manager"
    colleague = "colleague"
    direct_report = "directReport"
    dot_line_report = "dotLineReport"
    assistant = "assistant"
    dot_line_manager = "dotLineManager"
    alternate_contact = "alternateContact"
    friend = "friend"
    spouse = "spouse"
    sibling = "sibling"
    child = "child"
    parent = "parent"
    sponsor = "sponsor"
    emergency_contact = "emergencyContact"
    other = "other"
    unknown_future_value = "unknownFutureValue"

class MicrosoftGraphPhoneType(str, Enum):

    home = "home"
    business = "business"
    mobile = "mobile"
    other = "other"
    assistant = "assistant"
    home_fax = "homeFax"
    business_fax = "businessFax"
    other_fax = "otherFax"
    pager = "pager"
    radio = "radio"

class MicrosoftGraphPhysicalAddressType(str, Enum):

    unknown = "unknown"
    home = "home"
    business = "business"
    other = "other"

class MicrosoftGraphPlannerPreviewType(str, Enum):

    automatic = "automatic"
    no_preview = "noPreview"
    checklist = "checklist"
    description = "description"
    reference = "reference"

class MicrosoftGraphPolicyPlatformType(str, Enum):

    android = "android"
    android_for_work = "androidForWork"
    i_os = "iOS"
    mac_os = "macOS"
    windows_phone81 = "windowsPhone81"
    windows81_and_later = "windows81AndLater"
    windows10_and_later = "windows10AndLater"
    android_work_profile = "androidWorkProfile"
    windows10_x_profile = "windows10XProfile"
    all = "all"

class MicrosoftGraphPriority(str, Enum):

    none = "None"
    high = "High"
    low = "Low"

class MicrosoftGraphRecurrencePatternType(str, Enum):

    daily = "daily"
    weekly = "weekly"
    absolute_monthly = "absoluteMonthly"
    relative_monthly = "relativeMonthly"
    absolute_yearly = "absoluteYearly"
    relative_yearly = "relativeYearly"

class MicrosoftGraphRecurrenceRangeType(str, Enum):

    end_date = "endDate"
    no_end = "noEnd"
    numbered = "numbered"

class MicrosoftGraphResponseType(str, Enum):

    none = "none"
    organizer = "organizer"
    tentatively_accepted = "tentativelyAccepted"
    accepted = "accepted"
    declined = "declined"
    not_responded = "notResponded"

class MicrosoftGraphResultantAppState(str, Enum):

    installed = "installed"
    failed = "failed"
    not_installed = "notInstalled"
    uninstall_failed = "uninstallFailed"
    pending_install = "pendingInstall"
    unknown = "unknown"
    not_applicable = "notApplicable"

class MicrosoftGraphScheduleChangeRequestActor(str, Enum):

    sender = "sender"
    recipient = "recipient"
    manager = "manager"
    system = "system"
    unknown_future_value = "unknownFutureValue"

class MicrosoftGraphScheduleChangeState(str, Enum):

    pending = "pending"
    approved = "approved"
    declined = "declined"
    unknown_future_value = "unknownFutureValue"

class MicrosoftGraphScheduleEntityTheme(str, Enum):

    white = "white"
    blue = "blue"
    green = "green"
    purple = "purple"
    pink = "pink"
    yellow = "yellow"
    gray = "gray"
    dark_blue = "darkBlue"
    dark_green = "darkGreen"
    dark_purple = "darkPurple"
    dark_pink = "darkPink"
    dark_yellow = "darkYellow"
    unknown_future_value = "unknownFutureValue"

class MicrosoftGraphSecurityBaselineComplianceState(str, Enum):

    unknown = "unknown"
    secure = "secure"
    not_applicable = "notApplicable"
    not_secure = "notSecure"
    error = "error"
    conflict = "conflict"

class MicrosoftGraphSensitivity(str, Enum):

    normal = "normal"
    personal = "personal"
    private = "private"
    confidential = "confidential"

class MicrosoftGraphSensitivityLabelTarget(str, Enum):

    email = "email"
    site = "site"
    unified_group = "unifiedGroup"
    unknown_future_value = "unknownFutureValue"

class MicrosoftGraphSkillProficiencyLevel(str, Enum):

    elementary = "elementary"
    limited_working = "limitedWorking"
    general_professional = "generalProfessional"
    advanced_professional = "advancedProfessional"
    expert = "expert"
    unknown_future_value = "unknownFutureValue"

class MicrosoftGraphStatus(str, Enum):

    active = "active"
    updated = "updated"
    deleted = "deleted"
    ignored = "ignored"
    unknown_future_value = "unknownFutureValue"

class MicrosoftGraphTaskStatus(str, Enum):

    not_started = "notStarted"
    in_progress = "inProgress"
    completed = "completed"
    waiting_on_others = "waitingOnOthers"
    deferred = "deferred"

class MicrosoftGraphTeamsAppDistributionMethod(str, Enum):

    store = "store"
    organization = "organization"
    sideloaded = "sideloaded"
    unknown_future_value = "unknownFutureValue"

class MicrosoftGraphTeamsAsyncOperationStatus(str, Enum):

    invalid = "invalid"
    not_started = "notStarted"
    in_progress = "inProgress"
    succeeded = "succeeded"
    failed = "failed"
    unknown_future_value = "unknownFutureValue"

class MicrosoftGraphTeamsAsyncOperationType(str, Enum):

    invalid = "invalid"
    clone_team = "cloneTeam"
    archive_team = "archiveTeam"
    unarchive_team = "unarchiveTeam"
    create_team = "createTeam"
    unknown_future_value = "unknownFutureValue"

class MicrosoftGraphTeamSpecialization(str, Enum):

    none = "none"
    education_standard = "educationStandard"
    education_class = "educationClass"
    education_professional_learning_community = "educationProfessionalLearningCommunity"
    education_staff = "educationStaff"
    healthcare_standard = "healthcareStandard"
    healthcare_care_coordination = "healthcareCareCoordination"
    unknown_future_value = "unknownFutureValue"

class MicrosoftGraphTeamVisibilityType(str, Enum):

    private = "private"
    public = "public"
    hidden_membership = "hiddenMembership"
    unknown_future_value = "unknownFutureValue"

class MicrosoftGraphThreatAssessmentContentType(str, Enum):

    mail = "mail"
    url = "url"
    file = "file"

class MicrosoftGraphThreatAssessmentRequestSource(str, Enum):

    undefined = "undefined"
    user = "user"
    administrator = "administrator"

class MicrosoftGraphThreatAssessmentResultType(str, Enum):

    check_policy = "checkPolicy"
    rescan = "rescan"
    unknown_future_value = "unknownFutureValue"

class MicrosoftGraphThreatAssessmentStatus(str, Enum):

    pending = "pending"
    completed = "completed"

class MicrosoftGraphThreatCategory(str, Enum):

    undefined = "undefined"
    spam = "spam"
    phishing = "phishing"
    malware = "malware"
    unknown_future_value = "unknownFutureValue"

class MicrosoftGraphThreatExpectedAssessment(str, Enum):

    block = "block"
    unblock = "unblock"

class MicrosoftGraphTimeOffReasonIconType(str, Enum):

    none = "none"
    car = "car"
    calendar = "calendar"
    running = "running"
    plane = "plane"
    first_aid = "firstAid"
    doctor = "doctor"
    not_working = "notWorking"
    clock = "clock"
    jury_duty = "juryDuty"
    globe = "globe"
    cup = "cup"
    phone = "phone"
    weather = "weather"
    umbrella = "umbrella"
    piggy_bank = "piggyBank"
    dog = "dog"
    cake = "cake"
    traffic_cone = "trafficCone"
    pin = "pin"
    sunny = "sunny"
    unknown_future_value = "unknownFutureValue"

class MicrosoftGraphUserRiskLevel(str, Enum):

    unknown = "unknown"
    none = "none"
    low = "low"
    medium = "medium"
    high = "high"

class MicrosoftGraphWebsiteType(str, Enum):

    other = "other"
    home = "home"
    work = "work"
    blog = "blog"
    profile = "profile"

class MicrosoftGraphWeekIndex(str, Enum):

    first = "first"
    second = "second"
    third = "third"
    fourth = "fourth"
    last = "last"

class MicrosoftGraphWindowsDeviceHealthState(str, Enum):

    clean = "clean"
    full_scan_pending = "fullScanPending"
    reboot_pending = "rebootPending"
    manual_steps_pending = "manualStepsPending"
    offline_scan_pending = "offlineScanPending"
    critical = "critical"

class MicrosoftGraphWindowsMalwareCategory(str, Enum):

    invalid = "invalid"
    adware = "adware"
    spyware = "spyware"
    password_stealer = "passwordStealer"
    trojan_downloader = "trojanDownloader"
    worm = "worm"
    backdoor = "backdoor"
    remote_access_trojan = "remoteAccessTrojan"
    trojan = "trojan"
    email_flooder = "emailFlooder"
    keylogger = "keylogger"
    dialer = "dialer"
    monitoring_software = "monitoringSoftware"
    browser_modifier = "browserModifier"
    cookie = "cookie"
    browser_plugin = "browserPlugin"
    aol_exploit = "aolExploit"
    nuker = "nuker"
    security_disabler = "securityDisabler"
    joke_program = "jokeProgram"
    hostile_active_x_control = "hostileActiveXControl"
    software_bundler = "softwareBundler"
    stealth_notifier = "stealthNotifier"
    settings_modifier = "settingsModifier"
    tool_bar = "toolBar"
    remote_control_software = "remoteControlSoftware"
    trojan_ftp = "trojanFtp"
    potential_unwanted_software = "potentialUnwantedSoftware"
    icq_exploit = "icqExploit"
    trojan_telnet = "trojanTelnet"
    exploit = "exploit"
    filesharing_program = "filesharingProgram"
    malware_creation_tool = "malwareCreationTool"
    tool = "tool"
    trojan_denial_of_service = "trojanDenialOfService"
    trojan_dropper = "trojanDropper"
    trojan_mass_mailer = "trojanMassMailer"
    trojan_monitoring_software = "trojanMonitoringSoftware"
    trojan_proxy_server = "trojanProxyServer"
    virus = "virus"
    known = "known"
    unknown = "unknown"
    spp = "spp"
    behavior = "behavior"
    vulnerability = "vulnerability"
    policy = "policy"
    enterprise_unwanted_software = "enterpriseUnwantedSoftware"
    ransom = "ransom"
    hips_rule = "hipsRule"

class MicrosoftGraphWindowsMalwareExecutionState(str, Enum):

    unknown = "unknown"
    blocked = "blocked"
    allowed = "allowed"
    running = "running"
    not_running = "notRunning"

class MicrosoftGraphWindowsMalwareSeverity(str, Enum):

    unknown = "unknown"
    low = "low"
    moderate = "moderate"
    high = "high"
    severe = "severe"

class MicrosoftGraphWindowsMalwareState(str, Enum):

    unknown = "unknown"
    detected = "detected"
    cleaned = "cleaned"
    quarantined = "quarantined"
    removed = "removed"
    allowed = "allowed"
    blocked = "blocked"
    clean_failed = "cleanFailed"
    quarantine_failed = "quarantineFailed"
    remove_failed = "removeFailed"
    allow_failed = "allowFailed"
    abandoned = "abandoned"
    block_failed = "blockFailed"

class MicrosoftGraphWindowsMalwareThreatState(str, Enum):

    active = "active"
    action_failed = "actionFailed"
    manual_steps_required = "manualStepsRequired"
    full_scan_required = "fullScanRequired"
    reboot_required = "rebootRequired"
    remediated_with_non_critical_failures = "remediatedWithNonCriticalFailures"
    quarantined = "quarantined"
    removed = "removed"
    cleaned = "cleaned"
    allowed = "allowed"
    no_status_cleared = "noStatusCleared"
