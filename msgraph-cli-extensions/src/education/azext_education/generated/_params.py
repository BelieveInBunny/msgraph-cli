# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=too-many-lines
# pylint: disable=too-many-statements

from msgraph.cli.core.commands.parameters import (
    get_three_state_flag,
    get_enum_type
)
from msgraph.cli.core.commands.validators import validate_file_or_dict
from azext_education.action import (
    AddTerm,
    AddCourse,
    AddAssignmentCategories,
    AddAddress,
    AddAdministrativeUnitMembers,
    AddAdministrativeUnitScopedRoleMembers,
    AddAdministrativeUnitExtensions,
    AddLicensesToAssign,
    AddErrors,
    AddProfileStatus,
    AddInstructions,
    AddEducationClassesResources,
    AddCategories,
    AddEducationClassesAssignmentsResources,
    AddSubmittedResources,
    AddOutcomes
)


def load_arguments(self, _):

    with self.argument_context('education education-root update') as c:
        c.argument('id_', options_list=['--id'], help='Read-only.')
        c.argument('synchronization_profiles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('classes', type=validate_file_or_dict, help='Read-only. Nullable. Expected value: '
                   'json-string/@json-file.')
        c.argument('schools', type=validate_file_or_dict, help='Read-only. Nullable. Expected value: '
                   'json-string/@json-file.')
        c.argument('users', type=validate_file_or_dict, help='Read-only. Nullable. Expected value: '
                   'json-string/@json-file.')
        c.argument('me', type=validate_file_or_dict, help='educationUser Expected value: json-string/@json-file.')

    with self.argument_context('education education-root get-education-root') as c:
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education update') as c:
        c.argument('education_class_id', help='key: educationClass-id of educationClass')
        c.argument('id_', options_list=['--id'], help='Read-only.')
        c.argument('display_name', help='Name of the class.')
        c.argument('mail_nickname', help='Mail name for sending email to all members, if this is enabled.')
        c.argument('description', help='Description of the class.')
        c.argument('class_code', help='Class code used by the school to identify the class.')
        c.argument('external_name', help='Name of the class in the syncing system.')
        c.argument('external_id', help='ID of the class from the syncing system.')
        c.argument('external_source', arg_type=get_enum_type(['sis', 'manual', 'unknownFutureValue']), help=''
                   'educationExternalSource')
        c.argument('grade', help='')
        c.argument('term', action=AddTerm, nargs='*', help='educationTerm')
        c.argument('course', action=AddCourse, nargs='*', help='educationCourse')
        c.argument('assignments', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('assignment_categories', action=AddAssignmentCategories, nargs='*', help='')
        c.argument('members', type=validate_file_or_dict, help='All users in the class. Nullable. Expected value: '
                   'json-string/@json-file.')
        c.argument('teachers', type=validate_file_or_dict, help='All teachers in the class. Nullable. Expected value: '
                   'json-string/@json-file.')
        c.argument('schools', type=validate_file_or_dict, help='All schools that this class is associated with. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('group', type=validate_file_or_dict, help='Represents an Azure Active Directory object. The '
                   'directoryObject type is the base type for many other directory entity types. Expected value: '
                   'json-string/@json-file.')
        c.argument('created_by_user_id', help='Unique identifier for the identity.')
        c.argument('created_by_user_display_name', help='The identity\'s display name. Note that this may not always '
                   'be available or up to date. For example, if a user changes their display name, the API may show '
                   'the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('created_by_device_id', help='Unique identifier for the identity.')
        c.argument('created_by_device_display_name', help='The identity\'s display name. Note that this may not always '
                   'be available or up to date. For example, if a user changes their display name, the API may show '
                   'the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('created_by_application_id', help='Unique identifier for the identity.')
        c.argument('created_by_application_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('education_school_id', help='key: educationSchool-id of educationSchool')
        c.argument('principal_email', help='Email address of the principal.')
        c.argument('principal_name', help='Name of the principal.')
        c.argument('external_principal_id', help='ID of principal in syncing system.')
        c.argument('lowest_grade', help='Lowest grade taught.')
        c.argument('highest_grade', help='Highest grade taught.')
        c.argument('school_number', help='School Number.')
        c.argument('phone', help='Phone number of school.')
        c.argument('fax', help='')
        c.argument('address', action=AddAddress, nargs='*', help='physicalAddress')
        c.argument('classes', type=validate_file_or_dict, help='Classes taught at the school. Nullable. Expected '
                   'value: json-string/@json-file.')
        c.argument('users', type=validate_file_or_dict, help='Users in the school. Nullable. Expected value: '
                   'json-string/@json-file.')
        c.argument('administrative_unit_id', help='Read-only.')
        c.argument('administrative_unit_deleted_date_time', help='')
        c.argument('administrative_unit_display_name', help='')
        c.argument('administrative_unit_description', help='')
        c.argument('administrative_unit_visibility', help='')
        c.argument('administrative_unit_members', action=AddAdministrativeUnitMembers, nargs='*', help='')
        c.argument('administrative_unit_scoped_role_members', action=AddAdministrativeUnitScopedRoleMembers, nargs='*',
                    help='')
        c.argument('administrative_unit_extensions', action=AddAdministrativeUnitExtensions, nargs='*', help='')
        c.argument('education_synchronization_profile_id', help='key: educationSynchronizationProfile-id of '
                   'educationSynchronizationProfile')
        c.argument('data_provider', type=validate_file_or_dict, help='Any object Expected value: '
                   'json-string/@json-file.')
        c.argument('identity_synchronization_configuration', type=validate_file_or_dict, help='Any object Expected '
                   'value: json-string/@json-file.')
        c.argument('licenses_to_assign', action=AddLicensesToAssign, nargs='*', help='')
        c.argument('state', arg_type=get_enum_type(['deleting', 'deletionFailed', 'provisioningFailed', 'provisioned',
                   'provisioning', 'unknownFutureValue']), help='educationSynchronizationProfileState')
        c.argument('handle_special_character_constraint', arg_type=get_three_state_flag(), help='')
        c.argument('errors', action=AddErrors, nargs='*', help='')
        c.argument('profile_status', action=AddProfileStatus, nargs='*', help='educationSynchronizationProfileStatus')
        c.argument('education_user_id', help='key: educationUser-id of educationUser')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('education education create-class') as c:
        c.argument('id_', options_list=['--id'], help='Read-only.')
        c.argument('display_name', help='Name of the class.')
        c.argument('mail_nickname', help='Mail name for sending email to all members, if this is enabled.')
        c.argument('description', help='Description of the class.')
        c.argument('class_code', help='Class code used by the school to identify the class.')
        c.argument('external_name', help='Name of the class in the syncing system.')
        c.argument('external_id', help='ID of the class from the syncing system.')
        c.argument('external_source', arg_type=get_enum_type(['sis', 'manual', 'unknownFutureValue']), help=''
                   'educationExternalSource')
        c.argument('grade', help='')
        c.argument('term', action=AddTerm, nargs='*', help='educationTerm')
        c.argument('course', action=AddCourse, nargs='*', help='educationCourse')
        c.argument('assignments', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('assignment_categories', action=AddAssignmentCategories, nargs='*', help='')
        c.argument('members', type=validate_file_or_dict, help='All users in the class. Nullable. Expected value: '
                   'json-string/@json-file.')
        c.argument('teachers', type=validate_file_or_dict, help='All teachers in the class. Nullable. Expected value: '
                   'json-string/@json-file.')
        c.argument('schools', type=validate_file_or_dict, help='All schools that this class is associated with. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('group', type=validate_file_or_dict, help='Represents an Azure Active Directory object. The '
                   'directoryObject type is the base type for many other directory entity types. Expected value: '
                   'json-string/@json-file.')
        c.argument('created_by_user_id', help='Unique identifier for the identity.')
        c.argument('created_by_user_display_name', help='The identity\'s display name. Note that this may not always '
                   'be available or up to date. For example, if a user changes their display name, the API may show '
                   'the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('created_by_device_id', help='Unique identifier for the identity.')
        c.argument('created_by_device_display_name', help='The identity\'s display name. Note that this may not always '
                   'be available or up to date. For example, if a user changes their display name, the API may show '
                   'the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('created_by_application_id', help='Unique identifier for the identity.')
        c.argument('created_by_application_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')

    with self.argument_context('education education create-school') as c:
        c.argument('id_', options_list=['--id'], help='Read-only.')
        c.argument('display_name', help='Organization display name.')
        c.argument('description', help='Organization description.')
        c.argument('external_source', arg_type=get_enum_type(['sis', 'manual', 'unknownFutureValue']), help=''
                   'educationExternalSource')
        c.argument('principal_email', help='Email address of the principal.')
        c.argument('principal_name', help='Name of the principal.')
        c.argument('external_principal_id', help='ID of principal in syncing system.')
        c.argument('lowest_grade', help='Lowest grade taught.')
        c.argument('highest_grade', help='Highest grade taught.')
        c.argument('school_number', help='School Number.')
        c.argument('external_id', help='ID of school in syncing system.')
        c.argument('phone', help='Phone number of school.')
        c.argument('fax', help='')
        c.argument('address', action=AddAddress, nargs='*', help='physicalAddress')
        c.argument('classes', type=validate_file_or_dict, help='Classes taught at the school. Nullable. Expected '
                   'value: json-string/@json-file.')
        c.argument('users', type=validate_file_or_dict, help='Users in the school. Nullable. Expected value: '
                   'json-string/@json-file.')
        c.argument('administrative_unit_id', help='Read-only.')
        c.argument('administrative_unit_deleted_date_time', help='')
        c.argument('administrative_unit_display_name', help='')
        c.argument('administrative_unit_description', help='')
        c.argument('administrative_unit_visibility', help='')
        c.argument('administrative_unit_members', action=AddAdministrativeUnitMembers, nargs='*', help='')
        c.argument('administrative_unit_scoped_role_members', action=AddAdministrativeUnitScopedRoleMembers, nargs='*',
                    help='')
        c.argument('administrative_unit_extensions', action=AddAdministrativeUnitExtensions, nargs='*', help='')
        c.argument('created_by_user_id', help='Unique identifier for the identity.')
        c.argument('created_by_user_display_name', help='The identity\'s display name. Note that this may not always '
                   'be available or up to date. For example, if a user changes their display name, the API may show '
                   'the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('created_by_device_id', help='Unique identifier for the identity.')
        c.argument('created_by_device_display_name', help='The identity\'s display name. Note that this may not always '
                   'be available or up to date. For example, if a user changes their display name, the API may show '
                   'the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('created_by_application_id', help='Unique identifier for the identity.')
        c.argument('created_by_application_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')

    with self.argument_context('education education create-synchronization-profile') as c:
        c.argument('id_', options_list=['--id'], help='Read-only.')
        c.argument('display_name', help='')
        c.argument('data_provider', type=validate_file_or_dict, help='Any object Expected value: '
                   'json-string/@json-file.')
        c.argument('identity_synchronization_configuration', type=validate_file_or_dict, help='Any object Expected '
                   'value: json-string/@json-file.')
        c.argument('licenses_to_assign', action=AddLicensesToAssign, nargs='*', help='')
        c.argument('state', arg_type=get_enum_type(['deleting', 'deletionFailed', 'provisioningFailed', 'provisioned',
                   'provisioning', 'unknownFutureValue']), help='educationSynchronizationProfileState')
        c.argument('handle_special_character_constraint', arg_type=get_three_state_flag(), help='')
        c.argument('errors', action=AddErrors, nargs='*', help='')
        c.argument('profile_status', action=AddProfileStatus, nargs='*', help='educationSynchronizationProfileStatus')

    with self.argument_context('education education create-user') as c:
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('education education get-class') as c:
        c.argument('education_class_id', help='key: educationClass-id of educationClass')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education get-me') as c:
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education get-school') as c:
        c.argument('education_school_id', help='key: educationSchool-id of educationSchool')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education get-synchronization-profile') as c:
        c.argument('education_synchronization_profile_id', help='key: educationSynchronizationProfile-id of '
                   'educationSynchronizationProfile')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education get-user') as c:
        c.argument('education_user_id', help='key: educationUser-id of educationUser')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education list-class') as c:
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education list-school') as c:
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education list-synchronization-profile') as c:
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education list-user') as c:
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education-class update') as c:
        c.argument('education_class_id', help='key: educationClass-id of educationClass')
        c.argument('education_category_id', help='key: educationCategory-id of educationCategory')
        c.argument('id_', options_list=['--id'], help='Read-only.')
        c.argument('display_name', help='')
        c.argument('education_assignment_id', help='key: educationAssignment-id of educationAssignment')
        c.argument('class_id', help='')
        c.argument('instructions', action=AddInstructions, nargs='*', help='educationItemBody')
        c.argument('close_date_time', help='')
        c.argument('due_date_time', help='')
        c.argument('assign_date_time', help='')
        c.argument('assigned_date_time', help='')
        c.argument('grading', type=validate_file_or_dict, help='Any object Expected value: json-string/@json-file.')
        c.argument('assign_to', type=validate_file_or_dict, help='Any object Expected value: json-string/@json-file.')
        c.argument('allow_late_submissions', arg_type=get_three_state_flag(), help='')
        c.argument('created_date_time', help='')
        c.argument('last_modified_date_time', help='')
        c.argument('allow_students_to_add_resources_to_submission', arg_type=get_three_state_flag(), help='')
        c.argument('status', arg_type=get_enum_type(['draft', 'published', 'assigned', 'unknownFutureValue']), help=''
                   'educationAssignmentStatus')
        c.argument('resources', action=AddEducationClassesResources, nargs='*', help='')
        c.argument('submissions', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('categories', action=AddCategories, nargs='*', help='')
        c.argument('rubric_id', help='Read-only.')
        c.argument('rubric_display_name', help='')
        c.argument('rubric_description', action=AddInstructions, nargs='*', help='educationItemBody')
        c.argument('rubric_qualities', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('rubric_levels', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('rubric_grading', type=validate_file_or_dict, help='Any object Expected value: '
                   'json-string/@json-file.')
        c.argument('rubric_created_date_time', help='')
        c.argument('rubric_last_modified_date_time', help='')
        c.argument('rubric_last_modified_by_user_id', help='Unique identifier for the identity.')
        c.argument('rubric_last_modified_by_user_display_name', help='The identity\'s display name. Note that this may '
                   'not always be available or up to date. For example, if a user changes their display name, the API '
                   'may show the new value in a future response, but the items associated with the user won\'t show up '
                   'as having changed when using delta.')
        c.argument('rubric_last_modified_by_device_id', help='Unique identifier for the identity.')
        c.argument('rubric_last_modified_by_device_display_name', help='The identity\'s display name. Note that this '
                   'may not always be available or up to date. For example, if a user changes their display name, the '
                   'API may show the new value in a future response, but the items associated with the user won\'t '
                   'show up as having changed when using delta.')
        c.argument('rubric_last_modified_by_application_id', help='Unique identifier for the identity.')
        c.argument('rubric_last_modified_by_application_display_name', help='The identity\'s display name. Note that '
                   'this may not always be available or up to date. For example, if a user changes their display name, '
                   'the API may show the new value in a future response, but the items associated with the user won\'t '
                   'show up as having changed when using delta.')
        c.argument('rubric_created_by_user_id', help='Unique identifier for the identity.')
        c.argument('rubric_created_by_user_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('rubric_created_by_device_id', help='Unique identifier for the identity.')
        c.argument('rubric_created_by_device_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('rubric_created_by_application_id', help='Unique identifier for the identity.')
        c.argument('rubric_created_by_application_display_name', help='The identity\'s display name. Note that this '
                   'may not always be available or up to date. For example, if a user changes their display name, the '
                   'API may show the new value in a future response, but the items associated with the user won\'t '
                   'show up as having changed when using delta.')
        c.argument('last_modified_by_user_id', help='Unique identifier for the identity.')
        c.argument('last_modified_by_user_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('last_modified_by_device_id', help='Unique identifier for the identity.')
        c.argument('last_modified_by_device_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('last_modified_by_application_id', help='Unique identifier for the identity.')
        c.argument('last_modified_by_application_display_name', help='The identity\'s display name. Note that this may '
                   'not always be available or up to date. For example, if a user changes their display name, the API '
                   'may show the new value in a future response, but the items associated with the user won\'t show up '
                   'as having changed when using delta.')
        c.argument('created_by_user_id', help='Unique identifier for the identity.')
        c.argument('created_by_user_display_name', help='The identity\'s display name. Note that this may not always '
                   'be available or up to date. For example, if a user changes their display name, the API may show '
                   'the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('created_by_device_id', help='Unique identifier for the identity.')
        c.argument('created_by_device_display_name', help='The identity\'s display name. Note that this may not always '
                   'be available or up to date. For example, if a user changes their display name, the API may show '
                   'the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('created_by_application_id', help='Unique identifier for the identity.')
        c.argument('created_by_application_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')

    with self.argument_context('education education-class create-assignment') as c:
        c.argument('education_class_id', help='key: educationClass-id of educationClass')
        c.argument('id_', options_list=['--id'], help='Read-only.')
        c.argument('class_id', help='')
        c.argument('display_name', help='')
        c.argument('instructions', action=AddInstructions, nargs='*', help='educationItemBody')
        c.argument('close_date_time', help='')
        c.argument('due_date_time', help='')
        c.argument('assign_date_time', help='')
        c.argument('assigned_date_time', help='')
        c.argument('grading', type=validate_file_or_dict, help='Any object Expected value: json-string/@json-file.')
        c.argument('assign_to', type=validate_file_or_dict, help='Any object Expected value: json-string/@json-file.')
        c.argument('allow_late_submissions', arg_type=get_three_state_flag(), help='')
        c.argument('created_date_time', help='')
        c.argument('last_modified_date_time', help='')
        c.argument('allow_students_to_add_resources_to_submission', arg_type=get_three_state_flag(), help='')
        c.argument('status', arg_type=get_enum_type(['draft', 'published', 'assigned', 'unknownFutureValue']), help=''
                   'educationAssignmentStatus')
        c.argument('resources', action=AddEducationClassesResources, nargs='*', help='')
        c.argument('submissions', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('categories', action=AddCategories, nargs='*', help='')
        c.argument('rubric_id', help='Read-only.')
        c.argument('rubric_display_name', help='')
        c.argument('rubric_description', action=AddInstructions, nargs='*', help='educationItemBody')
        c.argument('rubric_qualities', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('rubric_levels', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('rubric_grading', type=validate_file_or_dict, help='Any object Expected value: '
                   'json-string/@json-file.')
        c.argument('rubric_created_date_time', help='')
        c.argument('rubric_last_modified_date_time', help='')
        c.argument('rubric_last_modified_by_user_id', help='Unique identifier for the identity.')
        c.argument('rubric_last_modified_by_user_display_name', help='The identity\'s display name. Note that this may '
                   'not always be available or up to date. For example, if a user changes their display name, the API '
                   'may show the new value in a future response, but the items associated with the user won\'t show up '
                   'as having changed when using delta.')
        c.argument('rubric_last_modified_by_device_id', help='Unique identifier for the identity.')
        c.argument('rubric_last_modified_by_device_display_name', help='The identity\'s display name. Note that this '
                   'may not always be available or up to date. For example, if a user changes their display name, the '
                   'API may show the new value in a future response, but the items associated with the user won\'t '
                   'show up as having changed when using delta.')
        c.argument('rubric_last_modified_by_application_id', help='Unique identifier for the identity.')
        c.argument('rubric_last_modified_by_application_display_name', help='The identity\'s display name. Note that '
                   'this may not always be available or up to date. For example, if a user changes their display name, '
                   'the API may show the new value in a future response, but the items associated with the user won\'t '
                   'show up as having changed when using delta.')
        c.argument('rubric_created_by_user_id', help='Unique identifier for the identity.')
        c.argument('rubric_created_by_user_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('rubric_created_by_device_id', help='Unique identifier for the identity.')
        c.argument('rubric_created_by_device_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('rubric_created_by_application_id', help='Unique identifier for the identity.')
        c.argument('rubric_created_by_application_display_name', help='The identity\'s display name. Note that this '
                   'may not always be available or up to date. For example, if a user changes their display name, the '
                   'API may show the new value in a future response, but the items associated with the user won\'t '
                   'show up as having changed when using delta.')
        c.argument('last_modified_by_user_id', help='Unique identifier for the identity.')
        c.argument('last_modified_by_user_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('last_modified_by_device_id', help='Unique identifier for the identity.')
        c.argument('last_modified_by_device_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('last_modified_by_application_id', help='Unique identifier for the identity.')
        c.argument('last_modified_by_application_display_name', help='The identity\'s display name. Note that this may '
                   'not always be available or up to date. For example, if a user changes their display name, the API '
                   'may show the new value in a future response, but the items associated with the user won\'t show up '
                   'as having changed when using delta.')
        c.argument('created_by_user_id', help='Unique identifier for the identity.')
        c.argument('created_by_user_display_name', help='The identity\'s display name. Note that this may not always '
                   'be available or up to date. For example, if a user changes their display name, the API may show '
                   'the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('created_by_device_id', help='Unique identifier for the identity.')
        c.argument('created_by_device_display_name', help='The identity\'s display name. Note that this may not always '
                   'be available or up to date. For example, if a user changes their display name, the API may show '
                   'the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('created_by_application_id', help='Unique identifier for the identity.')
        c.argument('created_by_application_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')

    with self.argument_context('education education-class create-assignment-category') as c:
        c.argument('education_class_id', help='key: educationClass-id of educationClass')
        c.argument('id_', options_list=['--id'], help='Read-only.')
        c.argument('display_name', help='')

    with self.argument_context('education education-class delta') as c:
        pass

    with self.argument_context('education education-class get-assignment') as c:
        c.argument('education_class_id', help='key: educationClass-id of educationClass')
        c.argument('education_assignment_id', help='key: educationAssignment-id of educationAssignment')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education-class get-assignment-category') as c:
        c.argument('education_class_id', help='key: educationClass-id of educationClass')
        c.argument('education_category_id', help='key: educationCategory-id of educationCategory')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education-class get-group') as c:
        c.argument('education_class_id', help='key: educationClass-id of educationClass')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education-class get-member') as c:
        c.argument('education_class_id', help='key: educationClass-id of educationClass')
        c.argument('education_user_id', help='key: educationUser-id of educationUser')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education-class get-school') as c:
        c.argument('education_class_id', help='key: educationClass-id of educationClass')
        c.argument('education_school_id', help='key: educationSchool-id of educationSchool')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education-class get-teacher') as c:
        c.argument('education_class_id', help='key: educationClass-id of educationClass')
        c.argument('education_user_id', help='key: educationUser-id of educationUser')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education-class list-assignment') as c:
        c.argument('education_class_id', help='key: educationClass-id of educationClass')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education-class list-assignment-category') as c:
        c.argument('education_class_id', help='key: educationClass-id of educationClass')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education-class list-member') as c:
        c.argument('education_class_id', help='key: educationClass-id of educationClass')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education-class list-school') as c:
        c.argument('education_class_id', help='key: educationClass-id of educationClass')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education-class list-teacher') as c:
        c.argument('education_class_id', help='key: educationClass-id of educationClass')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education-class-assignment update') as c:
        c.argument('education_class_id', help='key: educationClass-id of educationClass')
        c.argument('education_assignment_id', help='key: educationAssignment-id of educationAssignment')
        c.argument('education_category_id', help='key: educationCategory-id of educationCategory')
        c.argument('id_', options_list=['--id'], help='Read-only.')
        c.argument('display_name', help='')
        c.argument('education_assignment_resource_id', help='key: educationAssignmentResource-id of '
                   'educationAssignmentResource')
        c.argument('distribute_for_student_work', arg_type=get_three_state_flag(), help='')
        c.argument('resource_display_name', help='')
        c.argument('resource_created_date_time', help='')
        c.argument('resource_last_modified_date_time', help='')
        c.argument('resource_last_modified_by_user_id', help='Unique identifier for the identity.')
        c.argument('resource_last_modified_by_user_display_name', help='The identity\'s display name. Note that this '
                   'may not always be available or up to date. For example, if a user changes their display name, the '
                   'API may show the new value in a future response, but the items associated with the user won\'t '
                   'show up as having changed when using delta.')
        c.argument('resource_last_modified_by_device_id', help='Unique identifier for the identity.')
        c.argument('resource_last_modified_by_device_display_name', help='The identity\'s display name. Note that this '
                   'may not always be available or up to date. For example, if a user changes their display name, the '
                   'API may show the new value in a future response, but the items associated with the user won\'t '
                   'show up as having changed when using delta.')
        c.argument('resource_last_modified_by_application_id', help='Unique identifier for the identity.')
        c.argument('resource_last_modified_by_application_display_name', help='The identity\'s display name. Note that '
                   'this may not always be available or up to date. For example, if a user changes their display name, '
                   'the API may show the new value in a future response, but the items associated with the user won\'t '
                   'show up as having changed when using delta.')
        c.argument('resource_created_by_user_id', help='Unique identifier for the identity.')
        c.argument('resource_created_by_user_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('resource_created_by_device_id', help='Unique identifier for the identity.')
        c.argument('resource_created_by_device_display_name', help='The identity\'s display name. Note that this may '
                   'not always be available or up to date. For example, if a user changes their display name, the API '
                   'may show the new value in a future response, but the items associated with the user won\'t show up '
                   'as having changed when using delta.')
        c.argument('resource_created_by_application_id', help='Unique identifier for the identity.')
        c.argument('resource_created_by_application_display_name', help='The identity\'s display name. Note that this '
                   'may not always be available or up to date. For example, if a user changes their display name, the '
                   'API may show the new value in a future response, but the items associated with the user won\'t '
                   'show up as having changed when using delta.')
        c.argument('education_submission_id', help='key: educationSubmission-id of educationSubmission')
        c.argument('recipient', type=validate_file_or_dict, help='Any object Expected value: json-string/@json-file.')
        c.argument('status', arg_type=get_enum_type(['working', 'submitted', 'released', 'returned', ''
                   'unknownFutureValue']), help='educationSubmissionStatus')
        c.argument('submitted_date_time', help='')
        c.argument('unsubmitted_date_time', help='')
        c.argument('released_date_time', help='')
        c.argument('returned_date_time', help='')
        c.argument('resources_folder_url', help='')
        c.argument('resources', action=AddEducationClassesAssignmentsResources, nargs='*', help='')
        c.argument('submitted_resources', action=AddSubmittedResources, nargs='*', help='')
        c.argument('outcomes', action=AddOutcomes, nargs='*', help='')
        c.argument('returned_by_user_id', help='Unique identifier for the identity.')
        c.argument('returned_by_user_display_name', help='The identity\'s display name. Note that this may not always '
                   'be available or up to date. For example, if a user changes their display name, the API may show '
                   'the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('returned_by_device_id', help='Unique identifier for the identity.')
        c.argument('returned_by_device_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('returned_by_application_id', help='Unique identifier for the identity.')
        c.argument('returned_by_application_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('released_by_user_id', help='Unique identifier for the identity.')
        c.argument('released_by_user_display_name', help='The identity\'s display name. Note that this may not always '
                   'be available or up to date. For example, if a user changes their display name, the API may show '
                   'the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('released_by_device_id', help='Unique identifier for the identity.')
        c.argument('released_by_device_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('released_by_application_id', help='Unique identifier for the identity.')
        c.argument('released_by_application_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('unsubmitted_by_user_id', help='Unique identifier for the identity.')
        c.argument('unsubmitted_by_user_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('unsubmitted_by_device_id', help='Unique identifier for the identity.')
        c.argument('unsubmitted_by_device_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('unsubmitted_by_application_id', help='Unique identifier for the identity.')
        c.argument('unsubmitted_by_application_display_name', help='The identity\'s display name. Note that this may '
                   'not always be available or up to date. For example, if a user changes their display name, the API '
                   'may show the new value in a future response, but the items associated with the user won\'t show up '
                   'as having changed when using delta.')
        c.argument('submitted_by_user_id', help='Unique identifier for the identity.')
        c.argument('submitted_by_user_display_name', help='The identity\'s display name. Note that this may not always '
                   'be available or up to date. For example, if a user changes their display name, the API may show '
                   'the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('submitted_by_device_id', help='Unique identifier for the identity.')
        c.argument('submitted_by_device_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('submitted_by_application_id', help='Unique identifier for the identity.')
        c.argument('submitted_by_application_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('description', action=AddInstructions, nargs='*', help='educationItemBody')
        c.argument('qualities', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('levels', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('grading', type=validate_file_or_dict, help='Any object Expected value: json-string/@json-file.')
        c.argument('created_date_time', help='')
        c.argument('last_modified_date_time', help='')
        c.argument('last_modified_by_user_id', help='Unique identifier for the identity.')
        c.argument('last_modified_by_user_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('last_modified_by_device_id', help='Unique identifier for the identity.')
        c.argument('last_modified_by_device_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('last_modified_by_application_id', help='Unique identifier for the identity.')
        c.argument('last_modified_by_application_display_name', help='The identity\'s display name. Note that this may '
                   'not always be available or up to date. For example, if a user changes their display name, the API '
                   'may show the new value in a future response, but the items associated with the user won\'t show up '
                   'as having changed when using delta.')
        c.argument('created_by_user_id', help='Unique identifier for the identity.')
        c.argument('created_by_user_display_name', help='The identity\'s display name. Note that this may not always '
                   'be available or up to date. For example, if a user changes their display name, the API may show '
                   'the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('created_by_device_id', help='Unique identifier for the identity.')
        c.argument('created_by_device_display_name', help='The identity\'s display name. Note that this may not always '
                   'be available or up to date. For example, if a user changes their display name, the API may show '
                   'the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('created_by_application_id', help='Unique identifier for the identity.')
        c.argument('created_by_application_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')

    with self.argument_context('education education-class-assignment create-category') as c:
        c.argument('education_class_id', help='key: educationClass-id of educationClass')
        c.argument('education_assignment_id', help='key: educationAssignment-id of educationAssignment')
        c.argument('id_', options_list=['--id'], help='Read-only.')
        c.argument('display_name', help='')

    with self.argument_context('education education-class-assignment create-resource') as c:
        c.argument('education_class_id', help='key: educationClass-id of educationClass')
        c.argument('education_assignment_id', help='key: educationAssignment-id of educationAssignment')
        c.argument('id_', options_list=['--id'], help='Read-only.')
        c.argument('distribute_for_student_work', arg_type=get_three_state_flag(), help='')
        c.argument('resource_display_name', help='')
        c.argument('resource_created_date_time', help='')
        c.argument('resource_last_modified_date_time', help='')
        c.argument('resource_last_modified_by_user_id', help='Unique identifier for the identity.')
        c.argument('resource_last_modified_by_user_display_name', help='The identity\'s display name. Note that this '
                   'may not always be available or up to date. For example, if a user changes their display name, the '
                   'API may show the new value in a future response, but the items associated with the user won\'t '
                   'show up as having changed when using delta.')
        c.argument('resource_last_modified_by_device_id', help='Unique identifier for the identity.')
        c.argument('resource_last_modified_by_device_display_name', help='The identity\'s display name. Note that this '
                   'may not always be available or up to date. For example, if a user changes their display name, the '
                   'API may show the new value in a future response, but the items associated with the user won\'t '
                   'show up as having changed when using delta.')
        c.argument('resource_last_modified_by_application_id', help='Unique identifier for the identity.')
        c.argument('resource_last_modified_by_application_display_name', help='The identity\'s display name. Note that '
                   'this may not always be available or up to date. For example, if a user changes their display name, '
                   'the API may show the new value in a future response, but the items associated with the user won\'t '
                   'show up as having changed when using delta.')
        c.argument('resource_created_by_user_id', help='Unique identifier for the identity.')
        c.argument('resource_created_by_user_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('resource_created_by_device_id', help='Unique identifier for the identity.')
        c.argument('resource_created_by_device_display_name', help='The identity\'s display name. Note that this may '
                   'not always be available or up to date. For example, if a user changes their display name, the API '
                   'may show the new value in a future response, but the items associated with the user won\'t show up '
                   'as having changed when using delta.')
        c.argument('resource_created_by_application_id', help='Unique identifier for the identity.')
        c.argument('resource_created_by_application_display_name', help='The identity\'s display name. Note that this '
                   'may not always be available or up to date. For example, if a user changes their display name, the '
                   'API may show the new value in a future response, but the items associated with the user won\'t '
                   'show up as having changed when using delta.')

    with self.argument_context('education education-class-assignment create-submission') as c:
        c.argument('education_class_id', help='key: educationClass-id of educationClass')
        c.argument('education_assignment_id', help='key: educationAssignment-id of educationAssignment')
        c.argument('id_', options_list=['--id'], help='Read-only.')
        c.argument('recipient', type=validate_file_or_dict, help='Any object Expected value: json-string/@json-file.')
        c.argument('status', arg_type=get_enum_type(['working', 'submitted', 'released', 'returned', ''
                   'unknownFutureValue']), help='educationSubmissionStatus')
        c.argument('submitted_date_time', help='')
        c.argument('unsubmitted_date_time', help='')
        c.argument('released_date_time', help='')
        c.argument('returned_date_time', help='')
        c.argument('resources_folder_url', help='')
        c.argument('resources', action=AddEducationClassesAssignmentsResources, nargs='*', help='')
        c.argument('submitted_resources', action=AddSubmittedResources, nargs='*', help='')
        c.argument('outcomes', action=AddOutcomes, nargs='*', help='')
        c.argument('returned_by_user_id', help='Unique identifier for the identity.')
        c.argument('returned_by_user_display_name', help='The identity\'s display name. Note that this may not always '
                   'be available or up to date. For example, if a user changes their display name, the API may show '
                   'the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('returned_by_device_id', help='Unique identifier for the identity.')
        c.argument('returned_by_device_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('returned_by_application_id', help='Unique identifier for the identity.')
        c.argument('returned_by_application_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('released_by_user_id', help='Unique identifier for the identity.')
        c.argument('released_by_user_display_name', help='The identity\'s display name. Note that this may not always '
                   'be available or up to date. For example, if a user changes their display name, the API may show '
                   'the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('released_by_device_id', help='Unique identifier for the identity.')
        c.argument('released_by_device_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('released_by_application_id', help='Unique identifier for the identity.')
        c.argument('released_by_application_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('unsubmitted_by_user_id', help='Unique identifier for the identity.')
        c.argument('unsubmitted_by_user_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('unsubmitted_by_device_id', help='Unique identifier for the identity.')
        c.argument('unsubmitted_by_device_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('unsubmitted_by_application_id', help='Unique identifier for the identity.')
        c.argument('unsubmitted_by_application_display_name', help='The identity\'s display name. Note that this may '
                   'not always be available or up to date. For example, if a user changes their display name, the API '
                   'may show the new value in a future response, but the items associated with the user won\'t show up '
                   'as having changed when using delta.')
        c.argument('submitted_by_user_id', help='Unique identifier for the identity.')
        c.argument('submitted_by_user_display_name', help='The identity\'s display name. Note that this may not always '
                   'be available or up to date. For example, if a user changes their display name, the API may show '
                   'the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('submitted_by_device_id', help='Unique identifier for the identity.')
        c.argument('submitted_by_device_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('submitted_by_application_id', help='Unique identifier for the identity.')
        c.argument('submitted_by_application_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')

    with self.argument_context('education education-class-assignment get-category') as c:
        c.argument('education_class_id', help='key: educationClass-id of educationClass')
        c.argument('education_assignment_id', help='key: educationAssignment-id of educationAssignment')
        c.argument('education_category_id', help='key: educationCategory-id of educationCategory')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education-class-assignment get-resource') as c:
        c.argument('education_class_id', help='key: educationClass-id of educationClass')
        c.argument('education_assignment_id', help='key: educationAssignment-id of educationAssignment')
        c.argument('education_assignment_resource_id', help='key: educationAssignmentResource-id of '
                   'educationAssignmentResource')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education-class-assignment get-resource-folder-url') as c:
        c.argument('education_class_id', help='key: educationClass-id of educationClass')
        c.argument('education_assignment_id', help='key: educationAssignment-id of educationAssignment')

    with self.argument_context('education education-class-assignment get-rubric') as c:
        c.argument('education_class_id', help='key: educationClass-id of educationClass')
        c.argument('education_assignment_id', help='key: educationAssignment-id of educationAssignment')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education-class-assignment get-submission') as c:
        c.argument('education_class_id', help='key: educationClass-id of educationClass')
        c.argument('education_assignment_id', help='key: educationAssignment-id of educationAssignment')
        c.argument('education_submission_id', help='key: educationSubmission-id of educationSubmission')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education-class-assignment list-category') as c:
        c.argument('education_class_id', help='key: educationClass-id of educationClass')
        c.argument('education_assignment_id', help='key: educationAssignment-id of educationAssignment')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education-class-assignment list-resource') as c:
        c.argument('education_class_id', help='key: educationClass-id of educationClass')
        c.argument('education_assignment_id', help='key: educationAssignment-id of educationAssignment')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education-class-assignment list-submission') as c:
        c.argument('education_class_id', help='key: educationClass-id of educationClass')
        c.argument('education_assignment_id', help='key: educationAssignment-id of educationAssignment')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education-class-assignment publish') as c:
        c.argument('education_class_id', help='key: educationClass-id of educationClass')
        c.argument('education_assignment_id', help='key: educationAssignment-id of educationAssignment')

    with self.argument_context('education education-class-assignment-submission update') as c:
        c.argument('education_class_id', help='key: educationClass-id of educationClass')
        c.argument('education_assignment_id', help='key: educationAssignment-id of educationAssignment')
        c.argument('education_submission_id', help='key: educationSubmission-id of educationSubmission')
        c.argument('education_outcome_id', help='key: educationOutcome-id of educationOutcome')
        c.argument('id_', options_list=['--id'], help='Read-only.')
        c.argument('last_modified_date_time', help='')
        c.argument('last_modified_by_user_id', help='Unique identifier for the identity.')
        c.argument('last_modified_by_user_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('last_modified_by_device_id', help='Unique identifier for the identity.')
        c.argument('last_modified_by_device_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('last_modified_by_application_id', help='Unique identifier for the identity.')
        c.argument('last_modified_by_application_display_name', help='The identity\'s display name. Note that this may '
                   'not always be available or up to date. For example, if a user changes their display name, the API '
                   'may show the new value in a future response, but the items associated with the user won\'t show up '
                   'as having changed when using delta.')
        c.argument('education_submission_resource_id', help='key: educationSubmissionResource-id of '
                   'educationSubmissionResource')
        c.argument('assignment_resource_url', help='')
        c.argument('resource_display_name', help='')
        c.argument('resource_created_date_time', help='')
        c.argument('resource_last_modified_date_time', help='')
        c.argument('resource_last_modified_by_user_id', help='Unique identifier for the identity.')
        c.argument('resource_last_modified_by_user_display_name', help='The identity\'s display name. Note that this '
                   'may not always be available or up to date. For example, if a user changes their display name, the '
                   'API may show the new value in a future response, but the items associated with the user won\'t '
                   'show up as having changed when using delta.')
        c.argument('resource_last_modified_by_device_id', help='Unique identifier for the identity.')
        c.argument('resource_last_modified_by_device_display_name', help='The identity\'s display name. Note that this '
                   'may not always be available or up to date. For example, if a user changes their display name, the '
                   'API may show the new value in a future response, but the items associated with the user won\'t '
                   'show up as having changed when using delta.')
        c.argument('resource_last_modified_by_application_id', help='Unique identifier for the identity.')
        c.argument('resource_last_modified_by_application_display_name', help='The identity\'s display name. Note that '
                   'this may not always be available or up to date. For example, if a user changes their display name, '
                   'the API may show the new value in a future response, but the items associated with the user won\'t '
                   'show up as having changed when using delta.')
        c.argument('resource_created_by_user_id', help='Unique identifier for the identity.')
        c.argument('resource_created_by_user_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('resource_created_by_device_id', help='Unique identifier for the identity.')
        c.argument('resource_created_by_device_display_name', help='The identity\'s display name. Note that this may '
                   'not always be available or up to date. For example, if a user changes their display name, the API '
                   'may show the new value in a future response, but the items associated with the user won\'t show up '
                   'as having changed when using delta.')
        c.argument('resource_created_by_application_id', help='Unique identifier for the identity.')
        c.argument('resource_created_by_application_display_name', help='The identity\'s display name. Note that this '
                   'may not always be available or up to date. For example, if a user changes their display name, the '
                   'API may show the new value in a future response, but the items associated with the user won\'t '
                   'show up as having changed when using delta.')

    with self.argument_context('education education-class-assignment-submission create-outcome') as c:
        c.argument('education_class_id', help='key: educationClass-id of educationClass')
        c.argument('education_assignment_id', help='key: educationAssignment-id of educationAssignment')
        c.argument('education_submission_id', help='key: educationSubmission-id of educationSubmission')
        c.argument('id_', options_list=['--id'], help='Read-only.')
        c.argument('last_modified_date_time', help='')
        c.argument('last_modified_by_user_id', help='Unique identifier for the identity.')
        c.argument('last_modified_by_user_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('last_modified_by_device_id', help='Unique identifier for the identity.')
        c.argument('last_modified_by_device_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('last_modified_by_application_id', help='Unique identifier for the identity.')
        c.argument('last_modified_by_application_display_name', help='The identity\'s display name. Note that this may '
                   'not always be available or up to date. For example, if a user changes their display name, the API '
                   'may show the new value in a future response, but the items associated with the user won\'t show up '
                   'as having changed when using delta.')

    with self.argument_context('education education-class-assignment-submission create-resource') as c:
        c.argument('education_class_id', help='key: educationClass-id of educationClass')
        c.argument('education_assignment_id', help='key: educationAssignment-id of educationAssignment')
        c.argument('education_submission_id', help='key: educationSubmission-id of educationSubmission')
        c.argument('id_', options_list=['--id'], help='Read-only.')
        c.argument('assignment_resource_url', help='')
        c.argument('resource_display_name', help='')
        c.argument('resource_created_date_time', help='')
        c.argument('resource_last_modified_date_time', help='')
        c.argument('resource_last_modified_by_user_id', help='Unique identifier for the identity.')
        c.argument('resource_last_modified_by_user_display_name', help='The identity\'s display name. Note that this '
                   'may not always be available or up to date. For example, if a user changes their display name, the '
                   'API may show the new value in a future response, but the items associated with the user won\'t '
                   'show up as having changed when using delta.')
        c.argument('resource_last_modified_by_device_id', help='Unique identifier for the identity.')
        c.argument('resource_last_modified_by_device_display_name', help='The identity\'s display name. Note that this '
                   'may not always be available or up to date. For example, if a user changes their display name, the '
                   'API may show the new value in a future response, but the items associated with the user won\'t '
                   'show up as having changed when using delta.')
        c.argument('resource_last_modified_by_application_id', help='Unique identifier for the identity.')
        c.argument('resource_last_modified_by_application_display_name', help='The identity\'s display name. Note that '
                   'this may not always be available or up to date. For example, if a user changes their display name, '
                   'the API may show the new value in a future response, but the items associated with the user won\'t '
                   'show up as having changed when using delta.')
        c.argument('resource_created_by_user_id', help='Unique identifier for the identity.')
        c.argument('resource_created_by_user_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('resource_created_by_device_id', help='Unique identifier for the identity.')
        c.argument('resource_created_by_device_display_name', help='The identity\'s display name. Note that this may '
                   'not always be available or up to date. For example, if a user changes their display name, the API '
                   'may show the new value in a future response, but the items associated with the user won\'t show up '
                   'as having changed when using delta.')
        c.argument('resource_created_by_application_id', help='Unique identifier for the identity.')
        c.argument('resource_created_by_application_display_name', help='The identity\'s display name. Note that this '
                   'may not always be available or up to date. For example, if a user changes their display name, the '
                   'API may show the new value in a future response, but the items associated with the user won\'t '
                   'show up as having changed when using delta.')

    with self.argument_context('education education-class-assignment-submission create-submitted-resource') as c:
        c.argument('education_class_id', help='key: educationClass-id of educationClass')
        c.argument('education_assignment_id', help='key: educationAssignment-id of educationAssignment')
        c.argument('education_submission_id', help='key: educationSubmission-id of educationSubmission')
        c.argument('id_', options_list=['--id'], help='Read-only.')
        c.argument('assignment_resource_url', help='')
        c.argument('resource_display_name', help='')
        c.argument('resource_created_date_time', help='')
        c.argument('resource_last_modified_date_time', help='')
        c.argument('resource_last_modified_by_user_id', help='Unique identifier for the identity.')
        c.argument('resource_last_modified_by_user_display_name', help='The identity\'s display name. Note that this '
                   'may not always be available or up to date. For example, if a user changes their display name, the '
                   'API may show the new value in a future response, but the items associated with the user won\'t '
                   'show up as having changed when using delta.')
        c.argument('resource_last_modified_by_device_id', help='Unique identifier for the identity.')
        c.argument('resource_last_modified_by_device_display_name', help='The identity\'s display name. Note that this '
                   'may not always be available or up to date. For example, if a user changes their display name, the '
                   'API may show the new value in a future response, but the items associated with the user won\'t '
                   'show up as having changed when using delta.')
        c.argument('resource_last_modified_by_application_id', help='Unique identifier for the identity.')
        c.argument('resource_last_modified_by_application_display_name', help='The identity\'s display name. Note that '
                   'this may not always be available or up to date. For example, if a user changes their display name, '
                   'the API may show the new value in a future response, but the items associated with the user won\'t '
                   'show up as having changed when using delta.')
        c.argument('resource_created_by_user_id', help='Unique identifier for the identity.')
        c.argument('resource_created_by_user_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('resource_created_by_device_id', help='Unique identifier for the identity.')
        c.argument('resource_created_by_device_display_name', help='The identity\'s display name. Note that this may '
                   'not always be available or up to date. For example, if a user changes their display name, the API '
                   'may show the new value in a future response, but the items associated with the user won\'t show up '
                   'as having changed when using delta.')
        c.argument('resource_created_by_application_id', help='Unique identifier for the identity.')
        c.argument('resource_created_by_application_display_name', help='The identity\'s display name. Note that this '
                   'may not always be available or up to date. For example, if a user changes their display name, the '
                   'API may show the new value in a future response, but the items associated with the user won\'t '
                   'show up as having changed when using delta.')

    with self.argument_context('education education-class-assignment-submission get-outcome') as c:
        c.argument('education_class_id', help='key: educationClass-id of educationClass')
        c.argument('education_assignment_id', help='key: educationAssignment-id of educationAssignment')
        c.argument('education_submission_id', help='key: educationSubmission-id of educationSubmission')
        c.argument('education_outcome_id', help='key: educationOutcome-id of educationOutcome')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education-class-assignment-submission get-resource') as c:
        c.argument('education_class_id', help='key: educationClass-id of educationClass')
        c.argument('education_assignment_id', help='key: educationAssignment-id of educationAssignment')
        c.argument('education_submission_id', help='key: educationSubmission-id of educationSubmission')
        c.argument('education_submission_resource_id', help='key: educationSubmissionResource-id of '
                   'educationSubmissionResource')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education-class-assignment-submission get-submitted-resource') as c:
        c.argument('education_class_id', help='key: educationClass-id of educationClass')
        c.argument('education_assignment_id', help='key: educationAssignment-id of educationAssignment')
        c.argument('education_submission_id', help='key: educationSubmission-id of educationSubmission')
        c.argument('education_submission_resource_id', help='key: educationSubmissionResource-id of '
                   'educationSubmissionResource')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education-class-assignment-submission list-outcome') as c:
        c.argument('education_class_id', help='key: educationClass-id of educationClass')
        c.argument('education_assignment_id', help='key: educationAssignment-id of educationAssignment')
        c.argument('education_submission_id', help='key: educationSubmission-id of educationSubmission')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education-class-assignment-submission list-resource') as c:
        c.argument('education_class_id', help='key: educationClass-id of educationClass')
        c.argument('education_assignment_id', help='key: educationAssignment-id of educationAssignment')
        c.argument('education_submission_id', help='key: educationSubmission-id of educationSubmission')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education-class-assignment-submission list-submitted-resource') as c:
        c.argument('education_class_id', help='key: educationClass-id of educationClass')
        c.argument('education_assignment_id', help='key: educationAssignment-id of educationAssignment')
        c.argument('education_submission_id', help='key: educationSubmission-id of educationSubmission')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education-class-assignment-submission return') as c:
        c.argument('education_class_id', help='key: educationClass-id of educationClass')
        c.argument('education_assignment_id', help='key: educationAssignment-id of educationAssignment')
        c.argument('education_submission_id', help='key: educationSubmission-id of educationSubmission')

    with self.argument_context('education education-class-assignment-submission submit') as c:
        c.argument('education_class_id', help='key: educationClass-id of educationClass')
        c.argument('education_assignment_id', help='key: educationAssignment-id of educationAssignment')
        c.argument('education_submission_id', help='key: educationSubmission-id of educationSubmission')

    with self.argument_context('education education-class-assignment-submission unsubmit') as c:
        c.argument('education_class_id', help='key: educationClass-id of educationClass')
        c.argument('education_assignment_id', help='key: educationAssignment-id of educationAssignment')
        c.argument('education_submission_id', help='key: educationSubmission-id of educationSubmission')

    with self.argument_context('education education-class-member delta') as c:
        c.argument('education_class_id', help='key: educationClass-id of educationClass')

    with self.argument_context('education education-class-school delta') as c:
        c.argument('education_class_id', help='key: educationClass-id of educationClass')

    with self.argument_context('education education-class-teacher delta') as c:
        c.argument('education_class_id', help='key: educationClass-id of educationClass')

    with self.argument_context('education education-me update') as c:
        c.argument('education_assignment_id', help='key: educationAssignment-id of educationAssignment')
        c.argument('id_', options_list=['--id'], help='Read-only.')
        c.argument('class_id', help='')
        c.argument('display_name', help='')
        c.argument('instructions', action=AddInstructions, nargs='*', help='educationItemBody')
        c.argument('close_date_time', help='')
        c.argument('due_date_time', help='')
        c.argument('assign_date_time', help='')
        c.argument('assigned_date_time', help='')
        c.argument('grading', type=validate_file_or_dict, help='Any object Expected value: json-string/@json-file.')
        c.argument('assign_to', type=validate_file_or_dict, help='Any object Expected value: json-string/@json-file.')
        c.argument('allow_late_submissions', arg_type=get_three_state_flag(), help='')
        c.argument('created_date_time', help='')
        c.argument('last_modified_date_time', help='')
        c.argument('allow_students_to_add_resources_to_submission', arg_type=get_three_state_flag(), help='')
        c.argument('status', arg_type=get_enum_type(['draft', 'published', 'assigned', 'unknownFutureValue']), help=''
                   'educationAssignmentStatus')
        c.argument('resources', action=AddEducationClassesResources, nargs='*', help='')
        c.argument('submissions', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('categories', action=AddCategories, nargs='*', help='')
        c.argument('rubric_id', help='Read-only.')
        c.argument('rubric_display_name', help='')
        c.argument('rubric_description', action=AddInstructions, nargs='*', help='educationItemBody')
        c.argument('rubric_qualities', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('rubric_levels', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('rubric_grading', type=validate_file_or_dict, help='Any object Expected value: '
                   'json-string/@json-file.')
        c.argument('rubric_created_date_time', help='')
        c.argument('rubric_last_modified_date_time', help='')
        c.argument('rubric_last_modified_by_user_id', help='Unique identifier for the identity.')
        c.argument('rubric_last_modified_by_user_display_name', help='The identity\'s display name. Note that this may '
                   'not always be available or up to date. For example, if a user changes their display name, the API '
                   'may show the new value in a future response, but the items associated with the user won\'t show up '
                   'as having changed when using delta.')
        c.argument('rubric_last_modified_by_device_id', help='Unique identifier for the identity.')
        c.argument('rubric_last_modified_by_device_display_name', help='The identity\'s display name. Note that this '
                   'may not always be available or up to date. For example, if a user changes their display name, the '
                   'API may show the new value in a future response, but the items associated with the user won\'t '
                   'show up as having changed when using delta.')
        c.argument('rubric_last_modified_by_application_id', help='Unique identifier for the identity.')
        c.argument('rubric_last_modified_by_application_display_name', help='The identity\'s display name. Note that '
                   'this may not always be available or up to date. For example, if a user changes their display name, '
                   'the API may show the new value in a future response, but the items associated with the user won\'t '
                   'show up as having changed when using delta.')
        c.argument('rubric_created_by_user_id', help='Unique identifier for the identity.')
        c.argument('rubric_created_by_user_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('rubric_created_by_device_id', help='Unique identifier for the identity.')
        c.argument('rubric_created_by_device_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('rubric_created_by_application_id', help='Unique identifier for the identity.')
        c.argument('rubric_created_by_application_display_name', help='The identity\'s display name. Note that this '
                   'may not always be available or up to date. For example, if a user changes their display name, the '
                   'API may show the new value in a future response, but the items associated with the user won\'t '
                   'show up as having changed when using delta.')
        c.argument('last_modified_by_user_id', help='Unique identifier for the identity.')
        c.argument('last_modified_by_user_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('last_modified_by_device_id', help='Unique identifier for the identity.')
        c.argument('last_modified_by_device_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('last_modified_by_application_id', help='Unique identifier for the identity.')
        c.argument('last_modified_by_application_display_name', help='The identity\'s display name. Note that this may '
                   'not always be available or up to date. For example, if a user changes their display name, the API '
                   'may show the new value in a future response, but the items associated with the user won\'t show up '
                   'as having changed when using delta.')
        c.argument('created_by_user_id', help='Unique identifier for the identity.')
        c.argument('created_by_user_display_name', help='The identity\'s display name. Note that this may not always '
                   'be available or up to date. For example, if a user changes their display name, the API may show '
                   'the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('created_by_device_id', help='Unique identifier for the identity.')
        c.argument('created_by_device_display_name', help='The identity\'s display name. Note that this may not always '
                   'be available or up to date. For example, if a user changes their display name, the API may show '
                   'the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('created_by_application_id', help='Unique identifier for the identity.')
        c.argument('created_by_application_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('education_rubric_id', help='key: educationRubric-id of educationRubric')
        c.argument('description', action=AddInstructions, nargs='*', help='educationItemBody')
        c.argument('qualities', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('levels', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')

    with self.argument_context('education education-me create-assignment') as c:
        c.argument('id_', options_list=['--id'], help='Read-only.')
        c.argument('class_id', help='')
        c.argument('display_name', help='')
        c.argument('instructions', action=AddInstructions, nargs='*', help='educationItemBody')
        c.argument('close_date_time', help='')
        c.argument('due_date_time', help='')
        c.argument('assign_date_time', help='')
        c.argument('assigned_date_time', help='')
        c.argument('grading', type=validate_file_or_dict, help='Any object Expected value: json-string/@json-file.')
        c.argument('assign_to', type=validate_file_or_dict, help='Any object Expected value: json-string/@json-file.')
        c.argument('allow_late_submissions', arg_type=get_three_state_flag(), help='')
        c.argument('created_date_time', help='')
        c.argument('last_modified_date_time', help='')
        c.argument('allow_students_to_add_resources_to_submission', arg_type=get_three_state_flag(), help='')
        c.argument('status', arg_type=get_enum_type(['draft', 'published', 'assigned', 'unknownFutureValue']), help=''
                   'educationAssignmentStatus')
        c.argument('resources', action=AddEducationClassesResources, nargs='*', help='')
        c.argument('submissions', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('categories', action=AddCategories, nargs='*', help='')
        c.argument('rubric_id', help='Read-only.')
        c.argument('rubric_display_name', help='')
        c.argument('rubric_description', action=AddInstructions, nargs='*', help='educationItemBody')
        c.argument('rubric_qualities', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('rubric_levels', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('rubric_grading', type=validate_file_or_dict, help='Any object Expected value: '
                   'json-string/@json-file.')
        c.argument('rubric_created_date_time', help='')
        c.argument('rubric_last_modified_date_time', help='')
        c.argument('rubric_last_modified_by_user_id', help='Unique identifier for the identity.')
        c.argument('rubric_last_modified_by_user_display_name', help='The identity\'s display name. Note that this may '
                   'not always be available or up to date. For example, if a user changes their display name, the API '
                   'may show the new value in a future response, but the items associated with the user won\'t show up '
                   'as having changed when using delta.')
        c.argument('rubric_last_modified_by_device_id', help='Unique identifier for the identity.')
        c.argument('rubric_last_modified_by_device_display_name', help='The identity\'s display name. Note that this '
                   'may not always be available or up to date. For example, if a user changes their display name, the '
                   'API may show the new value in a future response, but the items associated with the user won\'t '
                   'show up as having changed when using delta.')
        c.argument('rubric_last_modified_by_application_id', help='Unique identifier for the identity.')
        c.argument('rubric_last_modified_by_application_display_name', help='The identity\'s display name. Note that '
                   'this may not always be available or up to date. For example, if a user changes their display name, '
                   'the API may show the new value in a future response, but the items associated with the user won\'t '
                   'show up as having changed when using delta.')
        c.argument('rubric_created_by_user_id', help='Unique identifier for the identity.')
        c.argument('rubric_created_by_user_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('rubric_created_by_device_id', help='Unique identifier for the identity.')
        c.argument('rubric_created_by_device_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('rubric_created_by_application_id', help='Unique identifier for the identity.')
        c.argument('rubric_created_by_application_display_name', help='The identity\'s display name. Note that this '
                   'may not always be available or up to date. For example, if a user changes their display name, the '
                   'API may show the new value in a future response, but the items associated with the user won\'t '
                   'show up as having changed when using delta.')
        c.argument('last_modified_by_user_id', help='Unique identifier for the identity.')
        c.argument('last_modified_by_user_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('last_modified_by_device_id', help='Unique identifier for the identity.')
        c.argument('last_modified_by_device_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('last_modified_by_application_id', help='Unique identifier for the identity.')
        c.argument('last_modified_by_application_display_name', help='The identity\'s display name. Note that this may '
                   'not always be available or up to date. For example, if a user changes their display name, the API '
                   'may show the new value in a future response, but the items associated with the user won\'t show up '
                   'as having changed when using delta.')
        c.argument('created_by_user_id', help='Unique identifier for the identity.')
        c.argument('created_by_user_display_name', help='The identity\'s display name. Note that this may not always '
                   'be available or up to date. For example, if a user changes their display name, the API may show '
                   'the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('created_by_device_id', help='Unique identifier for the identity.')
        c.argument('created_by_device_display_name', help='The identity\'s display name. Note that this may not always '
                   'be available or up to date. For example, if a user changes their display name, the API may show '
                   'the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('created_by_application_id', help='Unique identifier for the identity.')
        c.argument('created_by_application_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')

    with self.argument_context('education education-me create-rubric') as c:
        c.argument('id_', options_list=['--id'], help='Read-only.')
        c.argument('display_name', help='')
        c.argument('description', action=AddInstructions, nargs='*', help='educationItemBody')
        c.argument('qualities', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('levels', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('grading', type=validate_file_or_dict, help='Any object Expected value: json-string/@json-file.')
        c.argument('created_date_time', help='')
        c.argument('last_modified_date_time', help='')
        c.argument('last_modified_by_user_id', help='Unique identifier for the identity.')
        c.argument('last_modified_by_user_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('last_modified_by_device_id', help='Unique identifier for the identity.')
        c.argument('last_modified_by_device_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('last_modified_by_application_id', help='Unique identifier for the identity.')
        c.argument('last_modified_by_application_display_name', help='The identity\'s display name. Note that this may '
                   'not always be available or up to date. For example, if a user changes their display name, the API '
                   'may show the new value in a future response, but the items associated with the user won\'t show up '
                   'as having changed when using delta.')
        c.argument('created_by_user_id', help='Unique identifier for the identity.')
        c.argument('created_by_user_display_name', help='The identity\'s display name. Note that this may not always '
                   'be available or up to date. For example, if a user changes their display name, the API may show '
                   'the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('created_by_device_id', help='Unique identifier for the identity.')
        c.argument('created_by_device_display_name', help='The identity\'s display name. Note that this may not always '
                   'be available or up to date. For example, if a user changes their display name, the API may show '
                   'the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('created_by_application_id', help='Unique identifier for the identity.')
        c.argument('created_by_application_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')

    with self.argument_context('education education-me get-assignment') as c:
        c.argument('education_assignment_id', help='key: educationAssignment-id of educationAssignment')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education-me get-class') as c:
        c.argument('education_class_id', help='key: educationClass-id of educationClass')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education-me get-rubric') as c:
        c.argument('education_rubric_id', help='key: educationRubric-id of educationRubric')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education-me get-school') as c:
        c.argument('education_school_id', help='key: educationSchool-id of educationSchool')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education-me get-taught-class') as c:
        c.argument('education_class_id', help='key: educationClass-id of educationClass')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education-me get-user') as c:
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education-me list-assignment') as c:
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education-me list-class') as c:
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education-me list-rubric') as c:
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education-me list-school') as c:
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education-me list-taught-class') as c:
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education-me-assignment update') as c:
        c.argument('education_assignment_id', help='key: educationAssignment-id of educationAssignment')
        c.argument('education_category_id', help='key: educationCategory-id of educationCategory')
        c.argument('id_', options_list=['--id'], help='Read-only.')
        c.argument('display_name', help='')
        c.argument('education_assignment_resource_id', help='key: educationAssignmentResource-id of '
                   'educationAssignmentResource')
        c.argument('distribute_for_student_work', arg_type=get_three_state_flag(), help='')
        c.argument('resource_display_name', help='')
        c.argument('resource_created_date_time', help='')
        c.argument('resource_last_modified_date_time', help='')
        c.argument('resource_last_modified_by_user_id', help='Unique identifier for the identity.')
        c.argument('resource_last_modified_by_user_display_name', help='The identity\'s display name. Note that this '
                   'may not always be available or up to date. For example, if a user changes their display name, the '
                   'API may show the new value in a future response, but the items associated with the user won\'t '
                   'show up as having changed when using delta.')
        c.argument('resource_last_modified_by_device_id', help='Unique identifier for the identity.')
        c.argument('resource_last_modified_by_device_display_name', help='The identity\'s display name. Note that this '
                   'may not always be available or up to date. For example, if a user changes their display name, the '
                   'API may show the new value in a future response, but the items associated with the user won\'t '
                   'show up as having changed when using delta.')
        c.argument('resource_last_modified_by_application_id', help='Unique identifier for the identity.')
        c.argument('resource_last_modified_by_application_display_name', help='The identity\'s display name. Note that '
                   'this may not always be available or up to date. For example, if a user changes their display name, '
                   'the API may show the new value in a future response, but the items associated with the user won\'t '
                   'show up as having changed when using delta.')
        c.argument('resource_created_by_user_id', help='Unique identifier for the identity.')
        c.argument('resource_created_by_user_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('resource_created_by_device_id', help='Unique identifier for the identity.')
        c.argument('resource_created_by_device_display_name', help='The identity\'s display name. Note that this may '
                   'not always be available or up to date. For example, if a user changes their display name, the API '
                   'may show the new value in a future response, but the items associated with the user won\'t show up '
                   'as having changed when using delta.')
        c.argument('resource_created_by_application_id', help='Unique identifier for the identity.')
        c.argument('resource_created_by_application_display_name', help='The identity\'s display name. Note that this '
                   'may not always be available or up to date. For example, if a user changes their display name, the '
                   'API may show the new value in a future response, but the items associated with the user won\'t '
                   'show up as having changed when using delta.')
        c.argument('education_submission_id', help='key: educationSubmission-id of educationSubmission')
        c.argument('recipient', type=validate_file_or_dict, help='Any object Expected value: json-string/@json-file.')
        c.argument('status', arg_type=get_enum_type(['working', 'submitted', 'released', 'returned', ''
                   'unknownFutureValue']), help='educationSubmissionStatus')
        c.argument('submitted_date_time', help='')
        c.argument('unsubmitted_date_time', help='')
        c.argument('released_date_time', help='')
        c.argument('returned_date_time', help='')
        c.argument('resources_folder_url', help='')
        c.argument('resources', action=AddEducationClassesAssignmentsResources, nargs='*', help='')
        c.argument('submitted_resources', action=AddSubmittedResources, nargs='*', help='')
        c.argument('outcomes', action=AddOutcomes, nargs='*', help='')
        c.argument('returned_by_user_id', help='Unique identifier for the identity.')
        c.argument('returned_by_user_display_name', help='The identity\'s display name. Note that this may not always '
                   'be available or up to date. For example, if a user changes their display name, the API may show '
                   'the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('returned_by_device_id', help='Unique identifier for the identity.')
        c.argument('returned_by_device_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('returned_by_application_id', help='Unique identifier for the identity.')
        c.argument('returned_by_application_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('released_by_user_id', help='Unique identifier for the identity.')
        c.argument('released_by_user_display_name', help='The identity\'s display name. Note that this may not always '
                   'be available or up to date. For example, if a user changes their display name, the API may show '
                   'the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('released_by_device_id', help='Unique identifier for the identity.')
        c.argument('released_by_device_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('released_by_application_id', help='Unique identifier for the identity.')
        c.argument('released_by_application_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('unsubmitted_by_user_id', help='Unique identifier for the identity.')
        c.argument('unsubmitted_by_user_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('unsubmitted_by_device_id', help='Unique identifier for the identity.')
        c.argument('unsubmitted_by_device_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('unsubmitted_by_application_id', help='Unique identifier for the identity.')
        c.argument('unsubmitted_by_application_display_name', help='The identity\'s display name. Note that this may '
                   'not always be available or up to date. For example, if a user changes their display name, the API '
                   'may show the new value in a future response, but the items associated with the user won\'t show up '
                   'as having changed when using delta.')
        c.argument('submitted_by_user_id', help='Unique identifier for the identity.')
        c.argument('submitted_by_user_display_name', help='The identity\'s display name. Note that this may not always '
                   'be available or up to date. For example, if a user changes their display name, the API may show '
                   'the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('submitted_by_device_id', help='Unique identifier for the identity.')
        c.argument('submitted_by_device_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('submitted_by_application_id', help='Unique identifier for the identity.')
        c.argument('submitted_by_application_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('description', action=AddInstructions, nargs='*', help='educationItemBody')
        c.argument('qualities', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('levels', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('grading', type=validate_file_or_dict, help='Any object Expected value: json-string/@json-file.')
        c.argument('created_date_time', help='')
        c.argument('last_modified_date_time', help='')
        c.argument('last_modified_by_user_id', help='Unique identifier for the identity.')
        c.argument('last_modified_by_user_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('last_modified_by_device_id', help='Unique identifier for the identity.')
        c.argument('last_modified_by_device_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('last_modified_by_application_id', help='Unique identifier for the identity.')
        c.argument('last_modified_by_application_display_name', help='The identity\'s display name. Note that this may '
                   'not always be available or up to date. For example, if a user changes their display name, the API '
                   'may show the new value in a future response, but the items associated with the user won\'t show up '
                   'as having changed when using delta.')
        c.argument('created_by_user_id', help='Unique identifier for the identity.')
        c.argument('created_by_user_display_name', help='The identity\'s display name. Note that this may not always '
                   'be available or up to date. For example, if a user changes their display name, the API may show '
                   'the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('created_by_device_id', help='Unique identifier for the identity.')
        c.argument('created_by_device_display_name', help='The identity\'s display name. Note that this may not always '
                   'be available or up to date. For example, if a user changes their display name, the API may show '
                   'the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('created_by_application_id', help='Unique identifier for the identity.')
        c.argument('created_by_application_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')

    with self.argument_context('education education-me-assignment create-category') as c:
        c.argument('education_assignment_id', help='key: educationAssignment-id of educationAssignment')
        c.argument('id_', options_list=['--id'], help='Read-only.')
        c.argument('display_name', help='')

    with self.argument_context('education education-me-assignment create-resource') as c:
        c.argument('education_assignment_id', help='key: educationAssignment-id of educationAssignment')
        c.argument('id_', options_list=['--id'], help='Read-only.')
        c.argument('distribute_for_student_work', arg_type=get_three_state_flag(), help='')
        c.argument('resource_display_name', help='')
        c.argument('resource_created_date_time', help='')
        c.argument('resource_last_modified_date_time', help='')
        c.argument('resource_last_modified_by_user_id', help='Unique identifier for the identity.')
        c.argument('resource_last_modified_by_user_display_name', help='The identity\'s display name. Note that this '
                   'may not always be available or up to date. For example, if a user changes their display name, the '
                   'API may show the new value in a future response, but the items associated with the user won\'t '
                   'show up as having changed when using delta.')
        c.argument('resource_last_modified_by_device_id', help='Unique identifier for the identity.')
        c.argument('resource_last_modified_by_device_display_name', help='The identity\'s display name. Note that this '
                   'may not always be available or up to date. For example, if a user changes their display name, the '
                   'API may show the new value in a future response, but the items associated with the user won\'t '
                   'show up as having changed when using delta.')
        c.argument('resource_last_modified_by_application_id', help='Unique identifier for the identity.')
        c.argument('resource_last_modified_by_application_display_name', help='The identity\'s display name. Note that '
                   'this may not always be available or up to date. For example, if a user changes their display name, '
                   'the API may show the new value in a future response, but the items associated with the user won\'t '
                   'show up as having changed when using delta.')
        c.argument('resource_created_by_user_id', help='Unique identifier for the identity.')
        c.argument('resource_created_by_user_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('resource_created_by_device_id', help='Unique identifier for the identity.')
        c.argument('resource_created_by_device_display_name', help='The identity\'s display name. Note that this may '
                   'not always be available or up to date. For example, if a user changes their display name, the API '
                   'may show the new value in a future response, but the items associated with the user won\'t show up '
                   'as having changed when using delta.')
        c.argument('resource_created_by_application_id', help='Unique identifier for the identity.')
        c.argument('resource_created_by_application_display_name', help='The identity\'s display name. Note that this '
                   'may not always be available or up to date. For example, if a user changes their display name, the '
                   'API may show the new value in a future response, but the items associated with the user won\'t '
                   'show up as having changed when using delta.')

    with self.argument_context('education education-me-assignment create-submission') as c:
        c.argument('education_assignment_id', help='key: educationAssignment-id of educationAssignment')
        c.argument('id_', options_list=['--id'], help='Read-only.')
        c.argument('recipient', type=validate_file_or_dict, help='Any object Expected value: json-string/@json-file.')
        c.argument('status', arg_type=get_enum_type(['working', 'submitted', 'released', 'returned', ''
                   'unknownFutureValue']), help='educationSubmissionStatus')
        c.argument('submitted_date_time', help='')
        c.argument('unsubmitted_date_time', help='')
        c.argument('released_date_time', help='')
        c.argument('returned_date_time', help='')
        c.argument('resources_folder_url', help='')
        c.argument('resources', action=AddEducationClassesAssignmentsResources, nargs='*', help='')
        c.argument('submitted_resources', action=AddSubmittedResources, nargs='*', help='')
        c.argument('outcomes', action=AddOutcomes, nargs='*', help='')
        c.argument('returned_by_user_id', help='Unique identifier for the identity.')
        c.argument('returned_by_user_display_name', help='The identity\'s display name. Note that this may not always '
                   'be available or up to date. For example, if a user changes their display name, the API may show '
                   'the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('returned_by_device_id', help='Unique identifier for the identity.')
        c.argument('returned_by_device_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('returned_by_application_id', help='Unique identifier for the identity.')
        c.argument('returned_by_application_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('released_by_user_id', help='Unique identifier for the identity.')
        c.argument('released_by_user_display_name', help='The identity\'s display name. Note that this may not always '
                   'be available or up to date. For example, if a user changes their display name, the API may show '
                   'the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('released_by_device_id', help='Unique identifier for the identity.')
        c.argument('released_by_device_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('released_by_application_id', help='Unique identifier for the identity.')
        c.argument('released_by_application_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('unsubmitted_by_user_id', help='Unique identifier for the identity.')
        c.argument('unsubmitted_by_user_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('unsubmitted_by_device_id', help='Unique identifier for the identity.')
        c.argument('unsubmitted_by_device_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('unsubmitted_by_application_id', help='Unique identifier for the identity.')
        c.argument('unsubmitted_by_application_display_name', help='The identity\'s display name. Note that this may '
                   'not always be available or up to date. For example, if a user changes their display name, the API '
                   'may show the new value in a future response, but the items associated with the user won\'t show up '
                   'as having changed when using delta.')
        c.argument('submitted_by_user_id', help='Unique identifier for the identity.')
        c.argument('submitted_by_user_display_name', help='The identity\'s display name. Note that this may not always '
                   'be available or up to date. For example, if a user changes their display name, the API may show '
                   'the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('submitted_by_device_id', help='Unique identifier for the identity.')
        c.argument('submitted_by_device_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('submitted_by_application_id', help='Unique identifier for the identity.')
        c.argument('submitted_by_application_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')

    with self.argument_context('education education-me-assignment get-category') as c:
        c.argument('education_assignment_id', help='key: educationAssignment-id of educationAssignment')
        c.argument('education_category_id', help='key: educationCategory-id of educationCategory')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education-me-assignment get-resource') as c:
        c.argument('education_assignment_id', help='key: educationAssignment-id of educationAssignment')
        c.argument('education_assignment_resource_id', help='key: educationAssignmentResource-id of '
                   'educationAssignmentResource')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education-me-assignment get-resource-folder-url') as c:
        c.argument('education_assignment_id', help='key: educationAssignment-id of educationAssignment')

    with self.argument_context('education education-me-assignment get-rubric') as c:
        c.argument('education_assignment_id', help='key: educationAssignment-id of educationAssignment')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education-me-assignment get-submission') as c:
        c.argument('education_assignment_id', help='key: educationAssignment-id of educationAssignment')
        c.argument('education_submission_id', help='key: educationSubmission-id of educationSubmission')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education-me-assignment list-category') as c:
        c.argument('education_assignment_id', help='key: educationAssignment-id of educationAssignment')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education-me-assignment list-resource') as c:
        c.argument('education_assignment_id', help='key: educationAssignment-id of educationAssignment')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education-me-assignment list-submission') as c:
        c.argument('education_assignment_id', help='key: educationAssignment-id of educationAssignment')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education-me-assignment publish') as c:
        c.argument('education_assignment_id', help='key: educationAssignment-id of educationAssignment')

    with self.argument_context('education education-me-assignment-submission update') as c:
        c.argument('education_assignment_id', help='key: educationAssignment-id of educationAssignment')
        c.argument('education_submission_id', help='key: educationSubmission-id of educationSubmission')
        c.argument('education_outcome_id', help='key: educationOutcome-id of educationOutcome')
        c.argument('id_', options_list=['--id'], help='Read-only.')
        c.argument('last_modified_date_time', help='')
        c.argument('last_modified_by_user_id', help='Unique identifier for the identity.')
        c.argument('last_modified_by_user_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('last_modified_by_device_id', help='Unique identifier for the identity.')
        c.argument('last_modified_by_device_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('last_modified_by_application_id', help='Unique identifier for the identity.')
        c.argument('last_modified_by_application_display_name', help='The identity\'s display name. Note that this may '
                   'not always be available or up to date. For example, if a user changes their display name, the API '
                   'may show the new value in a future response, but the items associated with the user won\'t show up '
                   'as having changed when using delta.')
        c.argument('education_submission_resource_id', help='key: educationSubmissionResource-id of '
                   'educationSubmissionResource')
        c.argument('assignment_resource_url', help='')
        c.argument('resource_display_name', help='')
        c.argument('resource_created_date_time', help='')
        c.argument('resource_last_modified_date_time', help='')
        c.argument('resource_last_modified_by_user_id', help='Unique identifier for the identity.')
        c.argument('resource_last_modified_by_user_display_name', help='The identity\'s display name. Note that this '
                   'may not always be available or up to date. For example, if a user changes their display name, the '
                   'API may show the new value in a future response, but the items associated with the user won\'t '
                   'show up as having changed when using delta.')
        c.argument('resource_last_modified_by_device_id', help='Unique identifier for the identity.')
        c.argument('resource_last_modified_by_device_display_name', help='The identity\'s display name. Note that this '
                   'may not always be available or up to date. For example, if a user changes their display name, the '
                   'API may show the new value in a future response, but the items associated with the user won\'t '
                   'show up as having changed when using delta.')
        c.argument('resource_last_modified_by_application_id', help='Unique identifier for the identity.')
        c.argument('resource_last_modified_by_application_display_name', help='The identity\'s display name. Note that '
                   'this may not always be available or up to date. For example, if a user changes their display name, '
                   'the API may show the new value in a future response, but the items associated with the user won\'t '
                   'show up as having changed when using delta.')
        c.argument('resource_created_by_user_id', help='Unique identifier for the identity.')
        c.argument('resource_created_by_user_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('resource_created_by_device_id', help='Unique identifier for the identity.')
        c.argument('resource_created_by_device_display_name', help='The identity\'s display name. Note that this may '
                   'not always be available or up to date. For example, if a user changes their display name, the API '
                   'may show the new value in a future response, but the items associated with the user won\'t show up '
                   'as having changed when using delta.')
        c.argument('resource_created_by_application_id', help='Unique identifier for the identity.')
        c.argument('resource_created_by_application_display_name', help='The identity\'s display name. Note that this '
                   'may not always be available or up to date. For example, if a user changes their display name, the '
                   'API may show the new value in a future response, but the items associated with the user won\'t '
                   'show up as having changed when using delta.')

    with self.argument_context('education education-me-assignment-submission create-outcome') as c:
        c.argument('education_assignment_id', help='key: educationAssignment-id of educationAssignment')
        c.argument('education_submission_id', help='key: educationSubmission-id of educationSubmission')
        c.argument('id_', options_list=['--id'], help='Read-only.')
        c.argument('last_modified_date_time', help='')
        c.argument('last_modified_by_user_id', help='Unique identifier for the identity.')
        c.argument('last_modified_by_user_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('last_modified_by_device_id', help='Unique identifier for the identity.')
        c.argument('last_modified_by_device_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('last_modified_by_application_id', help='Unique identifier for the identity.')
        c.argument('last_modified_by_application_display_name', help='The identity\'s display name. Note that this may '
                   'not always be available or up to date. For example, if a user changes their display name, the API '
                   'may show the new value in a future response, but the items associated with the user won\'t show up '
                   'as having changed when using delta.')

    with self.argument_context('education education-me-assignment-submission create-resource') as c:
        c.argument('education_assignment_id', help='key: educationAssignment-id of educationAssignment')
        c.argument('education_submission_id', help='key: educationSubmission-id of educationSubmission')
        c.argument('id_', options_list=['--id'], help='Read-only.')
        c.argument('assignment_resource_url', help='')
        c.argument('resource_display_name', help='')
        c.argument('resource_created_date_time', help='')
        c.argument('resource_last_modified_date_time', help='')
        c.argument('resource_last_modified_by_user_id', help='Unique identifier for the identity.')
        c.argument('resource_last_modified_by_user_display_name', help='The identity\'s display name. Note that this '
                   'may not always be available or up to date. For example, if a user changes their display name, the '
                   'API may show the new value in a future response, but the items associated with the user won\'t '
                   'show up as having changed when using delta.')
        c.argument('resource_last_modified_by_device_id', help='Unique identifier for the identity.')
        c.argument('resource_last_modified_by_device_display_name', help='The identity\'s display name. Note that this '
                   'may not always be available or up to date. For example, if a user changes their display name, the '
                   'API may show the new value in a future response, but the items associated with the user won\'t '
                   'show up as having changed when using delta.')
        c.argument('resource_last_modified_by_application_id', help='Unique identifier for the identity.')
        c.argument('resource_last_modified_by_application_display_name', help='The identity\'s display name. Note that '
                   'this may not always be available or up to date. For example, if a user changes their display name, '
                   'the API may show the new value in a future response, but the items associated with the user won\'t '
                   'show up as having changed when using delta.')
        c.argument('resource_created_by_user_id', help='Unique identifier for the identity.')
        c.argument('resource_created_by_user_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('resource_created_by_device_id', help='Unique identifier for the identity.')
        c.argument('resource_created_by_device_display_name', help='The identity\'s display name. Note that this may '
                   'not always be available or up to date. For example, if a user changes their display name, the API '
                   'may show the new value in a future response, but the items associated with the user won\'t show up '
                   'as having changed when using delta.')
        c.argument('resource_created_by_application_id', help='Unique identifier for the identity.')
        c.argument('resource_created_by_application_display_name', help='The identity\'s display name. Note that this '
                   'may not always be available or up to date. For example, if a user changes their display name, the '
                   'API may show the new value in a future response, but the items associated with the user won\'t '
                   'show up as having changed when using delta.')

    with self.argument_context('education education-me-assignment-submission create-submitted-resource') as c:
        c.argument('education_assignment_id', help='key: educationAssignment-id of educationAssignment')
        c.argument('education_submission_id', help='key: educationSubmission-id of educationSubmission')
        c.argument('id_', options_list=['--id'], help='Read-only.')
        c.argument('assignment_resource_url', help='')
        c.argument('resource_display_name', help='')
        c.argument('resource_created_date_time', help='')
        c.argument('resource_last_modified_date_time', help='')
        c.argument('resource_last_modified_by_user_id', help='Unique identifier for the identity.')
        c.argument('resource_last_modified_by_user_display_name', help='The identity\'s display name. Note that this '
                   'may not always be available or up to date. For example, if a user changes their display name, the '
                   'API may show the new value in a future response, but the items associated with the user won\'t '
                   'show up as having changed when using delta.')
        c.argument('resource_last_modified_by_device_id', help='Unique identifier for the identity.')
        c.argument('resource_last_modified_by_device_display_name', help='The identity\'s display name. Note that this '
                   'may not always be available or up to date. For example, if a user changes their display name, the '
                   'API may show the new value in a future response, but the items associated with the user won\'t '
                   'show up as having changed when using delta.')
        c.argument('resource_last_modified_by_application_id', help='Unique identifier for the identity.')
        c.argument('resource_last_modified_by_application_display_name', help='The identity\'s display name. Note that '
                   'this may not always be available or up to date. For example, if a user changes their display name, '
                   'the API may show the new value in a future response, but the items associated with the user won\'t '
                   'show up as having changed when using delta.')
        c.argument('resource_created_by_user_id', help='Unique identifier for the identity.')
        c.argument('resource_created_by_user_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('resource_created_by_device_id', help='Unique identifier for the identity.')
        c.argument('resource_created_by_device_display_name', help='The identity\'s display name. Note that this may '
                   'not always be available or up to date. For example, if a user changes their display name, the API '
                   'may show the new value in a future response, but the items associated with the user won\'t show up '
                   'as having changed when using delta.')
        c.argument('resource_created_by_application_id', help='Unique identifier for the identity.')
        c.argument('resource_created_by_application_display_name', help='The identity\'s display name. Note that this '
                   'may not always be available or up to date. For example, if a user changes their display name, the '
                   'API may show the new value in a future response, but the items associated with the user won\'t '
                   'show up as having changed when using delta.')

    with self.argument_context('education education-me-assignment-submission get-outcome') as c:
        c.argument('education_assignment_id', help='key: educationAssignment-id of educationAssignment')
        c.argument('education_submission_id', help='key: educationSubmission-id of educationSubmission')
        c.argument('education_outcome_id', help='key: educationOutcome-id of educationOutcome')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education-me-assignment-submission get-resource') as c:
        c.argument('education_assignment_id', help='key: educationAssignment-id of educationAssignment')
        c.argument('education_submission_id', help='key: educationSubmission-id of educationSubmission')
        c.argument('education_submission_resource_id', help='key: educationSubmissionResource-id of '
                   'educationSubmissionResource')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education-me-assignment-submission get-submitted-resource') as c:
        c.argument('education_assignment_id', help='key: educationAssignment-id of educationAssignment')
        c.argument('education_submission_id', help='key: educationSubmission-id of educationSubmission')
        c.argument('education_submission_resource_id', help='key: educationSubmissionResource-id of '
                   'educationSubmissionResource')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education-me-assignment-submission list-outcome') as c:
        c.argument('education_assignment_id', help='key: educationAssignment-id of educationAssignment')
        c.argument('education_submission_id', help='key: educationSubmission-id of educationSubmission')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education-me-assignment-submission list-resource') as c:
        c.argument('education_assignment_id', help='key: educationAssignment-id of educationAssignment')
        c.argument('education_submission_id', help='key: educationSubmission-id of educationSubmission')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education-me-assignment-submission list-submitted-resource') as c:
        c.argument('education_assignment_id', help='key: educationAssignment-id of educationAssignment')
        c.argument('education_submission_id', help='key: educationSubmission-id of educationSubmission')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education-me-assignment-submission return') as c:
        c.argument('education_assignment_id', help='key: educationAssignment-id of educationAssignment')
        c.argument('education_submission_id', help='key: educationSubmission-id of educationSubmission')

    with self.argument_context('education education-me-assignment-submission submit') as c:
        c.argument('education_assignment_id', help='key: educationAssignment-id of educationAssignment')
        c.argument('education_submission_id', help='key: educationSubmission-id of educationSubmission')

    with self.argument_context('education education-me-assignment-submission unsubmit') as c:
        c.argument('education_assignment_id', help='key: educationAssignment-id of educationAssignment')
        c.argument('education_submission_id', help='key: educationSubmission-id of educationSubmission')

    with self.argument_context('education education-me-class delta') as c:
        pass

    with self.argument_context('education education-me-school delta') as c:
        pass

    with self.argument_context('education education-me-taught-class delta') as c:
        pass

    with self.argument_context('education education-school delta') as c:
        pass

    with self.argument_context('education education-school get-administrative-unit') as c:
        c.argument('education_school_id', help='key: educationSchool-id of educationSchool')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education-school get-class') as c:
        c.argument('education_school_id', help='key: educationSchool-id of educationSchool')
        c.argument('education_class_id', help='key: educationClass-id of educationClass')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education-school get-user') as c:
        c.argument('education_school_id', help='key: educationSchool-id of educationSchool')
        c.argument('education_user_id', help='key: educationUser-id of educationUser')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education-school list-class') as c:
        c.argument('education_school_id', help='key: educationSchool-id of educationSchool')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education-school list-user') as c:
        c.argument('education_school_id', help='key: educationSchool-id of educationSchool')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education-school-class delta') as c:
        c.argument('education_school_id', help='key: educationSchool-id of educationSchool')

    with self.argument_context('education education-school-user delta') as c:
        c.argument('education_school_id', help='key: educationSchool-id of educationSchool')

    with self.argument_context('education education-synchronization-profile update') as c:
        c.argument('education_synchronization_profile_id', help='key: educationSynchronizationProfile-id of '
                   'educationSynchronizationProfile')
        c.argument('education_synchronization_error_id', help='key: educationSynchronizationError-id of '
                   'educationSynchronizationError')
        c.argument('id_', options_list=['--id'], help='Read-only.')
        c.argument('entry_type', help='')
        c.argument('error_code', help='')
        c.argument('error_message', help='')
        c.argument('joining_value', help='')
        c.argument('recorded_date_time', help='')
        c.argument('reportable_identifier', help='')
        c.argument('status', arg_type=get_enum_type(['paused', 'inProgress', 'success', 'error', 'validationError', ''
                   'quarantined', 'unknownFutureValue']), help='educationSynchronizationStatus')
        c.argument('last_synchronization_date_time', help='')

    with self.argument_context('education education-synchronization-profile create-error') as c:
        c.argument('education_synchronization_profile_id', help='key: educationSynchronizationProfile-id of '
                   'educationSynchronizationProfile')
        c.argument('id_', options_list=['--id'], help='Read-only.')
        c.argument('entry_type', help='')
        c.argument('error_code', help='')
        c.argument('error_message', help='')
        c.argument('joining_value', help='')
        c.argument('recorded_date_time', help='')
        c.argument('reportable_identifier', help='')

    with self.argument_context('education education-synchronization-profile get-error') as c:
        c.argument('education_synchronization_profile_id', help='key: educationSynchronizationProfile-id of '
                   'educationSynchronizationProfile')
        c.argument('education_synchronization_error_id', help='key: educationSynchronizationError-id of '
                   'educationSynchronizationError')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education-synchronization-profile get-profile-status') as c:
        c.argument('education_synchronization_profile_id', help='key: educationSynchronizationProfile-id of '
                   'educationSynchronizationProfile')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education-synchronization-profile list-error') as c:
        c.argument('education_synchronization_profile_id', help='key: educationSynchronizationProfile-id of '
                   'educationSynchronizationProfile')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education-synchronization-profile pause') as c:
        c.argument('education_synchronization_profile_id', help='key: educationSynchronizationProfile-id of '
                   'educationSynchronizationProfile')

    with self.argument_context('education education-synchronization-profile reset') as c:
        c.argument('education_synchronization_profile_id', help='key: educationSynchronizationProfile-id of '
                   'educationSynchronizationProfile')

    with self.argument_context('education education-synchronization-profile resume') as c:
        c.argument('education_synchronization_profile_id', help='key: educationSynchronizationProfile-id of '
                   'educationSynchronizationProfile')

    with self.argument_context('education education-synchronization-profile start') as c:
        c.argument('education_synchronization_profile_id', help='key: educationSynchronizationProfile-id of '
                   'educationSynchronizationProfile')

    with self.argument_context('education education-synchronization-profile upload-url') as c:
        c.argument('education_synchronization_profile_id', help='key: educationSynchronizationProfile-id of '
                   'educationSynchronizationProfile')

    with self.argument_context('education education-user update') as c:
        c.argument('education_user_id', help='key: educationUser-id of educationUser')
        c.argument('education_assignment_id', help='key: educationAssignment-id of educationAssignment')
        c.argument('id_', options_list=['--id'], help='Read-only.')
        c.argument('class_id', help='')
        c.argument('display_name', help='')
        c.argument('instructions', action=AddInstructions, nargs='*', help='educationItemBody')
        c.argument('close_date_time', help='')
        c.argument('due_date_time', help='')
        c.argument('assign_date_time', help='')
        c.argument('assigned_date_time', help='')
        c.argument('grading', type=validate_file_or_dict, help='Any object Expected value: json-string/@json-file.')
        c.argument('assign_to', type=validate_file_or_dict, help='Any object Expected value: json-string/@json-file.')
        c.argument('allow_late_submissions', arg_type=get_three_state_flag(), help='')
        c.argument('created_date_time', help='')
        c.argument('last_modified_date_time', help='')
        c.argument('allow_students_to_add_resources_to_submission', arg_type=get_three_state_flag(), help='')
        c.argument('status', arg_type=get_enum_type(['draft', 'published', 'assigned', 'unknownFutureValue']), help=''
                   'educationAssignmentStatus')
        c.argument('resources', action=AddEducationClassesResources, nargs='*', help='')
        c.argument('submissions', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('categories', action=AddCategories, nargs='*', help='')
        c.argument('rubric_id', help='Read-only.')
        c.argument('rubric_display_name', help='')
        c.argument('rubric_description', action=AddInstructions, nargs='*', help='educationItemBody')
        c.argument('rubric_qualities', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('rubric_levels', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('rubric_grading', type=validate_file_or_dict, help='Any object Expected value: '
                   'json-string/@json-file.')
        c.argument('rubric_created_date_time', help='')
        c.argument('rubric_last_modified_date_time', help='')
        c.argument('rubric_last_modified_by_user_id', help='Unique identifier for the identity.')
        c.argument('rubric_last_modified_by_user_display_name', help='The identity\'s display name. Note that this may '
                   'not always be available or up to date. For example, if a user changes their display name, the API '
                   'may show the new value in a future response, but the items associated with the user won\'t show up '
                   'as having changed when using delta.')
        c.argument('rubric_last_modified_by_device_id', help='Unique identifier for the identity.')
        c.argument('rubric_last_modified_by_device_display_name', help='The identity\'s display name. Note that this '
                   'may not always be available or up to date. For example, if a user changes their display name, the '
                   'API may show the new value in a future response, but the items associated with the user won\'t '
                   'show up as having changed when using delta.')
        c.argument('rubric_last_modified_by_application_id', help='Unique identifier for the identity.')
        c.argument('rubric_last_modified_by_application_display_name', help='The identity\'s display name. Note that '
                   'this may not always be available or up to date. For example, if a user changes their display name, '
                   'the API may show the new value in a future response, but the items associated with the user won\'t '
                   'show up as having changed when using delta.')
        c.argument('rubric_created_by_user_id', help='Unique identifier for the identity.')
        c.argument('rubric_created_by_user_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('rubric_created_by_device_id', help='Unique identifier for the identity.')
        c.argument('rubric_created_by_device_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('rubric_created_by_application_id', help='Unique identifier for the identity.')
        c.argument('rubric_created_by_application_display_name', help='The identity\'s display name. Note that this '
                   'may not always be available or up to date. For example, if a user changes their display name, the '
                   'API may show the new value in a future response, but the items associated with the user won\'t '
                   'show up as having changed when using delta.')
        c.argument('last_modified_by_user_id', help='Unique identifier for the identity.')
        c.argument('last_modified_by_user_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('last_modified_by_device_id', help='Unique identifier for the identity.')
        c.argument('last_modified_by_device_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('last_modified_by_application_id', help='Unique identifier for the identity.')
        c.argument('last_modified_by_application_display_name', help='The identity\'s display name. Note that this may '
                   'not always be available or up to date. For example, if a user changes their display name, the API '
                   'may show the new value in a future response, but the items associated with the user won\'t show up '
                   'as having changed when using delta.')
        c.argument('created_by_user_id', help='Unique identifier for the identity.')
        c.argument('created_by_user_display_name', help='The identity\'s display name. Note that this may not always '
                   'be available or up to date. For example, if a user changes their display name, the API may show '
                   'the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('created_by_device_id', help='Unique identifier for the identity.')
        c.argument('created_by_device_display_name', help='The identity\'s display name. Note that this may not always '
                   'be available or up to date. For example, if a user changes their display name, the API may show '
                   'the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('created_by_application_id', help='Unique identifier for the identity.')
        c.argument('created_by_application_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('education_rubric_id', help='key: educationRubric-id of educationRubric')
        c.argument('description', action=AddInstructions, nargs='*', help='educationItemBody')
        c.argument('qualities', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('levels', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')

    with self.argument_context('education education-user create-assignment') as c:
        c.argument('education_user_id', help='key: educationUser-id of educationUser')
        c.argument('id_', options_list=['--id'], help='Read-only.')
        c.argument('class_id', help='')
        c.argument('display_name', help='')
        c.argument('instructions', action=AddInstructions, nargs='*', help='educationItemBody')
        c.argument('close_date_time', help='')
        c.argument('due_date_time', help='')
        c.argument('assign_date_time', help='')
        c.argument('assigned_date_time', help='')
        c.argument('grading', type=validate_file_or_dict, help='Any object Expected value: json-string/@json-file.')
        c.argument('assign_to', type=validate_file_or_dict, help='Any object Expected value: json-string/@json-file.')
        c.argument('allow_late_submissions', arg_type=get_three_state_flag(), help='')
        c.argument('created_date_time', help='')
        c.argument('last_modified_date_time', help='')
        c.argument('allow_students_to_add_resources_to_submission', arg_type=get_three_state_flag(), help='')
        c.argument('status', arg_type=get_enum_type(['draft', 'published', 'assigned', 'unknownFutureValue']), help=''
                   'educationAssignmentStatus')
        c.argument('resources', action=AddEducationClassesResources, nargs='*', help='')
        c.argument('submissions', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('categories', action=AddCategories, nargs='*', help='')
        c.argument('rubric_id', help='Read-only.')
        c.argument('rubric_display_name', help='')
        c.argument('rubric_description', action=AddInstructions, nargs='*', help='educationItemBody')
        c.argument('rubric_qualities', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('rubric_levels', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('rubric_grading', type=validate_file_or_dict, help='Any object Expected value: '
                   'json-string/@json-file.')
        c.argument('rubric_created_date_time', help='')
        c.argument('rubric_last_modified_date_time', help='')
        c.argument('rubric_last_modified_by_user_id', help='Unique identifier for the identity.')
        c.argument('rubric_last_modified_by_user_display_name', help='The identity\'s display name. Note that this may '
                   'not always be available or up to date. For example, if a user changes their display name, the API '
                   'may show the new value in a future response, but the items associated with the user won\'t show up '
                   'as having changed when using delta.')
        c.argument('rubric_last_modified_by_device_id', help='Unique identifier for the identity.')
        c.argument('rubric_last_modified_by_device_display_name', help='The identity\'s display name. Note that this '
                   'may not always be available or up to date. For example, if a user changes their display name, the '
                   'API may show the new value in a future response, but the items associated with the user won\'t '
                   'show up as having changed when using delta.')
        c.argument('rubric_last_modified_by_application_id', help='Unique identifier for the identity.')
        c.argument('rubric_last_modified_by_application_display_name', help='The identity\'s display name. Note that '
                   'this may not always be available or up to date. For example, if a user changes their display name, '
                   'the API may show the new value in a future response, but the items associated with the user won\'t '
                   'show up as having changed when using delta.')
        c.argument('rubric_created_by_user_id', help='Unique identifier for the identity.')
        c.argument('rubric_created_by_user_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('rubric_created_by_device_id', help='Unique identifier for the identity.')
        c.argument('rubric_created_by_device_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('rubric_created_by_application_id', help='Unique identifier for the identity.')
        c.argument('rubric_created_by_application_display_name', help='The identity\'s display name. Note that this '
                   'may not always be available or up to date. For example, if a user changes their display name, the '
                   'API may show the new value in a future response, but the items associated with the user won\'t '
                   'show up as having changed when using delta.')
        c.argument('last_modified_by_user_id', help='Unique identifier for the identity.')
        c.argument('last_modified_by_user_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('last_modified_by_device_id', help='Unique identifier for the identity.')
        c.argument('last_modified_by_device_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('last_modified_by_application_id', help='Unique identifier for the identity.')
        c.argument('last_modified_by_application_display_name', help='The identity\'s display name. Note that this may '
                   'not always be available or up to date. For example, if a user changes their display name, the API '
                   'may show the new value in a future response, but the items associated with the user won\'t show up '
                   'as having changed when using delta.')
        c.argument('created_by_user_id', help='Unique identifier for the identity.')
        c.argument('created_by_user_display_name', help='The identity\'s display name. Note that this may not always '
                   'be available or up to date. For example, if a user changes their display name, the API may show '
                   'the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('created_by_device_id', help='Unique identifier for the identity.')
        c.argument('created_by_device_display_name', help='The identity\'s display name. Note that this may not always '
                   'be available or up to date. For example, if a user changes their display name, the API may show '
                   'the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('created_by_application_id', help='Unique identifier for the identity.')
        c.argument('created_by_application_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')

    with self.argument_context('education education-user create-rubric') as c:
        c.argument('education_user_id', help='key: educationUser-id of educationUser')
        c.argument('id_', options_list=['--id'], help='Read-only.')
        c.argument('display_name', help='')
        c.argument('description', action=AddInstructions, nargs='*', help='educationItemBody')
        c.argument('qualities', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('levels', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('grading', type=validate_file_or_dict, help='Any object Expected value: json-string/@json-file.')
        c.argument('created_date_time', help='')
        c.argument('last_modified_date_time', help='')
        c.argument('last_modified_by_user_id', help='Unique identifier for the identity.')
        c.argument('last_modified_by_user_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('last_modified_by_device_id', help='Unique identifier for the identity.')
        c.argument('last_modified_by_device_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('last_modified_by_application_id', help='Unique identifier for the identity.')
        c.argument('last_modified_by_application_display_name', help='The identity\'s display name. Note that this may '
                   'not always be available or up to date. For example, if a user changes their display name, the API '
                   'may show the new value in a future response, but the items associated with the user won\'t show up '
                   'as having changed when using delta.')
        c.argument('created_by_user_id', help='Unique identifier for the identity.')
        c.argument('created_by_user_display_name', help='The identity\'s display name. Note that this may not always '
                   'be available or up to date. For example, if a user changes their display name, the API may show '
                   'the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('created_by_device_id', help='Unique identifier for the identity.')
        c.argument('created_by_device_display_name', help='The identity\'s display name. Note that this may not always '
                   'be available or up to date. For example, if a user changes their display name, the API may show '
                   'the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('created_by_application_id', help='Unique identifier for the identity.')
        c.argument('created_by_application_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')

    with self.argument_context('education education-user delta') as c:
        pass

    with self.argument_context('education education-user get-assignment') as c:
        c.argument('education_user_id', help='key: educationUser-id of educationUser')
        c.argument('education_assignment_id', help='key: educationAssignment-id of educationAssignment')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education-user get-class') as c:
        c.argument('education_user_id', help='key: educationUser-id of educationUser')
        c.argument('education_class_id', help='key: educationClass-id of educationClass')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education-user get-rubric') as c:
        c.argument('education_user_id', help='key: educationUser-id of educationUser')
        c.argument('education_rubric_id', help='key: educationRubric-id of educationRubric')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education-user get-school') as c:
        c.argument('education_user_id', help='key: educationUser-id of educationUser')
        c.argument('education_school_id', help='key: educationSchool-id of educationSchool')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education-user get-taught-class') as c:
        c.argument('education_user_id', help='key: educationUser-id of educationUser')
        c.argument('education_class_id', help='key: educationClass-id of educationClass')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education-user get-user') as c:
        c.argument('education_user_id', help='key: educationUser-id of educationUser')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education-user list-assignment') as c:
        c.argument('education_user_id', help='key: educationUser-id of educationUser')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education-user list-class') as c:
        c.argument('education_user_id', help='key: educationUser-id of educationUser')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education-user list-rubric') as c:
        c.argument('education_user_id', help='key: educationUser-id of educationUser')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education-user list-school') as c:
        c.argument('education_user_id', help='key: educationUser-id of educationUser')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education-user list-taught-class') as c:
        c.argument('education_user_id', help='key: educationUser-id of educationUser')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education-user-assignment update') as c:
        c.argument('education_user_id', help='key: educationUser-id of educationUser')
        c.argument('education_assignment_id', help='key: educationAssignment-id of educationAssignment')
        c.argument('education_category_id', help='key: educationCategory-id of educationCategory')
        c.argument('id_', options_list=['--id'], help='Read-only.')
        c.argument('display_name', help='')
        c.argument('education_assignment_resource_id', help='key: educationAssignmentResource-id of '
                   'educationAssignmentResource')
        c.argument('distribute_for_student_work', arg_type=get_three_state_flag(), help='')
        c.argument('resource_display_name', help='')
        c.argument('resource_created_date_time', help='')
        c.argument('resource_last_modified_date_time', help='')
        c.argument('resource_last_modified_by_user_id', help='Unique identifier for the identity.')
        c.argument('resource_last_modified_by_user_display_name', help='The identity\'s display name. Note that this '
                   'may not always be available or up to date. For example, if a user changes their display name, the '
                   'API may show the new value in a future response, but the items associated with the user won\'t '
                   'show up as having changed when using delta.')
        c.argument('resource_last_modified_by_device_id', help='Unique identifier for the identity.')
        c.argument('resource_last_modified_by_device_display_name', help='The identity\'s display name. Note that this '
                   'may not always be available or up to date. For example, if a user changes their display name, the '
                   'API may show the new value in a future response, but the items associated with the user won\'t '
                   'show up as having changed when using delta.')
        c.argument('resource_last_modified_by_application_id', help='Unique identifier for the identity.')
        c.argument('resource_last_modified_by_application_display_name', help='The identity\'s display name. Note that '
                   'this may not always be available or up to date. For example, if a user changes their display name, '
                   'the API may show the new value in a future response, but the items associated with the user won\'t '
                   'show up as having changed when using delta.')
        c.argument('resource_created_by_user_id', help='Unique identifier for the identity.')
        c.argument('resource_created_by_user_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('resource_created_by_device_id', help='Unique identifier for the identity.')
        c.argument('resource_created_by_device_display_name', help='The identity\'s display name. Note that this may '
                   'not always be available or up to date. For example, if a user changes their display name, the API '
                   'may show the new value in a future response, but the items associated with the user won\'t show up '
                   'as having changed when using delta.')
        c.argument('resource_created_by_application_id', help='Unique identifier for the identity.')
        c.argument('resource_created_by_application_display_name', help='The identity\'s display name. Note that this '
                   'may not always be available or up to date. For example, if a user changes their display name, the '
                   'API may show the new value in a future response, but the items associated with the user won\'t '
                   'show up as having changed when using delta.')
        c.argument('education_submission_id', help='key: educationSubmission-id of educationSubmission')
        c.argument('recipient', type=validate_file_or_dict, help='Any object Expected value: json-string/@json-file.')
        c.argument('status', arg_type=get_enum_type(['working', 'submitted', 'released', 'returned', ''
                   'unknownFutureValue']), help='educationSubmissionStatus')
        c.argument('submitted_date_time', help='')
        c.argument('unsubmitted_date_time', help='')
        c.argument('released_date_time', help='')
        c.argument('returned_date_time', help='')
        c.argument('resources_folder_url', help='')
        c.argument('resources', action=AddEducationClassesAssignmentsResources, nargs='*', help='')
        c.argument('submitted_resources', action=AddSubmittedResources, nargs='*', help='')
        c.argument('outcomes', action=AddOutcomes, nargs='*', help='')
        c.argument('returned_by_user_id', help='Unique identifier for the identity.')
        c.argument('returned_by_user_display_name', help='The identity\'s display name. Note that this may not always '
                   'be available or up to date. For example, if a user changes their display name, the API may show '
                   'the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('returned_by_device_id', help='Unique identifier for the identity.')
        c.argument('returned_by_device_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('returned_by_application_id', help='Unique identifier for the identity.')
        c.argument('returned_by_application_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('released_by_user_id', help='Unique identifier for the identity.')
        c.argument('released_by_user_display_name', help='The identity\'s display name. Note that this may not always '
                   'be available or up to date. For example, if a user changes their display name, the API may show '
                   'the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('released_by_device_id', help='Unique identifier for the identity.')
        c.argument('released_by_device_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('released_by_application_id', help='Unique identifier for the identity.')
        c.argument('released_by_application_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('unsubmitted_by_user_id', help='Unique identifier for the identity.')
        c.argument('unsubmitted_by_user_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('unsubmitted_by_device_id', help='Unique identifier for the identity.')
        c.argument('unsubmitted_by_device_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('unsubmitted_by_application_id', help='Unique identifier for the identity.')
        c.argument('unsubmitted_by_application_display_name', help='The identity\'s display name. Note that this may '
                   'not always be available or up to date. For example, if a user changes their display name, the API '
                   'may show the new value in a future response, but the items associated with the user won\'t show up '
                   'as having changed when using delta.')
        c.argument('submitted_by_user_id', help='Unique identifier for the identity.')
        c.argument('submitted_by_user_display_name', help='The identity\'s display name. Note that this may not always '
                   'be available or up to date. For example, if a user changes their display name, the API may show '
                   'the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('submitted_by_device_id', help='Unique identifier for the identity.')
        c.argument('submitted_by_device_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('submitted_by_application_id', help='Unique identifier for the identity.')
        c.argument('submitted_by_application_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('description', action=AddInstructions, nargs='*', help='educationItemBody')
        c.argument('qualities', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('levels', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('grading', type=validate_file_or_dict, help='Any object Expected value: json-string/@json-file.')
        c.argument('created_date_time', help='')
        c.argument('last_modified_date_time', help='')
        c.argument('last_modified_by_user_id', help='Unique identifier for the identity.')
        c.argument('last_modified_by_user_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('last_modified_by_device_id', help='Unique identifier for the identity.')
        c.argument('last_modified_by_device_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('last_modified_by_application_id', help='Unique identifier for the identity.')
        c.argument('last_modified_by_application_display_name', help='The identity\'s display name. Note that this may '
                   'not always be available or up to date. For example, if a user changes their display name, the API '
                   'may show the new value in a future response, but the items associated with the user won\'t show up '
                   'as having changed when using delta.')
        c.argument('created_by_user_id', help='Unique identifier for the identity.')
        c.argument('created_by_user_display_name', help='The identity\'s display name. Note that this may not always '
                   'be available or up to date. For example, if a user changes their display name, the API may show '
                   'the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('created_by_device_id', help='Unique identifier for the identity.')
        c.argument('created_by_device_display_name', help='The identity\'s display name. Note that this may not always '
                   'be available or up to date. For example, if a user changes their display name, the API may show '
                   'the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('created_by_application_id', help='Unique identifier for the identity.')
        c.argument('created_by_application_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')

    with self.argument_context('education education-user-assignment create-category') as c:
        c.argument('education_user_id', help='key: educationUser-id of educationUser')
        c.argument('education_assignment_id', help='key: educationAssignment-id of educationAssignment')
        c.argument('id_', options_list=['--id'], help='Read-only.')
        c.argument('display_name', help='')

    with self.argument_context('education education-user-assignment create-resource') as c:
        c.argument('education_user_id', help='key: educationUser-id of educationUser')
        c.argument('education_assignment_id', help='key: educationAssignment-id of educationAssignment')
        c.argument('id_', options_list=['--id'], help='Read-only.')
        c.argument('distribute_for_student_work', arg_type=get_three_state_flag(), help='')
        c.argument('resource_display_name', help='')
        c.argument('resource_created_date_time', help='')
        c.argument('resource_last_modified_date_time', help='')
        c.argument('resource_last_modified_by_user_id', help='Unique identifier for the identity.')
        c.argument('resource_last_modified_by_user_display_name', help='The identity\'s display name. Note that this '
                   'may not always be available or up to date. For example, if a user changes their display name, the '
                   'API may show the new value in a future response, but the items associated with the user won\'t '
                   'show up as having changed when using delta.')
        c.argument('resource_last_modified_by_device_id', help='Unique identifier for the identity.')
        c.argument('resource_last_modified_by_device_display_name', help='The identity\'s display name. Note that this '
                   'may not always be available or up to date. For example, if a user changes their display name, the '
                   'API may show the new value in a future response, but the items associated with the user won\'t '
                   'show up as having changed when using delta.')
        c.argument('resource_last_modified_by_application_id', help='Unique identifier for the identity.')
        c.argument('resource_last_modified_by_application_display_name', help='The identity\'s display name. Note that '
                   'this may not always be available or up to date. For example, if a user changes their display name, '
                   'the API may show the new value in a future response, but the items associated with the user won\'t '
                   'show up as having changed when using delta.')
        c.argument('resource_created_by_user_id', help='Unique identifier for the identity.')
        c.argument('resource_created_by_user_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('resource_created_by_device_id', help='Unique identifier for the identity.')
        c.argument('resource_created_by_device_display_name', help='The identity\'s display name. Note that this may '
                   'not always be available or up to date. For example, if a user changes their display name, the API '
                   'may show the new value in a future response, but the items associated with the user won\'t show up '
                   'as having changed when using delta.')
        c.argument('resource_created_by_application_id', help='Unique identifier for the identity.')
        c.argument('resource_created_by_application_display_name', help='The identity\'s display name. Note that this '
                   'may not always be available or up to date. For example, if a user changes their display name, the '
                   'API may show the new value in a future response, but the items associated with the user won\'t '
                   'show up as having changed when using delta.')

    with self.argument_context('education education-user-assignment create-submission') as c:
        c.argument('education_user_id', help='key: educationUser-id of educationUser')
        c.argument('education_assignment_id', help='key: educationAssignment-id of educationAssignment')
        c.argument('id_', options_list=['--id'], help='Read-only.')
        c.argument('recipient', type=validate_file_or_dict, help='Any object Expected value: json-string/@json-file.')
        c.argument('status', arg_type=get_enum_type(['working', 'submitted', 'released', 'returned', ''
                   'unknownFutureValue']), help='educationSubmissionStatus')
        c.argument('submitted_date_time', help='')
        c.argument('unsubmitted_date_time', help='')
        c.argument('released_date_time', help='')
        c.argument('returned_date_time', help='')
        c.argument('resources_folder_url', help='')
        c.argument('resources', action=AddEducationClassesAssignmentsResources, nargs='*', help='')
        c.argument('submitted_resources', action=AddSubmittedResources, nargs='*', help='')
        c.argument('outcomes', action=AddOutcomes, nargs='*', help='')
        c.argument('returned_by_user_id', help='Unique identifier for the identity.')
        c.argument('returned_by_user_display_name', help='The identity\'s display name. Note that this may not always '
                   'be available or up to date. For example, if a user changes their display name, the API may show '
                   'the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('returned_by_device_id', help='Unique identifier for the identity.')
        c.argument('returned_by_device_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('returned_by_application_id', help='Unique identifier for the identity.')
        c.argument('returned_by_application_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('released_by_user_id', help='Unique identifier for the identity.')
        c.argument('released_by_user_display_name', help='The identity\'s display name. Note that this may not always '
                   'be available or up to date. For example, if a user changes their display name, the API may show '
                   'the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('released_by_device_id', help='Unique identifier for the identity.')
        c.argument('released_by_device_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('released_by_application_id', help='Unique identifier for the identity.')
        c.argument('released_by_application_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('unsubmitted_by_user_id', help='Unique identifier for the identity.')
        c.argument('unsubmitted_by_user_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('unsubmitted_by_device_id', help='Unique identifier for the identity.')
        c.argument('unsubmitted_by_device_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('unsubmitted_by_application_id', help='Unique identifier for the identity.')
        c.argument('unsubmitted_by_application_display_name', help='The identity\'s display name. Note that this may '
                   'not always be available or up to date. For example, if a user changes their display name, the API '
                   'may show the new value in a future response, but the items associated with the user won\'t show up '
                   'as having changed when using delta.')
        c.argument('submitted_by_user_id', help='Unique identifier for the identity.')
        c.argument('submitted_by_user_display_name', help='The identity\'s display name. Note that this may not always '
                   'be available or up to date. For example, if a user changes their display name, the API may show '
                   'the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('submitted_by_device_id', help='Unique identifier for the identity.')
        c.argument('submitted_by_device_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('submitted_by_application_id', help='Unique identifier for the identity.')
        c.argument('submitted_by_application_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')

    with self.argument_context('education education-user-assignment get-category') as c:
        c.argument('education_user_id', help='key: educationUser-id of educationUser')
        c.argument('education_assignment_id', help='key: educationAssignment-id of educationAssignment')
        c.argument('education_category_id', help='key: educationCategory-id of educationCategory')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education-user-assignment get-resource') as c:
        c.argument('education_user_id', help='key: educationUser-id of educationUser')
        c.argument('education_assignment_id', help='key: educationAssignment-id of educationAssignment')
        c.argument('education_assignment_resource_id', help='key: educationAssignmentResource-id of '
                   'educationAssignmentResource')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education-user-assignment get-resource-folder-url') as c:
        c.argument('education_user_id', help='key: educationUser-id of educationUser')
        c.argument('education_assignment_id', help='key: educationAssignment-id of educationAssignment')

    with self.argument_context('education education-user-assignment get-rubric') as c:
        c.argument('education_user_id', help='key: educationUser-id of educationUser')
        c.argument('education_assignment_id', help='key: educationAssignment-id of educationAssignment')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education-user-assignment get-submission') as c:
        c.argument('education_user_id', help='key: educationUser-id of educationUser')
        c.argument('education_assignment_id', help='key: educationAssignment-id of educationAssignment')
        c.argument('education_submission_id', help='key: educationSubmission-id of educationSubmission')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education-user-assignment list-category') as c:
        c.argument('education_user_id', help='key: educationUser-id of educationUser')
        c.argument('education_assignment_id', help='key: educationAssignment-id of educationAssignment')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education-user-assignment list-resource') as c:
        c.argument('education_user_id', help='key: educationUser-id of educationUser')
        c.argument('education_assignment_id', help='key: educationAssignment-id of educationAssignment')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education-user-assignment list-submission') as c:
        c.argument('education_user_id', help='key: educationUser-id of educationUser')
        c.argument('education_assignment_id', help='key: educationAssignment-id of educationAssignment')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education-user-assignment publish') as c:
        c.argument('education_user_id', help='key: educationUser-id of educationUser')
        c.argument('education_assignment_id', help='key: educationAssignment-id of educationAssignment')

    with self.argument_context('education education-user-assignment-submission update') as c:
        c.argument('education_user_id', help='key: educationUser-id of educationUser')
        c.argument('education_assignment_id', help='key: educationAssignment-id of educationAssignment')
        c.argument('education_submission_id', help='key: educationSubmission-id of educationSubmission')
        c.argument('education_outcome_id', help='key: educationOutcome-id of educationOutcome')
        c.argument('id_', options_list=['--id'], help='Read-only.')
        c.argument('last_modified_date_time', help='')
        c.argument('last_modified_by_user_id', help='Unique identifier for the identity.')
        c.argument('last_modified_by_user_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('last_modified_by_device_id', help='Unique identifier for the identity.')
        c.argument('last_modified_by_device_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('last_modified_by_application_id', help='Unique identifier for the identity.')
        c.argument('last_modified_by_application_display_name', help='The identity\'s display name. Note that this may '
                   'not always be available or up to date. For example, if a user changes their display name, the API '
                   'may show the new value in a future response, but the items associated with the user won\'t show up '
                   'as having changed when using delta.')
        c.argument('education_submission_resource_id', help='key: educationSubmissionResource-id of '
                   'educationSubmissionResource')
        c.argument('assignment_resource_url', help='')
        c.argument('resource_display_name', help='')
        c.argument('resource_created_date_time', help='')
        c.argument('resource_last_modified_date_time', help='')
        c.argument('resource_last_modified_by_user_id', help='Unique identifier for the identity.')
        c.argument('resource_last_modified_by_user_display_name', help='The identity\'s display name. Note that this '
                   'may not always be available or up to date. For example, if a user changes their display name, the '
                   'API may show the new value in a future response, but the items associated with the user won\'t '
                   'show up as having changed when using delta.')
        c.argument('resource_last_modified_by_device_id', help='Unique identifier for the identity.')
        c.argument('resource_last_modified_by_device_display_name', help='The identity\'s display name. Note that this '
                   'may not always be available or up to date. For example, if a user changes their display name, the '
                   'API may show the new value in a future response, but the items associated with the user won\'t '
                   'show up as having changed when using delta.')
        c.argument('resource_last_modified_by_application_id', help='Unique identifier for the identity.')
        c.argument('resource_last_modified_by_application_display_name', help='The identity\'s display name. Note that '
                   'this may not always be available or up to date. For example, if a user changes their display name, '
                   'the API may show the new value in a future response, but the items associated with the user won\'t '
                   'show up as having changed when using delta.')
        c.argument('resource_created_by_user_id', help='Unique identifier for the identity.')
        c.argument('resource_created_by_user_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('resource_created_by_device_id', help='Unique identifier for the identity.')
        c.argument('resource_created_by_device_display_name', help='The identity\'s display name. Note that this may '
                   'not always be available or up to date. For example, if a user changes their display name, the API '
                   'may show the new value in a future response, but the items associated with the user won\'t show up '
                   'as having changed when using delta.')
        c.argument('resource_created_by_application_id', help='Unique identifier for the identity.')
        c.argument('resource_created_by_application_display_name', help='The identity\'s display name. Note that this '
                   'may not always be available or up to date. For example, if a user changes their display name, the '
                   'API may show the new value in a future response, but the items associated with the user won\'t '
                   'show up as having changed when using delta.')

    with self.argument_context('education education-user-assignment-submission create-outcome') as c:
        c.argument('education_user_id', help='key: educationUser-id of educationUser')
        c.argument('education_assignment_id', help='key: educationAssignment-id of educationAssignment')
        c.argument('education_submission_id', help='key: educationSubmission-id of educationSubmission')
        c.argument('id_', options_list=['--id'], help='Read-only.')
        c.argument('last_modified_date_time', help='')
        c.argument('last_modified_by_user_id', help='Unique identifier for the identity.')
        c.argument('last_modified_by_user_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('last_modified_by_device_id', help='Unique identifier for the identity.')
        c.argument('last_modified_by_device_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('last_modified_by_application_id', help='Unique identifier for the identity.')
        c.argument('last_modified_by_application_display_name', help='The identity\'s display name. Note that this may '
                   'not always be available or up to date. For example, if a user changes their display name, the API '
                   'may show the new value in a future response, but the items associated with the user won\'t show up '
                   'as having changed when using delta.')

    with self.argument_context('education education-user-assignment-submission create-resource') as c:
        c.argument('education_user_id', help='key: educationUser-id of educationUser')
        c.argument('education_assignment_id', help='key: educationAssignment-id of educationAssignment')
        c.argument('education_submission_id', help='key: educationSubmission-id of educationSubmission')
        c.argument('id_', options_list=['--id'], help='Read-only.')
        c.argument('assignment_resource_url', help='')
        c.argument('resource_display_name', help='')
        c.argument('resource_created_date_time', help='')
        c.argument('resource_last_modified_date_time', help='')
        c.argument('resource_last_modified_by_user_id', help='Unique identifier for the identity.')
        c.argument('resource_last_modified_by_user_display_name', help='The identity\'s display name. Note that this '
                   'may not always be available or up to date. For example, if a user changes their display name, the '
                   'API may show the new value in a future response, but the items associated with the user won\'t '
                   'show up as having changed when using delta.')
        c.argument('resource_last_modified_by_device_id', help='Unique identifier for the identity.')
        c.argument('resource_last_modified_by_device_display_name', help='The identity\'s display name. Note that this '
                   'may not always be available or up to date. For example, if a user changes their display name, the '
                   'API may show the new value in a future response, but the items associated with the user won\'t '
                   'show up as having changed when using delta.')
        c.argument('resource_last_modified_by_application_id', help='Unique identifier for the identity.')
        c.argument('resource_last_modified_by_application_display_name', help='The identity\'s display name. Note that '
                   'this may not always be available or up to date. For example, if a user changes their display name, '
                   'the API may show the new value in a future response, but the items associated with the user won\'t '
                   'show up as having changed when using delta.')
        c.argument('resource_created_by_user_id', help='Unique identifier for the identity.')
        c.argument('resource_created_by_user_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('resource_created_by_device_id', help='Unique identifier for the identity.')
        c.argument('resource_created_by_device_display_name', help='The identity\'s display name. Note that this may '
                   'not always be available or up to date. For example, if a user changes their display name, the API '
                   'may show the new value in a future response, but the items associated with the user won\'t show up '
                   'as having changed when using delta.')
        c.argument('resource_created_by_application_id', help='Unique identifier for the identity.')
        c.argument('resource_created_by_application_display_name', help='The identity\'s display name. Note that this '
                   'may not always be available or up to date. For example, if a user changes their display name, the '
                   'API may show the new value in a future response, but the items associated with the user won\'t '
                   'show up as having changed when using delta.')

    with self.argument_context('education education-user-assignment-submission create-submitted-resource') as c:
        c.argument('education_user_id', help='key: educationUser-id of educationUser')
        c.argument('education_assignment_id', help='key: educationAssignment-id of educationAssignment')
        c.argument('education_submission_id', help='key: educationSubmission-id of educationSubmission')
        c.argument('id_', options_list=['--id'], help='Read-only.')
        c.argument('assignment_resource_url', help='')
        c.argument('resource_display_name', help='')
        c.argument('resource_created_date_time', help='')
        c.argument('resource_last_modified_date_time', help='')
        c.argument('resource_last_modified_by_user_id', help='Unique identifier for the identity.')
        c.argument('resource_last_modified_by_user_display_name', help='The identity\'s display name. Note that this '
                   'may not always be available or up to date. For example, if a user changes their display name, the '
                   'API may show the new value in a future response, but the items associated with the user won\'t '
                   'show up as having changed when using delta.')
        c.argument('resource_last_modified_by_device_id', help='Unique identifier for the identity.')
        c.argument('resource_last_modified_by_device_display_name', help='The identity\'s display name. Note that this '
                   'may not always be available or up to date. For example, if a user changes their display name, the '
                   'API may show the new value in a future response, but the items associated with the user won\'t '
                   'show up as having changed when using delta.')
        c.argument('resource_last_modified_by_application_id', help='Unique identifier for the identity.')
        c.argument('resource_last_modified_by_application_display_name', help='The identity\'s display name. Note that '
                   'this may not always be available or up to date. For example, if a user changes their display name, '
                   'the API may show the new value in a future response, but the items associated with the user won\'t '
                   'show up as having changed when using delta.')
        c.argument('resource_created_by_user_id', help='Unique identifier for the identity.')
        c.argument('resource_created_by_user_display_name', help='The identity\'s display name. Note that this may not '
                   'always be available or up to date. For example, if a user changes their display name, the API may '
                   'show the new value in a future response, but the items associated with the user won\'t show up as '
                   'having changed when using delta.')
        c.argument('resource_created_by_device_id', help='Unique identifier for the identity.')
        c.argument('resource_created_by_device_display_name', help='The identity\'s display name. Note that this may '
                   'not always be available or up to date. For example, if a user changes their display name, the API '
                   'may show the new value in a future response, but the items associated with the user won\'t show up '
                   'as having changed when using delta.')
        c.argument('resource_created_by_application_id', help='Unique identifier for the identity.')
        c.argument('resource_created_by_application_display_name', help='The identity\'s display name. Note that this '
                   'may not always be available or up to date. For example, if a user changes their display name, the '
                   'API may show the new value in a future response, but the items associated with the user won\'t '
                   'show up as having changed when using delta.')

    with self.argument_context('education education-user-assignment-submission get-outcome') as c:
        c.argument('education_user_id', help='key: educationUser-id of educationUser')
        c.argument('education_assignment_id', help='key: educationAssignment-id of educationAssignment')
        c.argument('education_submission_id', help='key: educationSubmission-id of educationSubmission')
        c.argument('education_outcome_id', help='key: educationOutcome-id of educationOutcome')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education-user-assignment-submission get-resource') as c:
        c.argument('education_user_id', help='key: educationUser-id of educationUser')
        c.argument('education_assignment_id', help='key: educationAssignment-id of educationAssignment')
        c.argument('education_submission_id', help='key: educationSubmission-id of educationSubmission')
        c.argument('education_submission_resource_id', help='key: educationSubmissionResource-id of '
                   'educationSubmissionResource')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education-user-assignment-submission get-submitted-resource') as c:
        c.argument('education_user_id', help='key: educationUser-id of educationUser')
        c.argument('education_assignment_id', help='key: educationAssignment-id of educationAssignment')
        c.argument('education_submission_id', help='key: educationSubmission-id of educationSubmission')
        c.argument('education_submission_resource_id', help='key: educationSubmissionResource-id of '
                   'educationSubmissionResource')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education-user-assignment-submission list-outcome') as c:
        c.argument('education_user_id', help='key: educationUser-id of educationUser')
        c.argument('education_assignment_id', help='key: educationAssignment-id of educationAssignment')
        c.argument('education_submission_id', help='key: educationSubmission-id of educationSubmission')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education-user-assignment-submission list-resource') as c:
        c.argument('education_user_id', help='key: educationUser-id of educationUser')
        c.argument('education_assignment_id', help='key: educationAssignment-id of educationAssignment')
        c.argument('education_submission_id', help='key: educationSubmission-id of educationSubmission')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education-user-assignment-submission list-submitted-resource') as c:
        c.argument('education_user_id', help='key: educationUser-id of educationUser')
        c.argument('education_assignment_id', help='key: educationAssignment-id of educationAssignment')
        c.argument('education_submission_id', help='key: educationSubmission-id of educationSubmission')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('education education-user-assignment-submission return') as c:
        c.argument('education_user_id', help='key: educationUser-id of educationUser')
        c.argument('education_assignment_id', help='key: educationAssignment-id of educationAssignment')
        c.argument('education_submission_id', help='key: educationSubmission-id of educationSubmission')

    with self.argument_context('education education-user-assignment-submission submit') as c:
        c.argument('education_user_id', help='key: educationUser-id of educationUser')
        c.argument('education_assignment_id', help='key: educationAssignment-id of educationAssignment')
        c.argument('education_submission_id', help='key: educationSubmission-id of educationSubmission')

    with self.argument_context('education education-user-assignment-submission unsubmit') as c:
        c.argument('education_user_id', help='key: educationUser-id of educationUser')
        c.argument('education_assignment_id', help='key: educationAssignment-id of educationAssignment')
        c.argument('education_submission_id', help='key: educationSubmission-id of educationSubmission')

    with self.argument_context('education education-user-class delta') as c:
        c.argument('education_user_id', help='key: educationUser-id of educationUser')

    with self.argument_context('education education-user-school delta') as c:
        c.argument('education_user_id', help='key: educationUser-id of educationUser')

    with self.argument_context('education education-user-taught-class delta') as c:
        c.argument('education_user_id', help='key: educationUser-id of educationUser')
