# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=line-too-long
# pylint: disable=too-many-lines


def reports_auditlogsauditlogroot_show_audit_log_root(client,
                                                      select=None,
                                                      expand=None):
    return client.get_audit_log_root(select=select,
                                     expand=expand)


def reports_auditlogsauditlogroot_update_audit_log_root(client,
                                                        id_=None,
                                                        directory_audits=None,
                                                        directory_provisioning=None,
                                                        provisioning=None,
                                                        restricted_sign_ins=None,
                                                        sign_ins=None):
    body = {}
    body['id'] = id_
    body['directory_audits'] = directory_audits
    body['directory_provisioning'] = directory_provisioning
    body['provisioning'] = provisioning
    body['restricted_sign_ins'] = restricted_sign_ins
    body['sign_ins'] = sign_ins
    return client.update_audit_log_root(body=body)


def reports_auditlog_create_directory_audit(client,
                                            id_=None,
                                            activity_date_time=None,
                                            activity_display_name=None,
                                            additional_details=None,
                                            category=None,
                                            correlation_id=None,
                                            logged_by_service=None,
                                            operation_type=None,
                                            result=None,
                                            result_reason=None,
                                            target_resources=None,
                                            app=None,
                                            user=None):
    body = {}
    body['id'] = id_
    body['activity_date_time'] = activity_date_time
    body['activity_display_name'] = activity_display_name
    body['additional_details'] = additional_details
    body['category'] = category
    body['correlation_id'] = correlation_id
    body['logged_by_service'] = logged_by_service
    body['operation_type'] = operation_type
    body['result'] = result
    body['result_reason'] = result_reason
    body['target_resources'] = target_resources
    body['initiated_by'] = {}
    body['initiated_by']['app'] = app
    body['initiated_by']['user'] = user
    return client.create_directory_audits(body=body)


def reports_auditlog_create_directory_provisioning(client,
                                                   body):
    return client.create_directory_provisioning(body=body)


def reports_auditlog_create_provisioning(client,
                                         body):
    return client.create_provisioning(body=body)


def reports_auditlog_create_restricted_sign_in(client,
                                               id_=None,
                                               alternate_sign_in_name=None,
                                               app_display_name=None,
                                               app_id=None,
                                               applied_conditional_access_policies=None,
                                               authentication_details=None,
                                               authentication_methods_used=None,
                                               authentication_processing_details=None,
                                               authentication_requirement=None,
                                               authentication_requirement_policies=None,
                                               client_app_used=None,
                                               conditional_access_status=None,
                                               correlation_id=None,
                                               created_date_time=None,
                                               device_detail=None,
                                               ip_address=None,
                                               is_interactive=None,
                                               mfa_detail=None,
                                               network_location_details=None,
                                               original_request_id=None,
                                               processing_time_in_milliseconds=None,
                                               resource_display_name=None,
                                               resource_id=None,
                                               resource_tenant_id=None,
                                               risk_detail=None,
                                               risk_event_types=None,
                                               risk_event_types_v2=None,
                                               risk_level_aggregated=None,
                                               risk_level_during_sign_in=None,
                                               risk_state=None,
                                               service_principal_id=None,
                                               service_principal_name=None,
                                               sign_in_event_types=None,
                                               status=None,
                                               token_issuer_name=None,
                                               token_issuer_type=None,
                                               user_agent=None,
                                               user_display_name=None,
                                               user_id=None,
                                               user_principal_name=None,
                                               city=None,
                                               country_or_region=None,
                                               geo_coordinates=None,
                                               state=None,
                                               target_tenant_id=None):
    body = {}
    body['id'] = id_
    body['alternate_sign_in_name'] = alternate_sign_in_name
    body['app_display_name'] = app_display_name
    body['app_id'] = app_id
    body['applied_conditional_access_policies'] = applied_conditional_access_policies
    body['authentication_details'] = authentication_details
    body['authentication_methods_used'] = authentication_methods_used
    body['authentication_processing_details'] = authentication_processing_details
    body['authentication_requirement'] = authentication_requirement
    body['authentication_requirement_policies'] = authentication_requirement_policies
    body['client_app_used'] = client_app_used
    body['conditional_access_status'] = conditional_access_status
    body['correlation_id'] = correlation_id
    body['created_date_time'] = created_date_time
    body['device_detail'] = device_detail
    body['ip_address'] = ip_address
    body['is_interactive'] = is_interactive
    body['mfa_detail'] = mfa_detail
    body['network_location_details'] = network_location_details
    body['original_request_id'] = original_request_id
    body['processing_time_in_milliseconds'] = processing_time_in_milliseconds
    body['resource_display_name'] = resource_display_name
    body['resource_id'] = resource_id
    body['resource_tenant_id'] = resource_tenant_id
    body['risk_detail'] = risk_detail
    body['risk_event_types'] = risk_event_types
    body['risk_event_types_v2'] = risk_event_types_v2
    body['risk_level_aggregated'] = risk_level_aggregated
    body['risk_level_during_sign_in'] = risk_level_during_sign_in
    body['risk_state'] = risk_state
    body['service_principal_id'] = service_principal_id
    body['service_principal_name'] = service_principal_name
    body['sign_in_event_types'] = sign_in_event_types
    body['status'] = status
    body['token_issuer_name'] = token_issuer_name
    body['token_issuer_type'] = token_issuer_type
    body['user_agent'] = user_agent
    body['user_display_name'] = user_display_name
    body['user_id'] = user_id
    body['user_principal_name'] = user_principal_name
    body['location'] = {}
    body['location']['city'] = city
    body['location']['country_or_region'] = country_or_region
    body['location']['geo_coordinates'] = geo_coordinates
    body['location']['state'] = state
    body['target_tenant_id'] = target_tenant_id
    return client.create_restricted_sign_ins(body=body)


def reports_auditlog_create_sign_in(client,
                                    body):
    return client.create_sign_ins(body=body)


def reports_auditlog_delete_directory_audit(client,
                                            directory_audit_id,
                                            if_match=None):
    return client.delete_directory_audits(directory_audit_id=directory_audit_id,
                                          if_match=if_match)


def reports_auditlog_delete_directory_provisioning(client,
                                                   provisioning_object_summary_id,
                                                   if_match=None):
    return client.delete_directory_provisioning(provisioning_object_summary_id=provisioning_object_summary_id,
                                                if_match=if_match)


def reports_auditlog_delete_provisioning(client,
                                         provisioning_object_summary_id,
                                         if_match=None):
    return client.delete_provisioning(provisioning_object_summary_id=provisioning_object_summary_id,
                                      if_match=if_match)


def reports_auditlog_delete_restricted_sign_in(client,
                                               restricted_sign_in_id,
                                               if_match=None):
    return client.delete_restricted_sign_ins(restricted_sign_in_id=restricted_sign_in_id,
                                             if_match=if_match)


def reports_auditlog_delete_sign_in(client,
                                    sign_in_id,
                                    if_match=None):
    return client.delete_sign_ins(sign_in_id=sign_in_id,
                                  if_match=if_match)


def reports_auditlog_list_directory_audit(client,
                                          orderby=None,
                                          select=None,
                                          expand=None):
    return client.list_directory_audits(orderby=orderby,
                                        select=select,
                                        expand=expand)


def reports_auditlog_list_directory_provisioning(client,
                                                 orderby=None,
                                                 select=None,
                                                 expand=None):
    return client.list_directory_provisioning(orderby=orderby,
                                              select=select,
                                              expand=expand)


def reports_auditlog_list_provisioning(client,
                                       orderby=None,
                                       select=None,
                                       expand=None):
    return client.list_provisioning(orderby=orderby,
                                    select=select,
                                    expand=expand)


def reports_auditlog_list_restricted_sign_in(client,
                                             orderby=None,
                                             select=None,
                                             expand=None):
    return client.list_restricted_sign_ins(orderby=orderby,
                                           select=select,
                                           expand=expand)


def reports_auditlog_list_sign_in(client,
                                  orderby=None,
                                  select=None,
                                  expand=None):
    return client.list_sign_ins(orderby=orderby,
                                select=select,
                                expand=expand)


def reports_auditlog_show_directory_audit(client,
                                          directory_audit_id,
                                          select=None,
                                          expand=None):
    return client.get_directory_audits(directory_audit_id=directory_audit_id,
                                       select=select,
                                       expand=expand)


def reports_auditlog_show_directory_provisioning(client,
                                                 provisioning_object_summary_id,
                                                 select=None,
                                                 expand=None):
    return client.get_directory_provisioning(provisioning_object_summary_id=provisioning_object_summary_id,
                                             select=select,
                                             expand=expand)


def reports_auditlog_show_provisioning(client,
                                       provisioning_object_summary_id,
                                       select=None,
                                       expand=None):
    return client.get_provisioning(provisioning_object_summary_id=provisioning_object_summary_id,
                                   select=select,
                                   expand=expand)


def reports_auditlog_show_restricted_sign_in(client,
                                             restricted_sign_in_id,
                                             select=None,
                                             expand=None):
    return client.get_restricted_sign_ins(restricted_sign_in_id=restricted_sign_in_id,
                                          select=select,
                                          expand=expand)


def reports_auditlog_show_sign_in(client,
                                  sign_in_id,
                                  select=None,
                                  expand=None):
    return client.get_sign_ins(sign_in_id=sign_in_id,
                               select=select,
                               expand=expand)


def reports_auditlog_update_directory_audit(client,
                                            directory_audit_id,
                                            id_=None,
                                            activity_date_time=None,
                                            activity_display_name=None,
                                            additional_details=None,
                                            category=None,
                                            correlation_id=None,
                                            logged_by_service=None,
                                            operation_type=None,
                                            result=None,
                                            result_reason=None,
                                            target_resources=None,
                                            app=None,
                                            user=None):
    body = {}
    body['id'] = id_
    body['activity_date_time'] = activity_date_time
    body['activity_display_name'] = activity_display_name
    body['additional_details'] = additional_details
    body['category'] = category
    body['correlation_id'] = correlation_id
    body['logged_by_service'] = logged_by_service
    body['operation_type'] = operation_type
    body['result'] = result
    body['result_reason'] = result_reason
    body['target_resources'] = target_resources
    body['initiated_by'] = {}
    body['initiated_by']['app'] = app
    body['initiated_by']['user'] = user
    return client.update_directory_audits(directory_audit_id=directory_audit_id,
                                          body=body)


def reports_auditlog_update_directory_provisioning(client,
                                                   provisioning_object_summary_id,
                                                   body):
    return client.update_directory_provisioning(provisioning_object_summary_id=provisioning_object_summary_id,
                                                body=body)


def reports_auditlog_update_provisioning(client,
                                         provisioning_object_summary_id,
                                         body):
    return client.update_provisioning(provisioning_object_summary_id=provisioning_object_summary_id,
                                      body=body)


def reports_auditlog_update_restricted_sign_in(client,
                                               restricted_sign_in_id,
                                               id_=None,
                                               alternate_sign_in_name=None,
                                               app_display_name=None,
                                               app_id=None,
                                               applied_conditional_access_policies=None,
                                               authentication_details=None,
                                               authentication_methods_used=None,
                                               authentication_processing_details=None,
                                               authentication_requirement=None,
                                               authentication_requirement_policies=None,
                                               client_app_used=None,
                                               conditional_access_status=None,
                                               correlation_id=None,
                                               created_date_time=None,
                                               device_detail=None,
                                               ip_address=None,
                                               is_interactive=None,
                                               mfa_detail=None,
                                               network_location_details=None,
                                               original_request_id=None,
                                               processing_time_in_milliseconds=None,
                                               resource_display_name=None,
                                               resource_id=None,
                                               resource_tenant_id=None,
                                               risk_detail=None,
                                               risk_event_types=None,
                                               risk_event_types_v2=None,
                                               risk_level_aggregated=None,
                                               risk_level_during_sign_in=None,
                                               risk_state=None,
                                               service_principal_id=None,
                                               service_principal_name=None,
                                               sign_in_event_types=None,
                                               status=None,
                                               token_issuer_name=None,
                                               token_issuer_type=None,
                                               user_agent=None,
                                               user_display_name=None,
                                               user_id=None,
                                               user_principal_name=None,
                                               city=None,
                                               country_or_region=None,
                                               geo_coordinates=None,
                                               state=None,
                                               target_tenant_id=None):
    body = {}
    body['id'] = id_
    body['alternate_sign_in_name'] = alternate_sign_in_name
    body['app_display_name'] = app_display_name
    body['app_id'] = app_id
    body['applied_conditional_access_policies'] = applied_conditional_access_policies
    body['authentication_details'] = authentication_details
    body['authentication_methods_used'] = authentication_methods_used
    body['authentication_processing_details'] = authentication_processing_details
    body['authentication_requirement'] = authentication_requirement
    body['authentication_requirement_policies'] = authentication_requirement_policies
    body['client_app_used'] = client_app_used
    body['conditional_access_status'] = conditional_access_status
    body['correlation_id'] = correlation_id
    body['created_date_time'] = created_date_time
    body['device_detail'] = device_detail
    body['ip_address'] = ip_address
    body['is_interactive'] = is_interactive
    body['mfa_detail'] = mfa_detail
    body['network_location_details'] = network_location_details
    body['original_request_id'] = original_request_id
    body['processing_time_in_milliseconds'] = processing_time_in_milliseconds
    body['resource_display_name'] = resource_display_name
    body['resource_id'] = resource_id
    body['resource_tenant_id'] = resource_tenant_id
    body['risk_detail'] = risk_detail
    body['risk_event_types'] = risk_event_types
    body['risk_event_types_v2'] = risk_event_types_v2
    body['risk_level_aggregated'] = risk_level_aggregated
    body['risk_level_during_sign_in'] = risk_level_during_sign_in
    body['risk_state'] = risk_state
    body['service_principal_id'] = service_principal_id
    body['service_principal_name'] = service_principal_name
    body['sign_in_event_types'] = sign_in_event_types
    body['status'] = status
    body['token_issuer_name'] = token_issuer_name
    body['token_issuer_type'] = token_issuer_type
    body['user_agent'] = user_agent
    body['user_display_name'] = user_display_name
    body['user_id'] = user_id
    body['user_principal_name'] = user_principal_name
    body['location'] = {}
    body['location']['city'] = city
    body['location']['country_or_region'] = country_or_region
    body['location']['geo_coordinates'] = geo_coordinates
    body['location']['state'] = state
    body['target_tenant_id'] = target_tenant_id
    return client.update_restricted_sign_ins(restricted_sign_in_id=restricted_sign_in_id,
                                             body=body)


def reports_auditlog_update_sign_in(client,
                                    sign_in_id,
                                    body):
    return client.update_sign_ins(sign_in_id=sign_in_id,
                                  body=body)


def reports_reportsreportroot_show_report_root(client,
                                               select=None,
                                               expand=None):
    return client.get_report_root(select=select,
                                  expand=expand)


def reports_reportsreportroot_update_report_root(client,
                                                 id_=None,
                                                 application_sign_in_detailed_summary=None,
                                                 credential_user_registration_details=None,
                                                 user_credential_usage_details=None,
                                                 daily_print_usage_summaries_by_printer=None,
                                                 daily_print_usage_summaries_by_user=None,
                                                 monthly_print_usage_summaries_by_printer=None,
                                                 monthly_print_usage_summaries_by_user=None):
    body = {}
    body['id'] = id_
    body['application_sign_in_detailed_summary'] = application_sign_in_detailed_summary
    body['credential_user_registration_details'] = credential_user_registration_details
    body['user_credential_usage_details'] = user_credential_usage_details
    body['daily_print_usage_summaries_by_printer'] = daily_print_usage_summaries_by_printer
    body['daily_print_usage_summaries_by_user'] = daily_print_usage_summaries_by_user
    body['monthly_print_usage_summaries_by_printer'] = monthly_print_usage_summaries_by_printer
    body['monthly_print_usage_summaries_by_user'] = monthly_print_usage_summaries_by_user
    return client.update_report_root(body=body)


def reports_report_create_application_sign_in_detailed_summary(client,
                                                               id_=None,
                                                               aggregated_event_date_time=None,
                                                               app_display_name=None,
                                                               app_id=None,
                                                               sign_in_count=None,
                                                               status=None):
    body = {}
    body['id'] = id_
    body['aggregated_event_date_time'] = aggregated_event_date_time
    body['app_display_name'] = app_display_name
    body['app_id'] = app_id
    body['sign_in_count'] = sign_in_count
    body['status'] = status
    return client.create_application_sign_in_detailed_summary(body=body)


def reports_report_create_credential_user_registration_detail(client,
                                                              id_=None,
                                                              auth_methods=None,
                                                              is_capable=None,
                                                              is_enabled=None,
                                                              is_mfa_registered=None,
                                                              is_registered=None,
                                                              user_display_name=None,
                                                              user_principal_name=None):
    body = {}
    body['id'] = id_
    body['auth_methods'] = auth_methods
    body['is_capable'] = is_capable
    body['is_enabled'] = is_enabled
    body['is_mfa_registered'] = is_mfa_registered
    body['is_registered'] = is_registered
    body['user_display_name'] = user_display_name
    body['user_principal_name'] = user_principal_name
    return client.create_credential_user_registration_details(body=body)


def reports_report_create_daily_print_usage_summary_by_printer(client,
                                                               id_=None,
                                                               completed_black_and_white_job_count=None,
                                                               completed_color_job_count=None,
                                                               incomplete_job_count=None,
                                                               printer_id=None,
                                                               usage_date=None):
    body = {}
    body['id'] = id_
    body['completed_black_and_white_job_count'] = completed_black_and_white_job_count
    body['completed_color_job_count'] = completed_color_job_count
    body['incomplete_job_count'] = incomplete_job_count
    body['printer_id'] = printer_id
    body['usage_date'] = usage_date
    return client.create_daily_print_usage_summaries_by_printer(body=body)


def reports_report_create_daily_print_usage_summary_by_user(client,
                                                            id_=None,
                                                            completed_black_and_white_job_count=None,
                                                            completed_color_job_count=None,
                                                            incomplete_job_count=None,
                                                            usage_date=None,
                                                            user_principal_name=None):
    body = {}
    body['id'] = id_
    body['completed_black_and_white_job_count'] = completed_black_and_white_job_count
    body['completed_color_job_count'] = completed_color_job_count
    body['incomplete_job_count'] = incomplete_job_count
    body['usage_date'] = usage_date
    body['user_principal_name'] = user_principal_name
    return client.create_daily_print_usage_summaries_by_user(body=body)


def reports_report_create_monthly_print_usage_summary_by_printer(client,
                                                                 id_=None,
                                                                 completed_black_and_white_job_count=None,
                                                                 completed_color_job_count=None,
                                                                 incomplete_job_count=None,
                                                                 printer_id=None,
                                                                 usage_date=None):
    body = {}
    body['id'] = id_
    body['completed_black_and_white_job_count'] = completed_black_and_white_job_count
    body['completed_color_job_count'] = completed_color_job_count
    body['incomplete_job_count'] = incomplete_job_count
    body['printer_id'] = printer_id
    body['usage_date'] = usage_date
    return client.create_monthly_print_usage_summaries_by_printer(body=body)


def reports_report_create_monthly_print_usage_summary_by_user(client,
                                                              id_=None,
                                                              completed_black_and_white_job_count=None,
                                                              completed_color_job_count=None,
                                                              incomplete_job_count=None,
                                                              usage_date=None,
                                                              user_principal_name=None):
    body = {}
    body['id'] = id_
    body['completed_black_and_white_job_count'] = completed_black_and_white_job_count
    body['completed_color_job_count'] = completed_color_job_count
    body['incomplete_job_count'] = incomplete_job_count
    body['usage_date'] = usage_date
    body['user_principal_name'] = user_principal_name
    return client.create_monthly_print_usage_summaries_by_user(body=body)


def reports_report_create_user_credential_usage_detail(client,
                                                       id_=None,
                                                       auth_method=None,
                                                       event_date_time=None,
                                                       failure_reason=None,
                                                       feature=None,
                                                       is_success=None,
                                                       user_display_name=None,
                                                       user_principal_name=None):
    body = {}
    body['id'] = id_
    body['auth_method'] = auth_method
    body['event_date_time'] = event_date_time
    body['failure_reason'] = failure_reason
    body['feature'] = feature
    body['is_success'] = is_success
    body['user_display_name'] = user_display_name
    body['user_principal_name'] = user_principal_name
    return client.create_user_credential_usage_details(body=body)


def reports_report_delete_application_sign_in_detailed_summary(client,
                                                               application_sign_in_detailed_summary_id,
                                                               if_match=None):
    return client.delete_application_sign_in_detailed_summary(application_sign_in_detailed_summary_id=application_sign_in_detailed_summary_id,
                                                              if_match=if_match)


def reports_report_delete_credential_user_registration_detail(client,
                                                              credential_user_registration_details_id,
                                                              if_match=None):
    return client.delete_credential_user_registration_details(credential_user_registration_details_id=credential_user_registration_details_id,
                                                              if_match=if_match)


def reports_report_delete_daily_print_usage_summary(client,
                                                    print_usage_summary_by_printer_id=None,
                                                    if_match=None,
                                                    print_usage_summary_by_user_id=None):
    if print_usage_summary_by_printer_id is not None:
        return client.delete_daily_print_usage_summaries_by_printer(print_usage_summary_by_printer_id=print_usage_summary_by_printer_id,
                                                                    if_match=if_match)
    return client.delete_daily_print_usage_summaries_by_user(print_usage_summary_by_user_id=print_usage_summary_by_user_id,
                                                             if_match=if_match)


def reports_report_delete_monthly_print_usage_summary(client,
                                                      print_usage_summary_by_printer_id=None,
                                                      if_match=None,
                                                      print_usage_summary_by_user_id=None):
    if print_usage_summary_by_printer_id is not None:
        return client.delete_monthly_print_usage_summaries_by_printer(print_usage_summary_by_printer_id=print_usage_summary_by_printer_id,
                                                                      if_match=if_match)
    return client.delete_monthly_print_usage_summaries_by_user(print_usage_summary_by_user_id=print_usage_summary_by_user_id,
                                                               if_match=if_match)


def reports_report_delete_user_credential_usage_detail(client,
                                                       user_credential_usage_details_id,
                                                       if_match=None):
    return client.delete_user_credential_usage_details(user_credential_usage_details_id=user_credential_usage_details_id,
                                                       if_match=if_match)


def reports_report_device_configuration_device_activity(client):
    return client.device_configuration_device_activity()


def reports_report_device_configuration_user_activity(client):
    return client.device_configuration_user_activity()


def reports_report_list_application_sign_in_detailed_summary(client,
                                                             orderby=None,
                                                             select=None,
                                                             expand=None):
    return client.list_application_sign_in_detailed_summary(orderby=orderby,
                                                            select=select,
                                                            expand=expand)


def reports_report_list_credential_user_registration_detail(client,
                                                            orderby=None,
                                                            select=None,
                                                            expand=None):
    return client.list_credential_user_registration_details(orderby=orderby,
                                                            select=select,
                                                            expand=expand)


def reports_report_list_daily_print_usage_summary(client,
                                                  orderby=None,
                                                  select=None,
                                                  expand=None):
    if:
        return client.list_daily_print_usage_summaries_by_printer(orderby=orderby,
                                                                  select=select,
                                                                  expand=expand)
    return client.list_daily_print_usage_summaries_by_user(orderby=orderby,
                                                           select=select,
                                                           expand=expand)


def reports_report_list_monthly_print_usage_summary(client,
                                                    orderby=None,
                                                    select=None,
                                                    expand=None):
    if:
        return client.list_monthly_print_usage_summaries_by_printer(orderby=orderby,
                                                                    select=select,
                                                                    expand=expand)
    return client.list_monthly_print_usage_summaries_by_user(orderby=orderby,
                                                             select=select,
                                                             expand=expand)


def reports_report_list_user_credential_usage_detail(client,
                                                     orderby=None,
                                                     select=None,
                                                     expand=None):
    return client.list_user_credential_usage_details(orderby=orderby,
                                                     select=select,
                                                     expand=expand)


def reports_report_managed_device_enrollment_abandonment_detail(client,
                                                                skip,
                                                                top,
                                                                filter_,
                                                                skip_token):
    return client.managed_device_enrollment_abandonment_details(skip=skip,
                                                                top=top,
                                                                filter=filter_,
                                                                skip_token=skip_token)


def reports_report_managed_device_enrollment_abandonment_summary(client,
                                                                 skip,
                                                                 top,
                                                                 filter_,
                                                                 skip_token):
    return client.managed_device_enrollment_abandonment_summary(skip=skip,
                                                                top=top,
                                                                filter=filter_,
                                                                skip_token=skip_token)


def reports_report_managed_device_enrollment_failure_details027_e(client):
    return client.managed_device_enrollment_failure_details027_e()


def reports_report_managed_device_enrollment_failure_details2_b3_d(client,
                                                                   skip,
                                                                   top,
                                                                   filter_,
                                                                   skip_token):
    return client.managed_device_enrollment_failure_details2_b3_d(skip=skip,
                                                                  top=top,
                                                                  filter=filter_,
                                                                  skip_token=skip_token)


def reports_report_managed_device_enrollment_failure_trend(client):
    return client.managed_device_enrollment_failure_trends()


def reports_report_managed_device_enrollment_top_failure_afd1(client,
                                                              period):
    return client.managed_device_enrollment_top_failures_afd1(period=period)


def reports_report_managed_device_enrollment_top_failures4669(client):
    return client.managed_device_enrollment_top_failures4669()


def reports_report_show_application_sign_in_detailed_summary(client,
                                                             application_sign_in_detailed_summary_id,
                                                             select=None,
                                                             expand=None):
    return client.get_application_sign_in_detailed_summary(application_sign_in_detailed_summary_id=application_sign_in_detailed_summary_id,
                                                           select=select,
                                                           expand=expand)


def reports_report_show_azure_ad_application_sign_in_summary(client,
                                                             period):
    return client.get_azure_ad_application_sign_in_summary(period=period)


def reports_report_show_azure_ad_feature_usage(client,
                                               period):
    return client.get_azure_ad_feature_usage(period=period)


def reports_report_show_azure_ad_license_usage(client,
                                               period):
    return client.get_azure_ad_license_usage(period=period)


def reports_report_show_azure_ad_user_feature_usage(client):
    return client.get_azure_ad_user_feature_usage()


def reports_report_show_credential_usage_summary(client,
                                                 period):
    return client.get_credential_usage_summary(period=period)


def reports_report_show_credential_user_registration_count(client):
    return client.get_credential_user_registration_count()


def reports_report_show_credential_user_registration_detail(client,
                                                            credential_user_registration_details_id,
                                                            select=None,
                                                            expand=None):
    return client.get_credential_user_registration_details(credential_user_registration_details_id=credential_user_registration_details_id,
                                                           select=select,
                                                           expand=expand)


def reports_report_show_daily_print_usage_summary(client,
                                                  print_usage_summary_by_printer_id=None,
                                                  select=None,
                                                  expand=None,
                                                  print_usage_summary_by_user_id=None):
    if print_usage_summary_by_printer_id is not None:
        return client.get_daily_print_usage_summaries_by_printer(print_usage_summary_by_printer_id=print_usage_summary_by_printer_id,
                                                                 select=select,
                                                                 expand=expand)
    return client.get_daily_print_usage_summaries_by_user(print_usage_summary_by_user_id=print_usage_summary_by_user_id,
                                                          select=select,
                                                          expand=expand)


def reports_report_show_email_activity_count(client,
                                             period):
    return client.get_email_activity_counts(period=period)


def reports_report_show_email_activity_user_count(client,
                                                  period):
    return client.get_email_activity_user_counts(period=period)


def reports_report_show_email_activity_user_detail_ddb2(client,
                                                        period):
    return client.get_email_activity_user_detail_ddb2(period=period)


def reports_report_show_email_activity_user_detail_fe32(client,
                                                        date):
    return client.get_email_activity_user_detail_fe32(date=date)


def reports_report_show_email_app_usage_app_user_count(client,
                                                       period):
    return client.get_email_app_usage_apps_user_counts(period=period)


def reports_report_show_email_app_usage_user_count(client,
                                                   period):
    return client.get_email_app_usage_user_counts(period=period)


def reports_report_show_email_app_usage_user_detail546_b(client,
                                                         period):
    return client.get_email_app_usage_user_detail546_b(period=period)


def reports_report_show_email_app_usage_user_detail62_ec(client,
                                                         date):
    return client.get_email_app_usage_user_detail62_ec(date=date)


def reports_report_show_email_app_usage_version_user_count(client,
                                                           period):
    return client.get_email_app_usage_versions_user_counts(period=period)


def reports_report_show_m365_app_platform_user_count(client,
                                                     period):
    return client.get_m365_app_platform_user_counts(period=period)


def reports_report_show_m365_app_user_count(client,
                                            period):
    return client.get_m365_app_user_counts(period=period)


def reports_report_show_m365_app_user_detail_c8_df(client,
                                                   period):
    return client.get_m365_app_user_detail_c8_df(period=period)


def reports_report_show_m365_app_user_detail2_b20(client,
                                                  date):
    return client.get_m365_app_user_detail2_b20(date=date)


def reports_report_show_mailbox_usage_detail(client,
                                             period):
    return client.get_mailbox_usage_detail(period=period)


def reports_report_show_mailbox_usage_mailbox_count(client,
                                                    period):
    return client.get_mailbox_usage_mailbox_counts(period=period)


def reports_report_show_mailbox_usage_quota_status_mailbox_count(client,
                                                                 period):
    return client.get_mailbox_usage_quota_status_mailbox_counts(period=period)


def reports_report_show_mailbox_usage_storage(client,
                                              period):
    return client.get_mailbox_usage_storage(period=period)


def reports_report_show_monthly_print_usage_summary(client,
                                                    print_usage_summary_by_printer_id=None,
                                                    select=None,
                                                    expand=None,
                                                    print_usage_summary_by_user_id=None):
    if print_usage_summary_by_printer_id is not None:
        return client.get_monthly_print_usage_summaries_by_printer(print_usage_summary_by_printer_id=print_usage_summary_by_printer_id,
                                                                   select=select,
                                                                   expand=expand)
    return client.get_monthly_print_usage_summaries_by_user(print_usage_summary_by_user_id=print_usage_summary_by_user_id,
                                                            select=select,
                                                            expand=expand)


def reports_report_show_office365_activation_count(client):
    return client.get_office365_activation_counts()


def reports_report_show_office365_activation_user_count(client):
    return client.get_office365_activations_user_counts()


def reports_report_show_office365_activation_user_detail(client):
    return client.get_office365_activations_user_detail()


def reports_report_show_office365_active_user_count(client,
                                                    period):
    return client.get_office365_active_user_counts(period=period)


def reports_report_show_office365_active_user_detail_d389(client,
                                                          date):
    return client.get_office365_active_user_detail_d389(date=date)


def reports_report_show_office365_active_user_detail68_ad(client,
                                                          period):
    return client.get_office365_active_user_detail68_ad(period=period)


def reports_report_show_office365_group_activity_count(client,
                                                       period):
    return client.get_office365_groups_activity_counts(period=period)


def reports_report_show_office365_group_activity_detail38_f6(client,
                                                             period):
    return client.get_office365_groups_activity_detail38_f6(period=period)


def reports_report_show_office365_group_activity_detail81_cc(client,
                                                             date):
    return client.get_office365_groups_activity_detail81_cc(date=date)


def reports_report_show_office365_group_activity_file_count(client,
                                                            period):
    return client.get_office365_groups_activity_file_counts(period=period)


def reports_report_show_office365_group_activity_group_count(client,
                                                             period):
    return client.get_office365_groups_activity_group_counts(period=period)


def reports_report_show_office365_group_activity_storage(client,
                                                         period):
    return client.get_office365_groups_activity_storage(period=period)


def reports_report_show_office365_service_user_count(client,
                                                     period):
    return client.get_office365_services_user_counts(period=period)


def reports_report_show_one_drive_activity_file_count(client,
                                                      period):
    return client.get_one_drive_activity_file_counts(period=period)


def reports_report_show_one_drive_activity_user_count(client,
                                                      period):
    return client.get_one_drive_activity_user_counts(period=period)


def reports_report_show_one_drive_activity_user_detail_c424(client,
                                                            period):
    return client.get_one_drive_activity_user_detail_c424(period=period)


def reports_report_show_one_drive_activity_user_detail05_f1(client,
                                                            date):
    return client.get_one_drive_activity_user_detail05_f1(date=date)


def reports_report_show_one_drive_usage_account_count(client,
                                                      period):
    return client.get_one_drive_usage_account_counts(period=period)


def reports_report_show_one_drive_usage_account_detail_dd7_f(client,
                                                             period):
    return client.get_one_drive_usage_account_detail_dd7_f(period=period)


def reports_report_show_one_drive_usage_account_detail_e827(client,
                                                            date):
    return client.get_one_drive_usage_account_detail_e827(date=date)


def reports_report_show_one_drive_usage_file_count(client,
                                                   period):
    return client.get_one_drive_usage_file_counts(period=period)


def reports_report_show_one_drive_usage_storage(client,
                                                period):
    return client.get_one_drive_usage_storage(period=period)


def reports_report_show_relying_party_detailed_summary(client,
                                                       period):
    return client.get_relying_party_detailed_summary(period=period)


def reports_report_show_share_point_activity_file_count(client,
                                                        period):
    return client.get_share_point_activity_file_counts(period=period)


def reports_report_show_share_point_activity_page(client,
                                                  period):
    return client.get_share_point_activity_pages(period=period)


def reports_report_show_share_point_activity_user_count(client,
                                                        period):
    return client.get_share_point_activity_user_counts(period=period)


def reports_report_show_share_point_activity_user_detail_b778(client,
                                                              period):
    return client.get_share_point_activity_user_detail_b778(period=period)


def reports_report_show_share_point_activity_user_detail_f3_be(client,
                                                               date):
    return client.get_share_point_activity_user_detail_f3_be(date=date)


def reports_report_show_share_point_site_usage_detail_d27_a(client,
                                                            date):
    return client.get_share_point_site_usage_detail_d27_a(date=date)


def reports_report_show_share_point_site_usage_detail204_b(client,
                                                           period):
    return client.get_share_point_site_usage_detail204_b(period=period)


def reports_report_show_share_point_site_usage_file_count(client,
                                                          period):
    return client.get_share_point_site_usage_file_counts(period=period)


def reports_report_show_share_point_site_usage_page(client,
                                                    period):
    return client.get_share_point_site_usage_pages(period=period)


def reports_report_show_share_point_site_usage_site_count(client,
                                                          period):
    return client.get_share_point_site_usage_site_counts(period=period)


def reports_report_show_share_point_site_usage_storage(client,
                                                       period):
    return client.get_share_point_site_usage_storage(period=period)


def reports_report_show_skype_for_business_activity_count(client,
                                                          period):
    return client.get_skype_for_business_activity_counts(period=period)


def reports_report_show_skype_for_business_activity_user_count(client,
                                                               period):
    return client.get_skype_for_business_activity_user_counts(period=period)


def reports_report_show_skype_for_business_activity_user_detail_e4_c9(client,
                                                                      date):
    return client.get_skype_for_business_activity_user_detail_e4_c9(date=date)


def reports_report_show_skype_for_business_activity_user_detail744_e(client,
                                                                     period):
    return client.get_skype_for_business_activity_user_detail744_e(period=period)


def reports_report_show_skype_for_business_device_usage_distribution_user_count(client,
                                                                                period):
    return client.get_skype_for_business_device_usage_distribution_user_counts(period=period)


def reports_report_show_skype_for_business_device_usage_user_count(client,
                                                                   period):
    return client.get_skype_for_business_device_usage_user_counts(period=period)


def reports_report_show_skype_for_business_device_usage_user_detail_a692(client,
                                                                         date):
    return client.get_skype_for_business_device_usage_user_detail_a692(date=date)


def reports_report_show_skype_for_business_device_usage_user_detail_e753(client,
                                                                         period):
    return client.get_skype_for_business_device_usage_user_detail_e753(period=period)


def reports_report_show_skype_for_business_organizer_activity_count(client,
                                                                    period):
    return client.get_skype_for_business_organizer_activity_counts(period=period)


def reports_report_show_skype_for_business_organizer_activity_minute_count(client,
                                                                           period):
    return client.get_skype_for_business_organizer_activity_minute_counts(period=period)


def reports_report_show_skype_for_business_organizer_activity_user_count(client,
                                                                         period):
    return client.get_skype_for_business_organizer_activity_user_counts(period=period)


def reports_report_show_skype_for_business_participant_activity_count(client,
                                                                      period):
    return client.get_skype_for_business_participant_activity_counts(period=period)


def reports_report_show_skype_for_business_participant_activity_minute_count(client,
                                                                             period):
    return client.get_skype_for_business_participant_activity_minute_counts(period=period)


def reports_report_show_skype_for_business_participant_activity_user_count(client,
                                                                           period):
    return client.get_skype_for_business_participant_activity_user_counts(period=period)


def reports_report_show_skype_for_business_peer_to_peer_activity_count(client,
                                                                       period):
    return client.get_skype_for_business_peer_to_peer_activity_counts(period=period)


def reports_report_show_skype_for_business_peer_to_peer_activity_minute_count(client,
                                                                              period):
    return client.get_skype_for_business_peer_to_peer_activity_minute_counts(period=period)


def reports_report_show_skype_for_business_peer_to_peer_activity_user_count(client,
                                                                            period):
    return client.get_skype_for_business_peer_to_peer_activity_user_counts(period=period)


def reports_report_show_team_device_usage_distribution_user_count(client,
                                                                  period):
    return client.get_teams_device_usage_distribution_user_counts(period=period)


def reports_report_show_team_device_usage_user_count(client,
                                                     period):
    return client.get_teams_device_usage_user_counts(period=period)


def reports_report_show_team_device_usage_user_detail7148(client,
                                                          date):
    return client.get_teams_device_usage_user_detail7148(date=date)


def reports_report_show_team_device_usage_user_detail7565(client,
                                                          period):
    return client.get_teams_device_usage_user_detail7565(period=period)


def reports_report_show_team_user_activity_count(client,
                                                 period):
    return client.get_teams_user_activity_counts(period=period)


def reports_report_show_team_user_activity_user_count(client,
                                                      period):
    return client.get_teams_user_activity_user_counts(period=period)


def reports_report_show_team_user_activity_user_detail_a3_f1(client,
                                                             date):
    return client.get_teams_user_activity_user_detail_a3_f1(date=date)


def reports_report_show_team_user_activity_user_detail_eb13(client,
                                                            period):
    return client.get_teams_user_activity_user_detail_eb13(period=period)


def reports_report_show_tenant_secure_score(client,
                                            period):
    return client.get_tenant_secure_scores(period=period)


def reports_report_show_user_credential_usage_detail(client,
                                                     user_credential_usage_details_id,
                                                     select=None,
                                                     expand=None):
    return client.get_user_credential_usage_details(user_credential_usage_details_id=user_credential_usage_details_id,
                                                    select=select,
                                                    expand=expand)


def reports_report_show_yammer_activity_count(client,
                                              period):
    return client.get_yammer_activity_counts(period=period)


def reports_report_show_yammer_activity_user_count(client,
                                                   period):
    return client.get_yammer_activity_user_counts(period=period)


def reports_report_show_yammer_activity_user_detail_ac30(client,
                                                         date):
    return client.get_yammer_activity_user_detail_ac30(date=date)


def reports_report_show_yammer_activity_user_detail15_a5(client,
                                                         period):
    return client.get_yammer_activity_user_detail15_a5(period=period)


def reports_report_show_yammer_device_usage_distribution_user_count(client,
                                                                    period):
    return client.get_yammer_device_usage_distribution_user_counts(period=period)


def reports_report_show_yammer_device_usage_user_count(client,
                                                       period):
    return client.get_yammer_device_usage_user_counts(period=period)


def reports_report_show_yammer_device_usage_user_detail_cfad(client,
                                                             period):
    return client.get_yammer_device_usage_user_detail_cfad(period=period)


def reports_report_show_yammer_device_usage_user_detail_d0_ac(client,
                                                              date):
    return client.get_yammer_device_usage_user_detail_d0_ac(date=date)


def reports_report_show_yammer_group_activity_count(client,
                                                    period):
    return client.get_yammer_groups_activity_counts(period=period)


def reports_report_show_yammer_group_activity_detail_da9_a(client,
                                                           date):
    return client.get_yammer_groups_activity_detail_da9_a(date=date)


def reports_report_show_yammer_group_activity_detail0_d7_d(client,
                                                           period):
    return client.get_yammer_groups_activity_detail0_d7_d(period=period)


def reports_report_show_yammer_group_activity_group_count(client,
                                                          period):
    return client.get_yammer_groups_activity_group_counts(period=period)


def reports_report_update_application_sign_in_detailed_summary(client,
                                                               application_sign_in_detailed_summary_id,
                                                               id_=None,
                                                               aggregated_event_date_time=None,
                                                               app_display_name=None,
                                                               app_id=None,
                                                               sign_in_count=None,
                                                               status=None):
    body = {}
    body['id'] = id_
    body['aggregated_event_date_time'] = aggregated_event_date_time
    body['app_display_name'] = app_display_name
    body['app_id'] = app_id
    body['sign_in_count'] = sign_in_count
    body['status'] = status
    return client.update_application_sign_in_detailed_summary(application_sign_in_detailed_summary_id=application_sign_in_detailed_summary_id,
                                                              body=body)


def reports_report_update_credential_user_registration_detail(client,
                                                              credential_user_registration_details_id,
                                                              id_=None,
                                                              auth_methods=None,
                                                              is_capable=None,
                                                              is_enabled=None,
                                                              is_mfa_registered=None,
                                                              is_registered=None,
                                                              user_display_name=None,
                                                              user_principal_name=None):
    body = {}
    body['id'] = id_
    body['auth_methods'] = auth_methods
    body['is_capable'] = is_capable
    body['is_enabled'] = is_enabled
    body['is_mfa_registered'] = is_mfa_registered
    body['is_registered'] = is_registered
    body['user_display_name'] = user_display_name
    body['user_principal_name'] = user_principal_name
    return client.update_credential_user_registration_details(credential_user_registration_details_id=credential_user_registration_details_id,
                                                              body=body)


def reports_report_update_daily_print_usage_summary_by_printer(client,
                                                               print_usage_summary_by_printer_id,
                                                               id_=None,
                                                               completed_black_and_white_job_count=None,
                                                               completed_color_job_count=None,
                                                               incomplete_job_count=None,
                                                               printer_id=None,
                                                               usage_date=None):
    body = {}
    body['id'] = id_
    body['completed_black_and_white_job_count'] = completed_black_and_white_job_count
    body['completed_color_job_count'] = completed_color_job_count
    body['incomplete_job_count'] = incomplete_job_count
    body['printer_id'] = printer_id
    body['usage_date'] = usage_date
    return client.update_daily_print_usage_summaries_by_printer(print_usage_summary_by_printer_id=print_usage_summary_by_printer_id,
                                                                body=body)


def reports_report_update_daily_print_usage_summary_by_user(client,
                                                            print_usage_summary_by_user_id,
                                                            id_=None,
                                                            completed_black_and_white_job_count=None,
                                                            completed_color_job_count=None,
                                                            incomplete_job_count=None,
                                                            usage_date=None,
                                                            user_principal_name=None):
    body = {}
    body['id'] = id_
    body['completed_black_and_white_job_count'] = completed_black_and_white_job_count
    body['completed_color_job_count'] = completed_color_job_count
    body['incomplete_job_count'] = incomplete_job_count
    body['usage_date'] = usage_date
    body['user_principal_name'] = user_principal_name
    return client.update_daily_print_usage_summaries_by_user(print_usage_summary_by_user_id=print_usage_summary_by_user_id,
                                                             body=body)


def reports_report_update_monthly_print_usage_summary_by_printer(client,
                                                                 print_usage_summary_by_printer_id,
                                                                 id_=None,
                                                                 completed_black_and_white_job_count=None,
                                                                 completed_color_job_count=None,
                                                                 incomplete_job_count=None,
                                                                 printer_id=None,
                                                                 usage_date=None):
    body = {}
    body['id'] = id_
    body['completed_black_and_white_job_count'] = completed_black_and_white_job_count
    body['completed_color_job_count'] = completed_color_job_count
    body['incomplete_job_count'] = incomplete_job_count
    body['printer_id'] = printer_id
    body['usage_date'] = usage_date
    return client.update_monthly_print_usage_summaries_by_printer(print_usage_summary_by_printer_id=print_usage_summary_by_printer_id,
                                                                  body=body)


def reports_report_update_monthly_print_usage_summary_by_user(client,
                                                              print_usage_summary_by_user_id,
                                                              id_=None,
                                                              completed_black_and_white_job_count=None,
                                                              completed_color_job_count=None,
                                                              incomplete_job_count=None,
                                                              usage_date=None,
                                                              user_principal_name=None):
    body = {}
    body['id'] = id_
    body['completed_black_and_white_job_count'] = completed_black_and_white_job_count
    body['completed_color_job_count'] = completed_color_job_count
    body['incomplete_job_count'] = incomplete_job_count
    body['usage_date'] = usage_date
    body['user_principal_name'] = user_principal_name
    return client.update_monthly_print_usage_summaries_by_user(print_usage_summary_by_user_id=print_usage_summary_by_user_id,
                                                               body=body)


def reports_report_update_user_credential_usage_detail(client,
                                                       user_credential_usage_details_id,
                                                       id_=None,
                                                       auth_method=None,
                                                       event_date_time=None,
                                                       failure_reason=None,
                                                       feature=None,
                                                       is_success=None,
                                                       user_display_name=None,
                                                       user_principal_name=None):
    body = {}
    body['id'] = id_
    body['auth_method'] = auth_method
    body['event_date_time'] = event_date_time
    body['failure_reason'] = failure_reason
    body['feature'] = feature
    body['is_success'] = is_success
    body['user_display_name'] = user_display_name
    body['user_principal_name'] = user_principal_name
    return client.update_user_credential_usage_details(user_credential_usage_details_id=user_credential_usage_details_id,
                                                       body=body)
