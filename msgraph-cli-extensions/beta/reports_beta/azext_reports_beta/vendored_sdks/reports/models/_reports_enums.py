# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from enum import Enum, EnumMeta
from six import with_metaclass

class _CaseInsensitiveEnumMeta(EnumMeta):
    def __getitem__(self, name):
        return super().__getitem__(name.upper())

    def __getattr__(cls, name):
        """Return the enum member matching `name`
        We use __getattr__ instead of descriptors or inserting into the enum
        class' __dict__ in order to support `name` and `value` being both
        properties for enum members (which live in the class' __dict__) and
        enum members themselves.
        """
        try:
            return cls._member_map_[name.upper()]
        except KeyError:
            raise AttributeError(name)


class Enum19(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ACTIVITY_DATE_TIME = "activityDateTime"
    ACTIVITY_DISPLAY_NAME = "activityDisplayName"
    ADDITIONAL_DETAILS = "additionalDetails"
    CATEGORY = "category"
    CORRELATION_ID = "correlationId"
    INITIATED_BY = "initiatedBy"
    LOGGED_BY_SERVICE = "loggedByService"
    OPERATION_TYPE = "operationType"
    RESULT = "result"
    RESULT_REASON = "resultReason"
    TARGET_RESOURCES = "targetResources"

class Enum20(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    ACTION = "action"
    ACTION_DESC = "action desc"
    ACTIVITY_DATE_TIME = "activityDateTime"
    ACTIVITY_DATE_TIME_DESC = "activityDateTime desc"
    CHANGE_ID = "changeId"
    CHANGE_ID_DESC = "changeId desc"
    CYCLE_ID = "cycleId"
    CYCLE_ID_DESC = "cycleId desc"
    DURATION_IN_MILLISECONDS = "durationInMilliseconds"
    DURATION_IN_MILLISECONDS_DESC = "durationInMilliseconds desc"
    INITIATED_BY = "initiatedBy"
    INITIATED_BY_DESC = "initiatedBy desc"
    JOB_ID = "jobId"
    JOB_ID_DESC = "jobId desc"
    MODIFIED_PROPERTIES = "modifiedProperties"
    MODIFIED_PROPERTIES_DESC = "modifiedProperties desc"
    PROVISIONING_STEPS = "provisioningSteps"
    PROVISIONING_STEPS_DESC = "provisioningSteps desc"
    SERVICE_PRINCIPAL = "servicePrincipal"
    SERVICE_PRINCIPAL_DESC = "servicePrincipal desc"
    SOURCE_IDENTITY = "sourceIdentity"
    SOURCE_IDENTITY_DESC = "sourceIdentity desc"
    SOURCE_SYSTEM = "sourceSystem"
    SOURCE_SYSTEM_DESC = "sourceSystem desc"
    STATUS_INFO = "statusInfo"
    STATUS_INFO_DESC = "statusInfo desc"
    TARGET_IDENTITY = "targetIdentity"
    TARGET_IDENTITY_DESC = "targetIdentity desc"
    TARGET_SYSTEM = "targetSystem"
    TARGET_SYSTEM_DESC = "targetSystem desc"
    TENANT_ID = "tenantId"
    TENANT_ID_DESC = "tenantId desc"

class Enum21(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ACTION = "action"
    ACTIVITY_DATE_TIME = "activityDateTime"
    CHANGE_ID = "changeId"
    CYCLE_ID = "cycleId"
    DURATION_IN_MILLISECONDS = "durationInMilliseconds"
    INITIATED_BY = "initiatedBy"
    JOB_ID = "jobId"
    MODIFIED_PROPERTIES = "modifiedProperties"
    PROVISIONING_STEPS = "provisioningSteps"
    SERVICE_PRINCIPAL = "servicePrincipal"
    SOURCE_IDENTITY = "sourceIdentity"
    SOURCE_SYSTEM = "sourceSystem"
    STATUS_INFO = "statusInfo"
    TARGET_IDENTITY = "targetIdentity"
    TARGET_SYSTEM = "targetSystem"
    TENANT_ID = "tenantId"

class Enum22(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ACTION = "action"
    ACTIVITY_DATE_TIME = "activityDateTime"
    CHANGE_ID = "changeId"
    CYCLE_ID = "cycleId"
    DURATION_IN_MILLISECONDS = "durationInMilliseconds"
    INITIATED_BY = "initiatedBy"
    JOB_ID = "jobId"
    MODIFIED_PROPERTIES = "modifiedProperties"
    PROVISIONING_STEPS = "provisioningSteps"
    SERVICE_PRINCIPAL = "servicePrincipal"
    SOURCE_IDENTITY = "sourceIdentity"
    SOURCE_SYSTEM = "sourceSystem"
    STATUS_INFO = "statusInfo"
    TARGET_IDENTITY = "targetIdentity"
    TARGET_SYSTEM = "targetSystem"
    TENANT_ID = "tenantId"

class Enum23(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    ACTION = "action"
    ACTION_DESC = "action desc"
    ACTIVITY_DATE_TIME = "activityDateTime"
    ACTIVITY_DATE_TIME_DESC = "activityDateTime desc"
    CHANGE_ID = "changeId"
    CHANGE_ID_DESC = "changeId desc"
    CYCLE_ID = "cycleId"
    CYCLE_ID_DESC = "cycleId desc"
    DURATION_IN_MILLISECONDS = "durationInMilliseconds"
    DURATION_IN_MILLISECONDS_DESC = "durationInMilliseconds desc"
    INITIATED_BY = "initiatedBy"
    INITIATED_BY_DESC = "initiatedBy desc"
    JOB_ID = "jobId"
    JOB_ID_DESC = "jobId desc"
    MODIFIED_PROPERTIES = "modifiedProperties"
    MODIFIED_PROPERTIES_DESC = "modifiedProperties desc"
    PROVISIONING_STEPS = "provisioningSteps"
    PROVISIONING_STEPS_DESC = "provisioningSteps desc"
    SERVICE_PRINCIPAL = "servicePrincipal"
    SERVICE_PRINCIPAL_DESC = "servicePrincipal desc"
    SOURCE_IDENTITY = "sourceIdentity"
    SOURCE_IDENTITY_DESC = "sourceIdentity desc"
    SOURCE_SYSTEM = "sourceSystem"
    SOURCE_SYSTEM_DESC = "sourceSystem desc"
    STATUS_INFO = "statusInfo"
    STATUS_INFO_DESC = "statusInfo desc"
    TARGET_IDENTITY = "targetIdentity"
    TARGET_IDENTITY_DESC = "targetIdentity desc"
    TARGET_SYSTEM = "targetSystem"
    TARGET_SYSTEM_DESC = "targetSystem desc"
    TENANT_ID = "tenantId"
    TENANT_ID_DESC = "tenantId desc"

class Enum24(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ACTION = "action"
    ACTIVITY_DATE_TIME = "activityDateTime"
    CHANGE_ID = "changeId"
    CYCLE_ID = "cycleId"
    DURATION_IN_MILLISECONDS = "durationInMilliseconds"
    INITIATED_BY = "initiatedBy"
    JOB_ID = "jobId"
    MODIFIED_PROPERTIES = "modifiedProperties"
    PROVISIONING_STEPS = "provisioningSteps"
    SERVICE_PRINCIPAL = "servicePrincipal"
    SOURCE_IDENTITY = "sourceIdentity"
    SOURCE_SYSTEM = "sourceSystem"
    STATUS_INFO = "statusInfo"
    TARGET_IDENTITY = "targetIdentity"
    TARGET_SYSTEM = "targetSystem"
    TENANT_ID = "tenantId"

class Enum25(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ACTION = "action"
    ACTIVITY_DATE_TIME = "activityDateTime"
    CHANGE_ID = "changeId"
    CYCLE_ID = "cycleId"
    DURATION_IN_MILLISECONDS = "durationInMilliseconds"
    INITIATED_BY = "initiatedBy"
    JOB_ID = "jobId"
    MODIFIED_PROPERTIES = "modifiedProperties"
    PROVISIONING_STEPS = "provisioningSteps"
    SERVICE_PRINCIPAL = "servicePrincipal"
    SOURCE_IDENTITY = "sourceIdentity"
    SOURCE_SYSTEM = "sourceSystem"
    STATUS_INFO = "statusInfo"
    TARGET_IDENTITY = "targetIdentity"
    TARGET_SYSTEM = "targetSystem"
    TENANT_ID = "tenantId"

class Enum26(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    ALTERNATE_SIGN_IN_NAME = "alternateSignInName"
    ALTERNATE_SIGN_IN_NAME_DESC = "alternateSignInName desc"
    APP_DISPLAY_NAME = "appDisplayName"
    APP_DISPLAY_NAME_DESC = "appDisplayName desc"
    APP_ID = "appId"
    APP_ID_DESC = "appId desc"
    APPLIED_CONDITIONAL_ACCESS_POLICIES = "appliedConditionalAccessPolicies"
    APPLIED_CONDITIONAL_ACCESS_POLICIES_DESC = "appliedConditionalAccessPolicies desc"
    AUTHENTICATION_DETAILS = "authenticationDetails"
    AUTHENTICATION_DETAILS_DESC = "authenticationDetails desc"
    AUTHENTICATION_METHODS_USED = "authenticationMethodsUsed"
    AUTHENTICATION_METHODS_USED_DESC = "authenticationMethodsUsed desc"
    AUTHENTICATION_PROCESSING_DETAILS = "authenticationProcessingDetails"
    AUTHENTICATION_PROCESSING_DETAILS_DESC = "authenticationProcessingDetails desc"
    AUTHENTICATION_REQUIREMENT = "authenticationRequirement"
    AUTHENTICATION_REQUIREMENT_DESC = "authenticationRequirement desc"
    AUTHENTICATION_REQUIREMENT_POLICIES = "authenticationRequirementPolicies"
    AUTHENTICATION_REQUIREMENT_POLICIES_DESC = "authenticationRequirementPolicies desc"
    CLIENT_APP_USED = "clientAppUsed"
    CLIENT_APP_USED_DESC = "clientAppUsed desc"
    CONDITIONAL_ACCESS_STATUS = "conditionalAccessStatus"
    CONDITIONAL_ACCESS_STATUS_DESC = "conditionalAccessStatus desc"
    CORRELATION_ID = "correlationId"
    CORRELATION_ID_DESC = "correlationId desc"
    CREATED_DATE_TIME = "createdDateTime"
    CREATED_DATE_TIME_DESC = "createdDateTime desc"
    DEVICE_DETAIL = "deviceDetail"
    DEVICE_DETAIL_DESC = "deviceDetail desc"
    IP_ADDRESS = "ipAddress"
    IP_ADDRESS_DESC = "ipAddress desc"
    IS_INTERACTIVE = "isInteractive"
    IS_INTERACTIVE_DESC = "isInteractive desc"
    LOCATION = "location"
    LOCATION_DESC = "location desc"
    MFA_DETAIL = "mfaDetail"
    MFA_DETAIL_DESC = "mfaDetail desc"
    NETWORK_LOCATION_DETAILS = "networkLocationDetails"
    NETWORK_LOCATION_DETAILS_DESC = "networkLocationDetails desc"
    ORIGINAL_REQUEST_ID = "originalRequestId"
    ORIGINAL_REQUEST_ID_DESC = "originalRequestId desc"
    PROCESSING_TIME_IN_MILLISECONDS = "processingTimeInMilliseconds"
    PROCESSING_TIME_IN_MILLISECONDS_DESC = "processingTimeInMilliseconds desc"
    RESOURCE_DISPLAY_NAME = "resourceDisplayName"
    RESOURCE_DISPLAY_NAME_DESC = "resourceDisplayName desc"
    RESOURCE_ID = "resourceId"
    RESOURCE_ID_DESC = "resourceId desc"
    RESOURCE_TENANT_ID = "resourceTenantId"
    RESOURCE_TENANT_ID_DESC = "resourceTenantId desc"
    RISK_DETAIL = "riskDetail"
    RISK_DETAIL_DESC = "riskDetail desc"
    RISK_EVENT_TYPES = "riskEventTypes"
    RISK_EVENT_TYPES_DESC = "riskEventTypes desc"
    RISK_EVENT_TYPES_V2 = "riskEventTypes_v2"
    RISK_EVENT_TYPES_V2_DESC = "riskEventTypes_v2 desc"
    RISK_LEVEL_AGGREGATED = "riskLevelAggregated"
    RISK_LEVEL_AGGREGATED_DESC = "riskLevelAggregated desc"
    RISK_LEVEL_DURING_SIGN_IN = "riskLevelDuringSignIn"
    RISK_LEVEL_DURING_SIGN_IN_DESC = "riskLevelDuringSignIn desc"
    RISK_STATE = "riskState"
    RISK_STATE_DESC = "riskState desc"
    SERVICE_PRINCIPAL_ID = "servicePrincipalId"
    SERVICE_PRINCIPAL_ID_DESC = "servicePrincipalId desc"
    SERVICE_PRINCIPAL_NAME = "servicePrincipalName"
    SERVICE_PRINCIPAL_NAME_DESC = "servicePrincipalName desc"
    SIGN_IN_EVENT_TYPES = "signInEventTypes"
    SIGN_IN_EVENT_TYPES_DESC = "signInEventTypes desc"
    STATUS = "status"
    STATUS_DESC = "status desc"
    TOKEN_ISSUER_NAME = "tokenIssuerName"
    TOKEN_ISSUER_NAME_DESC = "tokenIssuerName desc"
    TOKEN_ISSUER_TYPE = "tokenIssuerType"
    TOKEN_ISSUER_TYPE_DESC = "tokenIssuerType desc"
    USER_AGENT = "userAgent"
    USER_AGENT_DESC = "userAgent desc"
    USER_DISPLAY_NAME = "userDisplayName"
    USER_DISPLAY_NAME_DESC = "userDisplayName desc"
    USER_ID = "userId"
    USER_ID_DESC = "userId desc"
    USER_PRINCIPAL_NAME = "userPrincipalName"
    USER_PRINCIPAL_NAME_DESC = "userPrincipalName desc"
    TARGET_TENANT_ID = "targetTenantId"
    TARGET_TENANT_ID_DESC = "targetTenantId desc"

class Enum27(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ALTERNATE_SIGN_IN_NAME = "alternateSignInName"
    APP_DISPLAY_NAME = "appDisplayName"
    APP_ID = "appId"
    APPLIED_CONDITIONAL_ACCESS_POLICIES = "appliedConditionalAccessPolicies"
    AUTHENTICATION_DETAILS = "authenticationDetails"
    AUTHENTICATION_METHODS_USED = "authenticationMethodsUsed"
    AUTHENTICATION_PROCESSING_DETAILS = "authenticationProcessingDetails"
    AUTHENTICATION_REQUIREMENT = "authenticationRequirement"
    AUTHENTICATION_REQUIREMENT_POLICIES = "authenticationRequirementPolicies"
    CLIENT_APP_USED = "clientAppUsed"
    CONDITIONAL_ACCESS_STATUS = "conditionalAccessStatus"
    CORRELATION_ID = "correlationId"
    CREATED_DATE_TIME = "createdDateTime"
    DEVICE_DETAIL = "deviceDetail"
    IP_ADDRESS = "ipAddress"
    IS_INTERACTIVE = "isInteractive"
    LOCATION = "location"
    MFA_DETAIL = "mfaDetail"
    NETWORK_LOCATION_DETAILS = "networkLocationDetails"
    ORIGINAL_REQUEST_ID = "originalRequestId"
    PROCESSING_TIME_IN_MILLISECONDS = "processingTimeInMilliseconds"
    RESOURCE_DISPLAY_NAME = "resourceDisplayName"
    RESOURCE_ID = "resourceId"
    RESOURCE_TENANT_ID = "resourceTenantId"
    RISK_DETAIL = "riskDetail"
    RISK_EVENT_TYPES = "riskEventTypes"
    RISK_EVENT_TYPES_V2 = "riskEventTypes_v2"
    RISK_LEVEL_AGGREGATED = "riskLevelAggregated"
    RISK_LEVEL_DURING_SIGN_IN = "riskLevelDuringSignIn"
    RISK_STATE = "riskState"
    SERVICE_PRINCIPAL_ID = "servicePrincipalId"
    SERVICE_PRINCIPAL_NAME = "servicePrincipalName"
    SIGN_IN_EVENT_TYPES = "signInEventTypes"
    STATUS = "status"
    TOKEN_ISSUER_NAME = "tokenIssuerName"
    TOKEN_ISSUER_TYPE = "tokenIssuerType"
    USER_AGENT = "userAgent"
    USER_DISPLAY_NAME = "userDisplayName"
    USER_ID = "userId"
    USER_PRINCIPAL_NAME = "userPrincipalName"
    TARGET_TENANT_ID = "targetTenantId"

class Enum28(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ALTERNATE_SIGN_IN_NAME = "alternateSignInName"
    APP_DISPLAY_NAME = "appDisplayName"
    APP_ID = "appId"
    APPLIED_CONDITIONAL_ACCESS_POLICIES = "appliedConditionalAccessPolicies"
    AUTHENTICATION_DETAILS = "authenticationDetails"
    AUTHENTICATION_METHODS_USED = "authenticationMethodsUsed"
    AUTHENTICATION_PROCESSING_DETAILS = "authenticationProcessingDetails"
    AUTHENTICATION_REQUIREMENT = "authenticationRequirement"
    AUTHENTICATION_REQUIREMENT_POLICIES = "authenticationRequirementPolicies"
    CLIENT_APP_USED = "clientAppUsed"
    CONDITIONAL_ACCESS_STATUS = "conditionalAccessStatus"
    CORRELATION_ID = "correlationId"
    CREATED_DATE_TIME = "createdDateTime"
    DEVICE_DETAIL = "deviceDetail"
    IP_ADDRESS = "ipAddress"
    IS_INTERACTIVE = "isInteractive"
    LOCATION = "location"
    MFA_DETAIL = "mfaDetail"
    NETWORK_LOCATION_DETAILS = "networkLocationDetails"
    ORIGINAL_REQUEST_ID = "originalRequestId"
    PROCESSING_TIME_IN_MILLISECONDS = "processingTimeInMilliseconds"
    RESOURCE_DISPLAY_NAME = "resourceDisplayName"
    RESOURCE_ID = "resourceId"
    RESOURCE_TENANT_ID = "resourceTenantId"
    RISK_DETAIL = "riskDetail"
    RISK_EVENT_TYPES = "riskEventTypes"
    RISK_EVENT_TYPES_V2 = "riskEventTypes_v2"
    RISK_LEVEL_AGGREGATED = "riskLevelAggregated"
    RISK_LEVEL_DURING_SIGN_IN = "riskLevelDuringSignIn"
    RISK_STATE = "riskState"
    SERVICE_PRINCIPAL_ID = "servicePrincipalId"
    SERVICE_PRINCIPAL_NAME = "servicePrincipalName"
    SIGN_IN_EVENT_TYPES = "signInEventTypes"
    STATUS = "status"
    TOKEN_ISSUER_NAME = "tokenIssuerName"
    TOKEN_ISSUER_TYPE = "tokenIssuerType"
    USER_AGENT = "userAgent"
    USER_DISPLAY_NAME = "userDisplayName"
    USER_ID = "userId"
    USER_PRINCIPAL_NAME = "userPrincipalName"
    TARGET_TENANT_ID = "targetTenantId"

class Enum29(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    ALTERNATE_SIGN_IN_NAME = "alternateSignInName"
    ALTERNATE_SIGN_IN_NAME_DESC = "alternateSignInName desc"
    APP_DISPLAY_NAME = "appDisplayName"
    APP_DISPLAY_NAME_DESC = "appDisplayName desc"
    APP_ID = "appId"
    APP_ID_DESC = "appId desc"
    APPLIED_CONDITIONAL_ACCESS_POLICIES = "appliedConditionalAccessPolicies"
    APPLIED_CONDITIONAL_ACCESS_POLICIES_DESC = "appliedConditionalAccessPolicies desc"
    AUTHENTICATION_DETAILS = "authenticationDetails"
    AUTHENTICATION_DETAILS_DESC = "authenticationDetails desc"
    AUTHENTICATION_METHODS_USED = "authenticationMethodsUsed"
    AUTHENTICATION_METHODS_USED_DESC = "authenticationMethodsUsed desc"
    AUTHENTICATION_PROCESSING_DETAILS = "authenticationProcessingDetails"
    AUTHENTICATION_PROCESSING_DETAILS_DESC = "authenticationProcessingDetails desc"
    AUTHENTICATION_REQUIREMENT = "authenticationRequirement"
    AUTHENTICATION_REQUIREMENT_DESC = "authenticationRequirement desc"
    AUTHENTICATION_REQUIREMENT_POLICIES = "authenticationRequirementPolicies"
    AUTHENTICATION_REQUIREMENT_POLICIES_DESC = "authenticationRequirementPolicies desc"
    CLIENT_APP_USED = "clientAppUsed"
    CLIENT_APP_USED_DESC = "clientAppUsed desc"
    CONDITIONAL_ACCESS_STATUS = "conditionalAccessStatus"
    CONDITIONAL_ACCESS_STATUS_DESC = "conditionalAccessStatus desc"
    CORRELATION_ID = "correlationId"
    CORRELATION_ID_DESC = "correlationId desc"
    CREATED_DATE_TIME = "createdDateTime"
    CREATED_DATE_TIME_DESC = "createdDateTime desc"
    DEVICE_DETAIL = "deviceDetail"
    DEVICE_DETAIL_DESC = "deviceDetail desc"
    IP_ADDRESS = "ipAddress"
    IP_ADDRESS_DESC = "ipAddress desc"
    IS_INTERACTIVE = "isInteractive"
    IS_INTERACTIVE_DESC = "isInteractive desc"
    LOCATION = "location"
    LOCATION_DESC = "location desc"
    MFA_DETAIL = "mfaDetail"
    MFA_DETAIL_DESC = "mfaDetail desc"
    NETWORK_LOCATION_DETAILS = "networkLocationDetails"
    NETWORK_LOCATION_DETAILS_DESC = "networkLocationDetails desc"
    ORIGINAL_REQUEST_ID = "originalRequestId"
    ORIGINAL_REQUEST_ID_DESC = "originalRequestId desc"
    PROCESSING_TIME_IN_MILLISECONDS = "processingTimeInMilliseconds"
    PROCESSING_TIME_IN_MILLISECONDS_DESC = "processingTimeInMilliseconds desc"
    RESOURCE_DISPLAY_NAME = "resourceDisplayName"
    RESOURCE_DISPLAY_NAME_DESC = "resourceDisplayName desc"
    RESOURCE_ID = "resourceId"
    RESOURCE_ID_DESC = "resourceId desc"
    RESOURCE_TENANT_ID = "resourceTenantId"
    RESOURCE_TENANT_ID_DESC = "resourceTenantId desc"
    RISK_DETAIL = "riskDetail"
    RISK_DETAIL_DESC = "riskDetail desc"
    RISK_EVENT_TYPES = "riskEventTypes"
    RISK_EVENT_TYPES_DESC = "riskEventTypes desc"
    RISK_EVENT_TYPES_V2 = "riskEventTypes_v2"
    RISK_EVENT_TYPES_V2_DESC = "riskEventTypes_v2 desc"
    RISK_LEVEL_AGGREGATED = "riskLevelAggregated"
    RISK_LEVEL_AGGREGATED_DESC = "riskLevelAggregated desc"
    RISK_LEVEL_DURING_SIGN_IN = "riskLevelDuringSignIn"
    RISK_LEVEL_DURING_SIGN_IN_DESC = "riskLevelDuringSignIn desc"
    RISK_STATE = "riskState"
    RISK_STATE_DESC = "riskState desc"
    SERVICE_PRINCIPAL_ID = "servicePrincipalId"
    SERVICE_PRINCIPAL_ID_DESC = "servicePrincipalId desc"
    SERVICE_PRINCIPAL_NAME = "servicePrincipalName"
    SERVICE_PRINCIPAL_NAME_DESC = "servicePrincipalName desc"
    SIGN_IN_EVENT_TYPES = "signInEventTypes"
    SIGN_IN_EVENT_TYPES_DESC = "signInEventTypes desc"
    STATUS = "status"
    STATUS_DESC = "status desc"
    TOKEN_ISSUER_NAME = "tokenIssuerName"
    TOKEN_ISSUER_NAME_DESC = "tokenIssuerName desc"
    TOKEN_ISSUER_TYPE = "tokenIssuerType"
    TOKEN_ISSUER_TYPE_DESC = "tokenIssuerType desc"
    USER_AGENT = "userAgent"
    USER_AGENT_DESC = "userAgent desc"
    USER_DISPLAY_NAME = "userDisplayName"
    USER_DISPLAY_NAME_DESC = "userDisplayName desc"
    USER_ID = "userId"
    USER_ID_DESC = "userId desc"
    USER_PRINCIPAL_NAME = "userPrincipalName"
    USER_PRINCIPAL_NAME_DESC = "userPrincipalName desc"

class Enum30(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ALTERNATE_SIGN_IN_NAME = "alternateSignInName"
    APP_DISPLAY_NAME = "appDisplayName"
    APP_ID = "appId"
    APPLIED_CONDITIONAL_ACCESS_POLICIES = "appliedConditionalAccessPolicies"
    AUTHENTICATION_DETAILS = "authenticationDetails"
    AUTHENTICATION_METHODS_USED = "authenticationMethodsUsed"
    AUTHENTICATION_PROCESSING_DETAILS = "authenticationProcessingDetails"
    AUTHENTICATION_REQUIREMENT = "authenticationRequirement"
    AUTHENTICATION_REQUIREMENT_POLICIES = "authenticationRequirementPolicies"
    CLIENT_APP_USED = "clientAppUsed"
    CONDITIONAL_ACCESS_STATUS = "conditionalAccessStatus"
    CORRELATION_ID = "correlationId"
    CREATED_DATE_TIME = "createdDateTime"
    DEVICE_DETAIL = "deviceDetail"
    IP_ADDRESS = "ipAddress"
    IS_INTERACTIVE = "isInteractive"
    LOCATION = "location"
    MFA_DETAIL = "mfaDetail"
    NETWORK_LOCATION_DETAILS = "networkLocationDetails"
    ORIGINAL_REQUEST_ID = "originalRequestId"
    PROCESSING_TIME_IN_MILLISECONDS = "processingTimeInMilliseconds"
    RESOURCE_DISPLAY_NAME = "resourceDisplayName"
    RESOURCE_ID = "resourceId"
    RESOURCE_TENANT_ID = "resourceTenantId"
    RISK_DETAIL = "riskDetail"
    RISK_EVENT_TYPES = "riskEventTypes"
    RISK_EVENT_TYPES_V2 = "riskEventTypes_v2"
    RISK_LEVEL_AGGREGATED = "riskLevelAggregated"
    RISK_LEVEL_DURING_SIGN_IN = "riskLevelDuringSignIn"
    RISK_STATE = "riskState"
    SERVICE_PRINCIPAL_ID = "servicePrincipalId"
    SERVICE_PRINCIPAL_NAME = "servicePrincipalName"
    SIGN_IN_EVENT_TYPES = "signInEventTypes"
    STATUS = "status"
    TOKEN_ISSUER_NAME = "tokenIssuerName"
    TOKEN_ISSUER_TYPE = "tokenIssuerType"
    USER_AGENT = "userAgent"
    USER_DISPLAY_NAME = "userDisplayName"
    USER_ID = "userId"
    USER_PRINCIPAL_NAME = "userPrincipalName"

class Enum31(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ALTERNATE_SIGN_IN_NAME = "alternateSignInName"
    APP_DISPLAY_NAME = "appDisplayName"
    APP_ID = "appId"
    APPLIED_CONDITIONAL_ACCESS_POLICIES = "appliedConditionalAccessPolicies"
    AUTHENTICATION_DETAILS = "authenticationDetails"
    AUTHENTICATION_METHODS_USED = "authenticationMethodsUsed"
    AUTHENTICATION_PROCESSING_DETAILS = "authenticationProcessingDetails"
    AUTHENTICATION_REQUIREMENT = "authenticationRequirement"
    AUTHENTICATION_REQUIREMENT_POLICIES = "authenticationRequirementPolicies"
    CLIENT_APP_USED = "clientAppUsed"
    CONDITIONAL_ACCESS_STATUS = "conditionalAccessStatus"
    CORRELATION_ID = "correlationId"
    CREATED_DATE_TIME = "createdDateTime"
    DEVICE_DETAIL = "deviceDetail"
    IP_ADDRESS = "ipAddress"
    IS_INTERACTIVE = "isInteractive"
    LOCATION = "location"
    MFA_DETAIL = "mfaDetail"
    NETWORK_LOCATION_DETAILS = "networkLocationDetails"
    ORIGINAL_REQUEST_ID = "originalRequestId"
    PROCESSING_TIME_IN_MILLISECONDS = "processingTimeInMilliseconds"
    RESOURCE_DISPLAY_NAME = "resourceDisplayName"
    RESOURCE_ID = "resourceId"
    RESOURCE_TENANT_ID = "resourceTenantId"
    RISK_DETAIL = "riskDetail"
    RISK_EVENT_TYPES = "riskEventTypes"
    RISK_EVENT_TYPES_V2 = "riskEventTypes_v2"
    RISK_LEVEL_AGGREGATED = "riskLevelAggregated"
    RISK_LEVEL_DURING_SIGN_IN = "riskLevelDuringSignIn"
    RISK_STATE = "riskState"
    SERVICE_PRINCIPAL_ID = "servicePrincipalId"
    SERVICE_PRINCIPAL_NAME = "servicePrincipalName"
    SIGN_IN_EVENT_TYPES = "signInEventTypes"
    STATUS = "status"
    TOKEN_ISSUER_NAME = "tokenIssuerName"
    TOKEN_ISSUER_TYPE = "tokenIssuerType"
    USER_AGENT = "userAgent"
    USER_DISPLAY_NAME = "userDisplayName"
    USER_ID = "userId"
    USER_PRINCIPAL_NAME = "userPrincipalName"

class Enum32(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    APPLICATION_SIGN_IN_DETAILED_SUMMARY = "applicationSignInDetailedSummary"
    CREDENTIAL_USER_REGISTRATION_DETAILS = "credentialUserRegistrationDetails"
    USER_CREDENTIAL_USAGE_DETAILS = "userCredentialUsageDetails"
    DAILY_PRINT_USAGE_SUMMARIES_BY_PRINTER = "dailyPrintUsageSummariesByPrinter"
    DAILY_PRINT_USAGE_SUMMARIES_BY_USER = "dailyPrintUsageSummariesByUser"
    MONTHLY_PRINT_USAGE_SUMMARIES_BY_PRINTER = "monthlyPrintUsageSummariesByPrinter"
    MONTHLY_PRINT_USAGE_SUMMARIES_BY_USER = "monthlyPrintUsageSummariesByUser"

class Enum33(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    APPLICATION_SIGN_IN_DETAILED_SUMMARY = "applicationSignInDetailedSummary"
    CREDENTIAL_USER_REGISTRATION_DETAILS = "credentialUserRegistrationDetails"
    USER_CREDENTIAL_USAGE_DETAILS = "userCredentialUsageDetails"
    DAILY_PRINT_USAGE_SUMMARIES_BY_PRINTER = "dailyPrintUsageSummariesByPrinter"
    DAILY_PRINT_USAGE_SUMMARIES_BY_USER = "dailyPrintUsageSummariesByUser"
    MONTHLY_PRINT_USAGE_SUMMARIES_BY_PRINTER = "monthlyPrintUsageSummariesByPrinter"
    MONTHLY_PRINT_USAGE_SUMMARIES_BY_USER = "monthlyPrintUsageSummariesByUser"

class Enum37(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    AGGREGATED_EVENT_DATE_TIME = "aggregatedEventDateTime"
    AGGREGATED_EVENT_DATE_TIME_DESC = "aggregatedEventDateTime desc"
    APP_DISPLAY_NAME = "appDisplayName"
    APP_DISPLAY_NAME_DESC = "appDisplayName desc"
    APP_ID = "appId"
    APP_ID_DESC = "appId desc"
    SIGN_IN_COUNT = "signInCount"
    SIGN_IN_COUNT_DESC = "signInCount desc"
    STATUS = "status"
    STATUS_DESC = "status desc"

class Enum38(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    AGGREGATED_EVENT_DATE_TIME = "aggregatedEventDateTime"
    APP_DISPLAY_NAME = "appDisplayName"
    APP_ID = "appId"
    SIGN_IN_COUNT = "signInCount"
    STATUS = "status"

class Enum39(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    AGGREGATED_EVENT_DATE_TIME = "aggregatedEventDateTime"
    APP_DISPLAY_NAME = "appDisplayName"
    APP_ID = "appId"
    SIGN_IN_COUNT = "signInCount"
    STATUS = "status"

class Enum40(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    AUTH_METHODS = "authMethods"
    AUTH_METHODS_DESC = "authMethods desc"
    IS_CAPABLE = "isCapable"
    IS_CAPABLE_DESC = "isCapable desc"
    IS_ENABLED = "isEnabled"
    IS_ENABLED_DESC = "isEnabled desc"
    IS_MFA_REGISTERED = "isMfaRegistered"
    IS_MFA_REGISTERED_DESC = "isMfaRegistered desc"
    IS_REGISTERED = "isRegistered"
    IS_REGISTERED_DESC = "isRegistered desc"
    USER_DISPLAY_NAME = "userDisplayName"
    USER_DISPLAY_NAME_DESC = "userDisplayName desc"
    USER_PRINCIPAL_NAME = "userPrincipalName"
    USER_PRINCIPAL_NAME_DESC = "userPrincipalName desc"

class Enum41(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    AUTH_METHODS = "authMethods"
    IS_CAPABLE = "isCapable"
    IS_ENABLED = "isEnabled"
    IS_MFA_REGISTERED = "isMfaRegistered"
    IS_REGISTERED = "isRegistered"
    USER_DISPLAY_NAME = "userDisplayName"
    USER_PRINCIPAL_NAME = "userPrincipalName"

class Enum42(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    AUTH_METHODS = "authMethods"
    IS_CAPABLE = "isCapable"
    IS_ENABLED = "isEnabled"
    IS_MFA_REGISTERED = "isMfaRegistered"
    IS_REGISTERED = "isRegistered"
    USER_DISPLAY_NAME = "userDisplayName"
    USER_PRINCIPAL_NAME = "userPrincipalName"

class Enum43(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    COMPLETED_BLACK_AND_WHITE_JOB_COUNT = "completedBlackAndWhiteJobCount"
    COMPLETED_BLACK_AND_WHITE_JOB_COUNT_DESC = "completedBlackAndWhiteJobCount desc"
    COMPLETED_COLOR_JOB_COUNT = "completedColorJobCount"
    COMPLETED_COLOR_JOB_COUNT_DESC = "completedColorJobCount desc"
    INCOMPLETE_JOB_COUNT = "incompleteJobCount"
    INCOMPLETE_JOB_COUNT_DESC = "incompleteJobCount desc"
    PRINTER_ID = "printerId"
    PRINTER_ID_DESC = "printerId desc"
    USAGE_DATE = "usageDate"
    USAGE_DATE_DESC = "usageDate desc"

class Enum44(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    COMPLETED_BLACK_AND_WHITE_JOB_COUNT = "completedBlackAndWhiteJobCount"
    COMPLETED_COLOR_JOB_COUNT = "completedColorJobCount"
    INCOMPLETE_JOB_COUNT = "incompleteJobCount"
    PRINTER_ID = "printerId"
    USAGE_DATE = "usageDate"

class Enum45(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    COMPLETED_BLACK_AND_WHITE_JOB_COUNT = "completedBlackAndWhiteJobCount"
    COMPLETED_COLOR_JOB_COUNT = "completedColorJobCount"
    INCOMPLETE_JOB_COUNT = "incompleteJobCount"
    PRINTER_ID = "printerId"
    USAGE_DATE = "usageDate"

class Enum46(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    COMPLETED_BLACK_AND_WHITE_JOB_COUNT = "completedBlackAndWhiteJobCount"
    COMPLETED_BLACK_AND_WHITE_JOB_COUNT_DESC = "completedBlackAndWhiteJobCount desc"
    COMPLETED_COLOR_JOB_COUNT = "completedColorJobCount"
    COMPLETED_COLOR_JOB_COUNT_DESC = "completedColorJobCount desc"
    INCOMPLETE_JOB_COUNT = "incompleteJobCount"
    INCOMPLETE_JOB_COUNT_DESC = "incompleteJobCount desc"
    USAGE_DATE = "usageDate"
    USAGE_DATE_DESC = "usageDate desc"
    USER_PRINCIPAL_NAME = "userPrincipalName"
    USER_PRINCIPAL_NAME_DESC = "userPrincipalName desc"

class Enum47(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    COMPLETED_BLACK_AND_WHITE_JOB_COUNT = "completedBlackAndWhiteJobCount"
    COMPLETED_COLOR_JOB_COUNT = "completedColorJobCount"
    INCOMPLETE_JOB_COUNT = "incompleteJobCount"
    USAGE_DATE = "usageDate"
    USER_PRINCIPAL_NAME = "userPrincipalName"

class Enum48(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    COMPLETED_BLACK_AND_WHITE_JOB_COUNT = "completedBlackAndWhiteJobCount"
    COMPLETED_COLOR_JOB_COUNT = "completedColorJobCount"
    INCOMPLETE_JOB_COUNT = "incompleteJobCount"
    USAGE_DATE = "usageDate"
    USER_PRINCIPAL_NAME = "userPrincipalName"

class Enum52(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    COMPLETED_BLACK_AND_WHITE_JOB_COUNT = "completedBlackAndWhiteJobCount"
    COMPLETED_BLACK_AND_WHITE_JOB_COUNT_DESC = "completedBlackAndWhiteJobCount desc"
    COMPLETED_COLOR_JOB_COUNT = "completedColorJobCount"
    COMPLETED_COLOR_JOB_COUNT_DESC = "completedColorJobCount desc"
    INCOMPLETE_JOB_COUNT = "incompleteJobCount"
    INCOMPLETE_JOB_COUNT_DESC = "incompleteJobCount desc"
    PRINTER_ID = "printerId"
    PRINTER_ID_DESC = "printerId desc"
    USAGE_DATE = "usageDate"
    USAGE_DATE_DESC = "usageDate desc"

class Enum53(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    COMPLETED_BLACK_AND_WHITE_JOB_COUNT = "completedBlackAndWhiteJobCount"
    COMPLETED_COLOR_JOB_COUNT = "completedColorJobCount"
    INCOMPLETE_JOB_COUNT = "incompleteJobCount"
    PRINTER_ID = "printerId"
    USAGE_DATE = "usageDate"

class Enum54(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    COMPLETED_BLACK_AND_WHITE_JOB_COUNT = "completedBlackAndWhiteJobCount"
    COMPLETED_COLOR_JOB_COUNT = "completedColorJobCount"
    INCOMPLETE_JOB_COUNT = "incompleteJobCount"
    PRINTER_ID = "printerId"
    USAGE_DATE = "usageDate"

class Enum55(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    COMPLETED_BLACK_AND_WHITE_JOB_COUNT = "completedBlackAndWhiteJobCount"
    COMPLETED_BLACK_AND_WHITE_JOB_COUNT_DESC = "completedBlackAndWhiteJobCount desc"
    COMPLETED_COLOR_JOB_COUNT = "completedColorJobCount"
    COMPLETED_COLOR_JOB_COUNT_DESC = "completedColorJobCount desc"
    INCOMPLETE_JOB_COUNT = "incompleteJobCount"
    INCOMPLETE_JOB_COUNT_DESC = "incompleteJobCount desc"
    USAGE_DATE = "usageDate"
    USAGE_DATE_DESC = "usageDate desc"
    USER_PRINCIPAL_NAME = "userPrincipalName"
    USER_PRINCIPAL_NAME_DESC = "userPrincipalName desc"

class Enum56(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    COMPLETED_BLACK_AND_WHITE_JOB_COUNT = "completedBlackAndWhiteJobCount"
    COMPLETED_COLOR_JOB_COUNT = "completedColorJobCount"
    INCOMPLETE_JOB_COUNT = "incompleteJobCount"
    USAGE_DATE = "usageDate"
    USER_PRINCIPAL_NAME = "userPrincipalName"

class Enum57(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    COMPLETED_BLACK_AND_WHITE_JOB_COUNT = "completedBlackAndWhiteJobCount"
    COMPLETED_COLOR_JOB_COUNT = "completedColorJobCount"
    INCOMPLETE_JOB_COUNT = "incompleteJobCount"
    USAGE_DATE = "usageDate"
    USER_PRINCIPAL_NAME = "userPrincipalName"

class Enum58(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    AUTH_METHOD = "authMethod"
    AUTH_METHOD_DESC = "authMethod desc"
    EVENT_DATE_TIME = "eventDateTime"
    EVENT_DATE_TIME_DESC = "eventDateTime desc"
    FAILURE_REASON = "failureReason"
    FAILURE_REASON_DESC = "failureReason desc"
    FEATURE = "feature"
    FEATURE_DESC = "feature desc"
    IS_SUCCESS = "isSuccess"
    IS_SUCCESS_DESC = "isSuccess desc"
    USER_DISPLAY_NAME = "userDisplayName"
    USER_DISPLAY_NAME_DESC = "userDisplayName desc"
    USER_PRINCIPAL_NAME = "userPrincipalName"
    USER_PRINCIPAL_NAME_DESC = "userPrincipalName desc"

class Enum59(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    AUTH_METHOD = "authMethod"
    EVENT_DATE_TIME = "eventDateTime"
    FAILURE_REASON = "failureReason"
    FEATURE = "feature"
    IS_SUCCESS = "isSuccess"
    USER_DISPLAY_NAME = "userDisplayName"
    USER_PRINCIPAL_NAME = "userPrincipalName"

class Enum60(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    AUTH_METHOD = "authMethod"
    EVENT_DATE_TIME = "eventDateTime"
    FAILURE_REASON = "failureReason"
    FEATURE = "feature"
    IS_SUCCESS = "isSuccess"
    USER_DISPLAY_NAME = "userDisplayName"
    USER_PRINCIPAL_NAME = "userPrincipalName"

class Get0ItemsItem(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    DIRECTORY_AUDITS = "directoryAudits"
    DIRECTORY_PROVISIONING = "directoryProvisioning"
    PROVISIONING = "provisioning"
    RESTRICTED_SIGN_INS = "restrictedSignIns"
    SIGN_INS = "signIns"

class Get1ItemsItem(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    DIRECTORY_AUDITS = "directoryAudits"
    DIRECTORY_PROVISIONING = "directoryProvisioning"
    PROVISIONING = "provisioning"
    RESTRICTED_SIGN_INS = "restrictedSignIns"
    SIGN_INS = "signIns"

class Get5ItemsItem(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    ACTIVITY_DATE_TIME = "activityDateTime"
    ACTIVITY_DATE_TIME_DESC = "activityDateTime desc"
    ACTIVITY_DISPLAY_NAME = "activityDisplayName"
    ACTIVITY_DISPLAY_NAME_DESC = "activityDisplayName desc"
    ADDITIONAL_DETAILS = "additionalDetails"
    ADDITIONAL_DETAILS_DESC = "additionalDetails desc"
    CATEGORY = "category"
    CATEGORY_DESC = "category desc"
    CORRELATION_ID = "correlationId"
    CORRELATION_ID_DESC = "correlationId desc"
    INITIATED_BY = "initiatedBy"
    INITIATED_BY_DESC = "initiatedBy desc"
    LOGGED_BY_SERVICE = "loggedByService"
    LOGGED_BY_SERVICE_DESC = "loggedByService desc"
    OPERATION_TYPE = "operationType"
    OPERATION_TYPE_DESC = "operationType desc"
    RESULT = "result"
    RESULT_DESC = "result desc"
    RESULT_REASON = "resultReason"
    RESULT_REASON_DESC = "resultReason desc"
    TARGET_RESOURCES = "targetResources"
    TARGET_RESOURCES_DESC = "targetResources desc"

class Get6ItemsItem(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ACTIVITY_DATE_TIME = "activityDateTime"
    ACTIVITY_DISPLAY_NAME = "activityDisplayName"
    ADDITIONAL_DETAILS = "additionalDetails"
    CATEGORY = "category"
    CORRELATION_ID = "correlationId"
    INITIATED_BY = "initiatedBy"
    LOGGED_BY_SERVICE = "loggedByService"
    OPERATION_TYPE = "operationType"
    RESULT = "result"
    RESULT_REASON = "resultReason"
    TARGET_RESOURCES = "targetResources"

class MicrosoftGraphAppliedConditionalAccessPolicyResult(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    SUCCESS = "success"
    FAILURE = "failure"
    NOT_APPLIED = "notApplied"
    NOT_ENABLED = "notEnabled"
    UNKNOWN = "unknown"
    UNKNOWN_FUTURE_VALUE = "unknownFutureValue"
    REPORT_ONLY_SUCCESS = "reportOnlySuccess"
    REPORT_ONLY_FAILURE = "reportOnlyFailure"
    REPORT_ONLY_NOT_APPLIED = "reportOnlyNotApplied"
    REPORT_ONLY_INTERRUPTED = "reportOnlyInterrupted"

class MicrosoftGraphAzureAdLicenseType(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    NONE = "none"
    FREE = "free"
    BASIC = "basic"
    PREMIUM_P1 = "premiumP1"
    PREMIUM_P2 = "premiumP2"
    UNKNOWN_FUTURE_VALUE = "unknownFutureValue"

class MicrosoftGraphConditionalAccessConditions(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    NONE = "none"
    APPLICATION = "application"
    USERS = "users"
    DEVICE_PLATFORM = "devicePlatform"
    LOCATION = "location"
    CLIENT_TYPE = "clientType"
    SIGN_IN_RISK = "signInRisk"
    USER_RISK = "userRisk"
    TIME = "time"
    DEVICE_STATE = "deviceState"
    CLIENT = "client"

class MicrosoftGraphConditionalAccessStatus(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    SUCCESS = "success"
    FAILURE = "failure"
    NOT_APPLIED = "notApplied"
    UNKNOWN_FUTURE_VALUE = "unknownFutureValue"

class MicrosoftGraphFeatureType(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    REGISTRATION = "registration"
    RESET = "reset"
    UNKNOWN_FUTURE_VALUE = "unknownFutureValue"

class MicrosoftGraphGroupType(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    UNIFIED_GROUPS = "unifiedGroups"
    AZURE_AD = "azureAD"
    UNKNOWN_FUTURE_VALUE = "unknownFutureValue"

class MicrosoftGraphInitiatorType(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    USER = "user"
    APP = "app"
    SYSTEM = "system"
    UNKNOWN_FUTURE_VALUE = "unknownFutureValue"

class MicrosoftGraphMigrationStatus(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    READY = "ready"
    NEEDS_REVIEW = "needsReview"
    ADDITIONAL_STEPS_REQUIRED = "additionalStepsRequired"
    UNKNOWN_FUTURE_VALUE = "unknownFutureValue"

class MicrosoftGraphNetworkType(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    INTRANET = "intranet"
    EXTRANET = "extranet"
    NAMED_NETWORK = "namedNetwork"
    TRUSTED = "trusted"
    UNKNOWN_FUTURE_VALUE = "unknownFutureValue"

class MicrosoftGraphOperationResult(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    SUCCESS = "success"
    FAILURE = "failure"
    TIMEOUT = "timeout"
    UNKNOWN_FUTURE_VALUE = "unknownFutureValue"

class MicrosoftGraphProvisioningResult(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    SUCCESS = "success"
    FAILURE = "failure"
    SKIPPED = "skipped"
    UNKNOWN_FUTURE_VALUE = "unknownFutureValue"

class MicrosoftGraphProvisioningStepType(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    IMPORT_ENUM = "import"
    SCOPING = "scoping"
    MATCHING = "matching"
    PROCESSING = "processing"
    REFERENCE_RESOLUTION = "referenceResolution"
    EXPORT = "export"
    UNKNOWN_FUTURE_VALUE = "unknownFutureValue"

class MicrosoftGraphRegistrationAuthMethod(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    EMAIL = "email"
    MOBILE_PHONE = "mobilePhone"
    OFFICE_PHONE = "officePhone"
    SECURITY_QUESTION = "securityQuestion"
    APP_NOTIFICATION = "appNotification"
    APP_CODE = "appCode"
    ALTERNATE_MOBILE_PHONE = "alternateMobilePhone"
    FIDO = "fido"
    APP_PASSWORD = "appPassword"
    UNKNOWN_FUTURE_VALUE = "unknownFutureValue"

class MicrosoftGraphRegistrationStatusType(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    REGISTERED = "registered"
    ENABLED = "enabled"
    CAPABLE = "capable"
    MFA_REGISTERED = "mfaRegistered"
    UNKNOWN_FUTURE_VALUE = "unknownFutureValue"

class MicrosoftGraphRequirementProvider(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    MFA = "MFA"
    CA = "CA"
    UNKNOWN_FUTURE_VALUE = "unknownFutureValue"

class MicrosoftGraphRiskDetail(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    NONE = "none"
    ADMIN_GENERATED_TEMPORARY_PASSWORD = "adminGeneratedTemporaryPassword"
    USER_PERFORMED_SECURED_PASSWORD_CHANGE = "userPerformedSecuredPasswordChange"
    USER_PERFORMED_SECURED_PASSWORD_RESET = "userPerformedSecuredPasswordReset"
    ADMIN_CONFIRMED_SIGNIN_SAFE = "adminConfirmedSigninSafe"
    AI_CONFIRMED_SIGNIN_SAFE = "aiConfirmedSigninSafe"
    USER_PASSED_MFA_DRIVEN_BY_RISK_BASED_POLICY = "userPassedMFADrivenByRiskBasedPolicy"
    ADMIN_DISMISSED_ALL_RISK_FOR_USER = "adminDismissedAllRiskForUser"
    ADMIN_CONFIRMED_SIGNIN_COMPROMISED = "adminConfirmedSigninCompromised"
    HIDDEN = "hidden"
    ADMIN_CONFIRMED_USER_COMPROMISED = "adminConfirmedUserCompromised"
    UNKNOWN_FUTURE_VALUE = "unknownFutureValue"

class MicrosoftGraphRiskEventType(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    UNLIKELY_TRAVEL = "unlikelyTravel"
    ANONYMIZED_IP_ADDRESS = "anonymizedIPAddress"
    MALICIOUS_IP_ADDRESS = "maliciousIPAddress"
    UNFAMILIAR_FEATURES = "unfamiliarFeatures"
    MALWARE_INFECTED_IP_ADDRESS = "malwareInfectedIPAddress"
    SUSPICIOUS_IP_ADDRESS = "suspiciousIPAddress"
    LEAKED_CREDENTIALS = "leakedCredentials"
    INVESTIGATIONS_THREAT_INTELLIGENCE = "investigationsThreatIntelligence"
    GENERIC = "generic"
    ADMIN_CONFIRMED_USER_COMPROMISED = "adminConfirmedUserCompromised"
    MCAS_IMPOSSIBLE_TRAVEL = "mcasImpossibleTravel"
    MCAS_SUSPICIOUS_INBOX_MANIPULATION_RULES = "mcasSuspiciousInboxManipulationRules"
    INVESTIGATIONS_THREAT_INTELLIGENCE_SIGNIN_LINKED = "investigationsThreatIntelligenceSigninLinked"
    MALICIOUS_IP_ADDRESS_VALID_CREDENTIALS_BLOCKED_IP = "maliciousIPAddressValidCredentialsBlockedIP"
    UNKNOWN_FUTURE_VALUE = "unknownFutureValue"

class MicrosoftGraphRiskLevel(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    LOW = "low"
    MEDIUM = "medium"
    HIGH = "high"
    HIDDEN = "hidden"
    NONE = "none"
    UNKNOWN_FUTURE_VALUE = "unknownFutureValue"

class MicrosoftGraphRiskState(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    NONE = "none"
    CONFIRMED_SAFE = "confirmedSafe"
    REMEDIATED = "remediated"
    DISMISSED = "dismissed"
    AT_RISK = "atRisk"
    CONFIRMED_COMPROMISED = "confirmedCompromised"
    UNKNOWN_FUTURE_VALUE = "unknownFutureValue"

class MicrosoftGraphTokenIssuerType(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    AZURE_AD = "AzureAD"
    AD_FEDERATION_SERVICES = "ADFederationServices"
    UNKNOWN_FUTURE_VALUE = "UnknownFutureValue"

class MicrosoftGraphUsageAuthMethod(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    EMAIL = "email"
    MOBILE_SMS = "mobileSMS"
    MOBILE_CALL = "mobileCall"
    OFFICE_PHONE = "officePhone"
    SECURITY_QUESTION = "securityQuestion"
    APP_NOTIFICATION = "appNotification"
    APP_CODE = "appCode"
    ALTERNATE_MOBILE_CALL = "alternateMobileCall"
    FIDO = "fido"
    APP_PASSWORD = "appPassword"
    UNKNOWN_FUTURE_VALUE = "unknownFutureValue"
