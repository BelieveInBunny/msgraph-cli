# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=too-many-statements
# pylint: disable=too-many-locals
# pylint: disable=line-too-long

from msgraph.cli.core.commands import CliCommandType


def load_command_table(self, _):

    from azext_usersfunctions_beta.generated._client_factory import cf_user_activity

    usersfunctions_beta_user_activity = CliCommandType(
        operations_tmpl='azext_usersfunctions_beta.vendored_sdks.usersfunctions.operations._users_activities_operations#UsersActivitiesOperations.{}',
        client_factory=cf_user_activity,
    )
    with self.command_group('usersfunctions user-activity', usersfunctions_beta_user_activity) as g:
        g.custom_command('recent', 'usersfunctions_user_activity_recent')

    from azext_usersfunctions_beta.generated._client_factory import cf_user_calendar_calendar_view_calendar

    usersfunctions_beta_user_calendar_calendar_view_calendar = CliCommandType(
        operations_tmpl='azext_usersfunctions_beta.vendored_sdks.usersfunctions.operations._users_calendar_calendar_view_calendar_operations#UsersCalendarCalendarViewCalendarOperations.{}',
        client_factory=cf_user_calendar_calendar_view_calendar,
    )
    with self.command_group(
        'usersfunctions user-calendar-calendar-view-calendar', usersfunctions_beta_user_calendar_calendar_view_calendar
    ) as g:
        g.custom_command(
            'allowed-calendar-sharing-role',
            'usersfunctions_user_calendar_calendar_view_calendar_allowed_calendar_sharing_role',
        )

    from azext_usersfunctions_beta.generated._client_factory import cf_user_calendar_calendar_view_exception_occurrence

    usersfunctions_beta_user_calendar_calendar_view_exception_occurrence = CliCommandType(
        operations_tmpl='azext_usersfunctions_beta.vendored_sdks.usersfunctions.operations._users_calendar_calendar_view_exception_occurrences_operations#UsersCalendarCalendarViewExceptionOccurrencesOperations.{}',
        client_factory=cf_user_calendar_calendar_view_exception_occurrence,
    )
    with self.command_group(
        'usersfunctions user-calendar-calendar-view-exception-occurrence',
        usersfunctions_beta_user_calendar_calendar_view_exception_occurrence,
    ) as g:
        g.custom_command('delta', 'usersfunctions_user_calendar_calendar_view_exception_occurrence_delta')

    from azext_usersfunctions_beta.generated._client_factory import cf_user_calendar_calendar_view_instance

    usersfunctions_beta_user_calendar_calendar_view_instance = CliCommandType(
        operations_tmpl='azext_usersfunctions_beta.vendored_sdks.usersfunctions.operations._users_calendar_calendar_view_instances_operations#UsersCalendarCalendarViewInstancesOperations.{}',
        client_factory=cf_user_calendar_calendar_view_instance,
    )
    with self.command_group(
        'usersfunctions user-calendar-calendar-view-instance', usersfunctions_beta_user_calendar_calendar_view_instance
    ) as g:
        g.custom_command('delta', 'usersfunctions_user_calendar_calendar_view_instance_delta')

    from azext_usersfunctions_beta.generated._client_factory import cf_user_calendar_calendar_view

    usersfunctions_beta_user_calendar_calendar_view = CliCommandType(
        operations_tmpl='azext_usersfunctions_beta.vendored_sdks.usersfunctions.operations._users_calendar_calendar_view_operations#UsersCalendarCalendarViewOperations.{}',
        client_factory=cf_user_calendar_calendar_view,
    )
    with self.command_group(
        'usersfunctions user-calendar-calendar-view', usersfunctions_beta_user_calendar_calendar_view
    ) as g:
        g.custom_command('delta', 'usersfunctions_user_calendar_calendar_view_delta')

    from azext_usersfunctions_beta.generated._client_factory import cf_user_calendar_event_calendar

    usersfunctions_beta_user_calendar_event_calendar = CliCommandType(
        operations_tmpl='azext_usersfunctions_beta.vendored_sdks.usersfunctions.operations._users_calendar_events_calendar_operations#UsersCalendarEventsCalendarOperations.{}',
        client_factory=cf_user_calendar_event_calendar,
    )
    with self.command_group(
        'usersfunctions user-calendar-event-calendar', usersfunctions_beta_user_calendar_event_calendar
    ) as g:
        g.custom_command(
            'allowed-calendar-sharing-role', 'usersfunctions_user_calendar_event_calendar_allowed_calendar_sharing_role'
        )

    from azext_usersfunctions_beta.generated._client_factory import cf_user_calendar_event_exception_occurrence

    usersfunctions_beta_user_calendar_event_exception_occurrence = CliCommandType(
        operations_tmpl='azext_usersfunctions_beta.vendored_sdks.usersfunctions.operations._users_calendar_events_exception_occurrences_operations#UsersCalendarEventsExceptionOccurrencesOperations.{}',
        client_factory=cf_user_calendar_event_exception_occurrence,
    )
    with self.command_group(
        'usersfunctions user-calendar-event-exception-occurrence',
        usersfunctions_beta_user_calendar_event_exception_occurrence,
    ) as g:
        g.custom_command('delta', 'usersfunctions_user_calendar_event_exception_occurrence_delta')

    from azext_usersfunctions_beta.generated._client_factory import cf_user_calendar_event_instance

    usersfunctions_beta_user_calendar_event_instance = CliCommandType(
        operations_tmpl='azext_usersfunctions_beta.vendored_sdks.usersfunctions.operations._users_calendar_events_instances_operations#UsersCalendarEventsInstancesOperations.{}',
        client_factory=cf_user_calendar_event_instance,
    )
    with self.command_group(
        'usersfunctions user-calendar-event-instance', usersfunctions_beta_user_calendar_event_instance
    ) as g:
        g.custom_command('delta', 'usersfunctions_user_calendar_event_instance_delta')

    from azext_usersfunctions_beta.generated._client_factory import cf_user_calendar_event

    usersfunctions_beta_user_calendar_event = CliCommandType(
        operations_tmpl='azext_usersfunctions_beta.vendored_sdks.usersfunctions.operations._users_calendar_events_operations#UsersCalendarEventsOperations.{}',
        client_factory=cf_user_calendar_event,
    )
    with self.command_group('usersfunctions user-calendar-event', usersfunctions_beta_user_calendar_event) as g:
        g.custom_command('delta', 'usersfunctions_user_calendar_event_delta')

    from azext_usersfunctions_beta.generated._client_factory import cf_user_calendar

    usersfunctions_beta_user_calendar = CliCommandType(
        operations_tmpl='azext_usersfunctions_beta.vendored_sdks.usersfunctions.operations._users_calendar_operations#UsersCalendarOperations.{}',
        client_factory=cf_user_calendar,
    )
    with self.command_group('usersfunctions user-calendar', usersfunctions_beta_user_calendar) as g:
        g.custom_command('allowed-calendar-sharing-role', 'usersfunctions_user_calendar_allowed_calendar_sharing_role')

    from azext_usersfunctions_beta.generated._client_factory import (
        cf_user_calendar_group_calendar_calendar_view_calendar,
    )

    usersfunctions_beta_user_calendar_group_calendar_calendar_view_calendar = CliCommandType(
        operations_tmpl='azext_usersfunctions_beta.vendored_sdks.usersfunctions.operations._users_calendar_groups_calendars_calendar_view_calendar_operations#UsersCalendarGroupsCalendarsCalendarViewCalendarOperations.{}',
        client_factory=cf_user_calendar_group_calendar_calendar_view_calendar,
    )
    with self.command_group(
        'usersfunctions user-calendar-group-calendar-calendar-view-calendar',
        usersfunctions_beta_user_calendar_group_calendar_calendar_view_calendar,
    ) as g:
        g.custom_command(
            'allowed-calendar-sharing-role',
            'usersfunctions_user_calendar_group_calendar_calendar_view_calendar_allowed_calendar_sharing_role',
        )

    from azext_usersfunctions_beta.generated._client_factory import (
        cf_user_calendar_group_calendar_calendar_view_exception_occurrence,
    )

    usersfunctions_beta_user_calendar_group_calendar_calendar_view_exception_occurrence = CliCommandType(
        operations_tmpl='azext_usersfunctions_beta.vendored_sdks.usersfunctions.operations._users_calendar_groups_calendars_calendar_view_exception_occurrences_operations#UsersCalendarGroupsCalendarsCalendarViewExceptionOccurrencesOperations.{}',
        client_factory=cf_user_calendar_group_calendar_calendar_view_exception_occurrence,
    )
    with self.command_group(
        'usersfunctions user-calendar-group-calendar-calendar-view-exception-occurrence',
        usersfunctions_beta_user_calendar_group_calendar_calendar_view_exception_occurrence,
    ) as g:
        g.custom_command(
            'delta', 'usersfunctions_user_calendar_group_calendar_calendar_view_exception_occurrence_delta'
        )

    from azext_usersfunctions_beta.generated._client_factory import (
        cf_user_calendar_group_calendar_calendar_view_instance,
    )

    usersfunctions_beta_user_calendar_group_calendar_calendar_view_instance = CliCommandType(
        operations_tmpl='azext_usersfunctions_beta.vendored_sdks.usersfunctions.operations._users_calendar_groups_calendars_calendar_view_instances_operations#UsersCalendarGroupsCalendarsCalendarViewInstancesOperations.{}',
        client_factory=cf_user_calendar_group_calendar_calendar_view_instance,
    )
    with self.command_group(
        'usersfunctions user-calendar-group-calendar-calendar-view-instance',
        usersfunctions_beta_user_calendar_group_calendar_calendar_view_instance,
    ) as g:
        g.custom_command('delta', 'usersfunctions_user_calendar_group_calendar_calendar_view_instance_delta')

    from azext_usersfunctions_beta.generated._client_factory import cf_user_calendar_group_calendar_calendar_view

    usersfunctions_beta_user_calendar_group_calendar_calendar_view = CliCommandType(
        operations_tmpl='azext_usersfunctions_beta.vendored_sdks.usersfunctions.operations._users_calendar_groups_calendars_calendar_view_operations#UsersCalendarGroupsCalendarsCalendarViewOperations.{}',
        client_factory=cf_user_calendar_group_calendar_calendar_view,
    )
    with self.command_group(
        'usersfunctions user-calendar-group-calendar-calendar-view',
        usersfunctions_beta_user_calendar_group_calendar_calendar_view,
    ) as g:
        g.custom_command('delta', 'usersfunctions_user_calendar_group_calendar_calendar_view_delta')

    from azext_usersfunctions_beta.generated._client_factory import cf_user_calendar_group_calendar_event_calendar

    usersfunctions_beta_user_calendar_group_calendar_event_calendar = CliCommandType(
        operations_tmpl='azext_usersfunctions_beta.vendored_sdks.usersfunctions.operations._users_calendar_groups_calendars_events_calendar_operations#UsersCalendarGroupsCalendarsEventsCalendarOperations.{}',
        client_factory=cf_user_calendar_group_calendar_event_calendar,
    )
    with self.command_group(
        'usersfunctions user-calendar-group-calendar-event-calendar',
        usersfunctions_beta_user_calendar_group_calendar_event_calendar,
    ) as g:
        g.custom_command(
            'allowed-calendar-sharing-role',
            'usersfunctions_user_calendar_group_calendar_event_calendar_allowed_calendar_sharing_role',
        )

    from azext_usersfunctions_beta.generated._client_factory import (
        cf_user_calendar_group_calendar_event_exception_occurrence,
    )

    usersfunctions_beta_user_calendar_group_calendar_event_exception_occurrence = CliCommandType(
        operations_tmpl='azext_usersfunctions_beta.vendored_sdks.usersfunctions.operations._users_calendar_groups_calendars_events_exception_occurrences_operations#UsersCalendarGroupsCalendarsEventsExceptionOccurrencesOperations.{}',
        client_factory=cf_user_calendar_group_calendar_event_exception_occurrence,
    )
    with self.command_group(
        'usersfunctions user-calendar-group-calendar-event-exception-occurrence',
        usersfunctions_beta_user_calendar_group_calendar_event_exception_occurrence,
    ) as g:
        g.custom_command('delta', 'usersfunctions_user_calendar_group_calendar_event_exception_occurrence_delta')

    from azext_usersfunctions_beta.generated._client_factory import cf_user_calendar_group_calendar_event_instance

    usersfunctions_beta_user_calendar_group_calendar_event_instance = CliCommandType(
        operations_tmpl='azext_usersfunctions_beta.vendored_sdks.usersfunctions.operations._users_calendar_groups_calendars_events_instances_operations#UsersCalendarGroupsCalendarsEventsInstancesOperations.{}',
        client_factory=cf_user_calendar_group_calendar_event_instance,
    )
    with self.command_group(
        'usersfunctions user-calendar-group-calendar-event-instance',
        usersfunctions_beta_user_calendar_group_calendar_event_instance,
    ) as g:
        g.custom_command('delta', 'usersfunctions_user_calendar_group_calendar_event_instance_delta')

    from azext_usersfunctions_beta.generated._client_factory import cf_user_calendar_group_calendar_event

    usersfunctions_beta_user_calendar_group_calendar_event = CliCommandType(
        operations_tmpl='azext_usersfunctions_beta.vendored_sdks.usersfunctions.operations._users_calendar_groups_calendars_events_operations#UsersCalendarGroupsCalendarsEventsOperations.{}',
        client_factory=cf_user_calendar_group_calendar_event,
    )
    with self.command_group(
        'usersfunctions user-calendar-group-calendar-event', usersfunctions_beta_user_calendar_group_calendar_event
    ) as g:
        g.custom_command('delta', 'usersfunctions_user_calendar_group_calendar_event_delta')

    from azext_usersfunctions_beta.generated._client_factory import cf_user_calendar_group_calendar

    usersfunctions_beta_user_calendar_group_calendar = CliCommandType(
        operations_tmpl='azext_usersfunctions_beta.vendored_sdks.usersfunctions.operations._users_calendar_groups_calendars_operations#UsersCalendarGroupsCalendarsOperations.{}',
        client_factory=cf_user_calendar_group_calendar,
    )
    with self.command_group(
        'usersfunctions user-calendar-group-calendar', usersfunctions_beta_user_calendar_group_calendar
    ) as g:
        g.custom_command(
            'allowed-calendar-sharing-role', 'usersfunctions_user_calendar_group_calendar_allowed_calendar_sharing_role'
        )

    from azext_usersfunctions_beta.generated._client_factory import cf_user_calendar_calendar_view_calendar

    usersfunctions_beta_user_calendar_calendar_view_calendar = CliCommandType(
        operations_tmpl='azext_usersfunctions_beta.vendored_sdks.usersfunctions.operations._users_calendars_calendar_view_calendar_operations#UsersCalendarsCalendarViewCalendarOperations.{}',
        client_factory=cf_user_calendar_calendar_view_calendar,
    )
    with self.command_group(
        'usersfunctions user-calendar-calendar-view-calendar', usersfunctions_beta_user_calendar_calendar_view_calendar
    ) as g:
        g.custom_command(
            'allowed-calendar-sharing-role',
            'usersfunctions_user_calendar_calendar_view_calendar_allowed_calendar_sharing_role',
        )

    from azext_usersfunctions_beta.generated._client_factory import cf_user_calendar_calendar_view_exception_occurrence

    usersfunctions_beta_user_calendar_calendar_view_exception_occurrence = CliCommandType(
        operations_tmpl='azext_usersfunctions_beta.vendored_sdks.usersfunctions.operations._users_calendars_calendar_view_exception_occurrences_operations#UsersCalendarsCalendarViewExceptionOccurrencesOperations.{}',
        client_factory=cf_user_calendar_calendar_view_exception_occurrence,
    )
    with self.command_group(
        'usersfunctions user-calendar-calendar-view-exception-occurrence',
        usersfunctions_beta_user_calendar_calendar_view_exception_occurrence,
    ) as g:
        g.custom_command('delta', 'usersfunctions_user_calendar_calendar_view_exception_occurrence_delta')

    from azext_usersfunctions_beta.generated._client_factory import cf_user_calendar_calendar_view_instance

    usersfunctions_beta_user_calendar_calendar_view_instance = CliCommandType(
        operations_tmpl='azext_usersfunctions_beta.vendored_sdks.usersfunctions.operations._users_calendars_calendar_view_instances_operations#UsersCalendarsCalendarViewInstancesOperations.{}',
        client_factory=cf_user_calendar_calendar_view_instance,
    )
    with self.command_group(
        'usersfunctions user-calendar-calendar-view-instance', usersfunctions_beta_user_calendar_calendar_view_instance
    ) as g:
        g.custom_command('delta', 'usersfunctions_user_calendar_calendar_view_instance_delta')

    from azext_usersfunctions_beta.generated._client_factory import cf_user_calendar_calendar_view

    usersfunctions_beta_user_calendar_calendar_view = CliCommandType(
        operations_tmpl='azext_usersfunctions_beta.vendored_sdks.usersfunctions.operations._users_calendars_calendar_view_operations#UsersCalendarsCalendarViewOperations.{}',
        client_factory=cf_user_calendar_calendar_view,
    )
    with self.command_group(
        'usersfunctions user-calendar-calendar-view', usersfunctions_beta_user_calendar_calendar_view
    ) as g:
        g.custom_command('delta', 'usersfunctions_user_calendar_calendar_view_delta')

    from azext_usersfunctions_beta.generated._client_factory import cf_user_calendar_event_calendar

    usersfunctions_beta_user_calendar_event_calendar = CliCommandType(
        operations_tmpl='azext_usersfunctions_beta.vendored_sdks.usersfunctions.operations._users_calendars_events_calendar_operations#UsersCalendarsEventsCalendarOperations.{}',
        client_factory=cf_user_calendar_event_calendar,
    )
    with self.command_group(
        'usersfunctions user-calendar-event-calendar', usersfunctions_beta_user_calendar_event_calendar
    ) as g:
        g.custom_command(
            'allowed-calendar-sharing-role', 'usersfunctions_user_calendar_event_calendar_allowed_calendar_sharing_role'
        )

    from azext_usersfunctions_beta.generated._client_factory import cf_user_calendar_event_exception_occurrence

    usersfunctions_beta_user_calendar_event_exception_occurrence = CliCommandType(
        operations_tmpl='azext_usersfunctions_beta.vendored_sdks.usersfunctions.operations._users_calendars_events_exception_occurrences_operations#UsersCalendarsEventsExceptionOccurrencesOperations.{}',
        client_factory=cf_user_calendar_event_exception_occurrence,
    )
    with self.command_group(
        'usersfunctions user-calendar-event-exception-occurrence',
        usersfunctions_beta_user_calendar_event_exception_occurrence,
    ) as g:
        g.custom_command('delta', 'usersfunctions_user_calendar_event_exception_occurrence_delta')

    from azext_usersfunctions_beta.generated._client_factory import cf_user_calendar_event_instance

    usersfunctions_beta_user_calendar_event_instance = CliCommandType(
        operations_tmpl='azext_usersfunctions_beta.vendored_sdks.usersfunctions.operations._users_calendars_events_instances_operations#UsersCalendarsEventsInstancesOperations.{}',
        client_factory=cf_user_calendar_event_instance,
    )
    with self.command_group(
        'usersfunctions user-calendar-event-instance', usersfunctions_beta_user_calendar_event_instance
    ) as g:
        g.custom_command('delta', 'usersfunctions_user_calendar_event_instance_delta')

    from azext_usersfunctions_beta.generated._client_factory import cf_user_calendar_event

    usersfunctions_beta_user_calendar_event = CliCommandType(
        operations_tmpl='azext_usersfunctions_beta.vendored_sdks.usersfunctions.operations._users_calendars_events_operations#UsersCalendarsEventsOperations.{}',
        client_factory=cf_user_calendar_event,
    )
    with self.command_group('usersfunctions user-calendar-event', usersfunctions_beta_user_calendar_event) as g:
        g.custom_command('delta', 'usersfunctions_user_calendar_event_delta')

    from azext_usersfunctions_beta.generated._client_factory import cf_user_calendar

    usersfunctions_beta_user_calendar = CliCommandType(
        operations_tmpl='azext_usersfunctions_beta.vendored_sdks.usersfunctions.operations._users_calendars_operations#UsersCalendarsOperations.{}',
        client_factory=cf_user_calendar,
    )
    with self.command_group('usersfunctions user-calendar', usersfunctions_beta_user_calendar) as g:
        g.custom_command('allowed-calendar-sharing-role', 'usersfunctions_user_calendar_allowed_calendar_sharing_role')

    from azext_usersfunctions_beta.generated._client_factory import cf_user_calendar_view_calendar_calendar_view

    usersfunctions_beta_user_calendar_view_calendar_calendar_view = CliCommandType(
        operations_tmpl='azext_usersfunctions_beta.vendored_sdks.usersfunctions.operations._users_calendar_view_calendar_calendar_view_operations#UsersCalendarViewCalendarCalendarViewOperations.{}',
        client_factory=cf_user_calendar_view_calendar_calendar_view,
    )
    with self.command_group(
        'usersfunctions user-calendar-view-calendar-calendar-view',
        usersfunctions_beta_user_calendar_view_calendar_calendar_view,
    ) as g:
        g.custom_command('delta', 'usersfunctions_user_calendar_view_calendar_calendar_view_delta')

    from azext_usersfunctions_beta.generated._client_factory import cf_user_calendar_view_calendar_event

    usersfunctions_beta_user_calendar_view_calendar_event = CliCommandType(
        operations_tmpl='azext_usersfunctions_beta.vendored_sdks.usersfunctions.operations._users_calendar_view_calendar_events_operations#UsersCalendarViewCalendarEventsOperations.{}',
        client_factory=cf_user_calendar_view_calendar_event,
    )
    with self.command_group(
        'usersfunctions user-calendar-view-calendar-event', usersfunctions_beta_user_calendar_view_calendar_event
    ) as g:
        g.custom_command('delta', 'usersfunctions_user_calendar_view_calendar_event_delta')

    from azext_usersfunctions_beta.generated._client_factory import cf_user_calendar_view_calendar

    usersfunctions_beta_user_calendar_view_calendar = CliCommandType(
        operations_tmpl='azext_usersfunctions_beta.vendored_sdks.usersfunctions.operations._users_calendar_view_calendar_operations#UsersCalendarViewCalendarOperations.{}',
        client_factory=cf_user_calendar_view_calendar,
    )
    with self.command_group(
        'usersfunctions user-calendar-view-calendar', usersfunctions_beta_user_calendar_view_calendar
    ) as g:
        g.custom_command(
            'allowed-calendar-sharing-role', 'usersfunctions_user_calendar_view_calendar_allowed_calendar_sharing_role'
        )

    from azext_usersfunctions_beta.generated._client_factory import cf_user_calendar_view_exception_occurrence

    usersfunctions_beta_user_calendar_view_exception_occurrence = CliCommandType(
        operations_tmpl='azext_usersfunctions_beta.vendored_sdks.usersfunctions.operations._users_calendar_view_exception_occurrences_operations#UsersCalendarViewExceptionOccurrencesOperations.{}',
        client_factory=cf_user_calendar_view_exception_occurrence,
    )
    with self.command_group(
        'usersfunctions user-calendar-view-exception-occurrence',
        usersfunctions_beta_user_calendar_view_exception_occurrence,
    ) as g:
        g.custom_command('delta', 'usersfunctions_user_calendar_view_exception_occurrence_delta')

    from azext_usersfunctions_beta.generated._client_factory import cf_user_calendar_view_instance

    usersfunctions_beta_user_calendar_view_instance = CliCommandType(
        operations_tmpl='azext_usersfunctions_beta.vendored_sdks.usersfunctions.operations._users_calendar_view_instances_operations#UsersCalendarViewInstancesOperations.{}',
        client_factory=cf_user_calendar_view_instance,
    )
    with self.command_group(
        'usersfunctions user-calendar-view-instance', usersfunctions_beta_user_calendar_view_instance
    ) as g:
        g.custom_command('delta', 'usersfunctions_user_calendar_view_instance_delta')

    from azext_usersfunctions_beta.generated._client_factory import cf_user_calendar_view

    usersfunctions_beta_user_calendar_view = CliCommandType(
        operations_tmpl='azext_usersfunctions_beta.vendored_sdks.usersfunctions.operations._users_calendar_view_operations#UsersCalendarViewOperations.{}',
        client_factory=cf_user_calendar_view,
    )
    with self.command_group('usersfunctions user-calendar-view', usersfunctions_beta_user_calendar_view) as g:
        g.custom_command('delta', 'usersfunctions_user_calendar_view_delta')

    from azext_usersfunctions_beta.generated._client_factory import cf_user_contact_folder_child_folder

    usersfunctions_beta_user_contact_folder_child_folder = CliCommandType(
        operations_tmpl='azext_usersfunctions_beta.vendored_sdks.usersfunctions.operations._users_contact_folders_child_folders_operations#UsersContactFoldersChildFoldersOperations.{}',
        client_factory=cf_user_contact_folder_child_folder,
    )
    with self.command_group(
        'usersfunctions user-contact-folder-child-folder', usersfunctions_beta_user_contact_folder_child_folder
    ) as g:
        g.custom_command('delta', 'usersfunctions_user_contact_folder_child_folder_delta')

    from azext_usersfunctions_beta.generated._client_factory import cf_user_contact_folder_contact

    usersfunctions_beta_user_contact_folder_contact = CliCommandType(
        operations_tmpl='azext_usersfunctions_beta.vendored_sdks.usersfunctions.operations._users_contact_folders_contacts_operations#UsersContactFoldersContactsOperations.{}',
        client_factory=cf_user_contact_folder_contact,
    )
    with self.command_group(
        'usersfunctions user-contact-folder-contact', usersfunctions_beta_user_contact_folder_contact
    ) as g:
        g.custom_command('delta', 'usersfunctions_user_contact_folder_contact_delta')

    from azext_usersfunctions_beta.generated._client_factory import cf_user_contact_folder

    usersfunctions_beta_user_contact_folder = CliCommandType(
        operations_tmpl='azext_usersfunctions_beta.vendored_sdks.usersfunctions.operations._users_contact_folders_operations#UsersContactFoldersOperations.{}',
        client_factory=cf_user_contact_folder,
    )
    with self.command_group('usersfunctions user-contact-folder', usersfunctions_beta_user_contact_folder) as g:
        g.custom_command('delta', 'usersfunctions_user_contact_folder_delta')

    from azext_usersfunctions_beta.generated._client_factory import cf_user_contact

    usersfunctions_beta_user_contact = CliCommandType(
        operations_tmpl='azext_usersfunctions_beta.vendored_sdks.usersfunctions.operations._users_contacts_operations#UsersContactsOperations.{}',
        client_factory=cf_user_contact,
    )
    with self.command_group('usersfunctions user-contact', usersfunctions_beta_user_contact) as g:
        g.custom_command('delta', 'usersfunctions_user_contact_delta')

    from azext_usersfunctions_beta.generated._client_factory import cf_user_event_calendar_calendar_view

    usersfunctions_beta_user_event_calendar_calendar_view = CliCommandType(
        operations_tmpl='azext_usersfunctions_beta.vendored_sdks.usersfunctions.operations._users_events_calendar_calendar_view_operations#UsersEventsCalendarCalendarViewOperations.{}',
        client_factory=cf_user_event_calendar_calendar_view,
    )
    with self.command_group(
        'usersfunctions user-event-calendar-calendar-view', usersfunctions_beta_user_event_calendar_calendar_view
    ) as g:
        g.custom_command('delta', 'usersfunctions_user_event_calendar_calendar_view_delta')

    from azext_usersfunctions_beta.generated._client_factory import cf_user_event_calendar_event

    usersfunctions_beta_user_event_calendar_event = CliCommandType(
        operations_tmpl='azext_usersfunctions_beta.vendored_sdks.usersfunctions.operations._users_events_calendar_events_operations#UsersEventsCalendarEventsOperations.{}',
        client_factory=cf_user_event_calendar_event,
    )
    with self.command_group(
        'usersfunctions user-event-calendar-event', usersfunctions_beta_user_event_calendar_event
    ) as g:
        g.custom_command('delta', 'usersfunctions_user_event_calendar_event_delta')

    from azext_usersfunctions_beta.generated._client_factory import cf_user_event_calendar

    usersfunctions_beta_user_event_calendar = CliCommandType(
        operations_tmpl='azext_usersfunctions_beta.vendored_sdks.usersfunctions.operations._users_events_calendar_operations#UsersEventsCalendarOperations.{}',
        client_factory=cf_user_event_calendar,
    )
    with self.command_group('usersfunctions user-event-calendar', usersfunctions_beta_user_event_calendar) as g:
        g.custom_command(
            'allowed-calendar-sharing-role', 'usersfunctions_user_event_calendar_allowed_calendar_sharing_role'
        )

    from azext_usersfunctions_beta.generated._client_factory import cf_user_event_exception_occurrence

    usersfunctions_beta_user_event_exception_occurrence = CliCommandType(
        operations_tmpl='azext_usersfunctions_beta.vendored_sdks.usersfunctions.operations._users_events_exception_occurrences_operations#UsersEventsExceptionOccurrencesOperations.{}',
        client_factory=cf_user_event_exception_occurrence,
    )
    with self.command_group(
        'usersfunctions user-event-exception-occurrence', usersfunctions_beta_user_event_exception_occurrence
    ) as g:
        g.custom_command('delta', 'usersfunctions_user_event_exception_occurrence_delta')

    from azext_usersfunctions_beta.generated._client_factory import cf_user_event_instance

    usersfunctions_beta_user_event_instance = CliCommandType(
        operations_tmpl='azext_usersfunctions_beta.vendored_sdks.usersfunctions.operations._users_events_instances_operations#UsersEventsInstancesOperations.{}',
        client_factory=cf_user_event_instance,
    )
    with self.command_group('usersfunctions user-event-instance', usersfunctions_beta_user_event_instance) as g:
        g.custom_command('delta', 'usersfunctions_user_event_instance_delta')

    from azext_usersfunctions_beta.generated._client_factory import cf_user_event

    usersfunctions_beta_user_event = CliCommandType(
        operations_tmpl='azext_usersfunctions_beta.vendored_sdks.usersfunctions.operations._users_events_operations#UsersEventsOperations.{}',
        client_factory=cf_user_event,
    )
    with self.command_group('usersfunctions user-event', usersfunctions_beta_user_event) as g:
        g.custom_command('delta', 'usersfunctions_user_event_delta')

    from azext_usersfunctions_beta.generated._client_factory import cf_user_mail_folder_child_folder

    usersfunctions_beta_user_mail_folder_child_folder = CliCommandType(
        operations_tmpl='azext_usersfunctions_beta.vendored_sdks.usersfunctions.operations._users_mail_folders_child_folders_operations#UsersMailFoldersChildFoldersOperations.{}',
        client_factory=cf_user_mail_folder_child_folder,
    )
    with self.command_group(
        'usersfunctions user-mail-folder-child-folder', usersfunctions_beta_user_mail_folder_child_folder
    ) as g:
        g.custom_command('delta', 'usersfunctions_user_mail_folder_child_folder_delta')

    from azext_usersfunctions_beta.generated._client_factory import cf_user_mail_folder_message

    usersfunctions_beta_user_mail_folder_message = CliCommandType(
        operations_tmpl='azext_usersfunctions_beta.vendored_sdks.usersfunctions.operations._users_mail_folders_messages_operations#UsersMailFoldersMessagesOperations.{}',
        client_factory=cf_user_mail_folder_message,
    )
    with self.command_group(
        'usersfunctions user-mail-folder-message', usersfunctions_beta_user_mail_folder_message
    ) as g:
        g.custom_command('delta', 'usersfunctions_user_mail_folder_message_delta')

    from azext_usersfunctions_beta.generated._client_factory import cf_user_mail_folder

    usersfunctions_beta_user_mail_folder = CliCommandType(
        operations_tmpl='azext_usersfunctions_beta.vendored_sdks.usersfunctions.operations._users_mail_folders_operations#UsersMailFoldersOperations.{}',
        client_factory=cf_user_mail_folder,
    )
    with self.command_group('usersfunctions user-mail-folder', usersfunctions_beta_user_mail_folder) as g:
        g.custom_command('delta', 'usersfunctions_user_mail_folder_delta')

    from azext_usersfunctions_beta.generated._client_factory import cf_user_managed_app_registration

    usersfunctions_beta_user_managed_app_registration = CliCommandType(
        operations_tmpl='azext_usersfunctions_beta.vendored_sdks.usersfunctions.operations._users_managed_app_registrations_operations#UsersManagedAppRegistrationsOperations.{}',
        client_factory=cf_user_managed_app_registration,
    )
    with self.command_group(
        'usersfunctions user-managed-app-registration', usersfunctions_beta_user_managed_app_registration
    ) as g:
        g.custom_command(
            'show-user-id-with-flagged-app-registration',
            'usersfunctions_user_managed_app_registration_show_user_id_with_flagged_app_registration',
        )

    from azext_usersfunctions_beta.generated._client_factory import cf_user_managed_device

    usersfunctions_beta_user_managed_device = CliCommandType(
        operations_tmpl='azext_usersfunctions_beta.vendored_sdks.usersfunctions.operations._users_managed_devices_operations#UsersManagedDevicesOperations.{}',
        client_factory=cf_user_managed_device,
    )
    with self.command_group('usersfunctions user-managed-device', usersfunctions_beta_user_managed_device) as g:
        g.custom_command('show-file-vault-key', 'usersfunctions_user_managed_device_show_file_vault_key')
        g.custom_command('show-non-compliant-setting', 'usersfunctions_user_managed_device_show_non_compliant_setting')

    from azext_usersfunctions_beta.generated._client_factory import cf_user_message

    usersfunctions_beta_user_message = CliCommandType(
        operations_tmpl='azext_usersfunctions_beta.vendored_sdks.usersfunctions.operations._users_messages_operations#UsersMessagesOperations.{}',
        client_factory=cf_user_message,
    )
    with self.command_group('usersfunctions user-message', usersfunctions_beta_user_message) as g:
        g.custom_command('delta', 'usersfunctions_user_message_delta')

    from azext_usersfunctions_beta.generated._client_factory import cf_user

    usersfunctions_beta_user = CliCommandType(
        operations_tmpl=(
            'azext_usersfunctions_beta.vendored_sdks.usersfunctions.operations._users_operations#UsersOperations.{}'
        ),
        client_factory=cf_user,
    )
    with self.command_group('usersfunctions user', usersfunctions_beta_user) as g:
        g.custom_command('delta', 'usersfunctions_user_delta')
        g.custom_command(
            'export-device-and-app-management-data-d390',
            'usersfunctions_user_export_device_and_app_management_data_d390',
        )
        g.custom_command(
            'export-device-and-app-management-data623-c',
            'usersfunctions_user_export_device_and_app_management_data623_c',
        )
        g.custom_command('find-room-ac49', 'usersfunctions_user_find_room_ac49')
        g.custom_command('find-room-d266', 'usersfunctions_user_find_room_d266')
        g.custom_command('find-room-list', 'usersfunctions_user_find_room_list')
        g.custom_command('is-managed-app-user-blocked', 'usersfunctions_user_is_managed_app_user_blocked')
        g.custom_command('reminder-view', 'usersfunctions_user_reminder_view')
        g.custom_command(
            'show-effective-device-enrollment-configuration',
            'usersfunctions_user_show_effective_device_enrollment_configuration',
        )
        g.custom_command('show-logged-on-managed-device', 'usersfunctions_user_show_logged_on_managed_device')
        g.custom_command('show-managed-app-blocked-user', 'usersfunctions_user_show_managed_app_blocked_user')
        g.custom_command(
            'show-managed-app-diagnostic-statuses', 'usersfunctions_user_show_managed_app_diagnostic_statuses'
        )
        g.custom_command('show-managed-app-policy', 'usersfunctions_user_show_managed_app_policy')
        g.custom_command(
            'show-managed-device-with-app-failure', 'usersfunctions_user_show_managed_device_with_app_failure'
        )
        g.custom_command(
            'show-managed-device-with-failed-or-pending-app',
            'usersfunctions_user_show_managed_device_with_failed_or_pending_app',
        )

    from azext_usersfunctions_beta.generated._client_factory import cf_user_onenote_notebook_section_group_section_page

    usersfunctions_beta_user_onenote_notebook_section_group_section_page = CliCommandType(
        operations_tmpl='azext_usersfunctions_beta.vendored_sdks.usersfunctions.operations._users_onenote_notebooks_section_groups_sections_pages_operations#UsersOnenoteNotebooksSectionGroupsSectionsPagesOperations.{}',
        client_factory=cf_user_onenote_notebook_section_group_section_page,
    )
    with self.command_group(
        'usersfunctions user-onenote-notebook-section-group-section-page',
        usersfunctions_beta_user_onenote_notebook_section_group_section_page,
    ) as g:
        g.custom_command('preview', 'usersfunctions_user_onenote_notebook_section_group_section_page_preview')

    from azext_usersfunctions_beta.generated._client_factory import cf_user_onenote_notebook_section_page

    usersfunctions_beta_user_onenote_notebook_section_page = CliCommandType(
        operations_tmpl='azext_usersfunctions_beta.vendored_sdks.usersfunctions.operations._users_onenote_notebooks_sections_pages_operations#UsersOnenoteNotebooksSectionsPagesOperations.{}',
        client_factory=cf_user_onenote_notebook_section_page,
    )
    with self.command_group(
        'usersfunctions user-onenote-notebook-section-page', usersfunctions_beta_user_onenote_notebook_section_page
    ) as g:
        g.custom_command('preview', 'usersfunctions_user_onenote_notebook_section_page_preview')

    from azext_usersfunctions_beta.generated._client_factory import cf_user_onenote_notebook

    usersfunctions_beta_user_onenote_notebook = CliCommandType(
        operations_tmpl='azext_usersfunctions_beta.vendored_sdks.usersfunctions.operations._users_onenote_notebooks_operations#UsersOnenoteNotebooksOperations.{}',
        client_factory=cf_user_onenote_notebook,
    )
    with self.command_group('usersfunctions user-onenote-notebook', usersfunctions_beta_user_onenote_notebook) as g:
        g.custom_command('show-recent-notebook', 'usersfunctions_user_onenote_notebook_show_recent_notebook')

    from azext_usersfunctions_beta.generated._client_factory import cf_user_onenote_page

    usersfunctions_beta_user_onenote_page = CliCommandType(
        operations_tmpl='azext_usersfunctions_beta.vendored_sdks.usersfunctions.operations._users_onenote_pages_operations#UsersOnenotePagesOperations.{}',
        client_factory=cf_user_onenote_page,
    )
    with self.command_group('usersfunctions user-onenote-page', usersfunctions_beta_user_onenote_page) as g:
        g.custom_command('preview', 'usersfunctions_user_onenote_page_preview')

    from azext_usersfunctions_beta.generated._client_factory import (
        cf_user_onenote_page_parent_notebook_section_group_section_page,
    )

    usersfunctions_beta_user_onenote_page_parent_notebook_section_group_section_page = CliCommandType(
        operations_tmpl='azext_usersfunctions_beta.vendored_sdks.usersfunctions.operations._users_onenote_pages_parent_notebook_section_groups_sections_pages_operations#UsersOnenotePagesParentNotebookSectionGroupsSectionsPagesOperations.{}',
        client_factory=cf_user_onenote_page_parent_notebook_section_group_section_page,
    )
    with self.command_group(
        'usersfunctions user-onenote-page-parent-notebook-section-group-section-page',
        usersfunctions_beta_user_onenote_page_parent_notebook_section_group_section_page,
    ) as g:
        g.custom_command(
            'preview', 'usersfunctions_user_onenote_page_parent_notebook_section_group_section_page_preview'
        )

    from azext_usersfunctions_beta.generated._client_factory import cf_user_onenote_page_parent_notebook_section_page

    usersfunctions_beta_user_onenote_page_parent_notebook_section_page = CliCommandType(
        operations_tmpl='azext_usersfunctions_beta.vendored_sdks.usersfunctions.operations._users_onenote_pages_parent_notebook_sections_pages_operations#UsersOnenotePagesParentNotebookSectionsPagesOperations.{}',
        client_factory=cf_user_onenote_page_parent_notebook_section_page,
    )
    with self.command_group(
        'usersfunctions user-onenote-page-parent-notebook-section-page',
        usersfunctions_beta_user_onenote_page_parent_notebook_section_page,
    ) as g:
        g.custom_command('preview', 'usersfunctions_user_onenote_page_parent_notebook_section_page_preview')

    from azext_usersfunctions_beta.generated._client_factory import cf_user_onenote_page_parent_section_page

    usersfunctions_beta_user_onenote_page_parent_section_page = CliCommandType(
        operations_tmpl='azext_usersfunctions_beta.vendored_sdks.usersfunctions.operations._users_onenote_pages_parent_section_pages_operations#UsersOnenotePagesParentSectionPagesOperations.{}',
        client_factory=cf_user_onenote_page_parent_section_page,
    )
    with self.command_group(
        'usersfunctions user-onenote-page-parent-section-page',
        usersfunctions_beta_user_onenote_page_parent_section_page,
    ) as g:
        g.custom_command('preview', 'usersfunctions_user_onenote_page_parent_section_page_preview')

    from azext_usersfunctions_beta.generated._client_factory import (
        cf_user_onenote_section_group_parent_notebook_section_page,
    )

    usersfunctions_beta_user_onenote_section_group_parent_notebook_section_page = CliCommandType(
        operations_tmpl='azext_usersfunctions_beta.vendored_sdks.usersfunctions.operations._users_onenote_section_groups_parent_notebook_sections_pages_operations#UsersOnenoteSectionGroupsParentNotebookSectionsPagesOperations.{}',
        client_factory=cf_user_onenote_section_group_parent_notebook_section_page,
    )
    with self.command_group(
        'usersfunctions user-onenote-section-group-parent-notebook-section-page',
        usersfunctions_beta_user_onenote_section_group_parent_notebook_section_page,
    ) as g:
        g.custom_command('preview', 'usersfunctions_user_onenote_section_group_parent_notebook_section_page_preview')

    from azext_usersfunctions_beta.generated._client_factory import cf_user_onenote_section_group_section_page

    usersfunctions_beta_user_onenote_section_group_section_page = CliCommandType(
        operations_tmpl='azext_usersfunctions_beta.vendored_sdks.usersfunctions.operations._users_onenote_section_groups_sections_pages_operations#UsersOnenoteSectionGroupsSectionsPagesOperations.{}',
        client_factory=cf_user_onenote_section_group_section_page,
    )
    with self.command_group(
        'usersfunctions user-onenote-section-group-section-page',
        usersfunctions_beta_user_onenote_section_group_section_page,
    ) as g:
        g.custom_command('preview', 'usersfunctions_user_onenote_section_group_section_page_preview')

    from azext_usersfunctions_beta.generated._client_factory import cf_user_onenote_section_page

    usersfunctions_beta_user_onenote_section_page = CliCommandType(
        operations_tmpl='azext_usersfunctions_beta.vendored_sdks.usersfunctions.operations._users_onenote_sections_pages_operations#UsersOnenoteSectionsPagesOperations.{}',
        client_factory=cf_user_onenote_section_page,
    )
    with self.command_group(
        'usersfunctions user-onenote-section-page', usersfunctions_beta_user_onenote_section_page
    ) as g:
        g.custom_command('preview', 'usersfunctions_user_onenote_section_page_preview')

    from azext_usersfunctions_beta.generated._client_factory import cf_user_outlook

    usersfunctions_beta_user_outlook = CliCommandType(
        operations_tmpl='azext_usersfunctions_beta.vendored_sdks.usersfunctions.operations._users_outlook_operations#UsersOutlookOperations.{}',
        client_factory=cf_user_outlook,
    )
    with self.command_group('usersfunctions user-outlook', usersfunctions_beta_user_outlook) as g:
        g.custom_command('supported-language', 'usersfunctions_user_outlook_supported_language')
        g.custom_command('supported-time-zone-ee48', 'usersfunctions_user_outlook_supported_time_zone_ee48')
        g.custom_command('supported-time-zones51-c6', 'usersfunctions_user_outlook_supported_time_zones51_c6')

    from azext_usersfunctions_beta.generated._client_factory import cf_user_planner_all

    usersfunctions_beta_user_planner_all = CliCommandType(
        operations_tmpl='azext_usersfunctions_beta.vendored_sdks.usersfunctions.operations._users_planner_all_operations#UsersPlannerAllOperations.{}',
        client_factory=cf_user_planner_all,
    )
    with self.command_group('usersfunctions user-planner-all', usersfunctions_beta_user_planner_all) as g:
        g.custom_command('delta', 'usersfunctions_user_planner_all_delta')

    from azext_usersfunctions_beta.generated._client_factory import cf_user_todo_list_task

    usersfunctions_beta_user_todo_list_task = CliCommandType(
        operations_tmpl='azext_usersfunctions_beta.vendored_sdks.usersfunctions.operations._users_todo_lists_tasks_operations#UsersTodoListsTasksOperations.{}',
        client_factory=cf_user_todo_list_task,
    )
    with self.command_group('usersfunctions user-todo-list-task', usersfunctions_beta_user_todo_list_task) as g:
        g.custom_command('delta', 'usersfunctions_user_todo_list_task_delta')

    from azext_usersfunctions_beta.generated._client_factory import cf_user_todo_list

    usersfunctions_beta_user_todo_list = CliCommandType(
        operations_tmpl='azext_usersfunctions_beta.vendored_sdks.usersfunctions.operations._users_todo_lists_operations#UsersTodoListsOperations.{}',
        client_factory=cf_user_todo_list,
    )
    with self.command_group('usersfunctions user-todo-list', usersfunctions_beta_user_todo_list) as g:
        g.custom_command('delta', 'usersfunctions_user_todo_list_delta')

    with self.command_group('usersfunctions_beta', is_experimental=True):
        pass
