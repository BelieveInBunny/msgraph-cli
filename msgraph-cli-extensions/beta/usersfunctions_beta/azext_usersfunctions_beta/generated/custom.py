# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=too-many-lines


def usersfunctions_user_activity_recent(client,
                                        user_id):
    return client.recent(user_id=user_id)


def usersfunctions_user_calendar_calendar_view_calendar_allowed_calendar_sharing_role(client,
                                                                                      user_id,
                                                                                      event_id,
                                                                                      user):
    return client.allowed_calendar_sharing_role(user_id=user_id,
                                                event_id=event_id,
                                                user=user)


def usersfunctions_user_calendar_calendar_view_exception_occurrence_delta(client,
                                                                          user_id,
                                                                          event_id):
    return client.delta(user_id=user_id,
                        event_id=event_id)


def usersfunctions_user_calendar_calendar_view_instance_delta(client,
                                                              user_id,
                                                              event_id):
    return client.delta(user_id=user_id,
                        event_id=event_id)


def usersfunctions_user_calendar_calendar_view_delta(client,
                                                     user_id):
    return client.delta(user_id=user_id)


def usersfunctions_user_calendar_event_calendar_allowed_calendar_sharing_role(client,
                                                                              user_id,
                                                                              event_id,
                                                                              user):
    return client.allowed_calendar_sharing_role(user_id=user_id,
                                                event_id=event_id,
                                                user=user)


def usersfunctions_user_calendar_event_exception_occurrence_delta(client,
                                                                  user_id,
                                                                  event_id):
    return client.delta(user_id=user_id,
                        event_id=event_id)


def usersfunctions_user_calendar_event_instance_delta(client,
                                                      user_id,
                                                      event_id):
    return client.delta(user_id=user_id,
                        event_id=event_id)


def usersfunctions_user_calendar_event_delta(client,
                                             user_id):
    return client.delta(user_id=user_id)


def usersfunctions_user_calendar_allowed_calendar_sharing_role(client,
                                                               user_id,
                                                               user):
    return client.allowed_calendar_sharing_role(user_id=user_id,
                                                user=user)


def usersfunctions_user_calendar_group_calendar_calendar_view_calendar_allowed_calendar_sharing_role(client,
                                                                                                     user_id,
                                                                                                     calendar_group_id,
                                                                                                     calendar_id,
                                                                                                     event_id,
                                                                                                     user):
    return client.allowed_calendar_sharing_role(user_id=user_id,
                                                calendar_group_id=calendar_group_id,
                                                calendar_id=calendar_id,
                                                event_id=event_id,
                                                user=user)


def usersfunctions_user_calendar_group_calendar_calendar_view_exception_occurrence_delta(client,
                                                                                         user_id,
                                                                                         calendar_group_id,
                                                                                         calendar_id,
                                                                                         event_id):
    return client.delta(user_id=user_id,
                        calendar_group_id=calendar_group_id,
                        calendar_id=calendar_id,
                        event_id=event_id)


def usersfunctions_user_calendar_group_calendar_calendar_view_instance_delta(client,
                                                                             user_id,
                                                                             calendar_group_id,
                                                                             calendar_id,
                                                                             event_id):
    return client.delta(user_id=user_id,
                        calendar_group_id=calendar_group_id,
                        calendar_id=calendar_id,
                        event_id=event_id)


def usersfunctions_user_calendar_group_calendar_calendar_view_delta(client,
                                                                    user_id,
                                                                    calendar_group_id,
                                                                    calendar_id):
    return client.delta(user_id=user_id,
                        calendar_group_id=calendar_group_id,
                        calendar_id=calendar_id)


def usersfunctions_user_calendar_group_calendar_event_calendar_allowed_calendar_sharing_role(client,
                                                                                             user_id,
                                                                                             calendar_group_id,
                                                                                             calendar_id,
                                                                                             event_id,
                                                                                             user):
    return client.allowed_calendar_sharing_role(user_id=user_id,
                                                calendar_group_id=calendar_group_id,
                                                calendar_id=calendar_id,
                                                event_id=event_id,
                                                user=user)


def usersfunctions_user_calendar_group_calendar_event_exception_occurrence_delta(client,
                                                                                 user_id,
                                                                                 calendar_group_id,
                                                                                 calendar_id,
                                                                                 event_id):
    return client.delta(user_id=user_id,
                        calendar_group_id=calendar_group_id,
                        calendar_id=calendar_id,
                        event_id=event_id)


def usersfunctions_user_calendar_group_calendar_event_instance_delta(client,
                                                                     user_id,
                                                                     calendar_group_id,
                                                                     calendar_id,
                                                                     event_id):
    return client.delta(user_id=user_id,
                        calendar_group_id=calendar_group_id,
                        calendar_id=calendar_id,
                        event_id=event_id)


def usersfunctions_user_calendar_group_calendar_event_delta(client,
                                                            user_id,
                                                            calendar_group_id,
                                                            calendar_id):
    return client.delta(user_id=user_id,
                        calendar_group_id=calendar_group_id,
                        calendar_id=calendar_id)


def usersfunctions_user_calendar_group_calendar_allowed_calendar_sharing_role(client,
                                                                              user_id,
                                                                              calendar_group_id,
                                                                              calendar_id,
                                                                              user):
    return client.allowed_calendar_sharing_role(user_id=user_id,
                                                calendar_group_id=calendar_group_id,
                                                calendar_id=calendar_id,
                                                user=user)


def usersfunctions_user_calendar_calendar_view_calendar_allowed_calendar_sharing_role(client,
                                                                                      user_id,
                                                                                      calendar_id,
                                                                                      event_id,
                                                                                      user):
    return client.allowed_calendar_sharing_role(user_id=user_id,
                                                calendar_id=calendar_id,
                                                event_id=event_id,
                                                user=user)


def usersfunctions_user_calendar_calendar_view_exception_occurrence_delta(client,
                                                                          user_id,
                                                                          calendar_id,
                                                                          event_id):
    return client.delta(user_id=user_id,
                        calendar_id=calendar_id,
                        event_id=event_id)


def usersfunctions_user_calendar_calendar_view_instance_delta(client,
                                                              user_id,
                                                              calendar_id,
                                                              event_id):
    return client.delta(user_id=user_id,
                        calendar_id=calendar_id,
                        event_id=event_id)


def usersfunctions_user_calendar_calendar_view_delta(client,
                                                     user_id,
                                                     calendar_id):
    return client.delta(user_id=user_id,
                        calendar_id=calendar_id)


def usersfunctions_user_calendar_event_calendar_allowed_calendar_sharing_role(client,
                                                                              user_id,
                                                                              calendar_id,
                                                                              event_id,
                                                                              user):
    return client.allowed_calendar_sharing_role(user_id=user_id,
                                                calendar_id=calendar_id,
                                                event_id=event_id,
                                                user=user)


def usersfunctions_user_calendar_event_exception_occurrence_delta(client,
                                                                  user_id,
                                                                  calendar_id,
                                                                  event_id):
    return client.delta(user_id=user_id,
                        calendar_id=calendar_id,
                        event_id=event_id)


def usersfunctions_user_calendar_event_instance_delta(client,
                                                      user_id,
                                                      calendar_id,
                                                      event_id):
    return client.delta(user_id=user_id,
                        calendar_id=calendar_id,
                        event_id=event_id)


def usersfunctions_user_calendar_event_delta(client,
                                             user_id,
                                             calendar_id):
    return client.delta(user_id=user_id,
                        calendar_id=calendar_id)


def usersfunctions_user_calendar_allowed_calendar_sharing_role(client,
                                                               user_id,
                                                               calendar_id,
                                                               user):
    return client.allowed_calendar_sharing_role(user_id=user_id,
                                                calendar_id=calendar_id,
                                                user=user)


def usersfunctions_user_calendar_view_calendar_calendar_view_delta(client,
                                                                   user_id,
                                                                   event_id):
    return client.delta(user_id=user_id,
                        event_id=event_id)


def usersfunctions_user_calendar_view_calendar_event_delta(client,
                                                           user_id,
                                                           event_id):
    return client.delta(user_id=user_id,
                        event_id=event_id)


def usersfunctions_user_calendar_view_calendar_allowed_calendar_sharing_role(client,
                                                                             user_id,
                                                                             event_id,
                                                                             user):
    return client.allowed_calendar_sharing_role(user_id=user_id,
                                                event_id=event_id,
                                                user=user)


def usersfunctions_user_calendar_view_exception_occurrence_delta(client,
                                                                 user_id,
                                                                 event_id):
    return client.delta(user_id=user_id,
                        event_id=event_id)


def usersfunctions_user_calendar_view_instance_delta(client,
                                                     user_id,
                                                     event_id):
    return client.delta(user_id=user_id,
                        event_id=event_id)


def usersfunctions_user_calendar_view_delta(client,
                                            user_id):
    return client.delta(user_id=user_id)


def usersfunctions_user_contact_folder_child_folder_delta(client,
                                                          user_id,
                                                          contact_folder_id):
    return client.delta(user_id=user_id,
                        contact_folder_id=contact_folder_id)


def usersfunctions_user_contact_folder_contact_delta(client,
                                                     user_id,
                                                     contact_folder_id):
    return client.delta(user_id=user_id,
                        contact_folder_id=contact_folder_id)


def usersfunctions_user_contact_folder_delta(client,
                                             user_id):
    return client.delta(user_id=user_id)


def usersfunctions_user_contact_delta(client,
                                      user_id):
    return client.delta(user_id=user_id)


def usersfunctions_user_event_calendar_calendar_view_delta(client,
                                                           user_id,
                                                           event_id):
    return client.delta(user_id=user_id,
                        event_id=event_id)


def usersfunctions_user_event_calendar_event_delta(client,
                                                   user_id,
                                                   event_id):
    return client.delta(user_id=user_id,
                        event_id=event_id)


def usersfunctions_user_event_calendar_allowed_calendar_sharing_role(client,
                                                                     user_id,
                                                                     event_id,
                                                                     user):
    return client.allowed_calendar_sharing_role(user_id=user_id,
                                                event_id=event_id,
                                                user=user)


def usersfunctions_user_event_exception_occurrence_delta(client,
                                                         user_id,
                                                         event_id):
    return client.delta(user_id=user_id,
                        event_id=event_id)


def usersfunctions_user_event_instance_delta(client,
                                             user_id,
                                             event_id):
    return client.delta(user_id=user_id,
                        event_id=event_id)


def usersfunctions_user_event_delta(client,
                                    user_id):
    return client.delta(user_id=user_id)


def usersfunctions_user_mail_folder_child_folder_delta(client,
                                                       user_id,
                                                       mail_folder_id):
    return client.delta(user_id=user_id,
                        mail_folder_id=mail_folder_id)


def usersfunctions_user_mail_folder_message_delta(client,
                                                  user_id,
                                                  mail_folder_id):
    return client.delta(user_id=user_id,
                        mail_folder_id=mail_folder_id)


def usersfunctions_user_mail_folder_delta(client,
                                          user_id):
    return client.delta(user_id=user_id)


def usersfunctions_user_managed_app_registration_show_user_id_with_flagged_app_registration(client,
                                                                                            user_id):
    return client.get_user_id_with_flagged_app_registration(user_id=user_id)


def usersfunctions_user_managed_device_show_file_vault_key(client,
                                                           user_id,
                                                           managed_device_id):
    return client.get_file_vault_key(user_id=user_id,
                                     managed_device_id=managed_device_id)


def usersfunctions_user_managed_device_show_non_compliant_setting(client,
                                                                  user_id,
                                                                  managed_device_id):
    return client.get_non_compliant_setting(user_id=user_id,
                                            managed_device_id=managed_device_id)


def usersfunctions_user_message_delta(client,
                                      user_id):
    return client.delta(user_id=user_id)


def usersfunctions_user_delta(client):
    return client.delta()


def usersfunctions_user_export_device_and_app_management_data_d390(client,
                                                                   user_id):
    return client.export_device_and_app_management_data_d390(user_id=user_id)


def usersfunctions_user_export_device_and_app_management_data623_c(client,
                                                                   user_id,
                                                                   skip,
                                                                   top):
    return client.export_device_and_app_management_data623_c(user_id=user_id,
                                                             skip=skip,
                                                             top=top)


def usersfunctions_user_find_room_ac49(client,
                                       user_id,
                                       room_list):
    return client.find_room_ac49(user_id=user_id,
                                 room_list=room_list)


def usersfunctions_user_find_room_d266(client,
                                       user_id):
    return client.find_room_d266(user_id=user_id)


def usersfunctions_user_find_room_list(client,
                                       user_id):
    return client.find_room_list(user_id=user_id)


def usersfunctions_user_is_managed_app_user_blocked(client,
                                                    user_id):
    return client.is_managed_app_user_blocked(user_id=user_id)


def usersfunctions_user_reminder_view(client,
                                      user_id,
                                      start_date_time,
                                      end_date_time):
    return client.reminder_view(user_id=user_id,
                                start_date_time=start_date_time,
                                end_date_time=end_date_time)


def usersfunctions_user_show_effective_device_enrollment_configuration(client,
                                                                       user_id):
    return client.get_effective_device_enrollment_configuration(user_id=user_id)


def usersfunctions_user_show_logged_on_managed_device(client,
                                                      user_id):
    return client.get_logged_on_managed_device(user_id=user_id)


def usersfunctions_user_show_managed_app_blocked_user(client):
    return client.get_managed_app_blocked_user()


def usersfunctions_user_show_managed_app_diagnostic_statuses(client,
                                                             user_id):
    return client.get_managed_app_diagnostic_statuses(user_id=user_id)


def usersfunctions_user_show_managed_app_policy(client,
                                                user_id):
    return client.get_managed_app_policy(user_id=user_id)


def usersfunctions_user_show_managed_device_with_app_failure(client,
                                                             user_id):
    return client.get_managed_device_with_app_failure(user_id=user_id)


def usersfunctions_user_show_managed_device_with_failed_or_pending_app(client,
                                                                       user_id):
    return client.get_managed_device_with_failed_or_pending_app(user_id=user_id)


def usersfunctions_user_onenote_notebook_section_group_section_page_preview(client,
                                                                            user_id,
                                                                            notebook_id,
                                                                            section_group_id,
                                                                            onenote_section_id,
                                                                            onenote_page_id):
    return client.preview(user_id=user_id,
                          notebook_id=notebook_id,
                          section_group_id=section_group_id,
                          onenote_section_id=onenote_section_id,
                          onenote_page_id=onenote_page_id)


def usersfunctions_user_onenote_notebook_section_page_preview(client,
                                                              user_id,
                                                              notebook_id,
                                                              onenote_section_id,
                                                              onenote_page_id):
    return client.preview(user_id=user_id,
                          notebook_id=notebook_id,
                          onenote_section_id=onenote_section_id,
                          onenote_page_id=onenote_page_id)


def usersfunctions_user_onenote_notebook_show_recent_notebook(client,
                                                              user_id,
                                                              include_personal_notebooks):
    if include_personal_notebooks is None:
        include_personal_notebooks = False
    return client.get_recent_notebook(user_id=user_id,
                                      include_personal_notebooks=include_personal_notebooks)


def usersfunctions_user_onenote_page_preview(client,
                                             user_id,
                                             onenote_page_id):
    return client.preview(user_id=user_id,
                          onenote_page_id=onenote_page_id)


def usersfunctions_user_onenote_page_parent_notebook_section_group_section_page_preview(client,
                                                                                        user_id,
                                                                                        onenote_page_id,
                                                                                        section_group_id,
                                                                                        onenote_section_id,
                                                                                        onenote_page_id1):
    return client.preview(user_id=user_id,
                          onenote_page_id=onenote_page_id,
                          section_group_id=section_group_id,
                          onenote_section_id=onenote_section_id,
                          onenote_page_id1=onenote_page_id1)


def usersfunctions_user_onenote_page_parent_notebook_section_page_preview(client,
                                                                          user_id,
                                                                          onenote_page_id,
                                                                          onenote_section_id,
                                                                          onenote_page_id1):
    return client.preview(user_id=user_id,
                          onenote_page_id=onenote_page_id,
                          onenote_section_id=onenote_section_id,
                          onenote_page_id1=onenote_page_id1)


def usersfunctions_user_onenote_page_parent_section_page_preview(client,
                                                                 user_id,
                                                                 onenote_page_id,
                                                                 onenote_page_id1):
    return client.preview(user_id=user_id,
                          onenote_page_id=onenote_page_id,
                          onenote_page_id1=onenote_page_id1)


def usersfunctions_user_onenote_section_group_parent_notebook_section_page_preview(client,
                                                                                   user_id,
                                                                                   section_group_id,
                                                                                   onenote_section_id,
                                                                                   onenote_page_id):
    return client.preview(user_id=user_id,
                          section_group_id=section_group_id,
                          onenote_section_id=onenote_section_id,
                          onenote_page_id=onenote_page_id)


def usersfunctions_user_onenote_section_group_section_page_preview(client,
                                                                   user_id,
                                                                   section_group_id,
                                                                   onenote_section_id,
                                                                   onenote_page_id):
    return client.preview(user_id=user_id,
                          section_group_id=section_group_id,
                          onenote_section_id=onenote_section_id,
                          onenote_page_id=onenote_page_id)


def usersfunctions_user_onenote_section_page_preview(client,
                                                     user_id,
                                                     onenote_section_id,
                                                     onenote_page_id):
    return client.preview(user_id=user_id,
                          onenote_section_id=onenote_section_id,
                          onenote_page_id=onenote_page_id)


def usersfunctions_user_outlook_supported_language(client,
                                                   user_id):
    return client.supported_language(user_id=user_id)


def usersfunctions_user_outlook_supported_time_zone_ee48(client,
                                                         user_id):
    return client.supported_time_zone_ee48(user_id=user_id)


def usersfunctions_user_outlook_supported_time_zones51_c6(client,
                                                          user_id,
                                                          time_zone_standard):
    return client.supported_time_zones51_c6(user_id=user_id,
                                            time_zone_standard=time_zone_standard)


def usersfunctions_user_planner_all_delta(client,
                                          user_id):
    return client.delta(user_id=user_id)


def usersfunctions_user_todo_list_task_delta(client,
                                             user_id,
                                             todo_task_list_id):
    return client.delta(user_id=user_id,
                        todo_task_list_id=todo_task_list_id)


def usersfunctions_user_todo_list_delta(client,
                                        user_id):
    return client.delta(user_id=user_id)
