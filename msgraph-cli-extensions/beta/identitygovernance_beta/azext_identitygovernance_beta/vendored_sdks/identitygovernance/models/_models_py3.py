# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

import datetime
from typing import Dict, List, Optional, Union

from azure.core.exceptions import HttpResponseError
import msrest.serialization

from ._identity_governance_enums import *


class collectionofaccesspackage(msrest.serialization.Model):
    """Collection of accessPackage.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackage]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackage]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackage"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackage, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackage0(msrest.serialization.Model):
    """Collection of accessPackage.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackage]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackage]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackage"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackage0, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackage1(msrest.serialization.Model):
    """Collection of accessPackage.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackage]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackage]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackage"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackage1, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackage2(msrest.serialization.Model):
    """Collection of accessPackage.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackage]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackage]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackage"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackage2, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackage3(msrest.serialization.Model):
    """Collection of accessPackage.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackage]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackage]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackage"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackage3, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackage4(msrest.serialization.Model):
    """Collection of accessPackage.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackage]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackage]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackage"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackage4, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackage5(msrest.serialization.Model):
    """Collection of accessPackage.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackage]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackage]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackage"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackage5, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackage6(msrest.serialization.Model):
    """Collection of accessPackage.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackage]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackage]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackage"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackage6, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackage7(msrest.serialization.Model):
    """Collection of accessPackage.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackage]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackage]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackage"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackage7, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackage8(msrest.serialization.Model):
    """Collection of accessPackage.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackage]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackage]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackage"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackage8, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageassignment(msrest.serialization.Model):
    """Collection of accessPackageAssignment.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageassignment]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageassignment]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageassignment"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageassignment, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageassignment0(msrest.serialization.Model):
    """Collection of accessPackageAssignment.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageassignment]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageassignment]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageassignment"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageassignment0, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageassignment1(msrest.serialization.Model):
    """Collection of accessPackageAssignment.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageassignment]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageassignment]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageassignment"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageassignment1, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageassignment2(msrest.serialization.Model):
    """Collection of accessPackageAssignment.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageassignment]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageassignment]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageassignment"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageassignment2, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageassignmentpolicy(msrest.serialization.Model):
    """Collection of accessPackageAssignmentPolicy.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageassignmentpolicy]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageassignmentpolicy]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageassignmentpolicy"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageassignmentpolicy, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageassignmentpolicy0(msrest.serialization.Model):
    """Collection of accessPackageAssignmentPolicy.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageassignmentpolicy]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageassignmentpolicy]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageassignmentpolicy"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageassignmentpolicy0, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageassignmentpolicy1(msrest.serialization.Model):
    """Collection of accessPackageAssignmentPolicy.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageassignmentpolicy]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageassignmentpolicy]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageassignmentpolicy"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageassignmentpolicy1, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageassignmentpolicy2(msrest.serialization.Model):
    """Collection of accessPackageAssignmentPolicy.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageassignmentpolicy]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageassignmentpolicy]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageassignmentpolicy"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageassignmentpolicy2, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageassignmentpolicy3(msrest.serialization.Model):
    """Collection of accessPackageAssignmentPolicy.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageassignmentpolicy]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageassignmentpolicy]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageassignmentpolicy"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageassignmentpolicy3, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageassignmentpolicy4(msrest.serialization.Model):
    """Collection of accessPackageAssignmentPolicy.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageassignmentpolicy]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageassignmentpolicy]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageassignmentpolicy"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageassignmentpolicy4, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageassignmentpolicy5(msrest.serialization.Model):
    """Collection of accessPackageAssignmentPolicy.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageassignmentpolicy]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageassignmentpolicy]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageassignmentpolicy"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageassignmentpolicy5, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageassignmentpolicy6(msrest.serialization.Model):
    """Collection of accessPackageAssignmentPolicy.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageassignmentpolicy]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageassignmentpolicy]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageassignmentpolicy"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageassignmentpolicy6, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageassignmentpolicy7(msrest.serialization.Model):
    """Collection of accessPackageAssignmentPolicy.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageassignmentpolicy]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageassignmentpolicy]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageassignmentpolicy"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageassignmentpolicy7, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageassignmentpolicy8(msrest.serialization.Model):
    """Collection of accessPackageAssignmentPolicy.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageassignmentpolicy]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageassignmentpolicy]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageassignmentpolicy"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageassignmentpolicy8, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageassignmentrequest(msrest.serialization.Model):
    """Collection of accessPackageAssignmentRequest.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageassignmentrequest]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageassignmentrequest]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageassignmentrequest"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageassignmentrequest, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageassignmentrequest0(msrest.serialization.Model):
    """Collection of accessPackageAssignmentRequest.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageassignmentrequest]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageassignmentrequest]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageassignmentrequest"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageassignmentrequest0, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageassignmentrequest1(msrest.serialization.Model):
    """Collection of accessPackageAssignmentRequest.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageassignmentrequest]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageassignmentrequest]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageassignmentrequest"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageassignmentrequest1, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageassignmentrequest2(msrest.serialization.Model):
    """Collection of accessPackageAssignmentRequest.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageassignmentrequest]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageassignmentrequest]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageassignmentrequest"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageassignmentrequest2, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageassignmentresourcerole(msrest.serialization.Model):
    """Collection of accessPackageAssignmentResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value:
     list[~identity_governance.models.microsoftgraphaccesspackageassignmentresourcerole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageassignmentresourcerole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageassignmentresourcerole"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageassignmentresourcerole, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageassignmentresourcerole0(msrest.serialization.Model):
    """Collection of accessPackageAssignmentResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value:
     list[~identity_governance.models.microsoftgraphaccesspackageassignmentresourcerole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageassignmentresourcerole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageassignmentresourcerole"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageassignmentresourcerole0, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageassignmentresourcerole1(msrest.serialization.Model):
    """Collection of accessPackageAssignmentResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value:
     list[~identity_governance.models.microsoftgraphaccesspackageassignmentresourcerole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageassignmentresourcerole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageassignmentresourcerole"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageassignmentresourcerole1, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageassignmentresourcerole2(msrest.serialization.Model):
    """Collection of accessPackageAssignmentResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value:
     list[~identity_governance.models.microsoftgraphaccesspackageassignmentresourcerole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageassignmentresourcerole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageassignmentresourcerole"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageassignmentresourcerole2, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackagecatalog(msrest.serialization.Model):
    """Collection of accessPackageCatalog.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackagecatalog]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackagecatalog]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackagecatalog"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackagecatalog, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresource(msrest.serialization.Model):
    """Collection of accessPackageResource.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresource]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresource]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresource"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresource, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresource0(msrest.serialization.Model):
    """Collection of accessPackageResource.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresource]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresource]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresource"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresource0, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresource1(msrest.serialization.Model):
    """Collection of accessPackageResource.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresource]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresource]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresource"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresource1, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresource2(msrest.serialization.Model):
    """Collection of accessPackageResource.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresource]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresource]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresource"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresource2, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresource3(msrest.serialization.Model):
    """Collection of accessPackageResource.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresource]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresource]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresource"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresource3, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresource4(msrest.serialization.Model):
    """Collection of accessPackageResource.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresource]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresource]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresource"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresource4, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresource5(msrest.serialization.Model):
    """Collection of accessPackageResource.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresource]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresource]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresource"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresource5, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresource6(msrest.serialization.Model):
    """Collection of accessPackageResource.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresource]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresource]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresource"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresource6, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresource7(msrest.serialization.Model):
    """Collection of accessPackageResource.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresource]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresource]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresource"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresource7, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresource8(msrest.serialization.Model):
    """Collection of accessPackageResource.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresource]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresource]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresource"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresource8, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcerequest(msrest.serialization.Model):
    """Collection of accessPackageResourceRequest.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcerequest]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcerequest]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcerequest"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcerequest, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcerole(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcerole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcerole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcerole"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcerole, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcerole0(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcerole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcerole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcerole"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcerole0, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcerole1(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcerole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcerole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcerole"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcerole1, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcerole10(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcerole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcerole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcerole"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcerole10, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcerole11(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcerole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcerole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcerole"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcerole11, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcerole12(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcerole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcerole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcerole"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcerole12, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcerole13(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcerole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcerole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcerole"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcerole13, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcerole14(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcerole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcerole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcerole"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcerole14, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcerole15(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcerole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcerole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcerole"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcerole15, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcerole16(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcerole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcerole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcerole"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcerole16, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcerole17(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcerole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcerole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcerole"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcerole17, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcerole18(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcerole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcerole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcerole"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcerole18, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcerole19(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcerole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcerole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcerole"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcerole19, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcerole2(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcerole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcerole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcerole"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcerole2, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcerole20(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcerole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcerole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcerole"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcerole20, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcerole21(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcerole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcerole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcerole"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcerole21, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcerole22(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcerole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcerole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcerole"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcerole22, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcerole23(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcerole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcerole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcerole"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcerole23, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcerole24(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcerole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcerole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcerole"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcerole24, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcerole25(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcerole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcerole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcerole"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcerole25, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcerole26(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcerole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcerole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcerole"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcerole26, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcerole27(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcerole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcerole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcerole"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcerole27, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcerole28(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcerole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcerole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcerole"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcerole28, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcerole29(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcerole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcerole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcerole"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcerole29, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcerole3(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcerole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcerole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcerole"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcerole3, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcerole30(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcerole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcerole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcerole"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcerole30, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcerole31(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcerole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcerole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcerole"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcerole31, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcerole32(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcerole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcerole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcerole"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcerole32, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcerole33(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcerole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcerole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcerole"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcerole33, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcerole34(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcerole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcerole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcerole"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcerole34, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcerole35(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcerole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcerole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcerole"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcerole35, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcerole36(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcerole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcerole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcerole"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcerole36, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcerole37(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcerole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcerole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcerole"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcerole37, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcerole38(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcerole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcerole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcerole"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcerole38, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcerole39(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcerole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcerole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcerole"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcerole39, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcerole4(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcerole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcerole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcerole"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcerole4, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcerole40(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcerole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcerole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcerole"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcerole40, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcerole41(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcerole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcerole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcerole"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcerole41, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcerole42(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcerole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcerole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcerole"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcerole42, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcerole43(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcerole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcerole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcerole"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcerole43, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcerole44(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcerole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcerole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcerole"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcerole44, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcerole45(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcerole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcerole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcerole"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcerole45, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcerole46(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcerole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcerole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcerole"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcerole46, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcerole47(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcerole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcerole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcerole"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcerole47, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcerole48(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcerole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcerole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcerole"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcerole48, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcerole49(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcerole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcerole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcerole"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcerole49, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcerole5(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcerole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcerole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcerole"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcerole5, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcerole50(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcerole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcerole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcerole"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcerole50, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcerole51(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcerole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcerole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcerole"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcerole51, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcerole52(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcerole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcerole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcerole"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcerole52, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcerole53(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcerole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcerole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcerole"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcerole53, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcerole54(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcerole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcerole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcerole"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcerole54, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcerole55(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcerole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcerole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcerole"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcerole55, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcerole56(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcerole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcerole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcerole"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcerole56, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcerole57(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcerole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcerole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcerole"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcerole57, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcerole58(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcerole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcerole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcerole"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcerole58, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcerole59(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcerole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcerole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcerole"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcerole59, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcerole6(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcerole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcerole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcerole"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcerole6, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcerole60(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcerole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcerole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcerole"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcerole60, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcerole61(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcerole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcerole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcerole"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcerole61, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcerole7(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcerole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcerole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcerole"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcerole7, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcerole8(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcerole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcerole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcerole"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcerole8, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcerole9(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcerole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcerole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcerole"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcerole9, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcerolescope(msrest.serialization.Model):
    """Collection of accessPackageResourceRoleScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcerolescope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcerolescope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcerolescope"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcerolescope, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcerolescope0(msrest.serialization.Model):
    """Collection of accessPackageResourceRoleScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcerolescope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcerolescope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcerolescope"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcerolescope0, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcerolescope1(msrest.serialization.Model):
    """Collection of accessPackageResourceRoleScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcerolescope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcerolescope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcerolescope"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcerolescope1, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcerolescope2(msrest.serialization.Model):
    """Collection of accessPackageResourceRoleScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcerolescope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcerolescope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcerolescope"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcerolescope2, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcerolescope3(msrest.serialization.Model):
    """Collection of accessPackageResourceRoleScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcerolescope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcerolescope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcerolescope"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcerolescope3, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcerolescope4(msrest.serialization.Model):
    """Collection of accessPackageResourceRoleScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcerolescope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcerolescope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcerolescope"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcerolescope4, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcerolescope5(msrest.serialization.Model):
    """Collection of accessPackageResourceRoleScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcerolescope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcerolescope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcerolescope"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcerolescope5, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcerolescope6(msrest.serialization.Model):
    """Collection of accessPackageResourceRoleScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcerolescope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcerolescope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcerolescope"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcerolescope6, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcerolescope7(msrest.serialization.Model):
    """Collection of accessPackageResourceRoleScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcerolescope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcerolescope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcerolescope"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcerolescope7, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcerolescope8(msrest.serialization.Model):
    """Collection of accessPackageResourceRoleScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcerolescope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcerolescope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcerolescope"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcerolescope8, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcescope(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcescope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcescope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcescope"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcescope, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcescope0(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcescope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcescope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcescope"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcescope0, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcescope1(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcescope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcescope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcescope"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcescope1, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcescope10(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcescope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcescope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcescope"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcescope10, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcescope11(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcescope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcescope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcescope"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcescope11, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcescope12(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcescope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcescope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcescope"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcescope12, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcescope13(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcescope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcescope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcescope"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcescope13, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcescope14(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcescope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcescope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcescope"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcescope14, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcescope15(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcescope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcescope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcescope"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcescope15, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcescope16(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcescope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcescope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcescope"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcescope16, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcescope17(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcescope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcescope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcescope"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcescope17, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcescope18(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcescope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcescope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcescope"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcescope18, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcescope19(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcescope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcescope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcescope"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcescope19, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcescope2(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcescope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcescope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcescope"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcescope2, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcescope20(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcescope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcescope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcescope"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcescope20, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcescope21(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcescope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcescope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcescope"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcescope21, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcescope22(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcescope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcescope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcescope"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcescope22, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcescope23(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcescope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcescope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcescope"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcescope23, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcescope24(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcescope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcescope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcescope"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcescope24, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcescope25(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcescope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcescope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcescope"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcescope25, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcescope26(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcescope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcescope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcescope"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcescope26, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcescope27(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcescope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcescope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcescope"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcescope27, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcescope28(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcescope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcescope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcescope"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcescope28, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcescope29(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcescope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcescope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcescope"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcescope29, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcescope3(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcescope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcescope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcescope"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcescope3, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcescope30(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcescope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcescope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcescope"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcescope30, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcescope31(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcescope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcescope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcescope"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcescope31, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcescope32(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcescope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcescope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcescope"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcescope32, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcescope33(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcescope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcescope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcescope"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcescope33, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcescope34(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcescope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcescope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcescope"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcescope34, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcescope35(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcescope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcescope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcescope"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcescope35, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcescope36(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcescope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcescope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcescope"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcescope36, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcescope37(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcescope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcescope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcescope"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcescope37, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcescope38(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcescope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcescope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcescope"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcescope38, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcescope39(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcescope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcescope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcescope"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcescope39, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcescope4(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcescope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcescope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcescope"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcescope4, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcescope40(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcescope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcescope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcescope"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcescope40, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcescope41(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcescope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcescope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcescope"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcescope41, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcescope42(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcescope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcescope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcescope"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcescope42, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcescope43(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcescope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcescope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcescope"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcescope43, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcescope44(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcescope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcescope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcescope"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcescope44, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcescope45(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcescope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcescope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcescope"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcescope45, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcescope46(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcescope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcescope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcescope"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcescope46, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcescope47(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcescope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcescope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcescope"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcescope47, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcescope48(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcescope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcescope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcescope"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcescope48, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcescope49(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcescope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcescope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcescope"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcescope49, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcescope5(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcescope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcescope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcescope"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcescope5, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcescope50(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcescope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcescope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcescope"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcescope50, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcescope51(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcescope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcescope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcescope"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcescope51, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcescope52(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcescope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcescope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcescope"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcescope52, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcescope53(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcescope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcescope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcescope"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcescope53, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcescope54(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcescope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcescope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcescope"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcescope54, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcescope55(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcescope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcescope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcescope"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcescope55, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcescope56(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcescope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcescope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcescope"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcescope56, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcescope57(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcescope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcescope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcescope"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcescope57, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcescope58(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcescope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcescope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcescope"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcescope58, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcescope59(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcescope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcescope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcescope"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcescope59, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcescope6(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcescope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcescope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcescope"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcescope6, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcescope60(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcescope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcescope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcescope"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcescope60, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcescope61(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcescope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcescope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcescope"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcescope61, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcescope7(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcescope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcescope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcescope"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcescope7, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcescope8(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcescope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcescope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcescope"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcescope8, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccesspackageresourcescope9(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccesspackageresourcescope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccesspackageresourcescope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccesspackageresourcescope"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccesspackageresourcescope9, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccessreview(msrest.serialization.Model):
    """Collection of accessReview.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccessreview]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccessreview]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccessreview"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccessreview, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccessreview0(msrest.serialization.Model):
    """Collection of accessReview.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccessreview]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccessreview]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccessreview"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccessreview0, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccessreviewdecision(msrest.serialization.Model):
    """Collection of accessReviewDecision.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccessreviewdecision]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccessreviewdecision]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccessreviewdecision"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccessreviewdecision, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccessreviewdecision0(msrest.serialization.Model):
    """Collection of accessReviewDecision.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccessreviewdecision]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccessreviewdecision]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccessreviewdecision"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccessreviewdecision0, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofaccessreviewreviewer(msrest.serialization.Model):
    """Collection of accessReviewReviewer.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphaccessreviewreviewer]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphaccessreviewreviewer]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphaccessreviewreviewer"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofaccessreviewreviewer, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofagreement(msrest.serialization.Model):
    """Collection of agreement.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphagreement]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphagreement]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphagreement"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofagreement, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofagreementacceptance(msrest.serialization.Model):
    """Collection of agreementAcceptance.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphagreementacceptance]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphagreementacceptance]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphagreementacceptance"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofagreementacceptance, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofagreementacceptance0(msrest.serialization.Model):
    """Collection of agreementAcceptance.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphagreementacceptance]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphagreementacceptance]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphagreementacceptance"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofagreementacceptance0, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofagreementfilelocalization(msrest.serialization.Model):
    """Collection of agreementFileLocalization.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphagreementfilelocalization]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphagreementfilelocalization]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphagreementfilelocalization"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofagreementfilelocalization, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofagreementfilelocalization0(msrest.serialization.Model):
    """Collection of agreementFileLocalization.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphagreementfilelocalization]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphagreementfilelocalization]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphagreementfilelocalization"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofagreementfilelocalization0, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofbusinessflowtemplate(msrest.serialization.Model):
    """Collection of businessFlowTemplate.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphbusinessflowtemplate]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphbusinessflowtemplate]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphbusinessflowtemplate"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofbusinessflowtemplate, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofconnectedorganization(msrest.serialization.Model):
    """Collection of connectedOrganization.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphconnectedorganization]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphconnectedorganization]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphconnectedorganization"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofconnectedorganization, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofdirectoryobject(msrest.serialization.Model):
    """Collection of directoryObject.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphdirectoryobject]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphdirectoryobject]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphdirectoryobject"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofdirectoryobject, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofdirectoryobject0(msrest.serialization.Model):
    """Collection of directoryObject.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphdirectoryobject]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphdirectoryobject]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphdirectoryobject"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofdirectoryobject0, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofgovernanceresource(msrest.serialization.Model):
    """Collection of governanceResource.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphgovernanceresource]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphgovernanceresource]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphgovernanceresource"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofgovernanceresource, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofgovernanceroleassignment(msrest.serialization.Model):
    """Collection of governanceRoleAssignment.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphgovernanceroleassignment]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphgovernanceroleassignment]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphgovernanceroleassignment"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofgovernanceroleassignment, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofgovernanceroleassignmentrequest(msrest.serialization.Model):
    """Collection of governanceRoleAssignmentRequest.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphgovernanceroleassignmentrequest]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphgovernanceroleassignmentrequest]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphgovernanceroleassignmentrequest"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofgovernanceroleassignmentrequest, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofgovernanceroledefinition(msrest.serialization.Model):
    """Collection of governanceRoleDefinition.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphgovernanceroledefinition]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphgovernanceroledefinition]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphgovernanceroledefinition"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofgovernanceroledefinition, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofgovernancerolesetting(msrest.serialization.Model):
    """Collection of governanceRoleSetting.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphgovernancerolesetting]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphgovernancerolesetting]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphgovernancerolesetting"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofgovernancerolesetting, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionoflinksofagreementacceptance(msrest.serialization.Model):
    """Collection of links of agreementAcceptance.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[str]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[str]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List[str]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionoflinksofagreementacceptance, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionoflinksofprivilegedroleassignment(msrest.serialization.Model):
    """Collection of links of privilegedRoleAssignment.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[str]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[str]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List[str]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionoflinksofprivilegedroleassignment, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofprivilegedaccess(msrest.serialization.Model):
    """Collection of privilegedAccess.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphprivilegedaccess]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphprivilegedaccess]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphprivilegedaccess"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofprivilegedaccess, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofprivilegedapproval(msrest.serialization.Model):
    """Collection of privilegedApproval.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphprivilegedapproval]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphprivilegedapproval]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphprivilegedapproval"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofprivilegedapproval, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofprivilegedoperationevent(msrest.serialization.Model):
    """Collection of privilegedOperationEvent.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphprivilegedoperationevent]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphprivilegedoperationevent]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphprivilegedoperationevent"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofprivilegedoperationevent, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofprivilegedrole(msrest.serialization.Model):
    """Collection of privilegedRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphprivilegedrole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphprivilegedrole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphprivilegedrole"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofprivilegedrole, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofprivilegedroleassignment(msrest.serialization.Model):
    """Collection of privilegedRoleAssignment.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphprivilegedroleassignment]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphprivilegedroleassignment]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphprivilegedroleassignment"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofprivilegedroleassignment, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofprivilegedroleassignment0(msrest.serialization.Model):
    """Collection of privilegedRoleAssignment.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphprivilegedroleassignment]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphprivilegedroleassignment]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphprivilegedroleassignment"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofprivilegedroleassignment0, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofprivilegedroleassignmentrequest(msrest.serialization.Model):
    """Collection of privilegedRoleAssignmentRequest.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphprivilegedroleassignmentrequest]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphprivilegedroleassignmentrequest]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphprivilegedroleassignmentrequest"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofprivilegedroleassignmentrequest, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofprogram(msrest.serialization.Model):
    """Collection of program.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphprogram]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphprogram]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphprogram"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofprogram, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofprogramcontrol(msrest.serialization.Model):
    """Collection of programControl.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphprogramcontrol]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphprogramcontrol]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphprogramcontrol"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofprogramcontrol, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofprogramcontrol0(msrest.serialization.Model):
    """Collection of programControl.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphprogramcontrol]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphprogramcontrol]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphprogramcontrol"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofprogramcontrol0, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class collectionofprogramcontroltype(msrest.serialization.Model):
    """Collection of programControlType.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.microsoftgraphprogramcontroltype]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[microsoftgraphprogramcontroltype]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["microsoftgraphprogramcontroltype"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(collectionofprogramcontroltype, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class microsoftgraphentity(msrest.serialization.Model):
    """entity.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param id: Read-only.
    :type id: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'id': {'key': 'id', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        id: Optional[str] = None,
        **kwargs
    ):
        super(microsoftgraphentity, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.id = id


class microsoftgraphaccesspackage(microsoftgraphentity):
    """accessPackage.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param catalog_id:
    :type catalog_id: str
    :param created_by:
    :type created_by: str
    :param created_date_time:
    :type created_date_time: ~datetime.datetime
    :param description:
    :type description: str
    :param display_name:
    :type display_name: str
    :param is_hidden:
    :type is_hidden: bool
    :param is_role_scopes_visible:
    :type is_role_scopes_visible: bool
    :param modified_by:
    :type modified_by: str
    :param modified_date_time:
    :type modified_date_time: ~datetime.datetime
    :param access_package_assignment_policies:
    :type access_package_assignment_policies:
     list[~identity_governance.models.microsoftgraphaccesspackageassignmentpolicy]
    :param access_package_catalog: accessPackageCatalog.
    :type access_package_catalog: ~identity_governance.models.microsoftgraphaccesspackagecatalog
    :param access_package_resource_role_scopes:
    :type access_package_resource_role_scopes:
     list[~identity_governance.models.microsoftgraphaccesspackageresourcerolescope]
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'catalog_id': {'key': 'catalogId', 'type': 'str'},
        'created_by': {'key': 'createdBy', 'type': 'str'},
        'created_date_time': {'key': 'createdDateTime', 'type': 'iso-8601'},
        'description': {'key': 'description', 'type': 'str'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'is_hidden': {'key': 'isHidden', 'type': 'bool'},
        'is_role_scopes_visible': {'key': 'isRoleScopesVisible', 'type': 'bool'},
        'modified_by': {'key': 'modifiedBy', 'type': 'str'},
        'modified_date_time': {'key': 'modifiedDateTime', 'type': 'iso-8601'},
        'access_package_assignment_policies': {'key': 'accessPackageAssignmentPolicies', 'type': '[microsoftgraphaccesspackageassignmentpolicy]'},
        'access_package_catalog': {'key': 'accessPackageCatalog', 'type': 'microsoftgraphaccesspackagecatalog'},
        'access_package_resource_role_scopes': {'key': 'accessPackageResourceRoleScopes', 'type': '[microsoftgraphaccesspackageresourcerolescope]'},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,
        additional_properties: Optional[Dict[str, object]] = None,
        catalog_id: Optional[str] = None,
        created_by: Optional[str] = None,
        created_date_time: Optional[datetime.datetime] = None,
        description: Optional[str] = None,
        display_name: Optional[str] = None,
        is_hidden: Optional[bool] = None,
        is_role_scopes_visible: Optional[bool] = None,
        modified_by: Optional[str] = None,
        modified_date_time: Optional[datetime.datetime] = None,
        access_package_assignment_policies: Optional[List["microsoftgraphaccesspackageassignmentpolicy"]] = None,
        access_package_catalog: Optional["microsoftgraphaccesspackagecatalog"] = None,
        access_package_resource_role_scopes: Optional[List["microsoftgraphaccesspackageresourcerolescope"]] = None,
        **kwargs
    ):
        super(microsoftgraphaccesspackage, self).__init__(id=id, **kwargs)
        self.additional_properties = additional_properties
        self.catalog_id = catalog_id
        self.created_by = created_by
        self.created_date_time = created_date_time
        self.description = description
        self.display_name = display_name
        self.is_hidden = is_hidden
        self.is_role_scopes_visible = is_role_scopes_visible
        self.modified_by = modified_by
        self.modified_date_time = modified_date_time
        self.access_package_assignment_policies = access_package_assignment_policies
        self.access_package_catalog = access_package_catalog
        self.access_package_resource_role_scopes = access_package_resource_role_scopes


class microsoftgraphaccesspackageanswer(msrest.serialization.Model):
    """accessPackageAnswer.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param answered_question: accessPackageQuestion.
    :type answered_question: ~identity_governance.models.microsoftgraphaccesspackagequestion
    :param display_value:
    :type display_value: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'answered_question': {'key': 'answeredQuestion', 'type': 'microsoftgraphaccesspackagequestion'},
        'display_value': {'key': 'displayValue', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        answered_question: Optional["microsoftgraphaccesspackagequestion"] = None,
        display_value: Optional[str] = None,
        **kwargs
    ):
        super(microsoftgraphaccesspackageanswer, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.answered_question = answered_question
        self.display_value = display_value


class microsoftgraphaccesspackageassignment(microsoftgraphentity):
    """accessPackageAssignment.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param access_package_id:
    :type access_package_id: str
    :param assignment_policy_id:
    :type assignment_policy_id: str
    :param assignment_state:
    :type assignment_state: str
    :param assignment_status:
    :type assignment_status: str
    :param catalog_id:
    :type catalog_id: str
    :param expired_date_time:
    :type expired_date_time: ~datetime.datetime
    :param is_extended:
    :type is_extended: bool
    :param schedule: requestSchedule.
    :type schedule: ~identity_governance.models.microsoftgraphrequestschedule
    :param target_id:
    :type target_id: str
    :param access_package: accessPackage.
    :type access_package: ~identity_governance.models.microsoftgraphaccesspackage
    :param access_package_assignment_policy: accessPackageAssignmentPolicy.
    :type access_package_assignment_policy:
     ~identity_governance.models.microsoftgraphaccesspackageassignmentpolicy
    :param access_package_assignment_requests:
    :type access_package_assignment_requests:
     list[~identity_governance.models.microsoftgraphaccesspackageassignmentrequest]
    :param access_package_assignment_resource_roles:
    :type access_package_assignment_resource_roles:
     list[~identity_governance.models.microsoftgraphaccesspackageassignmentresourcerole]
    :param target: accessPackageSubject.
    :type target: ~identity_governance.models.microsoftgraphaccesspackagesubject
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'access_package_id': {'key': 'accessPackageId', 'type': 'str'},
        'assignment_policy_id': {'key': 'assignmentPolicyId', 'type': 'str'},
        'assignment_state': {'key': 'assignmentState', 'type': 'str'},
        'assignment_status': {'key': 'assignmentStatus', 'type': 'str'},
        'catalog_id': {'key': 'catalogId', 'type': 'str'},
        'expired_date_time': {'key': 'expiredDateTime', 'type': 'iso-8601'},
        'is_extended': {'key': 'isExtended', 'type': 'bool'},
        'schedule': {'key': 'schedule', 'type': 'microsoftgraphrequestschedule'},
        'target_id': {'key': 'targetId', 'type': 'str'},
        'access_package': {'key': 'accessPackage', 'type': 'microsoftgraphaccesspackage'},
        'access_package_assignment_policy': {'key': 'accessPackageAssignmentPolicy', 'type': 'microsoftgraphaccesspackageassignmentpolicy'},
        'access_package_assignment_requests': {'key': 'accessPackageAssignmentRequests', 'type': '[microsoftgraphaccesspackageassignmentrequest]'},
        'access_package_assignment_resource_roles': {'key': 'accessPackageAssignmentResourceRoles', 'type': '[microsoftgraphaccesspackageassignmentresourcerole]'},
        'target': {'key': 'target', 'type': 'microsoftgraphaccesspackagesubject'},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,
        additional_properties: Optional[Dict[str, object]] = None,
        access_package_id: Optional[str] = None,
        assignment_policy_id: Optional[str] = None,
        assignment_state: Optional[str] = None,
        assignment_status: Optional[str] = None,
        catalog_id: Optional[str] = None,
        expired_date_time: Optional[datetime.datetime] = None,
        is_extended: Optional[bool] = None,
        schedule: Optional["microsoftgraphrequestschedule"] = None,
        target_id: Optional[str] = None,
        access_package: Optional["microsoftgraphaccesspackage"] = None,
        access_package_assignment_policy: Optional["microsoftgraphaccesspackageassignmentpolicy"] = None,
        access_package_assignment_requests: Optional[List["microsoftgraphaccesspackageassignmentrequest"]] = None,
        access_package_assignment_resource_roles: Optional[List["microsoftgraphaccesspackageassignmentresourcerole"]] = None,
        target: Optional["microsoftgraphaccesspackagesubject"] = None,
        **kwargs
    ):
        super(microsoftgraphaccesspackageassignment, self).__init__(id=id, **kwargs)
        self.additional_properties = additional_properties
        self.access_package_id = access_package_id
        self.assignment_policy_id = assignment_policy_id
        self.assignment_state = assignment_state
        self.assignment_status = assignment_status
        self.catalog_id = catalog_id
        self.expired_date_time = expired_date_time
        self.is_extended = is_extended
        self.schedule = schedule
        self.target_id = target_id
        self.access_package = access_package
        self.access_package_assignment_policy = access_package_assignment_policy
        self.access_package_assignment_requests = access_package_assignment_requests
        self.access_package_assignment_resource_roles = access_package_assignment_resource_roles
        self.target = target


class microsoftgraphaccesspackageassignmentpolicy(microsoftgraphentity):
    """accessPackageAssignmentPolicy.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param access_package_id:
    :type access_package_id: str
    :param access_review_settings: assignmentReviewSettings.
    :type access_review_settings:
     ~identity_governance.models.microsoftgraphassignmentreviewsettings
    :param can_extend:
    :type can_extend: bool
    :param created_by:
    :type created_by: str
    :param created_date_time:
    :type created_date_time: ~datetime.datetime
    :param description:
    :type description: str
    :param display_name:
    :type display_name: str
    :param duration_in_days:
    :type duration_in_days: int
    :param expiration_date_time:
    :type expiration_date_time: ~datetime.datetime
    :param modified_by:
    :type modified_by: str
    :param modified_date_time:
    :type modified_date_time: ~datetime.datetime
    :param questions:
    :type questions: list[~identity_governance.models.microsoftgraphaccesspackagequestion]
    :param request_approval_settings: approvalSettings.
    :type request_approval_settings: ~identity_governance.models.microsoftgraphapprovalsettings
    :param requestor_settings: requestorSettings.
    :type requestor_settings: ~identity_governance.models.microsoftgraphrequestorsettings
    :param access_package: accessPackage.
    :type access_package: ~identity_governance.models.microsoftgraphaccesspackage
    :param access_package_catalog: accessPackageCatalog.
    :type access_package_catalog: ~identity_governance.models.microsoftgraphaccesspackagecatalog
    """

    _validation = {
        'duration_in_days': {'maximum': 2147483647, 'minimum': -2147483648},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'access_package_id': {'key': 'accessPackageId', 'type': 'str'},
        'access_review_settings': {'key': 'accessReviewSettings', 'type': 'microsoftgraphassignmentreviewsettings'},
        'can_extend': {'key': 'canExtend', 'type': 'bool'},
        'created_by': {'key': 'createdBy', 'type': 'str'},
        'created_date_time': {'key': 'createdDateTime', 'type': 'iso-8601'},
        'description': {'key': 'description', 'type': 'str'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'duration_in_days': {'key': 'durationInDays', 'type': 'int'},
        'expiration_date_time': {'key': 'expirationDateTime', 'type': 'iso-8601'},
        'modified_by': {'key': 'modifiedBy', 'type': 'str'},
        'modified_date_time': {'key': 'modifiedDateTime', 'type': 'iso-8601'},
        'questions': {'key': 'questions', 'type': '[microsoftgraphaccesspackagequestion]'},
        'request_approval_settings': {'key': 'requestApprovalSettings', 'type': 'microsoftgraphapprovalsettings'},
        'requestor_settings': {'key': 'requestorSettings', 'type': 'microsoftgraphrequestorsettings'},
        'access_package': {'key': 'accessPackage', 'type': 'microsoftgraphaccesspackage'},
        'access_package_catalog': {'key': 'accessPackageCatalog', 'type': 'microsoftgraphaccesspackagecatalog'},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,
        additional_properties: Optional[Dict[str, object]] = None,
        access_package_id: Optional[str] = None,
        access_review_settings: Optional["microsoftgraphassignmentreviewsettings"] = None,
        can_extend: Optional[bool] = None,
        created_by: Optional[str] = None,
        created_date_time: Optional[datetime.datetime] = None,
        description: Optional[str] = None,
        display_name: Optional[str] = None,
        duration_in_days: Optional[int] = None,
        expiration_date_time: Optional[datetime.datetime] = None,
        modified_by: Optional[str] = None,
        modified_date_time: Optional[datetime.datetime] = None,
        questions: Optional[List["microsoftgraphaccesspackagequestion"]] = None,
        request_approval_settings: Optional["microsoftgraphapprovalsettings"] = None,
        requestor_settings: Optional["microsoftgraphrequestorsettings"] = None,
        access_package: Optional["microsoftgraphaccesspackage"] = None,
        access_package_catalog: Optional["microsoftgraphaccesspackagecatalog"] = None,
        **kwargs
    ):
        super(microsoftgraphaccesspackageassignmentpolicy, self).__init__(id=id, **kwargs)
        self.additional_properties = additional_properties
        self.access_package_id = access_package_id
        self.access_review_settings = access_review_settings
        self.can_extend = can_extend
        self.created_by = created_by
        self.created_date_time = created_date_time
        self.description = description
        self.display_name = display_name
        self.duration_in_days = duration_in_days
        self.expiration_date_time = expiration_date_time
        self.modified_by = modified_by
        self.modified_date_time = modified_date_time
        self.questions = questions
        self.request_approval_settings = request_approval_settings
        self.requestor_settings = requestor_settings
        self.access_package = access_package
        self.access_package_catalog = access_package_catalog


class microsoftgraphaccesspackageassignmentrequest(microsoftgraphentity):
    """accessPackageAssignmentRequest.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param answers:
    :type answers: list[~identity_governance.models.microsoftgraphaccesspackageanswer]
    :param completed_date:
    :type completed_date: ~datetime.datetime
    :param created_date_time:
    :type created_date_time: ~datetime.datetime
    :param expiration_date_time:
    :type expiration_date_time: ~datetime.datetime
    :param is_validation_only:
    :type is_validation_only: bool
    :param justification:
    :type justification: str
    :param request_state:
    :type request_state: str
    :param request_status:
    :type request_status: str
    :param request_type:
    :type request_type: str
    :param schedule: requestSchedule.
    :type schedule: ~identity_governance.models.microsoftgraphrequestschedule
    :param access_package: accessPackage.
    :type access_package: ~identity_governance.models.microsoftgraphaccesspackage
    :param access_package_assignment: accessPackageAssignment.
    :type access_package_assignment:
     ~identity_governance.models.microsoftgraphaccesspackageassignment
    :param requestor: accessPackageSubject.
    :type requestor: ~identity_governance.models.microsoftgraphaccesspackagesubject
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'answers': {'key': 'answers', 'type': '[microsoftgraphaccesspackageanswer]'},
        'completed_date': {'key': 'completedDate', 'type': 'iso-8601'},
        'created_date_time': {'key': 'createdDateTime', 'type': 'iso-8601'},
        'expiration_date_time': {'key': 'expirationDateTime', 'type': 'iso-8601'},
        'is_validation_only': {'key': 'isValidationOnly', 'type': 'bool'},
        'justification': {'key': 'justification', 'type': 'str'},
        'request_state': {'key': 'requestState', 'type': 'str'},
        'request_status': {'key': 'requestStatus', 'type': 'str'},
        'request_type': {'key': 'requestType', 'type': 'str'},
        'schedule': {'key': 'schedule', 'type': 'microsoftgraphrequestschedule'},
        'access_package': {'key': 'accessPackage', 'type': 'microsoftgraphaccesspackage'},
        'access_package_assignment': {'key': 'accessPackageAssignment', 'type': 'microsoftgraphaccesspackageassignment'},
        'requestor': {'key': 'requestor', 'type': 'microsoftgraphaccesspackagesubject'},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,
        additional_properties: Optional[Dict[str, object]] = None,
        answers: Optional[List["microsoftgraphaccesspackageanswer"]] = None,
        completed_date: Optional[datetime.datetime] = None,
        created_date_time: Optional[datetime.datetime] = None,
        expiration_date_time: Optional[datetime.datetime] = None,
        is_validation_only: Optional[bool] = None,
        justification: Optional[str] = None,
        request_state: Optional[str] = None,
        request_status: Optional[str] = None,
        request_type: Optional[str] = None,
        schedule: Optional["microsoftgraphrequestschedule"] = None,
        access_package: Optional["microsoftgraphaccesspackage"] = None,
        access_package_assignment: Optional["microsoftgraphaccesspackageassignment"] = None,
        requestor: Optional["microsoftgraphaccesspackagesubject"] = None,
        **kwargs
    ):
        super(microsoftgraphaccesspackageassignmentrequest, self).__init__(id=id, **kwargs)
        self.additional_properties = additional_properties
        self.answers = answers
        self.completed_date = completed_date
        self.created_date_time = created_date_time
        self.expiration_date_time = expiration_date_time
        self.is_validation_only = is_validation_only
        self.justification = justification
        self.request_state = request_state
        self.request_status = request_status
        self.request_type = request_type
        self.schedule = schedule
        self.access_package = access_package
        self.access_package_assignment = access_package_assignment
        self.requestor = requestor


class microsoftgraphaccesspackageassignmentresourcerole(microsoftgraphentity):
    """accessPackageAssignmentResourceRole.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param origin_id:
    :type origin_id: str
    :param origin_system:
    :type origin_system: str
    :param status:
    :type status: str
    :param access_package_assignments:
    :type access_package_assignments:
     list[~identity_governance.models.microsoftgraphaccesspackageassignment]
    :param access_package_resource_role: accessPackageResourceRole.
    :type access_package_resource_role:
     ~identity_governance.models.microsoftgraphaccesspackageresourcerole
    :param access_package_resource_scope: accessPackageResourceScope.
    :type access_package_resource_scope:
     ~identity_governance.models.microsoftgraphaccesspackageresourcescope
    :param access_package_subject: accessPackageSubject.
    :type access_package_subject: ~identity_governance.models.microsoftgraphaccesspackagesubject
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'origin_id': {'key': 'originId', 'type': 'str'},
        'origin_system': {'key': 'originSystem', 'type': 'str'},
        'status': {'key': 'status', 'type': 'str'},
        'access_package_assignments': {'key': 'accessPackageAssignments', 'type': '[microsoftgraphaccesspackageassignment]'},
        'access_package_resource_role': {'key': 'accessPackageResourceRole', 'type': 'microsoftgraphaccesspackageresourcerole'},
        'access_package_resource_scope': {'key': 'accessPackageResourceScope', 'type': 'microsoftgraphaccesspackageresourcescope'},
        'access_package_subject': {'key': 'accessPackageSubject', 'type': 'microsoftgraphaccesspackagesubject'},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,
        additional_properties: Optional[Dict[str, object]] = None,
        origin_id: Optional[str] = None,
        origin_system: Optional[str] = None,
        status: Optional[str] = None,
        access_package_assignments: Optional[List["microsoftgraphaccesspackageassignment"]] = None,
        access_package_resource_role: Optional["microsoftgraphaccesspackageresourcerole"] = None,
        access_package_resource_scope: Optional["microsoftgraphaccesspackageresourcescope"] = None,
        access_package_subject: Optional["microsoftgraphaccesspackagesubject"] = None,
        **kwargs
    ):
        super(microsoftgraphaccesspackageassignmentresourcerole, self).__init__(id=id, **kwargs)
        self.additional_properties = additional_properties
        self.origin_id = origin_id
        self.origin_system = origin_system
        self.status = status
        self.access_package_assignments = access_package_assignments
        self.access_package_resource_role = access_package_resource_role
        self.access_package_resource_scope = access_package_resource_scope
        self.access_package_subject = access_package_subject


class microsoftgraphaccesspackagecatalog(microsoftgraphentity):
    """accessPackageCatalog.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param catalog_status:
    :type catalog_status: str
    :param catalog_type:
    :type catalog_type: str
    :param created_by:
    :type created_by: str
    :param created_date_time:
    :type created_date_time: ~datetime.datetime
    :param description:
    :type description: str
    :param display_name:
    :type display_name: str
    :param is_externally_visible:
    :type is_externally_visible: bool
    :param modified_by:
    :type modified_by: str
    :param modified_date_time:
    :type modified_date_time: ~datetime.datetime
    :param access_package_resource_roles:
    :type access_package_resource_roles:
     list[~identity_governance.models.microsoftgraphaccesspackageresourcerole]
    :param access_package_resources:
    :type access_package_resources:
     list[~identity_governance.models.microsoftgraphaccesspackageresource]
    :param access_package_resource_scopes:
    :type access_package_resource_scopes:
     list[~identity_governance.models.microsoftgraphaccesspackageresourcescope]
    :param access_packages:
    :type access_packages: list[~identity_governance.models.microsoftgraphaccesspackage]
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'catalog_status': {'key': 'catalogStatus', 'type': 'str'},
        'catalog_type': {'key': 'catalogType', 'type': 'str'},
        'created_by': {'key': 'createdBy', 'type': 'str'},
        'created_date_time': {'key': 'createdDateTime', 'type': 'iso-8601'},
        'description': {'key': 'description', 'type': 'str'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'is_externally_visible': {'key': 'isExternallyVisible', 'type': 'bool'},
        'modified_by': {'key': 'modifiedBy', 'type': 'str'},
        'modified_date_time': {'key': 'modifiedDateTime', 'type': 'iso-8601'},
        'access_package_resource_roles': {'key': 'accessPackageResourceRoles', 'type': '[microsoftgraphaccesspackageresourcerole]'},
        'access_package_resources': {'key': 'accessPackageResources', 'type': '[microsoftgraphaccesspackageresource]'},
        'access_package_resource_scopes': {'key': 'accessPackageResourceScopes', 'type': '[microsoftgraphaccesspackageresourcescope]'},
        'access_packages': {'key': 'accessPackages', 'type': '[microsoftgraphaccesspackage]'},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,
        additional_properties: Optional[Dict[str, object]] = None,
        catalog_status: Optional[str] = None,
        catalog_type: Optional[str] = None,
        created_by: Optional[str] = None,
        created_date_time: Optional[datetime.datetime] = None,
        description: Optional[str] = None,
        display_name: Optional[str] = None,
        is_externally_visible: Optional[bool] = None,
        modified_by: Optional[str] = None,
        modified_date_time: Optional[datetime.datetime] = None,
        access_package_resource_roles: Optional[List["microsoftgraphaccesspackageresourcerole"]] = None,
        access_package_resources: Optional[List["microsoftgraphaccesspackageresource"]] = None,
        access_package_resource_scopes: Optional[List["microsoftgraphaccesspackageresourcescope"]] = None,
        access_packages: Optional[List["microsoftgraphaccesspackage"]] = None,
        **kwargs
    ):
        super(microsoftgraphaccesspackagecatalog, self).__init__(id=id, **kwargs)
        self.additional_properties = additional_properties
        self.catalog_status = catalog_status
        self.catalog_type = catalog_type
        self.created_by = created_by
        self.created_date_time = created_date_time
        self.description = description
        self.display_name = display_name
        self.is_externally_visible = is_externally_visible
        self.modified_by = modified_by
        self.modified_date_time = modified_date_time
        self.access_package_resource_roles = access_package_resource_roles
        self.access_package_resources = access_package_resources
        self.access_package_resource_scopes = access_package_resource_scopes
        self.access_packages = access_packages


class microsoftgraphaccesspackagelocalizedcontent(msrest.serialization.Model):
    """accessPackageLocalizedContent.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param default_text:
    :type default_text: str
    :param localized_texts:
    :type localized_texts:
     list[~identity_governance.models.microsoftgraphaccesspackagelocalizedtext]
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'default_text': {'key': 'defaultText', 'type': 'str'},
        'localized_texts': {'key': 'localizedTexts', 'type': '[microsoftgraphaccesspackagelocalizedtext]'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        default_text: Optional[str] = None,
        localized_texts: Optional[List["microsoftgraphaccesspackagelocalizedtext"]] = None,
        **kwargs
    ):
        super(microsoftgraphaccesspackagelocalizedcontent, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.default_text = default_text
        self.localized_texts = localized_texts


class microsoftgraphaccesspackagelocalizedtext(msrest.serialization.Model):
    """accessPackageLocalizedText.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param language_code:
    :type language_code: str
    :param text:
    :type text: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'language_code': {'key': 'languageCode', 'type': 'str'},
        'text': {'key': 'text', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        language_code: Optional[str] = None,
        text: Optional[str] = None,
        **kwargs
    ):
        super(microsoftgraphaccesspackagelocalizedtext, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.language_code = language_code
        self.text = text


class microsoftgraphaccesspackagequestion(msrest.serialization.Model):
    """accessPackageQuestion.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param id:
    :type id: str
    :param is_required:
    :type is_required: bool
    :param sequence:
    :type sequence: int
    :param text: accessPackageLocalizedContent.
    :type text: ~identity_governance.models.microsoftgraphaccesspackagelocalizedcontent
    """

    _validation = {
        'sequence': {'maximum': 2147483647, 'minimum': -2147483648},
    }

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'id': {'key': 'id', 'type': 'str'},
        'is_required': {'key': 'isRequired', 'type': 'bool'},
        'sequence': {'key': 'sequence', 'type': 'int'},
        'text': {'key': 'text', 'type': 'microsoftgraphaccesspackagelocalizedcontent'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        id: Optional[str] = None,
        is_required: Optional[bool] = None,
        sequence: Optional[int] = None,
        text: Optional["microsoftgraphaccesspackagelocalizedcontent"] = None,
        **kwargs
    ):
        super(microsoftgraphaccesspackagequestion, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.id = id
        self.is_required = is_required
        self.sequence = sequence
        self.text = text


class microsoftgraphaccesspackageresource(microsoftgraphentity):
    """accessPackageResource.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param added_by:
    :type added_by: str
    :param added_on:
    :type added_on: ~datetime.datetime
    :param attributes:
    :type attributes:
     list[~identity_governance.models.microsoftgraphaccesspackageresourceattribute]
    :param description:
    :type description: str
    :param display_name:
    :type display_name: str
    :param is_pending_onboarding:
    :type is_pending_onboarding: bool
    :param origin_id:
    :type origin_id: str
    :param origin_system:
    :type origin_system: str
    :param resource_type:
    :type resource_type: str
    :param url:
    :type url: str
    :param access_package_resource_roles:
    :type access_package_resource_roles:
     list[~identity_governance.models.microsoftgraphaccesspackageresourcerole]
    :param access_package_resource_scopes:
    :type access_package_resource_scopes:
     list[~identity_governance.models.microsoftgraphaccesspackageresourcescope]
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'added_by': {'key': 'addedBy', 'type': 'str'},
        'added_on': {'key': 'addedOn', 'type': 'iso-8601'},
        'attributes': {'key': 'attributes', 'type': '[microsoftgraphaccesspackageresourceattribute]'},
        'description': {'key': 'description', 'type': 'str'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'is_pending_onboarding': {'key': 'isPendingOnboarding', 'type': 'bool'},
        'origin_id': {'key': 'originId', 'type': 'str'},
        'origin_system': {'key': 'originSystem', 'type': 'str'},
        'resource_type': {'key': 'resourceType', 'type': 'str'},
        'url': {'key': 'url', 'type': 'str'},
        'access_package_resource_roles': {'key': 'accessPackageResourceRoles', 'type': '[microsoftgraphaccesspackageresourcerole]'},
        'access_package_resource_scopes': {'key': 'accessPackageResourceScopes', 'type': '[microsoftgraphaccesspackageresourcescope]'},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,
        additional_properties: Optional[Dict[str, object]] = None,
        added_by: Optional[str] = None,
        added_on: Optional[datetime.datetime] = None,
        attributes: Optional[List["microsoftgraphaccesspackageresourceattribute"]] = None,
        description: Optional[str] = None,
        display_name: Optional[str] = None,
        is_pending_onboarding: Optional[bool] = None,
        origin_id: Optional[str] = None,
        origin_system: Optional[str] = None,
        resource_type: Optional[str] = None,
        url: Optional[str] = None,
        access_package_resource_roles: Optional[List["microsoftgraphaccesspackageresourcerole"]] = None,
        access_package_resource_scopes: Optional[List["microsoftgraphaccesspackageresourcescope"]] = None,
        **kwargs
    ):
        super(microsoftgraphaccesspackageresource, self).__init__(id=id, **kwargs)
        self.additional_properties = additional_properties
        self.added_by = added_by
        self.added_on = added_on
        self.attributes = attributes
        self.description = description
        self.display_name = display_name
        self.is_pending_onboarding = is_pending_onboarding
        self.origin_id = origin_id
        self.origin_system = origin_system
        self.resource_type = resource_type
        self.url = url
        self.access_package_resource_roles = access_package_resource_roles
        self.access_package_resource_scopes = access_package_resource_scopes


class microsoftgraphaccesspackageresourceattribute(msrest.serialization.Model):
    """accessPackageResourceAttribute.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param attribute_destination: accessPackageResourceAttributeDestination.
    :type attribute_destination: dict[str, object]
    :param attribute_name:
    :type attribute_name: str
    :param attribute_source: accessPackageResourceAttributeSource.
    :type attribute_source: dict[str, object]
    :param id:
    :type id: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'attribute_destination': {'key': 'attributeDestination', 'type': '{object}'},
        'attribute_name': {'key': 'attributeName', 'type': 'str'},
        'attribute_source': {'key': 'attributeSource', 'type': '{object}'},
        'id': {'key': 'id', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        attribute_destination: Optional[Dict[str, object]] = None,
        attribute_name: Optional[str] = None,
        attribute_source: Optional[Dict[str, object]] = None,
        id: Optional[str] = None,
        **kwargs
    ):
        super(microsoftgraphaccesspackageresourceattribute, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.attribute_destination = attribute_destination
        self.attribute_name = attribute_name
        self.attribute_source = attribute_source
        self.id = id


class microsoftgraphaccesspackageresourcerequest(microsoftgraphentity):
    """accessPackageResourceRequest.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param catalog_id:
    :type catalog_id: str
    :param execute_immediately:
    :type execute_immediately: bool
    :param expiration_date_time:
    :type expiration_date_time: ~datetime.datetime
    :param is_validation_only:
    :type is_validation_only: bool
    :param justification:
    :type justification: str
    :param request_state:
    :type request_state: str
    :param request_status:
    :type request_status: str
    :param request_type:
    :type request_type: str
    :param access_package_resource: accessPackageResource.
    :type access_package_resource: ~identity_governance.models.microsoftgraphaccesspackageresource
    :param requestor: accessPackageSubject.
    :type requestor: ~identity_governance.models.microsoftgraphaccesspackagesubject
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'catalog_id': {'key': 'catalogId', 'type': 'str'},
        'execute_immediately': {'key': 'executeImmediately', 'type': 'bool'},
        'expiration_date_time': {'key': 'expirationDateTime', 'type': 'iso-8601'},
        'is_validation_only': {'key': 'isValidationOnly', 'type': 'bool'},
        'justification': {'key': 'justification', 'type': 'str'},
        'request_state': {'key': 'requestState', 'type': 'str'},
        'request_status': {'key': 'requestStatus', 'type': 'str'},
        'request_type': {'key': 'requestType', 'type': 'str'},
        'access_package_resource': {'key': 'accessPackageResource', 'type': 'microsoftgraphaccesspackageresource'},
        'requestor': {'key': 'requestor', 'type': 'microsoftgraphaccesspackagesubject'},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,
        additional_properties: Optional[Dict[str, object]] = None,
        catalog_id: Optional[str] = None,
        execute_immediately: Optional[bool] = None,
        expiration_date_time: Optional[datetime.datetime] = None,
        is_validation_only: Optional[bool] = None,
        justification: Optional[str] = None,
        request_state: Optional[str] = None,
        request_status: Optional[str] = None,
        request_type: Optional[str] = None,
        access_package_resource: Optional["microsoftgraphaccesspackageresource"] = None,
        requestor: Optional["microsoftgraphaccesspackagesubject"] = None,
        **kwargs
    ):
        super(microsoftgraphaccesspackageresourcerequest, self).__init__(id=id, **kwargs)
        self.additional_properties = additional_properties
        self.catalog_id = catalog_id
        self.execute_immediately = execute_immediately
        self.expiration_date_time = expiration_date_time
        self.is_validation_only = is_validation_only
        self.justification = justification
        self.request_state = request_state
        self.request_status = request_status
        self.request_type = request_type
        self.access_package_resource = access_package_resource
        self.requestor = requestor


class microsoftgraphaccesspackageresourcerole(microsoftgraphentity):
    """accessPackageResourceRole.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param description:
    :type description: str
    :param display_name:
    :type display_name: str
    :param origin_id:
    :type origin_id: str
    :param origin_system:
    :type origin_system: str
    :param access_package_resource: accessPackageResource.
    :type access_package_resource: ~identity_governance.models.microsoftgraphaccesspackageresource
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'description': {'key': 'description', 'type': 'str'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'origin_id': {'key': 'originId', 'type': 'str'},
        'origin_system': {'key': 'originSystem', 'type': 'str'},
        'access_package_resource': {'key': 'accessPackageResource', 'type': 'microsoftgraphaccesspackageresource'},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,
        additional_properties: Optional[Dict[str, object]] = None,
        description: Optional[str] = None,
        display_name: Optional[str] = None,
        origin_id: Optional[str] = None,
        origin_system: Optional[str] = None,
        access_package_resource: Optional["microsoftgraphaccesspackageresource"] = None,
        **kwargs
    ):
        super(microsoftgraphaccesspackageresourcerole, self).__init__(id=id, **kwargs)
        self.additional_properties = additional_properties
        self.description = description
        self.display_name = display_name
        self.origin_id = origin_id
        self.origin_system = origin_system
        self.access_package_resource = access_package_resource


class microsoftgraphaccesspackageresourcerolescope(microsoftgraphentity):
    """accessPackageResourceRoleScope.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param created_by:
    :type created_by: str
    :param created_date_time:
    :type created_date_time: ~datetime.datetime
    :param modified_by:
    :type modified_by: str
    :param modified_date_time:
    :type modified_date_time: ~datetime.datetime
    :param access_package_resource_role: accessPackageResourceRole.
    :type access_package_resource_role:
     ~identity_governance.models.microsoftgraphaccesspackageresourcerole
    :param access_package_resource_scope: accessPackageResourceScope.
    :type access_package_resource_scope:
     ~identity_governance.models.microsoftgraphaccesspackageresourcescope
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'created_by': {'key': 'createdBy', 'type': 'str'},
        'created_date_time': {'key': 'createdDateTime', 'type': 'iso-8601'},
        'modified_by': {'key': 'modifiedBy', 'type': 'str'},
        'modified_date_time': {'key': 'modifiedDateTime', 'type': 'iso-8601'},
        'access_package_resource_role': {'key': 'accessPackageResourceRole', 'type': 'microsoftgraphaccesspackageresourcerole'},
        'access_package_resource_scope': {'key': 'accessPackageResourceScope', 'type': 'microsoftgraphaccesspackageresourcescope'},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,
        additional_properties: Optional[Dict[str, object]] = None,
        created_by: Optional[str] = None,
        created_date_time: Optional[datetime.datetime] = None,
        modified_by: Optional[str] = None,
        modified_date_time: Optional[datetime.datetime] = None,
        access_package_resource_role: Optional["microsoftgraphaccesspackageresourcerole"] = None,
        access_package_resource_scope: Optional["microsoftgraphaccesspackageresourcescope"] = None,
        **kwargs
    ):
        super(microsoftgraphaccesspackageresourcerolescope, self).__init__(id=id, **kwargs)
        self.additional_properties = additional_properties
        self.created_by = created_by
        self.created_date_time = created_date_time
        self.modified_by = modified_by
        self.modified_date_time = modified_date_time
        self.access_package_resource_role = access_package_resource_role
        self.access_package_resource_scope = access_package_resource_scope


class microsoftgraphaccesspackageresourcescope(microsoftgraphentity):
    """accessPackageResourceScope.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param description:
    :type description: str
    :param display_name:
    :type display_name: str
    :param is_root_scope:
    :type is_root_scope: bool
    :param origin_id:
    :type origin_id: str
    :param origin_system:
    :type origin_system: str
    :param role_origin_id:
    :type role_origin_id: str
    :param url:
    :type url: str
    :param access_package_resource: accessPackageResource.
    :type access_package_resource: ~identity_governance.models.microsoftgraphaccesspackageresource
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'description': {'key': 'description', 'type': 'str'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'is_root_scope': {'key': 'isRootScope', 'type': 'bool'},
        'origin_id': {'key': 'originId', 'type': 'str'},
        'origin_system': {'key': 'originSystem', 'type': 'str'},
        'role_origin_id': {'key': 'roleOriginId', 'type': 'str'},
        'url': {'key': 'url', 'type': 'str'},
        'access_package_resource': {'key': 'accessPackageResource', 'type': 'microsoftgraphaccesspackageresource'},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,
        additional_properties: Optional[Dict[str, object]] = None,
        description: Optional[str] = None,
        display_name: Optional[str] = None,
        is_root_scope: Optional[bool] = None,
        origin_id: Optional[str] = None,
        origin_system: Optional[str] = None,
        role_origin_id: Optional[str] = None,
        url: Optional[str] = None,
        access_package_resource: Optional["microsoftgraphaccesspackageresource"] = None,
        **kwargs
    ):
        super(microsoftgraphaccesspackageresourcescope, self).__init__(id=id, **kwargs)
        self.additional_properties = additional_properties
        self.description = description
        self.display_name = display_name
        self.is_root_scope = is_root_scope
        self.origin_id = origin_id
        self.origin_system = origin_system
        self.role_origin_id = role_origin_id
        self.url = url
        self.access_package_resource = access_package_resource


class microsoftgraphaccesspackagesubject(microsoftgraphentity):
    """accessPackageSubject.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param alt_sec_id:
    :type alt_sec_id: str
    :param connected_organization_id:
    :type connected_organization_id: str
    :param display_name:
    :type display_name: str
    :param email:
    :type email: str
    :param object_id:
    :type object_id: str
    :param on_premises_security_identifier:
    :type on_premises_security_identifier: str
    :param principal_name:
    :type principal_name: str
    :param type:
    :type type: str
    :param connected_organization: connectedOrganization.
    :type connected_organization: ~identity_governance.models.microsoftgraphconnectedorganization
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'alt_sec_id': {'key': 'altSecId', 'type': 'str'},
        'connected_organization_id': {'key': 'connectedOrganizationId', 'type': 'str'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'email': {'key': 'email', 'type': 'str'},
        'object_id': {'key': 'objectId', 'type': 'str'},
        'on_premises_security_identifier': {'key': 'onPremisesSecurityIdentifier', 'type': 'str'},
        'principal_name': {'key': 'principalName', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'connected_organization': {'key': 'connectedOrganization', 'type': 'microsoftgraphconnectedorganization'},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,
        additional_properties: Optional[Dict[str, object]] = None,
        alt_sec_id: Optional[str] = None,
        connected_organization_id: Optional[str] = None,
        display_name: Optional[str] = None,
        email: Optional[str] = None,
        object_id: Optional[str] = None,
        on_premises_security_identifier: Optional[str] = None,
        principal_name: Optional[str] = None,
        type: Optional[str] = None,
        connected_organization: Optional["microsoftgraphconnectedorganization"] = None,
        **kwargs
    ):
        super(microsoftgraphaccesspackagesubject, self).__init__(id=id, **kwargs)
        self.additional_properties = additional_properties
        self.alt_sec_id = alt_sec_id
        self.connected_organization_id = connected_organization_id
        self.display_name = display_name
        self.email = email
        self.object_id = object_id
        self.on_premises_security_identifier = on_premises_security_identifier
        self.principal_name = principal_name
        self.type = type
        self.connected_organization = connected_organization


class microsoftgraphaccessreview(microsoftgraphentity):
    """accessReview.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param business_flow_template_id:
    :type business_flow_template_id: str
    :param created_by: userIdentity.
    :type created_by: ~identity_governance.models.microsoftgraphuseridentity
    :param description:
    :type description: str
    :param display_name:
    :type display_name: str
    :param end_date_time:
    :type end_date_time: ~datetime.datetime
    :param reviewed_entity: identity.
    :type reviewed_entity: ~identity_governance.models.microsoftgraphidentity
    :param reviewer_type:
    :type reviewer_type: str
    :param settings: accessReviewSettings.
    :type settings: ~identity_governance.models.microsoftgraphaccessreviewsettings
    :param start_date_time:
    :type start_date_time: ~datetime.datetime
    :param status:
    :type status: str
    :param decisions:
    :type decisions: list[~identity_governance.models.microsoftgraphaccessreviewdecision]
    :param instances:
    :type instances: list[~identity_governance.models.microsoftgraphaccessreview]
    :param my_decisions:
    :type my_decisions: list[~identity_governance.models.microsoftgraphaccessreviewdecision]
    :param reviewers:
    :type reviewers: list[~identity_governance.models.microsoftgraphaccessreviewreviewer]
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'business_flow_template_id': {'key': 'businessFlowTemplateId', 'type': 'str'},
        'created_by': {'key': 'createdBy', 'type': 'microsoftgraphuseridentity'},
        'description': {'key': 'description', 'type': 'str'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'end_date_time': {'key': 'endDateTime', 'type': 'iso-8601'},
        'reviewed_entity': {'key': 'reviewedEntity', 'type': 'microsoftgraphidentity'},
        'reviewer_type': {'key': 'reviewerType', 'type': 'str'},
        'settings': {'key': 'settings', 'type': 'microsoftgraphaccessreviewsettings'},
        'start_date_time': {'key': 'startDateTime', 'type': 'iso-8601'},
        'status': {'key': 'status', 'type': 'str'},
        'decisions': {'key': 'decisions', 'type': '[microsoftgraphaccessreviewdecision]'},
        'instances': {'key': 'instances', 'type': '[microsoftgraphaccessreview]'},
        'my_decisions': {'key': 'myDecisions', 'type': '[microsoftgraphaccessreviewdecision]'},
        'reviewers': {'key': 'reviewers', 'type': '[microsoftgraphaccessreviewreviewer]'},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,
        additional_properties: Optional[Dict[str, object]] = None,
        business_flow_template_id: Optional[str] = None,
        created_by: Optional["microsoftgraphuseridentity"] = None,
        description: Optional[str] = None,
        display_name: Optional[str] = None,
        end_date_time: Optional[datetime.datetime] = None,
        reviewed_entity: Optional["microsoftgraphidentity"] = None,
        reviewer_type: Optional[str] = None,
        settings: Optional["microsoftgraphaccessreviewsettings"] = None,
        start_date_time: Optional[datetime.datetime] = None,
        status: Optional[str] = None,
        decisions: Optional[List["microsoftgraphaccessreviewdecision"]] = None,
        instances: Optional[List["microsoftgraphaccessreview"]] = None,
        my_decisions: Optional[List["microsoftgraphaccessreviewdecision"]] = None,
        reviewers: Optional[List["microsoftgraphaccessreviewreviewer"]] = None,
        **kwargs
    ):
        super(microsoftgraphaccessreview, self).__init__(id=id, **kwargs)
        self.additional_properties = additional_properties
        self.business_flow_template_id = business_flow_template_id
        self.created_by = created_by
        self.description = description
        self.display_name = display_name
        self.end_date_time = end_date_time
        self.reviewed_entity = reviewed_entity
        self.reviewer_type = reviewer_type
        self.settings = settings
        self.start_date_time = start_date_time
        self.status = status
        self.decisions = decisions
        self.instances = instances
        self.my_decisions = my_decisions
        self.reviewers = reviewers


class microsoftgraphaccessreviewdecision(microsoftgraphentity):
    """accessReviewDecision.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param access_recommendation:
    :type access_recommendation: str
    :param access_review_id:
    :type access_review_id: str
    :param applied_by: userIdentity.
    :type applied_by: ~identity_governance.models.microsoftgraphuseridentity
    :param applied_date_time:
    :type applied_date_time: ~datetime.datetime
    :param apply_result:
    :type apply_result: str
    :param justification:
    :type justification: str
    :param reviewed_by: userIdentity.
    :type reviewed_by: ~identity_governance.models.microsoftgraphuseridentity
    :param reviewed_date_time:
    :type reviewed_date_time: ~datetime.datetime
    :param review_result:
    :type review_result: str
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'access_recommendation': {'key': 'accessRecommendation', 'type': 'str'},
        'access_review_id': {'key': 'accessReviewId', 'type': 'str'},
        'applied_by': {'key': 'appliedBy', 'type': 'microsoftgraphuseridentity'},
        'applied_date_time': {'key': 'appliedDateTime', 'type': 'iso-8601'},
        'apply_result': {'key': 'applyResult', 'type': 'str'},
        'justification': {'key': 'justification', 'type': 'str'},
        'reviewed_by': {'key': 'reviewedBy', 'type': 'microsoftgraphuseridentity'},
        'reviewed_date_time': {'key': 'reviewedDateTime', 'type': 'iso-8601'},
        'review_result': {'key': 'reviewResult', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,
        additional_properties: Optional[Dict[str, object]] = None,
        access_recommendation: Optional[str] = None,
        access_review_id: Optional[str] = None,
        applied_by: Optional["microsoftgraphuseridentity"] = None,
        applied_date_time: Optional[datetime.datetime] = None,
        apply_result: Optional[str] = None,
        justification: Optional[str] = None,
        reviewed_by: Optional["microsoftgraphuseridentity"] = None,
        reviewed_date_time: Optional[datetime.datetime] = None,
        review_result: Optional[str] = None,
        **kwargs
    ):
        super(microsoftgraphaccessreviewdecision, self).__init__(id=id, **kwargs)
        self.additional_properties = additional_properties
        self.access_recommendation = access_recommendation
        self.access_review_id = access_review_id
        self.applied_by = applied_by
        self.applied_date_time = applied_date_time
        self.apply_result = apply_result
        self.justification = justification
        self.reviewed_by = reviewed_by
        self.reviewed_date_time = reviewed_date_time
        self.review_result = review_result


class microsoftgraphaccessreviewrecurrencesettings(msrest.serialization.Model):
    """accessReviewRecurrenceSettings.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param duration_in_days:
    :type duration_in_days: int
    :param recurrence_count:
    :type recurrence_count: int
    :param recurrence_end_type:
    :type recurrence_end_type: str
    :param recurrence_type:
    :type recurrence_type: str
    """

    _validation = {
        'duration_in_days': {'maximum': 2147483647, 'minimum': -2147483648},
        'recurrence_count': {'maximum': 2147483647, 'minimum': -2147483648},
    }

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'duration_in_days': {'key': 'durationInDays', 'type': 'int'},
        'recurrence_count': {'key': 'recurrenceCount', 'type': 'int'},
        'recurrence_end_type': {'key': 'recurrenceEndType', 'type': 'str'},
        'recurrence_type': {'key': 'recurrenceType', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        duration_in_days: Optional[int] = None,
        recurrence_count: Optional[int] = None,
        recurrence_end_type: Optional[str] = None,
        recurrence_type: Optional[str] = None,
        **kwargs
    ):
        super(microsoftgraphaccessreviewrecurrencesettings, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.duration_in_days = duration_in_days
        self.recurrence_count = recurrence_count
        self.recurrence_end_type = recurrence_end_type
        self.recurrence_type = recurrence_type


class microsoftgraphaccessreviewreviewer(microsoftgraphentity):
    """accessReviewReviewer.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param display_name:
    :type display_name: str
    :param user_principal_name:
    :type user_principal_name: str
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'user_principal_name': {'key': 'userPrincipalName', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,
        additional_properties: Optional[Dict[str, object]] = None,
        display_name: Optional[str] = None,
        user_principal_name: Optional[str] = None,
        **kwargs
    ):
        super(microsoftgraphaccessreviewreviewer, self).__init__(id=id, **kwargs)
        self.additional_properties = additional_properties
        self.display_name = display_name
        self.user_principal_name = user_principal_name


class microsoftgraphaccessreviewsettings(msrest.serialization.Model):
    """accessReviewSettings.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param access_recommendations_enabled:
    :type access_recommendations_enabled: bool
    :param activity_duration_in_days:
    :type activity_duration_in_days: int
    :param auto_apply_review_results_enabled:
    :type auto_apply_review_results_enabled: bool
    :param auto_review_enabled:
    :type auto_review_enabled: bool
    :param auto_review_settings: autoReviewSettings.
    :type auto_review_settings: ~identity_governance.models.microsoftgraphautoreviewsettings
    :param justification_required_on_approval:
    :type justification_required_on_approval: bool
    :param mail_notifications_enabled:
    :type mail_notifications_enabled: bool
    :param recurrence_settings: accessReviewRecurrenceSettings.
    :type recurrence_settings:
     ~identity_governance.models.microsoftgraphaccessreviewrecurrencesettings
    :param reminders_enabled:
    :type reminders_enabled: bool
    """

    _validation = {
        'activity_duration_in_days': {'maximum': 2147483647, 'minimum': -2147483648},
    }

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'access_recommendations_enabled': {'key': 'accessRecommendationsEnabled', 'type': 'bool'},
        'activity_duration_in_days': {'key': 'activityDurationInDays', 'type': 'int'},
        'auto_apply_review_results_enabled': {'key': 'autoApplyReviewResultsEnabled', 'type': 'bool'},
        'auto_review_enabled': {'key': 'autoReviewEnabled', 'type': 'bool'},
        'auto_review_settings': {'key': 'autoReviewSettings', 'type': 'microsoftgraphautoreviewsettings'},
        'justification_required_on_approval': {'key': 'justificationRequiredOnApproval', 'type': 'bool'},
        'mail_notifications_enabled': {'key': 'mailNotificationsEnabled', 'type': 'bool'},
        'recurrence_settings': {'key': 'recurrenceSettings', 'type': 'microsoftgraphaccessreviewrecurrencesettings'},
        'reminders_enabled': {'key': 'remindersEnabled', 'type': 'bool'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        access_recommendations_enabled: Optional[bool] = None,
        activity_duration_in_days: Optional[int] = None,
        auto_apply_review_results_enabled: Optional[bool] = None,
        auto_review_enabled: Optional[bool] = None,
        auto_review_settings: Optional["microsoftgraphautoreviewsettings"] = None,
        justification_required_on_approval: Optional[bool] = None,
        mail_notifications_enabled: Optional[bool] = None,
        recurrence_settings: Optional["microsoftgraphaccessreviewrecurrencesettings"] = None,
        reminders_enabled: Optional[bool] = None,
        **kwargs
    ):
        super(microsoftgraphaccessreviewsettings, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.access_recommendations_enabled = access_recommendations_enabled
        self.activity_duration_in_days = activity_duration_in_days
        self.auto_apply_review_results_enabled = auto_apply_review_results_enabled
        self.auto_review_enabled = auto_review_enabled
        self.auto_review_settings = auto_review_settings
        self.justification_required_on_approval = justification_required_on_approval
        self.mail_notifications_enabled = mail_notifications_enabled
        self.recurrence_settings = recurrence_settings
        self.reminders_enabled = reminders_enabled


class microsoftgraphagreement(microsoftgraphentity):
    """agreement.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param display_name:
    :type display_name: str
    :param is_per_device_acceptance_required:
    :type is_per_device_acceptance_required: bool
    :param is_viewing_before_acceptance_required:
    :type is_viewing_before_acceptance_required: bool
    :param terms_expiration: termsExpiration.
    :type terms_expiration: ~identity_governance.models.microsoftgraphtermsexpiration
    :param user_reaccept_required_frequency:
    :type user_reaccept_required_frequency: ~datetime.timedelta
    :param acceptances:
    :type acceptances: list[~identity_governance.models.microsoftgraphagreementacceptance]
    :param file: agreementFile.
    :type file: ~identity_governance.models.microsoftgraphagreementfile
    :param files:
    :type files: list[~identity_governance.models.microsoftgraphagreementfilelocalization]
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'is_per_device_acceptance_required': {'key': 'isPerDeviceAcceptanceRequired', 'type': 'bool'},
        'is_viewing_before_acceptance_required': {'key': 'isViewingBeforeAcceptanceRequired', 'type': 'bool'},
        'terms_expiration': {'key': 'termsExpiration', 'type': 'microsoftgraphtermsexpiration'},
        'user_reaccept_required_frequency': {'key': 'userReacceptRequiredFrequency', 'type': 'duration'},
        'acceptances': {'key': 'acceptances', 'type': '[microsoftgraphagreementacceptance]'},
        'file': {'key': 'file', 'type': 'microsoftgraphagreementfile'},
        'files': {'key': 'files', 'type': '[microsoftgraphagreementfilelocalization]'},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,
        additional_properties: Optional[Dict[str, object]] = None,
        display_name: Optional[str] = None,
        is_per_device_acceptance_required: Optional[bool] = None,
        is_viewing_before_acceptance_required: Optional[bool] = None,
        terms_expiration: Optional["microsoftgraphtermsexpiration"] = None,
        user_reaccept_required_frequency: Optional[datetime.timedelta] = None,
        acceptances: Optional[List["microsoftgraphagreementacceptance"]] = None,
        file: Optional["microsoftgraphagreementfile"] = None,
        files: Optional[List["microsoftgraphagreementfilelocalization"]] = None,
        **kwargs
    ):
        super(microsoftgraphagreement, self).__init__(id=id, **kwargs)
        self.additional_properties = additional_properties
        self.display_name = display_name
        self.is_per_device_acceptance_required = is_per_device_acceptance_required
        self.is_viewing_before_acceptance_required = is_viewing_before_acceptance_required
        self.terms_expiration = terms_expiration
        self.user_reaccept_required_frequency = user_reaccept_required_frequency
        self.acceptances = acceptances
        self.file = file
        self.files = files


class microsoftgraphagreementacceptance(microsoftgraphentity):
    """agreementAcceptance.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param agreement_file_id:
    :type agreement_file_id: str
    :param agreement_id:
    :type agreement_id: str
    :param device_display_name:
    :type device_display_name: str
    :param device_id:
    :type device_id: str
    :param device_os_type:
    :type device_os_type: str
    :param device_os_version:
    :type device_os_version: str
    :param expiration_date_time:
    :type expiration_date_time: ~datetime.datetime
    :param recorded_date_time:
    :type recorded_date_time: ~datetime.datetime
    :param state:  Possible values include: "accepted", "declined", "unknownFutureValue".
    :type state: str or ~identity_governance.models.Microsoftgraphagreementacceptancestate
    :param user_display_name:
    :type user_display_name: str
    :param user_email:
    :type user_email: str
    :param user_id:
    :type user_id: str
    :param user_principal_name:
    :type user_principal_name: str
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'agreement_file_id': {'key': 'agreementFileId', 'type': 'str'},
        'agreement_id': {'key': 'agreementId', 'type': 'str'},
        'device_display_name': {'key': 'deviceDisplayName', 'type': 'str'},
        'device_id': {'key': 'deviceId', 'type': 'str'},
        'device_os_type': {'key': 'deviceOSType', 'type': 'str'},
        'device_os_version': {'key': 'deviceOSVersion', 'type': 'str'},
        'expiration_date_time': {'key': 'expirationDateTime', 'type': 'iso-8601'},
        'recorded_date_time': {'key': 'recordedDateTime', 'type': 'iso-8601'},
        'state': {'key': 'state', 'type': 'str'},
        'user_display_name': {'key': 'userDisplayName', 'type': 'str'},
        'user_email': {'key': 'userEmail', 'type': 'str'},
        'user_id': {'key': 'userId', 'type': 'str'},
        'user_principal_name': {'key': 'userPrincipalName', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,
        additional_properties: Optional[Dict[str, object]] = None,
        agreement_file_id: Optional[str] = None,
        agreement_id: Optional[str] = None,
        device_display_name: Optional[str] = None,
        device_id: Optional[str] = None,
        device_os_type: Optional[str] = None,
        device_os_version: Optional[str] = None,
        expiration_date_time: Optional[datetime.datetime] = None,
        recorded_date_time: Optional[datetime.datetime] = None,
        state: Optional[Union[str, "Microsoftgraphagreementacceptancestate"]] = None,
        user_display_name: Optional[str] = None,
        user_email: Optional[str] = None,
        user_id: Optional[str] = None,
        user_principal_name: Optional[str] = None,
        **kwargs
    ):
        super(microsoftgraphagreementacceptance, self).__init__(id=id, **kwargs)
        self.additional_properties = additional_properties
        self.agreement_file_id = agreement_file_id
        self.agreement_id = agreement_id
        self.device_display_name = device_display_name
        self.device_id = device_id
        self.device_os_type = device_os_type
        self.device_os_version = device_os_version
        self.expiration_date_time = expiration_date_time
        self.recorded_date_time = recorded_date_time
        self.state = state
        self.user_display_name = user_display_name
        self.user_email = user_email
        self.user_id = user_id
        self.user_principal_name = user_principal_name


class microsoftgraphagreementfileproperties(microsoftgraphentity):
    """agreementFileProperties.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param file_data: agreementFileData.
    :type file_data: ~identity_governance.models.microsoftgraphagreementfiledata
    :param file_name:
    :type file_name: str
    :param is_default:
    :type is_default: bool
    :param language:
    :type language: str
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'file_data': {'key': 'fileData', 'type': 'microsoftgraphagreementfiledata'},
        'file_name': {'key': 'fileName', 'type': 'str'},
        'is_default': {'key': 'isDefault', 'type': 'bool'},
        'language': {'key': 'language', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,
        additional_properties: Optional[Dict[str, object]] = None,
        file_data: Optional["microsoftgraphagreementfiledata"] = None,
        file_name: Optional[str] = None,
        is_default: Optional[bool] = None,
        language: Optional[str] = None,
        **kwargs
    ):
        super(microsoftgraphagreementfileproperties, self).__init__(id=id, **kwargs)
        self.additional_properties = additional_properties
        self.file_data = file_data
        self.file_name = file_name
        self.is_default = is_default
        self.language = language


class microsoftgraphagreementfile(microsoftgraphagreementfileproperties):
    """agreementFile.

    :param id: Read-only.
    :type id: str
    :param file_data: agreementFileData.
    :type file_data: ~identity_governance.models.microsoftgraphagreementfiledata
    :param file_name:
    :type file_name: str
    :param is_default:
    :type is_default: bool
    :param language:
    :type language: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param localizations:
    :type localizations: list[~identity_governance.models.microsoftgraphagreementfilelocalization]
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'file_data': {'key': 'fileData', 'type': 'microsoftgraphagreementfiledata'},
        'file_name': {'key': 'fileName', 'type': 'str'},
        'is_default': {'key': 'isDefault', 'type': 'bool'},
        'language': {'key': 'language', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'localizations': {'key': 'localizations', 'type': '[microsoftgraphagreementfilelocalization]'},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,
        file_data: Optional["microsoftgraphagreementfiledata"] = None,
        file_name: Optional[str] = None,
        is_default: Optional[bool] = None,
        language: Optional[str] = None,
        additional_properties: Optional[Dict[str, object]] = None,
        localizations: Optional[List["microsoftgraphagreementfilelocalization"]] = None,
        **kwargs
    ):
        super(microsoftgraphagreementfile, self).__init__(id=id, file_data=file_data, file_name=file_name, is_default=is_default, language=language, **kwargs)
        self.additional_properties = additional_properties
        self.localizations = localizations


class microsoftgraphagreementfiledata(msrest.serialization.Model):
    """agreementFileData.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param data:
    :type data: bytes
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'data': {'key': 'data', 'type': 'base64'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        data: Optional[bytes] = None,
        **kwargs
    ):
        super(microsoftgraphagreementfiledata, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.data = data


class microsoftgraphagreementfilelocalization(microsoftgraphagreementfileproperties):
    """agreementFileLocalization.

    :param id: Read-only.
    :type id: str
    :param file_data: agreementFileData.
    :type file_data: ~identity_governance.models.microsoftgraphagreementfiledata
    :param file_name:
    :type file_name: str
    :param is_default:
    :type is_default: bool
    :param language:
    :type language: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'file_data': {'key': 'fileData', 'type': 'microsoftgraphagreementfiledata'},
        'file_name': {'key': 'fileName', 'type': 'str'},
        'is_default': {'key': 'isDefault', 'type': 'bool'},
        'language': {'key': 'language', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,
        file_data: Optional["microsoftgraphagreementfiledata"] = None,
        file_name: Optional[str] = None,
        is_default: Optional[bool] = None,
        language: Optional[str] = None,
        additional_properties: Optional[Dict[str, object]] = None,
        **kwargs
    ):
        super(microsoftgraphagreementfilelocalization, self).__init__(id=id, file_data=file_data, file_name=file_name, is_default=is_default, language=language, **kwargs)
        self.additional_properties = additional_properties


class microsoftgraphapprovalsettings(msrest.serialization.Model):
    """approvalSettings.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param approval_mode:
    :type approval_mode: str
    :param approval_stages:
    :type approval_stages: list[~identity_governance.models.microsoftgraphapprovalstage]
    :param is_approval_required:
    :type is_approval_required: bool
    :param is_approval_required_for_extension:
    :type is_approval_required_for_extension: bool
    :param is_requestor_justification_required:
    :type is_requestor_justification_required: bool
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'approval_mode': {'key': 'approvalMode', 'type': 'str'},
        'approval_stages': {'key': 'approvalStages', 'type': '[microsoftgraphapprovalstage]'},
        'is_approval_required': {'key': 'isApprovalRequired', 'type': 'bool'},
        'is_approval_required_for_extension': {'key': 'isApprovalRequiredForExtension', 'type': 'bool'},
        'is_requestor_justification_required': {'key': 'isRequestorJustificationRequired', 'type': 'bool'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        approval_mode: Optional[str] = None,
        approval_stages: Optional[List["microsoftgraphapprovalstage"]] = None,
        is_approval_required: Optional[bool] = None,
        is_approval_required_for_extension: Optional[bool] = None,
        is_requestor_justification_required: Optional[bool] = None,
        **kwargs
    ):
        super(microsoftgraphapprovalsettings, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.approval_mode = approval_mode
        self.approval_stages = approval_stages
        self.is_approval_required = is_approval_required
        self.is_approval_required_for_extension = is_approval_required_for_extension
        self.is_requestor_justification_required = is_requestor_justification_required


class microsoftgraphapprovalstage(msrest.serialization.Model):
    """approvalStage.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param approval_stage_time_out_in_days:
    :type approval_stage_time_out_in_days: int
    :param escalation_approvers:
    :type escalation_approvers: list[~identity_governance.models.microsoftgraphuserset]
    :param escalation_time_in_minutes:
    :type escalation_time_in_minutes: int
    :param is_approver_justification_required:
    :type is_approver_justification_required: bool
    :param is_escalation_enabled:
    :type is_escalation_enabled: bool
    :param primary_approvers:
    :type primary_approvers: list[~identity_governance.models.microsoftgraphuserset]
    """

    _validation = {
        'approval_stage_time_out_in_days': {'maximum': 2147483647, 'minimum': -2147483648},
        'escalation_time_in_minutes': {'maximum': 2147483647, 'minimum': -2147483648},
    }

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'approval_stage_time_out_in_days': {'key': 'approvalStageTimeOutInDays', 'type': 'int'},
        'escalation_approvers': {'key': 'escalationApprovers', 'type': '[microsoftgraphuserset]'},
        'escalation_time_in_minutes': {'key': 'escalationTimeInMinutes', 'type': 'int'},
        'is_approver_justification_required': {'key': 'isApproverJustificationRequired', 'type': 'bool'},
        'is_escalation_enabled': {'key': 'isEscalationEnabled', 'type': 'bool'},
        'primary_approvers': {'key': 'primaryApprovers', 'type': '[microsoftgraphuserset]'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        approval_stage_time_out_in_days: Optional[int] = None,
        escalation_approvers: Optional[List["microsoftgraphuserset"]] = None,
        escalation_time_in_minutes: Optional[int] = None,
        is_approver_justification_required: Optional[bool] = None,
        is_escalation_enabled: Optional[bool] = None,
        primary_approvers: Optional[List["microsoftgraphuserset"]] = None,
        **kwargs
    ):
        super(microsoftgraphapprovalstage, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.approval_stage_time_out_in_days = approval_stage_time_out_in_days
        self.escalation_approvers = escalation_approvers
        self.escalation_time_in_minutes = escalation_time_in_minutes
        self.is_approver_justification_required = is_approver_justification_required
        self.is_escalation_enabled = is_escalation_enabled
        self.primary_approvers = primary_approvers


class microsoftgraphassignmentreviewsettings(msrest.serialization.Model):
    """assignmentReviewSettings.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param duration_in_days:
    :type duration_in_days: int
    :param is_enabled:
    :type is_enabled: bool
    :param recurrence_type:
    :type recurrence_type: str
    :param reviewers:
    :type reviewers: list[~identity_governance.models.microsoftgraphuserset]
    :param reviewer_type:
    :type reviewer_type: str
    :param start_date_time:
    :type start_date_time: ~datetime.datetime
    """

    _validation = {
        'duration_in_days': {'maximum': 2147483647, 'minimum': -2147483648},
    }

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'duration_in_days': {'key': 'durationInDays', 'type': 'int'},
        'is_enabled': {'key': 'isEnabled', 'type': 'bool'},
        'recurrence_type': {'key': 'recurrenceType', 'type': 'str'},
        'reviewers': {'key': 'reviewers', 'type': '[microsoftgraphuserset]'},
        'reviewer_type': {'key': 'reviewerType', 'type': 'str'},
        'start_date_time': {'key': 'startDateTime', 'type': 'iso-8601'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        duration_in_days: Optional[int] = None,
        is_enabled: Optional[bool] = None,
        recurrence_type: Optional[str] = None,
        reviewers: Optional[List["microsoftgraphuserset"]] = None,
        reviewer_type: Optional[str] = None,
        start_date_time: Optional[datetime.datetime] = None,
        **kwargs
    ):
        super(microsoftgraphassignmentreviewsettings, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.duration_in_days = duration_in_days
        self.is_enabled = is_enabled
        self.recurrence_type = recurrence_type
        self.reviewers = reviewers
        self.reviewer_type = reviewer_type
        self.start_date_time = start_date_time


class microsoftgraphautoreviewsettings(msrest.serialization.Model):
    """autoReviewSettings.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param not_reviewed_result:
    :type not_reviewed_result: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'not_reviewed_result': {'key': 'notReviewedResult', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        not_reviewed_result: Optional[str] = None,
        **kwargs
    ):
        super(microsoftgraphautoreviewsettings, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.not_reviewed_result = not_reviewed_result


class microsoftgraphbusinessflowtemplate(microsoftgraphentity):
    """businessFlowTemplate.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param display_name:
    :type display_name: str
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'display_name': {'key': 'displayName', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,
        additional_properties: Optional[Dict[str, object]] = None,
        display_name: Optional[str] = None,
        **kwargs
    ):
        super(microsoftgraphbusinessflowtemplate, self).__init__(id=id, **kwargs)
        self.additional_properties = additional_properties
        self.display_name = display_name


class microsoftgraphconnectedorganization(microsoftgraphentity):
    """connectedOrganization.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param created_by:
    :type created_by: str
    :param created_date_time:
    :type created_date_time: ~datetime.datetime
    :param description:
    :type description: str
    :param display_name:
    :type display_name: str
    :param identity_sources:
    :type identity_sources: list[dict[str, object]]
    :param modified_by:
    :type modified_by: str
    :param modified_date_time:
    :type modified_date_time: ~datetime.datetime
    :param state:  Possible values include: "configured", "proposed", "unknownFutureValue".
    :type state: str or ~identity_governance.models.Microsoftgraphconnectedorganizationstate
    :param external_sponsors:
    :type external_sponsors: list[~identity_governance.models.microsoftgraphdirectoryobject]
    :param internal_sponsors:
    :type internal_sponsors: list[~identity_governance.models.microsoftgraphdirectoryobject]
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'created_by': {'key': 'createdBy', 'type': 'str'},
        'created_date_time': {'key': 'createdDateTime', 'type': 'iso-8601'},
        'description': {'key': 'description', 'type': 'str'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'identity_sources': {'key': 'identitySources', 'type': '[{object}]'},
        'modified_by': {'key': 'modifiedBy', 'type': 'str'},
        'modified_date_time': {'key': 'modifiedDateTime', 'type': 'iso-8601'},
        'state': {'key': 'state', 'type': 'str'},
        'external_sponsors': {'key': 'externalSponsors', 'type': '[microsoftgraphdirectoryobject]'},
        'internal_sponsors': {'key': 'internalSponsors', 'type': '[microsoftgraphdirectoryobject]'},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,
        additional_properties: Optional[Dict[str, object]] = None,
        created_by: Optional[str] = None,
        created_date_time: Optional[datetime.datetime] = None,
        description: Optional[str] = None,
        display_name: Optional[str] = None,
        identity_sources: Optional[List[Dict[str, object]]] = None,
        modified_by: Optional[str] = None,
        modified_date_time: Optional[datetime.datetime] = None,
        state: Optional[Union[str, "Microsoftgraphconnectedorganizationstate"]] = None,
        external_sponsors: Optional[List["microsoftgraphdirectoryobject"]] = None,
        internal_sponsors: Optional[List["microsoftgraphdirectoryobject"]] = None,
        **kwargs
    ):
        super(microsoftgraphconnectedorganization, self).__init__(id=id, **kwargs)
        self.additional_properties = additional_properties
        self.created_by = created_by
        self.created_date_time = created_date_time
        self.description = description
        self.display_name = display_name
        self.identity_sources = identity_sources
        self.modified_by = modified_by
        self.modified_date_time = modified_date_time
        self.state = state
        self.external_sponsors = external_sponsors
        self.internal_sponsors = internal_sponsors


class microsoftgraphdirectoryobject(microsoftgraphentity):
    """Represents an Azure Active Directory object. The directoryObject type is the base type for many other directory entity types.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param deleted_date_time:
    :type deleted_date_time: ~datetime.datetime
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'deleted_date_time': {'key': 'deletedDateTime', 'type': 'iso-8601'},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,
        additional_properties: Optional[Dict[str, object]] = None,
        deleted_date_time: Optional[datetime.datetime] = None,
        **kwargs
    ):
        super(microsoftgraphdirectoryobject, self).__init__(id=id, **kwargs)
        self.additional_properties = additional_properties
        self.deleted_date_time = deleted_date_time


class microsoftgraphentitlementmanagement(microsoftgraphentity):
    """entitlementManagement.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param access_package_assignment_policies:
    :type access_package_assignment_policies:
     list[~identity_governance.models.microsoftgraphaccesspackageassignmentpolicy]
    :param access_package_assignment_requests:
    :type access_package_assignment_requests:
     list[~identity_governance.models.microsoftgraphaccesspackageassignmentrequest]
    :param access_package_assignment_resource_roles:
    :type access_package_assignment_resource_roles:
     list[~identity_governance.models.microsoftgraphaccesspackageassignmentresourcerole]
    :param access_package_assignments:
    :type access_package_assignments:
     list[~identity_governance.models.microsoftgraphaccesspackageassignment]
    :param access_package_catalogs:
    :type access_package_catalogs:
     list[~identity_governance.models.microsoftgraphaccesspackagecatalog]
    :param access_package_resource_requests:
    :type access_package_resource_requests:
     list[~identity_governance.models.microsoftgraphaccesspackageresourcerequest]
    :param access_package_resource_role_scopes:
    :type access_package_resource_role_scopes:
     list[~identity_governance.models.microsoftgraphaccesspackageresourcerolescope]
    :param access_package_resources:
    :type access_package_resources:
     list[~identity_governance.models.microsoftgraphaccesspackageresource]
    :param access_packages:
    :type access_packages: list[~identity_governance.models.microsoftgraphaccesspackage]
    :param connected_organizations:
    :type connected_organizations:
     list[~identity_governance.models.microsoftgraphconnectedorganization]
    :param settings: entitlementManagementSettings.
    :type settings: ~identity_governance.models.microsoftgraphentitlementmanagementsettings
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'access_package_assignment_policies': {'key': 'accessPackageAssignmentPolicies', 'type': '[microsoftgraphaccesspackageassignmentpolicy]'},
        'access_package_assignment_requests': {'key': 'accessPackageAssignmentRequests', 'type': '[microsoftgraphaccesspackageassignmentrequest]'},
        'access_package_assignment_resource_roles': {'key': 'accessPackageAssignmentResourceRoles', 'type': '[microsoftgraphaccesspackageassignmentresourcerole]'},
        'access_package_assignments': {'key': 'accessPackageAssignments', 'type': '[microsoftgraphaccesspackageassignment]'},
        'access_package_catalogs': {'key': 'accessPackageCatalogs', 'type': '[microsoftgraphaccesspackagecatalog]'},
        'access_package_resource_requests': {'key': 'accessPackageResourceRequests', 'type': '[microsoftgraphaccesspackageresourcerequest]'},
        'access_package_resource_role_scopes': {'key': 'accessPackageResourceRoleScopes', 'type': '[microsoftgraphaccesspackageresourcerolescope]'},
        'access_package_resources': {'key': 'accessPackageResources', 'type': '[microsoftgraphaccesspackageresource]'},
        'access_packages': {'key': 'accessPackages', 'type': '[microsoftgraphaccesspackage]'},
        'connected_organizations': {'key': 'connectedOrganizations', 'type': '[microsoftgraphconnectedorganization]'},
        'settings': {'key': 'settings', 'type': 'microsoftgraphentitlementmanagementsettings'},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,
        additional_properties: Optional[Dict[str, object]] = None,
        access_package_assignment_policies: Optional[List["microsoftgraphaccesspackageassignmentpolicy"]] = None,
        access_package_assignment_requests: Optional[List["microsoftgraphaccesspackageassignmentrequest"]] = None,
        access_package_assignment_resource_roles: Optional[List["microsoftgraphaccesspackageassignmentresourcerole"]] = None,
        access_package_assignments: Optional[List["microsoftgraphaccesspackageassignment"]] = None,
        access_package_catalogs: Optional[List["microsoftgraphaccesspackagecatalog"]] = None,
        access_package_resource_requests: Optional[List["microsoftgraphaccesspackageresourcerequest"]] = None,
        access_package_resource_role_scopes: Optional[List["microsoftgraphaccesspackageresourcerolescope"]] = None,
        access_package_resources: Optional[List["microsoftgraphaccesspackageresource"]] = None,
        access_packages: Optional[List["microsoftgraphaccesspackage"]] = None,
        connected_organizations: Optional[List["microsoftgraphconnectedorganization"]] = None,
        settings: Optional["microsoftgraphentitlementmanagementsettings"] = None,
        **kwargs
    ):
        super(microsoftgraphentitlementmanagement, self).__init__(id=id, **kwargs)
        self.additional_properties = additional_properties
        self.access_package_assignment_policies = access_package_assignment_policies
        self.access_package_assignment_requests = access_package_assignment_requests
        self.access_package_assignment_resource_roles = access_package_assignment_resource_roles
        self.access_package_assignments = access_package_assignments
        self.access_package_catalogs = access_package_catalogs
        self.access_package_resource_requests = access_package_resource_requests
        self.access_package_resource_role_scopes = access_package_resource_role_scopes
        self.access_package_resources = access_package_resources
        self.access_packages = access_packages
        self.connected_organizations = connected_organizations
        self.settings = settings


class microsoftgraphentitlementmanagementsettings(microsoftgraphentity):
    """entitlementManagementSettings.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param days_until_external_user_deleted_after_blocked:
    :type days_until_external_user_deleted_after_blocked: int
    :param external_user_lifecycle_action:
    :type external_user_lifecycle_action: str
    """

    _validation = {
        'days_until_external_user_deleted_after_blocked': {'maximum': 2147483647, 'minimum': -2147483648},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'days_until_external_user_deleted_after_blocked': {'key': 'daysUntilExternalUserDeletedAfterBlocked', 'type': 'int'},
        'external_user_lifecycle_action': {'key': 'externalUserLifecycleAction', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,
        additional_properties: Optional[Dict[str, object]] = None,
        days_until_external_user_deleted_after_blocked: Optional[int] = None,
        external_user_lifecycle_action: Optional[str] = None,
        **kwargs
    ):
        super(microsoftgraphentitlementmanagementsettings, self).__init__(id=id, **kwargs)
        self.additional_properties = additional_properties
        self.days_until_external_user_deleted_after_blocked = days_until_external_user_deleted_after_blocked
        self.external_user_lifecycle_action = external_user_lifecycle_action


class microsoftgraphexpirationpattern(msrest.serialization.Model):
    """expirationPattern.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param duration:
    :type duration: ~datetime.timedelta
    :param end_date_time:
    :type end_date_time: ~datetime.datetime
    :param type:  Possible values include: "notSpecified", "noExpiration", "afterDateTime",
     "afterDuration".
    :type type: str or ~identity_governance.models.Microsoftgraphexpirationpatterntype
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'duration': {'key': 'duration', 'type': 'duration'},
        'end_date_time': {'key': 'endDateTime', 'type': 'iso-8601'},
        'type': {'key': 'type', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        duration: Optional[datetime.timedelta] = None,
        end_date_time: Optional[datetime.datetime] = None,
        type: Optional[Union[str, "Microsoftgraphexpirationpatterntype"]] = None,
        **kwargs
    ):
        super(microsoftgraphexpirationpattern, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.duration = duration
        self.end_date_time = end_date_time
        self.type = type


class microsoftgraphgovernanceresource(microsoftgraphentity):
    """governanceResource.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param display_name:
    :type display_name: str
    :param external_id:
    :type external_id: str
    :param registered_date_time:
    :type registered_date_time: ~datetime.datetime
    :param registered_root:
    :type registered_root: str
    :param status:
    :type status: str
    :param type:
    :type type: str
    :param parent: governanceResource.
    :type parent: ~identity_governance.models.microsoftgraphgovernanceresource
    :param role_assignment_requests:
    :type role_assignment_requests:
     list[~identity_governance.models.microsoftgraphgovernanceroleassignmentrequest]
    :param role_assignments:
    :type role_assignments:
     list[~identity_governance.models.microsoftgraphgovernanceroleassignment]
    :param role_definitions:
    :type role_definitions:
     list[~identity_governance.models.microsoftgraphgovernanceroledefinition]
    :param role_settings:
    :type role_settings: list[~identity_governance.models.microsoftgraphgovernancerolesetting]
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'external_id': {'key': 'externalId', 'type': 'str'},
        'registered_date_time': {'key': 'registeredDateTime', 'type': 'iso-8601'},
        'registered_root': {'key': 'registeredRoot', 'type': 'str'},
        'status': {'key': 'status', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'parent': {'key': 'parent', 'type': 'microsoftgraphgovernanceresource'},
        'role_assignment_requests': {'key': 'roleAssignmentRequests', 'type': '[microsoftgraphgovernanceroleassignmentrequest]'},
        'role_assignments': {'key': 'roleAssignments', 'type': '[microsoftgraphgovernanceroleassignment]'},
        'role_definitions': {'key': 'roleDefinitions', 'type': '[microsoftgraphgovernanceroledefinition]'},
        'role_settings': {'key': 'roleSettings', 'type': '[microsoftgraphgovernancerolesetting]'},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,
        additional_properties: Optional[Dict[str, object]] = None,
        display_name: Optional[str] = None,
        external_id: Optional[str] = None,
        registered_date_time: Optional[datetime.datetime] = None,
        registered_root: Optional[str] = None,
        status: Optional[str] = None,
        type: Optional[str] = None,
        parent: Optional["microsoftgraphgovernanceresource"] = None,
        role_assignment_requests: Optional[List["microsoftgraphgovernanceroleassignmentrequest"]] = None,
        role_assignments: Optional[List["microsoftgraphgovernanceroleassignment"]] = None,
        role_definitions: Optional[List["microsoftgraphgovernanceroledefinition"]] = None,
        role_settings: Optional[List["microsoftgraphgovernancerolesetting"]] = None,
        **kwargs
    ):
        super(microsoftgraphgovernanceresource, self).__init__(id=id, **kwargs)
        self.additional_properties = additional_properties
        self.display_name = display_name
        self.external_id = external_id
        self.registered_date_time = registered_date_time
        self.registered_root = registered_root
        self.status = status
        self.type = type
        self.parent = parent
        self.role_assignment_requests = role_assignment_requests
        self.role_assignments = role_assignments
        self.role_definitions = role_definitions
        self.role_settings = role_settings


class microsoftgraphgovernanceroleassignment(microsoftgraphentity):
    """governanceRoleAssignment.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param assignment_state:
    :type assignment_state: str
    :param end_date_time:
    :type end_date_time: ~datetime.datetime
    :param external_id:
    :type external_id: str
    :param linked_eligible_role_assignment_id:
    :type linked_eligible_role_assignment_id: str
    :param member_type:
    :type member_type: str
    :param resource_id:
    :type resource_id: str
    :param role_definition_id:
    :type role_definition_id: str
    :param start_date_time:
    :type start_date_time: ~datetime.datetime
    :param status:
    :type status: str
    :param subject_id:
    :type subject_id: str
    :param linked_eligible_role_assignment: governanceRoleAssignment.
    :type linked_eligible_role_assignment:
     ~identity_governance.models.microsoftgraphgovernanceroleassignment
    :param resource: governanceResource.
    :type resource: ~identity_governance.models.microsoftgraphgovernanceresource
    :param role_definition: governanceRoleDefinition.
    :type role_definition: ~identity_governance.models.microsoftgraphgovernanceroledefinition
    :param subject: governanceSubject.
    :type subject: ~identity_governance.models.microsoftgraphgovernancesubject
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'assignment_state': {'key': 'assignmentState', 'type': 'str'},
        'end_date_time': {'key': 'endDateTime', 'type': 'iso-8601'},
        'external_id': {'key': 'externalId', 'type': 'str'},
        'linked_eligible_role_assignment_id': {'key': 'linkedEligibleRoleAssignmentId', 'type': 'str'},
        'member_type': {'key': 'memberType', 'type': 'str'},
        'resource_id': {'key': 'resourceId', 'type': 'str'},
        'role_definition_id': {'key': 'roleDefinitionId', 'type': 'str'},
        'start_date_time': {'key': 'startDateTime', 'type': 'iso-8601'},
        'status': {'key': 'status', 'type': 'str'},
        'subject_id': {'key': 'subjectId', 'type': 'str'},
        'linked_eligible_role_assignment': {'key': 'linkedEligibleRoleAssignment', 'type': 'microsoftgraphgovernanceroleassignment'},
        'resource': {'key': 'resource', 'type': 'microsoftgraphgovernanceresource'},
        'role_definition': {'key': 'roleDefinition', 'type': 'microsoftgraphgovernanceroledefinition'},
        'subject': {'key': 'subject', 'type': 'microsoftgraphgovernancesubject'},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,
        additional_properties: Optional[Dict[str, object]] = None,
        assignment_state: Optional[str] = None,
        end_date_time: Optional[datetime.datetime] = None,
        external_id: Optional[str] = None,
        linked_eligible_role_assignment_id: Optional[str] = None,
        member_type: Optional[str] = None,
        resource_id: Optional[str] = None,
        role_definition_id: Optional[str] = None,
        start_date_time: Optional[datetime.datetime] = None,
        status: Optional[str] = None,
        subject_id: Optional[str] = None,
        linked_eligible_role_assignment: Optional["microsoftgraphgovernanceroleassignment"] = None,
        resource: Optional["microsoftgraphgovernanceresource"] = None,
        role_definition: Optional["microsoftgraphgovernanceroledefinition"] = None,
        subject: Optional["microsoftgraphgovernancesubject"] = None,
        **kwargs
    ):
        super(microsoftgraphgovernanceroleassignment, self).__init__(id=id, **kwargs)
        self.additional_properties = additional_properties
        self.assignment_state = assignment_state
        self.end_date_time = end_date_time
        self.external_id = external_id
        self.linked_eligible_role_assignment_id = linked_eligible_role_assignment_id
        self.member_type = member_type
        self.resource_id = resource_id
        self.role_definition_id = role_definition_id
        self.start_date_time = start_date_time
        self.status = status
        self.subject_id = subject_id
        self.linked_eligible_role_assignment = linked_eligible_role_assignment
        self.resource = resource
        self.role_definition = role_definition
        self.subject = subject


class microsoftgraphgovernanceroleassignmentrequest(microsoftgraphentity):
    """governanceRoleAssignmentRequest.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param assignment_state:
    :type assignment_state: str
    :param linked_eligible_role_assignment_id:
    :type linked_eligible_role_assignment_id: str
    :param reason:
    :type reason: str
    :param requested_date_time:
    :type requested_date_time: ~datetime.datetime
    :param resource_id:
    :type resource_id: str
    :param role_definition_id:
    :type role_definition_id: str
    :param schedule: governanceSchedule.
    :type schedule: ~identity_governance.models.microsoftgraphgovernanceschedule
    :param status: governanceRoleAssignmentRequestStatus.
    :type status: ~identity_governance.models.microsoftgraphgovernanceroleassignmentrequeststatus
    :param subject_id:
    :type subject_id: str
    :param type:
    :type type: str
    :param resource: governanceResource.
    :type resource: ~identity_governance.models.microsoftgraphgovernanceresource
    :param role_definition: governanceRoleDefinition.
    :type role_definition: ~identity_governance.models.microsoftgraphgovernanceroledefinition
    :param subject: governanceSubject.
    :type subject: ~identity_governance.models.microsoftgraphgovernancesubject
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'assignment_state': {'key': 'assignmentState', 'type': 'str'},
        'linked_eligible_role_assignment_id': {'key': 'linkedEligibleRoleAssignmentId', 'type': 'str'},
        'reason': {'key': 'reason', 'type': 'str'},
        'requested_date_time': {'key': 'requestedDateTime', 'type': 'iso-8601'},
        'resource_id': {'key': 'resourceId', 'type': 'str'},
        'role_definition_id': {'key': 'roleDefinitionId', 'type': 'str'},
        'schedule': {'key': 'schedule', 'type': 'microsoftgraphgovernanceschedule'},
        'status': {'key': 'status', 'type': 'microsoftgraphgovernanceroleassignmentrequeststatus'},
        'subject_id': {'key': 'subjectId', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'resource': {'key': 'resource', 'type': 'microsoftgraphgovernanceresource'},
        'role_definition': {'key': 'roleDefinition', 'type': 'microsoftgraphgovernanceroledefinition'},
        'subject': {'key': 'subject', 'type': 'microsoftgraphgovernancesubject'},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,
        additional_properties: Optional[Dict[str, object]] = None,
        assignment_state: Optional[str] = None,
        linked_eligible_role_assignment_id: Optional[str] = None,
        reason: Optional[str] = None,
        requested_date_time: Optional[datetime.datetime] = None,
        resource_id: Optional[str] = None,
        role_definition_id: Optional[str] = None,
        schedule: Optional["microsoftgraphgovernanceschedule"] = None,
        status: Optional["microsoftgraphgovernanceroleassignmentrequeststatus"] = None,
        subject_id: Optional[str] = None,
        type: Optional[str] = None,
        resource: Optional["microsoftgraphgovernanceresource"] = None,
        role_definition: Optional["microsoftgraphgovernanceroledefinition"] = None,
        subject: Optional["microsoftgraphgovernancesubject"] = None,
        **kwargs
    ):
        super(microsoftgraphgovernanceroleassignmentrequest, self).__init__(id=id, **kwargs)
        self.additional_properties = additional_properties
        self.assignment_state = assignment_state
        self.linked_eligible_role_assignment_id = linked_eligible_role_assignment_id
        self.reason = reason
        self.requested_date_time = requested_date_time
        self.resource_id = resource_id
        self.role_definition_id = role_definition_id
        self.schedule = schedule
        self.status = status
        self.subject_id = subject_id
        self.type = type
        self.resource = resource
        self.role_definition = role_definition
        self.subject = subject


class microsoftgraphgovernanceroleassignmentrequeststatus(msrest.serialization.Model):
    """governanceRoleAssignmentRequestStatus.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param status:
    :type status: str
    :param status_details:
    :type status_details: list[~identity_governance.models.microsoftgraphkeyvalue]
    :param sub_status:
    :type sub_status: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'status': {'key': 'status', 'type': 'str'},
        'status_details': {'key': 'statusDetails', 'type': '[microsoftgraphkeyvalue]'},
        'sub_status': {'key': 'subStatus', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        status: Optional[str] = None,
        status_details: Optional[List["microsoftgraphkeyvalue"]] = None,
        sub_status: Optional[str] = None,
        **kwargs
    ):
        super(microsoftgraphgovernanceroleassignmentrequeststatus, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.status = status
        self.status_details = status_details
        self.sub_status = sub_status


class microsoftgraphgovernanceroledefinition(microsoftgraphentity):
    """governanceRoleDefinition.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param display_name:
    :type display_name: str
    :param external_id:
    :type external_id: str
    :param resource_id:
    :type resource_id: str
    :param template_id:
    :type template_id: str
    :param resource: governanceResource.
    :type resource: ~identity_governance.models.microsoftgraphgovernanceresource
    :param role_setting: governanceRoleSetting.
    :type role_setting: ~identity_governance.models.microsoftgraphgovernancerolesetting
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'external_id': {'key': 'externalId', 'type': 'str'},
        'resource_id': {'key': 'resourceId', 'type': 'str'},
        'template_id': {'key': 'templateId', 'type': 'str'},
        'resource': {'key': 'resource', 'type': 'microsoftgraphgovernanceresource'},
        'role_setting': {'key': 'roleSetting', 'type': 'microsoftgraphgovernancerolesetting'},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,
        additional_properties: Optional[Dict[str, object]] = None,
        display_name: Optional[str] = None,
        external_id: Optional[str] = None,
        resource_id: Optional[str] = None,
        template_id: Optional[str] = None,
        resource: Optional["microsoftgraphgovernanceresource"] = None,
        role_setting: Optional["microsoftgraphgovernancerolesetting"] = None,
        **kwargs
    ):
        super(microsoftgraphgovernanceroledefinition, self).__init__(id=id, **kwargs)
        self.additional_properties = additional_properties
        self.display_name = display_name
        self.external_id = external_id
        self.resource_id = resource_id
        self.template_id = template_id
        self.resource = resource
        self.role_setting = role_setting


class microsoftgraphgovernancerolesetting(microsoftgraphentity):
    """governanceRoleSetting.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param admin_eligible_settings:
    :type admin_eligible_settings:
     list[~identity_governance.models.microsoftgraphgovernancerulesetting]
    :param admin_member_settings:
    :type admin_member_settings:
     list[~identity_governance.models.microsoftgraphgovernancerulesetting]
    :param is_default:
    :type is_default: bool
    :param last_updated_by:
    :type last_updated_by: str
    :param last_updated_date_time:
    :type last_updated_date_time: ~datetime.datetime
    :param resource_id:
    :type resource_id: str
    :param role_definition_id:
    :type role_definition_id: str
    :param user_eligible_settings:
    :type user_eligible_settings:
     list[~identity_governance.models.microsoftgraphgovernancerulesetting]
    :param user_member_settings:
    :type user_member_settings:
     list[~identity_governance.models.microsoftgraphgovernancerulesetting]
    :param resource: governanceResource.
    :type resource: ~identity_governance.models.microsoftgraphgovernanceresource
    :param role_definition: governanceRoleDefinition.
    :type role_definition: ~identity_governance.models.microsoftgraphgovernanceroledefinition
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'admin_eligible_settings': {'key': 'adminEligibleSettings', 'type': '[microsoftgraphgovernancerulesetting]'},
        'admin_member_settings': {'key': 'adminMemberSettings', 'type': '[microsoftgraphgovernancerulesetting]'},
        'is_default': {'key': 'isDefault', 'type': 'bool'},
        'last_updated_by': {'key': 'lastUpdatedBy', 'type': 'str'},
        'last_updated_date_time': {'key': 'lastUpdatedDateTime', 'type': 'iso-8601'},
        'resource_id': {'key': 'resourceId', 'type': 'str'},
        'role_definition_id': {'key': 'roleDefinitionId', 'type': 'str'},
        'user_eligible_settings': {'key': 'userEligibleSettings', 'type': '[microsoftgraphgovernancerulesetting]'},
        'user_member_settings': {'key': 'userMemberSettings', 'type': '[microsoftgraphgovernancerulesetting]'},
        'resource': {'key': 'resource', 'type': 'microsoftgraphgovernanceresource'},
        'role_definition': {'key': 'roleDefinition', 'type': 'microsoftgraphgovernanceroledefinition'},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,
        additional_properties: Optional[Dict[str, object]] = None,
        admin_eligible_settings: Optional[List["microsoftgraphgovernancerulesetting"]] = None,
        admin_member_settings: Optional[List["microsoftgraphgovernancerulesetting"]] = None,
        is_default: Optional[bool] = None,
        last_updated_by: Optional[str] = None,
        last_updated_date_time: Optional[datetime.datetime] = None,
        resource_id: Optional[str] = None,
        role_definition_id: Optional[str] = None,
        user_eligible_settings: Optional[List["microsoftgraphgovernancerulesetting"]] = None,
        user_member_settings: Optional[List["microsoftgraphgovernancerulesetting"]] = None,
        resource: Optional["microsoftgraphgovernanceresource"] = None,
        role_definition: Optional["microsoftgraphgovernanceroledefinition"] = None,
        **kwargs
    ):
        super(microsoftgraphgovernancerolesetting, self).__init__(id=id, **kwargs)
        self.additional_properties = additional_properties
        self.admin_eligible_settings = admin_eligible_settings
        self.admin_member_settings = admin_member_settings
        self.is_default = is_default
        self.last_updated_by = last_updated_by
        self.last_updated_date_time = last_updated_date_time
        self.resource_id = resource_id
        self.role_definition_id = role_definition_id
        self.user_eligible_settings = user_eligible_settings
        self.user_member_settings = user_member_settings
        self.resource = resource
        self.role_definition = role_definition


class microsoftgraphgovernancerulesetting(msrest.serialization.Model):
    """governanceRuleSetting.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param rule_identifier:
    :type rule_identifier: str
    :param setting:
    :type setting: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'rule_identifier': {'key': 'ruleIdentifier', 'type': 'str'},
        'setting': {'key': 'setting', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        rule_identifier: Optional[str] = None,
        setting: Optional[str] = None,
        **kwargs
    ):
        super(microsoftgraphgovernancerulesetting, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.rule_identifier = rule_identifier
        self.setting = setting


class microsoftgraphgovernanceschedule(msrest.serialization.Model):
    """governanceSchedule.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param duration:
    :type duration: ~datetime.timedelta
    :param end_date_time:
    :type end_date_time: ~datetime.datetime
    :param start_date_time:
    :type start_date_time: ~datetime.datetime
    :param type:
    :type type: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'duration': {'key': 'duration', 'type': 'duration'},
        'end_date_time': {'key': 'endDateTime', 'type': 'iso-8601'},
        'start_date_time': {'key': 'startDateTime', 'type': 'iso-8601'},
        'type': {'key': 'type', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        duration: Optional[datetime.timedelta] = None,
        end_date_time: Optional[datetime.datetime] = None,
        start_date_time: Optional[datetime.datetime] = None,
        type: Optional[str] = None,
        **kwargs
    ):
        super(microsoftgraphgovernanceschedule, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.duration = duration
        self.end_date_time = end_date_time
        self.start_date_time = start_date_time
        self.type = type


class microsoftgraphgovernancesubject(microsoftgraphentity):
    """governanceSubject.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param display_name:
    :type display_name: str
    :param email:
    :type email: str
    :param principal_name:
    :type principal_name: str
    :param type:
    :type type: str
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'email': {'key': 'email', 'type': 'str'},
        'principal_name': {'key': 'principalName', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,
        additional_properties: Optional[Dict[str, object]] = None,
        display_name: Optional[str] = None,
        email: Optional[str] = None,
        principal_name: Optional[str] = None,
        type: Optional[str] = None,
        **kwargs
    ):
        super(microsoftgraphgovernancesubject, self).__init__(id=id, **kwargs)
        self.additional_properties = additional_properties
        self.display_name = display_name
        self.email = email
        self.principal_name = principal_name
        self.type = type


class microsoftgraphidentity(msrest.serialization.Model):
    """identity.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param display_name: The identity's display name. Note that this may not always be available or
     up to date. For example, if a user changes their display name, the API may show the new value
     in a future response, but the items associated with the user won't show up as having changed
     when using delta.
    :type display_name: str
    :param id: Unique identifier for the identity.
    :type id: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'id': {'key': 'id', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        display_name: Optional[str] = None,
        id: Optional[str] = None,
        **kwargs
    ):
        super(microsoftgraphidentity, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.display_name = display_name
        self.id = id


class microsoftgraphkeyvalue(msrest.serialization.Model):
    """keyValue.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param key: Key for the key-value pair.
    :type key: str
    :param value: Value for the key-value pair.
    :type value: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'key': {'key': 'key', 'type': 'str'},
        'value': {'key': 'value', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        key: Optional[str] = None,
        value: Optional[str] = None,
        **kwargs
    ):
        super(microsoftgraphkeyvalue, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.key = key
        self.value = value


class microsoftgraphpatternedrecurrence(msrest.serialization.Model):
    """patternedRecurrence.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param pattern: recurrencePattern.
    :type pattern: ~identity_governance.models.microsoftgraphrecurrencepattern
    :param range: recurrenceRange.
    :type range: ~identity_governance.models.microsoftgraphrecurrencerange
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'pattern': {'key': 'pattern', 'type': 'microsoftgraphrecurrencepattern'},
        'range': {'key': 'range', 'type': 'microsoftgraphrecurrencerange'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        pattern: Optional["microsoftgraphrecurrencepattern"] = None,
        range: Optional["microsoftgraphrecurrencerange"] = None,
        **kwargs
    ):
        super(microsoftgraphpatternedrecurrence, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.pattern = pattern
        self.range = range


class microsoftgraphprivilegedaccess(microsoftgraphentity):
    """privilegedAccess.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param display_name:
    :type display_name: str
    :param resources:
    :type resources: list[~identity_governance.models.microsoftgraphgovernanceresource]
    :param role_assignment_requests:
    :type role_assignment_requests:
     list[~identity_governance.models.microsoftgraphgovernanceroleassignmentrequest]
    :param role_assignments:
    :type role_assignments:
     list[~identity_governance.models.microsoftgraphgovernanceroleassignment]
    :param role_definitions:
    :type role_definitions:
     list[~identity_governance.models.microsoftgraphgovernanceroledefinition]
    :param role_settings:
    :type role_settings: list[~identity_governance.models.microsoftgraphgovernancerolesetting]
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'resources': {'key': 'resources', 'type': '[microsoftgraphgovernanceresource]'},
        'role_assignment_requests': {'key': 'roleAssignmentRequests', 'type': '[microsoftgraphgovernanceroleassignmentrequest]'},
        'role_assignments': {'key': 'roleAssignments', 'type': '[microsoftgraphgovernanceroleassignment]'},
        'role_definitions': {'key': 'roleDefinitions', 'type': '[microsoftgraphgovernanceroledefinition]'},
        'role_settings': {'key': 'roleSettings', 'type': '[microsoftgraphgovernancerolesetting]'},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,
        additional_properties: Optional[Dict[str, object]] = None,
        display_name: Optional[str] = None,
        resources: Optional[List["microsoftgraphgovernanceresource"]] = None,
        role_assignment_requests: Optional[List["microsoftgraphgovernanceroleassignmentrequest"]] = None,
        role_assignments: Optional[List["microsoftgraphgovernanceroleassignment"]] = None,
        role_definitions: Optional[List["microsoftgraphgovernanceroledefinition"]] = None,
        role_settings: Optional[List["microsoftgraphgovernancerolesetting"]] = None,
        **kwargs
    ):
        super(microsoftgraphprivilegedaccess, self).__init__(id=id, **kwargs)
        self.additional_properties = additional_properties
        self.display_name = display_name
        self.resources = resources
        self.role_assignment_requests = role_assignment_requests
        self.role_assignments = role_assignments
        self.role_definitions = role_definitions
        self.role_settings = role_settings


class microsoftgraphprivilegedapproval(microsoftgraphentity):
    """privilegedApproval.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param approval_duration:
    :type approval_duration: ~datetime.timedelta
    :param approval_state:  Possible values include: "pending", "approved", "denied", "aborted",
     "canceled".
    :type approval_state: str or ~identity_governance.models.Microsoftgraphapprovalstate
    :param approval_type:
    :type approval_type: str
    :param approver_reason:
    :type approver_reason: str
    :param end_date_time:
    :type end_date_time: ~datetime.datetime
    :param requestor_reason:
    :type requestor_reason: str
    :param role_id:
    :type role_id: str
    :param start_date_time:
    :type start_date_time: ~datetime.datetime
    :param user_id:
    :type user_id: str
    :param request: privilegedRoleAssignmentRequest.
    :type request: ~identity_governance.models.microsoftgraphprivilegedroleassignmentrequest
    :param role_info: privilegedRole.
    :type role_info: ~identity_governance.models.microsoftgraphprivilegedrole
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'approval_duration': {'key': 'approvalDuration', 'type': 'duration'},
        'approval_state': {'key': 'approvalState', 'type': 'str'},
        'approval_type': {'key': 'approvalType', 'type': 'str'},
        'approver_reason': {'key': 'approverReason', 'type': 'str'},
        'end_date_time': {'key': 'endDateTime', 'type': 'iso-8601'},
        'requestor_reason': {'key': 'requestorReason', 'type': 'str'},
        'role_id': {'key': 'roleId', 'type': 'str'},
        'start_date_time': {'key': 'startDateTime', 'type': 'iso-8601'},
        'user_id': {'key': 'userId', 'type': 'str'},
        'request': {'key': 'request', 'type': 'microsoftgraphprivilegedroleassignmentrequest'},
        'role_info': {'key': 'roleInfo', 'type': 'microsoftgraphprivilegedrole'},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,
        additional_properties: Optional[Dict[str, object]] = None,
        approval_duration: Optional[datetime.timedelta] = None,
        approval_state: Optional[Union[str, "Microsoftgraphapprovalstate"]] = None,
        approval_type: Optional[str] = None,
        approver_reason: Optional[str] = None,
        end_date_time: Optional[datetime.datetime] = None,
        requestor_reason: Optional[str] = None,
        role_id: Optional[str] = None,
        start_date_time: Optional[datetime.datetime] = None,
        user_id: Optional[str] = None,
        request: Optional["microsoftgraphprivilegedroleassignmentrequest"] = None,
        role_info: Optional["microsoftgraphprivilegedrole"] = None,
        **kwargs
    ):
        super(microsoftgraphprivilegedapproval, self).__init__(id=id, **kwargs)
        self.additional_properties = additional_properties
        self.approval_duration = approval_duration
        self.approval_state = approval_state
        self.approval_type = approval_type
        self.approver_reason = approver_reason
        self.end_date_time = end_date_time
        self.requestor_reason = requestor_reason
        self.role_id = role_id
        self.start_date_time = start_date_time
        self.user_id = user_id
        self.request = request
        self.role_info = role_info


class microsoftgraphprivilegedoperationevent(microsoftgraphentity):
    """privilegedOperationEvent.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param additional_information:
    :type additional_information: str
    :param creation_date_time:
    :type creation_date_time: ~datetime.datetime
    :param expiration_date_time:
    :type expiration_date_time: ~datetime.datetime
    :param reference_key:
    :type reference_key: str
    :param reference_system:
    :type reference_system: str
    :param requestor_id:
    :type requestor_id: str
    :param requestor_name:
    :type requestor_name: str
    :param request_type:
    :type request_type: str
    :param role_id:
    :type role_id: str
    :param role_name:
    :type role_name: str
    :param tenant_id:
    :type tenant_id: str
    :param user_id:
    :type user_id: str
    :param user_mail:
    :type user_mail: str
    :param user_name:
    :type user_name: str
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'additional_information': {'key': 'additionalInformation', 'type': 'str'},
        'creation_date_time': {'key': 'creationDateTime', 'type': 'iso-8601'},
        'expiration_date_time': {'key': 'expirationDateTime', 'type': 'iso-8601'},
        'reference_key': {'key': 'referenceKey', 'type': 'str'},
        'reference_system': {'key': 'referenceSystem', 'type': 'str'},
        'requestor_id': {'key': 'requestorId', 'type': 'str'},
        'requestor_name': {'key': 'requestorName', 'type': 'str'},
        'request_type': {'key': 'requestType', 'type': 'str'},
        'role_id': {'key': 'roleId', 'type': 'str'},
        'role_name': {'key': 'roleName', 'type': 'str'},
        'tenant_id': {'key': 'tenantId', 'type': 'str'},
        'user_id': {'key': 'userId', 'type': 'str'},
        'user_mail': {'key': 'userMail', 'type': 'str'},
        'user_name': {'key': 'userName', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,
        additional_properties: Optional[Dict[str, object]] = None,
        additional_information: Optional[str] = None,
        creation_date_time: Optional[datetime.datetime] = None,
        expiration_date_time: Optional[datetime.datetime] = None,
        reference_key: Optional[str] = None,
        reference_system: Optional[str] = None,
        requestor_id: Optional[str] = None,
        requestor_name: Optional[str] = None,
        request_type: Optional[str] = None,
        role_id: Optional[str] = None,
        role_name: Optional[str] = None,
        tenant_id: Optional[str] = None,
        user_id: Optional[str] = None,
        user_mail: Optional[str] = None,
        user_name: Optional[str] = None,
        **kwargs
    ):
        super(microsoftgraphprivilegedoperationevent, self).__init__(id=id, **kwargs)
        self.additional_properties = additional_properties
        self.additional_information = additional_information
        self.creation_date_time = creation_date_time
        self.expiration_date_time = expiration_date_time
        self.reference_key = reference_key
        self.reference_system = reference_system
        self.requestor_id = requestor_id
        self.requestor_name = requestor_name
        self.request_type = request_type
        self.role_id = role_id
        self.role_name = role_name
        self.tenant_id = tenant_id
        self.user_id = user_id
        self.user_mail = user_mail
        self.user_name = user_name


class microsoftgraphprivilegedrole(microsoftgraphentity):
    """privilegedRole.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param name:
    :type name: str
    :param assignments:
    :type assignments: list[~identity_governance.models.microsoftgraphprivilegedroleassignment]
    :param settings: privilegedRoleSettings.
    :type settings: ~identity_governance.models.microsoftgraphprivilegedrolesettings
    :param summary: privilegedRoleSummary.
    :type summary: ~identity_governance.models.microsoftgraphprivilegedrolesummary
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'name': {'key': 'name', 'type': 'str'},
        'assignments': {'key': 'assignments', 'type': '[microsoftgraphprivilegedroleassignment]'},
        'settings': {'key': 'settings', 'type': 'microsoftgraphprivilegedrolesettings'},
        'summary': {'key': 'summary', 'type': 'microsoftgraphprivilegedrolesummary'},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,
        additional_properties: Optional[Dict[str, object]] = None,
        name: Optional[str] = None,
        assignments: Optional[List["microsoftgraphprivilegedroleassignment"]] = None,
        settings: Optional["microsoftgraphprivilegedrolesettings"] = None,
        summary: Optional["microsoftgraphprivilegedrolesummary"] = None,
        **kwargs
    ):
        super(microsoftgraphprivilegedrole, self).__init__(id=id, **kwargs)
        self.additional_properties = additional_properties
        self.name = name
        self.assignments = assignments
        self.settings = settings
        self.summary = summary


class microsoftgraphprivilegedroleassignment(microsoftgraphentity):
    """privilegedRoleAssignment.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param expiration_date_time:
    :type expiration_date_time: ~datetime.datetime
    :param is_elevated:
    :type is_elevated: bool
    :param result_message:
    :type result_message: str
    :param role_id:
    :type role_id: str
    :param user_id:
    :type user_id: str
    :param role_info: privilegedRole.
    :type role_info: ~identity_governance.models.microsoftgraphprivilegedrole
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'expiration_date_time': {'key': 'expirationDateTime', 'type': 'iso-8601'},
        'is_elevated': {'key': 'isElevated', 'type': 'bool'},
        'result_message': {'key': 'resultMessage', 'type': 'str'},
        'role_id': {'key': 'roleId', 'type': 'str'},
        'user_id': {'key': 'userId', 'type': 'str'},
        'role_info': {'key': 'roleInfo', 'type': 'microsoftgraphprivilegedrole'},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,
        additional_properties: Optional[Dict[str, object]] = None,
        expiration_date_time: Optional[datetime.datetime] = None,
        is_elevated: Optional[bool] = None,
        result_message: Optional[str] = None,
        role_id: Optional[str] = None,
        user_id: Optional[str] = None,
        role_info: Optional["microsoftgraphprivilegedrole"] = None,
        **kwargs
    ):
        super(microsoftgraphprivilegedroleassignment, self).__init__(id=id, **kwargs)
        self.additional_properties = additional_properties
        self.expiration_date_time = expiration_date_time
        self.is_elevated = is_elevated
        self.result_message = result_message
        self.role_id = role_id
        self.user_id = user_id
        self.role_info = role_info


class microsoftgraphprivilegedroleassignmentrequest(microsoftgraphentity):
    """privilegedRoleAssignmentRequest.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param assignment_state:
    :type assignment_state: str
    :param duration:
    :type duration: str
    :param reason:
    :type reason: str
    :param requested_date_time:
    :type requested_date_time: ~datetime.datetime
    :param role_id:
    :type role_id: str
    :param schedule: governanceSchedule.
    :type schedule: ~identity_governance.models.microsoftgraphgovernanceschedule
    :param status:
    :type status: str
    :param ticket_number:
    :type ticket_number: str
    :param ticket_system:
    :type ticket_system: str
    :param type:
    :type type: str
    :param user_id:
    :type user_id: str
    :param role_info: privilegedRole.
    :type role_info: ~identity_governance.models.microsoftgraphprivilegedrole
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'assignment_state': {'key': 'assignmentState', 'type': 'str'},
        'duration': {'key': 'duration', 'type': 'str'},
        'reason': {'key': 'reason', 'type': 'str'},
        'requested_date_time': {'key': 'requestedDateTime', 'type': 'iso-8601'},
        'role_id': {'key': 'roleId', 'type': 'str'},
        'schedule': {'key': 'schedule', 'type': 'microsoftgraphgovernanceschedule'},
        'status': {'key': 'status', 'type': 'str'},
        'ticket_number': {'key': 'ticketNumber', 'type': 'str'},
        'ticket_system': {'key': 'ticketSystem', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'user_id': {'key': 'userId', 'type': 'str'},
        'role_info': {'key': 'roleInfo', 'type': 'microsoftgraphprivilegedrole'},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,
        additional_properties: Optional[Dict[str, object]] = None,
        assignment_state: Optional[str] = None,
        duration: Optional[str] = None,
        reason: Optional[str] = None,
        requested_date_time: Optional[datetime.datetime] = None,
        role_id: Optional[str] = None,
        schedule: Optional["microsoftgraphgovernanceschedule"] = None,
        status: Optional[str] = None,
        ticket_number: Optional[str] = None,
        ticket_system: Optional[str] = None,
        type: Optional[str] = None,
        user_id: Optional[str] = None,
        role_info: Optional["microsoftgraphprivilegedrole"] = None,
        **kwargs
    ):
        super(microsoftgraphprivilegedroleassignmentrequest, self).__init__(id=id, **kwargs)
        self.additional_properties = additional_properties
        self.assignment_state = assignment_state
        self.duration = duration
        self.reason = reason
        self.requested_date_time = requested_date_time
        self.role_id = role_id
        self.schedule = schedule
        self.status = status
        self.ticket_number = ticket_number
        self.ticket_system = ticket_system
        self.type = type
        self.user_id = user_id
        self.role_info = role_info


class microsoftgraphprivilegedrolesettings(microsoftgraphentity):
    """privilegedRoleSettings.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param approval_on_elevation:
    :type approval_on_elevation: bool
    :param approver_ids:
    :type approver_ids: list[str]
    :param elevation_duration:
    :type elevation_duration: ~datetime.timedelta
    :param is_mfa_on_elevation_configurable:
    :type is_mfa_on_elevation_configurable: bool
    :param last_global_admin:
    :type last_global_admin: bool
    :param max_elavation_duration:
    :type max_elavation_duration: ~datetime.timedelta
    :param mfa_on_elevation:
    :type mfa_on_elevation: bool
    :param min_elevation_duration:
    :type min_elevation_duration: ~datetime.timedelta
    :param notification_to_user_on_elevation:
    :type notification_to_user_on_elevation: bool
    :param ticketing_info_on_elevation:
    :type ticketing_info_on_elevation: bool
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'approval_on_elevation': {'key': 'approvalOnElevation', 'type': 'bool'},
        'approver_ids': {'key': 'approverIds', 'type': '[str]'},
        'elevation_duration': {'key': 'elevationDuration', 'type': 'duration'},
        'is_mfa_on_elevation_configurable': {'key': 'isMfaOnElevationConfigurable', 'type': 'bool'},
        'last_global_admin': {'key': 'lastGlobalAdmin', 'type': 'bool'},
        'max_elavation_duration': {'key': 'maxElavationDuration', 'type': 'duration'},
        'mfa_on_elevation': {'key': 'mfaOnElevation', 'type': 'bool'},
        'min_elevation_duration': {'key': 'minElevationDuration', 'type': 'duration'},
        'notification_to_user_on_elevation': {'key': 'notificationToUserOnElevation', 'type': 'bool'},
        'ticketing_info_on_elevation': {'key': 'ticketingInfoOnElevation', 'type': 'bool'},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,
        additional_properties: Optional[Dict[str, object]] = None,
        approval_on_elevation: Optional[bool] = None,
        approver_ids: Optional[List[str]] = None,
        elevation_duration: Optional[datetime.timedelta] = None,
        is_mfa_on_elevation_configurable: Optional[bool] = None,
        last_global_admin: Optional[bool] = None,
        max_elavation_duration: Optional[datetime.timedelta] = None,
        mfa_on_elevation: Optional[bool] = None,
        min_elevation_duration: Optional[datetime.timedelta] = None,
        notification_to_user_on_elevation: Optional[bool] = None,
        ticketing_info_on_elevation: Optional[bool] = None,
        **kwargs
    ):
        super(microsoftgraphprivilegedrolesettings, self).__init__(id=id, **kwargs)
        self.additional_properties = additional_properties
        self.approval_on_elevation = approval_on_elevation
        self.approver_ids = approver_ids
        self.elevation_duration = elevation_duration
        self.is_mfa_on_elevation_configurable = is_mfa_on_elevation_configurable
        self.last_global_admin = last_global_admin
        self.max_elavation_duration = max_elavation_duration
        self.mfa_on_elevation = mfa_on_elevation
        self.min_elevation_duration = min_elevation_duration
        self.notification_to_user_on_elevation = notification_to_user_on_elevation
        self.ticketing_info_on_elevation = ticketing_info_on_elevation


class microsoftgraphprivilegedrolesummary(microsoftgraphentity):
    """privilegedRoleSummary.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param elevated_count:
    :type elevated_count: int
    :param managed_count:
    :type managed_count: int
    :param mfa_enabled:
    :type mfa_enabled: bool
    :param status:  Possible values include: "ok", "bad".
    :type status: str or ~identity_governance.models.Microsoftgraphrolesummarystatus
    :param users_count:
    :type users_count: int
    """

    _validation = {
        'elevated_count': {'maximum': 2147483647, 'minimum': -2147483648},
        'managed_count': {'maximum': 2147483647, 'minimum': -2147483648},
        'users_count': {'maximum': 2147483647, 'minimum': -2147483648},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'elevated_count': {'key': 'elevatedCount', 'type': 'int'},
        'managed_count': {'key': 'managedCount', 'type': 'int'},
        'mfa_enabled': {'key': 'mfaEnabled', 'type': 'bool'},
        'status': {'key': 'status', 'type': 'str'},
        'users_count': {'key': 'usersCount', 'type': 'int'},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,
        additional_properties: Optional[Dict[str, object]] = None,
        elevated_count: Optional[int] = None,
        managed_count: Optional[int] = None,
        mfa_enabled: Optional[bool] = None,
        status: Optional[Union[str, "Microsoftgraphrolesummarystatus"]] = None,
        users_count: Optional[int] = None,
        **kwargs
    ):
        super(microsoftgraphprivilegedrolesummary, self).__init__(id=id, **kwargs)
        self.additional_properties = additional_properties
        self.elevated_count = elevated_count
        self.managed_count = managed_count
        self.mfa_enabled = mfa_enabled
        self.status = status
        self.users_count = users_count


class microsoftgraphprogram(microsoftgraphentity):
    """program.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param description:
    :type description: str
    :param display_name:
    :type display_name: str
    :param controls:
    :type controls: list[~identity_governance.models.microsoftgraphprogramcontrol]
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'description': {'key': 'description', 'type': 'str'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'controls': {'key': 'controls', 'type': '[microsoftgraphprogramcontrol]'},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,
        additional_properties: Optional[Dict[str, object]] = None,
        description: Optional[str] = None,
        display_name: Optional[str] = None,
        controls: Optional[List["microsoftgraphprogramcontrol"]] = None,
        **kwargs
    ):
        super(microsoftgraphprogram, self).__init__(id=id, **kwargs)
        self.additional_properties = additional_properties
        self.description = description
        self.display_name = display_name
        self.controls = controls


class microsoftgraphprogramcontrol(microsoftgraphentity):
    """programControl.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param control_id:
    :type control_id: str
    :param control_type_id:
    :type control_type_id: str
    :param created_date_time:
    :type created_date_time: ~datetime.datetime
    :param display_name:
    :type display_name: str
    :param owner: userIdentity.
    :type owner: ~identity_governance.models.microsoftgraphuseridentity
    :param program_id:
    :type program_id: str
    :param resource: programResource.
    :type resource: ~identity_governance.models.microsoftgraphprogramresource
    :param status:
    :type status: str
    :param program: program.
    :type program: ~identity_governance.models.microsoftgraphprogram
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'control_id': {'key': 'controlId', 'type': 'str'},
        'control_type_id': {'key': 'controlTypeId', 'type': 'str'},
        'created_date_time': {'key': 'createdDateTime', 'type': 'iso-8601'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'owner': {'key': 'owner', 'type': 'microsoftgraphuseridentity'},
        'program_id': {'key': 'programId', 'type': 'str'},
        'resource': {'key': 'resource', 'type': 'microsoftgraphprogramresource'},
        'status': {'key': 'status', 'type': 'str'},
        'program': {'key': 'program', 'type': 'microsoftgraphprogram'},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,
        additional_properties: Optional[Dict[str, object]] = None,
        control_id: Optional[str] = None,
        control_type_id: Optional[str] = None,
        created_date_time: Optional[datetime.datetime] = None,
        display_name: Optional[str] = None,
        owner: Optional["microsoftgraphuseridentity"] = None,
        program_id: Optional[str] = None,
        resource: Optional["microsoftgraphprogramresource"] = None,
        status: Optional[str] = None,
        program: Optional["microsoftgraphprogram"] = None,
        **kwargs
    ):
        super(microsoftgraphprogramcontrol, self).__init__(id=id, **kwargs)
        self.additional_properties = additional_properties
        self.control_id = control_id
        self.control_type_id = control_type_id
        self.created_date_time = created_date_time
        self.display_name = display_name
        self.owner = owner
        self.program_id = program_id
        self.resource = resource
        self.status = status
        self.program = program


class microsoftgraphprogramcontroltype(microsoftgraphentity):
    """programControlType.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param control_type_group_id:
    :type control_type_group_id: str
    :param display_name:
    :type display_name: str
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'control_type_group_id': {'key': 'controlTypeGroupId', 'type': 'str'},
        'display_name': {'key': 'displayName', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,
        additional_properties: Optional[Dict[str, object]] = None,
        control_type_group_id: Optional[str] = None,
        display_name: Optional[str] = None,
        **kwargs
    ):
        super(microsoftgraphprogramcontroltype, self).__init__(id=id, **kwargs)
        self.additional_properties = additional_properties
        self.control_type_group_id = control_type_group_id
        self.display_name = display_name


class microsoftgraphprogramresource(microsoftgraphidentity):
    """programResource.

    :param display_name: The identity's display name. Note that this may not always be available or
     up to date. For example, if a user changes their display name, the API may show the new value
     in a future response, but the items associated with the user won't show up as having changed
     when using delta.
    :type display_name: str
    :param id: Unique identifier for the identity.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param type:
    :type type: str
    """

    _attribute_map = {
        'display_name': {'key': 'displayName', 'type': 'str'},
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'type': {'key': 'type', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        display_name: Optional[str] = None,
        id: Optional[str] = None,
        additional_properties: Optional[Dict[str, object]] = None,
        type: Optional[str] = None,
        **kwargs
    ):
        super(microsoftgraphprogramresource, self).__init__(display_name=display_name, id=id, **kwargs)
        self.additional_properties = additional_properties
        self.type = type


class microsoftgraphrecurrencepattern(msrest.serialization.Model):
    """recurrencePattern.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param day_of_month: The day of the month on which the event occurs. Required if type is
     absoluteMonthly or absoluteYearly.
    :type day_of_month: int
    :param days_of_week: A collection of the days of the week on which the event occurs. The
     possible values are: sunday, monday, tuesday, wednesday, thursday, friday, saturday. If type is
     relativeMonthly or relativeYearly, and daysOfWeek specifies more than one day, the event falls
     on the first day that satisfies the pattern.  Required if type is weekly, relativeMonthly, or
     relativeYearly.
    :type days_of_week: list[str or ~identity_governance.models.Microsoftgraphdayofweek]
    :param first_day_of_week:  Possible values include: "sunday", "monday", "tuesday", "wednesday",
     "thursday", "friday", "saturday".
    :type first_day_of_week: str or ~identity_governance.models.Microsoftgraphdayofweek
    :param index:  Possible values include: "first", "second", "third", "fourth", "last".
    :type index: str or ~identity_governance.models.Microsoftgraphweekindex
    :param interval: The number of units between occurrences, where units can be in days, weeks,
     months, or years, depending on the type. Required.
    :type interval: int
    :param month: The month in which the event occurs.  This is a number from 1 to 12.
    :type month: int
    :param type:  Possible values include: "daily", "weekly", "absoluteMonthly", "relativeMonthly",
     "absoluteYearly", "relativeYearly".
    :type type: str or ~identity_governance.models.Microsoftgraphrecurrencepatterntype
    """

    _validation = {
        'day_of_month': {'maximum': 2147483647, 'minimum': -2147483648},
        'interval': {'maximum': 2147483647, 'minimum': -2147483648},
        'month': {'maximum': 2147483647, 'minimum': -2147483648},
    }

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'day_of_month': {'key': 'dayOfMonth', 'type': 'int'},
        'days_of_week': {'key': 'daysOfWeek', 'type': '[str]'},
        'first_day_of_week': {'key': 'firstDayOfWeek', 'type': 'str'},
        'index': {'key': 'index', 'type': 'str'},
        'interval': {'key': 'interval', 'type': 'int'},
        'month': {'key': 'month', 'type': 'int'},
        'type': {'key': 'type', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        day_of_month: Optional[int] = None,
        days_of_week: Optional[List[Union[str, "Microsoftgraphdayofweek"]]] = None,
        first_day_of_week: Optional[Union[str, "Microsoftgraphdayofweek"]] = None,
        index: Optional[Union[str, "Microsoftgraphweekindex"]] = None,
        interval: Optional[int] = None,
        month: Optional[int] = None,
        type: Optional[Union[str, "Microsoftgraphrecurrencepatterntype"]] = None,
        **kwargs
    ):
        super(microsoftgraphrecurrencepattern, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.day_of_month = day_of_month
        self.days_of_week = days_of_week
        self.first_day_of_week = first_day_of_week
        self.index = index
        self.interval = interval
        self.month = month
        self.type = type


class microsoftgraphrecurrencerange(msrest.serialization.Model):
    """recurrenceRange.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param end_date: The date to stop applying the recurrence pattern. Depending on the recurrence
     pattern of the event, the last occurrence of the meeting may not be this date. Required if type
     is endDate.
    :type end_date: ~datetime.date
    :param number_of_occurrences: The number of times to repeat the event. Required and must be
     positive if type is numbered.
    :type number_of_occurrences: int
    :param recurrence_time_zone: Time zone for the startDate and endDate properties. Optional. If
     not specified, the time zone of the event is used.
    :type recurrence_time_zone: str
    :param start_date: The date to start applying the recurrence pattern. The first occurrence of
     the meeting may be this date or later, depending on the recurrence pattern of the event. Must
     be the same value as the start property of the recurring event. Required.
    :type start_date: ~datetime.date
    :param type:  Possible values include: "endDate", "noEnd", "numbered".
    :type type: str or ~identity_governance.models.Microsoftgraphrecurrencerangetype
    """

    _validation = {
        'number_of_occurrences': {'maximum': 2147483647, 'minimum': -2147483648},
    }

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'end_date': {'key': 'endDate', 'type': 'date'},
        'number_of_occurrences': {'key': 'numberOfOccurrences', 'type': 'int'},
        'recurrence_time_zone': {'key': 'recurrenceTimeZone', 'type': 'str'},
        'start_date': {'key': 'startDate', 'type': 'date'},
        'type': {'key': 'type', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        end_date: Optional[datetime.date] = None,
        number_of_occurrences: Optional[int] = None,
        recurrence_time_zone: Optional[str] = None,
        start_date: Optional[datetime.date] = None,
        type: Optional[Union[str, "Microsoftgraphrecurrencerangetype"]] = None,
        **kwargs
    ):
        super(microsoftgraphrecurrencerange, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.end_date = end_date
        self.number_of_occurrences = number_of_occurrences
        self.recurrence_time_zone = recurrence_time_zone
        self.start_date = start_date
        self.type = type


class microsoftgraphrequestorsettings(msrest.serialization.Model):
    """requestorSettings.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param accept_requests:
    :type accept_requests: bool
    :param allowed_requestors:
    :type allowed_requestors: list[~identity_governance.models.microsoftgraphuserset]
    :param scope_type:
    :type scope_type: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'accept_requests': {'key': 'acceptRequests', 'type': 'bool'},
        'allowed_requestors': {'key': 'allowedRequestors', 'type': '[microsoftgraphuserset]'},
        'scope_type': {'key': 'scopeType', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        accept_requests: Optional[bool] = None,
        allowed_requestors: Optional[List["microsoftgraphuserset"]] = None,
        scope_type: Optional[str] = None,
        **kwargs
    ):
        super(microsoftgraphrequestorsettings, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.accept_requests = accept_requests
        self.allowed_requestors = allowed_requestors
        self.scope_type = scope_type


class microsoftgraphrequestschedule(msrest.serialization.Model):
    """requestSchedule.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param expiration: expirationPattern.
    :type expiration: ~identity_governance.models.microsoftgraphexpirationpattern
    :param recurrence: patternedRecurrence.
    :type recurrence: ~identity_governance.models.microsoftgraphpatternedrecurrence
    :param start_date_time:
    :type start_date_time: ~datetime.datetime
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'expiration': {'key': 'expiration', 'type': 'microsoftgraphexpirationpattern'},
        'recurrence': {'key': 'recurrence', 'type': 'microsoftgraphpatternedrecurrence'},
        'start_date_time': {'key': 'startDateTime', 'type': 'iso-8601'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        expiration: Optional["microsoftgraphexpirationpattern"] = None,
        recurrence: Optional["microsoftgraphpatternedrecurrence"] = None,
        start_date_time: Optional[datetime.datetime] = None,
        **kwargs
    ):
        super(microsoftgraphrequestschedule, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.expiration = expiration
        self.recurrence = recurrence
        self.start_date_time = start_date_time


class microsoftgraphtermsexpiration(msrest.serialization.Model):
    """termsExpiration.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param frequency:
    :type frequency: ~datetime.timedelta
    :param start_date_time:
    :type start_date_time: ~datetime.datetime
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'frequency': {'key': 'frequency', 'type': 'duration'},
        'start_date_time': {'key': 'startDateTime', 'type': 'iso-8601'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        frequency: Optional[datetime.timedelta] = None,
        start_date_time: Optional[datetime.datetime] = None,
        **kwargs
    ):
        super(microsoftgraphtermsexpiration, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.frequency = frequency
        self.start_date_time = start_date_time


class microsoftgraphuseridentity(microsoftgraphidentity):
    """userIdentity.

    :param display_name: The identity's display name. Note that this may not always be available or
     up to date. For example, if a user changes their display name, the API may show the new value
     in a future response, but the items associated with the user won't show up as having changed
     when using delta.
    :type display_name: str
    :param id: Unique identifier for the identity.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param ip_address: Indicates the client IP address used by user performing the activity (audit
     log only).
    :type ip_address: str
    :param user_principal_name: The userPrincipalName attribute of the user.
    :type user_principal_name: str
    """

    _attribute_map = {
        'display_name': {'key': 'displayName', 'type': 'str'},
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'ip_address': {'key': 'ipAddress', 'type': 'str'},
        'user_principal_name': {'key': 'userPrincipalName', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        display_name: Optional[str] = None,
        id: Optional[str] = None,
        additional_properties: Optional[Dict[str, object]] = None,
        ip_address: Optional[str] = None,
        user_principal_name: Optional[str] = None,
        **kwargs
    ):
        super(microsoftgraphuseridentity, self).__init__(display_name=display_name, id=id, **kwargs)
        self.additional_properties = additional_properties
        self.ip_address = ip_address
        self.user_principal_name = user_principal_name


class microsoftgraphuserset(msrest.serialization.Model):
    """userSet.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param is_backup:
    :type is_backup: bool
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'is_backup': {'key': 'isBackup', 'type': 'bool'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        is_backup: Optional[bool] = None,
        **kwargs
    ):
        super(microsoftgraphuserset, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.is_backup = is_backup


class odataerror(msrest.serialization.Model):
    """odataerror.

    All required parameters must be populated in order to send to Azure.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param error: Required.
    :type error: ~identity_governance.models.odataerrormain
    """

    _validation = {
        'error': {'required': True},
    }

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'error': {'key': 'error', 'type': 'odataerrormain'},
    }

    def __init__(
        self,
        *,
        error: "odataerrormain",
        additional_properties: Optional[Dict[str, object]] = None,
        **kwargs
    ):
        super(odataerror, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.error = error


class odataerrordetail(msrest.serialization.Model):
    """odataerrordetail.

    All required parameters must be populated in order to send to Azure.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param code: Required.
    :type code: str
    :param message: Required.
    :type message: str
    :param target:
    :type target: str
    """

    _validation = {
        'code': {'required': True},
        'message': {'required': True},
    }

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'code': {'key': 'code', 'type': 'str'},
        'message': {'key': 'message', 'type': 'str'},
        'target': {'key': 'target', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        code: str,
        message: str,
        additional_properties: Optional[Dict[str, object]] = None,
        target: Optional[str] = None,
        **kwargs
    ):
        super(odataerrordetail, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.code = code
        self.message = message
        self.target = target


class odataerrormain(msrest.serialization.Model):
    """odataerrormain.

    All required parameters must be populated in order to send to Azure.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param code: Required.
    :type code: str
    :param message: Required.
    :type message: str
    :param target:
    :type target: str
    :param details:
    :type details: list[~identity_governance.models.odataerrordetail]
    :param innererror: The structure of this object is service-specific.
    :type innererror: dict[str, object]
    """

    _validation = {
        'code': {'required': True},
        'message': {'required': True},
    }

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'code': {'key': 'code', 'type': 'str'},
        'message': {'key': 'message', 'type': 'str'},
        'target': {'key': 'target', 'type': 'str'},
        'details': {'key': 'details', 'type': '[odataerrordetail]'},
        'innererror': {'key': 'innererror', 'type': '{object}'},
    }

    def __init__(
        self,
        *,
        code: str,
        message: str,
        additional_properties: Optional[Dict[str, object]] = None,
        target: Optional[str] = None,
        details: Optional[List["odataerrordetail"]] = None,
        innererror: Optional[Dict[str, object]] = None,
        **kwargs
    ):
        super(odataerrormain, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.code = code
        self.message = message
        self.target = target
        self.details = details
        self.innererror = innererror


class paths1ao8iriprivilegedroleassignmentsprivilegedroleassignmentidmicrosoftgraphmakepermanentpostrequestbodycontentapplicationjsonschema(msrest.serialization.Model):
    """paths1ao8iriprivilegedroleassignmentsprivilegedroleassignmentidmicrosoftgraphmakepermanentpostrequestbodycontentapplicationjsonschema.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param reason:
    :type reason: str
    :param ticket_number:
    :type ticket_number: str
    :param ticket_system:
    :type ticket_system: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'reason': {'key': 'reason', 'type': 'str'},
        'ticket_number': {'key': 'ticketNumber', 'type': 'str'},
        'ticket_system': {'key': 'ticketSystem', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        reason: Optional[str] = None,
        ticket_number: Optional[str] = None,
        ticket_system: Optional[str] = None,
        **kwargs
    ):
        super(paths1ao8iriprivilegedroleassignmentsprivilegedroleassignmentidmicrosoftgraphmakepermanentpostrequestbodycontentapplicationjsonschema, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.reason = reason
        self.ticket_number = ticket_number
        self.ticket_system = ticket_system


class pathsfneytmprivilegedrolesprivilegedroleidmicrosoftgraphselfactivatepostrequestbodycontentapplicationjsonschema(msrest.serialization.Model):
    """pathsfneytmprivilegedrolesprivilegedroleidmicrosoftgraphselfactivatepostrequestbodycontentapplicationjsonschema.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param reason:
    :type reason: str
    :param duration:
    :type duration: str
    :param ticket_number:
    :type ticket_number: str
    :param ticket_system:
    :type ticket_system: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'reason': {'key': 'reason', 'type': 'str'},
        'duration': {'key': 'duration', 'type': 'str'},
        'ticket_number': {'key': 'ticketNumber', 'type': 'str'},
        'ticket_system': {'key': 'ticketSystem', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        reason: Optional[str] = None,
        duration: Optional[str] = None,
        ticket_number: Optional[str] = None,
        ticket_system: Optional[str] = None,
        **kwargs
    ):
        super(pathsfneytmprivilegedrolesprivilegedroleidmicrosoftgraphselfactivatepostrequestbodycontentapplicationjsonschema, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.reason = reason
        self.duration = duration
        self.ticket_number = ticket_number
        self.ticket_system = ticket_system
