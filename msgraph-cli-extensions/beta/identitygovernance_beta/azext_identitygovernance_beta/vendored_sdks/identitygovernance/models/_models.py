# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.core.exceptions import HttpResponseError
import msrest.serialization


class CollectionOfAccessPackage(msrest.serialization.Model):
    """Collection of accessPackage.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackage]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackage]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackage, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackage0(msrest.serialization.Model):
    """Collection of accessPackage.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackage]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackage]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackage0, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackage1(msrest.serialization.Model):
    """Collection of accessPackage.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackage]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackage]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackage1, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackage2(msrest.serialization.Model):
    """Collection of accessPackage.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackage]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackage]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackage2, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackage3(msrest.serialization.Model):
    """Collection of accessPackage.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackage]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackage]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackage3, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackage4(msrest.serialization.Model):
    """Collection of accessPackage.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackage]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackage]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackage4, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackage5(msrest.serialization.Model):
    """Collection of accessPackage.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackage]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackage]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackage5, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackage6(msrest.serialization.Model):
    """Collection of accessPackage.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackage]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackage]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackage6, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackage7(msrest.serialization.Model):
    """Collection of accessPackage.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackage]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackage]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackage7, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackage8(msrest.serialization.Model):
    """Collection of accessPackage.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackage]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackage]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackage8, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageAssignment(msrest.serialization.Model):
    """Collection of accessPackageAssignment.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageAssignment]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageAssignment]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageAssignment, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageAssignment0(msrest.serialization.Model):
    """Collection of accessPackageAssignment.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageAssignment]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageAssignment]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageAssignment0, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageAssignment1(msrest.serialization.Model):
    """Collection of accessPackageAssignment.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageAssignment]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageAssignment]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageAssignment1, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageAssignment2(msrest.serialization.Model):
    """Collection of accessPackageAssignment.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageAssignment]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageAssignment]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageAssignment2, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageAssignmentPolicy(msrest.serialization.Model):
    """Collection of accessPackageAssignmentPolicy.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageAssignmentPolicy]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageAssignmentPolicy]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageAssignmentPolicy, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageAssignmentPolicy0(msrest.serialization.Model):
    """Collection of accessPackageAssignmentPolicy.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageAssignmentPolicy]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageAssignmentPolicy]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageAssignmentPolicy0, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageAssignmentPolicy1(msrest.serialization.Model):
    """Collection of accessPackageAssignmentPolicy.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageAssignmentPolicy]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageAssignmentPolicy]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageAssignmentPolicy1, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageAssignmentPolicy2(msrest.serialization.Model):
    """Collection of accessPackageAssignmentPolicy.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageAssignmentPolicy]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageAssignmentPolicy]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageAssignmentPolicy2, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageAssignmentPolicy3(msrest.serialization.Model):
    """Collection of accessPackageAssignmentPolicy.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageAssignmentPolicy]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageAssignmentPolicy]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageAssignmentPolicy3, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageAssignmentPolicy4(msrest.serialization.Model):
    """Collection of accessPackageAssignmentPolicy.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageAssignmentPolicy]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageAssignmentPolicy]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageAssignmentPolicy4, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageAssignmentPolicy5(msrest.serialization.Model):
    """Collection of accessPackageAssignmentPolicy.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageAssignmentPolicy]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageAssignmentPolicy]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageAssignmentPolicy5, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageAssignmentPolicy6(msrest.serialization.Model):
    """Collection of accessPackageAssignmentPolicy.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageAssignmentPolicy]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageAssignmentPolicy]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageAssignmentPolicy6, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageAssignmentPolicy7(msrest.serialization.Model):
    """Collection of accessPackageAssignmentPolicy.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageAssignmentPolicy]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageAssignmentPolicy]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageAssignmentPolicy7, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageAssignmentPolicy8(msrest.serialization.Model):
    """Collection of accessPackageAssignmentPolicy.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageAssignmentPolicy]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageAssignmentPolicy]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageAssignmentPolicy8, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageAssignmentRequest(msrest.serialization.Model):
    """Collection of accessPackageAssignmentRequest.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageAssignmentRequest]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageAssignmentRequest]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageAssignmentRequest, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageAssignmentRequest0(msrest.serialization.Model):
    """Collection of accessPackageAssignmentRequest.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageAssignmentRequest]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageAssignmentRequest]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageAssignmentRequest0, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageAssignmentRequest1(msrest.serialization.Model):
    """Collection of accessPackageAssignmentRequest.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageAssignmentRequest]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageAssignmentRequest]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageAssignmentRequest1, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageAssignmentRequest2(msrest.serialization.Model):
    """Collection of accessPackageAssignmentRequest.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageAssignmentRequest]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageAssignmentRequest]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageAssignmentRequest2, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageAssignmentResourceRole(msrest.serialization.Model):
    """Collection of accessPackageAssignmentResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value:
     list[~identity_governance.models.MicrosoftGraphAccessPackageAssignmentResourceRole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageAssignmentResourceRole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageAssignmentResourceRole, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageAssignmentResourceRole0(msrest.serialization.Model):
    """Collection of accessPackageAssignmentResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value:
     list[~identity_governance.models.MicrosoftGraphAccessPackageAssignmentResourceRole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageAssignmentResourceRole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageAssignmentResourceRole0, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageAssignmentResourceRole1(msrest.serialization.Model):
    """Collection of accessPackageAssignmentResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value:
     list[~identity_governance.models.MicrosoftGraphAccessPackageAssignmentResourceRole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageAssignmentResourceRole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageAssignmentResourceRole1, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageAssignmentResourceRole2(msrest.serialization.Model):
    """Collection of accessPackageAssignmentResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value:
     list[~identity_governance.models.MicrosoftGraphAccessPackageAssignmentResourceRole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageAssignmentResourceRole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageAssignmentResourceRole2, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageCatalog(msrest.serialization.Model):
    """Collection of accessPackageCatalog.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageCatalog]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageCatalog]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageCatalog, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResource(msrest.serialization.Model):
    """Collection of accessPackageResource.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResource]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResource]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResource, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResource0(msrest.serialization.Model):
    """Collection of accessPackageResource.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResource]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResource]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResource0, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResource1(msrest.serialization.Model):
    """Collection of accessPackageResource.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResource]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResource]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResource1, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResource2(msrest.serialization.Model):
    """Collection of accessPackageResource.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResource]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResource]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResource2, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResource3(msrest.serialization.Model):
    """Collection of accessPackageResource.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResource]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResource]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResource3, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResource4(msrest.serialization.Model):
    """Collection of accessPackageResource.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResource]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResource]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResource4, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResource5(msrest.serialization.Model):
    """Collection of accessPackageResource.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResource]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResource]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResource5, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResource6(msrest.serialization.Model):
    """Collection of accessPackageResource.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResource]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResource]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResource6, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResource7(msrest.serialization.Model):
    """Collection of accessPackageResource.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResource]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResource]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResource7, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResource8(msrest.serialization.Model):
    """Collection of accessPackageResource.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResource]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResource]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResource8, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceRequest(msrest.serialization.Model):
    """Collection of accessPackageResourceRequest.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceRequest]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceRequest]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceRequest, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceRole(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceRole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceRole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceRole, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceRole0(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceRole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceRole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceRole0, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceRole1(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceRole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceRole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceRole1, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceRole10(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceRole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceRole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceRole10, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceRole11(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceRole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceRole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceRole11, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceRole12(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceRole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceRole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceRole12, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceRole13(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceRole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceRole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceRole13, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceRole14(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceRole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceRole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceRole14, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceRole15(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceRole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceRole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceRole15, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceRole16(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceRole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceRole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceRole16, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceRole17(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceRole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceRole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceRole17, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceRole18(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceRole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceRole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceRole18, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceRole19(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceRole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceRole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceRole19, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceRole2(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceRole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceRole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceRole2, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceRole20(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceRole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceRole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceRole20, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceRole21(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceRole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceRole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceRole21, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceRole22(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceRole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceRole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceRole22, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceRole23(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceRole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceRole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceRole23, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceRole24(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceRole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceRole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceRole24, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceRole25(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceRole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceRole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceRole25, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceRole26(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceRole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceRole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceRole26, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceRole27(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceRole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceRole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceRole27, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceRole28(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceRole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceRole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceRole28, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceRole29(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceRole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceRole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceRole29, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceRole3(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceRole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceRole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceRole3, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceRole30(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceRole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceRole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceRole30, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceRole31(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceRole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceRole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceRole31, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceRole32(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceRole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceRole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceRole32, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceRole33(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceRole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceRole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceRole33, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceRole34(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceRole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceRole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceRole34, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceRole35(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceRole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceRole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceRole35, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceRole36(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceRole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceRole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceRole36, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceRole37(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceRole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceRole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceRole37, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceRole38(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceRole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceRole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceRole38, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceRole39(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceRole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceRole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceRole39, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceRole4(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceRole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceRole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceRole4, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceRole40(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceRole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceRole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceRole40, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceRole41(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceRole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceRole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceRole41, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceRole42(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceRole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceRole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceRole42, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceRole43(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceRole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceRole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceRole43, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceRole44(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceRole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceRole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceRole44, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceRole45(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceRole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceRole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceRole45, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceRole46(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceRole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceRole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceRole46, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceRole47(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceRole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceRole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceRole47, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceRole48(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceRole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceRole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceRole48, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceRole49(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceRole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceRole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceRole49, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceRole5(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceRole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceRole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceRole5, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceRole50(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceRole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceRole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceRole50, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceRole51(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceRole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceRole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceRole51, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceRole52(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceRole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceRole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceRole52, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceRole53(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceRole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceRole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceRole53, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceRole54(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceRole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceRole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceRole54, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceRole55(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceRole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceRole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceRole55, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceRole56(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceRole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceRole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceRole56, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceRole57(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceRole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceRole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceRole57, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceRole58(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceRole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceRole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceRole58, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceRole59(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceRole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceRole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceRole59, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceRole6(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceRole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceRole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceRole6, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceRole60(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceRole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceRole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceRole60, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceRole61(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceRole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceRole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceRole61, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceRole7(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceRole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceRole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceRole7, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceRole8(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceRole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceRole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceRole8, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceRole9(msrest.serialization.Model):
    """Collection of accessPackageResourceRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceRole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceRole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceRole9, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceRoleScope(msrest.serialization.Model):
    """Collection of accessPackageResourceRoleScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceRoleScope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceRoleScope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceRoleScope, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceRoleScope0(msrest.serialization.Model):
    """Collection of accessPackageResourceRoleScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceRoleScope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceRoleScope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceRoleScope0, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceRoleScope1(msrest.serialization.Model):
    """Collection of accessPackageResourceRoleScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceRoleScope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceRoleScope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceRoleScope1, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceRoleScope2(msrest.serialization.Model):
    """Collection of accessPackageResourceRoleScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceRoleScope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceRoleScope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceRoleScope2, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceRoleScope3(msrest.serialization.Model):
    """Collection of accessPackageResourceRoleScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceRoleScope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceRoleScope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceRoleScope3, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceRoleScope4(msrest.serialization.Model):
    """Collection of accessPackageResourceRoleScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceRoleScope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceRoleScope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceRoleScope4, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceRoleScope5(msrest.serialization.Model):
    """Collection of accessPackageResourceRoleScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceRoleScope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceRoleScope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceRoleScope5, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceRoleScope6(msrest.serialization.Model):
    """Collection of accessPackageResourceRoleScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceRoleScope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceRoleScope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceRoleScope6, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceRoleScope7(msrest.serialization.Model):
    """Collection of accessPackageResourceRoleScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceRoleScope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceRoleScope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceRoleScope7, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceRoleScope8(msrest.serialization.Model):
    """Collection of accessPackageResourceRoleScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceRoleScope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceRoleScope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceRoleScope8, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceScope(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceScope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceScope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceScope, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceScope0(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceScope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceScope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceScope0, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceScope1(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceScope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceScope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceScope1, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceScope10(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceScope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceScope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceScope10, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceScope11(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceScope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceScope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceScope11, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceScope12(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceScope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceScope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceScope12, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceScope13(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceScope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceScope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceScope13, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceScope14(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceScope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceScope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceScope14, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceScope15(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceScope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceScope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceScope15, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceScope16(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceScope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceScope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceScope16, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceScope17(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceScope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceScope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceScope17, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceScope18(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceScope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceScope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceScope18, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceScope19(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceScope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceScope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceScope19, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceScope2(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceScope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceScope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceScope2, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceScope20(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceScope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceScope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceScope20, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceScope21(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceScope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceScope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceScope21, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceScope22(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceScope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceScope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceScope22, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceScope23(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceScope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceScope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceScope23, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceScope24(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceScope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceScope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceScope24, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceScope25(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceScope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceScope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceScope25, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceScope26(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceScope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceScope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceScope26, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceScope27(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceScope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceScope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceScope27, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceScope28(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceScope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceScope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceScope28, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceScope29(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceScope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceScope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceScope29, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceScope3(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceScope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceScope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceScope3, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceScope30(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceScope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceScope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceScope30, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceScope31(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceScope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceScope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceScope31, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceScope32(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceScope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceScope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceScope32, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceScope33(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceScope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceScope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceScope33, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceScope34(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceScope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceScope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceScope34, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceScope35(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceScope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceScope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceScope35, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceScope36(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceScope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceScope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceScope36, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceScope37(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceScope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceScope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceScope37, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceScope38(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceScope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceScope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceScope38, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceScope39(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceScope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceScope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceScope39, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceScope4(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceScope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceScope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceScope4, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceScope40(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceScope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceScope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceScope40, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceScope41(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceScope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceScope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceScope41, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceScope42(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceScope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceScope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceScope42, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceScope43(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceScope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceScope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceScope43, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceScope44(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceScope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceScope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceScope44, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceScope45(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceScope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceScope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceScope45, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceScope46(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceScope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceScope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceScope46, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceScope47(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceScope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceScope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceScope47, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceScope48(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceScope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceScope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceScope48, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceScope49(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceScope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceScope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceScope49, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceScope5(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceScope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceScope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceScope5, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceScope50(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceScope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceScope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceScope50, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceScope51(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceScope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceScope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceScope51, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceScope52(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceScope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceScope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceScope52, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceScope53(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceScope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceScope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceScope53, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceScope54(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceScope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceScope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceScope54, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceScope55(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceScope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceScope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceScope55, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceScope56(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceScope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceScope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceScope56, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceScope57(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceScope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceScope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceScope57, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceScope58(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceScope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceScope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceScope58, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceScope59(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceScope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceScope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceScope59, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceScope6(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceScope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceScope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceScope6, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceScope60(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceScope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceScope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceScope60, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceScope61(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceScope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceScope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceScope61, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceScope7(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceScope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceScope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceScope7, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceScope8(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceScope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceScope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceScope8, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessPackageResourceScope9(msrest.serialization.Model):
    """Collection of accessPackageResourceScope.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessPackageResourceScope]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessPackageResourceScope]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessPackageResourceScope9, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessReview(msrest.serialization.Model):
    """Collection of accessReview.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessReview]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessReview]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessReview, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessReview0(msrest.serialization.Model):
    """Collection of accessReview.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessReview]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessReview]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessReview0, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessReviewDecision(msrest.serialization.Model):
    """Collection of accessReviewDecision.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessReviewDecision]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessReviewDecision]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessReviewDecision, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessReviewDecision0(msrest.serialization.Model):
    """Collection of accessReviewDecision.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessReviewDecision]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessReviewDecision]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessReviewDecision0, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAccessReviewReviewer(msrest.serialization.Model):
    """Collection of accessReviewReviewer.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAccessReviewReviewer]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAccessReviewReviewer]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAccessReviewReviewer, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAgreement(msrest.serialization.Model):
    """Collection of agreement.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAgreement]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAgreement]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAgreement, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAgreementAcceptance(msrest.serialization.Model):
    """Collection of agreementAcceptance.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAgreementAcceptance]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAgreementAcceptance]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAgreementAcceptance, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAgreementAcceptance0(msrest.serialization.Model):
    """Collection of agreementAcceptance.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAgreementAcceptance]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAgreementAcceptance]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAgreementAcceptance0, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAgreementFileLocalization(msrest.serialization.Model):
    """Collection of agreementFileLocalization.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAgreementFileLocalization]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAgreementFileLocalization]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAgreementFileLocalization, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfAgreementFileLocalization0(msrest.serialization.Model):
    """Collection of agreementFileLocalization.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphAgreementFileLocalization]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAgreementFileLocalization]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfAgreementFileLocalization0, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfBusinessFlowTemplate(msrest.serialization.Model):
    """Collection of businessFlowTemplate.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphBusinessFlowTemplate]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphBusinessFlowTemplate]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfBusinessFlowTemplate, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfConnectedOrganization(msrest.serialization.Model):
    """Collection of connectedOrganization.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphConnectedOrganization]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphConnectedOrganization]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfConnectedOrganization, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfDirectoryObject(msrest.serialization.Model):
    """Collection of directoryObject.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphDirectoryObject]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphDirectoryObject]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfDirectoryObject, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfDirectoryObject0(msrest.serialization.Model):
    """Collection of directoryObject.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphDirectoryObject]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphDirectoryObject]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfDirectoryObject0, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfGovernanceResource(msrest.serialization.Model):
    """Collection of governanceResource.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphGovernanceResource]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphGovernanceResource]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfGovernanceResource, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfGovernanceRoleAssignment(msrest.serialization.Model):
    """Collection of governanceRoleAssignment.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphGovernanceRoleAssignment]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphGovernanceRoleAssignment]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfGovernanceRoleAssignment, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfGovernanceRoleAssignmentRequest(msrest.serialization.Model):
    """Collection of governanceRoleAssignmentRequest.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphGovernanceRoleAssignmentRequest]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphGovernanceRoleAssignmentRequest]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfGovernanceRoleAssignmentRequest, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfGovernanceRoleDefinition(msrest.serialization.Model):
    """Collection of governanceRoleDefinition.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphGovernanceRoleDefinition]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphGovernanceRoleDefinition]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfGovernanceRoleDefinition, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfGovernanceRoleSetting(msrest.serialization.Model):
    """Collection of governanceRoleSetting.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphGovernanceRoleSetting]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphGovernanceRoleSetting]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfGovernanceRoleSetting, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfLinksOfAgreementAcceptance(msrest.serialization.Model):
    """Collection of links of agreementAcceptance.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[str]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[str]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfLinksOfAgreementAcceptance, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfLinksOfPrivilegedRoleAssignment(msrest.serialization.Model):
    """Collection of links of privilegedRoleAssignment.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[str]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[str]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfLinksOfPrivilegedRoleAssignment, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfPrivilegedAccess(msrest.serialization.Model):
    """Collection of privilegedAccess.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphPrivilegedAccess]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphPrivilegedAccess]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfPrivilegedAccess, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfPrivilegedApproval(msrest.serialization.Model):
    """Collection of privilegedApproval.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphPrivilegedApproval]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphPrivilegedApproval]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfPrivilegedApproval, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfPrivilegedOperationEvent(msrest.serialization.Model):
    """Collection of privilegedOperationEvent.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphPrivilegedOperationEvent]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphPrivilegedOperationEvent]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfPrivilegedOperationEvent, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfPrivilegedRole(msrest.serialization.Model):
    """Collection of privilegedRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphPrivilegedRole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphPrivilegedRole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfPrivilegedRole, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfPrivilegedRoleAssignment(msrest.serialization.Model):
    """Collection of privilegedRoleAssignment.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphPrivilegedRoleAssignment]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphPrivilegedRoleAssignment]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfPrivilegedRoleAssignment, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfPrivilegedRoleAssignment0(msrest.serialization.Model):
    """Collection of privilegedRoleAssignment.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphPrivilegedRoleAssignment]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphPrivilegedRoleAssignment]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfPrivilegedRoleAssignment0, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfPrivilegedRoleAssignmentRequest(msrest.serialization.Model):
    """Collection of privilegedRoleAssignmentRequest.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphPrivilegedRoleAssignmentRequest]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphPrivilegedRoleAssignmentRequest]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfPrivilegedRoleAssignmentRequest, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfProgram(msrest.serialization.Model):
    """Collection of program.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphProgram]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphProgram]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfProgram, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfProgramControl(msrest.serialization.Model):
    """Collection of programControl.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphProgramControl]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphProgramControl]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfProgramControl, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfProgramControl0(msrest.serialization.Model):
    """Collection of programControl.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphProgramControl]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphProgramControl]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfProgramControl0, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfProgramControlType(msrest.serialization.Model):
    """Collection of programControlType.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_governance.models.MicrosoftGraphProgramControlType]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphProgramControlType]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfProgramControlType, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class MicrosoftGraphEntity(msrest.serialization.Model):
    """entity.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param id: Read-only.
    :type id: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'id': {'key': 'id', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphEntity, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.id = kwargs.get('id', None)


class MicrosoftGraphAccessPackage(MicrosoftGraphEntity):
    """accessPackage.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param catalog_id:
    :type catalog_id: str
    :param created_by:
    :type created_by: str
    :param created_date_time:
    :type created_date_time: ~datetime.datetime
    :param description:
    :type description: str
    :param display_name:
    :type display_name: str
    :param is_hidden:
    :type is_hidden: bool
    :param is_role_scopes_visible:
    :type is_role_scopes_visible: bool
    :param modified_by:
    :type modified_by: str
    :param modified_date_time:
    :type modified_date_time: ~datetime.datetime
    :param access_package_assignment_policies:
    :type access_package_assignment_policies:
     list[~identity_governance.models.MicrosoftGraphAccessPackageAssignmentPolicy]
    :param access_package_catalog: accessPackageCatalog.
    :type access_package_catalog: ~identity_governance.models.MicrosoftGraphAccessPackageCatalog
    :param access_package_resource_role_scopes:
    :type access_package_resource_role_scopes:
     list[~identity_governance.models.MicrosoftGraphAccessPackageResourceRoleScope]
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'catalog_id': {'key': 'catalogId', 'type': 'str'},
        'created_by': {'key': 'createdBy', 'type': 'str'},
        'created_date_time': {'key': 'createdDateTime', 'type': 'iso-8601'},
        'description': {'key': 'description', 'type': 'str'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'is_hidden': {'key': 'isHidden', 'type': 'bool'},
        'is_role_scopes_visible': {'key': 'isRoleScopesVisible', 'type': 'bool'},
        'modified_by': {'key': 'modifiedBy', 'type': 'str'},
        'modified_date_time': {'key': 'modifiedDateTime', 'type': 'iso-8601'},
        'access_package_assignment_policies': {'key': 'accessPackageAssignmentPolicies', 'type': '[MicrosoftGraphAccessPackageAssignmentPolicy]'},
        'access_package_catalog': {'key': 'accessPackageCatalog', 'type': 'MicrosoftGraphAccessPackageCatalog'},
        'access_package_resource_role_scopes': {'key': 'accessPackageResourceRoleScopes', 'type': '[MicrosoftGraphAccessPackageResourceRoleScope]'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphAccessPackage, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.catalog_id = kwargs.get('catalog_id', None)
        self.created_by = kwargs.get('created_by', None)
        self.created_date_time = kwargs.get('created_date_time', None)
        self.description = kwargs.get('description', None)
        self.display_name = kwargs.get('display_name', None)
        self.is_hidden = kwargs.get('is_hidden', None)
        self.is_role_scopes_visible = kwargs.get('is_role_scopes_visible', None)
        self.modified_by = kwargs.get('modified_by', None)
        self.modified_date_time = kwargs.get('modified_date_time', None)
        self.access_package_assignment_policies = kwargs.get('access_package_assignment_policies', None)
        self.access_package_catalog = kwargs.get('access_package_catalog', None)
        self.access_package_resource_role_scopes = kwargs.get('access_package_resource_role_scopes', None)


class MicrosoftGraphAccessPackageAnswer(msrest.serialization.Model):
    """accessPackageAnswer.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param answered_question: accessPackageQuestion.
    :type answered_question: ~identity_governance.models.MicrosoftGraphAccessPackageQuestion
    :param display_value:
    :type display_value: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'answered_question': {'key': 'answeredQuestion', 'type': 'MicrosoftGraphAccessPackageQuestion'},
        'display_value': {'key': 'displayValue', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphAccessPackageAnswer, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.answered_question = kwargs.get('answered_question', None)
        self.display_value = kwargs.get('display_value', None)


class MicrosoftGraphAccessPackageAssignment(MicrosoftGraphEntity):
    """accessPackageAssignment.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param access_package_id:
    :type access_package_id: str
    :param assignment_policy_id:
    :type assignment_policy_id: str
    :param assignment_state:
    :type assignment_state: str
    :param assignment_status:
    :type assignment_status: str
    :param catalog_id:
    :type catalog_id: str
    :param expired_date_time:
    :type expired_date_time: ~datetime.datetime
    :param is_extended:
    :type is_extended: bool
    :param target_id:
    :type target_id: str
    :param access_package: accessPackage.
    :type access_package: ~identity_governance.models.MicrosoftGraphAccessPackage
    :param access_package_assignment_policy: accessPackageAssignmentPolicy.
    :type access_package_assignment_policy:
     ~identity_governance.models.MicrosoftGraphAccessPackageAssignmentPolicy
    :param access_package_assignment_requests:
    :type access_package_assignment_requests:
     list[~identity_governance.models.MicrosoftGraphAccessPackageAssignmentRequest]
    :param access_package_assignment_resource_roles:
    :type access_package_assignment_resource_roles:
     list[~identity_governance.models.MicrosoftGraphAccessPackageAssignmentResourceRole]
    :param id_target_id: Read-only.
    :type id_target_id: str
    :param alt_sec_id:
    :type alt_sec_id: str
    :param connected_organization_id:
    :type connected_organization_id: str
    :param display_name_target_display_name:
    :type display_name_target_display_name: str
    :param email:
    :type email: str
    :param object_id:
    :type object_id: str
    :param on_premises_security_identifier:
    :type on_premises_security_identifier: str
    :param principal_name:
    :type principal_name: str
    :param type:
    :type type: str
    :param id_target_connected_organization_id: Read-only.
    :type id_target_connected_organization_id: str
    :param created_by:
    :type created_by: str
    :param created_date_time:
    :type created_date_time: ~datetime.datetime
    :param description:
    :type description: str
    :param display_name_target_connected_organization_display_name:
    :type display_name_target_connected_organization_display_name: str
    :param identity_sources:
    :type identity_sources: list[dict[str, object]]
    :param modified_by:
    :type modified_by: str
    :param modified_date_time:
    :type modified_date_time: ~datetime.datetime
    :param state:  Possible values include: "configured", "proposed", "unknownFutureValue".
    :type state: str or ~identity_governance.models.MicrosoftGraphConnectedOrganizationState
    :param external_sponsors:
    :type external_sponsors: list[~identity_governance.models.MicrosoftGraphDirectoryObject]
    :param internal_sponsors:
    :type internal_sponsors: list[~identity_governance.models.MicrosoftGraphDirectoryObject]
    :param expiration: expirationPattern.
    :type expiration: ~identity_governance.models.MicrosoftGraphExpirationPattern
    :param recurrence: patternedRecurrence.
    :type recurrence: ~identity_governance.models.MicrosoftGraphPatternedRecurrence
    :param start_date_time:
    :type start_date_time: ~datetime.datetime
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'access_package_id': {'key': 'accessPackageId', 'type': 'str'},
        'assignment_policy_id': {'key': 'assignmentPolicyId', 'type': 'str'},
        'assignment_state': {'key': 'assignmentState', 'type': 'str'},
        'assignment_status': {'key': 'assignmentStatus', 'type': 'str'},
        'catalog_id': {'key': 'catalogId', 'type': 'str'},
        'expired_date_time': {'key': 'expiredDateTime', 'type': 'iso-8601'},
        'is_extended': {'key': 'isExtended', 'type': 'bool'},
        'target_id': {'key': 'targetId', 'type': 'str'},
        'access_package': {'key': 'accessPackage', 'type': 'MicrosoftGraphAccessPackage'},
        'access_package_assignment_policy': {'key': 'accessPackageAssignmentPolicy', 'type': 'MicrosoftGraphAccessPackageAssignmentPolicy'},
        'access_package_assignment_requests': {'key': 'accessPackageAssignmentRequests', 'type': '[MicrosoftGraphAccessPackageAssignmentRequest]'},
        'access_package_assignment_resource_roles': {'key': 'accessPackageAssignmentResourceRoles', 'type': '[MicrosoftGraphAccessPackageAssignmentResourceRole]'},
        'id_target_id': {'key': 'target.id', 'type': 'str'},
        'alt_sec_id': {'key': 'target.altSecId', 'type': 'str'},
        'connected_organization_id': {'key': 'target.connectedOrganizationId', 'type': 'str'},
        'display_name_target_display_name': {'key': 'target.displayName', 'type': 'str'},
        'email': {'key': 'target.email', 'type': 'str'},
        'object_id': {'key': 'target.objectId', 'type': 'str'},
        'on_premises_security_identifier': {'key': 'target.onPremisesSecurityIdentifier', 'type': 'str'},
        'principal_name': {'key': 'target.principalName', 'type': 'str'},
        'type': {'key': 'target.type', 'type': 'str'},
        'id_target_connected_organization_id': {'key': 'target.connectedOrganization.id', 'type': 'str'},
        'created_by': {'key': 'target.connectedOrganization.createdBy', 'type': 'str'},
        'created_date_time': {'key': 'target.connectedOrganization.createdDateTime', 'type': 'iso-8601'},
        'description': {'key': 'target.connectedOrganization.description', 'type': 'str'},
        'display_name_target_connected_organization_display_name': {'key': 'target.connectedOrganization.displayName', 'type': 'str'},
        'identity_sources': {'key': 'target.connectedOrganization.identitySources', 'type': '[{object}]'},
        'modified_by': {'key': 'target.connectedOrganization.modifiedBy', 'type': 'str'},
        'modified_date_time': {'key': 'target.connectedOrganization.modifiedDateTime', 'type': 'iso-8601'},
        'state': {'key': 'target.connectedOrganization.state', 'type': 'str'},
        'external_sponsors': {'key': 'target.connectedOrganization.externalSponsors', 'type': '[MicrosoftGraphDirectoryObject]'},
        'internal_sponsors': {'key': 'target.connectedOrganization.internalSponsors', 'type': '[MicrosoftGraphDirectoryObject]'},
        'expiration': {'key': 'schedule.expiration', 'type': 'MicrosoftGraphExpirationPattern'},
        'recurrence': {'key': 'schedule.recurrence', 'type': 'MicrosoftGraphPatternedRecurrence'},
        'start_date_time': {'key': 'schedule.startDateTime', 'type': 'iso-8601'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphAccessPackageAssignment, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.access_package_id = kwargs.get('access_package_id', None)
        self.assignment_policy_id = kwargs.get('assignment_policy_id', None)
        self.assignment_state = kwargs.get('assignment_state', None)
        self.assignment_status = kwargs.get('assignment_status', None)
        self.catalog_id = kwargs.get('catalog_id', None)
        self.expired_date_time = kwargs.get('expired_date_time', None)
        self.is_extended = kwargs.get('is_extended', None)
        self.target_id = kwargs.get('target_id', None)
        self.access_package = kwargs.get('access_package', None)
        self.access_package_assignment_policy = kwargs.get('access_package_assignment_policy', None)
        self.access_package_assignment_requests = kwargs.get('access_package_assignment_requests', None)
        self.access_package_assignment_resource_roles = kwargs.get('access_package_assignment_resource_roles', None)
        self.id_target_id = kwargs.get('id_target_id', None)
        self.alt_sec_id = kwargs.get('alt_sec_id', None)
        self.connected_organization_id = kwargs.get('connected_organization_id', None)
        self.display_name_target_display_name = kwargs.get('display_name_target_display_name', None)
        self.email = kwargs.get('email', None)
        self.object_id = kwargs.get('object_id', None)
        self.on_premises_security_identifier = kwargs.get('on_premises_security_identifier', None)
        self.principal_name = kwargs.get('principal_name', None)
        self.type = kwargs.get('type', None)
        self.id_target_connected_organization_id = kwargs.get('id_target_connected_organization_id', None)
        self.created_by = kwargs.get('created_by', None)
        self.created_date_time = kwargs.get('created_date_time', None)
        self.description = kwargs.get('description', None)
        self.display_name_target_connected_organization_display_name = kwargs.get('display_name_target_connected_organization_display_name', None)
        self.identity_sources = kwargs.get('identity_sources', None)
        self.modified_by = kwargs.get('modified_by', None)
        self.modified_date_time = kwargs.get('modified_date_time', None)
        self.state = kwargs.get('state', None)
        self.external_sponsors = kwargs.get('external_sponsors', None)
        self.internal_sponsors = kwargs.get('internal_sponsors', None)
        self.expiration = kwargs.get('expiration', None)
        self.recurrence = kwargs.get('recurrence', None)
        self.start_date_time = kwargs.get('start_date_time', None)


class MicrosoftGraphAccessPackageAssignmentPolicy(MicrosoftGraphEntity):
    """accessPackageAssignmentPolicy.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param access_package_id:
    :type access_package_id: str
    :param can_extend:
    :type can_extend: bool
    :param created_by:
    :type created_by: str
    :param created_date_time:
    :type created_date_time: ~datetime.datetime
    :param description:
    :type description: str
    :param display_name:
    :type display_name: str
    :param duration_in_days:
    :type duration_in_days: int
    :param expiration_date_time:
    :type expiration_date_time: ~datetime.datetime
    :param modified_by:
    :type modified_by: str
    :param modified_date_time:
    :type modified_date_time: ~datetime.datetime
    :param questions:
    :type questions: list[~identity_governance.models.MicrosoftGraphAccessPackageQuestion]
    :param access_package: accessPackage.
    :type access_package: ~identity_governance.models.MicrosoftGraphAccessPackage
    :param access_package_catalog: accessPackageCatalog.
    :type access_package_catalog: ~identity_governance.models.MicrosoftGraphAccessPackageCatalog
    :param accept_requests:
    :type accept_requests: bool
    :param allowed_requestors:
    :type allowed_requestors: list[~identity_governance.models.MicrosoftGraphUserSet]
    :param scope_type:
    :type scope_type: str
    :param approval_mode:
    :type approval_mode: str
    :param approval_stages:
    :type approval_stages: list[~identity_governance.models.MicrosoftGraphApprovalStage]
    :param is_approval_required:
    :type is_approval_required: bool
    :param is_approval_required_for_extension:
    :type is_approval_required_for_extension: bool
    :param is_requestor_justification_required:
    :type is_requestor_justification_required: bool
    :param duration_in_days_access_review_settings_duration_in_days:
    :type duration_in_days_access_review_settings_duration_in_days: int
    :param is_enabled:
    :type is_enabled: bool
    :param recurrence_type:
    :type recurrence_type: str
    :param reviewers:
    :type reviewers: list[~identity_governance.models.MicrosoftGraphUserSet]
    :param reviewer_type:
    :type reviewer_type: str
    :param start_date_time:
    :type start_date_time: ~datetime.datetime
    """

    _validation = {
        'duration_in_days': {'maximum': 2147483647, 'minimum': -2147483648},
        'duration_in_days_access_review_settings_duration_in_days': {'maximum': 2147483647, 'minimum': -2147483648},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'access_package_id': {'key': 'accessPackageId', 'type': 'str'},
        'can_extend': {'key': 'canExtend', 'type': 'bool'},
        'created_by': {'key': 'createdBy', 'type': 'str'},
        'created_date_time': {'key': 'createdDateTime', 'type': 'iso-8601'},
        'description': {'key': 'description', 'type': 'str'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'duration_in_days': {'key': 'durationInDays', 'type': 'int'},
        'expiration_date_time': {'key': 'expirationDateTime', 'type': 'iso-8601'},
        'modified_by': {'key': 'modifiedBy', 'type': 'str'},
        'modified_date_time': {'key': 'modifiedDateTime', 'type': 'iso-8601'},
        'questions': {'key': 'questions', 'type': '[MicrosoftGraphAccessPackageQuestion]'},
        'access_package': {'key': 'accessPackage', 'type': 'MicrosoftGraphAccessPackage'},
        'access_package_catalog': {'key': 'accessPackageCatalog', 'type': 'MicrosoftGraphAccessPackageCatalog'},
        'accept_requests': {'key': 'requestorSettings.acceptRequests', 'type': 'bool'},
        'allowed_requestors': {'key': 'requestorSettings.allowedRequestors', 'type': '[MicrosoftGraphUserSet]'},
        'scope_type': {'key': 'requestorSettings.scopeType', 'type': 'str'},
        'approval_mode': {'key': 'requestApprovalSettings.approvalMode', 'type': 'str'},
        'approval_stages': {'key': 'requestApprovalSettings.approvalStages', 'type': '[MicrosoftGraphApprovalStage]'},
        'is_approval_required': {'key': 'requestApprovalSettings.isApprovalRequired', 'type': 'bool'},
        'is_approval_required_for_extension': {'key': 'requestApprovalSettings.isApprovalRequiredForExtension', 'type': 'bool'},
        'is_requestor_justification_required': {'key': 'requestApprovalSettings.isRequestorJustificationRequired', 'type': 'bool'},
        'duration_in_days_access_review_settings_duration_in_days': {'key': 'accessReviewSettings.durationInDays', 'type': 'int'},
        'is_enabled': {'key': 'accessReviewSettings.isEnabled', 'type': 'bool'},
        'recurrence_type': {'key': 'accessReviewSettings.recurrenceType', 'type': 'str'},
        'reviewers': {'key': 'accessReviewSettings.reviewers', 'type': '[MicrosoftGraphUserSet]'},
        'reviewer_type': {'key': 'accessReviewSettings.reviewerType', 'type': 'str'},
        'start_date_time': {'key': 'accessReviewSettings.startDateTime', 'type': 'iso-8601'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphAccessPackageAssignmentPolicy, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.access_package_id = kwargs.get('access_package_id', None)
        self.can_extend = kwargs.get('can_extend', None)
        self.created_by = kwargs.get('created_by', None)
        self.created_date_time = kwargs.get('created_date_time', None)
        self.description = kwargs.get('description', None)
        self.display_name = kwargs.get('display_name', None)
        self.duration_in_days = kwargs.get('duration_in_days', None)
        self.expiration_date_time = kwargs.get('expiration_date_time', None)
        self.modified_by = kwargs.get('modified_by', None)
        self.modified_date_time = kwargs.get('modified_date_time', None)
        self.questions = kwargs.get('questions', None)
        self.access_package = kwargs.get('access_package', None)
        self.access_package_catalog = kwargs.get('access_package_catalog', None)
        self.accept_requests = kwargs.get('accept_requests', None)
        self.allowed_requestors = kwargs.get('allowed_requestors', None)
        self.scope_type = kwargs.get('scope_type', None)
        self.approval_mode = kwargs.get('approval_mode', None)
        self.approval_stages = kwargs.get('approval_stages', None)
        self.is_approval_required = kwargs.get('is_approval_required', None)
        self.is_approval_required_for_extension = kwargs.get('is_approval_required_for_extension', None)
        self.is_requestor_justification_required = kwargs.get('is_requestor_justification_required', None)
        self.duration_in_days_access_review_settings_duration_in_days = kwargs.get('duration_in_days_access_review_settings_duration_in_days', None)
        self.is_enabled = kwargs.get('is_enabled', None)
        self.recurrence_type = kwargs.get('recurrence_type', None)
        self.reviewers = kwargs.get('reviewers', None)
        self.reviewer_type = kwargs.get('reviewer_type', None)
        self.start_date_time = kwargs.get('start_date_time', None)


class MicrosoftGraphAccessPackageAssignmentRequest(MicrosoftGraphEntity):
    """accessPackageAssignmentRequest.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param answers:
    :type answers: list[~identity_governance.models.MicrosoftGraphAccessPackageAnswer]
    :param completed_date:
    :type completed_date: ~datetime.datetime
    :param created_date_time:
    :type created_date_time: ~datetime.datetime
    :param expiration_date_time:
    :type expiration_date_time: ~datetime.datetime
    :param is_validation_only:
    :type is_validation_only: bool
    :param justification:
    :type justification: str
    :param request_state:
    :type request_state: str
    :param request_status:
    :type request_status: str
    :param request_type:
    :type request_type: str
    :param access_package: accessPackage.
    :type access_package: ~identity_governance.models.MicrosoftGraphAccessPackage
    :param access_package_assignment: accessPackageAssignment.
    :type access_package_assignment:
     ~identity_governance.models.MicrosoftGraphAccessPackageAssignment
    :param id_requestor_id: Read-only.
    :type id_requestor_id: str
    :param alt_sec_id:
    :type alt_sec_id: str
    :param connected_organization_id:
    :type connected_organization_id: str
    :param display_name_requestor_display_name:
    :type display_name_requestor_display_name: str
    :param email:
    :type email: str
    :param object_id:
    :type object_id: str
    :param on_premises_security_identifier:
    :type on_premises_security_identifier: str
    :param principal_name:
    :type principal_name: str
    :param type:
    :type type: str
    :param id_requestor_connected_organization_id: Read-only.
    :type id_requestor_connected_organization_id: str
    :param created_by:
    :type created_by: str
    :param created_date_time_requestor_connected_organization_created_date_time:
    :type created_date_time_requestor_connected_organization_created_date_time: ~datetime.datetime
    :param description:
    :type description: str
    :param display_name_requestor_connected_organization_display_name:
    :type display_name_requestor_connected_organization_display_name: str
    :param identity_sources:
    :type identity_sources: list[dict[str, object]]
    :param modified_by:
    :type modified_by: str
    :param modified_date_time:
    :type modified_date_time: ~datetime.datetime
    :param state:  Possible values include: "configured", "proposed", "unknownFutureValue".
    :type state: str or ~identity_governance.models.MicrosoftGraphConnectedOrganizationState
    :param external_sponsors:
    :type external_sponsors: list[~identity_governance.models.MicrosoftGraphDirectoryObject]
    :param internal_sponsors:
    :type internal_sponsors: list[~identity_governance.models.MicrosoftGraphDirectoryObject]
    :param expiration: expirationPattern.
    :type expiration: ~identity_governance.models.MicrosoftGraphExpirationPattern
    :param recurrence: patternedRecurrence.
    :type recurrence: ~identity_governance.models.MicrosoftGraphPatternedRecurrence
    :param start_date_time:
    :type start_date_time: ~datetime.datetime
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'answers': {'key': 'answers', 'type': '[MicrosoftGraphAccessPackageAnswer]'},
        'completed_date': {'key': 'completedDate', 'type': 'iso-8601'},
        'created_date_time': {'key': 'createdDateTime', 'type': 'iso-8601'},
        'expiration_date_time': {'key': 'expirationDateTime', 'type': 'iso-8601'},
        'is_validation_only': {'key': 'isValidationOnly', 'type': 'bool'},
        'justification': {'key': 'justification', 'type': 'str'},
        'request_state': {'key': 'requestState', 'type': 'str'},
        'request_status': {'key': 'requestStatus', 'type': 'str'},
        'request_type': {'key': 'requestType', 'type': 'str'},
        'access_package': {'key': 'accessPackage', 'type': 'MicrosoftGraphAccessPackage'},
        'access_package_assignment': {'key': 'accessPackageAssignment', 'type': 'MicrosoftGraphAccessPackageAssignment'},
        'id_requestor_id': {'key': 'requestor.id', 'type': 'str'},
        'alt_sec_id': {'key': 'requestor.altSecId', 'type': 'str'},
        'connected_organization_id': {'key': 'requestor.connectedOrganizationId', 'type': 'str'},
        'display_name_requestor_display_name': {'key': 'requestor.displayName', 'type': 'str'},
        'email': {'key': 'requestor.email', 'type': 'str'},
        'object_id': {'key': 'requestor.objectId', 'type': 'str'},
        'on_premises_security_identifier': {'key': 'requestor.onPremisesSecurityIdentifier', 'type': 'str'},
        'principal_name': {'key': 'requestor.principalName', 'type': 'str'},
        'type': {'key': 'requestor.type', 'type': 'str'},
        'id_requestor_connected_organization_id': {'key': 'requestor.connectedOrganization.id', 'type': 'str'},
        'created_by': {'key': 'requestor.connectedOrganization.createdBy', 'type': 'str'},
        'created_date_time_requestor_connected_organization_created_date_time': {'key': 'requestor.connectedOrganization.createdDateTime', 'type': 'iso-8601'},
        'description': {'key': 'requestor.connectedOrganization.description', 'type': 'str'},
        'display_name_requestor_connected_organization_display_name': {'key': 'requestor.connectedOrganization.displayName', 'type': 'str'},
        'identity_sources': {'key': 'requestor.connectedOrganization.identitySources', 'type': '[{object}]'},
        'modified_by': {'key': 'requestor.connectedOrganization.modifiedBy', 'type': 'str'},
        'modified_date_time': {'key': 'requestor.connectedOrganization.modifiedDateTime', 'type': 'iso-8601'},
        'state': {'key': 'requestor.connectedOrganization.state', 'type': 'str'},
        'external_sponsors': {'key': 'requestor.connectedOrganization.externalSponsors', 'type': '[MicrosoftGraphDirectoryObject]'},
        'internal_sponsors': {'key': 'requestor.connectedOrganization.internalSponsors', 'type': '[MicrosoftGraphDirectoryObject]'},
        'expiration': {'key': 'schedule.expiration', 'type': 'MicrosoftGraphExpirationPattern'},
        'recurrence': {'key': 'schedule.recurrence', 'type': 'MicrosoftGraphPatternedRecurrence'},
        'start_date_time': {'key': 'schedule.startDateTime', 'type': 'iso-8601'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphAccessPackageAssignmentRequest, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.answers = kwargs.get('answers', None)
        self.completed_date = kwargs.get('completed_date', None)
        self.created_date_time = kwargs.get('created_date_time', None)
        self.expiration_date_time = kwargs.get('expiration_date_time', None)
        self.is_validation_only = kwargs.get('is_validation_only', None)
        self.justification = kwargs.get('justification', None)
        self.request_state = kwargs.get('request_state', None)
        self.request_status = kwargs.get('request_status', None)
        self.request_type = kwargs.get('request_type', None)
        self.access_package = kwargs.get('access_package', None)
        self.access_package_assignment = kwargs.get('access_package_assignment', None)
        self.id_requestor_id = kwargs.get('id_requestor_id', None)
        self.alt_sec_id = kwargs.get('alt_sec_id', None)
        self.connected_organization_id = kwargs.get('connected_organization_id', None)
        self.display_name_requestor_display_name = kwargs.get('display_name_requestor_display_name', None)
        self.email = kwargs.get('email', None)
        self.object_id = kwargs.get('object_id', None)
        self.on_premises_security_identifier = kwargs.get('on_premises_security_identifier', None)
        self.principal_name = kwargs.get('principal_name', None)
        self.type = kwargs.get('type', None)
        self.id_requestor_connected_organization_id = kwargs.get('id_requestor_connected_organization_id', None)
        self.created_by = kwargs.get('created_by', None)
        self.created_date_time_requestor_connected_organization_created_date_time = kwargs.get('created_date_time_requestor_connected_organization_created_date_time', None)
        self.description = kwargs.get('description', None)
        self.display_name_requestor_connected_organization_display_name = kwargs.get('display_name_requestor_connected_organization_display_name', None)
        self.identity_sources = kwargs.get('identity_sources', None)
        self.modified_by = kwargs.get('modified_by', None)
        self.modified_date_time = kwargs.get('modified_date_time', None)
        self.state = kwargs.get('state', None)
        self.external_sponsors = kwargs.get('external_sponsors', None)
        self.internal_sponsors = kwargs.get('internal_sponsors', None)
        self.expiration = kwargs.get('expiration', None)
        self.recurrence = kwargs.get('recurrence', None)
        self.start_date_time = kwargs.get('start_date_time', None)


class MicrosoftGraphAccessPackageAssignmentResourceRole(MicrosoftGraphEntity):
    """accessPackageAssignmentResourceRole.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param origin_id:
    :type origin_id: str
    :param origin_system:
    :type origin_system: str
    :param status:
    :type status: str
    :param access_package_assignments:
    :type access_package_assignments:
     list[~identity_governance.models.MicrosoftGraphAccessPackageAssignment]
    :param access_package_resource_role: accessPackageResourceRole.
    :type access_package_resource_role:
     ~identity_governance.models.MicrosoftGraphAccessPackageResourceRole
    :param access_package_resource_scope: accessPackageResourceScope.
    :type access_package_resource_scope:
     ~identity_governance.models.MicrosoftGraphAccessPackageResourceScope
    :param id_access_package_subject_id: Read-only.
    :type id_access_package_subject_id: str
    :param alt_sec_id:
    :type alt_sec_id: str
    :param connected_organization_id:
    :type connected_organization_id: str
    :param display_name_access_package_subject_display_name:
    :type display_name_access_package_subject_display_name: str
    :param email:
    :type email: str
    :param object_id:
    :type object_id: str
    :param on_premises_security_identifier:
    :type on_premises_security_identifier: str
    :param principal_name:
    :type principal_name: str
    :param type:
    :type type: str
    :param id_access_package_subject_connected_organization_id: Read-only.
    :type id_access_package_subject_connected_organization_id: str
    :param created_by:
    :type created_by: str
    :param created_date_time:
    :type created_date_time: ~datetime.datetime
    :param description:
    :type description: str
    :param display_name_access_package_subject_connected_organization_display_name:
    :type display_name_access_package_subject_connected_organization_display_name: str
    :param identity_sources:
    :type identity_sources: list[dict[str, object]]
    :param modified_by:
    :type modified_by: str
    :param modified_date_time:
    :type modified_date_time: ~datetime.datetime
    :param state:  Possible values include: "configured", "proposed", "unknownFutureValue".
    :type state: str or ~identity_governance.models.MicrosoftGraphConnectedOrganizationState
    :param external_sponsors:
    :type external_sponsors: list[~identity_governance.models.MicrosoftGraphDirectoryObject]
    :param internal_sponsors:
    :type internal_sponsors: list[~identity_governance.models.MicrosoftGraphDirectoryObject]
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'origin_id': {'key': 'originId', 'type': 'str'},
        'origin_system': {'key': 'originSystem', 'type': 'str'},
        'status': {'key': 'status', 'type': 'str'},
        'access_package_assignments': {'key': 'accessPackageAssignments', 'type': '[MicrosoftGraphAccessPackageAssignment]'},
        'access_package_resource_role': {'key': 'accessPackageResourceRole', 'type': 'MicrosoftGraphAccessPackageResourceRole'},
        'access_package_resource_scope': {'key': 'accessPackageResourceScope', 'type': 'MicrosoftGraphAccessPackageResourceScope'},
        'id_access_package_subject_id': {'key': 'accessPackageSubject.id', 'type': 'str'},
        'alt_sec_id': {'key': 'accessPackageSubject.altSecId', 'type': 'str'},
        'connected_organization_id': {'key': 'accessPackageSubject.connectedOrganizationId', 'type': 'str'},
        'display_name_access_package_subject_display_name': {'key': 'accessPackageSubject.displayName', 'type': 'str'},
        'email': {'key': 'accessPackageSubject.email', 'type': 'str'},
        'object_id': {'key': 'accessPackageSubject.objectId', 'type': 'str'},
        'on_premises_security_identifier': {'key': 'accessPackageSubject.onPremisesSecurityIdentifier', 'type': 'str'},
        'principal_name': {'key': 'accessPackageSubject.principalName', 'type': 'str'},
        'type': {'key': 'accessPackageSubject.type', 'type': 'str'},
        'id_access_package_subject_connected_organization_id': {'key': 'accessPackageSubject.connectedOrganization.id', 'type': 'str'},
        'created_by': {'key': 'accessPackageSubject.connectedOrganization.createdBy', 'type': 'str'},
        'created_date_time': {'key': 'accessPackageSubject.connectedOrganization.createdDateTime', 'type': 'iso-8601'},
        'description': {'key': 'accessPackageSubject.connectedOrganization.description', 'type': 'str'},
        'display_name_access_package_subject_connected_organization_display_name': {'key': 'accessPackageSubject.connectedOrganization.displayName', 'type': 'str'},
        'identity_sources': {'key': 'accessPackageSubject.connectedOrganization.identitySources', 'type': '[{object}]'},
        'modified_by': {'key': 'accessPackageSubject.connectedOrganization.modifiedBy', 'type': 'str'},
        'modified_date_time': {'key': 'accessPackageSubject.connectedOrganization.modifiedDateTime', 'type': 'iso-8601'},
        'state': {'key': 'accessPackageSubject.connectedOrganization.state', 'type': 'str'},
        'external_sponsors': {'key': 'accessPackageSubject.connectedOrganization.externalSponsors', 'type': '[MicrosoftGraphDirectoryObject]'},
        'internal_sponsors': {'key': 'accessPackageSubject.connectedOrganization.internalSponsors', 'type': '[MicrosoftGraphDirectoryObject]'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphAccessPackageAssignmentResourceRole, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.origin_id = kwargs.get('origin_id', None)
        self.origin_system = kwargs.get('origin_system', None)
        self.status = kwargs.get('status', None)
        self.access_package_assignments = kwargs.get('access_package_assignments', None)
        self.access_package_resource_role = kwargs.get('access_package_resource_role', None)
        self.access_package_resource_scope = kwargs.get('access_package_resource_scope', None)
        self.id_access_package_subject_id = kwargs.get('id_access_package_subject_id', None)
        self.alt_sec_id = kwargs.get('alt_sec_id', None)
        self.connected_organization_id = kwargs.get('connected_organization_id', None)
        self.display_name_access_package_subject_display_name = kwargs.get('display_name_access_package_subject_display_name', None)
        self.email = kwargs.get('email', None)
        self.object_id = kwargs.get('object_id', None)
        self.on_premises_security_identifier = kwargs.get('on_premises_security_identifier', None)
        self.principal_name = kwargs.get('principal_name', None)
        self.type = kwargs.get('type', None)
        self.id_access_package_subject_connected_organization_id = kwargs.get('id_access_package_subject_connected_organization_id', None)
        self.created_by = kwargs.get('created_by', None)
        self.created_date_time = kwargs.get('created_date_time', None)
        self.description = kwargs.get('description', None)
        self.display_name_access_package_subject_connected_organization_display_name = kwargs.get('display_name_access_package_subject_connected_organization_display_name', None)
        self.identity_sources = kwargs.get('identity_sources', None)
        self.modified_by = kwargs.get('modified_by', None)
        self.modified_date_time = kwargs.get('modified_date_time', None)
        self.state = kwargs.get('state', None)
        self.external_sponsors = kwargs.get('external_sponsors', None)
        self.internal_sponsors = kwargs.get('internal_sponsors', None)


class MicrosoftGraphAccessPackageCatalog(MicrosoftGraphEntity):
    """accessPackageCatalog.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param catalog_status:
    :type catalog_status: str
    :param catalog_type:
    :type catalog_type: str
    :param created_by:
    :type created_by: str
    :param created_date_time:
    :type created_date_time: ~datetime.datetime
    :param description:
    :type description: str
    :param display_name:
    :type display_name: str
    :param is_externally_visible:
    :type is_externally_visible: bool
    :param modified_by:
    :type modified_by: str
    :param modified_date_time:
    :type modified_date_time: ~datetime.datetime
    :param access_package_resource_roles:
    :type access_package_resource_roles:
     list[~identity_governance.models.MicrosoftGraphAccessPackageResourceRole]
    :param access_package_resources:
    :type access_package_resources:
     list[~identity_governance.models.MicrosoftGraphAccessPackageResource]
    :param access_package_resource_scopes:
    :type access_package_resource_scopes:
     list[~identity_governance.models.MicrosoftGraphAccessPackageResourceScope]
    :param access_packages:
    :type access_packages: list[~identity_governance.models.MicrosoftGraphAccessPackage]
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'catalog_status': {'key': 'catalogStatus', 'type': 'str'},
        'catalog_type': {'key': 'catalogType', 'type': 'str'},
        'created_by': {'key': 'createdBy', 'type': 'str'},
        'created_date_time': {'key': 'createdDateTime', 'type': 'iso-8601'},
        'description': {'key': 'description', 'type': 'str'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'is_externally_visible': {'key': 'isExternallyVisible', 'type': 'bool'},
        'modified_by': {'key': 'modifiedBy', 'type': 'str'},
        'modified_date_time': {'key': 'modifiedDateTime', 'type': 'iso-8601'},
        'access_package_resource_roles': {'key': 'accessPackageResourceRoles', 'type': '[MicrosoftGraphAccessPackageResourceRole]'},
        'access_package_resources': {'key': 'accessPackageResources', 'type': '[MicrosoftGraphAccessPackageResource]'},
        'access_package_resource_scopes': {'key': 'accessPackageResourceScopes', 'type': '[MicrosoftGraphAccessPackageResourceScope]'},
        'access_packages': {'key': 'accessPackages', 'type': '[MicrosoftGraphAccessPackage]'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphAccessPackageCatalog, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.catalog_status = kwargs.get('catalog_status', None)
        self.catalog_type = kwargs.get('catalog_type', None)
        self.created_by = kwargs.get('created_by', None)
        self.created_date_time = kwargs.get('created_date_time', None)
        self.description = kwargs.get('description', None)
        self.display_name = kwargs.get('display_name', None)
        self.is_externally_visible = kwargs.get('is_externally_visible', None)
        self.modified_by = kwargs.get('modified_by', None)
        self.modified_date_time = kwargs.get('modified_date_time', None)
        self.access_package_resource_roles = kwargs.get('access_package_resource_roles', None)
        self.access_package_resources = kwargs.get('access_package_resources', None)
        self.access_package_resource_scopes = kwargs.get('access_package_resource_scopes', None)
        self.access_packages = kwargs.get('access_packages', None)


class MicrosoftGraphAccessPackageLocalizedContent(msrest.serialization.Model):
    """accessPackageLocalizedContent.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param default_text:
    :type default_text: str
    :param localized_texts:
    :type localized_texts:
     list[~identity_governance.models.MicrosoftGraphAccessPackageLocalizedText]
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'default_text': {'key': 'defaultText', 'type': 'str'},
        'localized_texts': {'key': 'localizedTexts', 'type': '[MicrosoftGraphAccessPackageLocalizedText]'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphAccessPackageLocalizedContent, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.default_text = kwargs.get('default_text', None)
        self.localized_texts = kwargs.get('localized_texts', None)


class MicrosoftGraphAccessPackageLocalizedText(msrest.serialization.Model):
    """accessPackageLocalizedText.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param language_code:
    :type language_code: str
    :param text:
    :type text: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'language_code': {'key': 'languageCode', 'type': 'str'},
        'text': {'key': 'text', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphAccessPackageLocalizedText, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.language_code = kwargs.get('language_code', None)
        self.text = kwargs.get('text', None)


class MicrosoftGraphAccessPackageQuestion(msrest.serialization.Model):
    """accessPackageQuestion.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param id:
    :type id: str
    :param is_required:
    :type is_required: bool
    :param sequence:
    :type sequence: int
    :param text: accessPackageLocalizedContent.
    :type text: ~identity_governance.models.MicrosoftGraphAccessPackageLocalizedContent
    """

    _validation = {
        'sequence': {'maximum': 2147483647, 'minimum': -2147483648},
    }

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'id': {'key': 'id', 'type': 'str'},
        'is_required': {'key': 'isRequired', 'type': 'bool'},
        'sequence': {'key': 'sequence', 'type': 'int'},
        'text': {'key': 'text', 'type': 'MicrosoftGraphAccessPackageLocalizedContent'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphAccessPackageQuestion, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.id = kwargs.get('id', None)
        self.is_required = kwargs.get('is_required', None)
        self.sequence = kwargs.get('sequence', None)
        self.text = kwargs.get('text', None)


class MicrosoftGraphAccessPackageResource(MicrosoftGraphEntity):
    """accessPackageResource.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param added_by:
    :type added_by: str
    :param added_on:
    :type added_on: ~datetime.datetime
    :param attributes:
    :type attributes:
     list[~identity_governance.models.MicrosoftGraphAccessPackageResourceAttribute]
    :param description:
    :type description: str
    :param display_name:
    :type display_name: str
    :param is_pending_onboarding:
    :type is_pending_onboarding: bool
    :param origin_id:
    :type origin_id: str
    :param origin_system:
    :type origin_system: str
    :param resource_type:
    :type resource_type: str
    :param url:
    :type url: str
    :param access_package_resource_roles:
    :type access_package_resource_roles:
     list[~identity_governance.models.MicrosoftGraphAccessPackageResourceRole]
    :param access_package_resource_scopes:
    :type access_package_resource_scopes:
     list[~identity_governance.models.MicrosoftGraphAccessPackageResourceScope]
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'added_by': {'key': 'addedBy', 'type': 'str'},
        'added_on': {'key': 'addedOn', 'type': 'iso-8601'},
        'attributes': {'key': 'attributes', 'type': '[MicrosoftGraphAccessPackageResourceAttribute]'},
        'description': {'key': 'description', 'type': 'str'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'is_pending_onboarding': {'key': 'isPendingOnboarding', 'type': 'bool'},
        'origin_id': {'key': 'originId', 'type': 'str'},
        'origin_system': {'key': 'originSystem', 'type': 'str'},
        'resource_type': {'key': 'resourceType', 'type': 'str'},
        'url': {'key': 'url', 'type': 'str'},
        'access_package_resource_roles': {'key': 'accessPackageResourceRoles', 'type': '[MicrosoftGraphAccessPackageResourceRole]'},
        'access_package_resource_scopes': {'key': 'accessPackageResourceScopes', 'type': '[MicrosoftGraphAccessPackageResourceScope]'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphAccessPackageResource, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.added_by = kwargs.get('added_by', None)
        self.added_on = kwargs.get('added_on', None)
        self.attributes = kwargs.get('attributes', None)
        self.description = kwargs.get('description', None)
        self.display_name = kwargs.get('display_name', None)
        self.is_pending_onboarding = kwargs.get('is_pending_onboarding', None)
        self.origin_id = kwargs.get('origin_id', None)
        self.origin_system = kwargs.get('origin_system', None)
        self.resource_type = kwargs.get('resource_type', None)
        self.url = kwargs.get('url', None)
        self.access_package_resource_roles = kwargs.get('access_package_resource_roles', None)
        self.access_package_resource_scopes = kwargs.get('access_package_resource_scopes', None)


class MicrosoftGraphAccessPackageResourceAttribute(msrest.serialization.Model):
    """accessPackageResourceAttribute.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param attribute_destination: accessPackageResourceAttributeDestination.
    :type attribute_destination: dict[str, object]
    :param attribute_name:
    :type attribute_name: str
    :param attribute_source: accessPackageResourceAttributeSource.
    :type attribute_source: dict[str, object]
    :param id:
    :type id: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'attribute_destination': {'key': 'attributeDestination', 'type': '{object}'},
        'attribute_name': {'key': 'attributeName', 'type': 'str'},
        'attribute_source': {'key': 'attributeSource', 'type': '{object}'},
        'id': {'key': 'id', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphAccessPackageResourceAttribute, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.attribute_destination = kwargs.get('attribute_destination', None)
        self.attribute_name = kwargs.get('attribute_name', None)
        self.attribute_source = kwargs.get('attribute_source', None)
        self.id = kwargs.get('id', None)


class MicrosoftGraphAccessPackageResourceRequest(MicrosoftGraphEntity):
    """accessPackageResourceRequest.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param catalog_id:
    :type catalog_id: str
    :param execute_immediately:
    :type execute_immediately: bool
    :param expiration_date_time:
    :type expiration_date_time: ~datetime.datetime
    :param is_validation_only:
    :type is_validation_only: bool
    :param justification:
    :type justification: str
    :param request_state:
    :type request_state: str
    :param request_status:
    :type request_status: str
    :param request_type:
    :type request_type: str
    :param access_package_resource: accessPackageResource.
    :type access_package_resource: ~identity_governance.models.MicrosoftGraphAccessPackageResource
    :param id_requestor_id: Read-only.
    :type id_requestor_id: str
    :param alt_sec_id:
    :type alt_sec_id: str
    :param connected_organization_id:
    :type connected_organization_id: str
    :param display_name_requestor_display_name:
    :type display_name_requestor_display_name: str
    :param email:
    :type email: str
    :param object_id:
    :type object_id: str
    :param on_premises_security_identifier:
    :type on_premises_security_identifier: str
    :param principal_name:
    :type principal_name: str
    :param type:
    :type type: str
    :param id_requestor_connected_organization_id: Read-only.
    :type id_requestor_connected_organization_id: str
    :param created_by:
    :type created_by: str
    :param created_date_time:
    :type created_date_time: ~datetime.datetime
    :param description:
    :type description: str
    :param display_name_requestor_connected_organization_display_name:
    :type display_name_requestor_connected_organization_display_name: str
    :param identity_sources:
    :type identity_sources: list[dict[str, object]]
    :param modified_by:
    :type modified_by: str
    :param modified_date_time:
    :type modified_date_time: ~datetime.datetime
    :param state:  Possible values include: "configured", "proposed", "unknownFutureValue".
    :type state: str or ~identity_governance.models.MicrosoftGraphConnectedOrganizationState
    :param external_sponsors:
    :type external_sponsors: list[~identity_governance.models.MicrosoftGraphDirectoryObject]
    :param internal_sponsors:
    :type internal_sponsors: list[~identity_governance.models.MicrosoftGraphDirectoryObject]
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'catalog_id': {'key': 'catalogId', 'type': 'str'},
        'execute_immediately': {'key': 'executeImmediately', 'type': 'bool'},
        'expiration_date_time': {'key': 'expirationDateTime', 'type': 'iso-8601'},
        'is_validation_only': {'key': 'isValidationOnly', 'type': 'bool'},
        'justification': {'key': 'justification', 'type': 'str'},
        'request_state': {'key': 'requestState', 'type': 'str'},
        'request_status': {'key': 'requestStatus', 'type': 'str'},
        'request_type': {'key': 'requestType', 'type': 'str'},
        'access_package_resource': {'key': 'accessPackageResource', 'type': 'MicrosoftGraphAccessPackageResource'},
        'id_requestor_id': {'key': 'requestor.id', 'type': 'str'},
        'alt_sec_id': {'key': 'requestor.altSecId', 'type': 'str'},
        'connected_organization_id': {'key': 'requestor.connectedOrganizationId', 'type': 'str'},
        'display_name_requestor_display_name': {'key': 'requestor.displayName', 'type': 'str'},
        'email': {'key': 'requestor.email', 'type': 'str'},
        'object_id': {'key': 'requestor.objectId', 'type': 'str'},
        'on_premises_security_identifier': {'key': 'requestor.onPremisesSecurityIdentifier', 'type': 'str'},
        'principal_name': {'key': 'requestor.principalName', 'type': 'str'},
        'type': {'key': 'requestor.type', 'type': 'str'},
        'id_requestor_connected_organization_id': {'key': 'requestor.connectedOrganization.id', 'type': 'str'},
        'created_by': {'key': 'requestor.connectedOrganization.createdBy', 'type': 'str'},
        'created_date_time': {'key': 'requestor.connectedOrganization.createdDateTime', 'type': 'iso-8601'},
        'description': {'key': 'requestor.connectedOrganization.description', 'type': 'str'},
        'display_name_requestor_connected_organization_display_name': {'key': 'requestor.connectedOrganization.displayName', 'type': 'str'},
        'identity_sources': {'key': 'requestor.connectedOrganization.identitySources', 'type': '[{object}]'},
        'modified_by': {'key': 'requestor.connectedOrganization.modifiedBy', 'type': 'str'},
        'modified_date_time': {'key': 'requestor.connectedOrganization.modifiedDateTime', 'type': 'iso-8601'},
        'state': {'key': 'requestor.connectedOrganization.state', 'type': 'str'},
        'external_sponsors': {'key': 'requestor.connectedOrganization.externalSponsors', 'type': '[MicrosoftGraphDirectoryObject]'},
        'internal_sponsors': {'key': 'requestor.connectedOrganization.internalSponsors', 'type': '[MicrosoftGraphDirectoryObject]'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphAccessPackageResourceRequest, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.catalog_id = kwargs.get('catalog_id', None)
        self.execute_immediately = kwargs.get('execute_immediately', None)
        self.expiration_date_time = kwargs.get('expiration_date_time', None)
        self.is_validation_only = kwargs.get('is_validation_only', None)
        self.justification = kwargs.get('justification', None)
        self.request_state = kwargs.get('request_state', None)
        self.request_status = kwargs.get('request_status', None)
        self.request_type = kwargs.get('request_type', None)
        self.access_package_resource = kwargs.get('access_package_resource', None)
        self.id_requestor_id = kwargs.get('id_requestor_id', None)
        self.alt_sec_id = kwargs.get('alt_sec_id', None)
        self.connected_organization_id = kwargs.get('connected_organization_id', None)
        self.display_name_requestor_display_name = kwargs.get('display_name_requestor_display_name', None)
        self.email = kwargs.get('email', None)
        self.object_id = kwargs.get('object_id', None)
        self.on_premises_security_identifier = kwargs.get('on_premises_security_identifier', None)
        self.principal_name = kwargs.get('principal_name', None)
        self.type = kwargs.get('type', None)
        self.id_requestor_connected_organization_id = kwargs.get('id_requestor_connected_organization_id', None)
        self.created_by = kwargs.get('created_by', None)
        self.created_date_time = kwargs.get('created_date_time', None)
        self.description = kwargs.get('description', None)
        self.display_name_requestor_connected_organization_display_name = kwargs.get('display_name_requestor_connected_organization_display_name', None)
        self.identity_sources = kwargs.get('identity_sources', None)
        self.modified_by = kwargs.get('modified_by', None)
        self.modified_date_time = kwargs.get('modified_date_time', None)
        self.state = kwargs.get('state', None)
        self.external_sponsors = kwargs.get('external_sponsors', None)
        self.internal_sponsors = kwargs.get('internal_sponsors', None)


class MicrosoftGraphAccessPackageResourceRole(MicrosoftGraphEntity):
    """accessPackageResourceRole.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param description:
    :type description: str
    :param display_name:
    :type display_name: str
    :param origin_id:
    :type origin_id: str
    :param origin_system:
    :type origin_system: str
    :param access_package_resource: accessPackageResource.
    :type access_package_resource: ~identity_governance.models.MicrosoftGraphAccessPackageResource
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'description': {'key': 'description', 'type': 'str'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'origin_id': {'key': 'originId', 'type': 'str'},
        'origin_system': {'key': 'originSystem', 'type': 'str'},
        'access_package_resource': {'key': 'accessPackageResource', 'type': 'MicrosoftGraphAccessPackageResource'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphAccessPackageResourceRole, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.description = kwargs.get('description', None)
        self.display_name = kwargs.get('display_name', None)
        self.origin_id = kwargs.get('origin_id', None)
        self.origin_system = kwargs.get('origin_system', None)
        self.access_package_resource = kwargs.get('access_package_resource', None)


class MicrosoftGraphAccessPackageResourceRoleScope(MicrosoftGraphEntity):
    """accessPackageResourceRoleScope.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param created_by:
    :type created_by: str
    :param created_date_time:
    :type created_date_time: ~datetime.datetime
    :param modified_by:
    :type modified_by: str
    :param modified_date_time:
    :type modified_date_time: ~datetime.datetime
    :param access_package_resource_role: accessPackageResourceRole.
    :type access_package_resource_role:
     ~identity_governance.models.MicrosoftGraphAccessPackageResourceRole
    :param access_package_resource_scope: accessPackageResourceScope.
    :type access_package_resource_scope:
     ~identity_governance.models.MicrosoftGraphAccessPackageResourceScope
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'created_by': {'key': 'createdBy', 'type': 'str'},
        'created_date_time': {'key': 'createdDateTime', 'type': 'iso-8601'},
        'modified_by': {'key': 'modifiedBy', 'type': 'str'},
        'modified_date_time': {'key': 'modifiedDateTime', 'type': 'iso-8601'},
        'access_package_resource_role': {'key': 'accessPackageResourceRole', 'type': 'MicrosoftGraphAccessPackageResourceRole'},
        'access_package_resource_scope': {'key': 'accessPackageResourceScope', 'type': 'MicrosoftGraphAccessPackageResourceScope'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphAccessPackageResourceRoleScope, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.created_by = kwargs.get('created_by', None)
        self.created_date_time = kwargs.get('created_date_time', None)
        self.modified_by = kwargs.get('modified_by', None)
        self.modified_date_time = kwargs.get('modified_date_time', None)
        self.access_package_resource_role = kwargs.get('access_package_resource_role', None)
        self.access_package_resource_scope = kwargs.get('access_package_resource_scope', None)


class MicrosoftGraphAccessPackageResourceScope(MicrosoftGraphEntity):
    """accessPackageResourceScope.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param description:
    :type description: str
    :param display_name:
    :type display_name: str
    :param is_root_scope:
    :type is_root_scope: bool
    :param origin_id:
    :type origin_id: str
    :param origin_system:
    :type origin_system: str
    :param role_origin_id:
    :type role_origin_id: str
    :param url:
    :type url: str
    :param access_package_resource: accessPackageResource.
    :type access_package_resource: ~identity_governance.models.MicrosoftGraphAccessPackageResource
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'description': {'key': 'description', 'type': 'str'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'is_root_scope': {'key': 'isRootScope', 'type': 'bool'},
        'origin_id': {'key': 'originId', 'type': 'str'},
        'origin_system': {'key': 'originSystem', 'type': 'str'},
        'role_origin_id': {'key': 'roleOriginId', 'type': 'str'},
        'url': {'key': 'url', 'type': 'str'},
        'access_package_resource': {'key': 'accessPackageResource', 'type': 'MicrosoftGraphAccessPackageResource'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphAccessPackageResourceScope, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.description = kwargs.get('description', None)
        self.display_name = kwargs.get('display_name', None)
        self.is_root_scope = kwargs.get('is_root_scope', None)
        self.origin_id = kwargs.get('origin_id', None)
        self.origin_system = kwargs.get('origin_system', None)
        self.role_origin_id = kwargs.get('role_origin_id', None)
        self.url = kwargs.get('url', None)
        self.access_package_resource = kwargs.get('access_package_resource', None)


class MicrosoftGraphAccessPackageSubject(MicrosoftGraphEntity):
    """accessPackageSubject.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param alt_sec_id:
    :type alt_sec_id: str
    :param connected_organization_id:
    :type connected_organization_id: str
    :param display_name:
    :type display_name: str
    :param email:
    :type email: str
    :param object_id:
    :type object_id: str
    :param on_premises_security_identifier:
    :type on_premises_security_identifier: str
    :param principal_name:
    :type principal_name: str
    :param type:
    :type type: str
    :param id_connected_organization_id: Read-only.
    :type id_connected_organization_id: str
    :param created_by:
    :type created_by: str
    :param created_date_time:
    :type created_date_time: ~datetime.datetime
    :param description:
    :type description: str
    :param display_name_connected_organization_display_name:
    :type display_name_connected_organization_display_name: str
    :param identity_sources:
    :type identity_sources: list[dict[str, object]]
    :param modified_by:
    :type modified_by: str
    :param modified_date_time:
    :type modified_date_time: ~datetime.datetime
    :param state:  Possible values include: "configured", "proposed", "unknownFutureValue".
    :type state: str or ~identity_governance.models.MicrosoftGraphConnectedOrganizationState
    :param external_sponsors:
    :type external_sponsors: list[~identity_governance.models.MicrosoftGraphDirectoryObject]
    :param internal_sponsors:
    :type internal_sponsors: list[~identity_governance.models.MicrosoftGraphDirectoryObject]
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'alt_sec_id': {'key': 'altSecId', 'type': 'str'},
        'connected_organization_id': {'key': 'connectedOrganizationId', 'type': 'str'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'email': {'key': 'email', 'type': 'str'},
        'object_id': {'key': 'objectId', 'type': 'str'},
        'on_premises_security_identifier': {'key': 'onPremisesSecurityIdentifier', 'type': 'str'},
        'principal_name': {'key': 'principalName', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'id_connected_organization_id': {'key': 'connectedOrganization.id', 'type': 'str'},
        'created_by': {'key': 'connectedOrganization.createdBy', 'type': 'str'},
        'created_date_time': {'key': 'connectedOrganization.createdDateTime', 'type': 'iso-8601'},
        'description': {'key': 'connectedOrganization.description', 'type': 'str'},
        'display_name_connected_organization_display_name': {'key': 'connectedOrganization.displayName', 'type': 'str'},
        'identity_sources': {'key': 'connectedOrganization.identitySources', 'type': '[{object}]'},
        'modified_by': {'key': 'connectedOrganization.modifiedBy', 'type': 'str'},
        'modified_date_time': {'key': 'connectedOrganization.modifiedDateTime', 'type': 'iso-8601'},
        'state': {'key': 'connectedOrganization.state', 'type': 'str'},
        'external_sponsors': {'key': 'connectedOrganization.externalSponsors', 'type': '[MicrosoftGraphDirectoryObject]'},
        'internal_sponsors': {'key': 'connectedOrganization.internalSponsors', 'type': '[MicrosoftGraphDirectoryObject]'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphAccessPackageSubject, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.alt_sec_id = kwargs.get('alt_sec_id', None)
        self.connected_organization_id = kwargs.get('connected_organization_id', None)
        self.display_name = kwargs.get('display_name', None)
        self.email = kwargs.get('email', None)
        self.object_id = kwargs.get('object_id', None)
        self.on_premises_security_identifier = kwargs.get('on_premises_security_identifier', None)
        self.principal_name = kwargs.get('principal_name', None)
        self.type = kwargs.get('type', None)
        self.id_connected_organization_id = kwargs.get('id_connected_organization_id', None)
        self.created_by = kwargs.get('created_by', None)
        self.created_date_time = kwargs.get('created_date_time', None)
        self.description = kwargs.get('description', None)
        self.display_name_connected_organization_display_name = kwargs.get('display_name_connected_organization_display_name', None)
        self.identity_sources = kwargs.get('identity_sources', None)
        self.modified_by = kwargs.get('modified_by', None)
        self.modified_date_time = kwargs.get('modified_date_time', None)
        self.state = kwargs.get('state', None)
        self.external_sponsors = kwargs.get('external_sponsors', None)
        self.internal_sponsors = kwargs.get('internal_sponsors', None)


class MicrosoftGraphAccessReview(MicrosoftGraphEntity):
    """accessReview.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param business_flow_template_id:
    :type business_flow_template_id: str
    :param created_by: userIdentity.
    :type created_by: ~identity_governance.models.MicrosoftGraphUserIdentity
    :param description:
    :type description: str
    :param display_name:
    :type display_name: str
    :param end_date_time:
    :type end_date_time: ~datetime.datetime
    :param reviewed_entity: identity.
    :type reviewed_entity: ~identity_governance.models.MicrosoftGraphIdentity
    :param reviewer_type:
    :type reviewer_type: str
    :param start_date_time:
    :type start_date_time: ~datetime.datetime
    :param status:
    :type status: str
    :param decisions:
    :type decisions: list[~identity_governance.models.MicrosoftGraphAccessReviewDecision]
    :param instances:
    :type instances: list[~identity_governance.models.MicrosoftGraphAccessReview]
    :param my_decisions:
    :type my_decisions: list[~identity_governance.models.MicrosoftGraphAccessReviewDecision]
    :param reviewers:
    :type reviewers: list[~identity_governance.models.MicrosoftGraphAccessReviewReviewer]
    :param access_recommendations_enabled:
    :type access_recommendations_enabled: bool
    :param activity_duration_in_days:
    :type activity_duration_in_days: int
    :param auto_apply_review_results_enabled:
    :type auto_apply_review_results_enabled: bool
    :param auto_review_enabled:
    :type auto_review_enabled: bool
    :param auto_review_settings: autoReviewSettings.
    :type auto_review_settings: ~identity_governance.models.MicrosoftGraphAutoReviewSettings
    :param justification_required_on_approval:
    :type justification_required_on_approval: bool
    :param mail_notifications_enabled:
    :type mail_notifications_enabled: bool
    :param recurrence_settings: accessReviewRecurrenceSettings.
    :type recurrence_settings:
     ~identity_governance.models.MicrosoftGraphAccessReviewRecurrenceSettings
    :param reminders_enabled:
    :type reminders_enabled: bool
    """

    _validation = {
        'activity_duration_in_days': {'maximum': 2147483647, 'minimum': -2147483648},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'business_flow_template_id': {'key': 'businessFlowTemplateId', 'type': 'str'},
        'created_by': {'key': 'createdBy', 'type': 'MicrosoftGraphUserIdentity'},
        'description': {'key': 'description', 'type': 'str'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'end_date_time': {'key': 'endDateTime', 'type': 'iso-8601'},
        'reviewed_entity': {'key': 'reviewedEntity', 'type': 'MicrosoftGraphIdentity'},
        'reviewer_type': {'key': 'reviewerType', 'type': 'str'},
        'start_date_time': {'key': 'startDateTime', 'type': 'iso-8601'},
        'status': {'key': 'status', 'type': 'str'},
        'decisions': {'key': 'decisions', 'type': '[MicrosoftGraphAccessReviewDecision]'},
        'instances': {'key': 'instances', 'type': '[MicrosoftGraphAccessReview]'},
        'my_decisions': {'key': 'myDecisions', 'type': '[MicrosoftGraphAccessReviewDecision]'},
        'reviewers': {'key': 'reviewers', 'type': '[MicrosoftGraphAccessReviewReviewer]'},
        'access_recommendations_enabled': {'key': 'settings.accessRecommendationsEnabled', 'type': 'bool'},
        'activity_duration_in_days': {'key': 'settings.activityDurationInDays', 'type': 'int'},
        'auto_apply_review_results_enabled': {'key': 'settings.autoApplyReviewResultsEnabled', 'type': 'bool'},
        'auto_review_enabled': {'key': 'settings.autoReviewEnabled', 'type': 'bool'},
        'auto_review_settings': {'key': 'settings.autoReviewSettings', 'type': 'MicrosoftGraphAutoReviewSettings'},
        'justification_required_on_approval': {'key': 'settings.justificationRequiredOnApproval', 'type': 'bool'},
        'mail_notifications_enabled': {'key': 'settings.mailNotificationsEnabled', 'type': 'bool'},
        'recurrence_settings': {'key': 'settings.recurrenceSettings', 'type': 'MicrosoftGraphAccessReviewRecurrenceSettings'},
        'reminders_enabled': {'key': 'settings.remindersEnabled', 'type': 'bool'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphAccessReview, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.business_flow_template_id = kwargs.get('business_flow_template_id', None)
        self.created_by = kwargs.get('created_by', None)
        self.description = kwargs.get('description', None)
        self.display_name = kwargs.get('display_name', None)
        self.end_date_time = kwargs.get('end_date_time', None)
        self.reviewed_entity = kwargs.get('reviewed_entity', None)
        self.reviewer_type = kwargs.get('reviewer_type', None)
        self.start_date_time = kwargs.get('start_date_time', None)
        self.status = kwargs.get('status', None)
        self.decisions = kwargs.get('decisions', None)
        self.instances = kwargs.get('instances', None)
        self.my_decisions = kwargs.get('my_decisions', None)
        self.reviewers = kwargs.get('reviewers', None)
        self.access_recommendations_enabled = kwargs.get('access_recommendations_enabled', None)
        self.activity_duration_in_days = kwargs.get('activity_duration_in_days', None)
        self.auto_apply_review_results_enabled = kwargs.get('auto_apply_review_results_enabled', None)
        self.auto_review_enabled = kwargs.get('auto_review_enabled', None)
        self.auto_review_settings = kwargs.get('auto_review_settings', None)
        self.justification_required_on_approval = kwargs.get('justification_required_on_approval', None)
        self.mail_notifications_enabled = kwargs.get('mail_notifications_enabled', None)
        self.recurrence_settings = kwargs.get('recurrence_settings', None)
        self.reminders_enabled = kwargs.get('reminders_enabled', None)


class MicrosoftGraphAccessReviewDecision(MicrosoftGraphEntity):
    """accessReviewDecision.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param access_recommendation:
    :type access_recommendation: str
    :param access_review_id:
    :type access_review_id: str
    :param applied_by: userIdentity.
    :type applied_by: ~identity_governance.models.MicrosoftGraphUserIdentity
    :param applied_date_time:
    :type applied_date_time: ~datetime.datetime
    :param apply_result:
    :type apply_result: str
    :param justification:
    :type justification: str
    :param reviewed_by: userIdentity.
    :type reviewed_by: ~identity_governance.models.MicrosoftGraphUserIdentity
    :param reviewed_date_time:
    :type reviewed_date_time: ~datetime.datetime
    :param review_result:
    :type review_result: str
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'access_recommendation': {'key': 'accessRecommendation', 'type': 'str'},
        'access_review_id': {'key': 'accessReviewId', 'type': 'str'},
        'applied_by': {'key': 'appliedBy', 'type': 'MicrosoftGraphUserIdentity'},
        'applied_date_time': {'key': 'appliedDateTime', 'type': 'iso-8601'},
        'apply_result': {'key': 'applyResult', 'type': 'str'},
        'justification': {'key': 'justification', 'type': 'str'},
        'reviewed_by': {'key': 'reviewedBy', 'type': 'MicrosoftGraphUserIdentity'},
        'reviewed_date_time': {'key': 'reviewedDateTime', 'type': 'iso-8601'},
        'review_result': {'key': 'reviewResult', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphAccessReviewDecision, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.access_recommendation = kwargs.get('access_recommendation', None)
        self.access_review_id = kwargs.get('access_review_id', None)
        self.applied_by = kwargs.get('applied_by', None)
        self.applied_date_time = kwargs.get('applied_date_time', None)
        self.apply_result = kwargs.get('apply_result', None)
        self.justification = kwargs.get('justification', None)
        self.reviewed_by = kwargs.get('reviewed_by', None)
        self.reviewed_date_time = kwargs.get('reviewed_date_time', None)
        self.review_result = kwargs.get('review_result', None)


class MicrosoftGraphAccessReviewRecurrenceSettings(msrest.serialization.Model):
    """accessReviewRecurrenceSettings.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param duration_in_days:
    :type duration_in_days: int
    :param recurrence_count:
    :type recurrence_count: int
    :param recurrence_end_type:
    :type recurrence_end_type: str
    :param recurrence_type:
    :type recurrence_type: str
    """

    _validation = {
        'duration_in_days': {'maximum': 2147483647, 'minimum': -2147483648},
        'recurrence_count': {'maximum': 2147483647, 'minimum': -2147483648},
    }

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'duration_in_days': {'key': 'durationInDays', 'type': 'int'},
        'recurrence_count': {'key': 'recurrenceCount', 'type': 'int'},
        'recurrence_end_type': {'key': 'recurrenceEndType', 'type': 'str'},
        'recurrence_type': {'key': 'recurrenceType', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphAccessReviewRecurrenceSettings, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.duration_in_days = kwargs.get('duration_in_days', None)
        self.recurrence_count = kwargs.get('recurrence_count', None)
        self.recurrence_end_type = kwargs.get('recurrence_end_type', None)
        self.recurrence_type = kwargs.get('recurrence_type', None)


class MicrosoftGraphAccessReviewReviewer(MicrosoftGraphEntity):
    """accessReviewReviewer.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param display_name:
    :type display_name: str
    :param user_principal_name:
    :type user_principal_name: str
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'user_principal_name': {'key': 'userPrincipalName', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphAccessReviewReviewer, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.display_name = kwargs.get('display_name', None)
        self.user_principal_name = kwargs.get('user_principal_name', None)


class MicrosoftGraphAccessReviewSettings(msrest.serialization.Model):
    """accessReviewSettings.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param access_recommendations_enabled:
    :type access_recommendations_enabled: bool
    :param activity_duration_in_days:
    :type activity_duration_in_days: int
    :param auto_apply_review_results_enabled:
    :type auto_apply_review_results_enabled: bool
    :param auto_review_enabled:
    :type auto_review_enabled: bool
    :param auto_review_settings: autoReviewSettings.
    :type auto_review_settings: ~identity_governance.models.MicrosoftGraphAutoReviewSettings
    :param justification_required_on_approval:
    :type justification_required_on_approval: bool
    :param mail_notifications_enabled:
    :type mail_notifications_enabled: bool
    :param recurrence_settings: accessReviewRecurrenceSettings.
    :type recurrence_settings:
     ~identity_governance.models.MicrosoftGraphAccessReviewRecurrenceSettings
    :param reminders_enabled:
    :type reminders_enabled: bool
    """

    _validation = {
        'activity_duration_in_days': {'maximum': 2147483647, 'minimum': -2147483648},
    }

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'access_recommendations_enabled': {'key': 'accessRecommendationsEnabled', 'type': 'bool'},
        'activity_duration_in_days': {'key': 'activityDurationInDays', 'type': 'int'},
        'auto_apply_review_results_enabled': {'key': 'autoApplyReviewResultsEnabled', 'type': 'bool'},
        'auto_review_enabled': {'key': 'autoReviewEnabled', 'type': 'bool'},
        'auto_review_settings': {'key': 'autoReviewSettings', 'type': 'MicrosoftGraphAutoReviewSettings'},
        'justification_required_on_approval': {'key': 'justificationRequiredOnApproval', 'type': 'bool'},
        'mail_notifications_enabled': {'key': 'mailNotificationsEnabled', 'type': 'bool'},
        'recurrence_settings': {'key': 'recurrenceSettings', 'type': 'MicrosoftGraphAccessReviewRecurrenceSettings'},
        'reminders_enabled': {'key': 'remindersEnabled', 'type': 'bool'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphAccessReviewSettings, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.access_recommendations_enabled = kwargs.get('access_recommendations_enabled', None)
        self.activity_duration_in_days = kwargs.get('activity_duration_in_days', None)
        self.auto_apply_review_results_enabled = kwargs.get('auto_apply_review_results_enabled', None)
        self.auto_review_enabled = kwargs.get('auto_review_enabled', None)
        self.auto_review_settings = kwargs.get('auto_review_settings', None)
        self.justification_required_on_approval = kwargs.get('justification_required_on_approval', None)
        self.mail_notifications_enabled = kwargs.get('mail_notifications_enabled', None)
        self.recurrence_settings = kwargs.get('recurrence_settings', None)
        self.reminders_enabled = kwargs.get('reminders_enabled', None)


class MicrosoftGraphAgreement(MicrosoftGraphEntity):
    """agreement.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param display_name:
    :type display_name: str
    :param is_per_device_acceptance_required:
    :type is_per_device_acceptance_required: bool
    :param is_viewing_before_acceptance_required:
    :type is_viewing_before_acceptance_required: bool
    :param terms_expiration: termsExpiration.
    :type terms_expiration: ~identity_governance.models.MicrosoftGraphTermsExpiration
    :param user_reaccept_required_frequency:
    :type user_reaccept_required_frequency: ~datetime.timedelta
    :param acceptances:
    :type acceptances: list[~identity_governance.models.MicrosoftGraphAgreementAcceptance]
    :param files:
    :type files: list[~identity_governance.models.MicrosoftGraphAgreementFileLocalization]
    :param id_file_id: Read-only.
    :type id_file_id: str
    :param file_name:
    :type file_name: str
    :param is_default:
    :type is_default: bool
    :param language:
    :type language: str
    :param data:
    :type data: bytes
    :param localizations:
    :type localizations: list[~identity_governance.models.MicrosoftGraphAgreementFileLocalization]
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'is_per_device_acceptance_required': {'key': 'isPerDeviceAcceptanceRequired', 'type': 'bool'},
        'is_viewing_before_acceptance_required': {'key': 'isViewingBeforeAcceptanceRequired', 'type': 'bool'},
        'terms_expiration': {'key': 'termsExpiration', 'type': 'MicrosoftGraphTermsExpiration'},
        'user_reaccept_required_frequency': {'key': 'userReacceptRequiredFrequency', 'type': 'duration'},
        'acceptances': {'key': 'acceptances', 'type': '[MicrosoftGraphAgreementAcceptance]'},
        'files': {'key': 'files', 'type': '[MicrosoftGraphAgreementFileLocalization]'},
        'id_file_id': {'key': 'file.id', 'type': 'str'},
        'file_name': {'key': 'file.fileName', 'type': 'str'},
        'is_default': {'key': 'file.isDefault', 'type': 'bool'},
        'language': {'key': 'file.language', 'type': 'str'},
        'data': {'key': 'file.fileData.data', 'type': 'base64'},
        'localizations': {'key': 'file.localizations', 'type': '[MicrosoftGraphAgreementFileLocalization]'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphAgreement, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.display_name = kwargs.get('display_name', None)
        self.is_per_device_acceptance_required = kwargs.get('is_per_device_acceptance_required', None)
        self.is_viewing_before_acceptance_required = kwargs.get('is_viewing_before_acceptance_required', None)
        self.terms_expiration = kwargs.get('terms_expiration', None)
        self.user_reaccept_required_frequency = kwargs.get('user_reaccept_required_frequency', None)
        self.acceptances = kwargs.get('acceptances', None)
        self.files = kwargs.get('files', None)
        self.id_file_id = kwargs.get('id_file_id', None)
        self.file_name = kwargs.get('file_name', None)
        self.is_default = kwargs.get('is_default', None)
        self.language = kwargs.get('language', None)
        self.data = kwargs.get('data', None)
        self.localizations = kwargs.get('localizations', None)


class MicrosoftGraphAgreementAcceptance(MicrosoftGraphEntity):
    """agreementAcceptance.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param agreement_file_id:
    :type agreement_file_id: str
    :param agreement_id:
    :type agreement_id: str
    :param device_display_name:
    :type device_display_name: str
    :param device_id:
    :type device_id: str
    :param device_os_type:
    :type device_os_type: str
    :param device_os_version:
    :type device_os_version: str
    :param expiration_date_time:
    :type expiration_date_time: ~datetime.datetime
    :param recorded_date_time:
    :type recorded_date_time: ~datetime.datetime
    :param state:  Possible values include: "accepted", "declined", "unknownFutureValue".
    :type state: str or ~identity_governance.models.MicrosoftGraphAgreementAcceptanceState
    :param user_display_name:
    :type user_display_name: str
    :param user_email:
    :type user_email: str
    :param user_id:
    :type user_id: str
    :param user_principal_name:
    :type user_principal_name: str
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'agreement_file_id': {'key': 'agreementFileId', 'type': 'str'},
        'agreement_id': {'key': 'agreementId', 'type': 'str'},
        'device_display_name': {'key': 'deviceDisplayName', 'type': 'str'},
        'device_id': {'key': 'deviceId', 'type': 'str'},
        'device_os_type': {'key': 'deviceOSType', 'type': 'str'},
        'device_os_version': {'key': 'deviceOSVersion', 'type': 'str'},
        'expiration_date_time': {'key': 'expirationDateTime', 'type': 'iso-8601'},
        'recorded_date_time': {'key': 'recordedDateTime', 'type': 'iso-8601'},
        'state': {'key': 'state', 'type': 'str'},
        'user_display_name': {'key': 'userDisplayName', 'type': 'str'},
        'user_email': {'key': 'userEmail', 'type': 'str'},
        'user_id': {'key': 'userId', 'type': 'str'},
        'user_principal_name': {'key': 'userPrincipalName', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphAgreementAcceptance, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.agreement_file_id = kwargs.get('agreement_file_id', None)
        self.agreement_id = kwargs.get('agreement_id', None)
        self.device_display_name = kwargs.get('device_display_name', None)
        self.device_id = kwargs.get('device_id', None)
        self.device_os_type = kwargs.get('device_os_type', None)
        self.device_os_version = kwargs.get('device_os_version', None)
        self.expiration_date_time = kwargs.get('expiration_date_time', None)
        self.recorded_date_time = kwargs.get('recorded_date_time', None)
        self.state = kwargs.get('state', None)
        self.user_display_name = kwargs.get('user_display_name', None)
        self.user_email = kwargs.get('user_email', None)
        self.user_id = kwargs.get('user_id', None)
        self.user_principal_name = kwargs.get('user_principal_name', None)


class MicrosoftGraphAgreementFileProperties(MicrosoftGraphEntity):
    """agreementFileProperties.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param file_name:
    :type file_name: str
    :param is_default:
    :type is_default: bool
    :param language:
    :type language: str
    :param data:
    :type data: bytes
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'file_name': {'key': 'fileName', 'type': 'str'},
        'is_default': {'key': 'isDefault', 'type': 'bool'},
        'language': {'key': 'language', 'type': 'str'},
        'data': {'key': 'fileData.data', 'type': 'base64'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphAgreementFileProperties, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.file_name = kwargs.get('file_name', None)
        self.is_default = kwargs.get('is_default', None)
        self.language = kwargs.get('language', None)
        self.data = kwargs.get('data', None)


class MicrosoftGraphAgreementFile(MicrosoftGraphAgreementFileProperties):
    """agreementFile.

    :param id: Read-only.
    :type id: str
    :param file_name:
    :type file_name: str
    :param is_default:
    :type is_default: bool
    :param language:
    :type language: str
    :param data:
    :type data: bytes
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param localizations:
    :type localizations: list[~identity_governance.models.MicrosoftGraphAgreementFileLocalization]
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'file_name': {'key': 'fileName', 'type': 'str'},
        'is_default': {'key': 'isDefault', 'type': 'bool'},
        'language': {'key': 'language', 'type': 'str'},
        'data': {'key': 'fileData.data', 'type': 'base64'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'localizations': {'key': 'localizations', 'type': '[MicrosoftGraphAgreementFileLocalization]'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphAgreementFile, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.localizations = kwargs.get('localizations', None)


class MicrosoftGraphAgreementFileData(msrest.serialization.Model):
    """agreementFileData.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param data:
    :type data: bytes
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'data': {'key': 'data', 'type': 'base64'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphAgreementFileData, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.data = kwargs.get('data', None)


class MicrosoftGraphAgreementFileLocalization(MicrosoftGraphAgreementFileProperties):
    """agreementFileLocalization.

    :param id: Read-only.
    :type id: str
    :param file_name:
    :type file_name: str
    :param is_default:
    :type is_default: bool
    :param language:
    :type language: str
    :param data:
    :type data: bytes
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'file_name': {'key': 'fileName', 'type': 'str'},
        'is_default': {'key': 'isDefault', 'type': 'bool'},
        'language': {'key': 'language', 'type': 'str'},
        'data': {'key': 'fileData.data', 'type': 'base64'},
        'additional_properties': {'key': '', 'type': '{object}'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphAgreementFileLocalization, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)


class MicrosoftGraphApprovalSettings(msrest.serialization.Model):
    """approvalSettings.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param approval_mode:
    :type approval_mode: str
    :param approval_stages:
    :type approval_stages: list[~identity_governance.models.MicrosoftGraphApprovalStage]
    :param is_approval_required:
    :type is_approval_required: bool
    :param is_approval_required_for_extension:
    :type is_approval_required_for_extension: bool
    :param is_requestor_justification_required:
    :type is_requestor_justification_required: bool
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'approval_mode': {'key': 'approvalMode', 'type': 'str'},
        'approval_stages': {'key': 'approvalStages', 'type': '[MicrosoftGraphApprovalStage]'},
        'is_approval_required': {'key': 'isApprovalRequired', 'type': 'bool'},
        'is_approval_required_for_extension': {'key': 'isApprovalRequiredForExtension', 'type': 'bool'},
        'is_requestor_justification_required': {'key': 'isRequestorJustificationRequired', 'type': 'bool'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphApprovalSettings, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.approval_mode = kwargs.get('approval_mode', None)
        self.approval_stages = kwargs.get('approval_stages', None)
        self.is_approval_required = kwargs.get('is_approval_required', None)
        self.is_approval_required_for_extension = kwargs.get('is_approval_required_for_extension', None)
        self.is_requestor_justification_required = kwargs.get('is_requestor_justification_required', None)


class MicrosoftGraphApprovalStage(msrest.serialization.Model):
    """approvalStage.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param approval_stage_time_out_in_days:
    :type approval_stage_time_out_in_days: int
    :param escalation_approvers:
    :type escalation_approvers: list[~identity_governance.models.MicrosoftGraphUserSet]
    :param escalation_time_in_minutes:
    :type escalation_time_in_minutes: int
    :param is_approver_justification_required:
    :type is_approver_justification_required: bool
    :param is_escalation_enabled:
    :type is_escalation_enabled: bool
    :param primary_approvers:
    :type primary_approvers: list[~identity_governance.models.MicrosoftGraphUserSet]
    """

    _validation = {
        'approval_stage_time_out_in_days': {'maximum': 2147483647, 'minimum': -2147483648},
        'escalation_time_in_minutes': {'maximum': 2147483647, 'minimum': -2147483648},
    }

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'approval_stage_time_out_in_days': {'key': 'approvalStageTimeOutInDays', 'type': 'int'},
        'escalation_approvers': {'key': 'escalationApprovers', 'type': '[MicrosoftGraphUserSet]'},
        'escalation_time_in_minutes': {'key': 'escalationTimeInMinutes', 'type': 'int'},
        'is_approver_justification_required': {'key': 'isApproverJustificationRequired', 'type': 'bool'},
        'is_escalation_enabled': {'key': 'isEscalationEnabled', 'type': 'bool'},
        'primary_approvers': {'key': 'primaryApprovers', 'type': '[MicrosoftGraphUserSet]'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphApprovalStage, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.approval_stage_time_out_in_days = kwargs.get('approval_stage_time_out_in_days', None)
        self.escalation_approvers = kwargs.get('escalation_approvers', None)
        self.escalation_time_in_minutes = kwargs.get('escalation_time_in_minutes', None)
        self.is_approver_justification_required = kwargs.get('is_approver_justification_required', None)
        self.is_escalation_enabled = kwargs.get('is_escalation_enabled', None)
        self.primary_approvers = kwargs.get('primary_approvers', None)


class MicrosoftGraphAssignmentReviewSettings(msrest.serialization.Model):
    """assignmentReviewSettings.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param duration_in_days:
    :type duration_in_days: int
    :param is_enabled:
    :type is_enabled: bool
    :param recurrence_type:
    :type recurrence_type: str
    :param reviewers:
    :type reviewers: list[~identity_governance.models.MicrosoftGraphUserSet]
    :param reviewer_type:
    :type reviewer_type: str
    :param start_date_time:
    :type start_date_time: ~datetime.datetime
    """

    _validation = {
        'duration_in_days': {'maximum': 2147483647, 'minimum': -2147483648},
    }

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'duration_in_days': {'key': 'durationInDays', 'type': 'int'},
        'is_enabled': {'key': 'isEnabled', 'type': 'bool'},
        'recurrence_type': {'key': 'recurrenceType', 'type': 'str'},
        'reviewers': {'key': 'reviewers', 'type': '[MicrosoftGraphUserSet]'},
        'reviewer_type': {'key': 'reviewerType', 'type': 'str'},
        'start_date_time': {'key': 'startDateTime', 'type': 'iso-8601'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphAssignmentReviewSettings, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.duration_in_days = kwargs.get('duration_in_days', None)
        self.is_enabled = kwargs.get('is_enabled', None)
        self.recurrence_type = kwargs.get('recurrence_type', None)
        self.reviewers = kwargs.get('reviewers', None)
        self.reviewer_type = kwargs.get('reviewer_type', None)
        self.start_date_time = kwargs.get('start_date_time', None)


class MicrosoftGraphAutoReviewSettings(msrest.serialization.Model):
    """autoReviewSettings.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param not_reviewed_result:
    :type not_reviewed_result: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'not_reviewed_result': {'key': 'notReviewedResult', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphAutoReviewSettings, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.not_reviewed_result = kwargs.get('not_reviewed_result', None)


class MicrosoftGraphBusinessFlowTemplate(MicrosoftGraphEntity):
    """businessFlowTemplate.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param display_name:
    :type display_name: str
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'display_name': {'key': 'displayName', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphBusinessFlowTemplate, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.display_name = kwargs.get('display_name', None)


class MicrosoftGraphConnectedOrganization(MicrosoftGraphEntity):
    """connectedOrganization.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param created_by:
    :type created_by: str
    :param created_date_time:
    :type created_date_time: ~datetime.datetime
    :param description:
    :type description: str
    :param display_name:
    :type display_name: str
    :param identity_sources:
    :type identity_sources: list[dict[str, object]]
    :param modified_by:
    :type modified_by: str
    :param modified_date_time:
    :type modified_date_time: ~datetime.datetime
    :param state:  Possible values include: "configured", "proposed", "unknownFutureValue".
    :type state: str or ~identity_governance.models.MicrosoftGraphConnectedOrganizationState
    :param external_sponsors:
    :type external_sponsors: list[~identity_governance.models.MicrosoftGraphDirectoryObject]
    :param internal_sponsors:
    :type internal_sponsors: list[~identity_governance.models.MicrosoftGraphDirectoryObject]
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'created_by': {'key': 'createdBy', 'type': 'str'},
        'created_date_time': {'key': 'createdDateTime', 'type': 'iso-8601'},
        'description': {'key': 'description', 'type': 'str'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'identity_sources': {'key': 'identitySources', 'type': '[{object}]'},
        'modified_by': {'key': 'modifiedBy', 'type': 'str'},
        'modified_date_time': {'key': 'modifiedDateTime', 'type': 'iso-8601'},
        'state': {'key': 'state', 'type': 'str'},
        'external_sponsors': {'key': 'externalSponsors', 'type': '[MicrosoftGraphDirectoryObject]'},
        'internal_sponsors': {'key': 'internalSponsors', 'type': '[MicrosoftGraphDirectoryObject]'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphConnectedOrganization, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.created_by = kwargs.get('created_by', None)
        self.created_date_time = kwargs.get('created_date_time', None)
        self.description = kwargs.get('description', None)
        self.display_name = kwargs.get('display_name', None)
        self.identity_sources = kwargs.get('identity_sources', None)
        self.modified_by = kwargs.get('modified_by', None)
        self.modified_date_time = kwargs.get('modified_date_time', None)
        self.state = kwargs.get('state', None)
        self.external_sponsors = kwargs.get('external_sponsors', None)
        self.internal_sponsors = kwargs.get('internal_sponsors', None)


class MicrosoftGraphDirectoryObject(MicrosoftGraphEntity):
    """Represents an Azure Active Directory object. The directoryObject type is the base type for many other directory entity types.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param deleted_date_time:
    :type deleted_date_time: ~datetime.datetime
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'deleted_date_time': {'key': 'deletedDateTime', 'type': 'iso-8601'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphDirectoryObject, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.deleted_date_time = kwargs.get('deleted_date_time', None)


class MicrosoftGraphEntitlementManagement(MicrosoftGraphEntity):
    """entitlementManagement.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param access_package_assignment_policies:
    :type access_package_assignment_policies:
     list[~identity_governance.models.MicrosoftGraphAccessPackageAssignmentPolicy]
    :param access_package_assignment_requests:
    :type access_package_assignment_requests:
     list[~identity_governance.models.MicrosoftGraphAccessPackageAssignmentRequest]
    :param access_package_assignment_resource_roles:
    :type access_package_assignment_resource_roles:
     list[~identity_governance.models.MicrosoftGraphAccessPackageAssignmentResourceRole]
    :param access_package_assignments:
    :type access_package_assignments:
     list[~identity_governance.models.MicrosoftGraphAccessPackageAssignment]
    :param access_package_catalogs:
    :type access_package_catalogs:
     list[~identity_governance.models.MicrosoftGraphAccessPackageCatalog]
    :param access_package_resource_requests:
    :type access_package_resource_requests:
     list[~identity_governance.models.MicrosoftGraphAccessPackageResourceRequest]
    :param access_package_resource_role_scopes:
    :type access_package_resource_role_scopes:
     list[~identity_governance.models.MicrosoftGraphAccessPackageResourceRoleScope]
    :param access_package_resources:
    :type access_package_resources:
     list[~identity_governance.models.MicrosoftGraphAccessPackageResource]
    :param access_packages:
    :type access_packages: list[~identity_governance.models.MicrosoftGraphAccessPackage]
    :param connected_organizations:
    :type connected_organizations:
     list[~identity_governance.models.MicrosoftGraphConnectedOrganization]
    :param settings: entitlementManagementSettings.
    :type settings: ~identity_governance.models.MicrosoftGraphEntitlementManagementSettings
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'access_package_assignment_policies': {'key': 'accessPackageAssignmentPolicies', 'type': '[MicrosoftGraphAccessPackageAssignmentPolicy]'},
        'access_package_assignment_requests': {'key': 'accessPackageAssignmentRequests', 'type': '[MicrosoftGraphAccessPackageAssignmentRequest]'},
        'access_package_assignment_resource_roles': {'key': 'accessPackageAssignmentResourceRoles', 'type': '[MicrosoftGraphAccessPackageAssignmentResourceRole]'},
        'access_package_assignments': {'key': 'accessPackageAssignments', 'type': '[MicrosoftGraphAccessPackageAssignment]'},
        'access_package_catalogs': {'key': 'accessPackageCatalogs', 'type': '[MicrosoftGraphAccessPackageCatalog]'},
        'access_package_resource_requests': {'key': 'accessPackageResourceRequests', 'type': '[MicrosoftGraphAccessPackageResourceRequest]'},
        'access_package_resource_role_scopes': {'key': 'accessPackageResourceRoleScopes', 'type': '[MicrosoftGraphAccessPackageResourceRoleScope]'},
        'access_package_resources': {'key': 'accessPackageResources', 'type': '[MicrosoftGraphAccessPackageResource]'},
        'access_packages': {'key': 'accessPackages', 'type': '[MicrosoftGraphAccessPackage]'},
        'connected_organizations': {'key': 'connectedOrganizations', 'type': '[MicrosoftGraphConnectedOrganization]'},
        'settings': {'key': 'settings', 'type': 'MicrosoftGraphEntitlementManagementSettings'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphEntitlementManagement, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.access_package_assignment_policies = kwargs.get('access_package_assignment_policies', None)
        self.access_package_assignment_requests = kwargs.get('access_package_assignment_requests', None)
        self.access_package_assignment_resource_roles = kwargs.get('access_package_assignment_resource_roles', None)
        self.access_package_assignments = kwargs.get('access_package_assignments', None)
        self.access_package_catalogs = kwargs.get('access_package_catalogs', None)
        self.access_package_resource_requests = kwargs.get('access_package_resource_requests', None)
        self.access_package_resource_role_scopes = kwargs.get('access_package_resource_role_scopes', None)
        self.access_package_resources = kwargs.get('access_package_resources', None)
        self.access_packages = kwargs.get('access_packages', None)
        self.connected_organizations = kwargs.get('connected_organizations', None)
        self.settings = kwargs.get('settings', None)


class MicrosoftGraphEntitlementManagementSettings(MicrosoftGraphEntity):
    """entitlementManagementSettings.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param days_until_external_user_deleted_after_blocked:
    :type days_until_external_user_deleted_after_blocked: int
    :param external_user_lifecycle_action:
    :type external_user_lifecycle_action: str
    """

    _validation = {
        'days_until_external_user_deleted_after_blocked': {'maximum': 2147483647, 'minimum': -2147483648},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'days_until_external_user_deleted_after_blocked': {'key': 'daysUntilExternalUserDeletedAfterBlocked', 'type': 'int'},
        'external_user_lifecycle_action': {'key': 'externalUserLifecycleAction', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphEntitlementManagementSettings, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.days_until_external_user_deleted_after_blocked = kwargs.get('days_until_external_user_deleted_after_blocked', None)
        self.external_user_lifecycle_action = kwargs.get('external_user_lifecycle_action', None)


class MicrosoftGraphExpirationPattern(msrest.serialization.Model):
    """expirationPattern.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param duration:
    :type duration: ~datetime.timedelta
    :param end_date_time:
    :type end_date_time: ~datetime.datetime
    :param type:  Possible values include: "notSpecified", "noExpiration", "afterDateTime",
     "afterDuration".
    :type type: str or ~identity_governance.models.MicrosoftGraphExpirationPatternType
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'duration': {'key': 'duration', 'type': 'duration'},
        'end_date_time': {'key': 'endDateTime', 'type': 'iso-8601'},
        'type': {'key': 'type', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphExpirationPattern, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.duration = kwargs.get('duration', None)
        self.end_date_time = kwargs.get('end_date_time', None)
        self.type = kwargs.get('type', None)


class MicrosoftGraphGovernanceResource(MicrosoftGraphEntity):
    """governanceResource.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param display_name:
    :type display_name: str
    :param external_id:
    :type external_id: str
    :param registered_date_time:
    :type registered_date_time: ~datetime.datetime
    :param registered_root:
    :type registered_root: str
    :param status:
    :type status: str
    :param type:
    :type type: str
    :param parent: governanceResource.
    :type parent: ~identity_governance.models.MicrosoftGraphGovernanceResource
    :param role_assignment_requests:
    :type role_assignment_requests:
     list[~identity_governance.models.MicrosoftGraphGovernanceRoleAssignmentRequest]
    :param role_assignments:
    :type role_assignments:
     list[~identity_governance.models.MicrosoftGraphGovernanceRoleAssignment]
    :param role_definitions:
    :type role_definitions:
     list[~identity_governance.models.MicrosoftGraphGovernanceRoleDefinition]
    :param role_settings:
    :type role_settings: list[~identity_governance.models.MicrosoftGraphGovernanceRoleSetting]
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'external_id': {'key': 'externalId', 'type': 'str'},
        'registered_date_time': {'key': 'registeredDateTime', 'type': 'iso-8601'},
        'registered_root': {'key': 'registeredRoot', 'type': 'str'},
        'status': {'key': 'status', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'parent': {'key': 'parent', 'type': 'MicrosoftGraphGovernanceResource'},
        'role_assignment_requests': {'key': 'roleAssignmentRequests', 'type': '[MicrosoftGraphGovernanceRoleAssignmentRequest]'},
        'role_assignments': {'key': 'roleAssignments', 'type': '[MicrosoftGraphGovernanceRoleAssignment]'},
        'role_definitions': {'key': 'roleDefinitions', 'type': '[MicrosoftGraphGovernanceRoleDefinition]'},
        'role_settings': {'key': 'roleSettings', 'type': '[MicrosoftGraphGovernanceRoleSetting]'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphGovernanceResource, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.display_name = kwargs.get('display_name', None)
        self.external_id = kwargs.get('external_id', None)
        self.registered_date_time = kwargs.get('registered_date_time', None)
        self.registered_root = kwargs.get('registered_root', None)
        self.status = kwargs.get('status', None)
        self.type = kwargs.get('type', None)
        self.parent = kwargs.get('parent', None)
        self.role_assignment_requests = kwargs.get('role_assignment_requests', None)
        self.role_assignments = kwargs.get('role_assignments', None)
        self.role_definitions = kwargs.get('role_definitions', None)
        self.role_settings = kwargs.get('role_settings', None)


class MicrosoftGraphGovernanceRoleAssignment(MicrosoftGraphEntity):
    """governanceRoleAssignment.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param assignment_state:
    :type assignment_state: str
    :param end_date_time:
    :type end_date_time: ~datetime.datetime
    :param external_id:
    :type external_id: str
    :param linked_eligible_role_assignment_id:
    :type linked_eligible_role_assignment_id: str
    :param member_type:
    :type member_type: str
    :param resource_id:
    :type resource_id: str
    :param role_definition_id:
    :type role_definition_id: str
    :param start_date_time:
    :type start_date_time: ~datetime.datetime
    :param status:
    :type status: str
    :param subject_id:
    :type subject_id: str
    :param linked_eligible_role_assignment: governanceRoleAssignment.
    :type linked_eligible_role_assignment:
     ~identity_governance.models.MicrosoftGraphGovernanceRoleAssignment
    :param resource: governanceResource.
    :type resource: ~identity_governance.models.MicrosoftGraphGovernanceResource
    :param role_definition: governanceRoleDefinition.
    :type role_definition: ~identity_governance.models.MicrosoftGraphGovernanceRoleDefinition
    :param subject: governanceSubject.
    :type subject: ~identity_governance.models.MicrosoftGraphGovernanceSubject
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'assignment_state': {'key': 'assignmentState', 'type': 'str'},
        'end_date_time': {'key': 'endDateTime', 'type': 'iso-8601'},
        'external_id': {'key': 'externalId', 'type': 'str'},
        'linked_eligible_role_assignment_id': {'key': 'linkedEligibleRoleAssignmentId', 'type': 'str'},
        'member_type': {'key': 'memberType', 'type': 'str'},
        'resource_id': {'key': 'resourceId', 'type': 'str'},
        'role_definition_id': {'key': 'roleDefinitionId', 'type': 'str'},
        'start_date_time': {'key': 'startDateTime', 'type': 'iso-8601'},
        'status': {'key': 'status', 'type': 'str'},
        'subject_id': {'key': 'subjectId', 'type': 'str'},
        'linked_eligible_role_assignment': {'key': 'linkedEligibleRoleAssignment', 'type': 'MicrosoftGraphGovernanceRoleAssignment'},
        'resource': {'key': 'resource', 'type': 'MicrosoftGraphGovernanceResource'},
        'role_definition': {'key': 'roleDefinition', 'type': 'MicrosoftGraphGovernanceRoleDefinition'},
        'subject': {'key': 'subject', 'type': 'MicrosoftGraphGovernanceSubject'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphGovernanceRoleAssignment, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.assignment_state = kwargs.get('assignment_state', None)
        self.end_date_time = kwargs.get('end_date_time', None)
        self.external_id = kwargs.get('external_id', None)
        self.linked_eligible_role_assignment_id = kwargs.get('linked_eligible_role_assignment_id', None)
        self.member_type = kwargs.get('member_type', None)
        self.resource_id = kwargs.get('resource_id', None)
        self.role_definition_id = kwargs.get('role_definition_id', None)
        self.start_date_time = kwargs.get('start_date_time', None)
        self.status = kwargs.get('status', None)
        self.subject_id = kwargs.get('subject_id', None)
        self.linked_eligible_role_assignment = kwargs.get('linked_eligible_role_assignment', None)
        self.resource = kwargs.get('resource', None)
        self.role_definition = kwargs.get('role_definition', None)
        self.subject = kwargs.get('subject', None)


class MicrosoftGraphGovernanceRoleAssignmentRequest(MicrosoftGraphEntity):
    """governanceRoleAssignmentRequest.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param assignment_state:
    :type assignment_state: str
    :param linked_eligible_role_assignment_id:
    :type linked_eligible_role_assignment_id: str
    :param reason:
    :type reason: str
    :param requested_date_time:
    :type requested_date_time: ~datetime.datetime
    :param resource_id:
    :type resource_id: str
    :param role_definition_id:
    :type role_definition_id: str
    :param schedule: governanceSchedule.
    :type schedule: ~identity_governance.models.MicrosoftGraphGovernanceSchedule
    :param subject_id:
    :type subject_id: str
    :param type:
    :type type: str
    :param resource: governanceResource.
    :type resource: ~identity_governance.models.MicrosoftGraphGovernanceResource
    :param role_definition: governanceRoleDefinition.
    :type role_definition: ~identity_governance.models.MicrosoftGraphGovernanceRoleDefinition
    :param subject: governanceSubject.
    :type subject: ~identity_governance.models.MicrosoftGraphGovernanceSubject
    :param status:
    :type status: str
    :param status_details:
    :type status_details: list[~identity_governance.models.MicrosoftGraphKeyValue]
    :param sub_status:
    :type sub_status: str
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'assignment_state': {'key': 'assignmentState', 'type': 'str'},
        'linked_eligible_role_assignment_id': {'key': 'linkedEligibleRoleAssignmentId', 'type': 'str'},
        'reason': {'key': 'reason', 'type': 'str'},
        'requested_date_time': {'key': 'requestedDateTime', 'type': 'iso-8601'},
        'resource_id': {'key': 'resourceId', 'type': 'str'},
        'role_definition_id': {'key': 'roleDefinitionId', 'type': 'str'},
        'schedule': {'key': 'schedule', 'type': 'MicrosoftGraphGovernanceSchedule'},
        'subject_id': {'key': 'subjectId', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'resource': {'key': 'resource', 'type': 'MicrosoftGraphGovernanceResource'},
        'role_definition': {'key': 'roleDefinition', 'type': 'MicrosoftGraphGovernanceRoleDefinition'},
        'subject': {'key': 'subject', 'type': 'MicrosoftGraphGovernanceSubject'},
        'status': {'key': 'status.status', 'type': 'str'},
        'status_details': {'key': 'status.statusDetails', 'type': '[MicrosoftGraphKeyValue]'},
        'sub_status': {'key': 'status.subStatus', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphGovernanceRoleAssignmentRequest, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.assignment_state = kwargs.get('assignment_state', None)
        self.linked_eligible_role_assignment_id = kwargs.get('linked_eligible_role_assignment_id', None)
        self.reason = kwargs.get('reason', None)
        self.requested_date_time = kwargs.get('requested_date_time', None)
        self.resource_id = kwargs.get('resource_id', None)
        self.role_definition_id = kwargs.get('role_definition_id', None)
        self.schedule = kwargs.get('schedule', None)
        self.subject_id = kwargs.get('subject_id', None)
        self.type = kwargs.get('type', None)
        self.resource = kwargs.get('resource', None)
        self.role_definition = kwargs.get('role_definition', None)
        self.subject = kwargs.get('subject', None)
        self.status = kwargs.get('status', None)
        self.status_details = kwargs.get('status_details', None)
        self.sub_status = kwargs.get('sub_status', None)


class MicrosoftGraphGovernanceRoleAssignmentRequestStatus(msrest.serialization.Model):
    """governanceRoleAssignmentRequestStatus.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param status:
    :type status: str
    :param status_details:
    :type status_details: list[~identity_governance.models.MicrosoftGraphKeyValue]
    :param sub_status:
    :type sub_status: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'status': {'key': 'status', 'type': 'str'},
        'status_details': {'key': 'statusDetails', 'type': '[MicrosoftGraphKeyValue]'},
        'sub_status': {'key': 'subStatus', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphGovernanceRoleAssignmentRequestStatus, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.status = kwargs.get('status', None)
        self.status_details = kwargs.get('status_details', None)
        self.sub_status = kwargs.get('sub_status', None)


class MicrosoftGraphGovernanceRoleDefinition(MicrosoftGraphEntity):
    """governanceRoleDefinition.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param display_name:
    :type display_name: str
    :param external_id:
    :type external_id: str
    :param resource_id:
    :type resource_id: str
    :param template_id:
    :type template_id: str
    :param resource: governanceResource.
    :type resource: ~identity_governance.models.MicrosoftGraphGovernanceResource
    :param role_setting: governanceRoleSetting.
    :type role_setting: ~identity_governance.models.MicrosoftGraphGovernanceRoleSetting
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'external_id': {'key': 'externalId', 'type': 'str'},
        'resource_id': {'key': 'resourceId', 'type': 'str'},
        'template_id': {'key': 'templateId', 'type': 'str'},
        'resource': {'key': 'resource', 'type': 'MicrosoftGraphGovernanceResource'},
        'role_setting': {'key': 'roleSetting', 'type': 'MicrosoftGraphGovernanceRoleSetting'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphGovernanceRoleDefinition, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.display_name = kwargs.get('display_name', None)
        self.external_id = kwargs.get('external_id', None)
        self.resource_id = kwargs.get('resource_id', None)
        self.template_id = kwargs.get('template_id', None)
        self.resource = kwargs.get('resource', None)
        self.role_setting = kwargs.get('role_setting', None)


class MicrosoftGraphGovernanceRoleSetting(MicrosoftGraphEntity):
    """governanceRoleSetting.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param admin_eligible_settings:
    :type admin_eligible_settings:
     list[~identity_governance.models.MicrosoftGraphGovernanceRuleSetting]
    :param admin_member_settings:
    :type admin_member_settings:
     list[~identity_governance.models.MicrosoftGraphGovernanceRuleSetting]
    :param is_default:
    :type is_default: bool
    :param last_updated_by:
    :type last_updated_by: str
    :param last_updated_date_time:
    :type last_updated_date_time: ~datetime.datetime
    :param resource_id:
    :type resource_id: str
    :param role_definition_id:
    :type role_definition_id: str
    :param user_eligible_settings:
    :type user_eligible_settings:
     list[~identity_governance.models.MicrosoftGraphGovernanceRuleSetting]
    :param user_member_settings:
    :type user_member_settings:
     list[~identity_governance.models.MicrosoftGraphGovernanceRuleSetting]
    :param resource: governanceResource.
    :type resource: ~identity_governance.models.MicrosoftGraphGovernanceResource
    :param role_definition: governanceRoleDefinition.
    :type role_definition: ~identity_governance.models.MicrosoftGraphGovernanceRoleDefinition
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'admin_eligible_settings': {'key': 'adminEligibleSettings', 'type': '[MicrosoftGraphGovernanceRuleSetting]'},
        'admin_member_settings': {'key': 'adminMemberSettings', 'type': '[MicrosoftGraphGovernanceRuleSetting]'},
        'is_default': {'key': 'isDefault', 'type': 'bool'},
        'last_updated_by': {'key': 'lastUpdatedBy', 'type': 'str'},
        'last_updated_date_time': {'key': 'lastUpdatedDateTime', 'type': 'iso-8601'},
        'resource_id': {'key': 'resourceId', 'type': 'str'},
        'role_definition_id': {'key': 'roleDefinitionId', 'type': 'str'},
        'user_eligible_settings': {'key': 'userEligibleSettings', 'type': '[MicrosoftGraphGovernanceRuleSetting]'},
        'user_member_settings': {'key': 'userMemberSettings', 'type': '[MicrosoftGraphGovernanceRuleSetting]'},
        'resource': {'key': 'resource', 'type': 'MicrosoftGraphGovernanceResource'},
        'role_definition': {'key': 'roleDefinition', 'type': 'MicrosoftGraphGovernanceRoleDefinition'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphGovernanceRoleSetting, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.admin_eligible_settings = kwargs.get('admin_eligible_settings', None)
        self.admin_member_settings = kwargs.get('admin_member_settings', None)
        self.is_default = kwargs.get('is_default', None)
        self.last_updated_by = kwargs.get('last_updated_by', None)
        self.last_updated_date_time = kwargs.get('last_updated_date_time', None)
        self.resource_id = kwargs.get('resource_id', None)
        self.role_definition_id = kwargs.get('role_definition_id', None)
        self.user_eligible_settings = kwargs.get('user_eligible_settings', None)
        self.user_member_settings = kwargs.get('user_member_settings', None)
        self.resource = kwargs.get('resource', None)
        self.role_definition = kwargs.get('role_definition', None)


class MicrosoftGraphGovernanceRuleSetting(msrest.serialization.Model):
    """governanceRuleSetting.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param rule_identifier:
    :type rule_identifier: str
    :param setting:
    :type setting: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'rule_identifier': {'key': 'ruleIdentifier', 'type': 'str'},
        'setting': {'key': 'setting', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphGovernanceRuleSetting, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.rule_identifier = kwargs.get('rule_identifier', None)
        self.setting = kwargs.get('setting', None)


class MicrosoftGraphGovernanceSchedule(msrest.serialization.Model):
    """governanceSchedule.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param duration:
    :type duration: ~datetime.timedelta
    :param end_date_time:
    :type end_date_time: ~datetime.datetime
    :param start_date_time:
    :type start_date_time: ~datetime.datetime
    :param type:
    :type type: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'duration': {'key': 'duration', 'type': 'duration'},
        'end_date_time': {'key': 'endDateTime', 'type': 'iso-8601'},
        'start_date_time': {'key': 'startDateTime', 'type': 'iso-8601'},
        'type': {'key': 'type', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphGovernanceSchedule, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.duration = kwargs.get('duration', None)
        self.end_date_time = kwargs.get('end_date_time', None)
        self.start_date_time = kwargs.get('start_date_time', None)
        self.type = kwargs.get('type', None)


class MicrosoftGraphGovernanceSubject(MicrosoftGraphEntity):
    """governanceSubject.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param display_name:
    :type display_name: str
    :param email:
    :type email: str
    :param principal_name:
    :type principal_name: str
    :param type:
    :type type: str
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'email': {'key': 'email', 'type': 'str'},
        'principal_name': {'key': 'principalName', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphGovernanceSubject, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.display_name = kwargs.get('display_name', None)
        self.email = kwargs.get('email', None)
        self.principal_name = kwargs.get('principal_name', None)
        self.type = kwargs.get('type', None)


class MicrosoftGraphIdentity(msrest.serialization.Model):
    """identity.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param display_name: The identity's display name. Note that this may not always be available or
     up to date. For example, if a user changes their display name, the API may show the new value
     in a future response, but the items associated with the user won't show up as having changed
     when using delta.
    :type display_name: str
    :param id: Unique identifier for the identity.
    :type id: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'id': {'key': 'id', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphIdentity, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.display_name = kwargs.get('display_name', None)
        self.id = kwargs.get('id', None)


class MicrosoftGraphKeyValue(msrest.serialization.Model):
    """keyValue.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param key: Key for the key-value pair.
    :type key: str
    :param value: Value for the key-value pair.
    :type value: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'key': {'key': 'key', 'type': 'str'},
        'value': {'key': 'value', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphKeyValue, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.key = kwargs.get('key', None)
        self.value = kwargs.get('value', None)


class MicrosoftGraphPatternedRecurrence(msrest.serialization.Model):
    """patternedRecurrence.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param pattern: recurrencePattern.
    :type pattern: ~identity_governance.models.MicrosoftGraphRecurrencePattern
    :param range: recurrenceRange.
    :type range: ~identity_governance.models.MicrosoftGraphRecurrenceRange
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'pattern': {'key': 'pattern', 'type': 'MicrosoftGraphRecurrencePattern'},
        'range': {'key': 'range', 'type': 'MicrosoftGraphRecurrenceRange'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphPatternedRecurrence, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.pattern = kwargs.get('pattern', None)
        self.range = kwargs.get('range', None)


class MicrosoftGraphPrivilegedAccess(MicrosoftGraphEntity):
    """privilegedAccess.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param display_name:
    :type display_name: str
    :param resources:
    :type resources: list[~identity_governance.models.MicrosoftGraphGovernanceResource]
    :param role_assignment_requests:
    :type role_assignment_requests:
     list[~identity_governance.models.MicrosoftGraphGovernanceRoleAssignmentRequest]
    :param role_assignments:
    :type role_assignments:
     list[~identity_governance.models.MicrosoftGraphGovernanceRoleAssignment]
    :param role_definitions:
    :type role_definitions:
     list[~identity_governance.models.MicrosoftGraphGovernanceRoleDefinition]
    :param role_settings:
    :type role_settings: list[~identity_governance.models.MicrosoftGraphGovernanceRoleSetting]
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'resources': {'key': 'resources', 'type': '[MicrosoftGraphGovernanceResource]'},
        'role_assignment_requests': {'key': 'roleAssignmentRequests', 'type': '[MicrosoftGraphGovernanceRoleAssignmentRequest]'},
        'role_assignments': {'key': 'roleAssignments', 'type': '[MicrosoftGraphGovernanceRoleAssignment]'},
        'role_definitions': {'key': 'roleDefinitions', 'type': '[MicrosoftGraphGovernanceRoleDefinition]'},
        'role_settings': {'key': 'roleSettings', 'type': '[MicrosoftGraphGovernanceRoleSetting]'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphPrivilegedAccess, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.display_name = kwargs.get('display_name', None)
        self.resources = kwargs.get('resources', None)
        self.role_assignment_requests = kwargs.get('role_assignment_requests', None)
        self.role_assignments = kwargs.get('role_assignments', None)
        self.role_definitions = kwargs.get('role_definitions', None)
        self.role_settings = kwargs.get('role_settings', None)


class MicrosoftGraphPrivilegedApproval(MicrosoftGraphEntity):
    """privilegedApproval.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param approval_duration:
    :type approval_duration: ~datetime.timedelta
    :param approval_state:  Possible values include: "pending", "approved", "denied", "aborted",
     "canceled".
    :type approval_state: str or ~identity_governance.models.MicrosoftGraphApprovalState
    :param approval_type:
    :type approval_type: str
    :param approver_reason:
    :type approver_reason: str
    :param end_date_time:
    :type end_date_time: ~datetime.datetime
    :param requestor_reason:
    :type requestor_reason: str
    :param role_id:
    :type role_id: str
    :param start_date_time:
    :type start_date_time: ~datetime.datetime
    :param user_id:
    :type user_id: str
    :param role_info: privilegedRole.
    :type role_info: ~identity_governance.models.MicrosoftGraphPrivilegedRole
    :param id_request_id: Read-only.
    :type id_request_id: str
    :param assignment_state:
    :type assignment_state: str
    :param duration:
    :type duration: str
    :param reason:
    :type reason: str
    :param requested_date_time:
    :type requested_date_time: ~datetime.datetime
    :param role_id_request_role_id:
    :type role_id_request_role_id: str
    :param schedule: governanceSchedule.
    :type schedule: ~identity_governance.models.MicrosoftGraphGovernanceSchedule
    :param status:
    :type status: str
    :param ticket_number:
    :type ticket_number: str
    :param ticket_system:
    :type ticket_system: str
    :param type:
    :type type: str
    :param user_id_request_user_id:
    :type user_id_request_user_id: str
    :param role_info_request_role_info: privilegedRole.
    :type role_info_request_role_info: ~identity_governance.models.MicrosoftGraphPrivilegedRole
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'approval_duration': {'key': 'approvalDuration', 'type': 'duration'},
        'approval_state': {'key': 'approvalState', 'type': 'str'},
        'approval_type': {'key': 'approvalType', 'type': 'str'},
        'approver_reason': {'key': 'approverReason', 'type': 'str'},
        'end_date_time': {'key': 'endDateTime', 'type': 'iso-8601'},
        'requestor_reason': {'key': 'requestorReason', 'type': 'str'},
        'role_id': {'key': 'roleId', 'type': 'str'},
        'start_date_time': {'key': 'startDateTime', 'type': 'iso-8601'},
        'user_id': {'key': 'userId', 'type': 'str'},
        'role_info': {'key': 'roleInfo', 'type': 'MicrosoftGraphPrivilegedRole'},
        'id_request_id': {'key': 'request.id', 'type': 'str'},
        'assignment_state': {'key': 'request.assignmentState', 'type': 'str'},
        'duration': {'key': 'request.duration', 'type': 'str'},
        'reason': {'key': 'request.reason', 'type': 'str'},
        'requested_date_time': {'key': 'request.requestedDateTime', 'type': 'iso-8601'},
        'role_id_request_role_id': {'key': 'request.roleId', 'type': 'str'},
        'schedule': {'key': 'request.schedule', 'type': 'MicrosoftGraphGovernanceSchedule'},
        'status': {'key': 'request.status', 'type': 'str'},
        'ticket_number': {'key': 'request.ticketNumber', 'type': 'str'},
        'ticket_system': {'key': 'request.ticketSystem', 'type': 'str'},
        'type': {'key': 'request.type', 'type': 'str'},
        'user_id_request_user_id': {'key': 'request.userId', 'type': 'str'},
        'role_info_request_role_info': {'key': 'request.roleInfo', 'type': 'MicrosoftGraphPrivilegedRole'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphPrivilegedApproval, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.approval_duration = kwargs.get('approval_duration', None)
        self.approval_state = kwargs.get('approval_state', None)
        self.approval_type = kwargs.get('approval_type', None)
        self.approver_reason = kwargs.get('approver_reason', None)
        self.end_date_time = kwargs.get('end_date_time', None)
        self.requestor_reason = kwargs.get('requestor_reason', None)
        self.role_id = kwargs.get('role_id', None)
        self.start_date_time = kwargs.get('start_date_time', None)
        self.user_id = kwargs.get('user_id', None)
        self.role_info = kwargs.get('role_info', None)
        self.id_request_id = kwargs.get('id_request_id', None)
        self.assignment_state = kwargs.get('assignment_state', None)
        self.duration = kwargs.get('duration', None)
        self.reason = kwargs.get('reason', None)
        self.requested_date_time = kwargs.get('requested_date_time', None)
        self.role_id_request_role_id = kwargs.get('role_id_request_role_id', None)
        self.schedule = kwargs.get('schedule', None)
        self.status = kwargs.get('status', None)
        self.ticket_number = kwargs.get('ticket_number', None)
        self.ticket_system = kwargs.get('ticket_system', None)
        self.type = kwargs.get('type', None)
        self.user_id_request_user_id = kwargs.get('user_id_request_user_id', None)
        self.role_info_request_role_info = kwargs.get('role_info_request_role_info', None)


class MicrosoftGraphPrivilegedOperationEvent(MicrosoftGraphEntity):
    """privilegedOperationEvent.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param additional_information:
    :type additional_information: str
    :param creation_date_time:
    :type creation_date_time: ~datetime.datetime
    :param expiration_date_time:
    :type expiration_date_time: ~datetime.datetime
    :param reference_key:
    :type reference_key: str
    :param reference_system:
    :type reference_system: str
    :param requestor_id:
    :type requestor_id: str
    :param requestor_name:
    :type requestor_name: str
    :param request_type:
    :type request_type: str
    :param role_id:
    :type role_id: str
    :param role_name:
    :type role_name: str
    :param tenant_id:
    :type tenant_id: str
    :param user_id:
    :type user_id: str
    :param user_mail:
    :type user_mail: str
    :param user_name:
    :type user_name: str
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'additional_information': {'key': 'additionalInformation', 'type': 'str'},
        'creation_date_time': {'key': 'creationDateTime', 'type': 'iso-8601'},
        'expiration_date_time': {'key': 'expirationDateTime', 'type': 'iso-8601'},
        'reference_key': {'key': 'referenceKey', 'type': 'str'},
        'reference_system': {'key': 'referenceSystem', 'type': 'str'},
        'requestor_id': {'key': 'requestorId', 'type': 'str'},
        'requestor_name': {'key': 'requestorName', 'type': 'str'},
        'request_type': {'key': 'requestType', 'type': 'str'},
        'role_id': {'key': 'roleId', 'type': 'str'},
        'role_name': {'key': 'roleName', 'type': 'str'},
        'tenant_id': {'key': 'tenantId', 'type': 'str'},
        'user_id': {'key': 'userId', 'type': 'str'},
        'user_mail': {'key': 'userMail', 'type': 'str'},
        'user_name': {'key': 'userName', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphPrivilegedOperationEvent, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.additional_information = kwargs.get('additional_information', None)
        self.creation_date_time = kwargs.get('creation_date_time', None)
        self.expiration_date_time = kwargs.get('expiration_date_time', None)
        self.reference_key = kwargs.get('reference_key', None)
        self.reference_system = kwargs.get('reference_system', None)
        self.requestor_id = kwargs.get('requestor_id', None)
        self.requestor_name = kwargs.get('requestor_name', None)
        self.request_type = kwargs.get('request_type', None)
        self.role_id = kwargs.get('role_id', None)
        self.role_name = kwargs.get('role_name', None)
        self.tenant_id = kwargs.get('tenant_id', None)
        self.user_id = kwargs.get('user_id', None)
        self.user_mail = kwargs.get('user_mail', None)
        self.user_name = kwargs.get('user_name', None)


class MicrosoftGraphPrivilegedRole(MicrosoftGraphEntity):
    """privilegedRole.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param name:
    :type name: str
    :param assignments:
    :type assignments: list[~identity_governance.models.MicrosoftGraphPrivilegedRoleAssignment]
    :param settings: privilegedRoleSettings.
    :type settings: ~identity_governance.models.MicrosoftGraphPrivilegedRoleSettings
    :param summary: privilegedRoleSummary.
    :type summary: ~identity_governance.models.MicrosoftGraphPrivilegedRoleSummary
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'name': {'key': 'name', 'type': 'str'},
        'assignments': {'key': 'assignments', 'type': '[MicrosoftGraphPrivilegedRoleAssignment]'},
        'settings': {'key': 'settings', 'type': 'MicrosoftGraphPrivilegedRoleSettings'},
        'summary': {'key': 'summary', 'type': 'MicrosoftGraphPrivilegedRoleSummary'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphPrivilegedRole, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.name = kwargs.get('name', None)
        self.assignments = kwargs.get('assignments', None)
        self.settings = kwargs.get('settings', None)
        self.summary = kwargs.get('summary', None)


class MicrosoftGraphPrivilegedRoleAssignment(MicrosoftGraphEntity):
    """privilegedRoleAssignment.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param expiration_date_time:
    :type expiration_date_time: ~datetime.datetime
    :param is_elevated:
    :type is_elevated: bool
    :param result_message:
    :type result_message: str
    :param role_id:
    :type role_id: str
    :param user_id:
    :type user_id: str
    :param role_info: privilegedRole.
    :type role_info: ~identity_governance.models.MicrosoftGraphPrivilegedRole
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'expiration_date_time': {'key': 'expirationDateTime', 'type': 'iso-8601'},
        'is_elevated': {'key': 'isElevated', 'type': 'bool'},
        'result_message': {'key': 'resultMessage', 'type': 'str'},
        'role_id': {'key': 'roleId', 'type': 'str'},
        'user_id': {'key': 'userId', 'type': 'str'},
        'role_info': {'key': 'roleInfo', 'type': 'MicrosoftGraphPrivilegedRole'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphPrivilegedRoleAssignment, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.expiration_date_time = kwargs.get('expiration_date_time', None)
        self.is_elevated = kwargs.get('is_elevated', None)
        self.result_message = kwargs.get('result_message', None)
        self.role_id = kwargs.get('role_id', None)
        self.user_id = kwargs.get('user_id', None)
        self.role_info = kwargs.get('role_info', None)


class MicrosoftGraphPrivilegedRoleAssignmentRequest(MicrosoftGraphEntity):
    """privilegedRoleAssignmentRequest.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param assignment_state:
    :type assignment_state: str
    :param duration:
    :type duration: str
    :param reason:
    :type reason: str
    :param requested_date_time:
    :type requested_date_time: ~datetime.datetime
    :param role_id:
    :type role_id: str
    :param schedule: governanceSchedule.
    :type schedule: ~identity_governance.models.MicrosoftGraphGovernanceSchedule
    :param status:
    :type status: str
    :param ticket_number:
    :type ticket_number: str
    :param ticket_system:
    :type ticket_system: str
    :param type:
    :type type: str
    :param user_id:
    :type user_id: str
    :param role_info: privilegedRole.
    :type role_info: ~identity_governance.models.MicrosoftGraphPrivilegedRole
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'assignment_state': {'key': 'assignmentState', 'type': 'str'},
        'duration': {'key': 'duration', 'type': 'str'},
        'reason': {'key': 'reason', 'type': 'str'},
        'requested_date_time': {'key': 'requestedDateTime', 'type': 'iso-8601'},
        'role_id': {'key': 'roleId', 'type': 'str'},
        'schedule': {'key': 'schedule', 'type': 'MicrosoftGraphGovernanceSchedule'},
        'status': {'key': 'status', 'type': 'str'},
        'ticket_number': {'key': 'ticketNumber', 'type': 'str'},
        'ticket_system': {'key': 'ticketSystem', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'user_id': {'key': 'userId', 'type': 'str'},
        'role_info': {'key': 'roleInfo', 'type': 'MicrosoftGraphPrivilegedRole'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphPrivilegedRoleAssignmentRequest, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.assignment_state = kwargs.get('assignment_state', None)
        self.duration = kwargs.get('duration', None)
        self.reason = kwargs.get('reason', None)
        self.requested_date_time = kwargs.get('requested_date_time', None)
        self.role_id = kwargs.get('role_id', None)
        self.schedule = kwargs.get('schedule', None)
        self.status = kwargs.get('status', None)
        self.ticket_number = kwargs.get('ticket_number', None)
        self.ticket_system = kwargs.get('ticket_system', None)
        self.type = kwargs.get('type', None)
        self.user_id = kwargs.get('user_id', None)
        self.role_info = kwargs.get('role_info', None)


class MicrosoftGraphPrivilegedRoleSettings(MicrosoftGraphEntity):
    """privilegedRoleSettings.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param approval_on_elevation:
    :type approval_on_elevation: bool
    :param approver_ids:
    :type approver_ids: list[str]
    :param elevation_duration:
    :type elevation_duration: ~datetime.timedelta
    :param is_mfa_on_elevation_configurable:
    :type is_mfa_on_elevation_configurable: bool
    :param last_global_admin:
    :type last_global_admin: bool
    :param max_elavation_duration:
    :type max_elavation_duration: ~datetime.timedelta
    :param mfa_on_elevation:
    :type mfa_on_elevation: bool
    :param min_elevation_duration:
    :type min_elevation_duration: ~datetime.timedelta
    :param notification_to_user_on_elevation:
    :type notification_to_user_on_elevation: bool
    :param ticketing_info_on_elevation:
    :type ticketing_info_on_elevation: bool
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'approval_on_elevation': {'key': 'approvalOnElevation', 'type': 'bool'},
        'approver_ids': {'key': 'approverIds', 'type': '[str]'},
        'elevation_duration': {'key': 'elevationDuration', 'type': 'duration'},
        'is_mfa_on_elevation_configurable': {'key': 'isMfaOnElevationConfigurable', 'type': 'bool'},
        'last_global_admin': {'key': 'lastGlobalAdmin', 'type': 'bool'},
        'max_elavation_duration': {'key': 'maxElavationDuration', 'type': 'duration'},
        'mfa_on_elevation': {'key': 'mfaOnElevation', 'type': 'bool'},
        'min_elevation_duration': {'key': 'minElevationDuration', 'type': 'duration'},
        'notification_to_user_on_elevation': {'key': 'notificationToUserOnElevation', 'type': 'bool'},
        'ticketing_info_on_elevation': {'key': 'ticketingInfoOnElevation', 'type': 'bool'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphPrivilegedRoleSettings, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.approval_on_elevation = kwargs.get('approval_on_elevation', None)
        self.approver_ids = kwargs.get('approver_ids', None)
        self.elevation_duration = kwargs.get('elevation_duration', None)
        self.is_mfa_on_elevation_configurable = kwargs.get('is_mfa_on_elevation_configurable', None)
        self.last_global_admin = kwargs.get('last_global_admin', None)
        self.max_elavation_duration = kwargs.get('max_elavation_duration', None)
        self.mfa_on_elevation = kwargs.get('mfa_on_elevation', None)
        self.min_elevation_duration = kwargs.get('min_elevation_duration', None)
        self.notification_to_user_on_elevation = kwargs.get('notification_to_user_on_elevation', None)
        self.ticketing_info_on_elevation = kwargs.get('ticketing_info_on_elevation', None)


class MicrosoftGraphPrivilegedRoleSummary(MicrosoftGraphEntity):
    """privilegedRoleSummary.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param elevated_count:
    :type elevated_count: int
    :param managed_count:
    :type managed_count: int
    :param mfa_enabled:
    :type mfa_enabled: bool
    :param status:  Possible values include: "ok", "bad".
    :type status: str or ~identity_governance.models.MicrosoftGraphRoleSummaryStatus
    :param users_count:
    :type users_count: int
    """

    _validation = {
        'elevated_count': {'maximum': 2147483647, 'minimum': -2147483648},
        'managed_count': {'maximum': 2147483647, 'minimum': -2147483648},
        'users_count': {'maximum': 2147483647, 'minimum': -2147483648},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'elevated_count': {'key': 'elevatedCount', 'type': 'int'},
        'managed_count': {'key': 'managedCount', 'type': 'int'},
        'mfa_enabled': {'key': 'mfaEnabled', 'type': 'bool'},
        'status': {'key': 'status', 'type': 'str'},
        'users_count': {'key': 'usersCount', 'type': 'int'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphPrivilegedRoleSummary, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.elevated_count = kwargs.get('elevated_count', None)
        self.managed_count = kwargs.get('managed_count', None)
        self.mfa_enabled = kwargs.get('mfa_enabled', None)
        self.status = kwargs.get('status', None)
        self.users_count = kwargs.get('users_count', None)


class MicrosoftGraphProgram(MicrosoftGraphEntity):
    """program.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param description:
    :type description: str
    :param display_name:
    :type display_name: str
    :param controls:
    :type controls: list[~identity_governance.models.MicrosoftGraphProgramControl]
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'description': {'key': 'description', 'type': 'str'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'controls': {'key': 'controls', 'type': '[MicrosoftGraphProgramControl]'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphProgram, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.description = kwargs.get('description', None)
        self.display_name = kwargs.get('display_name', None)
        self.controls = kwargs.get('controls', None)


class MicrosoftGraphProgramControl(MicrosoftGraphEntity):
    """programControl.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param control_id:
    :type control_id: str
    :param control_type_id:
    :type control_type_id: str
    :param created_date_time:
    :type created_date_time: ~datetime.datetime
    :param display_name:
    :type display_name: str
    :param owner: userIdentity.
    :type owner: ~identity_governance.models.MicrosoftGraphUserIdentity
    :param program_id:
    :type program_id: str
    :param resource: programResource.
    :type resource: ~identity_governance.models.MicrosoftGraphProgramResource
    :param status:
    :type status: str
    :param program: program.
    :type program: ~identity_governance.models.MicrosoftGraphProgram
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'control_id': {'key': 'controlId', 'type': 'str'},
        'control_type_id': {'key': 'controlTypeId', 'type': 'str'},
        'created_date_time': {'key': 'createdDateTime', 'type': 'iso-8601'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'owner': {'key': 'owner', 'type': 'MicrosoftGraphUserIdentity'},
        'program_id': {'key': 'programId', 'type': 'str'},
        'resource': {'key': 'resource', 'type': 'MicrosoftGraphProgramResource'},
        'status': {'key': 'status', 'type': 'str'},
        'program': {'key': 'program', 'type': 'MicrosoftGraphProgram'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphProgramControl, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.control_id = kwargs.get('control_id', None)
        self.control_type_id = kwargs.get('control_type_id', None)
        self.created_date_time = kwargs.get('created_date_time', None)
        self.display_name = kwargs.get('display_name', None)
        self.owner = kwargs.get('owner', None)
        self.program_id = kwargs.get('program_id', None)
        self.resource = kwargs.get('resource', None)
        self.status = kwargs.get('status', None)
        self.program = kwargs.get('program', None)


class MicrosoftGraphProgramControlType(MicrosoftGraphEntity):
    """programControlType.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param control_type_group_id:
    :type control_type_group_id: str
    :param display_name:
    :type display_name: str
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'control_type_group_id': {'key': 'controlTypeGroupId', 'type': 'str'},
        'display_name': {'key': 'displayName', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphProgramControlType, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.control_type_group_id = kwargs.get('control_type_group_id', None)
        self.display_name = kwargs.get('display_name', None)


class MicrosoftGraphProgramResource(MicrosoftGraphIdentity):
    """programResource.

    :param display_name: The identity's display name. Note that this may not always be available or
     up to date. For example, if a user changes their display name, the API may show the new value
     in a future response, but the items associated with the user won't show up as having changed
     when using delta.
    :type display_name: str
    :param id: Unique identifier for the identity.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param type:
    :type type: str
    """

    _attribute_map = {
        'display_name': {'key': 'displayName', 'type': 'str'},
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'type': {'key': 'type', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphProgramResource, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.type = kwargs.get('type', None)


class MicrosoftGraphRecurrencePattern(msrest.serialization.Model):
    """recurrencePattern.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param day_of_month: The day of the month on which the event occurs. Required if type is
     absoluteMonthly or absoluteYearly.
    :type day_of_month: int
    :param days_of_week: A collection of the days of the week on which the event occurs. The
     possible values are: sunday, monday, tuesday, wednesday, thursday, friday, saturday. If type is
     relativeMonthly or relativeYearly, and daysOfWeek specifies more than one day, the event falls
     on the first day that satisfies the pattern.  Required if type is weekly, relativeMonthly, or
     relativeYearly.
    :type days_of_week: list[str or ~identity_governance.models.MicrosoftGraphDayOfWeek]
    :param first_day_of_week:  Possible values include: "sunday", "monday", "tuesday", "wednesday",
     "thursday", "friday", "saturday".
    :type first_day_of_week: str or ~identity_governance.models.MicrosoftGraphDayOfWeek
    :param index:  Possible values include: "first", "second", "third", "fourth", "last".
    :type index: str or ~identity_governance.models.MicrosoftGraphWeekIndex
    :param interval: The number of units between occurrences, where units can be in days, weeks,
     months, or years, depending on the type. Required.
    :type interval: int
    :param month: The month in which the event occurs.  This is a number from 1 to 12.
    :type month: int
    :param type:  Possible values include: "daily", "weekly", "absoluteMonthly", "relativeMonthly",
     "absoluteYearly", "relativeYearly".
    :type type: str or ~identity_governance.models.MicrosoftGraphRecurrencePatternType
    """

    _validation = {
        'day_of_month': {'maximum': 2147483647, 'minimum': -2147483648},
        'interval': {'maximum': 2147483647, 'minimum': -2147483648},
        'month': {'maximum': 2147483647, 'minimum': -2147483648},
    }

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'day_of_month': {'key': 'dayOfMonth', 'type': 'int'},
        'days_of_week': {'key': 'daysOfWeek', 'type': '[str]'},
        'first_day_of_week': {'key': 'firstDayOfWeek', 'type': 'str'},
        'index': {'key': 'index', 'type': 'str'},
        'interval': {'key': 'interval', 'type': 'int'},
        'month': {'key': 'month', 'type': 'int'},
        'type': {'key': 'type', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphRecurrencePattern, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.day_of_month = kwargs.get('day_of_month', None)
        self.days_of_week = kwargs.get('days_of_week', None)
        self.first_day_of_week = kwargs.get('first_day_of_week', None)
        self.index = kwargs.get('index', None)
        self.interval = kwargs.get('interval', None)
        self.month = kwargs.get('month', None)
        self.type = kwargs.get('type', None)


class MicrosoftGraphRecurrenceRange(msrest.serialization.Model):
    """recurrenceRange.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param end_date: The date to stop applying the recurrence pattern. Depending on the recurrence
     pattern of the event, the last occurrence of the meeting may not be this date. Required if type
     is endDate.
    :type end_date: ~datetime.date
    :param number_of_occurrences: The number of times to repeat the event. Required and must be
     positive if type is numbered.
    :type number_of_occurrences: int
    :param recurrence_time_zone: Time zone for the startDate and endDate properties. Optional. If
     not specified, the time zone of the event is used.
    :type recurrence_time_zone: str
    :param start_date: The date to start applying the recurrence pattern. The first occurrence of
     the meeting may be this date or later, depending on the recurrence pattern of the event. Must
     be the same value as the start property of the recurring event. Required.
    :type start_date: ~datetime.date
    :param type:  Possible values include: "endDate", "noEnd", "numbered".
    :type type: str or ~identity_governance.models.MicrosoftGraphRecurrenceRangeType
    """

    _validation = {
        'number_of_occurrences': {'maximum': 2147483647, 'minimum': -2147483648},
    }

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'end_date': {'key': 'endDate', 'type': 'date'},
        'number_of_occurrences': {'key': 'numberOfOccurrences', 'type': 'int'},
        'recurrence_time_zone': {'key': 'recurrenceTimeZone', 'type': 'str'},
        'start_date': {'key': 'startDate', 'type': 'date'},
        'type': {'key': 'type', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphRecurrenceRange, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.end_date = kwargs.get('end_date', None)
        self.number_of_occurrences = kwargs.get('number_of_occurrences', None)
        self.recurrence_time_zone = kwargs.get('recurrence_time_zone', None)
        self.start_date = kwargs.get('start_date', None)
        self.type = kwargs.get('type', None)


class MicrosoftGraphRequestorSettings(msrest.serialization.Model):
    """requestorSettings.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param accept_requests:
    :type accept_requests: bool
    :param allowed_requestors:
    :type allowed_requestors: list[~identity_governance.models.MicrosoftGraphUserSet]
    :param scope_type:
    :type scope_type: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'accept_requests': {'key': 'acceptRequests', 'type': 'bool'},
        'allowed_requestors': {'key': 'allowedRequestors', 'type': '[MicrosoftGraphUserSet]'},
        'scope_type': {'key': 'scopeType', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphRequestorSettings, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.accept_requests = kwargs.get('accept_requests', None)
        self.allowed_requestors = kwargs.get('allowed_requestors', None)
        self.scope_type = kwargs.get('scope_type', None)


class MicrosoftGraphRequestSchedule(msrest.serialization.Model):
    """requestSchedule.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param expiration: expirationPattern.
    :type expiration: ~identity_governance.models.MicrosoftGraphExpirationPattern
    :param recurrence: patternedRecurrence.
    :type recurrence: ~identity_governance.models.MicrosoftGraphPatternedRecurrence
    :param start_date_time:
    :type start_date_time: ~datetime.datetime
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'expiration': {'key': 'expiration', 'type': 'MicrosoftGraphExpirationPattern'},
        'recurrence': {'key': 'recurrence', 'type': 'MicrosoftGraphPatternedRecurrence'},
        'start_date_time': {'key': 'startDateTime', 'type': 'iso-8601'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphRequestSchedule, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.expiration = kwargs.get('expiration', None)
        self.recurrence = kwargs.get('recurrence', None)
        self.start_date_time = kwargs.get('start_date_time', None)


class MicrosoftGraphTermsExpiration(msrest.serialization.Model):
    """termsExpiration.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param frequency:
    :type frequency: ~datetime.timedelta
    :param start_date_time:
    :type start_date_time: ~datetime.datetime
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'frequency': {'key': 'frequency', 'type': 'duration'},
        'start_date_time': {'key': 'startDateTime', 'type': 'iso-8601'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphTermsExpiration, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.frequency = kwargs.get('frequency', None)
        self.start_date_time = kwargs.get('start_date_time', None)


class MicrosoftGraphUserIdentity(MicrosoftGraphIdentity):
    """userIdentity.

    :param display_name: The identity's display name. Note that this may not always be available or
     up to date. For example, if a user changes their display name, the API may show the new value
     in a future response, but the items associated with the user won't show up as having changed
     when using delta.
    :type display_name: str
    :param id: Unique identifier for the identity.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param ip_address: Indicates the client IP address used by user performing the activity (audit
     log only).
    :type ip_address: str
    :param user_principal_name: The userPrincipalName attribute of the user.
    :type user_principal_name: str
    """

    _attribute_map = {
        'display_name': {'key': 'displayName', 'type': 'str'},
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'ip_address': {'key': 'ipAddress', 'type': 'str'},
        'user_principal_name': {'key': 'userPrincipalName', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphUserIdentity, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.ip_address = kwargs.get('ip_address', None)
        self.user_principal_name = kwargs.get('user_principal_name', None)


class MicrosoftGraphUserSet(msrest.serialization.Model):
    """userSet.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param is_backup:
    :type is_backup: bool
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'is_backup': {'key': 'isBackup', 'type': 'bool'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphUserSet, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.is_backup = kwargs.get('is_backup', None)


class OdataError(msrest.serialization.Model):
    """OdataError.

    All required parameters must be populated in order to send to Azure.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param error: Required.
    :type error: ~identity_governance.models.OdataErrorMain
    """

    _validation = {
        'error': {'required': True},
    }

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'error': {'key': 'error', 'type': 'OdataErrorMain'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(OdataError, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.error = kwargs['error']


class OdataErrorDetail(msrest.serialization.Model):
    """OdataErrorDetail.

    All required parameters must be populated in order to send to Azure.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param code: Required.
    :type code: str
    :param message: Required.
    :type message: str
    :param target:
    :type target: str
    """

    _validation = {
        'code': {'required': True},
        'message': {'required': True},
    }

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'code': {'key': 'code', 'type': 'str'},
        'message': {'key': 'message', 'type': 'str'},
        'target': {'key': 'target', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(OdataErrorDetail, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.code = kwargs['code']
        self.message = kwargs['message']
        self.target = kwargs.get('target', None)


class OdataErrorMain(msrest.serialization.Model):
    """OdataErrorMain.

    All required parameters must be populated in order to send to Azure.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param code: Required.
    :type code: str
    :param message: Required.
    :type message: str
    :param target:
    :type target: str
    :param details:
    :type details: list[~identity_governance.models.OdataErrorDetail]
    :param innererror: The structure of this object is service-specific.
    :type innererror: dict[str, object]
    """

    _validation = {
        'code': {'required': True},
        'message': {'required': True},
    }

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'code': {'key': 'code', 'type': 'str'},
        'message': {'key': 'message', 'type': 'str'},
        'target': {'key': 'target', 'type': 'str'},
        'details': {'key': 'details', 'type': '[OdataErrorDetail]'},
        'innererror': {'key': 'innererror', 'type': '{object}'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(OdataErrorMain, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.code = kwargs['code']
        self.message = kwargs['message']
        self.target = kwargs.get('target', None)
        self.details = kwargs.get('details', None)
        self.innererror = kwargs.get('innererror', None)


class Paths1Ao8IriPrivilegedroleassignmentsPrivilegedroleassignmentIdMicrosoftGraphMakepermanentPostRequestbodyContentApplicationJsonSchema(msrest.serialization.Model):
    """Paths1Ao8IriPrivilegedroleassignmentsPrivilegedroleassignmentIdMicrosoftGraphMakepermanentPostRequestbodyContentApplicationJsonSchema.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param reason:
    :type reason: str
    :param ticket_number:
    :type ticket_number: str
    :param ticket_system:
    :type ticket_system: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'reason': {'key': 'reason', 'type': 'str'},
        'ticket_number': {'key': 'ticketNumber', 'type': 'str'},
        'ticket_system': {'key': 'ticketSystem', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(Paths1Ao8IriPrivilegedroleassignmentsPrivilegedroleassignmentIdMicrosoftGraphMakepermanentPostRequestbodyContentApplicationJsonSchema, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.reason = kwargs.get('reason', None)
        self.ticket_number = kwargs.get('ticket_number', None)
        self.ticket_system = kwargs.get('ticket_system', None)


class PathsFneytmPrivilegedrolesPrivilegedroleIdMicrosoftGraphSelfactivatePostRequestbodyContentApplicationJsonSchema(msrest.serialization.Model):
    """PathsFneytmPrivilegedrolesPrivilegedroleIdMicrosoftGraphSelfactivatePostRequestbodyContentApplicationJsonSchema.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param reason:
    :type reason: str
    :param duration:
    :type duration: str
    :param ticket_number:
    :type ticket_number: str
    :param ticket_system:
    :type ticket_system: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'reason': {'key': 'reason', 'type': 'str'},
        'duration': {'key': 'duration', 'type': 'str'},
        'ticket_number': {'key': 'ticketNumber', 'type': 'str'},
        'ticket_system': {'key': 'ticketSystem', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(PathsFneytmPrivilegedrolesPrivilegedroleIdMicrosoftGraphSelfactivatePostRequestbodyContentApplicationJsonSchema, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.reason = kwargs.get('reason', None)
        self.duration = kwargs.get('duration', None)
        self.ticket_number = kwargs.get('ticket_number', None)
        self.ticket_system = kwargs.get('ticket_system', None)
