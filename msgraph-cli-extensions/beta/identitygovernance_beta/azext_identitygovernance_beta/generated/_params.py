# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=line-too-long
# pylint: disable=too-many-lines
# pylint: disable=too-many-statements

from msgraph.cli.core.commands.parameters import (
    get_three_state_flag,
    get_enum_type
)
from msgraph.cli.core.commands.validators import validate_file_or_dict
from azext_identitygovernance_beta.action import (
    AddCreatedBy,
    AddReviewedEntity,
    AddAccessreviewsAccessreviewReviewers,
    AddAutoReviewSettings,
    AddRecurrenceSettings,
    AddTermsExpiration,
    AddAcceptances,
    AddFiles,
    AddLocalizations,
    AddIdentitygovernanceSettings,
    AddIdentitySources,
    AddExternalSponsors,
    AddInternalSponsors,
    AddExpiration,
    AddAllowedRequestors,
    AddIdentitygovernanceEntitlementmanagementReviewers,
    AddSubject,
    AddSchedule,
    AddStatusDetails,
    AddAdminEligibleSettings,
    AddAdminMemberSettings,
    AddUserEligibleSettings,
    AddUserMemberSettings,
    AddPrivilegedapprovalSettings,
    AddSummary,
    AddResource
)


def load_arguments(self, _):

    with self.argument_context('identitygovernance access-review-access-review create-access-review') as c:
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('business_flow_template_id', type=str, help='')
        c.argument('created_by', action=AddCreatedBy, nargs='+', help='userIdentity')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('end_date_time', help='')
        c.argument('reviewed_entity', action=AddReviewedEntity, nargs='+', help='identity')
        c.argument('reviewer_type', type=str, help='')
        c.argument('start_date_time', help='')
        c.argument('status', type=str, help='')
        c.argument('decisions', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('instances', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('my_decisions', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('reviewers', action=AddAccessreviewsAccessreviewReviewers, nargs='+', help='')
        c.argument('access_recommendations_enabled', arg_type=get_three_state_flag(), help='', arg_group='Settings')
        c.argument('activity_duration_in_days', type=int, help='', arg_group='Settings')
        c.argument('auto_apply_review_results_enabled', arg_type=get_three_state_flag(), help='',
                   arg_group='Settings')
        c.argument('auto_review_enabled', arg_type=get_three_state_flag(), help='', arg_group='Settings')
        c.argument('auto_review_settings', action=AddAutoReviewSettings, nargs='+', help='autoReviewSettings',
                   arg_group='Settings')
        c.argument('justification_required_on_approval', arg_type=get_three_state_flag(), help='',
                   arg_group='Settings')
        c.argument('mail_notifications_enabled', arg_type=get_three_state_flag(), help='', arg_group='Settings')
        c.argument('recurrence_settings', action=AddRecurrenceSettings, nargs='+',
                   help='accessReviewRecurrenceSettings', arg_group='Settings')
        c.argument('reminders_enabled', arg_type=get_three_state_flag(), help='', arg_group='Settings')

    with self.argument_context('identitygovernance access-review-access-review delete-access-review') as c:
        c.argument('access_review_id', type=str, help='key: id of accessReview')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance access-review-access-review list-access-review') as c:
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance access-review-access-review show-access-review') as c:
        c.argument('access_review_id', type=str, help='key: id of accessReview')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance access-review-access-review update-access-review') as c:
        c.argument('access_review_id', type=str, help='key: id of accessReview')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('business_flow_template_id', type=str, help='')
        c.argument('created_by', action=AddCreatedBy, nargs='+', help='userIdentity')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('end_date_time', help='')
        c.argument('reviewed_entity', action=AddReviewedEntity, nargs='+', help='identity')
        c.argument('reviewer_type', type=str, help='')
        c.argument('start_date_time', help='')
        c.argument('status', type=str, help='')
        c.argument('decisions', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('instances', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('my_decisions', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('reviewers', action=AddAccessreviewsAccessreviewReviewers, nargs='+', help='')
        c.argument('access_recommendations_enabled', arg_type=get_three_state_flag(), help='', arg_group='Settings')
        c.argument('activity_duration_in_days', type=int, help='', arg_group='Settings')
        c.argument('auto_apply_review_results_enabled', arg_type=get_three_state_flag(), help='',
                   arg_group='Settings')
        c.argument('auto_review_enabled', arg_type=get_three_state_flag(), help='', arg_group='Settings')
        c.argument('auto_review_settings', action=AddAutoReviewSettings, nargs='+', help='autoReviewSettings',
                   arg_group='Settings')
        c.argument('justification_required_on_approval', arg_type=get_three_state_flag(), help='',
                   arg_group='Settings')
        c.argument('mail_notifications_enabled', arg_type=get_three_state_flag(), help='', arg_group='Settings')
        c.argument('recurrence_settings', action=AddRecurrenceSettings, nargs='+',
                   help='accessReviewRecurrenceSettings', arg_group='Settings')
        c.argument('reminders_enabled', arg_type=get_three_state_flag(), help='', arg_group='Settings')

    with self.argument_context('identitygovernance access-review apply-decision') as c:
        c.argument('access_review_id', type=str, help='key: id of accessReview')

    with self.argument_context('identitygovernance access-review create-decision') as c:
        c.argument('access_review_id', type=str, help='key: id of accessReview')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('access_recommendation', type=str, help='')
        c.argument('microsoft_graph_access_review_decision_access_review_id_access_review_id', type=str, help='')
        c.argument('applied_by', action=AddCreatedBy, nargs='+', help='userIdentity')
        c.argument('applied_date_time', help='')
        c.argument('apply_result', type=str, help='')
        c.argument('justification', type=str, help='')
        c.argument('reviewed_by', action=AddCreatedBy, nargs='+', help='userIdentity')
        c.argument('reviewed_date_time', help='')
        c.argument('review_result', type=str, help='')

    with self.argument_context('identitygovernance access-review create-instance') as c:
        c.argument('access_review_id', type=str, help='key: id of accessReview')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('business_flow_template_id', type=str, help='')
        c.argument('created_by', action=AddCreatedBy, nargs='+', help='userIdentity')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('end_date_time', help='')
        c.argument('reviewed_entity', action=AddReviewedEntity, nargs='+', help='identity')
        c.argument('reviewer_type', type=str, help='')
        c.argument('start_date_time', help='')
        c.argument('status', type=str, help='')
        c.argument('decisions', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('instances', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('my_decisions', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('reviewers', action=AddAccessreviewsAccessreviewReviewers, nargs='+', help='')
        c.argument('access_recommendations_enabled', arg_type=get_three_state_flag(), help='', arg_group='Settings')
        c.argument('activity_duration_in_days', type=int, help='', arg_group='Settings')
        c.argument('auto_apply_review_results_enabled', arg_type=get_three_state_flag(), help='',
                   arg_group='Settings')
        c.argument('auto_review_enabled', arg_type=get_three_state_flag(), help='', arg_group='Settings')
        c.argument('auto_review_settings', action=AddAutoReviewSettings, nargs='+', help='autoReviewSettings',
                   arg_group='Settings')
        c.argument('justification_required_on_approval', arg_type=get_three_state_flag(), help='',
                   arg_group='Settings')
        c.argument('mail_notifications_enabled', arg_type=get_three_state_flag(), help='', arg_group='Settings')
        c.argument('recurrence_settings', action=AddRecurrenceSettings, nargs='+',
                   help='accessReviewRecurrenceSettings', arg_group='Settings')
        c.argument('reminders_enabled', arg_type=get_three_state_flag(), help='', arg_group='Settings')

    with self.argument_context('identitygovernance access-review create-my-decision') as c:
        c.argument('access_review_id', type=str, help='key: id of accessReview')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('access_recommendation', type=str, help='')
        c.argument('microsoft_graph_access_review_decision_access_review_id_access_review_id', type=str, help='')
        c.argument('applied_by', action=AddCreatedBy, nargs='+', help='userIdentity')
        c.argument('applied_date_time', help='')
        c.argument('apply_result', type=str, help='')
        c.argument('justification', type=str, help='')
        c.argument('reviewed_by', action=AddCreatedBy, nargs='+', help='userIdentity')
        c.argument('reviewed_date_time', help='')
        c.argument('review_result', type=str, help='')

    with self.argument_context('identitygovernance access-review create-reviewer') as c:
        c.argument('access_review_id', type=str, help='key: id of accessReview')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('display_name', type=str, help='')
        c.argument('user_principal_name', type=str, help='')

    with self.argument_context('identitygovernance access-review delete-decision') as c:
        c.argument('access_review_id', type=str, help='key: id of accessReview')
        c.argument('access_review_decision_id', type=str, help='key: id of accessReviewDecision')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance access-review delete-instance') as c:
        c.argument('access_review_id', type=str, help='key: id of accessReview')
        c.argument('access_review_id1', type=str, help='key: id of accessReview')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance access-review delete-my-decision') as c:
        c.argument('access_review_id', type=str, help='key: id of accessReview')
        c.argument('access_review_decision_id', type=str, help='key: id of accessReviewDecision')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance access-review delete-reviewer') as c:
        c.argument('access_review_id', type=str, help='key: id of accessReview')
        c.argument('access_review_reviewer_id', type=str, help='key: id of accessReviewReviewer')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance access-review list-decision') as c:
        c.argument('access_review_id', type=str, help='key: id of accessReview')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance access-review list-instance') as c:
        c.argument('access_review_id', type=str, help='key: id of accessReview')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance access-review list-my-decision') as c:
        c.argument('access_review_id', type=str, help='key: id of accessReview')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance access-review list-reviewer') as c:
        c.argument('access_review_id', type=str, help='key: id of accessReview')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance access-review reset-decision') as c:
        c.argument('access_review_id', type=str, help='key: id of accessReview')

    with self.argument_context('identitygovernance access-review send-reminder') as c:
        c.argument('access_review_id', type=str, help='key: id of accessReview')

    with self.argument_context('identitygovernance access-review show-decision') as c:
        c.argument('access_review_id', type=str, help='key: id of accessReview')
        c.argument('access_review_decision_id', type=str, help='key: id of accessReviewDecision')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance access-review show-instance') as c:
        c.argument('access_review_id', type=str, help='key: id of accessReview')
        c.argument('access_review_id1', type=str, help='key: id of accessReview')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance access-review show-my-decision') as c:
        c.argument('access_review_id', type=str, help='key: id of accessReview')
        c.argument('access_review_decision_id', type=str, help='key: id of accessReviewDecision')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance access-review show-reviewer') as c:
        c.argument('access_review_id', type=str, help='key: id of accessReview')
        c.argument('access_review_reviewer_id', type=str, help='key: id of accessReviewReviewer')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance access-review stop') as c:
        c.argument('access_review_id', type=str, help='key: id of accessReview')

    with self.argument_context('identitygovernance access-review update-decision') as c:
        c.argument('access_review_id', type=str, help='key: id of accessReview')
        c.argument('access_review_decision_id', type=str, help='key: id of accessReviewDecision')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('access_recommendation', type=str, help='')
        c.argument('microsoft_graph_access_review_decision_access_review_id_access_review_id', type=str, help='')
        c.argument('applied_by', action=AddCreatedBy, nargs='+', help='userIdentity')
        c.argument('applied_date_time', help='')
        c.argument('apply_result', type=str, help='')
        c.argument('justification', type=str, help='')
        c.argument('reviewed_by', action=AddCreatedBy, nargs='+', help='userIdentity')
        c.argument('reviewed_date_time', help='')
        c.argument('review_result', type=str, help='')

    with self.argument_context('identitygovernance access-review update-instance') as c:
        c.argument('access_review_id', type=str, help='key: id of accessReview')
        c.argument('access_review_id1', type=str, help='key: id of accessReview')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('business_flow_template_id', type=str, help='')
        c.argument('created_by', action=AddCreatedBy, nargs='+', help='userIdentity')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('end_date_time', help='')
        c.argument('reviewed_entity', action=AddReviewedEntity, nargs='+', help='identity')
        c.argument('reviewer_type', type=str, help='')
        c.argument('start_date_time', help='')
        c.argument('status', type=str, help='')
        c.argument('decisions', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('instances', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('my_decisions', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('reviewers', action=AddAccessreviewsAccessreviewReviewers, nargs='+', help='')
        c.argument('access_recommendations_enabled', arg_type=get_three_state_flag(), help='', arg_group='Settings')
        c.argument('activity_duration_in_days', type=int, help='', arg_group='Settings')
        c.argument('auto_apply_review_results_enabled', arg_type=get_three_state_flag(), help='',
                   arg_group='Settings')
        c.argument('auto_review_enabled', arg_type=get_three_state_flag(), help='', arg_group='Settings')
        c.argument('auto_review_settings', action=AddAutoReviewSettings, nargs='+', help='autoReviewSettings',
                   arg_group='Settings')
        c.argument('justification_required_on_approval', arg_type=get_three_state_flag(), help='',
                   arg_group='Settings')
        c.argument('mail_notifications_enabled', arg_type=get_three_state_flag(), help='', arg_group='Settings')
        c.argument('recurrence_settings', action=AddRecurrenceSettings, nargs='+',
                   help='accessReviewRecurrenceSettings', arg_group='Settings')
        c.argument('reminders_enabled', arg_type=get_three_state_flag(), help='', arg_group='Settings')

    with self.argument_context('identitygovernance access-review update-my-decision') as c:
        c.argument('access_review_id', type=str, help='key: id of accessReview')
        c.argument('access_review_decision_id', type=str, help='key: id of accessReviewDecision')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('access_recommendation', type=str, help='')
        c.argument('microsoft_graph_access_review_decision_access_review_id_access_review_id', type=str, help='')
        c.argument('applied_by', action=AddCreatedBy, nargs='+', help='userIdentity')
        c.argument('applied_date_time', help='')
        c.argument('apply_result', type=str, help='')
        c.argument('justification', type=str, help='')
        c.argument('reviewed_by', action=AddCreatedBy, nargs='+', help='userIdentity')
        c.argument('reviewed_date_time', help='')
        c.argument('review_result', type=str, help='')

    with self.argument_context('identitygovernance access-review update-reviewer') as c:
        c.argument('access_review_id', type=str, help='key: id of accessReview')
        c.argument('access_review_reviewer_id', type=str, help='key: id of accessReviewReviewer')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('display_name', type=str, help='')
        c.argument('user_principal_name', type=str, help='')

    with self.argument_context('identitygovernance agreement-agreement create-agreement') as c:
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('display_name', type=str, help='')
        c.argument('is_per_device_acceptance_required', arg_type=get_three_state_flag(), help='')
        c.argument('is_viewing_before_acceptance_required', arg_type=get_three_state_flag(), help='')
        c.argument('terms_expiration', action=AddTermsExpiration, nargs='+', help='termsExpiration')
        c.argument('user_reaccept_required_frequency', help='')
        c.argument('acceptances', action=AddAcceptances, nargs='+', help='')
        c.argument('files', action=AddFiles, nargs='+', help='')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='File')
        c.argument('file_name', type=str, help='', arg_group='File')
        c.argument('is_default', arg_type=get_three_state_flag(), help='', arg_group='File')
        c.argument('language', type=str, help='', arg_group='File')
        c.argument('data', help='', arg_group='File File Data')
        c.argument('localizations', action=AddLocalizations, nargs='+', help='', arg_group='File')

    with self.argument_context('identitygovernance agreement-agreement delete-agreement') as c:
        c.argument('agreement_id', type=str, help='key: id of agreement')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance agreement-agreement list-agreement') as c:
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance agreement-agreement show-agreement') as c:
        c.argument('agreement_id', type=str, help='key: id of agreement')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance agreement-agreement update-agreement') as c:
        c.argument('agreement_id', type=str, help='key: id of agreement')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('display_name', type=str, help='')
        c.argument('is_per_device_acceptance_required', arg_type=get_three_state_flag(), help='')
        c.argument('is_viewing_before_acceptance_required', arg_type=get_three_state_flag(), help='')
        c.argument('terms_expiration', action=AddTermsExpiration, nargs='+', help='termsExpiration')
        c.argument('user_reaccept_required_frequency', help='')
        c.argument('acceptances', action=AddAcceptances, nargs='+', help='')
        c.argument('files', action=AddFiles, nargs='+', help='')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='File')
        c.argument('file_name', type=str, help='', arg_group='File')
        c.argument('is_default', arg_type=get_three_state_flag(), help='', arg_group='File')
        c.argument('language', type=str, help='', arg_group='File')
        c.argument('data', help='', arg_group='File File Data')
        c.argument('localizations', action=AddLocalizations, nargs='+', help='', arg_group='File')

    with self.argument_context('identitygovernance agreement create-acceptance') as c:
        c.argument('agreement_id', type=str, help='key: id of agreement')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('agreement_file_id', type=str, help='')
        c.argument('microsoft_graph_agreement_acceptance_agreement_id', type=str, help='')
        c.argument('device_display_name', type=str, help='')
        c.argument('device_id', type=str, help='')
        c.argument('device_os_type', type=str, help='')
        c.argument('device_os_version', type=str, help='')
        c.argument('expiration_date_time', help='')
        c.argument('recorded_date_time', help='')
        c.argument('state', arg_type=get_enum_type(['accepted', 'declined', 'unknownFutureValue']), help='')
        c.argument('user_display_name', type=str, help='')
        c.argument('user_email', type=str, help='')
        c.argument('user_id', type=str, help='')
        c.argument('user_principal_name', type=str, help='')

    with self.argument_context('identitygovernance agreement create-file') as c:
        c.argument('agreement_id', type=str, help='key: id of agreement')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('file_name', type=str, help='')
        c.argument('is_default', arg_type=get_three_state_flag(), help='')
        c.argument('language', type=str, help='')
        c.argument('data', help='', arg_group='File Data')

    with self.argument_context('identitygovernance agreement delete-acceptance') as c:
        c.argument('agreement_id', type=str, help='key: id of agreement')
        c.argument('agreement_acceptance_id', type=str, help='key: id of agreementAcceptance')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance agreement delete-file') as c:
        c.argument('agreement_id', type=str, help='key: id of agreement')
        c.argument('agreement_file_localization_id', type=str, help='key: id of agreementFileLocalization')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance agreement list-acceptance') as c:
        c.argument('agreement_id', type=str, help='key: id of agreement')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance agreement list-file') as c:
        c.argument('agreement_id', type=str, help='key: id of agreement')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance agreement show-acceptance') as c:
        c.argument('agreement_id', type=str, help='key: id of agreement')
        c.argument('agreement_acceptance_id', type=str, help='key: id of agreementAcceptance')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance agreement show-file') as c:
        c.argument('agreement_id', type=str, help='key: id of agreement')
        c.argument('agreement_file_localization_id', type=str, help='key: id of agreementFileLocalization')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance agreement update-acceptance') as c:
        c.argument('agreement_id', type=str, help='key: id of agreement')
        c.argument('agreement_acceptance_id', type=str, help='key: id of agreementAcceptance')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('agreement_file_id', type=str, help='')
        c.argument('microsoft_graph_agreement_acceptance_agreement_id', type=str, help='')
        c.argument('device_display_name', type=str, help='')
        c.argument('device_id', type=str, help='')
        c.argument('device_os_type', type=str, help='')
        c.argument('device_os_version', type=str, help='')
        c.argument('expiration_date_time', help='')
        c.argument('recorded_date_time', help='')
        c.argument('state', arg_type=get_enum_type(['accepted', 'declined', 'unknownFutureValue']), help='')
        c.argument('user_display_name', type=str, help='')
        c.argument('user_email', type=str, help='')
        c.argument('user_id', type=str, help='')
        c.argument('user_principal_name', type=str, help='')

    with self.argument_context('identitygovernance agreement update-file') as c:
        c.argument('agreement_id', type=str, help='key: id of agreement')
        c.argument('agreement_file_localization_id', type=str, help='key: id of agreementFileLocalization')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('file_name', type=str, help='')
        c.argument('is_default', arg_type=get_three_state_flag(), help='')
        c.argument('language', type=str, help='')
        c.argument('data', help='', arg_group='File Data')
        c.argument('localizations', action=AddLocalizations, nargs='+', help='')

    with self.argument_context('identitygovernance agreement-file create-localization') as c:
        c.argument('agreement_id', type=str, help='key: id of agreement')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('file_name', type=str, help='')
        c.argument('is_default', arg_type=get_three_state_flag(), help='')
        c.argument('language', type=str, help='')
        c.argument('data', help='', arg_group='File Data')

    with self.argument_context('identitygovernance agreement-file delete-localization') as c:
        c.argument('agreement_id', type=str, help='key: id of agreement')
        c.argument('agreement_file_localization_id', type=str, help='key: id of agreementFileLocalization')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance agreement-file list-localization') as c:
        c.argument('agreement_id', type=str, help='key: id of agreement')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance agreement-file show-localization') as c:
        c.argument('agreement_id', type=str, help='key: id of agreement')
        c.argument('agreement_file_localization_id', type=str, help='key: id of agreementFileLocalization')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance agreement-file update-localization') as c:
        c.argument('agreement_id', type=str, help='key: id of agreement')
        c.argument('agreement_file_localization_id', type=str, help='key: id of agreementFileLocalization')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('file_name', type=str, help='')
        c.argument('is_default', arg_type=get_three_state_flag(), help='')
        c.argument('language', type=str, help='')
        c.argument('data', help='', arg_group='File Data')

    with self.argument_context('identitygovernance business-flow-template-business-flow-template create-business-flow-template') as c:
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('display_name', type=str, help='')

    with self.argument_context('identitygovernance business-flow-template-business-flow-template delete-business-flow-template') as c:
        c.argument('business_flow_template_id', type=str, help='key: id of businessFlowTemplate')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance business-flow-template-business-flow-template list-business-flow-template') as c:
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance business-flow-template-business-flow-template show-business-flow-template') as c:
        c.argument('business_flow_template_id', type=str, help='key: id of businessFlowTemplate')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance business-flow-template-business-flow-template update-business-flow-template') as c:
        c.argument('business_flow_template_id', type=str, help='key: id of businessFlowTemplate')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('display_name', type=str, help='')

    with self.argument_context('identitygovernance identity-governance-access-review-definition-instance-definition stop') as c:
        c.argument('access_review_schedule_definition_id', type=str, help='key: id of accessReviewScheduleDefinition')
        c.argument('access_review_instance_id', type=str, help='key: id of accessReviewInstance')

    with self.argument_context('identitygovernance identity-governance-access-review-definition-instance accept-recommendation') as c:
        c.argument('access_review_schedule_definition_id', type=str, help='key: id of accessReviewScheduleDefinition')
        c.argument('access_review_instance_id', type=str, help='key: id of accessReviewInstance')

    with self.argument_context('identitygovernance identity-governance-access-review-definition-instance apply-decision') as c:
        c.argument('access_review_schedule_definition_id', type=str, help='key: id of accessReviewScheduleDefinition')
        c.argument('access_review_instance_id', type=str, help='key: id of accessReviewInstance')

    with self.argument_context('identitygovernance identity-governance-access-review-definition-instance reset-decision') as c:
        c.argument('access_review_schedule_definition_id', type=str, help='key: id of accessReviewScheduleDefinition')
        c.argument('access_review_instance_id', type=str, help='key: id of accessReviewInstance')

    with self.argument_context('identitygovernance identity-governance-access-review-definition-instance send-reminder') as c:
        c.argument('access_review_schedule_definition_id', type=str, help='key: id of accessReviewScheduleDefinition')
        c.argument('access_review_instance_id', type=str, help='key: id of accessReviewInstance')

    with self.argument_context('identitygovernance identity-governance-access-review-definition-instance stop') as c:
        c.argument('access_review_schedule_definition_id', type=str, help='key: id of accessReviewScheduleDefinition')
        c.argument('access_review_instance_id', type=str, help='key: id of accessReviewInstance')

    with self.argument_context('identitygovernance identity-governance-access-review-definition stop') as c:
        c.argument('access_review_schedule_definition_id', type=str, help='key: id of accessReviewScheduleDefinition')

    with self.argument_context('identitygovernance identity-governance delete-entitlement-management') as c:
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance show-entitlement-management') as c:
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance update-entitlement-management') as c:
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('access_package_assignment_policies', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_assignment_requests', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_assignment_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_assignments', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_catalogs', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_requests', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_role_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resources', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_packages', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('connected_organizations', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('settings', action=AddIdentitygovernanceSettings, nargs='+', help='entitlementManagementSettings')

    with self.argument_context('identitygovernance identity-governance-entitlement-management create-access-package') as c:
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('catalog_id', type=str, help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_hidden', arg_type=get_three_state_flag(), help='')
        c.argument('is_role_scopes_visible', arg_type=get_three_state_flag(), help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_assignment_policies', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_catalog', type=validate_file_or_dict, help='accessPackageCatalog Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_role_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management create-access-package-assignment') as c:
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('access_package_id', type=str, help='')
        c.argument('assignment_policy_id', type=str, help='')
        c.argument('assignment_state', type=str, help='')
        c.argument('assignment_status', type=str, help='')
        c.argument('catalog_id', type=str, help='')
        c.argument('expired_date_time', help='')
        c.argument('is_extended', arg_type=get_three_state_flag(), help='')
        c.argument('target_id', type=str, help='')
        c.argument('access_package', type=validate_file_or_dict, help='accessPackage Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_assignment_policy', type=validate_file_or_dict, help='accessPackageAssignmentPolicy '
                   'Expected value: json-string/@json-file.')
        c.argument('access_package_assignment_requests', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_assignment_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Target')
        c.argument('alt_sec_id', type=str, help='', arg_group='Target')
        c.argument('connected_organization_id', type=str, help='', arg_group='Target')
        c.argument('display_name', type=str, help='', arg_group='Target')
        c.argument('email', type=str, help='', arg_group='Target')
        c.argument('object_id', type=str, help='', arg_group='Target')
        c.argument('on_premises_security_identifier', type=str, help='', arg_group='Target')
        c.argument('principal_name', type=str, help='', arg_group='Target')
        c.argument('type_', options_list=['--type'], type=str, help='', arg_group='Target')
        c.argument('id1', type=str, help='Read-only.', arg_group='Target Connected Organization')
        c.argument('created_by', type=str, help='', arg_group='Target Connected Organization')
        c.argument('created_date_time', help='', arg_group='Target Connected Organization')
        c.argument('description', type=str, help='', arg_group='Target Connected Organization')
        c.argument('microsoft_graph_connected_organization_display_name', type=str, help='', arg_group='Target '
                   'Connected Organization')
        c.argument('identity_sources', action=AddIdentitySources, nargs='+', help=' Expect value: KEY1=VALUE1 '
                   'KEY2=VALUE2 ...', arg_group='Target Connected Organization')
        c.argument('modified_by', type=str, help='', arg_group='Target Connected Organization')
        c.argument('modified_date_time', help='', arg_group='Target Connected Organization')
        c.argument('state', arg_type=get_enum_type(['configured', 'proposed', 'unknownFutureValue']), help='',
                   arg_group='Target Connected Organization')
        c.argument('external_sponsors', action=AddExternalSponsors, nargs='+', help='', arg_group='Target Connected '
                   'Organization')
        c.argument('internal_sponsors', action=AddInternalSponsors, nargs='+', help='', arg_group='Target Connected '
                   'Organization')
        c.argument('expiration', action=AddExpiration, nargs='+', help='expirationPattern', arg_group='Schedule')
        c.argument('recurrence', type=validate_file_or_dict, help='patternedRecurrence Expected value: '
                   'json-string/@json-file.', arg_group='Schedule')
        c.argument('start_date_time', help='', arg_group='Schedule')

    with self.argument_context('identitygovernance identity-governance-entitlement-management create-access-package-assignment-policy') as c:
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('access_package_id', type=str, help='')
        c.argument('can_extend', arg_type=get_three_state_flag(), help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('duration_in_days', type=int, help='')
        c.argument('expiration_date_time', help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('questions', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('access_package', type=validate_file_or_dict, help='accessPackage Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_catalog', type=validate_file_or_dict, help='accessPackageCatalog Expected value: '
                   'json-string/@json-file.')
        c.argument('accept_requests', arg_type=get_three_state_flag(), help='', arg_group='Requestor Settings')
        c.argument('allowed_requestors', action=AddAllowedRequestors, nargs='+', help='', arg_group='Requestor '
                   'Settings')
        c.argument('scope_type', type=str, help='', arg_group='Requestor Settings')
        c.argument('approval_mode', type=str, help='', arg_group='Request Approval Settings')
        c.argument('approval_stages', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.',
                   arg_group='Request Approval Settings')
        c.argument('is_approval_required', arg_type=get_three_state_flag(), help='', arg_group='Request Approval '
                   'Settings')
        c.argument('is_approval_required_for_extension', arg_type=get_three_state_flag(), help='', arg_group='Request '
                   'Approval Settings')
        c.argument('is_requestor_justification_required', arg_type=get_three_state_flag(), help='', arg_group='Request '
                   'Approval Settings')
        c.argument('integer_duration_in_days', type=int, help='', arg_group='Access Review Settings')
        c.argument('is_enabled', arg_type=get_three_state_flag(), help='', arg_group='Access Review Settings')
        c.argument('recurrence_type', type=str, help='', arg_group='Access Review Settings')
        c.argument('reviewers', action=AddIdentitygovernanceEntitlementmanagementReviewers, nargs='+', help='',
                   arg_group='Access Review Settings')
        c.argument('reviewer_type', type=str, help='', arg_group='Access Review Settings')
        c.argument('start_date_time', help='', arg_group='Access Review Settings')

    with self.argument_context('identitygovernance identity-governance-entitlement-management create-access-package-assignment-request') as c:
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('answers', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('completed_date', help='')
        c.argument('created_date_time', help='')
        c.argument('expiration_date_time', help='')
        c.argument('is_validation_only', arg_type=get_three_state_flag(), help='')
        c.argument('justification', type=str, help='')
        c.argument('request_state', type=str, help='')
        c.argument('request_status', type=str, help='')
        c.argument('request_type', type=str, help='')
        c.argument('access_package', type=validate_file_or_dict, help='accessPackage Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_assignment', type=validate_file_or_dict, help='accessPackageAssignment Expected '
                   'value: json-string/@json-file.')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Requestor')
        c.argument('alt_sec_id', type=str, help='', arg_group='Requestor')
        c.argument('connected_organization_id', type=str, help='', arg_group='Requestor')
        c.argument('display_name', type=str, help='', arg_group='Requestor')
        c.argument('email', type=str, help='', arg_group='Requestor')
        c.argument('object_id', type=str, help='', arg_group='Requestor')
        c.argument('on_premises_security_identifier', type=str, help='', arg_group='Requestor')
        c.argument('principal_name', type=str, help='', arg_group='Requestor')
        c.argument('type_', options_list=['--type'], type=str, help='', arg_group='Requestor')
        c.argument('id1', type=str, help='Read-only.', arg_group='Requestor Connected Organization')
        c.argument('created_by', type=str, help='', arg_group='Requestor Connected Organization')
        c.argument('microsoft_graph_connected_organization_created_date_time_created_date_time', help='',
                   arg_group='Requestor Connected Organization')
        c.argument('description', type=str, help='', arg_group='Requestor Connected Organization')
        c.argument('microsoft_graph_connected_organization_display_name', type=str, help='', arg_group='Requestor '
                   'Connected Organization')
        c.argument('identity_sources', action=AddIdentitySources, nargs='+', help=' Expect value: KEY1=VALUE1 '
                   'KEY2=VALUE2 ...', arg_group='Requestor Connected Organization')
        c.argument('modified_by', type=str, help='', arg_group='Requestor Connected Organization')
        c.argument('modified_date_time', help='', arg_group='Requestor Connected Organization')
        c.argument('state', arg_type=get_enum_type(['configured', 'proposed', 'unknownFutureValue']), help='',
                   arg_group='Requestor Connected Organization')
        c.argument('external_sponsors', action=AddExternalSponsors, nargs='+', help='', arg_group='Requestor Connected '
                   'Organization')
        c.argument('internal_sponsors', action=AddInternalSponsors, nargs='+', help='', arg_group='Requestor Connected '
                   'Organization')
        c.argument('expiration', action=AddExpiration, nargs='+', help='expirationPattern', arg_group='Schedule')
        c.argument('recurrence', type=validate_file_or_dict, help='patternedRecurrence Expected value: '
                   'json-string/@json-file.', arg_group='Schedule')
        c.argument('start_date_time', help='', arg_group='Schedule')

    with self.argument_context('identitygovernance identity-governance-entitlement-management create-access-package-assignment-resource-role') as c:
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('status', type=str, help='')
        c.argument('access_package_assignments', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_role', type=validate_file_or_dict, help='accessPackageResourceRole '
                   'Expected value: json-string/@json-file.')
        c.argument('access_package_resource_scope', type=validate_file_or_dict, help='accessPackageResourceScope '
                   'Expected value: json-string/@json-file.')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Access Package Subject')
        c.argument('alt_sec_id', type=str, help='', arg_group='Access Package Subject')
        c.argument('connected_organization_id', type=str, help='', arg_group='Access Package Subject')
        c.argument('display_name', type=str, help='', arg_group='Access Package Subject')
        c.argument('email', type=str, help='', arg_group='Access Package Subject')
        c.argument('object_id', type=str, help='', arg_group='Access Package Subject')
        c.argument('on_premises_security_identifier', type=str, help='', arg_group='Access Package Subject')
        c.argument('principal_name', type=str, help='', arg_group='Access Package Subject')
        c.argument('type_', options_list=['--type'], type=str, help='', arg_group='Access Package Subject')
        c.argument('id1', type=str, help='Read-only.', arg_group='Access Package Subject Connected Organization')
        c.argument('created_by', type=str, help='', arg_group='Access Package Subject Connected Organization')
        c.argument('created_date_time', help='', arg_group='Access Package Subject Connected Organization')
        c.argument('description', type=str, help='', arg_group='Access Package Subject Connected Organization')
        c.argument('microsoft_graph_connected_organization_display_name', type=str, help='', arg_group='Access Package '
                   'Subject Connected Organization')
        c.argument('identity_sources', action=AddIdentitySources, nargs='+', help=' Expect value: KEY1=VALUE1 '
                   'KEY2=VALUE2 ...', arg_group='Access Package Subject Connected Organization')
        c.argument('modified_by', type=str, help='', arg_group='Access Package Subject Connected Organization')
        c.argument('modified_date_time', help='', arg_group='Access Package Subject Connected Organization')
        c.argument('state', arg_type=get_enum_type(['configured', 'proposed', 'unknownFutureValue']), help='',
                   arg_group='Access Package Subject Connected Organization')
        c.argument('external_sponsors', action=AddExternalSponsors, nargs='+', help='', arg_group='Access Package '
                   'Subject Connected Organization')
        c.argument('internal_sponsors', action=AddInternalSponsors, nargs='+', help='', arg_group='Access Package '
                   'Subject Connected Organization')

    with self.argument_context('identitygovernance identity-governance-entitlement-management create-access-package-catalog') as c:
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('catalog_status', type=str, help='')
        c.argument('catalog_type', type=str, help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_externally_visible', arg_type=get_three_state_flag(), help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resources', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_packages', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management create-access-package-resource') as c:
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management create-access-package-resource-request') as c:
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('catalog_id', type=str, help='')
        c.argument('execute_immediately', arg_type=get_three_state_flag(), help='')
        c.argument('expiration_date_time', help='')
        c.argument('is_validation_only', arg_type=get_three_state_flag(), help='')
        c.argument('justification', type=str, help='')
        c.argument('request_state', type=str, help='')
        c.argument('request_status', type=str, help='')
        c.argument('request_type', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Requestor')
        c.argument('alt_sec_id', type=str, help='', arg_group='Requestor')
        c.argument('connected_organization_id', type=str, help='', arg_group='Requestor')
        c.argument('display_name', type=str, help='', arg_group='Requestor')
        c.argument('email', type=str, help='', arg_group='Requestor')
        c.argument('object_id', type=str, help='', arg_group='Requestor')
        c.argument('on_premises_security_identifier', type=str, help='', arg_group='Requestor')
        c.argument('principal_name', type=str, help='', arg_group='Requestor')
        c.argument('type_', options_list=['--type'], type=str, help='', arg_group='Requestor')
        c.argument('id1', type=str, help='Read-only.', arg_group='Requestor Connected Organization')
        c.argument('created_by', type=str, help='', arg_group='Requestor Connected Organization')
        c.argument('created_date_time', help='', arg_group='Requestor Connected Organization')
        c.argument('description', type=str, help='', arg_group='Requestor Connected Organization')
        c.argument('microsoft_graph_connected_organization_display_name', type=str, help='', arg_group='Requestor '
                   'Connected Organization')
        c.argument('identity_sources', action=AddIdentitySources, nargs='+', help=' Expect value: KEY1=VALUE1 '
                   'KEY2=VALUE2 ...', arg_group='Requestor Connected Organization')
        c.argument('modified_by', type=str, help='', arg_group='Requestor Connected Organization')
        c.argument('modified_date_time', help='', arg_group='Requestor Connected Organization')
        c.argument('state', arg_type=get_enum_type(['configured', 'proposed', 'unknownFutureValue']), help='',
                   arg_group='Requestor Connected Organization')
        c.argument('external_sponsors', action=AddExternalSponsors, nargs='+', help='', arg_group='Requestor Connected '
                   'Organization')
        c.argument('internal_sponsors', action=AddInternalSponsors, nargs='+', help='', arg_group='Requestor Connected '
                   'Organization')

    with self.argument_context('identitygovernance identity-governance-entitlement-management create-access-package-resource-role-scope') as c:
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_resource_role', type=validate_file_or_dict, help='accessPackageResourceRole '
                   'Expected value: json-string/@json-file.')
        c.argument('access_package_resource_scope', type=validate_file_or_dict, help='accessPackageResourceScope '
                   'Expected value: json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management create-connected-organization') as c:
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('identity_sources', action=AddIdentitySources, nargs='+', help=' Expect value: KEY1=VALUE1 '
                   'KEY2=VALUE2 ...')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('state', arg_type=get_enum_type(['configured', 'proposed', 'unknownFutureValue']), help='')
        c.argument('external_sponsors', action=AddExternalSponsors, nargs='+', help='')
        c.argument('internal_sponsors', action=AddInternalSponsors, nargs='+', help='')

    with self.argument_context('identitygovernance identity-governance-entitlement-management delete-access-package') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management delete-access-package-assignment') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management delete-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management delete-access-package-assignment-request') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management delete-access-package-assignment-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management delete-access-package-catalog') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management delete-access-package-resource') as c:
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management delete-access-package-resource-request') as c:
        c.argument('access_package_resource_request_id', type=str, help='key: id of accessPackageResourceRequest')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management delete-access-package-resource-role-scope') as c:
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management delete-connected-organization') as c:
        c.argument('connected_organization_id', type=str, help='key: id of connectedOrganization')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management delete-setting') as c:
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management list-access-package') as c:
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management list-access-package-assignment') as c:
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management list-access-package-assignment-policy') as c:
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management list-access-package-assignment-request') as c:
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management list-access-package-assignment-resource-role') as c:
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management list-access-package-catalog') as c:
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management list-access-package-resource') as c:
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management list-access-package-resource-request') as c:
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management list-access-package-resource-role-scope') as c:
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management list-connected-organization') as c:
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management show-access-package') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management show-access-package-assignment') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management show-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management show-access-package-assignment-request') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management show-access-package-assignment-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management show-access-package-catalog') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management show-access-package-resource') as c:
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management show-access-package-resource-request') as c:
        c.argument('access_package_resource_request_id', type=str, help='key: id of accessPackageResourceRequest')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management show-access-package-resource-role-scope') as c:
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management show-connected-organization') as c:
        c.argument('connected_organization_id', type=str, help='key: id of connectedOrganization')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management show-setting') as c:
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management update-access-package') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('catalog_id', type=str, help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_hidden', arg_type=get_three_state_flag(), help='')
        c.argument('is_role_scopes_visible', arg_type=get_three_state_flag(), help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_assignment_policies', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_catalog', type=validate_file_or_dict, help='accessPackageCatalog Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_role_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management update-access-package-assignment') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('access_package_id', type=str, help='')
        c.argument('assignment_policy_id', type=str, help='')
        c.argument('assignment_state', type=str, help='')
        c.argument('assignment_status', type=str, help='')
        c.argument('catalog_id', type=str, help='')
        c.argument('expired_date_time', help='')
        c.argument('is_extended', arg_type=get_three_state_flag(), help='')
        c.argument('target_id', type=str, help='')
        c.argument('access_package', type=validate_file_or_dict, help='accessPackage Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_assignment_policy', type=validate_file_or_dict, help='accessPackageAssignmentPolicy '
                   'Expected value: json-string/@json-file.')
        c.argument('access_package_assignment_requests', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_assignment_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Target')
        c.argument('alt_sec_id', type=str, help='', arg_group='Target')
        c.argument('connected_organization_id', type=str, help='', arg_group='Target')
        c.argument('display_name', type=str, help='', arg_group='Target')
        c.argument('email', type=str, help='', arg_group='Target')
        c.argument('object_id', type=str, help='', arg_group='Target')
        c.argument('on_premises_security_identifier', type=str, help='', arg_group='Target')
        c.argument('principal_name', type=str, help='', arg_group='Target')
        c.argument('type_', options_list=['--type'], type=str, help='', arg_group='Target')
        c.argument('id1', type=str, help='Read-only.', arg_group='Target Connected Organization')
        c.argument('created_by', type=str, help='', arg_group='Target Connected Organization')
        c.argument('created_date_time', help='', arg_group='Target Connected Organization')
        c.argument('description', type=str, help='', arg_group='Target Connected Organization')
        c.argument('microsoft_graph_connected_organization_display_name', type=str, help='', arg_group='Target '
                   'Connected Organization')
        c.argument('identity_sources', action=AddIdentitySources, nargs='+', help=' Expect value: KEY1=VALUE1 '
                   'KEY2=VALUE2 ...', arg_group='Target Connected Organization')
        c.argument('modified_by', type=str, help='', arg_group='Target Connected Organization')
        c.argument('modified_date_time', help='', arg_group='Target Connected Organization')
        c.argument('state', arg_type=get_enum_type(['configured', 'proposed', 'unknownFutureValue']), help='',
                   arg_group='Target Connected Organization')
        c.argument('external_sponsors', action=AddExternalSponsors, nargs='+', help='', arg_group='Target Connected '
                   'Organization')
        c.argument('internal_sponsors', action=AddInternalSponsors, nargs='+', help='', arg_group='Target Connected '
                   'Organization')
        c.argument('expiration', action=AddExpiration, nargs='+', help='expirationPattern', arg_group='Schedule')
        c.argument('recurrence', type=validate_file_or_dict, help='patternedRecurrence Expected value: '
                   'json-string/@json-file.', arg_group='Schedule')
        c.argument('start_date_time', help='', arg_group='Schedule')

    with self.argument_context('identitygovernance identity-governance-entitlement-management update-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('access_package_id', type=str, help='')
        c.argument('can_extend', arg_type=get_three_state_flag(), help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('duration_in_days', type=int, help='')
        c.argument('expiration_date_time', help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('questions', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('access_package', type=validate_file_or_dict, help='accessPackage Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_catalog', type=validate_file_or_dict, help='accessPackageCatalog Expected value: '
                   'json-string/@json-file.')
        c.argument('accept_requests', arg_type=get_three_state_flag(), help='', arg_group='Requestor Settings')
        c.argument('allowed_requestors', action=AddAllowedRequestors, nargs='+', help='', arg_group='Requestor '
                   'Settings')
        c.argument('scope_type', type=str, help='', arg_group='Requestor Settings')
        c.argument('approval_mode', type=str, help='', arg_group='Request Approval Settings')
        c.argument('approval_stages', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.',
                   arg_group='Request Approval Settings')
        c.argument('is_approval_required', arg_type=get_three_state_flag(), help='', arg_group='Request Approval '
                   'Settings')
        c.argument('is_approval_required_for_extension', arg_type=get_three_state_flag(), help='', arg_group='Request '
                   'Approval Settings')
        c.argument('is_requestor_justification_required', arg_type=get_three_state_flag(), help='', arg_group='Request '
                   'Approval Settings')
        c.argument('integer_duration_in_days', type=int, help='', arg_group='Access Review Settings')
        c.argument('is_enabled', arg_type=get_three_state_flag(), help='', arg_group='Access Review Settings')
        c.argument('recurrence_type', type=str, help='', arg_group='Access Review Settings')
        c.argument('reviewers', action=AddIdentitygovernanceEntitlementmanagementReviewers, nargs='+', help='',
                   arg_group='Access Review Settings')
        c.argument('reviewer_type', type=str, help='', arg_group='Access Review Settings')
        c.argument('start_date_time', help='', arg_group='Access Review Settings')

    with self.argument_context('identitygovernance identity-governance-entitlement-management update-access-package-assignment-request') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('answers', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('completed_date', help='')
        c.argument('created_date_time', help='')
        c.argument('expiration_date_time', help='')
        c.argument('is_validation_only', arg_type=get_three_state_flag(), help='')
        c.argument('justification', type=str, help='')
        c.argument('request_state', type=str, help='')
        c.argument('request_status', type=str, help='')
        c.argument('request_type', type=str, help='')
        c.argument('access_package', type=validate_file_or_dict, help='accessPackage Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_assignment', type=validate_file_or_dict, help='accessPackageAssignment Expected '
                   'value: json-string/@json-file.')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Requestor')
        c.argument('alt_sec_id', type=str, help='', arg_group='Requestor')
        c.argument('connected_organization_id', type=str, help='', arg_group='Requestor')
        c.argument('display_name', type=str, help='', arg_group='Requestor')
        c.argument('email', type=str, help='', arg_group='Requestor')
        c.argument('object_id', type=str, help='', arg_group='Requestor')
        c.argument('on_premises_security_identifier', type=str, help='', arg_group='Requestor')
        c.argument('principal_name', type=str, help='', arg_group='Requestor')
        c.argument('type_', options_list=['--type'], type=str, help='', arg_group='Requestor')
        c.argument('id1', type=str, help='Read-only.', arg_group='Requestor Connected Organization')
        c.argument('created_by', type=str, help='', arg_group='Requestor Connected Organization')
        c.argument('microsoft_graph_connected_organization_created_date_time_created_date_time', help='',
                   arg_group='Requestor Connected Organization')
        c.argument('description', type=str, help='', arg_group='Requestor Connected Organization')
        c.argument('microsoft_graph_connected_organization_display_name', type=str, help='', arg_group='Requestor '
                   'Connected Organization')
        c.argument('identity_sources', action=AddIdentitySources, nargs='+', help=' Expect value: KEY1=VALUE1 '
                   'KEY2=VALUE2 ...', arg_group='Requestor Connected Organization')
        c.argument('modified_by', type=str, help='', arg_group='Requestor Connected Organization')
        c.argument('modified_date_time', help='', arg_group='Requestor Connected Organization')
        c.argument('state', arg_type=get_enum_type(['configured', 'proposed', 'unknownFutureValue']), help='',
                   arg_group='Requestor Connected Organization')
        c.argument('external_sponsors', action=AddExternalSponsors, nargs='+', help='', arg_group='Requestor Connected '
                   'Organization')
        c.argument('internal_sponsors', action=AddInternalSponsors, nargs='+', help='', arg_group='Requestor Connected '
                   'Organization')
        c.argument('expiration', action=AddExpiration, nargs='+', help='expirationPattern', arg_group='Schedule')
        c.argument('recurrence', type=validate_file_or_dict, help='patternedRecurrence Expected value: '
                   'json-string/@json-file.', arg_group='Schedule')
        c.argument('start_date_time', help='', arg_group='Schedule')

    with self.argument_context('identitygovernance identity-governance-entitlement-management update-access-package-assignment-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('status', type=str, help='')
        c.argument('access_package_assignments', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_role', type=validate_file_or_dict, help='accessPackageResourceRole '
                   'Expected value: json-string/@json-file.')
        c.argument('access_package_resource_scope', type=validate_file_or_dict, help='accessPackageResourceScope '
                   'Expected value: json-string/@json-file.')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Access Package Subject')
        c.argument('alt_sec_id', type=str, help='', arg_group='Access Package Subject')
        c.argument('connected_organization_id', type=str, help='', arg_group='Access Package Subject')
        c.argument('display_name', type=str, help='', arg_group='Access Package Subject')
        c.argument('email', type=str, help='', arg_group='Access Package Subject')
        c.argument('object_id', type=str, help='', arg_group='Access Package Subject')
        c.argument('on_premises_security_identifier', type=str, help='', arg_group='Access Package Subject')
        c.argument('principal_name', type=str, help='', arg_group='Access Package Subject')
        c.argument('type_', options_list=['--type'], type=str, help='', arg_group='Access Package Subject')
        c.argument('id1', type=str, help='Read-only.', arg_group='Access Package Subject Connected Organization')
        c.argument('created_by', type=str, help='', arg_group='Access Package Subject Connected Organization')
        c.argument('created_date_time', help='', arg_group='Access Package Subject Connected Organization')
        c.argument('description', type=str, help='', arg_group='Access Package Subject Connected Organization')
        c.argument('microsoft_graph_connected_organization_display_name', type=str, help='', arg_group='Access Package '
                   'Subject Connected Organization')
        c.argument('identity_sources', action=AddIdentitySources, nargs='+', help=' Expect value: KEY1=VALUE1 '
                   'KEY2=VALUE2 ...', arg_group='Access Package Subject Connected Organization')
        c.argument('modified_by', type=str, help='', arg_group='Access Package Subject Connected Organization')
        c.argument('modified_date_time', help='', arg_group='Access Package Subject Connected Organization')
        c.argument('state', arg_type=get_enum_type(['configured', 'proposed', 'unknownFutureValue']), help='',
                   arg_group='Access Package Subject Connected Organization')
        c.argument('external_sponsors', action=AddExternalSponsors, nargs='+', help='', arg_group='Access Package '
                   'Subject Connected Organization')
        c.argument('internal_sponsors', action=AddInternalSponsors, nargs='+', help='', arg_group='Access Package '
                   'Subject Connected Organization')

    with self.argument_context('identitygovernance identity-governance-entitlement-management update-access-package-catalog') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('catalog_status', type=str, help='')
        c.argument('catalog_type', type=str, help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_externally_visible', arg_type=get_three_state_flag(), help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resources', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_packages', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management update-access-package-resource') as c:
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management update-access-package-resource-request') as c:
        c.argument('access_package_resource_request_id', type=str, help='key: id of accessPackageResourceRequest')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('catalog_id', type=str, help='')
        c.argument('execute_immediately', arg_type=get_three_state_flag(), help='')
        c.argument('expiration_date_time', help='')
        c.argument('is_validation_only', arg_type=get_three_state_flag(), help='')
        c.argument('justification', type=str, help='')
        c.argument('request_state', type=str, help='')
        c.argument('request_status', type=str, help='')
        c.argument('request_type', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Requestor')
        c.argument('alt_sec_id', type=str, help='', arg_group='Requestor')
        c.argument('connected_organization_id', type=str, help='', arg_group='Requestor')
        c.argument('display_name', type=str, help='', arg_group='Requestor')
        c.argument('email', type=str, help='', arg_group='Requestor')
        c.argument('object_id', type=str, help='', arg_group='Requestor')
        c.argument('on_premises_security_identifier', type=str, help='', arg_group='Requestor')
        c.argument('principal_name', type=str, help='', arg_group='Requestor')
        c.argument('type_', options_list=['--type'], type=str, help='', arg_group='Requestor')
        c.argument('id1', type=str, help='Read-only.', arg_group='Requestor Connected Organization')
        c.argument('created_by', type=str, help='', arg_group='Requestor Connected Organization')
        c.argument('created_date_time', help='', arg_group='Requestor Connected Organization')
        c.argument('description', type=str, help='', arg_group='Requestor Connected Organization')
        c.argument('microsoft_graph_connected_organization_display_name', type=str, help='', arg_group='Requestor '
                   'Connected Organization')
        c.argument('identity_sources', action=AddIdentitySources, nargs='+', help=' Expect value: KEY1=VALUE1 '
                   'KEY2=VALUE2 ...', arg_group='Requestor Connected Organization')
        c.argument('modified_by', type=str, help='', arg_group='Requestor Connected Organization')
        c.argument('modified_date_time', help='', arg_group='Requestor Connected Organization')
        c.argument('state', arg_type=get_enum_type(['configured', 'proposed', 'unknownFutureValue']), help='',
                   arg_group='Requestor Connected Organization')
        c.argument('external_sponsors', action=AddExternalSponsors, nargs='+', help='', arg_group='Requestor Connected '
                   'Organization')
        c.argument('internal_sponsors', action=AddInternalSponsors, nargs='+', help='', arg_group='Requestor Connected '
                   'Organization')

    with self.argument_context('identitygovernance identity-governance-entitlement-management update-access-package-resource-role-scope') as c:
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_resource_role', type=validate_file_or_dict, help='accessPackageResourceRole '
                   'Expected value: json-string/@json-file.')
        c.argument('access_package_resource_scope', type=validate_file_or_dict, help='accessPackageResourceScope '
                   'Expected value: json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management update-connected-organization') as c:
        c.argument('connected_organization_id', type=str, help='key: id of connectedOrganization')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('identity_sources', action=AddIdentitySources, nargs='+', help=' Expect value: KEY1=VALUE1 '
                   'KEY2=VALUE2 ...')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('state', arg_type=get_enum_type(['configured', 'proposed', 'unknownFutureValue']), help='')
        c.argument('external_sponsors', action=AddExternalSponsors, nargs='+', help='')
        c.argument('internal_sponsors', action=AddInternalSponsors, nargs='+', help='')

    with self.argument_context('identitygovernance identity-governance-entitlement-management update-setting') as c:
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('days_until_external_user_deleted_after_blocked', type=int, help='')
        c.argument('external_user_lifecycle_action', type=str, help='')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy delete-access-package-catalog') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy delete-ref-access-package') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy set-ref-access-package') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('body', type=validate_file_or_dict, help='New navigation property ref values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy show-access-package') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy show-access-package-catalog') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy show-ref-access-package') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy update-access-package-catalog') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('catalog_status', type=str, help='')
        c.argument('catalog_type', type=str, help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_externally_visible', arg_type=get_three_state_flag(), help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resources', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_packages', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog create-access-package') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('catalog_id', type=str, help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_hidden', arg_type=get_three_state_flag(), help='')
        c.argument('is_role_scopes_visible', arg_type=get_three_state_flag(), help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_assignment_policies', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_catalog', type=validate_file_or_dict, help='accessPackageCatalog Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_role_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog create-access-package-resource') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog create-access-package-resource-role') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog delete-access-package') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog delete-access-package-resource') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog list-access-package') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog list-access-package-resource') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog list-access-package-resource-role') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog show-access-package') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog show-access-package-resource') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog show-access-package-resource-role') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog update-access-package') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('catalog_id', type=str, help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_hidden', arg_type=get_three_state_flag(), help='')
        c.argument('is_role_scopes_visible', arg_type=get_three_state_flag(), help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_assignment_policies', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_catalog', type=validate_file_or_dict, help='accessPackageCatalog Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_role_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog update-access-package-resource') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog update-access-package-resource-role') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package-resource-role delete-access-package-resource') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package-resource-role show-access-package-resource') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package-resource-role update-access-package-resource') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource create-access-package-resource-role') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_role_id1', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource list-access-package-resource-role') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource show-access-package-resource-role') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_role_id1', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource update-access-package-resource-role') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_role_id1', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource-access-package-resource-scope delete-access-package-resource') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource-access-package-resource-scope show-access-package-resource') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource-access-package-resource-scope update-access-package-resource') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package-resource create-access-package-resource-role') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package-resource create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package-resource delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package-resource delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package-resource list-access-package-resource-role') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package-resource list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package-resource show-access-package-resource-role') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package-resource show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package-resource update-access-package-resource-role') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package-resource update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package-resource-access-package-resource-role delete-access-package-resource') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package-resource-access-package-resource-role show-access-package-resource') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package-resource-access-package-resource-role update-access-package-resource') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package-resource-access-package-resource-scope delete-access-package-resource') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package-resource-access-package-resource-scope show-access-package-resource') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package-resource-access-package-resource-scope update-access-package-resource') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package-resource-scope delete-access-package-resource') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package-resource-scope show-access-package-resource') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package-resource-scope update-access-package-resource') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource create-access-package-resource-role') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_scope_id1', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource list-access-package-resource-role') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource show-access-package-resource-role') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_scope_id1', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource update-access-package-resource-role') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_scope_id1', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource-access-package-resource-role delete-access-package-resource') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource-access-package-resource-role show-access-package-resource') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource-access-package-resource-role update-access-package-resource') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package create-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('microsoft_graph_access_package_assignment_policy_access_package_id_access_package_id', type=str,
                   help='')
        c.argument('can_extend', arg_type=get_three_state_flag(), help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('duration_in_days', type=int, help='')
        c.argument('expiration_date_time', help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('questions', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('access_package', type=validate_file_or_dict, help='accessPackage Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_catalog', type=validate_file_or_dict, help='accessPackageCatalog Expected value: '
                   'json-string/@json-file.')
        c.argument('accept_requests', arg_type=get_three_state_flag(), help='', arg_group='Requestor Settings')
        c.argument('allowed_requestors', action=AddAllowedRequestors, nargs='+', help='', arg_group='Requestor '
                   'Settings')
        c.argument('scope_type', type=str, help='', arg_group='Requestor Settings')
        c.argument('approval_mode', type=str, help='', arg_group='Request Approval Settings')
        c.argument('approval_stages', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.',
                   arg_group='Request Approval Settings')
        c.argument('is_approval_required', arg_type=get_three_state_flag(), help='', arg_group='Request Approval '
                   'Settings')
        c.argument('is_approval_required_for_extension', arg_type=get_three_state_flag(), help='', arg_group='Request '
                   'Approval Settings')
        c.argument('is_requestor_justification_required', arg_type=get_three_state_flag(), help='', arg_group='Request '
                   'Approval Settings')
        c.argument('integer_duration_in_days', type=int, help='', arg_group='Access Review Settings')
        c.argument('is_enabled', arg_type=get_three_state_flag(), help='', arg_group='Access Review Settings')
        c.argument('recurrence_type', type=str, help='', arg_group='Access Review Settings')
        c.argument('reviewers', action=AddIdentitygovernanceEntitlementmanagementReviewers, nargs='+', help='',
                   arg_group='Access Review Settings')
        c.argument('reviewer_type', type=str, help='', arg_group='Access Review Settings')
        c.argument('start_date_time', help='', arg_group='Access Review Settings')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package create-access-package-resource-role-scope') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_resource_role', type=validate_file_or_dict, help='accessPackageResourceRole '
                   'Expected value: json-string/@json-file.')
        c.argument('access_package_resource_scope', type=validate_file_or_dict, help='accessPackageResourceScope '
                   'Expected value: json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package delete-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id1', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package delete-access-package-resource-role-scope') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package delete-ref-access-package-catalog') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package list-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package list-access-package-resource-role-scope') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package search') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package set-ref-access-package-catalog') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('body', type=validate_file_or_dict, help='New navigation property ref values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package show-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id1', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package show-access-package-catalog') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package show-access-package-resource-role-scope') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package show-ref-access-package-catalog') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package update-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id1', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('microsoft_graph_access_package_assignment_policy_access_package_id_access_package_id', type=str,
                   help='')
        c.argument('can_extend', arg_type=get_three_state_flag(), help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('duration_in_days', type=int, help='')
        c.argument('expiration_date_time', help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('questions', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('access_package', type=validate_file_or_dict, help='accessPackage Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_catalog', type=validate_file_or_dict, help='accessPackageCatalog Expected value: '
                   'json-string/@json-file.')
        c.argument('accept_requests', arg_type=get_three_state_flag(), help='', arg_group='Requestor Settings')
        c.argument('allowed_requestors', action=AddAllowedRequestors, nargs='+', help='', arg_group='Requestor '
                   'Settings')
        c.argument('scope_type', type=str, help='', arg_group='Requestor Settings')
        c.argument('approval_mode', type=str, help='', arg_group='Request Approval Settings')
        c.argument('approval_stages', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.',
                   arg_group='Request Approval Settings')
        c.argument('is_approval_required', arg_type=get_three_state_flag(), help='', arg_group='Request Approval '
                   'Settings')
        c.argument('is_approval_required_for_extension', arg_type=get_three_state_flag(), help='', arg_group='Request '
                   'Approval Settings')
        c.argument('is_requestor_justification_required', arg_type=get_three_state_flag(), help='', arg_group='Request '
                   'Approval Settings')
        c.argument('integer_duration_in_days', type=int, help='', arg_group='Access Review Settings')
        c.argument('is_enabled', arg_type=get_three_state_flag(), help='', arg_group='Access Review Settings')
        c.argument('recurrence_type', type=str, help='', arg_group='Access Review Settings')
        c.argument('reviewers', action=AddIdentitygovernanceEntitlementmanagementReviewers, nargs='+', help='',
                   arg_group='Access Review Settings')
        c.argument('reviewer_type', type=str, help='', arg_group='Access Review Settings')
        c.argument('start_date_time', help='', arg_group='Access Review Settings')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package update-access-package-resource-role-scope') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_resource_role', type=validate_file_or_dict, help='accessPackageResourceRole '
                   'Expected value: json-string/@json-file.')
        c.argument('access_package_resource_scope', type=validate_file_or_dict, help='accessPackageResourceScope '
                   'Expected value: json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope show-access-package-resource-role') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope update-access-package-resource-role') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-role delete-access-package-resource') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-role show-access-package-resource') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-role update-access-package-resource') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource create-access-package-resource-role') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource list-access-package-resource-role') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource show-access-package-resource-role') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource update-access-package-resource-role') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource-access-package-resource-scope delete-access-package-resource') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource-access-package-resource-scope show-access-package-resource') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource-access-package-resource-scope update-access-package-resource') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-scope delete-access-package-resource') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-scope show-access-package-resource') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-scope update-access-package-resource') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource create-access-package-resource-role') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource list-access-package-resource-role') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource show-access-package-resource-role') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource update-access-package-resource-role') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource-access-package-resource-role delete-access-package-resource') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource-access-package-resource-role show-access-package-resource') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource-access-package-resource-role update-access-package-resource') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request cancel') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request delete-access-package-assignment') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request delete-ref-access-package') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request delete-requestor') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request set-ref-access-package') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('body', type=validate_file_or_dict, help='New navigation property ref values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request show-access-package') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request show-access-package-assignment') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request show-ref-access-package') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request show-requestor') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request update-access-package-assignment') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('access_package_id', type=str, help='')
        c.argument('assignment_policy_id', type=str, help='')
        c.argument('assignment_state', type=str, help='')
        c.argument('assignment_status', type=str, help='')
        c.argument('catalog_id', type=str, help='')
        c.argument('expired_date_time', help='')
        c.argument('is_extended', arg_type=get_three_state_flag(), help='')
        c.argument('target_id', type=str, help='')
        c.argument('access_package', type=validate_file_or_dict, help='accessPackage Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_assignment_policy', type=validate_file_or_dict, help='accessPackageAssignmentPolicy '
                   'Expected value: json-string/@json-file.')
        c.argument('access_package_assignment_requests', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_assignment_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Target')
        c.argument('alt_sec_id', type=str, help='', arg_group='Target')
        c.argument('connected_organization_id', type=str, help='', arg_group='Target')
        c.argument('display_name', type=str, help='', arg_group='Target')
        c.argument('email', type=str, help='', arg_group='Target')
        c.argument('object_id', type=str, help='', arg_group='Target')
        c.argument('on_premises_security_identifier', type=str, help='', arg_group='Target')
        c.argument('principal_name', type=str, help='', arg_group='Target')
        c.argument('type_', options_list=['--type'], type=str, help='', arg_group='Target')
        c.argument('id1', type=str, help='Read-only.', arg_group='Target Connected Organization')
        c.argument('created_by', type=str, help='', arg_group='Target Connected Organization')
        c.argument('created_date_time', help='', arg_group='Target Connected Organization')
        c.argument('description', type=str, help='', arg_group='Target Connected Organization')
        c.argument('microsoft_graph_connected_organization_display_name', type=str, help='', arg_group='Target '
                   'Connected Organization')
        c.argument('identity_sources', action=AddIdentitySources, nargs='+', help=' Expect value: KEY1=VALUE1 '
                   'KEY2=VALUE2 ...', arg_group='Target Connected Organization')
        c.argument('modified_by', type=str, help='', arg_group='Target Connected Organization')
        c.argument('modified_date_time', help='', arg_group='Target Connected Organization')
        c.argument('state', arg_type=get_enum_type(['configured', 'proposed', 'unknownFutureValue']), help='',
                   arg_group='Target Connected Organization')
        c.argument('external_sponsors', action=AddExternalSponsors, nargs='+', help='', arg_group='Target Connected '
                   'Organization')
        c.argument('internal_sponsors', action=AddInternalSponsors, nargs='+', help='', arg_group='Target Connected '
                   'Organization')
        c.argument('expiration', action=AddExpiration, nargs='+', help='expirationPattern', arg_group='Schedule')
        c.argument('recurrence', type=validate_file_or_dict, help='patternedRecurrence Expected value: '
                   'json-string/@json-file.', arg_group='Schedule')
        c.argument('start_date_time', help='', arg_group='Schedule')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request update-requestor') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('alt_sec_id', type=str, help='')
        c.argument('connected_organization_id', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('email', type=str, help='')
        c.argument('object_id', type=str, help='')
        c.argument('on_premises_security_identifier', type=str, help='')
        c.argument('principal_name', type=str, help='')
        c.argument('type_', options_list=['--type'], type=str, help='')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Connected Organization')
        c.argument('created_by', type=str, help='', arg_group='Connected Organization')
        c.argument('created_date_time', help='', arg_group='Connected Organization')
        c.argument('description', type=str, help='', arg_group='Connected Organization')
        c.argument('microsoft_graph_connected_organization_display_name', type=str, help='', arg_group='Connected '
                   'Organization')
        c.argument('identity_sources', action=AddIdentitySources, nargs='+', help=' Expect value: KEY1=VALUE1 '
                   'KEY2=VALUE2 ...', arg_group='Connected Organization')
        c.argument('modified_by', type=str, help='', arg_group='Connected Organization')
        c.argument('modified_date_time', help='', arg_group='Connected Organization')
        c.argument('state', arg_type=get_enum_type(['configured', 'proposed', 'unknownFutureValue']), help='',
                   arg_group='Connected Organization')
        c.argument('external_sponsors', action=AddExternalSponsors, nargs='+', help='', arg_group='Connected '
                   'Organization')
        c.argument('internal_sponsors', action=AddInternalSponsors, nargs='+', help='', arg_group='Connected '
                   'Organization')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment create-access-package-assignment-request') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('answers', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('completed_date', help='')
        c.argument('created_date_time', help='')
        c.argument('expiration_date_time', help='')
        c.argument('is_validation_only', arg_type=get_three_state_flag(), help='')
        c.argument('justification', type=str, help='')
        c.argument('request_state', type=str, help='')
        c.argument('request_status', type=str, help='')
        c.argument('request_type', type=str, help='')
        c.argument('access_package', type=validate_file_or_dict, help='accessPackage Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_assignment', type=validate_file_or_dict, help='accessPackageAssignment Expected '
                   'value: json-string/@json-file.')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Requestor')
        c.argument('alt_sec_id', type=str, help='', arg_group='Requestor')
        c.argument('connected_organization_id', type=str, help='', arg_group='Requestor')
        c.argument('display_name', type=str, help='', arg_group='Requestor')
        c.argument('email', type=str, help='', arg_group='Requestor')
        c.argument('object_id', type=str, help='', arg_group='Requestor')
        c.argument('on_premises_security_identifier', type=str, help='', arg_group='Requestor')
        c.argument('principal_name', type=str, help='', arg_group='Requestor')
        c.argument('type_', options_list=['--type'], type=str, help='', arg_group='Requestor')
        c.argument('id1', type=str, help='Read-only.', arg_group='Requestor Connected Organization')
        c.argument('created_by', type=str, help='', arg_group='Requestor Connected Organization')
        c.argument('microsoft_graph_connected_organization_created_date_time_created_date_time', help='',
                   arg_group='Requestor Connected Organization')
        c.argument('description', type=str, help='', arg_group='Requestor Connected Organization')
        c.argument('microsoft_graph_connected_organization_display_name', type=str, help='', arg_group='Requestor '
                   'Connected Organization')
        c.argument('identity_sources', action=AddIdentitySources, nargs='+', help=' Expect value: KEY1=VALUE1 '
                   'KEY2=VALUE2 ...', arg_group='Requestor Connected Organization')
        c.argument('modified_by', type=str, help='', arg_group='Requestor Connected Organization')
        c.argument('modified_date_time', help='', arg_group='Requestor Connected Organization')
        c.argument('state', arg_type=get_enum_type(['configured', 'proposed', 'unknownFutureValue']), help='',
                   arg_group='Requestor Connected Organization')
        c.argument('external_sponsors', action=AddExternalSponsors, nargs='+', help='', arg_group='Requestor Connected '
                   'Organization')
        c.argument('internal_sponsors', action=AddInternalSponsors, nargs='+', help='', arg_group='Requestor Connected '
                   'Organization')
        c.argument('expiration', action=AddExpiration, nargs='+', help='expirationPattern', arg_group='Schedule')
        c.argument('recurrence', type=validate_file_or_dict, help='patternedRecurrence Expected value: '
                   'json-string/@json-file.', arg_group='Schedule')
        c.argument('start_date_time', help='', arg_group='Schedule')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment create-access-package-assignment-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('status', type=str, help='')
        c.argument('access_package_assignments', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_role', type=validate_file_or_dict, help='accessPackageResourceRole '
                   'Expected value: json-string/@json-file.')
        c.argument('access_package_resource_scope', type=validate_file_or_dict, help='accessPackageResourceScope '
                   'Expected value: json-string/@json-file.')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Access Package Subject')
        c.argument('alt_sec_id', type=str, help='', arg_group='Access Package Subject')
        c.argument('connected_organization_id', type=str, help='', arg_group='Access Package Subject')
        c.argument('display_name', type=str, help='', arg_group='Access Package Subject')
        c.argument('email', type=str, help='', arg_group='Access Package Subject')
        c.argument('object_id', type=str, help='', arg_group='Access Package Subject')
        c.argument('on_premises_security_identifier', type=str, help='', arg_group='Access Package Subject')
        c.argument('principal_name', type=str, help='', arg_group='Access Package Subject')
        c.argument('type_', options_list=['--type'], type=str, help='', arg_group='Access Package Subject')
        c.argument('id1', type=str, help='Read-only.', arg_group='Access Package Subject Connected Organization')
        c.argument('created_by', type=str, help='', arg_group='Access Package Subject Connected Organization')
        c.argument('created_date_time', help='', arg_group='Access Package Subject Connected Organization')
        c.argument('description', type=str, help='', arg_group='Access Package Subject Connected Organization')
        c.argument('microsoft_graph_connected_organization_display_name', type=str, help='', arg_group='Access Package '
                   'Subject Connected Organization')
        c.argument('identity_sources', action=AddIdentitySources, nargs='+', help=' Expect value: KEY1=VALUE1 '
                   'KEY2=VALUE2 ...', arg_group='Access Package Subject Connected Organization')
        c.argument('modified_by', type=str, help='', arg_group='Access Package Subject Connected Organization')
        c.argument('modified_date_time', help='', arg_group='Access Package Subject Connected Organization')
        c.argument('state', arg_type=get_enum_type(['configured', 'proposed', 'unknownFutureValue']), help='',
                   arg_group='Access Package Subject Connected Organization')
        c.argument('external_sponsors', action=AddExternalSponsors, nargs='+', help='', arg_group='Access Package '
                   'Subject Connected Organization')
        c.argument('internal_sponsors', action=AddInternalSponsors, nargs='+', help='', arg_group='Access Package '
                   'Subject Connected Organization')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment delete-access-package') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment delete-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment delete-access-package-assignment-request') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_request_id1', type=str,
                   help='key: id of accessPackageAssignmentRequest')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment delete-access-package-assignment-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment delete-target') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment list-access-package-assignment-request') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment list-access-package-assignment-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment show-access-package') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment show-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment show-access-package-assignment-request') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_request_id1', type=str,
                   help='key: id of accessPackageAssignmentRequest')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment show-access-package-assignment-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment show-target') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment update-access-package') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('catalog_id', type=str, help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_hidden', arg_type=get_three_state_flag(), help='')
        c.argument('is_role_scopes_visible', arg_type=get_three_state_flag(), help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_assignment_policies', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_catalog', type=validate_file_or_dict, help='accessPackageCatalog Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_role_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment update-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('access_package_id', type=str, help='')
        c.argument('can_extend', arg_type=get_three_state_flag(), help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('duration_in_days', type=int, help='')
        c.argument('expiration_date_time', help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('questions', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('access_package', type=validate_file_or_dict, help='accessPackage Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_catalog', type=validate_file_or_dict, help='accessPackageCatalog Expected value: '
                   'json-string/@json-file.')
        c.argument('accept_requests', arg_type=get_three_state_flag(), help='', arg_group='Requestor Settings')
        c.argument('allowed_requestors', action=AddAllowedRequestors, nargs='+', help='', arg_group='Requestor '
                   'Settings')
        c.argument('scope_type', type=str, help='', arg_group='Requestor Settings')
        c.argument('approval_mode', type=str, help='', arg_group='Request Approval Settings')
        c.argument('approval_stages', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.',
                   arg_group='Request Approval Settings')
        c.argument('is_approval_required', arg_type=get_three_state_flag(), help='', arg_group='Request Approval '
                   'Settings')
        c.argument('is_approval_required_for_extension', arg_type=get_three_state_flag(), help='', arg_group='Request '
                   'Approval Settings')
        c.argument('is_requestor_justification_required', arg_type=get_three_state_flag(), help='', arg_group='Request '
                   'Approval Settings')
        c.argument('integer_duration_in_days', type=int, help='', arg_group='Access Review Settings')
        c.argument('is_enabled', arg_type=get_three_state_flag(), help='', arg_group='Access Review Settings')
        c.argument('recurrence_type', type=str, help='', arg_group='Access Review Settings')
        c.argument('reviewers', action=AddIdentitygovernanceEntitlementmanagementReviewers, nargs='+', help='',
                   arg_group='Access Review Settings')
        c.argument('reviewer_type', type=str, help='', arg_group='Access Review Settings')
        c.argument('start_date_time', help='', arg_group='Access Review Settings')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment update-access-package-assignment-request') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_request_id1', type=str,
                   help='key: id of accessPackageAssignmentRequest')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('answers', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('completed_date', help='')
        c.argument('created_date_time', help='')
        c.argument('expiration_date_time', help='')
        c.argument('is_validation_only', arg_type=get_three_state_flag(), help='')
        c.argument('justification', type=str, help='')
        c.argument('request_state', type=str, help='')
        c.argument('request_status', type=str, help='')
        c.argument('request_type', type=str, help='')
        c.argument('access_package', type=validate_file_or_dict, help='accessPackage Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_assignment', type=validate_file_or_dict, help='accessPackageAssignment Expected '
                   'value: json-string/@json-file.')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Requestor')
        c.argument('alt_sec_id', type=str, help='', arg_group='Requestor')
        c.argument('connected_organization_id', type=str, help='', arg_group='Requestor')
        c.argument('display_name', type=str, help='', arg_group='Requestor')
        c.argument('email', type=str, help='', arg_group='Requestor')
        c.argument('object_id', type=str, help='', arg_group='Requestor')
        c.argument('on_premises_security_identifier', type=str, help='', arg_group='Requestor')
        c.argument('principal_name', type=str, help='', arg_group='Requestor')
        c.argument('type_', options_list=['--type'], type=str, help='', arg_group='Requestor')
        c.argument('id1', type=str, help='Read-only.', arg_group='Requestor Connected Organization')
        c.argument('created_by', type=str, help='', arg_group='Requestor Connected Organization')
        c.argument('microsoft_graph_connected_organization_created_date_time_created_date_time', help='',
                   arg_group='Requestor Connected Organization')
        c.argument('description', type=str, help='', arg_group='Requestor Connected Organization')
        c.argument('microsoft_graph_connected_organization_display_name', type=str, help='', arg_group='Requestor '
                   'Connected Organization')
        c.argument('identity_sources', action=AddIdentitySources, nargs='+', help=' Expect value: KEY1=VALUE1 '
                   'KEY2=VALUE2 ...', arg_group='Requestor Connected Organization')
        c.argument('modified_by', type=str, help='', arg_group='Requestor Connected Organization')
        c.argument('modified_date_time', help='', arg_group='Requestor Connected Organization')
        c.argument('state', arg_type=get_enum_type(['configured', 'proposed', 'unknownFutureValue']), help='',
                   arg_group='Requestor Connected Organization')
        c.argument('external_sponsors', action=AddExternalSponsors, nargs='+', help='', arg_group='Requestor Connected '
                   'Organization')
        c.argument('internal_sponsors', action=AddInternalSponsors, nargs='+', help='', arg_group='Requestor Connected '
                   'Organization')
        c.argument('expiration', action=AddExpiration, nargs='+', help='expirationPattern', arg_group='Schedule')
        c.argument('recurrence', type=validate_file_or_dict, help='patternedRecurrence Expected value: '
                   'json-string/@json-file.', arg_group='Schedule')
        c.argument('start_date_time', help='', arg_group='Schedule')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment update-access-package-assignment-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('status', type=str, help='')
        c.argument('access_package_assignments', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_role', type=validate_file_or_dict, help='accessPackageResourceRole '
                   'Expected value: json-string/@json-file.')
        c.argument('access_package_resource_scope', type=validate_file_or_dict, help='accessPackageResourceScope '
                   'Expected value: json-string/@json-file.')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Access Package Subject')
        c.argument('alt_sec_id', type=str, help='', arg_group='Access Package Subject')
        c.argument('connected_organization_id', type=str, help='', arg_group='Access Package Subject')
        c.argument('display_name', type=str, help='', arg_group='Access Package Subject')
        c.argument('email', type=str, help='', arg_group='Access Package Subject')
        c.argument('object_id', type=str, help='', arg_group='Access Package Subject')
        c.argument('on_premises_security_identifier', type=str, help='', arg_group='Access Package Subject')
        c.argument('principal_name', type=str, help='', arg_group='Access Package Subject')
        c.argument('type_', options_list=['--type'], type=str, help='', arg_group='Access Package Subject')
        c.argument('id1', type=str, help='Read-only.', arg_group='Access Package Subject Connected Organization')
        c.argument('created_by', type=str, help='', arg_group='Access Package Subject Connected Organization')
        c.argument('created_date_time', help='', arg_group='Access Package Subject Connected Organization')
        c.argument('description', type=str, help='', arg_group='Access Package Subject Connected Organization')
        c.argument('microsoft_graph_connected_organization_display_name', type=str, help='', arg_group='Access Package '
                   'Subject Connected Organization')
        c.argument('identity_sources', action=AddIdentitySources, nargs='+', help=' Expect value: KEY1=VALUE1 '
                   'KEY2=VALUE2 ...', arg_group='Access Package Subject Connected Organization')
        c.argument('modified_by', type=str, help='', arg_group='Access Package Subject Connected Organization')
        c.argument('modified_date_time', help='', arg_group='Access Package Subject Connected Organization')
        c.argument('state', arg_type=get_enum_type(['configured', 'proposed', 'unknownFutureValue']), help='',
                   arg_group='Access Package Subject Connected Organization')
        c.argument('external_sponsors', action=AddExternalSponsors, nargs='+', help='', arg_group='Access Package '
                   'Subject Connected Organization')
        c.argument('internal_sponsors', action=AddInternalSponsors, nargs='+', help='', arg_group='Access Package '
                   'Subject Connected Organization')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment update-target') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('alt_sec_id', type=str, help='')
        c.argument('connected_organization_id', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('email', type=str, help='')
        c.argument('object_id', type=str, help='')
        c.argument('on_premises_security_identifier', type=str, help='')
        c.argument('principal_name', type=str, help='')
        c.argument('type_', options_list=['--type'], type=str, help='')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Connected Organization')
        c.argument('created_by', type=str, help='', arg_group='Connected Organization')
        c.argument('created_date_time', help='', arg_group='Connected Organization')
        c.argument('description', type=str, help='', arg_group='Connected Organization')
        c.argument('microsoft_graph_connected_organization_display_name', type=str, help='', arg_group='Connected '
                   'Organization')
        c.argument('identity_sources', action=AddIdentitySources, nargs='+', help=' Expect value: KEY1=VALUE1 '
                   'KEY2=VALUE2 ...', arg_group='Connected Organization')
        c.argument('modified_by', type=str, help='', arg_group='Connected Organization')
        c.argument('modified_date_time', help='', arg_group='Connected Organization')
        c.argument('state', arg_type=get_enum_type(['configured', 'proposed', 'unknownFutureValue']), help='',
                   arg_group='Connected Organization')
        c.argument('external_sponsors', action=AddExternalSponsors, nargs='+', help='', arg_group='Connected '
                   'Organization')
        c.argument('internal_sponsors', action=AddInternalSponsors, nargs='+', help='', arg_group='Connected '
                   'Organization')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package create-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('access_package_id', type=str, help='')
        c.argument('can_extend', arg_type=get_three_state_flag(), help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('duration_in_days', type=int, help='')
        c.argument('expiration_date_time', help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('questions', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('access_package', type=validate_file_or_dict, help='accessPackage Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_catalog', type=validate_file_or_dict, help='accessPackageCatalog Expected value: '
                   'json-string/@json-file.')
        c.argument('accept_requests', arg_type=get_three_state_flag(), help='', arg_group='Requestor Settings')
        c.argument('allowed_requestors', action=AddAllowedRequestors, nargs='+', help='', arg_group='Requestor '
                   'Settings')
        c.argument('scope_type', type=str, help='', arg_group='Requestor Settings')
        c.argument('approval_mode', type=str, help='', arg_group='Request Approval Settings')
        c.argument('approval_stages', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.',
                   arg_group='Request Approval Settings')
        c.argument('is_approval_required', arg_type=get_three_state_flag(), help='', arg_group='Request Approval '
                   'Settings')
        c.argument('is_approval_required_for_extension', arg_type=get_three_state_flag(), help='', arg_group='Request '
                   'Approval Settings')
        c.argument('is_requestor_justification_required', arg_type=get_three_state_flag(), help='', arg_group='Request '
                   'Approval Settings')
        c.argument('integer_duration_in_days', type=int, help='', arg_group='Access Review Settings')
        c.argument('is_enabled', arg_type=get_three_state_flag(), help='', arg_group='Access Review Settings')
        c.argument('recurrence_type', type=str, help='', arg_group='Access Review Settings')
        c.argument('reviewers', action=AddIdentitygovernanceEntitlementmanagementReviewers, nargs='+', help='',
                   arg_group='Access Review Settings')
        c.argument('reviewer_type', type=str, help='', arg_group='Access Review Settings')
        c.argument('start_date_time', help='', arg_group='Access Review Settings')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package create-access-package-resource-role-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_resource_role', type=validate_file_or_dict, help='accessPackageResourceRole '
                   'Expected value: json-string/@json-file.')
        c.argument('access_package_resource_scope', type=validate_file_or_dict, help='accessPackageResourceScope '
                   'Expected value: json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package delete-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package delete-access-package-resource-role-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package delete-ref-access-package-catalog') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package list-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package list-access-package-resource-role-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package set-ref-access-package-catalog') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('body', type=validate_file_or_dict, help='New navigation property ref values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package show-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package show-access-package-catalog') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package show-access-package-resource-role-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package show-ref-access-package-catalog') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package update-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('access_package_id', type=str, help='')
        c.argument('can_extend', arg_type=get_three_state_flag(), help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('duration_in_days', type=int, help='')
        c.argument('expiration_date_time', help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('questions', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('access_package', type=validate_file_or_dict, help='accessPackage Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_catalog', type=validate_file_or_dict, help='accessPackageCatalog Expected value: '
                   'json-string/@json-file.')
        c.argument('accept_requests', arg_type=get_three_state_flag(), help='', arg_group='Requestor Settings')
        c.argument('allowed_requestors', action=AddAllowedRequestors, nargs='+', help='', arg_group='Requestor '
                   'Settings')
        c.argument('scope_type', type=str, help='', arg_group='Requestor Settings')
        c.argument('approval_mode', type=str, help='', arg_group='Request Approval Settings')
        c.argument('approval_stages', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.',
                   arg_group='Request Approval Settings')
        c.argument('is_approval_required', arg_type=get_three_state_flag(), help='', arg_group='Request Approval '
                   'Settings')
        c.argument('is_approval_required_for_extension', arg_type=get_three_state_flag(), help='', arg_group='Request '
                   'Approval Settings')
        c.argument('is_requestor_justification_required', arg_type=get_three_state_flag(), help='', arg_group='Request '
                   'Approval Settings')
        c.argument('integer_duration_in_days', type=int, help='', arg_group='Access Review Settings')
        c.argument('is_enabled', arg_type=get_three_state_flag(), help='', arg_group='Access Review Settings')
        c.argument('recurrence_type', type=str, help='', arg_group='Access Review Settings')
        c.argument('reviewers', action=AddIdentitygovernanceEntitlementmanagementReviewers, nargs='+', help='',
                   arg_group='Access Review Settings')
        c.argument('reviewer_type', type=str, help='', arg_group='Access Review Settings')
        c.argument('start_date_time', help='', arg_group='Access Review Settings')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package update-access-package-resource-role-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_resource_role', type=validate_file_or_dict, help='accessPackageResourceRole '
                   'Expected value: json-string/@json-file.')
        c.argument('access_package_resource_scope', type=validate_file_or_dict, help='accessPackageResourceScope '
                   'Expected value: json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-assignment-policy delete-access-package-catalog') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-assignment-policy delete-ref-access-package') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-assignment-policy set-ref-access-package') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('body', type=validate_file_or_dict, help='New navigation property ref values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-assignment-policy show-access-package') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-assignment-policy show-access-package-catalog') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-assignment-policy show-ref-access-package') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-assignment-policy update-access-package-catalog') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('catalog_status', type=str, help='')
        c.argument('catalog_type', type=str, help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_externally_visible', arg_type=get_three_state_flag(), help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resources', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_packages', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog create-access-package') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('catalog_id', type=str, help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_hidden', arg_type=get_three_state_flag(), help='')
        c.argument('is_role_scopes_visible', arg_type=get_three_state_flag(), help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_assignment_policies', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_catalog', type=validate_file_or_dict, help='accessPackageCatalog Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_role_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog create-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog create-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog delete-access-package') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog delete-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog list-access-package') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog list-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog list-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog show-access-package') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog show-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog show-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog update-access-package') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('catalog_id', type=str, help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_hidden', arg_type=get_three_state_flag(), help='')
        c.argument('is_role_scopes_visible', arg_type=get_three_state_flag(), help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_assignment_policies', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_catalog', type=validate_file_or_dict, help='accessPackageCatalog Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_role_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog update-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog update-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-role delete-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-role show-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-role update-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource create-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_role_id1', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource list-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource show-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_role_id1', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource update-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_role_id1', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource-access-package-resource-scope delete-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource-access-package-resource-scope show-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource-access-package-resource-scope update-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource create-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource list-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource show-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource update-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-access-package-resource-role delete-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-access-package-resource-role show-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-access-package-resource-role update-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-access-package-resource-scope delete-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-access-package-resource-scope show-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-access-package-resource-scope update-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-scope delete-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-scope show-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-scope update-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource create-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_scope_id1', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource list-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource show-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_scope_id1', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource update-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_scope_id1', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource-access-package-resource-role delete-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource-access-package-resource-role show-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource-access-package-resource-role update-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package search') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-resource-role-scope delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-resource-role-scope delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-resource-role-scope show-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-resource-role-scope show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-resource-role-scope update-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-resource-role-scope update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-role delete-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-role show-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-role update-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource create-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource list-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource show-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource update-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource-access-package-resource-scope delete-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource-access-package-resource-scope show-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource-access-package-resource-scope update-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-scope delete-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-scope show-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-scope update-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource create-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource list-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource show-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource update-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource-access-package-resource-role delete-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource-access-package-resource-role show-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource-access-package-resource-role update-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy delete-access-package-catalog') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy delete-ref-access-package') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy set-ref-access-package') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('body', type=validate_file_or_dict, help='New navigation property ref values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy show-access-package') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy show-access-package-catalog') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy show-ref-access-package') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy update-access-package-catalog') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('catalog_status', type=str, help='')
        c.argument('catalog_type', type=str, help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_externally_visible', arg_type=get_three_state_flag(), help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resources', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_packages', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog create-access-package') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('catalog_id', type=str, help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_hidden', arg_type=get_three_state_flag(), help='')
        c.argument('is_role_scopes_visible', arg_type=get_three_state_flag(), help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_assignment_policies', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_catalog', type=validate_file_or_dict, help='accessPackageCatalog Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_role_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog create-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog create-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog delete-access-package') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog delete-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog list-access-package') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog list-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog list-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog show-access-package') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog show-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog show-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog update-access-package') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('catalog_id', type=str, help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_hidden', arg_type=get_three_state_flag(), help='')
        c.argument('is_role_scopes_visible', arg_type=get_three_state_flag(), help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_assignment_policies', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_catalog', type=validate_file_or_dict, help='accessPackageCatalog Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_role_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog update-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog update-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-role delete-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-role show-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-role update-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource create-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_role_id1', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource list-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource show-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_role_id1', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource update-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_role_id1', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource-access-package-resource-scope delete-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource-access-package-resource-scope show-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource-access-package-resource-scope update-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource create-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource list-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource show-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource update-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-access-package-resource-role delete-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-access-package-resource-role show-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-access-package-resource-role update-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-access-package-resource-scope delete-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-access-package-resource-scope show-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-access-package-resource-scope update-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-scope delete-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-scope show-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-scope update-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource create-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_scope_id1', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource list-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource show-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_scope_id1', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource update-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_scope_id1', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource-access-package-resource-role delete-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource-access-package-resource-role show-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource-access-package-resource-role update-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package create-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('microsoft_graph_access_package_assignment_policy_access_package_id_access_package_id', type=str,
                   help='')
        c.argument('can_extend', arg_type=get_three_state_flag(), help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('duration_in_days', type=int, help='')
        c.argument('expiration_date_time', help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('questions', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('access_package', type=validate_file_or_dict, help='accessPackage Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_catalog', type=validate_file_or_dict, help='accessPackageCatalog Expected value: '
                   'json-string/@json-file.')
        c.argument('accept_requests', arg_type=get_three_state_flag(), help='', arg_group='Requestor Settings')
        c.argument('allowed_requestors', action=AddAllowedRequestors, nargs='+', help='', arg_group='Requestor '
                   'Settings')
        c.argument('scope_type', type=str, help='', arg_group='Requestor Settings')
        c.argument('approval_mode', type=str, help='', arg_group='Request Approval Settings')
        c.argument('approval_stages', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.',
                   arg_group='Request Approval Settings')
        c.argument('is_approval_required', arg_type=get_three_state_flag(), help='', arg_group='Request Approval '
                   'Settings')
        c.argument('is_approval_required_for_extension', arg_type=get_three_state_flag(), help='', arg_group='Request '
                   'Approval Settings')
        c.argument('is_requestor_justification_required', arg_type=get_three_state_flag(), help='', arg_group='Request '
                   'Approval Settings')
        c.argument('integer_duration_in_days', type=int, help='', arg_group='Access Review Settings')
        c.argument('is_enabled', arg_type=get_three_state_flag(), help='', arg_group='Access Review Settings')
        c.argument('recurrence_type', type=str, help='', arg_group='Access Review Settings')
        c.argument('reviewers', action=AddIdentitygovernanceEntitlementmanagementReviewers, nargs='+', help='',
                   arg_group='Access Review Settings')
        c.argument('reviewer_type', type=str, help='', arg_group='Access Review Settings')
        c.argument('start_date_time', help='', arg_group='Access Review Settings')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package create-access-package-resource-role-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_resource_role', type=validate_file_or_dict, help='accessPackageResourceRole '
                   'Expected value: json-string/@json-file.')
        c.argument('access_package_resource_scope', type=validate_file_or_dict, help='accessPackageResourceScope '
                   'Expected value: json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package delete-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package delete-access-package-resource-role-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package delete-ref-access-package-catalog') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package list-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package list-access-package-resource-role-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package search') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package set-ref-access-package-catalog') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('body', type=validate_file_or_dict, help='New navigation property ref values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package show-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package show-access-package-catalog') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package show-access-package-resource-role-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package show-ref-access-package-catalog') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package update-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('microsoft_graph_access_package_assignment_policy_access_package_id_access_package_id', type=str,
                   help='')
        c.argument('can_extend', arg_type=get_three_state_flag(), help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('duration_in_days', type=int, help='')
        c.argument('expiration_date_time', help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('questions', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('access_package', type=validate_file_or_dict, help='accessPackage Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_catalog', type=validate_file_or_dict, help='accessPackageCatalog Expected value: '
                   'json-string/@json-file.')
        c.argument('accept_requests', arg_type=get_three_state_flag(), help='', arg_group='Requestor Settings')
        c.argument('allowed_requestors', action=AddAllowedRequestors, nargs='+', help='', arg_group='Requestor '
                   'Settings')
        c.argument('scope_type', type=str, help='', arg_group='Requestor Settings')
        c.argument('approval_mode', type=str, help='', arg_group='Request Approval Settings')
        c.argument('approval_stages', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.',
                   arg_group='Request Approval Settings')
        c.argument('is_approval_required', arg_type=get_three_state_flag(), help='', arg_group='Request Approval '
                   'Settings')
        c.argument('is_approval_required_for_extension', arg_type=get_three_state_flag(), help='', arg_group='Request '
                   'Approval Settings')
        c.argument('is_requestor_justification_required', arg_type=get_three_state_flag(), help='', arg_group='Request '
                   'Approval Settings')
        c.argument('integer_duration_in_days', type=int, help='', arg_group='Access Review Settings')
        c.argument('is_enabled', arg_type=get_three_state_flag(), help='', arg_group='Access Review Settings')
        c.argument('recurrence_type', type=str, help='', arg_group='Access Review Settings')
        c.argument('reviewers', action=AddIdentitygovernanceEntitlementmanagementReviewers, nargs='+', help='',
                   arg_group='Access Review Settings')
        c.argument('reviewer_type', type=str, help='', arg_group='Access Review Settings')
        c.argument('start_date_time', help='', arg_group='Access Review Settings')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package update-access-package-resource-role-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_resource_role', type=validate_file_or_dict, help='accessPackageResourceRole '
                   'Expected value: json-string/@json-file.')
        c.argument('access_package_resource_scope', type=validate_file_or_dict, help='accessPackageResourceScope '
                   'Expected value: json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope show-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope update-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-role delete-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-role show-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-role update-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource create-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource list-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource show-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource update-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource-access-package-resource-scope delete-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource-access-package-resource-scope show-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource-access-package-resource-scope update-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-scope delete-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-scope show-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-scope update-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource create-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource list-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource show-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource update-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource-access-package-resource-role delete-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource-access-package-resource-role show-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource-access-package-resource-role update-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-request cancel') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_request_id1', type=str,
                   help='key: id of accessPackageAssignmentRequest')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-request my') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-resource-role create-access-package-assignment') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('access_package_id', type=str, help='')
        c.argument('assignment_policy_id', type=str, help='')
        c.argument('assignment_state', type=str, help='')
        c.argument('assignment_status', type=str, help='')
        c.argument('catalog_id', type=str, help='')
        c.argument('expired_date_time', help='')
        c.argument('is_extended', arg_type=get_three_state_flag(), help='')
        c.argument('target_id', type=str, help='')
        c.argument('access_package', type=validate_file_or_dict, help='accessPackage Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_assignment_policy', type=validate_file_or_dict, help='accessPackageAssignmentPolicy '
                   'Expected value: json-string/@json-file.')
        c.argument('access_package_assignment_requests', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_assignment_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Target')
        c.argument('alt_sec_id', type=str, help='', arg_group='Target')
        c.argument('connected_organization_id', type=str, help='', arg_group='Target')
        c.argument('display_name', type=str, help='', arg_group='Target')
        c.argument('email', type=str, help='', arg_group='Target')
        c.argument('object_id', type=str, help='', arg_group='Target')
        c.argument('on_premises_security_identifier', type=str, help='', arg_group='Target')
        c.argument('principal_name', type=str, help='', arg_group='Target')
        c.argument('type_', options_list=['--type'], type=str, help='', arg_group='Target')
        c.argument('id1', type=str, help='Read-only.', arg_group='Target Connected Organization')
        c.argument('created_by', type=str, help='', arg_group='Target Connected Organization')
        c.argument('created_date_time', help='', arg_group='Target Connected Organization')
        c.argument('description', type=str, help='', arg_group='Target Connected Organization')
        c.argument('microsoft_graph_connected_organization_display_name', type=str, help='', arg_group='Target '
                   'Connected Organization')
        c.argument('identity_sources', action=AddIdentitySources, nargs='+', help=' Expect value: KEY1=VALUE1 '
                   'KEY2=VALUE2 ...', arg_group='Target Connected Organization')
        c.argument('modified_by', type=str, help='', arg_group='Target Connected Organization')
        c.argument('modified_date_time', help='', arg_group='Target Connected Organization')
        c.argument('state', arg_type=get_enum_type(['configured', 'proposed', 'unknownFutureValue']), help='',
                   arg_group='Target Connected Organization')
        c.argument('external_sponsors', action=AddExternalSponsors, nargs='+', help='', arg_group='Target Connected '
                   'Organization')
        c.argument('internal_sponsors', action=AddInternalSponsors, nargs='+', help='', arg_group='Target Connected '
                   'Organization')
        c.argument('expiration', action=AddExpiration, nargs='+', help='expirationPattern', arg_group='Schedule')
        c.argument('recurrence', type=validate_file_or_dict, help='patternedRecurrence Expected value: '
                   'json-string/@json-file.', arg_group='Schedule')
        c.argument('start_date_time', help='', arg_group='Schedule')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-resource-role delete-access-package-assignment') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-resource-role delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-resource-role delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-resource-role delete-access-package-subject') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-resource-role list-access-package-assignment') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-resource-role my') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-resource-role show-access-package-assignment') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-resource-role show-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-resource-role show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-resource-role show-access-package-subject') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-resource-role update-access-package-assignment') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('access_package_id', type=str, help='')
        c.argument('assignment_policy_id', type=str, help='')
        c.argument('assignment_state', type=str, help='')
        c.argument('assignment_status', type=str, help='')
        c.argument('catalog_id', type=str, help='')
        c.argument('expired_date_time', help='')
        c.argument('is_extended', arg_type=get_three_state_flag(), help='')
        c.argument('target_id', type=str, help='')
        c.argument('access_package', type=validate_file_or_dict, help='accessPackage Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_assignment_policy', type=validate_file_or_dict, help='accessPackageAssignmentPolicy '
                   'Expected value: json-string/@json-file.')
        c.argument('access_package_assignment_requests', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_assignment_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Target')
        c.argument('alt_sec_id', type=str, help='', arg_group='Target')
        c.argument('connected_organization_id', type=str, help='', arg_group='Target')
        c.argument('display_name', type=str, help='', arg_group='Target')
        c.argument('email', type=str, help='', arg_group='Target')
        c.argument('object_id', type=str, help='', arg_group='Target')
        c.argument('on_premises_security_identifier', type=str, help='', arg_group='Target')
        c.argument('principal_name', type=str, help='', arg_group='Target')
        c.argument('type_', options_list=['--type'], type=str, help='', arg_group='Target')
        c.argument('id1', type=str, help='Read-only.', arg_group='Target Connected Organization')
        c.argument('created_by', type=str, help='', arg_group='Target Connected Organization')
        c.argument('created_date_time', help='', arg_group='Target Connected Organization')
        c.argument('description', type=str, help='', arg_group='Target Connected Organization')
        c.argument('microsoft_graph_connected_organization_display_name', type=str, help='', arg_group='Target '
                   'Connected Organization')
        c.argument('identity_sources', action=AddIdentitySources, nargs='+', help=' Expect value: KEY1=VALUE1 '
                   'KEY2=VALUE2 ...', arg_group='Target Connected Organization')
        c.argument('modified_by', type=str, help='', arg_group='Target Connected Organization')
        c.argument('modified_date_time', help='', arg_group='Target Connected Organization')
        c.argument('state', arg_type=get_enum_type(['configured', 'proposed', 'unknownFutureValue']), help='',
                   arg_group='Target Connected Organization')
        c.argument('external_sponsors', action=AddExternalSponsors, nargs='+', help='', arg_group='Target Connected '
                   'Organization')
        c.argument('internal_sponsors', action=AddInternalSponsors, nargs='+', help='', arg_group='Target Connected '
                   'Organization')
        c.argument('expiration', action=AddExpiration, nargs='+', help='expirationPattern', arg_group='Schedule')
        c.argument('recurrence', type=validate_file_or_dict, help='patternedRecurrence Expected value: '
                   'json-string/@json-file.', arg_group='Schedule')
        c.argument('start_date_time', help='', arg_group='Schedule')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-resource-role update-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-resource-role update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-resource-role update-access-package-subject') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('alt_sec_id', type=str, help='')
        c.argument('connected_organization_id', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('email', type=str, help='')
        c.argument('object_id', type=str, help='')
        c.argument('on_premises_security_identifier', type=str, help='')
        c.argument('principal_name', type=str, help='')
        c.argument('type_', options_list=['--type'], type=str, help='')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Connected Organization')
        c.argument('created_by', type=str, help='', arg_group='Connected Organization')
        c.argument('created_date_time', help='', arg_group='Connected Organization')
        c.argument('description', type=str, help='', arg_group='Connected Organization')
        c.argument('microsoft_graph_connected_organization_display_name', type=str, help='', arg_group='Connected '
                   'Organization')
        c.argument('identity_sources', action=AddIdentitySources, nargs='+', help=' Expect value: KEY1=VALUE1 '
                   'KEY2=VALUE2 ...', arg_group='Connected Organization')
        c.argument('modified_by', type=str, help='', arg_group='Connected Organization')
        c.argument('modified_date_time', help='', arg_group='Connected Organization')
        c.argument('state', arg_type=get_enum_type(['configured', 'proposed', 'unknownFutureValue']), help='',
                   arg_group='Connected Organization')
        c.argument('external_sponsors', action=AddExternalSponsors, nargs='+', help='', arg_group='Connected '
                   'Organization')
        c.argument('internal_sponsors', action=AddInternalSponsors, nargs='+', help='', arg_group='Connected '
                   'Organization')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-resource-role-access-package-assignment my') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-resource-role-access-package-resource-role delete-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-resource-role-access-package-resource-role show-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-resource-role-access-package-resource-role update-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-resource-role-access-package-resource-role-access-package-resource create-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-resource-role-access-package-resource-role-access-package-resource create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-resource-role-access-package-resource-role-access-package-resource delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-resource-role-access-package-resource-role-access-package-resource delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-resource-role-access-package-resource-role-access-package-resource list-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-resource-role-access-package-resource-role-access-package-resource list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-resource-role-access-package-resource-role-access-package-resource show-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-resource-role-access-package-resource-role-access-package-resource show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-resource-role-access-package-resource-role-access-package-resource update-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-resource-role-access-package-resource-role-access-package-resource update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-resource-role-access-package-resource-role-access-package-resource-access-package-resource-scope delete-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-resource-role-access-package-resource-role-access-package-resource-access-package-resource-scope show-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-resource-role-access-package-resource-role-access-package-resource-access-package-resource-scope update-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-resource-role-access-package-resource-scope delete-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-resource-role-access-package-resource-scope show-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-resource-role-access-package-resource-scope update-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-resource-role-access-package-resource-scope-access-package-resource create-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-resource-role-access-package-resource-scope-access-package-resource create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-resource-role-access-package-resource-scope-access-package-resource delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-resource-role-access-package-resource-scope-access-package-resource delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-resource-role-access-package-resource-scope-access-package-resource list-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-resource-role-access-package-resource-scope-access-package-resource list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-resource-role-access-package-resource-scope-access-package-resource show-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-resource-role-access-package-resource-scope-access-package-resource show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-resource-role-access-package-resource-scope-access-package-resource update-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-resource-role-access-package-resource-scope-access-package-resource update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-resource-role-access-package-resource-scope-access-package-resource-access-package-resource-role delete-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-resource-role-access-package-resource-scope-access-package-resource-access-package-resource-role show-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-resource-role-access-package-resource-scope-access-package-resource-access-package-resource-role update-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-resource-role-access-package-subject delete-ref-connected-organization') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-resource-role-access-package-subject set-ref-connected-organization') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('body', type=validate_file_or_dict, help='New navigation property ref values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-resource-role-access-package-subject show-connected-organization') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-access-package-assignment-resource-role-access-package-subject show-ref-connected-organization') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-target delete-ref-connected-organization') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-target set-ref-connected-organization') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('body', type=validate_file_or_dict, help='New navigation property ref values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-target show-connected-organization') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-access-package-assignment-target show-ref-connected-organization') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-requestor delete-ref-connected-organization') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-requestor set-ref-connected-organization') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('body', type=validate_file_or_dict, help='New navigation property ref values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-requestor show-connected-organization') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-request-requestor show-ref-connected-organization') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role create-access-package-assignment') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('access_package_id', type=str, help='')
        c.argument('assignment_policy_id', type=str, help='')
        c.argument('assignment_state', type=str, help='')
        c.argument('assignment_status', type=str, help='')
        c.argument('catalog_id', type=str, help='')
        c.argument('expired_date_time', help='')
        c.argument('is_extended', arg_type=get_three_state_flag(), help='')
        c.argument('target_id', type=str, help='')
        c.argument('access_package', type=validate_file_or_dict, help='accessPackage Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_assignment_policy', type=validate_file_or_dict, help='accessPackageAssignmentPolicy '
                   'Expected value: json-string/@json-file.')
        c.argument('access_package_assignment_requests', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_assignment_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Target')
        c.argument('alt_sec_id', type=str, help='', arg_group='Target')
        c.argument('connected_organization_id', type=str, help='', arg_group='Target')
        c.argument('display_name', type=str, help='', arg_group='Target')
        c.argument('email', type=str, help='', arg_group='Target')
        c.argument('object_id', type=str, help='', arg_group='Target')
        c.argument('on_premises_security_identifier', type=str, help='', arg_group='Target')
        c.argument('principal_name', type=str, help='', arg_group='Target')
        c.argument('type_', options_list=['--type'], type=str, help='', arg_group='Target')
        c.argument('id1', type=str, help='Read-only.', arg_group='Target Connected Organization')
        c.argument('created_by', type=str, help='', arg_group='Target Connected Organization')
        c.argument('created_date_time', help='', arg_group='Target Connected Organization')
        c.argument('description', type=str, help='', arg_group='Target Connected Organization')
        c.argument('microsoft_graph_connected_organization_display_name', type=str, help='', arg_group='Target '
                   'Connected Organization')
        c.argument('identity_sources', action=AddIdentitySources, nargs='+', help=' Expect value: KEY1=VALUE1 '
                   'KEY2=VALUE2 ...', arg_group='Target Connected Organization')
        c.argument('modified_by', type=str, help='', arg_group='Target Connected Organization')
        c.argument('modified_date_time', help='', arg_group='Target Connected Organization')
        c.argument('state', arg_type=get_enum_type(['configured', 'proposed', 'unknownFutureValue']), help='',
                   arg_group='Target Connected Organization')
        c.argument('external_sponsors', action=AddExternalSponsors, nargs='+', help='', arg_group='Target Connected '
                   'Organization')
        c.argument('internal_sponsors', action=AddInternalSponsors, nargs='+', help='', arg_group='Target Connected '
                   'Organization')
        c.argument('expiration', action=AddExpiration, nargs='+', help='expirationPattern', arg_group='Schedule')
        c.argument('recurrence', type=validate_file_or_dict, help='patternedRecurrence Expected value: '
                   'json-string/@json-file.', arg_group='Schedule')
        c.argument('start_date_time', help='', arg_group='Schedule')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role delete-access-package-assignment') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role delete-access-package-subject') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role list-access-package-assignment') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role show-access-package-assignment') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role show-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role show-access-package-subject') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role update-access-package-assignment') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('access_package_id', type=str, help='')
        c.argument('assignment_policy_id', type=str, help='')
        c.argument('assignment_state', type=str, help='')
        c.argument('assignment_status', type=str, help='')
        c.argument('catalog_id', type=str, help='')
        c.argument('expired_date_time', help='')
        c.argument('is_extended', arg_type=get_three_state_flag(), help='')
        c.argument('target_id', type=str, help='')
        c.argument('access_package', type=validate_file_or_dict, help='accessPackage Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_assignment_policy', type=validate_file_or_dict, help='accessPackageAssignmentPolicy '
                   'Expected value: json-string/@json-file.')
        c.argument('access_package_assignment_requests', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_assignment_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Target')
        c.argument('alt_sec_id', type=str, help='', arg_group='Target')
        c.argument('connected_organization_id', type=str, help='', arg_group='Target')
        c.argument('display_name', type=str, help='', arg_group='Target')
        c.argument('email', type=str, help='', arg_group='Target')
        c.argument('object_id', type=str, help='', arg_group='Target')
        c.argument('on_premises_security_identifier', type=str, help='', arg_group='Target')
        c.argument('principal_name', type=str, help='', arg_group='Target')
        c.argument('type_', options_list=['--type'], type=str, help='', arg_group='Target')
        c.argument('id1', type=str, help='Read-only.', arg_group='Target Connected Organization')
        c.argument('created_by', type=str, help='', arg_group='Target Connected Organization')
        c.argument('created_date_time', help='', arg_group='Target Connected Organization')
        c.argument('description', type=str, help='', arg_group='Target Connected Organization')
        c.argument('microsoft_graph_connected_organization_display_name', type=str, help='', arg_group='Target '
                   'Connected Organization')
        c.argument('identity_sources', action=AddIdentitySources, nargs='+', help=' Expect value: KEY1=VALUE1 '
                   'KEY2=VALUE2 ...', arg_group='Target Connected Organization')
        c.argument('modified_by', type=str, help='', arg_group='Target Connected Organization')
        c.argument('modified_date_time', help='', arg_group='Target Connected Organization')
        c.argument('state', arg_type=get_enum_type(['configured', 'proposed', 'unknownFutureValue']), help='',
                   arg_group='Target Connected Organization')
        c.argument('external_sponsors', action=AddExternalSponsors, nargs='+', help='', arg_group='Target Connected '
                   'Organization')
        c.argument('internal_sponsors', action=AddInternalSponsors, nargs='+', help='', arg_group='Target Connected '
                   'Organization')
        c.argument('expiration', action=AddExpiration, nargs='+', help='expirationPattern', arg_group='Schedule')
        c.argument('recurrence', type=validate_file_or_dict, help='patternedRecurrence Expected value: '
                   'json-string/@json-file.', arg_group='Schedule')
        c.argument('start_date_time', help='', arg_group='Schedule')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role update-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role update-access-package-subject') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('alt_sec_id', type=str, help='')
        c.argument('connected_organization_id', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('email', type=str, help='')
        c.argument('object_id', type=str, help='')
        c.argument('on_premises_security_identifier', type=str, help='')
        c.argument('principal_name', type=str, help='')
        c.argument('type_', options_list=['--type'], type=str, help='')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Connected Organization')
        c.argument('created_by', type=str, help='', arg_group='Connected Organization')
        c.argument('created_date_time', help='', arg_group='Connected Organization')
        c.argument('description', type=str, help='', arg_group='Connected Organization')
        c.argument('microsoft_graph_connected_organization_display_name', type=str, help='', arg_group='Connected '
                   'Organization')
        c.argument('identity_sources', action=AddIdentitySources, nargs='+', help=' Expect value: KEY1=VALUE1 '
                   'KEY2=VALUE2 ...', arg_group='Connected Organization')
        c.argument('modified_by', type=str, help='', arg_group='Connected Organization')
        c.argument('modified_date_time', help='', arg_group='Connected Organization')
        c.argument('state', arg_type=get_enum_type(['configured', 'proposed', 'unknownFutureValue']), help='',
                   arg_group='Connected Organization')
        c.argument('external_sponsors', action=AddExternalSponsors, nargs='+', help='', arg_group='Connected '
                   'Organization')
        c.argument('internal_sponsors', action=AddInternalSponsors, nargs='+', help='', arg_group='Connected '
                   'Organization')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment create-access-package-assignment-request') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('answers', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('completed_date', help='')
        c.argument('created_date_time', help='')
        c.argument('expiration_date_time', help='')
        c.argument('is_validation_only', arg_type=get_three_state_flag(), help='')
        c.argument('justification', type=str, help='')
        c.argument('request_state', type=str, help='')
        c.argument('request_status', type=str, help='')
        c.argument('request_type', type=str, help='')
        c.argument('access_package', type=validate_file_or_dict, help='accessPackage Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_assignment', type=validate_file_or_dict, help='accessPackageAssignment Expected '
                   'value: json-string/@json-file.')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Requestor')
        c.argument('alt_sec_id', type=str, help='', arg_group='Requestor')
        c.argument('connected_organization_id', type=str, help='', arg_group='Requestor')
        c.argument('display_name', type=str, help='', arg_group='Requestor')
        c.argument('email', type=str, help='', arg_group='Requestor')
        c.argument('object_id', type=str, help='', arg_group='Requestor')
        c.argument('on_premises_security_identifier', type=str, help='', arg_group='Requestor')
        c.argument('principal_name', type=str, help='', arg_group='Requestor')
        c.argument('type_', options_list=['--type'], type=str, help='', arg_group='Requestor')
        c.argument('id1', type=str, help='Read-only.', arg_group='Requestor Connected Organization')
        c.argument('created_by', type=str, help='', arg_group='Requestor Connected Organization')
        c.argument('microsoft_graph_connected_organization_created_date_time_created_date_time', help='',
                   arg_group='Requestor Connected Organization')
        c.argument('description', type=str, help='', arg_group='Requestor Connected Organization')
        c.argument('microsoft_graph_connected_organization_display_name', type=str, help='', arg_group='Requestor '
                   'Connected Organization')
        c.argument('identity_sources', action=AddIdentitySources, nargs='+', help=' Expect value: KEY1=VALUE1 '
                   'KEY2=VALUE2 ...', arg_group='Requestor Connected Organization')
        c.argument('modified_by', type=str, help='', arg_group='Requestor Connected Organization')
        c.argument('modified_date_time', help='', arg_group='Requestor Connected Organization')
        c.argument('state', arg_type=get_enum_type(['configured', 'proposed', 'unknownFutureValue']), help='',
                   arg_group='Requestor Connected Organization')
        c.argument('external_sponsors', action=AddExternalSponsors, nargs='+', help='', arg_group='Requestor Connected '
                   'Organization')
        c.argument('internal_sponsors', action=AddInternalSponsors, nargs='+', help='', arg_group='Requestor Connected '
                   'Organization')
        c.argument('expiration', action=AddExpiration, nargs='+', help='expirationPattern', arg_group='Schedule')
        c.argument('recurrence', type=validate_file_or_dict, help='patternedRecurrence Expected value: '
                   'json-string/@json-file.', arg_group='Schedule')
        c.argument('start_date_time', help='', arg_group='Schedule')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment create-access-package-assignment-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('status', type=str, help='')
        c.argument('access_package_assignments', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_role', type=validate_file_or_dict, help='accessPackageResourceRole '
                   'Expected value: json-string/@json-file.')
        c.argument('access_package_resource_scope', type=validate_file_or_dict, help='accessPackageResourceScope '
                   'Expected value: json-string/@json-file.')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Access Package Subject')
        c.argument('alt_sec_id', type=str, help='', arg_group='Access Package Subject')
        c.argument('connected_organization_id', type=str, help='', arg_group='Access Package Subject')
        c.argument('display_name', type=str, help='', arg_group='Access Package Subject')
        c.argument('email', type=str, help='', arg_group='Access Package Subject')
        c.argument('object_id', type=str, help='', arg_group='Access Package Subject')
        c.argument('on_premises_security_identifier', type=str, help='', arg_group='Access Package Subject')
        c.argument('principal_name', type=str, help='', arg_group='Access Package Subject')
        c.argument('type_', options_list=['--type'], type=str, help='', arg_group='Access Package Subject')
        c.argument('id1', type=str, help='Read-only.', arg_group='Access Package Subject Connected Organization')
        c.argument('created_by', type=str, help='', arg_group='Access Package Subject Connected Organization')
        c.argument('created_date_time', help='', arg_group='Access Package Subject Connected Organization')
        c.argument('description', type=str, help='', arg_group='Access Package Subject Connected Organization')
        c.argument('microsoft_graph_connected_organization_display_name', type=str, help='', arg_group='Access Package '
                   'Subject Connected Organization')
        c.argument('identity_sources', action=AddIdentitySources, nargs='+', help=' Expect value: KEY1=VALUE1 '
                   'KEY2=VALUE2 ...', arg_group='Access Package Subject Connected Organization')
        c.argument('modified_by', type=str, help='', arg_group='Access Package Subject Connected Organization')
        c.argument('modified_date_time', help='', arg_group='Access Package Subject Connected Organization')
        c.argument('state', arg_type=get_enum_type(['configured', 'proposed', 'unknownFutureValue']), help='',
                   arg_group='Access Package Subject Connected Organization')
        c.argument('external_sponsors', action=AddExternalSponsors, nargs='+', help='', arg_group='Access Package '
                   'Subject Connected Organization')
        c.argument('internal_sponsors', action=AddInternalSponsors, nargs='+', help='', arg_group='Access Package '
                   'Subject Connected Organization')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment delete-access-package') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment delete-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment delete-access-package-assignment-request') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment delete-access-package-assignment-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id1', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment delete-target') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment list-access-package-assignment-request') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment list-access-package-assignment-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment my') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment show-access-package') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment show-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment show-access-package-assignment-request') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment show-access-package-assignment-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id1', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment show-target') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment update-access-package') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('catalog_id', type=str, help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_hidden', arg_type=get_three_state_flag(), help='')
        c.argument('is_role_scopes_visible', arg_type=get_three_state_flag(), help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_assignment_policies', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_catalog', type=validate_file_or_dict, help='accessPackageCatalog Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_role_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment update-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('access_package_id', type=str, help='')
        c.argument('can_extend', arg_type=get_three_state_flag(), help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('duration_in_days', type=int, help='')
        c.argument('expiration_date_time', help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('questions', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('access_package', type=validate_file_or_dict, help='accessPackage Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_catalog', type=validate_file_or_dict, help='accessPackageCatalog Expected value: '
                   'json-string/@json-file.')
        c.argument('accept_requests', arg_type=get_three_state_flag(), help='', arg_group='Requestor Settings')
        c.argument('allowed_requestors', action=AddAllowedRequestors, nargs='+', help='', arg_group='Requestor '
                   'Settings')
        c.argument('scope_type', type=str, help='', arg_group='Requestor Settings')
        c.argument('approval_mode', type=str, help='', arg_group='Request Approval Settings')
        c.argument('approval_stages', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.',
                   arg_group='Request Approval Settings')
        c.argument('is_approval_required', arg_type=get_three_state_flag(), help='', arg_group='Request Approval '
                   'Settings')
        c.argument('is_approval_required_for_extension', arg_type=get_three_state_flag(), help='', arg_group='Request '
                   'Approval Settings')
        c.argument('is_requestor_justification_required', arg_type=get_three_state_flag(), help='', arg_group='Request '
                   'Approval Settings')
        c.argument('integer_duration_in_days', type=int, help='', arg_group='Access Review Settings')
        c.argument('is_enabled', arg_type=get_three_state_flag(), help='', arg_group='Access Review Settings')
        c.argument('recurrence_type', type=str, help='', arg_group='Access Review Settings')
        c.argument('reviewers', action=AddIdentitygovernanceEntitlementmanagementReviewers, nargs='+', help='',
                   arg_group='Access Review Settings')
        c.argument('reviewer_type', type=str, help='', arg_group='Access Review Settings')
        c.argument('start_date_time', help='', arg_group='Access Review Settings')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment update-access-package-assignment-request') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('answers', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('completed_date', help='')
        c.argument('created_date_time', help='')
        c.argument('expiration_date_time', help='')
        c.argument('is_validation_only', arg_type=get_three_state_flag(), help='')
        c.argument('justification', type=str, help='')
        c.argument('request_state', type=str, help='')
        c.argument('request_status', type=str, help='')
        c.argument('request_type', type=str, help='')
        c.argument('access_package', type=validate_file_or_dict, help='accessPackage Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_assignment', type=validate_file_or_dict, help='accessPackageAssignment Expected '
                   'value: json-string/@json-file.')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Requestor')
        c.argument('alt_sec_id', type=str, help='', arg_group='Requestor')
        c.argument('connected_organization_id', type=str, help='', arg_group='Requestor')
        c.argument('display_name', type=str, help='', arg_group='Requestor')
        c.argument('email', type=str, help='', arg_group='Requestor')
        c.argument('object_id', type=str, help='', arg_group='Requestor')
        c.argument('on_premises_security_identifier', type=str, help='', arg_group='Requestor')
        c.argument('principal_name', type=str, help='', arg_group='Requestor')
        c.argument('type_', options_list=['--type'], type=str, help='', arg_group='Requestor')
        c.argument('id1', type=str, help='Read-only.', arg_group='Requestor Connected Organization')
        c.argument('created_by', type=str, help='', arg_group='Requestor Connected Organization')
        c.argument('microsoft_graph_connected_organization_created_date_time_created_date_time', help='',
                   arg_group='Requestor Connected Organization')
        c.argument('description', type=str, help='', arg_group='Requestor Connected Organization')
        c.argument('microsoft_graph_connected_organization_display_name', type=str, help='', arg_group='Requestor '
                   'Connected Organization')
        c.argument('identity_sources', action=AddIdentitySources, nargs='+', help=' Expect value: KEY1=VALUE1 '
                   'KEY2=VALUE2 ...', arg_group='Requestor Connected Organization')
        c.argument('modified_by', type=str, help='', arg_group='Requestor Connected Organization')
        c.argument('modified_date_time', help='', arg_group='Requestor Connected Organization')
        c.argument('state', arg_type=get_enum_type(['configured', 'proposed', 'unknownFutureValue']), help='',
                   arg_group='Requestor Connected Organization')
        c.argument('external_sponsors', action=AddExternalSponsors, nargs='+', help='', arg_group='Requestor Connected '
                   'Organization')
        c.argument('internal_sponsors', action=AddInternalSponsors, nargs='+', help='', arg_group='Requestor Connected '
                   'Organization')
        c.argument('expiration', action=AddExpiration, nargs='+', help='expirationPattern', arg_group='Schedule')
        c.argument('recurrence', type=validate_file_or_dict, help='patternedRecurrence Expected value: '
                   'json-string/@json-file.', arg_group='Schedule')
        c.argument('start_date_time', help='', arg_group='Schedule')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment update-access-package-assignment-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id1', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('status', type=str, help='')
        c.argument('access_package_assignments', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_role', type=validate_file_or_dict, help='accessPackageResourceRole '
                   'Expected value: json-string/@json-file.')
        c.argument('access_package_resource_scope', type=validate_file_or_dict, help='accessPackageResourceScope '
                   'Expected value: json-string/@json-file.')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Access Package Subject')
        c.argument('alt_sec_id', type=str, help='', arg_group='Access Package Subject')
        c.argument('connected_organization_id', type=str, help='', arg_group='Access Package Subject')
        c.argument('display_name', type=str, help='', arg_group='Access Package Subject')
        c.argument('email', type=str, help='', arg_group='Access Package Subject')
        c.argument('object_id', type=str, help='', arg_group='Access Package Subject')
        c.argument('on_premises_security_identifier', type=str, help='', arg_group='Access Package Subject')
        c.argument('principal_name', type=str, help='', arg_group='Access Package Subject')
        c.argument('type_', options_list=['--type'], type=str, help='', arg_group='Access Package Subject')
        c.argument('id1', type=str, help='Read-only.', arg_group='Access Package Subject Connected Organization')
        c.argument('created_by', type=str, help='', arg_group='Access Package Subject Connected Organization')
        c.argument('created_date_time', help='', arg_group='Access Package Subject Connected Organization')
        c.argument('description', type=str, help='', arg_group='Access Package Subject Connected Organization')
        c.argument('microsoft_graph_connected_organization_display_name', type=str, help='', arg_group='Access Package '
                   'Subject Connected Organization')
        c.argument('identity_sources', action=AddIdentitySources, nargs='+', help=' Expect value: KEY1=VALUE1 '
                   'KEY2=VALUE2 ...', arg_group='Access Package Subject Connected Organization')
        c.argument('modified_by', type=str, help='', arg_group='Access Package Subject Connected Organization')
        c.argument('modified_date_time', help='', arg_group='Access Package Subject Connected Organization')
        c.argument('state', arg_type=get_enum_type(['configured', 'proposed', 'unknownFutureValue']), help='',
                   arg_group='Access Package Subject Connected Organization')
        c.argument('external_sponsors', action=AddExternalSponsors, nargs='+', help='', arg_group='Access Package '
                   'Subject Connected Organization')
        c.argument('internal_sponsors', action=AddInternalSponsors, nargs='+', help='', arg_group='Access Package '
                   'Subject Connected Organization')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment update-target') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('alt_sec_id', type=str, help='')
        c.argument('connected_organization_id', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('email', type=str, help='')
        c.argument('object_id', type=str, help='')
        c.argument('on_premises_security_identifier', type=str, help='')
        c.argument('principal_name', type=str, help='')
        c.argument('type_', options_list=['--type'], type=str, help='')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Connected Organization')
        c.argument('created_by', type=str, help='', arg_group='Connected Organization')
        c.argument('created_date_time', help='', arg_group='Connected Organization')
        c.argument('description', type=str, help='', arg_group='Connected Organization')
        c.argument('microsoft_graph_connected_organization_display_name', type=str, help='', arg_group='Connected '
                   'Organization')
        c.argument('identity_sources', action=AddIdentitySources, nargs='+', help=' Expect value: KEY1=VALUE1 '
                   'KEY2=VALUE2 ...', arg_group='Connected Organization')
        c.argument('modified_by', type=str, help='', arg_group='Connected Organization')
        c.argument('modified_date_time', help='', arg_group='Connected Organization')
        c.argument('state', arg_type=get_enum_type(['configured', 'proposed', 'unknownFutureValue']), help='',
                   arg_group='Connected Organization')
        c.argument('external_sponsors', action=AddExternalSponsors, nargs='+', help='', arg_group='Connected '
                   'Organization')
        c.argument('internal_sponsors', action=AddInternalSponsors, nargs='+', help='', arg_group='Connected '
                   'Organization')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package create-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('access_package_id', type=str, help='')
        c.argument('can_extend', arg_type=get_three_state_flag(), help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('duration_in_days', type=int, help='')
        c.argument('expiration_date_time', help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('questions', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('access_package', type=validate_file_or_dict, help='accessPackage Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_catalog', type=validate_file_or_dict, help='accessPackageCatalog Expected value: '
                   'json-string/@json-file.')
        c.argument('accept_requests', arg_type=get_three_state_flag(), help='', arg_group='Requestor Settings')
        c.argument('allowed_requestors', action=AddAllowedRequestors, nargs='+', help='', arg_group='Requestor '
                   'Settings')
        c.argument('scope_type', type=str, help='', arg_group='Requestor Settings')
        c.argument('approval_mode', type=str, help='', arg_group='Request Approval Settings')
        c.argument('approval_stages', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.',
                   arg_group='Request Approval Settings')
        c.argument('is_approval_required', arg_type=get_three_state_flag(), help='', arg_group='Request Approval '
                   'Settings')
        c.argument('is_approval_required_for_extension', arg_type=get_three_state_flag(), help='', arg_group='Request '
                   'Approval Settings')
        c.argument('is_requestor_justification_required', arg_type=get_three_state_flag(), help='', arg_group='Request '
                   'Approval Settings')
        c.argument('integer_duration_in_days', type=int, help='', arg_group='Access Review Settings')
        c.argument('is_enabled', arg_type=get_three_state_flag(), help='', arg_group='Access Review Settings')
        c.argument('recurrence_type', type=str, help='', arg_group='Access Review Settings')
        c.argument('reviewers', action=AddIdentitygovernanceEntitlementmanagementReviewers, nargs='+', help='',
                   arg_group='Access Review Settings')
        c.argument('reviewer_type', type=str, help='', arg_group='Access Review Settings')
        c.argument('start_date_time', help='', arg_group='Access Review Settings')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package create-access-package-resource-role-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_resource_role', type=validate_file_or_dict, help='accessPackageResourceRole '
                   'Expected value: json-string/@json-file.')
        c.argument('access_package_resource_scope', type=validate_file_or_dict, help='accessPackageResourceScope '
                   'Expected value: json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package delete-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package delete-access-package-resource-role-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package delete-ref-access-package-catalog') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package list-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package list-access-package-resource-role-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package set-ref-access-package-catalog') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('body', type=validate_file_or_dict, help='New navigation property ref values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package show-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package show-access-package-catalog') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package show-access-package-resource-role-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package show-ref-access-package-catalog') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package update-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('access_package_id', type=str, help='')
        c.argument('can_extend', arg_type=get_three_state_flag(), help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('duration_in_days', type=int, help='')
        c.argument('expiration_date_time', help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('questions', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('access_package', type=validate_file_or_dict, help='accessPackage Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_catalog', type=validate_file_or_dict, help='accessPackageCatalog Expected value: '
                   'json-string/@json-file.')
        c.argument('accept_requests', arg_type=get_three_state_flag(), help='', arg_group='Requestor Settings')
        c.argument('allowed_requestors', action=AddAllowedRequestors, nargs='+', help='', arg_group='Requestor '
                   'Settings')
        c.argument('scope_type', type=str, help='', arg_group='Requestor Settings')
        c.argument('approval_mode', type=str, help='', arg_group='Request Approval Settings')
        c.argument('approval_stages', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.',
                   arg_group='Request Approval Settings')
        c.argument('is_approval_required', arg_type=get_three_state_flag(), help='', arg_group='Request Approval '
                   'Settings')
        c.argument('is_approval_required_for_extension', arg_type=get_three_state_flag(), help='', arg_group='Request '
                   'Approval Settings')
        c.argument('is_requestor_justification_required', arg_type=get_three_state_flag(), help='', arg_group='Request '
                   'Approval Settings')
        c.argument('integer_duration_in_days', type=int, help='', arg_group='Access Review Settings')
        c.argument('is_enabled', arg_type=get_three_state_flag(), help='', arg_group='Access Review Settings')
        c.argument('recurrence_type', type=str, help='', arg_group='Access Review Settings')
        c.argument('reviewers', action=AddIdentitygovernanceEntitlementmanagementReviewers, nargs='+', help='',
                   arg_group='Access Review Settings')
        c.argument('reviewer_type', type=str, help='', arg_group='Access Review Settings')
        c.argument('start_date_time', help='', arg_group='Access Review Settings')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package update-access-package-resource-role-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_resource_role', type=validate_file_or_dict, help='accessPackageResourceRole '
                   'Expected value: json-string/@json-file.')
        c.argument('access_package_resource_scope', type=validate_file_or_dict, help='accessPackageResourceScope '
                   'Expected value: json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-assignment-policy delete-access-package-catalog') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-assignment-policy delete-ref-access-package') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-assignment-policy set-ref-access-package') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('body', type=validate_file_or_dict, help='New navigation property ref values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-assignment-policy show-access-package') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-assignment-policy show-access-package-catalog') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-assignment-policy show-ref-access-package') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-assignment-policy update-access-package-catalog') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('catalog_status', type=str, help='')
        c.argument('catalog_type', type=str, help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_externally_visible', arg_type=get_three_state_flag(), help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resources', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_packages', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog create-access-package') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('catalog_id', type=str, help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_hidden', arg_type=get_three_state_flag(), help='')
        c.argument('is_role_scopes_visible', arg_type=get_three_state_flag(), help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_assignment_policies', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_catalog', type=validate_file_or_dict, help='accessPackageCatalog Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_role_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog create-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog create-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog delete-access-package') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog delete-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog list-access-package') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog list-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog list-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog show-access-package') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog show-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog show-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog update-access-package') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('catalog_id', type=str, help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_hidden', arg_type=get_three_state_flag(), help='')
        c.argument('is_role_scopes_visible', arg_type=get_three_state_flag(), help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_assignment_policies', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_catalog', type=validate_file_or_dict, help='accessPackageCatalog Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_role_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog update-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog update-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-role delete-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-role show-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-role update-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource create-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_role_id1', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource list-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource show-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_role_id1', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource update-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_role_id1', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource-access-package-resource-scope delete-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource-access-package-resource-scope show-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource-access-package-resource-scope update-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource create-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource list-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource show-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource update-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-access-package-resource-role delete-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-access-package-resource-role show-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-access-package-resource-role update-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-access-package-resource-scope delete-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-access-package-resource-scope show-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-access-package-resource-scope update-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-scope delete-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-scope show-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-scope update-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource create-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_scope_id1', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource list-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource show-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_scope_id1', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource update-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_scope_id1', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource-access-package-resource-role delete-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource-access-package-resource-role show-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource-access-package-resource-role update-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package search') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-resource-role-scope delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-resource-role-scope delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-resource-role-scope show-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-resource-role-scope show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-resource-role-scope update-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-resource-role-scope update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-role delete-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-role show-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-role update-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource create-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource list-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource show-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource update-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource-access-package-resource-scope delete-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource-access-package-resource-scope show-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource-access-package-resource-scope update-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-scope delete-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-scope show-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-scope update-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource create-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource list-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource show-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource update-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource-access-package-resource-role delete-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource-access-package-resource-role show-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource-access-package-resource-role update-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy delete-access-package-catalog') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy delete-ref-access-package') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy set-ref-access-package') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('body', type=validate_file_or_dict, help='New navigation property ref values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy show-access-package') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy show-access-package-catalog') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy show-ref-access-package') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy update-access-package-catalog') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('catalog_status', type=str, help='')
        c.argument('catalog_type', type=str, help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_externally_visible', arg_type=get_three_state_flag(), help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resources', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_packages', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog create-access-package') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('catalog_id', type=str, help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_hidden', arg_type=get_three_state_flag(), help='')
        c.argument('is_role_scopes_visible', arg_type=get_three_state_flag(), help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_assignment_policies', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_catalog', type=validate_file_or_dict, help='accessPackageCatalog Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_role_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog create-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog create-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog delete-access-package') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog delete-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog list-access-package') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog list-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog list-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog show-access-package') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog show-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog show-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog update-access-package') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('catalog_id', type=str, help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_hidden', arg_type=get_three_state_flag(), help='')
        c.argument('is_role_scopes_visible', arg_type=get_three_state_flag(), help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_assignment_policies', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_catalog', type=validate_file_or_dict, help='accessPackageCatalog Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_role_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog update-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog update-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-role delete-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-role show-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-role update-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource create-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_role_id1', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource list-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource show-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_role_id1', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource update-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_role_id1', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource-access-package-resource-scope delete-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource-access-package-resource-scope show-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource-access-package-resource-scope update-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource create-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource list-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource show-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource update-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-access-package-resource-role delete-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-access-package-resource-role show-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-access-package-resource-role update-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-access-package-resource-scope delete-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-access-package-resource-scope show-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-access-package-resource-scope update-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-scope delete-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-scope show-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-scope update-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource create-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_scope_id1', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource list-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource show-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_scope_id1', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource update-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_scope_id1', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource-access-package-resource-role delete-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource-access-package-resource-role show-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource-access-package-resource-role update-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package create-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('microsoft_graph_access_package_assignment_policy_access_package_id_access_package_id', type=str,
                   help='')
        c.argument('can_extend', arg_type=get_three_state_flag(), help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('duration_in_days', type=int, help='')
        c.argument('expiration_date_time', help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('questions', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('access_package', type=validate_file_or_dict, help='accessPackage Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_catalog', type=validate_file_or_dict, help='accessPackageCatalog Expected value: '
                   'json-string/@json-file.')
        c.argument('accept_requests', arg_type=get_three_state_flag(), help='', arg_group='Requestor Settings')
        c.argument('allowed_requestors', action=AddAllowedRequestors, nargs='+', help='', arg_group='Requestor '
                   'Settings')
        c.argument('scope_type', type=str, help='', arg_group='Requestor Settings')
        c.argument('approval_mode', type=str, help='', arg_group='Request Approval Settings')
        c.argument('approval_stages', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.',
                   arg_group='Request Approval Settings')
        c.argument('is_approval_required', arg_type=get_three_state_flag(), help='', arg_group='Request Approval '
                   'Settings')
        c.argument('is_approval_required_for_extension', arg_type=get_three_state_flag(), help='', arg_group='Request '
                   'Approval Settings')
        c.argument('is_requestor_justification_required', arg_type=get_three_state_flag(), help='', arg_group='Request '
                   'Approval Settings')
        c.argument('integer_duration_in_days', type=int, help='', arg_group='Access Review Settings')
        c.argument('is_enabled', arg_type=get_three_state_flag(), help='', arg_group='Access Review Settings')
        c.argument('recurrence_type', type=str, help='', arg_group='Access Review Settings')
        c.argument('reviewers', action=AddIdentitygovernanceEntitlementmanagementReviewers, nargs='+', help='',
                   arg_group='Access Review Settings')
        c.argument('reviewer_type', type=str, help='', arg_group='Access Review Settings')
        c.argument('start_date_time', help='', arg_group='Access Review Settings')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package create-access-package-resource-role-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_resource_role', type=validate_file_or_dict, help='accessPackageResourceRole '
                   'Expected value: json-string/@json-file.')
        c.argument('access_package_resource_scope', type=validate_file_or_dict, help='accessPackageResourceScope '
                   'Expected value: json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package delete-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package delete-access-package-resource-role-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package delete-ref-access-package-catalog') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package list-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package list-access-package-resource-role-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package search') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package set-ref-access-package-catalog') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('body', type=validate_file_or_dict, help='New navigation property ref values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package show-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package show-access-package-catalog') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package show-access-package-resource-role-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package show-ref-access-package-catalog') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package update-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('microsoft_graph_access_package_assignment_policy_access_package_id_access_package_id', type=str,
                   help='')
        c.argument('can_extend', arg_type=get_three_state_flag(), help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('duration_in_days', type=int, help='')
        c.argument('expiration_date_time', help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('questions', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('access_package', type=validate_file_or_dict, help='accessPackage Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_catalog', type=validate_file_or_dict, help='accessPackageCatalog Expected value: '
                   'json-string/@json-file.')
        c.argument('accept_requests', arg_type=get_three_state_flag(), help='', arg_group='Requestor Settings')
        c.argument('allowed_requestors', action=AddAllowedRequestors, nargs='+', help='', arg_group='Requestor '
                   'Settings')
        c.argument('scope_type', type=str, help='', arg_group='Requestor Settings')
        c.argument('approval_mode', type=str, help='', arg_group='Request Approval Settings')
        c.argument('approval_stages', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.',
                   arg_group='Request Approval Settings')
        c.argument('is_approval_required', arg_type=get_three_state_flag(), help='', arg_group='Request Approval '
                   'Settings')
        c.argument('is_approval_required_for_extension', arg_type=get_three_state_flag(), help='', arg_group='Request '
                   'Approval Settings')
        c.argument('is_requestor_justification_required', arg_type=get_three_state_flag(), help='', arg_group='Request '
                   'Approval Settings')
        c.argument('integer_duration_in_days', type=int, help='', arg_group='Access Review Settings')
        c.argument('is_enabled', arg_type=get_three_state_flag(), help='', arg_group='Access Review Settings')
        c.argument('recurrence_type', type=str, help='', arg_group='Access Review Settings')
        c.argument('reviewers', action=AddIdentitygovernanceEntitlementmanagementReviewers, nargs='+', help='',
                   arg_group='Access Review Settings')
        c.argument('reviewer_type', type=str, help='', arg_group='Access Review Settings')
        c.argument('start_date_time', help='', arg_group='Access Review Settings')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package update-access-package-resource-role-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_resource_role', type=validate_file_or_dict, help='accessPackageResourceRole '
                   'Expected value: json-string/@json-file.')
        c.argument('access_package_resource_scope', type=validate_file_or_dict, help='accessPackageResourceScope '
                   'Expected value: json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope show-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope update-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-role delete-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-role show-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-role update-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource create-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource list-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource show-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource update-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource-access-package-resource-scope delete-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource-access-package-resource-scope show-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource-access-package-resource-scope update-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-scope delete-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-scope show-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-scope update-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource create-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource list-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource show-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource update-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource-access-package-resource-role delete-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource-access-package-resource-role show-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource-access-package-resource-role update-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-request cancel') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-request delete-access-package-assignment') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-request delete-ref-access-package') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-request delete-requestor') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-request my') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-request set-ref-access-package') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('body', type=validate_file_or_dict, help='New navigation property ref values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-request show-access-package') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-request show-access-package-assignment') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-request show-ref-access-package') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-request show-requestor') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-request update-access-package-assignment') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('access_package_id', type=str, help='')
        c.argument('assignment_policy_id', type=str, help='')
        c.argument('assignment_state', type=str, help='')
        c.argument('assignment_status', type=str, help='')
        c.argument('catalog_id', type=str, help='')
        c.argument('expired_date_time', help='')
        c.argument('is_extended', arg_type=get_three_state_flag(), help='')
        c.argument('target_id', type=str, help='')
        c.argument('access_package', type=validate_file_or_dict, help='accessPackage Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_assignment_policy', type=validate_file_or_dict, help='accessPackageAssignmentPolicy '
                   'Expected value: json-string/@json-file.')
        c.argument('access_package_assignment_requests', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_assignment_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Target')
        c.argument('alt_sec_id', type=str, help='', arg_group='Target')
        c.argument('connected_organization_id', type=str, help='', arg_group='Target')
        c.argument('display_name', type=str, help='', arg_group='Target')
        c.argument('email', type=str, help='', arg_group='Target')
        c.argument('object_id', type=str, help='', arg_group='Target')
        c.argument('on_premises_security_identifier', type=str, help='', arg_group='Target')
        c.argument('principal_name', type=str, help='', arg_group='Target')
        c.argument('type_', options_list=['--type'], type=str, help='', arg_group='Target')
        c.argument('id1', type=str, help='Read-only.', arg_group='Target Connected Organization')
        c.argument('created_by', type=str, help='', arg_group='Target Connected Organization')
        c.argument('created_date_time', help='', arg_group='Target Connected Organization')
        c.argument('description', type=str, help='', arg_group='Target Connected Organization')
        c.argument('microsoft_graph_connected_organization_display_name', type=str, help='', arg_group='Target '
                   'Connected Organization')
        c.argument('identity_sources', action=AddIdentitySources, nargs='+', help=' Expect value: KEY1=VALUE1 '
                   'KEY2=VALUE2 ...', arg_group='Target Connected Organization')
        c.argument('modified_by', type=str, help='', arg_group='Target Connected Organization')
        c.argument('modified_date_time', help='', arg_group='Target Connected Organization')
        c.argument('state', arg_type=get_enum_type(['configured', 'proposed', 'unknownFutureValue']), help='',
                   arg_group='Target Connected Organization')
        c.argument('external_sponsors', action=AddExternalSponsors, nargs='+', help='', arg_group='Target Connected '
                   'Organization')
        c.argument('internal_sponsors', action=AddInternalSponsors, nargs='+', help='', arg_group='Target Connected '
                   'Organization')
        c.argument('expiration', action=AddExpiration, nargs='+', help='expirationPattern', arg_group='Schedule')
        c.argument('recurrence', type=validate_file_or_dict, help='patternedRecurrence Expected value: '
                   'json-string/@json-file.', arg_group='Schedule')
        c.argument('start_date_time', help='', arg_group='Schedule')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-request update-requestor') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('alt_sec_id', type=str, help='')
        c.argument('connected_organization_id', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('email', type=str, help='')
        c.argument('object_id', type=str, help='')
        c.argument('on_premises_security_identifier', type=str, help='')
        c.argument('principal_name', type=str, help='')
        c.argument('type_', options_list=['--type'], type=str, help='')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Connected Organization')
        c.argument('created_by', type=str, help='', arg_group='Connected Organization')
        c.argument('created_date_time', help='', arg_group='Connected Organization')
        c.argument('description', type=str, help='', arg_group='Connected Organization')
        c.argument('microsoft_graph_connected_organization_display_name', type=str, help='', arg_group='Connected '
                   'Organization')
        c.argument('identity_sources', action=AddIdentitySources, nargs='+', help=' Expect value: KEY1=VALUE1 '
                   'KEY2=VALUE2 ...', arg_group='Connected Organization')
        c.argument('modified_by', type=str, help='', arg_group='Connected Organization')
        c.argument('modified_date_time', help='', arg_group='Connected Organization')
        c.argument('state', arg_type=get_enum_type(['configured', 'proposed', 'unknownFutureValue']), help='',
                   arg_group='Connected Organization')
        c.argument('external_sponsors', action=AddExternalSponsors, nargs='+', help='', arg_group='Connected '
                   'Organization')
        c.argument('internal_sponsors', action=AddInternalSponsors, nargs='+', help='', arg_group='Connected '
                   'Organization')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-request-requestor delete-ref-connected-organization') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-request-requestor set-ref-connected-organization') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('body', type=validate_file_or_dict, help='New navigation property ref values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-request-requestor show-connected-organization') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-request-requestor show-ref-connected-organization') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-access-package-assignment-resource-role my') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-target delete-ref-connected-organization') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-target set-ref-connected-organization') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('body', type=validate_file_or_dict, help='New navigation property ref values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-target show-connected-organization') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-assignment-target show-ref-connected-organization') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-resource-role delete-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-resource-role show-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-resource-role update-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-resource-role-access-package-resource create-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-resource-role-access-package-resource create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-resource-role-access-package-resource delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-resource-role-access-package-resource delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-resource-role-access-package-resource list-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-resource-role-access-package-resource list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-resource-role-access-package-resource show-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-resource-role-access-package-resource show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-resource-role-access-package-resource update-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-resource-role-access-package-resource update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-resource-role-access-package-resource-access-package-resource-scope delete-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-resource-role-access-package-resource-access-package-resource-scope show-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-resource-role-access-package-resource-access-package-resource-scope update-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-resource-scope delete-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-resource-scope show-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-resource-scope update-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-resource-scope-access-package-resource create-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-resource-scope-access-package-resource create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-resource-scope-access-package-resource delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-resource-scope-access-package-resource delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-resource-scope-access-package-resource list-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-resource-scope-access-package-resource list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-resource-scope-access-package-resource show-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-resource-scope-access-package-resource show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-resource-scope-access-package-resource update-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-resource-scope-access-package-resource update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-resource-scope-access-package-resource-access-package-resource-role delete-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-resource-scope-access-package-resource-access-package-resource-role show-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-resource-scope-access-package-resource-access-package-resource-role update-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-subject delete-ref-connected-organization') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-subject set-ref-connected-organization') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('body', type=validate_file_or_dict, help='New navigation property ref values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-subject show-connected-organization') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-resource-role-access-package-subject show-ref-connected-organization') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment create-access-package-assignment-request') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('answers', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('completed_date', help='')
        c.argument('created_date_time', help='')
        c.argument('expiration_date_time', help='')
        c.argument('is_validation_only', arg_type=get_three_state_flag(), help='')
        c.argument('justification', type=str, help='')
        c.argument('request_state', type=str, help='')
        c.argument('request_status', type=str, help='')
        c.argument('request_type', type=str, help='')
        c.argument('access_package', type=validate_file_or_dict, help='accessPackage Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_assignment', type=validate_file_or_dict, help='accessPackageAssignment Expected '
                   'value: json-string/@json-file.')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Requestor')
        c.argument('alt_sec_id', type=str, help='', arg_group='Requestor')
        c.argument('connected_organization_id', type=str, help='', arg_group='Requestor')
        c.argument('display_name', type=str, help='', arg_group='Requestor')
        c.argument('email', type=str, help='', arg_group='Requestor')
        c.argument('object_id', type=str, help='', arg_group='Requestor')
        c.argument('on_premises_security_identifier', type=str, help='', arg_group='Requestor')
        c.argument('principal_name', type=str, help='', arg_group='Requestor')
        c.argument('type_', options_list=['--type'], type=str, help='', arg_group='Requestor')
        c.argument('id1', type=str, help='Read-only.', arg_group='Requestor Connected Organization')
        c.argument('created_by', type=str, help='', arg_group='Requestor Connected Organization')
        c.argument('microsoft_graph_connected_organization_created_date_time_created_date_time', help='',
                   arg_group='Requestor Connected Organization')
        c.argument('description', type=str, help='', arg_group='Requestor Connected Organization')
        c.argument('microsoft_graph_connected_organization_display_name', type=str, help='', arg_group='Requestor '
                   'Connected Organization')
        c.argument('identity_sources', action=AddIdentitySources, nargs='+', help=' Expect value: KEY1=VALUE1 '
                   'KEY2=VALUE2 ...', arg_group='Requestor Connected Organization')
        c.argument('modified_by', type=str, help='', arg_group='Requestor Connected Organization')
        c.argument('modified_date_time', help='', arg_group='Requestor Connected Organization')
        c.argument('state', arg_type=get_enum_type(['configured', 'proposed', 'unknownFutureValue']), help='',
                   arg_group='Requestor Connected Organization')
        c.argument('external_sponsors', action=AddExternalSponsors, nargs='+', help='', arg_group='Requestor Connected '
                   'Organization')
        c.argument('internal_sponsors', action=AddInternalSponsors, nargs='+', help='', arg_group='Requestor Connected '
                   'Organization')
        c.argument('expiration', action=AddExpiration, nargs='+', help='expirationPattern', arg_group='Schedule')
        c.argument('recurrence', type=validate_file_or_dict, help='patternedRecurrence Expected value: '
                   'json-string/@json-file.', arg_group='Schedule')
        c.argument('start_date_time', help='', arg_group='Schedule')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment create-access-package-assignment-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('status', type=str, help='')
        c.argument('access_package_assignments', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_role', type=validate_file_or_dict, help='accessPackageResourceRole '
                   'Expected value: json-string/@json-file.')
        c.argument('access_package_resource_scope', type=validate_file_or_dict, help='accessPackageResourceScope '
                   'Expected value: json-string/@json-file.')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Access Package Subject')
        c.argument('alt_sec_id', type=str, help='', arg_group='Access Package Subject')
        c.argument('connected_organization_id', type=str, help='', arg_group='Access Package Subject')
        c.argument('display_name', type=str, help='', arg_group='Access Package Subject')
        c.argument('email', type=str, help='', arg_group='Access Package Subject')
        c.argument('object_id', type=str, help='', arg_group='Access Package Subject')
        c.argument('on_premises_security_identifier', type=str, help='', arg_group='Access Package Subject')
        c.argument('principal_name', type=str, help='', arg_group='Access Package Subject')
        c.argument('type_', options_list=['--type'], type=str, help='', arg_group='Access Package Subject')
        c.argument('id1', type=str, help='Read-only.', arg_group='Access Package Subject Connected Organization')
        c.argument('created_by', type=str, help='', arg_group='Access Package Subject Connected Organization')
        c.argument('created_date_time', help='', arg_group='Access Package Subject Connected Organization')
        c.argument('description', type=str, help='', arg_group='Access Package Subject Connected Organization')
        c.argument('microsoft_graph_connected_organization_display_name', type=str, help='', arg_group='Access Package '
                   'Subject Connected Organization')
        c.argument('identity_sources', action=AddIdentitySources, nargs='+', help=' Expect value: KEY1=VALUE1 '
                   'KEY2=VALUE2 ...', arg_group='Access Package Subject Connected Organization')
        c.argument('modified_by', type=str, help='', arg_group='Access Package Subject Connected Organization')
        c.argument('modified_date_time', help='', arg_group='Access Package Subject Connected Organization')
        c.argument('state', arg_type=get_enum_type(['configured', 'proposed', 'unknownFutureValue']), help='',
                   arg_group='Access Package Subject Connected Organization')
        c.argument('external_sponsors', action=AddExternalSponsors, nargs='+', help='', arg_group='Access Package '
                   'Subject Connected Organization')
        c.argument('internal_sponsors', action=AddInternalSponsors, nargs='+', help='', arg_group='Access Package '
                   'Subject Connected Organization')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment delete-access-package') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment delete-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment delete-access-package-assignment-request') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment delete-access-package-assignment-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment delete-target') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment list-access-package-assignment-request') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment list-access-package-assignment-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment show-access-package') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment show-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment show-access-package-assignment-request') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment show-access-package-assignment-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment show-target') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment update-access-package') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('catalog_id', type=str, help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_hidden', arg_type=get_three_state_flag(), help='')
        c.argument('is_role_scopes_visible', arg_type=get_three_state_flag(), help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_assignment_policies', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_catalog', type=validate_file_or_dict, help='accessPackageCatalog Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_role_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment update-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('access_package_id', type=str, help='')
        c.argument('can_extend', arg_type=get_three_state_flag(), help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('duration_in_days', type=int, help='')
        c.argument('expiration_date_time', help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('questions', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('access_package', type=validate_file_or_dict, help='accessPackage Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_catalog', type=validate_file_or_dict, help='accessPackageCatalog Expected value: '
                   'json-string/@json-file.')
        c.argument('accept_requests', arg_type=get_three_state_flag(), help='', arg_group='Requestor Settings')
        c.argument('allowed_requestors', action=AddAllowedRequestors, nargs='+', help='', arg_group='Requestor '
                   'Settings')
        c.argument('scope_type', type=str, help='', arg_group='Requestor Settings')
        c.argument('approval_mode', type=str, help='', arg_group='Request Approval Settings')
        c.argument('approval_stages', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.',
                   arg_group='Request Approval Settings')
        c.argument('is_approval_required', arg_type=get_three_state_flag(), help='', arg_group='Request Approval '
                   'Settings')
        c.argument('is_approval_required_for_extension', arg_type=get_three_state_flag(), help='', arg_group='Request '
                   'Approval Settings')
        c.argument('is_requestor_justification_required', arg_type=get_three_state_flag(), help='', arg_group='Request '
                   'Approval Settings')
        c.argument('integer_duration_in_days', type=int, help='', arg_group='Access Review Settings')
        c.argument('is_enabled', arg_type=get_three_state_flag(), help='', arg_group='Access Review Settings')
        c.argument('recurrence_type', type=str, help='', arg_group='Access Review Settings')
        c.argument('reviewers', action=AddIdentitygovernanceEntitlementmanagementReviewers, nargs='+', help='',
                   arg_group='Access Review Settings')
        c.argument('reviewer_type', type=str, help='', arg_group='Access Review Settings')
        c.argument('start_date_time', help='', arg_group='Access Review Settings')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment update-access-package-assignment-request') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('answers', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('completed_date', help='')
        c.argument('created_date_time', help='')
        c.argument('expiration_date_time', help='')
        c.argument('is_validation_only', arg_type=get_three_state_flag(), help='')
        c.argument('justification', type=str, help='')
        c.argument('request_state', type=str, help='')
        c.argument('request_status', type=str, help='')
        c.argument('request_type', type=str, help='')
        c.argument('access_package', type=validate_file_or_dict, help='accessPackage Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_assignment', type=validate_file_or_dict, help='accessPackageAssignment Expected '
                   'value: json-string/@json-file.')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Requestor')
        c.argument('alt_sec_id', type=str, help='', arg_group='Requestor')
        c.argument('connected_organization_id', type=str, help='', arg_group='Requestor')
        c.argument('display_name', type=str, help='', arg_group='Requestor')
        c.argument('email', type=str, help='', arg_group='Requestor')
        c.argument('object_id', type=str, help='', arg_group='Requestor')
        c.argument('on_premises_security_identifier', type=str, help='', arg_group='Requestor')
        c.argument('principal_name', type=str, help='', arg_group='Requestor')
        c.argument('type_', options_list=['--type'], type=str, help='', arg_group='Requestor')
        c.argument('id1', type=str, help='Read-only.', arg_group='Requestor Connected Organization')
        c.argument('created_by', type=str, help='', arg_group='Requestor Connected Organization')
        c.argument('microsoft_graph_connected_organization_created_date_time_created_date_time', help='',
                   arg_group='Requestor Connected Organization')
        c.argument('description', type=str, help='', arg_group='Requestor Connected Organization')
        c.argument('microsoft_graph_connected_organization_display_name', type=str, help='', arg_group='Requestor '
                   'Connected Organization')
        c.argument('identity_sources', action=AddIdentitySources, nargs='+', help=' Expect value: KEY1=VALUE1 '
                   'KEY2=VALUE2 ...', arg_group='Requestor Connected Organization')
        c.argument('modified_by', type=str, help='', arg_group='Requestor Connected Organization')
        c.argument('modified_date_time', help='', arg_group='Requestor Connected Organization')
        c.argument('state', arg_type=get_enum_type(['configured', 'proposed', 'unknownFutureValue']), help='',
                   arg_group='Requestor Connected Organization')
        c.argument('external_sponsors', action=AddExternalSponsors, nargs='+', help='', arg_group='Requestor Connected '
                   'Organization')
        c.argument('internal_sponsors', action=AddInternalSponsors, nargs='+', help='', arg_group='Requestor Connected '
                   'Organization')
        c.argument('expiration', action=AddExpiration, nargs='+', help='expirationPattern', arg_group='Schedule')
        c.argument('recurrence', type=validate_file_or_dict, help='patternedRecurrence Expected value: '
                   'json-string/@json-file.', arg_group='Schedule')
        c.argument('start_date_time', help='', arg_group='Schedule')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment update-access-package-assignment-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('status', type=str, help='')
        c.argument('access_package_assignments', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_role', type=validate_file_or_dict, help='accessPackageResourceRole '
                   'Expected value: json-string/@json-file.')
        c.argument('access_package_resource_scope', type=validate_file_or_dict, help='accessPackageResourceScope '
                   'Expected value: json-string/@json-file.')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Access Package Subject')
        c.argument('alt_sec_id', type=str, help='', arg_group='Access Package Subject')
        c.argument('connected_organization_id', type=str, help='', arg_group='Access Package Subject')
        c.argument('display_name', type=str, help='', arg_group='Access Package Subject')
        c.argument('email', type=str, help='', arg_group='Access Package Subject')
        c.argument('object_id', type=str, help='', arg_group='Access Package Subject')
        c.argument('on_premises_security_identifier', type=str, help='', arg_group='Access Package Subject')
        c.argument('principal_name', type=str, help='', arg_group='Access Package Subject')
        c.argument('type_', options_list=['--type'], type=str, help='', arg_group='Access Package Subject')
        c.argument('id1', type=str, help='Read-only.', arg_group='Access Package Subject Connected Organization')
        c.argument('created_by', type=str, help='', arg_group='Access Package Subject Connected Organization')
        c.argument('created_date_time', help='', arg_group='Access Package Subject Connected Organization')
        c.argument('description', type=str, help='', arg_group='Access Package Subject Connected Organization')
        c.argument('microsoft_graph_connected_organization_display_name', type=str, help='', arg_group='Access Package '
                   'Subject Connected Organization')
        c.argument('identity_sources', action=AddIdentitySources, nargs='+', help=' Expect value: KEY1=VALUE1 '
                   'KEY2=VALUE2 ...', arg_group='Access Package Subject Connected Organization')
        c.argument('modified_by', type=str, help='', arg_group='Access Package Subject Connected Organization')
        c.argument('modified_date_time', help='', arg_group='Access Package Subject Connected Organization')
        c.argument('state', arg_type=get_enum_type(['configured', 'proposed', 'unknownFutureValue']), help='',
                   arg_group='Access Package Subject Connected Organization')
        c.argument('external_sponsors', action=AddExternalSponsors, nargs='+', help='', arg_group='Access Package '
                   'Subject Connected Organization')
        c.argument('internal_sponsors', action=AddInternalSponsors, nargs='+', help='', arg_group='Access Package '
                   'Subject Connected Organization')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment update-target') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('alt_sec_id', type=str, help='')
        c.argument('connected_organization_id', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('email', type=str, help='')
        c.argument('object_id', type=str, help='')
        c.argument('on_premises_security_identifier', type=str, help='')
        c.argument('principal_name', type=str, help='')
        c.argument('type_', options_list=['--type'], type=str, help='')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Connected Organization')
        c.argument('created_by', type=str, help='', arg_group='Connected Organization')
        c.argument('created_date_time', help='', arg_group='Connected Organization')
        c.argument('description', type=str, help='', arg_group='Connected Organization')
        c.argument('microsoft_graph_connected_organization_display_name', type=str, help='', arg_group='Connected '
                   'Organization')
        c.argument('identity_sources', action=AddIdentitySources, nargs='+', help=' Expect value: KEY1=VALUE1 '
                   'KEY2=VALUE2 ...', arg_group='Connected Organization')
        c.argument('modified_by', type=str, help='', arg_group='Connected Organization')
        c.argument('modified_date_time', help='', arg_group='Connected Organization')
        c.argument('state', arg_type=get_enum_type(['configured', 'proposed', 'unknownFutureValue']), help='',
                   arg_group='Connected Organization')
        c.argument('external_sponsors', action=AddExternalSponsors, nargs='+', help='', arg_group='Connected '
                   'Organization')
        c.argument('internal_sponsors', action=AddInternalSponsors, nargs='+', help='', arg_group='Connected '
                   'Organization')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package create-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('access_package_id', type=str, help='')
        c.argument('can_extend', arg_type=get_three_state_flag(), help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('duration_in_days', type=int, help='')
        c.argument('expiration_date_time', help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('questions', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('access_package', type=validate_file_or_dict, help='accessPackage Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_catalog', type=validate_file_or_dict, help='accessPackageCatalog Expected value: '
                   'json-string/@json-file.')
        c.argument('accept_requests', arg_type=get_three_state_flag(), help='', arg_group='Requestor Settings')
        c.argument('allowed_requestors', action=AddAllowedRequestors, nargs='+', help='', arg_group='Requestor '
                   'Settings')
        c.argument('scope_type', type=str, help='', arg_group='Requestor Settings')
        c.argument('approval_mode', type=str, help='', arg_group='Request Approval Settings')
        c.argument('approval_stages', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.',
                   arg_group='Request Approval Settings')
        c.argument('is_approval_required', arg_type=get_three_state_flag(), help='', arg_group='Request Approval '
                   'Settings')
        c.argument('is_approval_required_for_extension', arg_type=get_three_state_flag(), help='', arg_group='Request '
                   'Approval Settings')
        c.argument('is_requestor_justification_required', arg_type=get_three_state_flag(), help='', arg_group='Request '
                   'Approval Settings')
        c.argument('integer_duration_in_days', type=int, help='', arg_group='Access Review Settings')
        c.argument('is_enabled', arg_type=get_three_state_flag(), help='', arg_group='Access Review Settings')
        c.argument('recurrence_type', type=str, help='', arg_group='Access Review Settings')
        c.argument('reviewers', action=AddIdentitygovernanceEntitlementmanagementReviewers, nargs='+', help='',
                   arg_group='Access Review Settings')
        c.argument('reviewer_type', type=str, help='', arg_group='Access Review Settings')
        c.argument('start_date_time', help='', arg_group='Access Review Settings')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package create-access-package-resource-role-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_resource_role', type=validate_file_or_dict, help='accessPackageResourceRole '
                   'Expected value: json-string/@json-file.')
        c.argument('access_package_resource_scope', type=validate_file_or_dict, help='accessPackageResourceScope '
                   'Expected value: json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package delete-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package delete-access-package-resource-role-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package delete-ref-access-package-catalog') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package list-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package list-access-package-resource-role-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package set-ref-access-package-catalog') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('body', type=validate_file_or_dict, help='New navigation property ref values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package show-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package show-access-package-catalog') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package show-access-package-resource-role-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package show-ref-access-package-catalog') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package update-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('access_package_id', type=str, help='')
        c.argument('can_extend', arg_type=get_three_state_flag(), help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('duration_in_days', type=int, help='')
        c.argument('expiration_date_time', help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('questions', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('access_package', type=validate_file_or_dict, help='accessPackage Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_catalog', type=validate_file_or_dict, help='accessPackageCatalog Expected value: '
                   'json-string/@json-file.')
        c.argument('accept_requests', arg_type=get_three_state_flag(), help='', arg_group='Requestor Settings')
        c.argument('allowed_requestors', action=AddAllowedRequestors, nargs='+', help='', arg_group='Requestor '
                   'Settings')
        c.argument('scope_type', type=str, help='', arg_group='Requestor Settings')
        c.argument('approval_mode', type=str, help='', arg_group='Request Approval Settings')
        c.argument('approval_stages', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.',
                   arg_group='Request Approval Settings')
        c.argument('is_approval_required', arg_type=get_three_state_flag(), help='', arg_group='Request Approval '
                   'Settings')
        c.argument('is_approval_required_for_extension', arg_type=get_three_state_flag(), help='', arg_group='Request '
                   'Approval Settings')
        c.argument('is_requestor_justification_required', arg_type=get_three_state_flag(), help='', arg_group='Request '
                   'Approval Settings')
        c.argument('integer_duration_in_days', type=int, help='', arg_group='Access Review Settings')
        c.argument('is_enabled', arg_type=get_three_state_flag(), help='', arg_group='Access Review Settings')
        c.argument('recurrence_type', type=str, help='', arg_group='Access Review Settings')
        c.argument('reviewers', action=AddIdentitygovernanceEntitlementmanagementReviewers, nargs='+', help='',
                   arg_group='Access Review Settings')
        c.argument('reviewer_type', type=str, help='', arg_group='Access Review Settings')
        c.argument('start_date_time', help='', arg_group='Access Review Settings')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package update-access-package-resource-role-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_resource_role', type=validate_file_or_dict, help='accessPackageResourceRole '
                   'Expected value: json-string/@json-file.')
        c.argument('access_package_resource_scope', type=validate_file_or_dict, help='accessPackageResourceScope '
                   'Expected value: json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-assignment-policy delete-access-package-catalog') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-assignment-policy delete-ref-access-package') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-assignment-policy set-ref-access-package') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('body', type=validate_file_or_dict, help='New navigation property ref values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-assignment-policy show-access-package') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-assignment-policy show-access-package-catalog') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-assignment-policy show-ref-access-package') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-assignment-policy update-access-package-catalog') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('catalog_status', type=str, help='')
        c.argument('catalog_type', type=str, help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_externally_visible', arg_type=get_three_state_flag(), help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resources', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_packages', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog create-access-package') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('catalog_id', type=str, help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_hidden', arg_type=get_three_state_flag(), help='')
        c.argument('is_role_scopes_visible', arg_type=get_three_state_flag(), help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_assignment_policies', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_catalog', type=validate_file_or_dict, help='accessPackageCatalog Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_role_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog create-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog create-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog delete-access-package') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog delete-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog list-access-package') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog list-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog list-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog show-access-package') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog show-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog show-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog update-access-package') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('catalog_id', type=str, help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_hidden', arg_type=get_three_state_flag(), help='')
        c.argument('is_role_scopes_visible', arg_type=get_three_state_flag(), help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_assignment_policies', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_catalog', type=validate_file_or_dict, help='accessPackageCatalog Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_role_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog update-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog update-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-role delete-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-role show-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-role update-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource create-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_role_id1', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource list-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource show-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_role_id1', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource update-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_role_id1', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource-access-package-resource-scope delete-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource-access-package-resource-scope show-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource-access-package-resource-scope update-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource create-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource list-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource show-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource update-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-access-package-resource-role delete-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-access-package-resource-role show-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-access-package-resource-role update-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-access-package-resource-scope delete-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-access-package-resource-scope show-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-access-package-resource-scope update-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-scope delete-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-scope show-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-scope update-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource create-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_scope_id1', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource list-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource show-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_scope_id1', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource update-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_scope_id1', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource-access-package-resource-role delete-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource-access-package-resource-role show-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource-access-package-resource-role update-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-assignment-policy-access-package-catalog-access-package search') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-resource-role-scope delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-resource-role-scope delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-resource-role-scope show-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-resource-role-scope show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-resource-role-scope update-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-resource-role-scope update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-role delete-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-role show-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-role update-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource create-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource list-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource show-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource update-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource-access-package-resource-scope delete-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource-access-package-resource-scope show-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource-access-package-resource-scope update-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-scope delete-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-scope show-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-scope update-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource create-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource list-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource show-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource update-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource-access-package-resource-role delete-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource-access-package-resource-role show-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource-access-package-resource-role update-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy delete-access-package-catalog') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy delete-ref-access-package') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy set-ref-access-package') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('body', type=validate_file_or_dict, help='New navigation property ref values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy show-access-package') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy show-access-package-catalog') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy show-ref-access-package') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy update-access-package-catalog') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('catalog_status', type=str, help='')
        c.argument('catalog_type', type=str, help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_externally_visible', arg_type=get_three_state_flag(), help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resources', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_packages', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog create-access-package') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('catalog_id', type=str, help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_hidden', arg_type=get_three_state_flag(), help='')
        c.argument('is_role_scopes_visible', arg_type=get_three_state_flag(), help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_assignment_policies', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_catalog', type=validate_file_or_dict, help='accessPackageCatalog Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_role_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog create-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog create-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog delete-access-package') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog delete-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog list-access-package') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog list-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog list-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog show-access-package') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog show-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog show-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog update-access-package') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('catalog_id', type=str, help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_hidden', arg_type=get_three_state_flag(), help='')
        c.argument('is_role_scopes_visible', arg_type=get_three_state_flag(), help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_assignment_policies', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_catalog', type=validate_file_or_dict, help='accessPackageCatalog Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_role_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog update-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog update-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-role delete-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-role show-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-role update-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource create-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_role_id1', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource list-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource show-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_role_id1', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource update-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_role_id1', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource-access-package-resource-scope delete-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource-access-package-resource-scope show-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource-access-package-resource-scope update-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource create-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource list-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource show-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource update-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-access-package-resource-role delete-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-access-package-resource-role show-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-access-package-resource-role update-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-access-package-resource-scope delete-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-access-package-resource-scope show-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-access-package-resource-scope update-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-scope delete-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-scope show-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-scope update-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource create-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_scope_id1', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource list-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource show-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_scope_id1', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource update-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_scope_id1', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource-access-package-resource-role delete-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource-access-package-resource-role show-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource-access-package-resource-role update-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package create-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('microsoft_graph_access_package_assignment_policy_access_package_id_access_package_id', type=str,
                   help='')
        c.argument('can_extend', arg_type=get_three_state_flag(), help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('duration_in_days', type=int, help='')
        c.argument('expiration_date_time', help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('questions', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('access_package', type=validate_file_or_dict, help='accessPackage Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_catalog', type=validate_file_or_dict, help='accessPackageCatalog Expected value: '
                   'json-string/@json-file.')
        c.argument('accept_requests', arg_type=get_three_state_flag(), help='', arg_group='Requestor Settings')
        c.argument('allowed_requestors', action=AddAllowedRequestors, nargs='+', help='', arg_group='Requestor '
                   'Settings')
        c.argument('scope_type', type=str, help='', arg_group='Requestor Settings')
        c.argument('approval_mode', type=str, help='', arg_group='Request Approval Settings')
        c.argument('approval_stages', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.',
                   arg_group='Request Approval Settings')
        c.argument('is_approval_required', arg_type=get_three_state_flag(), help='', arg_group='Request Approval '
                   'Settings')
        c.argument('is_approval_required_for_extension', arg_type=get_three_state_flag(), help='', arg_group='Request '
                   'Approval Settings')
        c.argument('is_requestor_justification_required', arg_type=get_three_state_flag(), help='', arg_group='Request '
                   'Approval Settings')
        c.argument('integer_duration_in_days', type=int, help='', arg_group='Access Review Settings')
        c.argument('is_enabled', arg_type=get_three_state_flag(), help='', arg_group='Access Review Settings')
        c.argument('recurrence_type', type=str, help='', arg_group='Access Review Settings')
        c.argument('reviewers', action=AddIdentitygovernanceEntitlementmanagementReviewers, nargs='+', help='',
                   arg_group='Access Review Settings')
        c.argument('reviewer_type', type=str, help='', arg_group='Access Review Settings')
        c.argument('start_date_time', help='', arg_group='Access Review Settings')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package create-access-package-resource-role-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_resource_role', type=validate_file_or_dict, help='accessPackageResourceRole '
                   'Expected value: json-string/@json-file.')
        c.argument('access_package_resource_scope', type=validate_file_or_dict, help='accessPackageResourceScope '
                   'Expected value: json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package delete-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package delete-access-package-resource-role-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package delete-ref-access-package-catalog') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package list-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package list-access-package-resource-role-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package search') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package set-ref-access-package-catalog') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('body', type=validate_file_or_dict, help='New navigation property ref values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package show-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package show-access-package-catalog') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package show-access-package-resource-role-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package show-ref-access-package-catalog') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package update-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('microsoft_graph_access_package_assignment_policy_access_package_id_access_package_id', type=str,
                   help='')
        c.argument('can_extend', arg_type=get_three_state_flag(), help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('duration_in_days', type=int, help='')
        c.argument('expiration_date_time', help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('questions', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('access_package', type=validate_file_or_dict, help='accessPackage Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_catalog', type=validate_file_or_dict, help='accessPackageCatalog Expected value: '
                   'json-string/@json-file.')
        c.argument('accept_requests', arg_type=get_three_state_flag(), help='', arg_group='Requestor Settings')
        c.argument('allowed_requestors', action=AddAllowedRequestors, nargs='+', help='', arg_group='Requestor '
                   'Settings')
        c.argument('scope_type', type=str, help='', arg_group='Requestor Settings')
        c.argument('approval_mode', type=str, help='', arg_group='Request Approval Settings')
        c.argument('approval_stages', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.',
                   arg_group='Request Approval Settings')
        c.argument('is_approval_required', arg_type=get_three_state_flag(), help='', arg_group='Request Approval '
                   'Settings')
        c.argument('is_approval_required_for_extension', arg_type=get_three_state_flag(), help='', arg_group='Request '
                   'Approval Settings')
        c.argument('is_requestor_justification_required', arg_type=get_three_state_flag(), help='', arg_group='Request '
                   'Approval Settings')
        c.argument('integer_duration_in_days', type=int, help='', arg_group='Access Review Settings')
        c.argument('is_enabled', arg_type=get_three_state_flag(), help='', arg_group='Access Review Settings')
        c.argument('recurrence_type', type=str, help='', arg_group='Access Review Settings')
        c.argument('reviewers', action=AddIdentitygovernanceEntitlementmanagementReviewers, nargs='+', help='',
                   arg_group='Access Review Settings')
        c.argument('reviewer_type', type=str, help='', arg_group='Access Review Settings')
        c.argument('start_date_time', help='', arg_group='Access Review Settings')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package update-access-package-resource-role-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_resource_role', type=validate_file_or_dict, help='accessPackageResourceRole '
                   'Expected value: json-string/@json-file.')
        c.argument('access_package_resource_scope', type=validate_file_or_dict, help='accessPackageResourceScope '
                   'Expected value: json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope show-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope update-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-role delete-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-role show-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-role update-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource create-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource list-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource show-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource update-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource-access-package-resource-scope delete-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource-access-package-resource-scope show-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource-access-package-resource-scope update-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-scope delete-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-scope show-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-scope update-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource create-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource list-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource show-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource update-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource-access-package-resource-role delete-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource-access-package-resource-role show-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-policy-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource-access-package-resource-role update-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-request cancel') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-request delete-access-package-assignment') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-request delete-ref-access-package') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-request delete-requestor') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-request my') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-request set-ref-access-package') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('body', type=validate_file_or_dict, help='New navigation property ref values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-request show-access-package') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-request show-access-package-assignment') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-request show-ref-access-package') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-request show-requestor') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-request update-access-package-assignment') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('access_package_id', type=str, help='')
        c.argument('assignment_policy_id', type=str, help='')
        c.argument('assignment_state', type=str, help='')
        c.argument('assignment_status', type=str, help='')
        c.argument('catalog_id', type=str, help='')
        c.argument('expired_date_time', help='')
        c.argument('is_extended', arg_type=get_three_state_flag(), help='')
        c.argument('target_id', type=str, help='')
        c.argument('access_package', type=validate_file_or_dict, help='accessPackage Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_assignment_policy', type=validate_file_or_dict, help='accessPackageAssignmentPolicy '
                   'Expected value: json-string/@json-file.')
        c.argument('access_package_assignment_requests', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_assignment_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Target')
        c.argument('alt_sec_id', type=str, help='', arg_group='Target')
        c.argument('connected_organization_id', type=str, help='', arg_group='Target')
        c.argument('display_name', type=str, help='', arg_group='Target')
        c.argument('email', type=str, help='', arg_group='Target')
        c.argument('object_id', type=str, help='', arg_group='Target')
        c.argument('on_premises_security_identifier', type=str, help='', arg_group='Target')
        c.argument('principal_name', type=str, help='', arg_group='Target')
        c.argument('type_', options_list=['--type'], type=str, help='', arg_group='Target')
        c.argument('id1', type=str, help='Read-only.', arg_group='Target Connected Organization')
        c.argument('created_by', type=str, help='', arg_group='Target Connected Organization')
        c.argument('created_date_time', help='', arg_group='Target Connected Organization')
        c.argument('description', type=str, help='', arg_group='Target Connected Organization')
        c.argument('microsoft_graph_connected_organization_display_name', type=str, help='', arg_group='Target '
                   'Connected Organization')
        c.argument('identity_sources', action=AddIdentitySources, nargs='+', help=' Expect value: KEY1=VALUE1 '
                   'KEY2=VALUE2 ...', arg_group='Target Connected Organization')
        c.argument('modified_by', type=str, help='', arg_group='Target Connected Organization')
        c.argument('modified_date_time', help='', arg_group='Target Connected Organization')
        c.argument('state', arg_type=get_enum_type(['configured', 'proposed', 'unknownFutureValue']), help='',
                   arg_group='Target Connected Organization')
        c.argument('external_sponsors', action=AddExternalSponsors, nargs='+', help='', arg_group='Target Connected '
                   'Organization')
        c.argument('internal_sponsors', action=AddInternalSponsors, nargs='+', help='', arg_group='Target Connected '
                   'Organization')
        c.argument('expiration', action=AddExpiration, nargs='+', help='expirationPattern', arg_group='Schedule')
        c.argument('recurrence', type=validate_file_or_dict, help='patternedRecurrence Expected value: '
                   'json-string/@json-file.', arg_group='Schedule')
        c.argument('start_date_time', help='', arg_group='Schedule')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-request update-requestor') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('alt_sec_id', type=str, help='')
        c.argument('connected_organization_id', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('email', type=str, help='')
        c.argument('object_id', type=str, help='')
        c.argument('on_premises_security_identifier', type=str, help='')
        c.argument('principal_name', type=str, help='')
        c.argument('type_', options_list=['--type'], type=str, help='')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Connected Organization')
        c.argument('created_by', type=str, help='', arg_group='Connected Organization')
        c.argument('created_date_time', help='', arg_group='Connected Organization')
        c.argument('description', type=str, help='', arg_group='Connected Organization')
        c.argument('microsoft_graph_connected_organization_display_name', type=str, help='', arg_group='Connected '
                   'Organization')
        c.argument('identity_sources', action=AddIdentitySources, nargs='+', help=' Expect value: KEY1=VALUE1 '
                   'KEY2=VALUE2 ...', arg_group='Connected Organization')
        c.argument('modified_by', type=str, help='', arg_group='Connected Organization')
        c.argument('modified_date_time', help='', arg_group='Connected Organization')
        c.argument('state', arg_type=get_enum_type(['configured', 'proposed', 'unknownFutureValue']), help='',
                   arg_group='Connected Organization')
        c.argument('external_sponsors', action=AddExternalSponsors, nargs='+', help='', arg_group='Connected '
                   'Organization')
        c.argument('internal_sponsors', action=AddInternalSponsors, nargs='+', help='', arg_group='Connected '
                   'Organization')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-request-requestor delete-ref-connected-organization') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-request-requestor set-ref-connected-organization') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('body', type=validate_file_or_dict, help='New navigation property ref values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-request-requestor show-connected-organization') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-request-requestor show-ref-connected-organization') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-resource-role create-access-package-assignment') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('access_package_id', type=str, help='')
        c.argument('assignment_policy_id', type=str, help='')
        c.argument('assignment_state', type=str, help='')
        c.argument('assignment_status', type=str, help='')
        c.argument('catalog_id', type=str, help='')
        c.argument('expired_date_time', help='')
        c.argument('is_extended', arg_type=get_three_state_flag(), help='')
        c.argument('target_id', type=str, help='')
        c.argument('access_package', type=validate_file_or_dict, help='accessPackage Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_assignment_policy', type=validate_file_or_dict, help='accessPackageAssignmentPolicy '
                   'Expected value: json-string/@json-file.')
        c.argument('access_package_assignment_requests', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_assignment_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Target')
        c.argument('alt_sec_id', type=str, help='', arg_group='Target')
        c.argument('connected_organization_id', type=str, help='', arg_group='Target')
        c.argument('display_name', type=str, help='', arg_group='Target')
        c.argument('email', type=str, help='', arg_group='Target')
        c.argument('object_id', type=str, help='', arg_group='Target')
        c.argument('on_premises_security_identifier', type=str, help='', arg_group='Target')
        c.argument('principal_name', type=str, help='', arg_group='Target')
        c.argument('type_', options_list=['--type'], type=str, help='', arg_group='Target')
        c.argument('id1', type=str, help='Read-only.', arg_group='Target Connected Organization')
        c.argument('created_by', type=str, help='', arg_group='Target Connected Organization')
        c.argument('created_date_time', help='', arg_group='Target Connected Organization')
        c.argument('description', type=str, help='', arg_group='Target Connected Organization')
        c.argument('microsoft_graph_connected_organization_display_name', type=str, help='', arg_group='Target '
                   'Connected Organization')
        c.argument('identity_sources', action=AddIdentitySources, nargs='+', help=' Expect value: KEY1=VALUE1 '
                   'KEY2=VALUE2 ...', arg_group='Target Connected Organization')
        c.argument('modified_by', type=str, help='', arg_group='Target Connected Organization')
        c.argument('modified_date_time', help='', arg_group='Target Connected Organization')
        c.argument('state', arg_type=get_enum_type(['configured', 'proposed', 'unknownFutureValue']), help='',
                   arg_group='Target Connected Organization')
        c.argument('external_sponsors', action=AddExternalSponsors, nargs='+', help='', arg_group='Target Connected '
                   'Organization')
        c.argument('internal_sponsors', action=AddInternalSponsors, nargs='+', help='', arg_group='Target Connected '
                   'Organization')
        c.argument('expiration', action=AddExpiration, nargs='+', help='expirationPattern', arg_group='Schedule')
        c.argument('recurrence', type=validate_file_or_dict, help='patternedRecurrence Expected value: '
                   'json-string/@json-file.', arg_group='Schedule')
        c.argument('start_date_time', help='', arg_group='Schedule')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-resource-role delete-access-package-assignment') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id1', type=str, help='key: id of accessPackageAssignment')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-resource-role delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-resource-role delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-resource-role delete-access-package-subject') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-resource-role list-access-package-assignment') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-resource-role my') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-resource-role show-access-package-assignment') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id1', type=str, help='key: id of accessPackageAssignment')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-resource-role show-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-resource-role show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-resource-role show-access-package-subject') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-resource-role update-access-package-assignment') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id1', type=str, help='key: id of accessPackageAssignment')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('access_package_id', type=str, help='')
        c.argument('assignment_policy_id', type=str, help='')
        c.argument('assignment_state', type=str, help='')
        c.argument('assignment_status', type=str, help='')
        c.argument('catalog_id', type=str, help='')
        c.argument('expired_date_time', help='')
        c.argument('is_extended', arg_type=get_three_state_flag(), help='')
        c.argument('target_id', type=str, help='')
        c.argument('access_package', type=validate_file_or_dict, help='accessPackage Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_assignment_policy', type=validate_file_or_dict, help='accessPackageAssignmentPolicy '
                   'Expected value: json-string/@json-file.')
        c.argument('access_package_assignment_requests', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_assignment_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Target')
        c.argument('alt_sec_id', type=str, help='', arg_group='Target')
        c.argument('connected_organization_id', type=str, help='', arg_group='Target')
        c.argument('display_name', type=str, help='', arg_group='Target')
        c.argument('email', type=str, help='', arg_group='Target')
        c.argument('object_id', type=str, help='', arg_group='Target')
        c.argument('on_premises_security_identifier', type=str, help='', arg_group='Target')
        c.argument('principal_name', type=str, help='', arg_group='Target')
        c.argument('type_', options_list=['--type'], type=str, help='', arg_group='Target')
        c.argument('id1', type=str, help='Read-only.', arg_group='Target Connected Organization')
        c.argument('created_by', type=str, help='', arg_group='Target Connected Organization')
        c.argument('created_date_time', help='', arg_group='Target Connected Organization')
        c.argument('description', type=str, help='', arg_group='Target Connected Organization')
        c.argument('microsoft_graph_connected_organization_display_name', type=str, help='', arg_group='Target '
                   'Connected Organization')
        c.argument('identity_sources', action=AddIdentitySources, nargs='+', help=' Expect value: KEY1=VALUE1 '
                   'KEY2=VALUE2 ...', arg_group='Target Connected Organization')
        c.argument('modified_by', type=str, help='', arg_group='Target Connected Organization')
        c.argument('modified_date_time', help='', arg_group='Target Connected Organization')
        c.argument('state', arg_type=get_enum_type(['configured', 'proposed', 'unknownFutureValue']), help='',
                   arg_group='Target Connected Organization')
        c.argument('external_sponsors', action=AddExternalSponsors, nargs='+', help='', arg_group='Target Connected '
                   'Organization')
        c.argument('internal_sponsors', action=AddInternalSponsors, nargs='+', help='', arg_group='Target Connected '
                   'Organization')
        c.argument('expiration', action=AddExpiration, nargs='+', help='expirationPattern', arg_group='Schedule')
        c.argument('recurrence', type=validate_file_or_dict, help='patternedRecurrence Expected value: '
                   'json-string/@json-file.', arg_group='Schedule')
        c.argument('start_date_time', help='', arg_group='Schedule')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-resource-role update-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-resource-role update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-resource-role update-access-package-subject') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('alt_sec_id', type=str, help='')
        c.argument('connected_organization_id', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('email', type=str, help='')
        c.argument('object_id', type=str, help='')
        c.argument('on_premises_security_identifier', type=str, help='')
        c.argument('principal_name', type=str, help='')
        c.argument('type_', options_list=['--type'], type=str, help='')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Connected Organization')
        c.argument('created_by', type=str, help='', arg_group='Connected Organization')
        c.argument('created_date_time', help='', arg_group='Connected Organization')
        c.argument('description', type=str, help='', arg_group='Connected Organization')
        c.argument('microsoft_graph_connected_organization_display_name', type=str, help='', arg_group='Connected '
                   'Organization')
        c.argument('identity_sources', action=AddIdentitySources, nargs='+', help=' Expect value: KEY1=VALUE1 '
                   'KEY2=VALUE2 ...', arg_group='Connected Organization')
        c.argument('modified_by', type=str, help='', arg_group='Connected Organization')
        c.argument('modified_date_time', help='', arg_group='Connected Organization')
        c.argument('state', arg_type=get_enum_type(['configured', 'proposed', 'unknownFutureValue']), help='',
                   arg_group='Connected Organization')
        c.argument('external_sponsors', action=AddExternalSponsors, nargs='+', help='', arg_group='Connected '
                   'Organization')
        c.argument('internal_sponsors', action=AddInternalSponsors, nargs='+', help='', arg_group='Connected '
                   'Organization')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-resource-role-access-package-assignment my') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-resource-role-access-package-resource-role delete-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-resource-role-access-package-resource-role show-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-resource-role-access-package-resource-role update-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-resource-role-access-package-resource-role-access-package-resource create-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-resource-role-access-package-resource-role-access-package-resource create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-resource-role-access-package-resource-role-access-package-resource delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-resource-role-access-package-resource-role-access-package-resource delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-resource-role-access-package-resource-role-access-package-resource list-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-resource-role-access-package-resource-role-access-package-resource list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-resource-role-access-package-resource-role-access-package-resource show-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-resource-role-access-package-resource-role-access-package-resource show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-resource-role-access-package-resource-role-access-package-resource update-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-resource-role-access-package-resource-role-access-package-resource update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-resource-role-access-package-resource-role-access-package-resource-access-package-resource-scope delete-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-resource-role-access-package-resource-role-access-package-resource-access-package-resource-scope show-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-resource-role-access-package-resource-role-access-package-resource-access-package-resource-scope update-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-resource-role-access-package-resource-scope delete-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-resource-role-access-package-resource-scope show-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-resource-role-access-package-resource-scope update-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-resource-role-access-package-resource-scope-access-package-resource create-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-resource-role-access-package-resource-scope-access-package-resource create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-resource-role-access-package-resource-scope-access-package-resource delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-resource-role-access-package-resource-scope-access-package-resource delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-resource-role-access-package-resource-scope-access-package-resource list-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-resource-role-access-package-resource-scope-access-package-resource list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-resource-role-access-package-resource-scope-access-package-resource show-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-resource-role-access-package-resource-scope-access-package-resource show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-resource-role-access-package-resource-scope-access-package-resource update-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-resource-role-access-package-resource-scope-access-package-resource update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-resource-role-access-package-resource-scope-access-package-resource-access-package-resource-role delete-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-resource-role-access-package-resource-scope-access-package-resource-access-package-resource-role show-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-resource-role-access-package-resource-scope-access-package-resource-access-package-resource-role update-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-resource-role-access-package-subject delete-ref-connected-organization') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-resource-role-access-package-subject set-ref-connected-organization') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('body', type=validate_file_or_dict, help='New navigation property ref values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-resource-role-access-package-subject show-connected-organization') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-access-package-assignment-resource-role-access-package-subject show-ref-connected-organization') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-target delete-ref-connected-organization') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-target set-ref-connected-organization') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('body', type=validate_file_or_dict, help='New navigation property ref values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-target show-connected-organization') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-assignment-target show-ref-connected-organization') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog create-access-package') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('catalog_id', type=str, help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_hidden', arg_type=get_three_state_flag(), help='')
        c.argument('is_role_scopes_visible', arg_type=get_three_state_flag(), help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_assignment_policies', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_catalog', type=validate_file_or_dict, help='accessPackageCatalog Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_role_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog create-access-package-resource') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog create-access-package-resource-role') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog create-access-package-resource-scope') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog delete-access-package') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog delete-access-package-resource') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog delete-access-package-resource-role') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog delete-access-package-resource-scope') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog list-access-package') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog list-access-package-resource') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog list-access-package-resource-role') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog list-access-package-resource-scope') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog show-access-package') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog show-access-package-resource') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog show-access-package-resource-role') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog show-access-package-resource-scope') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog update-access-package') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('catalog_id', type=str, help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_hidden', arg_type=get_three_state_flag(), help='')
        c.argument('is_role_scopes_visible', arg_type=get_three_state_flag(), help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_assignment_policies', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_catalog', type=validate_file_or_dict, help='accessPackageCatalog Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_role_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog update-access-package-resource') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog update-access-package-resource-role') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog update-access-package-resource-scope') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-resource-role delete-access-package-resource') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-resource-role show-access-package-resource') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-resource-role update-access-package-resource') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-resource-role-access-package-resource create-access-package-resource-role') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-resource-role-access-package-resource create-access-package-resource-scope') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-resource-role-access-package-resource delete-access-package-resource-role') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_role_id1', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-resource-role-access-package-resource delete-access-package-resource-scope') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-resource-role-access-package-resource list-access-package-resource-role') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-resource-role-access-package-resource list-access-package-resource-scope') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-resource-role-access-package-resource show-access-package-resource-role') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_role_id1', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-resource-role-access-package-resource show-access-package-resource-scope') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-resource-role-access-package-resource update-access-package-resource-role') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_role_id1', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-resource-role-access-package-resource update-access-package-resource-scope') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-resource-role-access-package-resource-access-package-resource-scope delete-access-package-resource') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-resource-role-access-package-resource-access-package-resource-scope show-access-package-resource') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-resource-role-access-package-resource-access-package-resource-scope update-access-package-resource') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-resource create-access-package-resource-role') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-resource create-access-package-resource-scope') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-resource delete-access-package-resource-role') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-resource delete-access-package-resource-scope') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-resource list-access-package-resource-role') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-resource list-access-package-resource-scope') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-resource show-access-package-resource-role') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-resource show-access-package-resource-scope') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-resource update-access-package-resource-role') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-resource update-access-package-resource-scope') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-resource-access-package-resource-role delete-access-package-resource') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-resource-access-package-resource-role show-access-package-resource') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-resource-access-package-resource-role update-access-package-resource') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-resource-access-package-resource-scope delete-access-package-resource') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-resource-access-package-resource-scope show-access-package-resource') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-resource-access-package-resource-scope update-access-package-resource') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-resource-scope delete-access-package-resource') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-resource-scope show-access-package-resource') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-resource-scope update-access-package-resource') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-resource-scope-access-package-resource create-access-package-resource-role') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-resource-scope-access-package-resource create-access-package-resource-scope') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-resource-scope-access-package-resource delete-access-package-resource-role') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-resource-scope-access-package-resource delete-access-package-resource-scope') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_scope_id1', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-resource-scope-access-package-resource list-access-package-resource-role') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-resource-scope-access-package-resource list-access-package-resource-scope') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-resource-scope-access-package-resource show-access-package-resource-role') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-resource-scope-access-package-resource show-access-package-resource-scope') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_scope_id1', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-resource-scope-access-package-resource update-access-package-resource-role') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-resource-scope-access-package-resource update-access-package-resource-scope') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_scope_id1', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-resource-scope-access-package-resource-access-package-resource-role delete-access-package-resource') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-resource-scope-access-package-resource-access-package-resource-role show-access-package-resource') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-resource-scope-access-package-resource-access-package-resource-role update-access-package-resource') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package create-access-package-assignment-policy') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('microsoft_graph_access_package_assignment_policy_access_package_id_access_package_id', type=str,
                   help='')
        c.argument('can_extend', arg_type=get_three_state_flag(), help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('duration_in_days', type=int, help='')
        c.argument('expiration_date_time', help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('questions', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('access_package', type=validate_file_or_dict, help='accessPackage Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_catalog', type=validate_file_or_dict, help='accessPackageCatalog Expected value: '
                   'json-string/@json-file.')
        c.argument('accept_requests', arg_type=get_three_state_flag(), help='', arg_group='Requestor Settings')
        c.argument('allowed_requestors', action=AddAllowedRequestors, nargs='+', help='', arg_group='Requestor '
                   'Settings')
        c.argument('scope_type', type=str, help='', arg_group='Requestor Settings')
        c.argument('approval_mode', type=str, help='', arg_group='Request Approval Settings')
        c.argument('approval_stages', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.',
                   arg_group='Request Approval Settings')
        c.argument('is_approval_required', arg_type=get_three_state_flag(), help='', arg_group='Request Approval '
                   'Settings')
        c.argument('is_approval_required_for_extension', arg_type=get_three_state_flag(), help='', arg_group='Request '
                   'Approval Settings')
        c.argument('is_requestor_justification_required', arg_type=get_three_state_flag(), help='', arg_group='Request '
                   'Approval Settings')
        c.argument('integer_duration_in_days', type=int, help='', arg_group='Access Review Settings')
        c.argument('is_enabled', arg_type=get_three_state_flag(), help='', arg_group='Access Review Settings')
        c.argument('recurrence_type', type=str, help='', arg_group='Access Review Settings')
        c.argument('reviewers', action=AddIdentitygovernanceEntitlementmanagementReviewers, nargs='+', help='',
                   arg_group='Access Review Settings')
        c.argument('reviewer_type', type=str, help='', arg_group='Access Review Settings')
        c.argument('start_date_time', help='', arg_group='Access Review Settings')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package create-access-package-resource-role-scope') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_resource_role', type=validate_file_or_dict, help='accessPackageResourceRole '
                   'Expected value: json-string/@json-file.')
        c.argument('access_package_resource_scope', type=validate_file_or_dict, help='accessPackageResourceScope '
                   'Expected value: json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package delete-access-package-assignment-policy') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package delete-access-package-resource-role-scope') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package delete-ref-access-package-catalog') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package list-access-package-assignment-policy') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package list-access-package-resource-role-scope') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package search') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package set-ref-access-package-catalog') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('body', type=validate_file_or_dict, help='New navigation property ref values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package show-access-package-assignment-policy') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package show-access-package-catalog') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package show-access-package-resource-role-scope') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package show-ref-access-package-catalog') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package update-access-package-assignment-policy') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('microsoft_graph_access_package_assignment_policy_access_package_id_access_package_id', type=str,
                   help='')
        c.argument('can_extend', arg_type=get_three_state_flag(), help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('duration_in_days', type=int, help='')
        c.argument('expiration_date_time', help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('questions', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('access_package', type=validate_file_or_dict, help='accessPackage Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_catalog', type=validate_file_or_dict, help='accessPackageCatalog Expected value: '
                   'json-string/@json-file.')
        c.argument('accept_requests', arg_type=get_three_state_flag(), help='', arg_group='Requestor Settings')
        c.argument('allowed_requestors', action=AddAllowedRequestors, nargs='+', help='', arg_group='Requestor '
                   'Settings')
        c.argument('scope_type', type=str, help='', arg_group='Requestor Settings')
        c.argument('approval_mode', type=str, help='', arg_group='Request Approval Settings')
        c.argument('approval_stages', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.',
                   arg_group='Request Approval Settings')
        c.argument('is_approval_required', arg_type=get_three_state_flag(), help='', arg_group='Request Approval '
                   'Settings')
        c.argument('is_approval_required_for_extension', arg_type=get_three_state_flag(), help='', arg_group='Request '
                   'Approval Settings')
        c.argument('is_requestor_justification_required', arg_type=get_three_state_flag(), help='', arg_group='Request '
                   'Approval Settings')
        c.argument('integer_duration_in_days', type=int, help='', arg_group='Access Review Settings')
        c.argument('is_enabled', arg_type=get_three_state_flag(), help='', arg_group='Access Review Settings')
        c.argument('recurrence_type', type=str, help='', arg_group='Access Review Settings')
        c.argument('reviewers', action=AddIdentitygovernanceEntitlementmanagementReviewers, nargs='+', help='',
                   arg_group='Access Review Settings')
        c.argument('reviewer_type', type=str, help='', arg_group='Access Review Settings')
        c.argument('start_date_time', help='', arg_group='Access Review Settings')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package update-access-package-resource-role-scope') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_resource_role', type=validate_file_or_dict, help='accessPackageResourceRole '
                   'Expected value: json-string/@json-file.')
        c.argument('access_package_resource_scope', type=validate_file_or_dict, help='accessPackageResourceScope '
                   'Expected value: json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-access-package-assignment-policy delete-access-package-catalog') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-access-package-assignment-policy delete-ref-access-package') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-access-package-assignment-policy set-ref-access-package') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('body', type=validate_file_or_dict, help='New navigation property ref values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-access-package-assignment-policy show-access-package') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-access-package-assignment-policy show-access-package-catalog') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-access-package-assignment-policy show-ref-access-package') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-access-package-assignment-policy update-access-package-catalog') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('catalog_status', type=str, help='')
        c.argument('catalog_type', type=str, help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_externally_visible', arg_type=get_three_state_flag(), help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resources', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_packages', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-access-package-resource-role-scope delete-access-package-resource-role') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-access-package-resource-role-scope delete-access-package-resource-scope') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-access-package-resource-role-scope show-access-package-resource-role') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-access-package-resource-role-scope show-access-package-resource-scope') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-access-package-resource-role-scope update-access-package-resource-role') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-access-package-resource-role-scope update-access-package-resource-scope') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-role delete-access-package-resource') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-role show-access-package-resource') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-role update-access-package-resource') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource create-access-package-resource-role') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource create-access-package-resource-scope') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource delete-access-package-resource-role') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource delete-access-package-resource-scope') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource list-access-package-resource-role') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource list-access-package-resource-scope') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource show-access-package-resource-role') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource show-access-package-resource-scope') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource update-access-package-resource-role') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource update-access-package-resource-scope') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource-access-package-resource-scope delete-access-package-resource') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource-access-package-resource-scope show-access-package-resource') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource-access-package-resource-scope update-access-package-resource') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-scope delete-access-package-resource') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-scope show-access-package-resource') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-scope update-access-package-resource') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource create-access-package-resource-role') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource create-access-package-resource-scope') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource delete-access-package-resource-role') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource delete-access-package-resource-scope') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource list-access-package-resource-role') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource list-access-package-resource-scope') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource show-access-package-resource-role') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource show-access-package-resource-scope') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource update-access-package-resource-role') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource update-access-package-resource-scope') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource-access-package-resource-role delete-access-package-resource') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource-access-package-resource-role show-access-package-resource') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-catalog-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource-access-package-resource-role update-access-package-resource') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-resource-request delete-ref-access-package-resource') as c:
        c.argument('access_package_resource_request_id', type=str, help='key: id of accessPackageResourceRequest')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-resource-request delete-requestor') as c:
        c.argument('access_package_resource_request_id', type=str, help='key: id of accessPackageResourceRequest')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-resource-request set-ref-access-package-resource') as c:
        c.argument('access_package_resource_request_id', type=str, help='key: id of accessPackageResourceRequest')
        c.argument('body', type=validate_file_or_dict, help='New navigation property ref values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-resource-request show-access-package-resource') as c:
        c.argument('access_package_resource_request_id', type=str, help='key: id of accessPackageResourceRequest')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-resource-request show-ref-access-package-resource') as c:
        c.argument('access_package_resource_request_id', type=str, help='key: id of accessPackageResourceRequest')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-resource-request show-requestor') as c:
        c.argument('access_package_resource_request_id', type=str, help='key: id of accessPackageResourceRequest')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-resource-request update-requestor') as c:
        c.argument('access_package_resource_request_id', type=str, help='key: id of accessPackageResourceRequest')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('alt_sec_id', type=str, help='')
        c.argument('connected_organization_id', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('email', type=str, help='')
        c.argument('object_id', type=str, help='')
        c.argument('on_premises_security_identifier', type=str, help='')
        c.argument('principal_name', type=str, help='')
        c.argument('type_', options_list=['--type'], type=str, help='')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Connected Organization')
        c.argument('created_by', type=str, help='', arg_group='Connected Organization')
        c.argument('created_date_time', help='', arg_group='Connected Organization')
        c.argument('description', type=str, help='', arg_group='Connected Organization')
        c.argument('microsoft_graph_connected_organization_display_name', type=str, help='', arg_group='Connected '
                   'Organization')
        c.argument('identity_sources', action=AddIdentitySources, nargs='+', help=' Expect value: KEY1=VALUE1 '
                   'KEY2=VALUE2 ...', arg_group='Connected Organization')
        c.argument('modified_by', type=str, help='', arg_group='Connected Organization')
        c.argument('modified_date_time', help='', arg_group='Connected Organization')
        c.argument('state', arg_type=get_enum_type(['configured', 'proposed', 'unknownFutureValue']), help='',
                   arg_group='Connected Organization')
        c.argument('external_sponsors', action=AddExternalSponsors, nargs='+', help='', arg_group='Connected '
                   'Organization')
        c.argument('internal_sponsors', action=AddInternalSponsors, nargs='+', help='', arg_group='Connected '
                   'Organization')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-resource-request-requestor delete-ref-connected-organization') as c:
        c.argument('access_package_resource_request_id', type=str, help='key: id of accessPackageResourceRequest')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-resource-request-requestor set-ref-connected-organization') as c:
        c.argument('access_package_resource_request_id', type=str, help='key: id of accessPackageResourceRequest')
        c.argument('body', type=validate_file_or_dict, help='New navigation property ref values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-resource-request-requestor show-connected-organization') as c:
        c.argument('access_package_resource_request_id', type=str, help='key: id of accessPackageResourceRequest')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-resource-request-requestor show-ref-connected-organization') as c:
        c.argument('access_package_resource_request_id', type=str, help='key: id of accessPackageResourceRequest')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-resource-role-scope delete-access-package-resource-role') as c:
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-resource-role-scope delete-access-package-resource-scope') as c:
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-resource-role-scope show-access-package-resource-role') as c:
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-resource-role-scope show-access-package-resource-scope') as c:
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-resource-role-scope update-access-package-resource-role') as c:
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-resource-role-scope update-access-package-resource-scope') as c:
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-resource-role-scope-access-package-resource-role delete-access-package-resource') as c:
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-resource-role-scope-access-package-resource-role show-access-package-resource') as c:
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-resource-role-scope-access-package-resource-role update-access-package-resource') as c:
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-resource-role-scope-access-package-resource-role-access-package-resource create-access-package-resource-role') as c:
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-resource-role-scope-access-package-resource-role-access-package-resource create-access-package-resource-scope') as c:
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-resource-role-scope-access-package-resource-role-access-package-resource delete-access-package-resource-role') as c:
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-resource-role-scope-access-package-resource-role-access-package-resource delete-access-package-resource-scope') as c:
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-resource-role-scope-access-package-resource-role-access-package-resource list-access-package-resource-role') as c:
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-resource-role-scope-access-package-resource-role-access-package-resource list-access-package-resource-scope') as c:
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-resource-role-scope-access-package-resource-role-access-package-resource show-access-package-resource-role') as c:
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-resource-role-scope-access-package-resource-role-access-package-resource show-access-package-resource-scope') as c:
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-resource-role-scope-access-package-resource-role-access-package-resource update-access-package-resource-role') as c:
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-resource-role-scope-access-package-resource-role-access-package-resource update-access-package-resource-scope') as c:
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-resource-role-scope-access-package-resource-role-access-package-resource-access-package-resource-scope delete-access-package-resource') as c:
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-resource-role-scope-access-package-resource-role-access-package-resource-access-package-resource-scope show-access-package-resource') as c:
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-resource-role-scope-access-package-resource-role-access-package-resource-access-package-resource-scope update-access-package-resource') as c:
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-resource-role-scope-access-package-resource-scope delete-access-package-resource') as c:
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-resource-role-scope-access-package-resource-scope show-access-package-resource') as c:
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-resource-role-scope-access-package-resource-scope update-access-package-resource') as c:
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-resource-role-scope-access-package-resource-scope-access-package-resource create-access-package-resource-role') as c:
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-resource-role-scope-access-package-resource-scope-access-package-resource create-access-package-resource-scope') as c:
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-resource-role-scope-access-package-resource-scope-access-package-resource delete-access-package-resource-role') as c:
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-resource-role-scope-access-package-resource-scope-access-package-resource delete-access-package-resource-scope') as c:
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-resource-role-scope-access-package-resource-scope-access-package-resource list-access-package-resource-role') as c:
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-resource-role-scope-access-package-resource-scope-access-package-resource list-access-package-resource-scope') as c:
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-resource-role-scope-access-package-resource-scope-access-package-resource show-access-package-resource-role') as c:
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-resource-role-scope-access-package-resource-scope-access-package-resource show-access-package-resource-scope') as c:
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-resource-role-scope-access-package-resource-scope-access-package-resource update-access-package-resource-role') as c:
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-resource-role-scope-access-package-resource-scope-access-package-resource update-access-package-resource-scope') as c:
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-resource-role-scope-access-package-resource-scope-access-package-resource-access-package-resource-role delete-access-package-resource') as c:
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-resource-role-scope-access-package-resource-scope-access-package-resource-access-package-resource-role show-access-package-resource') as c:
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-resource-role-scope-access-package-resource-scope-access-package-resource-access-package-resource-role update-access-package-resource') as c:
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-resource create-access-package-resource-role') as c:
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-resource create-access-package-resource-scope') as c:
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-resource delete-access-package-resource-role') as c:
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-resource delete-access-package-resource-scope') as c:
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-resource list-access-package-resource-role') as c:
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-resource list-access-package-resource-scope') as c:
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-resource show-access-package-resource-role') as c:
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-resource show-access-package-resource-scope') as c:
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-resource update-access-package-resource-role') as c:
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-resource update-access-package-resource-scope') as c:
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-resource-access-package-resource-role delete-access-package-resource') as c:
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-resource-access-package-resource-role show-access-package-resource') as c:
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-resource-access-package-resource-role update-access-package-resource') as c:
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-resource-access-package-resource-scope delete-access-package-resource') as c:
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-resource-access-package-resource-scope show-access-package-resource') as c:
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-resource-access-package-resource-scope update-access-package-resource') as c:
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package create-access-package-assignment-policy') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('microsoft_graph_access_package_assignment_policy_access_package_id_access_package_id', type=str,
                   help='')
        c.argument('can_extend', arg_type=get_three_state_flag(), help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('duration_in_days', type=int, help='')
        c.argument('expiration_date_time', help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('questions', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('access_package', type=validate_file_or_dict, help='accessPackage Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_catalog', type=validate_file_or_dict, help='accessPackageCatalog Expected value: '
                   'json-string/@json-file.')
        c.argument('accept_requests', arg_type=get_three_state_flag(), help='', arg_group='Requestor Settings')
        c.argument('allowed_requestors', action=AddAllowedRequestors, nargs='+', help='', arg_group='Requestor '
                   'Settings')
        c.argument('scope_type', type=str, help='', arg_group='Requestor Settings')
        c.argument('approval_mode', type=str, help='', arg_group='Request Approval Settings')
        c.argument('approval_stages', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.',
                   arg_group='Request Approval Settings')
        c.argument('is_approval_required', arg_type=get_three_state_flag(), help='', arg_group='Request Approval '
                   'Settings')
        c.argument('is_approval_required_for_extension', arg_type=get_three_state_flag(), help='', arg_group='Request '
                   'Approval Settings')
        c.argument('is_requestor_justification_required', arg_type=get_three_state_flag(), help='', arg_group='Request '
                   'Approval Settings')
        c.argument('integer_duration_in_days', type=int, help='', arg_group='Access Review Settings')
        c.argument('is_enabled', arg_type=get_three_state_flag(), help='', arg_group='Access Review Settings')
        c.argument('recurrence_type', type=str, help='', arg_group='Access Review Settings')
        c.argument('reviewers', action=AddIdentitygovernanceEntitlementmanagementReviewers, nargs='+', help='',
                   arg_group='Access Review Settings')
        c.argument('reviewer_type', type=str, help='', arg_group='Access Review Settings')
        c.argument('start_date_time', help='', arg_group='Access Review Settings')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package create-access-package-resource-role-scope') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_resource_role', type=validate_file_or_dict, help='accessPackageResourceRole '
                   'Expected value: json-string/@json-file.')
        c.argument('access_package_resource_scope', type=validate_file_or_dict, help='accessPackageResourceScope '
                   'Expected value: json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package delete-access-package-assignment-policy') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package delete-access-package-resource-role-scope') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package delete-ref-access-package-catalog') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package list-access-package-assignment-policy') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package list-access-package-resource-role-scope') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package set-ref-access-package-catalog') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('body', type=validate_file_or_dict, help='New navigation property ref values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package show-access-package-assignment-policy') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package show-access-package-catalog') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package show-access-package-resource-role-scope') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package show-ref-access-package-catalog') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package update-access-package-assignment-policy') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('microsoft_graph_access_package_assignment_policy_access_package_id_access_package_id', type=str,
                   help='')
        c.argument('can_extend', arg_type=get_three_state_flag(), help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('duration_in_days', type=int, help='')
        c.argument('expiration_date_time', help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('questions', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('access_package', type=validate_file_or_dict, help='accessPackage Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_catalog', type=validate_file_or_dict, help='accessPackageCatalog Expected value: '
                   'json-string/@json-file.')
        c.argument('accept_requests', arg_type=get_three_state_flag(), help='', arg_group='Requestor Settings')
        c.argument('allowed_requestors', action=AddAllowedRequestors, nargs='+', help='', arg_group='Requestor '
                   'Settings')
        c.argument('scope_type', type=str, help='', arg_group='Requestor Settings')
        c.argument('approval_mode', type=str, help='', arg_group='Request Approval Settings')
        c.argument('approval_stages', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.',
                   arg_group='Request Approval Settings')
        c.argument('is_approval_required', arg_type=get_three_state_flag(), help='', arg_group='Request Approval '
                   'Settings')
        c.argument('is_approval_required_for_extension', arg_type=get_three_state_flag(), help='', arg_group='Request '
                   'Approval Settings')
        c.argument('is_requestor_justification_required', arg_type=get_three_state_flag(), help='', arg_group='Request '
                   'Approval Settings')
        c.argument('integer_duration_in_days', type=int, help='', arg_group='Access Review Settings')
        c.argument('is_enabled', arg_type=get_three_state_flag(), help='', arg_group='Access Review Settings')
        c.argument('recurrence_type', type=str, help='', arg_group='Access Review Settings')
        c.argument('reviewers', action=AddIdentitygovernanceEntitlementmanagementReviewers, nargs='+', help='',
                   arg_group='Access Review Settings')
        c.argument('reviewer_type', type=str, help='', arg_group='Access Review Settings')
        c.argument('start_date_time', help='', arg_group='Access Review Settings')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package update-access-package-resource-role-scope') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_resource_role', type=validate_file_or_dict, help='accessPackageResourceRole '
                   'Expected value: json-string/@json-file.')
        c.argument('access_package_resource_scope', type=validate_file_or_dict, help='accessPackageResourceScope '
                   'Expected value: json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-assignment-policy delete-access-package-catalog') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-assignment-policy delete-ref-access-package') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-assignment-policy set-ref-access-package') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('body', type=validate_file_or_dict, help='New navigation property ref values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-assignment-policy show-access-package') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-assignment-policy show-access-package-catalog') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-assignment-policy show-ref-access-package') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-assignment-policy update-access-package-catalog') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('catalog_status', type=str, help='')
        c.argument('catalog_type', type=str, help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_externally_visible', arg_type=get_three_state_flag(), help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resources', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_packages', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-assignment-policy-access-package-catalog create-access-package') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('catalog_id', type=str, help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_hidden', arg_type=get_three_state_flag(), help='')
        c.argument('is_role_scopes_visible', arg_type=get_three_state_flag(), help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_assignment_policies', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_catalog', type=validate_file_or_dict, help='accessPackageCatalog Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_role_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-assignment-policy-access-package-catalog create-access-package-resource') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-assignment-policy-access-package-catalog create-access-package-resource-role') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-assignment-policy-access-package-catalog create-access-package-resource-scope') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-assignment-policy-access-package-catalog delete-access-package') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id1', type=str, help='key: id of accessPackage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-assignment-policy-access-package-catalog delete-access-package-resource') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-assignment-policy-access-package-catalog delete-access-package-resource-role') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-assignment-policy-access-package-catalog delete-access-package-resource-scope') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-assignment-policy-access-package-catalog list-access-package') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-assignment-policy-access-package-catalog list-access-package-resource') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-assignment-policy-access-package-catalog list-access-package-resource-role') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-assignment-policy-access-package-catalog list-access-package-resource-scope') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-assignment-policy-access-package-catalog show-access-package') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id1', type=str, help='key: id of accessPackage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-assignment-policy-access-package-catalog show-access-package-resource') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-assignment-policy-access-package-catalog show-access-package-resource-role') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-assignment-policy-access-package-catalog show-access-package-resource-scope') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-assignment-policy-access-package-catalog update-access-package') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id1', type=str, help='key: id of accessPackage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('catalog_id', type=str, help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_hidden', arg_type=get_three_state_flag(), help='')
        c.argument('is_role_scopes_visible', arg_type=get_three_state_flag(), help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_assignment_policies', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_catalog', type=validate_file_or_dict, help='accessPackageCatalog Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_role_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-assignment-policy-access-package-catalog update-access-package-resource') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-assignment-policy-access-package-catalog update-access-package-resource-role') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-assignment-policy-access-package-catalog update-access-package-resource-scope') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-role delete-access-package-resource') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-role show-access-package-resource') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-role update-access-package-resource') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource create-access-package-resource-role') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource create-access-package-resource-scope') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource delete-access-package-resource-role') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_role_id1', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource delete-access-package-resource-scope') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource list-access-package-resource-role') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource list-access-package-resource-scope') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource show-access-package-resource-role') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_role_id1', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource show-access-package-resource-scope') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource update-access-package-resource-role') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_role_id1', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource update-access-package-resource-scope') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource-access-package-resource-scope delete-access-package-resource') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource-access-package-resource-scope show-access-package-resource') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-role-access-package-resource-access-package-resource-scope update-access-package-resource') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource create-access-package-resource-role') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource create-access-package-resource-scope') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource delete-access-package-resource-role') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource delete-access-package-resource-scope') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource list-access-package-resource-role') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource list-access-package-resource-scope') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource show-access-package-resource-role') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource show-access-package-resource-scope') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource update-access-package-resource-role') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource update-access-package-resource-scope') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-access-package-resource-role delete-access-package-resource') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-access-package-resource-role show-access-package-resource') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-access-package-resource-role update-access-package-resource') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-access-package-resource-scope delete-access-package-resource') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-access-package-resource-scope show-access-package-resource') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-access-package-resource-scope update-access-package-resource') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-scope delete-access-package-resource') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-scope show-access-package-resource') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-scope update-access-package-resource') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource create-access-package-resource-role') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource create-access-package-resource-scope') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource delete-access-package-resource-role') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource delete-access-package-resource-scope') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_scope_id1', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource list-access-package-resource-role') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource list-access-package-resource-scope') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource show-access-package-resource-role') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource show-access-package-resource-scope') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_scope_id1', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource update-access-package-resource-role') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource update-access-package-resource-scope') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_scope_id1', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource-access-package-resource-role delete-access-package-resource') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource-access-package-resource-role show-access-package-resource') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-assignment-policy-access-package-catalog-access-package-resource-scope-access-package-resource-access-package-resource-role update-access-package-resource') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-assignment-policy-access-package-catalog-access-package search') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-resource-role-scope delete-access-package-resource-role') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-resource-role-scope delete-access-package-resource-scope') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-resource-role-scope show-access-package-resource-role') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-resource-role-scope show-access-package-resource-scope') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-resource-role-scope update-access-package-resource-role') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-resource-role-scope update-access-package-resource-scope') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-resource-role-scope-access-package-resource-role delete-access-package-resource') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-resource-role-scope-access-package-resource-role show-access-package-resource') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-resource-role-scope-access-package-resource-role update-access-package-resource') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource create-access-package-resource-role') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource create-access-package-resource-scope') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource delete-access-package-resource-role') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource delete-access-package-resource-scope') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource list-access-package-resource-role') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource list-access-package-resource-scope') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource show-access-package-resource-role') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource show-access-package-resource-scope') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource update-access-package-resource-role') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource update-access-package-resource-scope') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource-access-package-resource-scope delete-access-package-resource') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource-access-package-resource-scope show-access-package-resource') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-resource-role-scope-access-package-resource-role-access-package-resource-access-package-resource-scope update-access-package-resource') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-resource-role-scope-access-package-resource-scope delete-access-package-resource') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-resource-role-scope-access-package-resource-scope show-access-package-resource') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-resource-role-scope-access-package-resource-scope update-access-package-resource') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource create-access-package-resource-role') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource create-access-package-resource-scope') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource delete-access-package-resource-role') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource delete-access-package-resource-scope') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource list-access-package-resource-role') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource list-access-package-resource-scope') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource show-access-package-resource-role') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource show-access-package-resource-scope') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource update-access-package-resource-role') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource update-access-package-resource-scope') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource-access-package-resource-role delete-access-package-resource') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource-access-package-resource-role show-access-package-resource') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-access-package-access-package-resource-role-scope-access-package-resource-scope-access-package-resource-access-package-resource-role update-access-package-resource') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-connected-organization create-external-sponsor') as c:
        c.argument('connected_organization_id', type=str, help='key: id of connectedOrganization')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('deleted_date_time', help='')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-connected-organization create-internal-sponsor') as c:
        c.argument('connected_organization_id', type=str, help='key: id of connectedOrganization')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('deleted_date_time', help='')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-connected-organization delete-external-sponsor') as c:
        c.argument('connected_organization_id', type=str, help='key: id of connectedOrganization')
        c.argument('directory_object_id', type=str, help='key: id of directoryObject')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-connected-organization delete-internal-sponsor') as c:
        c.argument('connected_organization_id', type=str, help='key: id of connectedOrganization')
        c.argument('directory_object_id', type=str, help='key: id of directoryObject')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-connected-organization list-external-sponsor') as c:
        c.argument('connected_organization_id', type=str, help='key: id of connectedOrganization')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-connected-organization list-internal-sponsor') as c:
        c.argument('connected_organization_id', type=str, help='key: id of connectedOrganization')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-connected-organization show-external-sponsor') as c:
        c.argument('connected_organization_id', type=str, help='key: id of connectedOrganization')
        c.argument('directory_object_id', type=str, help='key: id of directoryObject')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-connected-organization show-internal-sponsor') as c:
        c.argument('connected_organization_id', type=str, help='key: id of connectedOrganization')
        c.argument('directory_object_id', type=str, help='key: id of directoryObject')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-connected-organization update-external-sponsor') as c:
        c.argument('connected_organization_id', type=str, help='key: id of connectedOrganization')
        c.argument('directory_object_id', type=str, help='key: id of directoryObject')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('deleted_date_time', help='')

    with self.argument_context('identitygovernance identity-governance-entitlement-management-connected-organization update-internal-sponsor') as c:
        c.argument('connected_organization_id', type=str, help='key: id of connectedOrganization')
        c.argument('directory_object_id', type=str, help='key: id of directoryObject')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('deleted_date_time', help='')

    with self.argument_context('identitygovernance privileged-access-privileged-access create-privileged-access') as c:
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('display_name', type=str, help='')
        c.argument('resources', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('role_assignment_requests', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('role_assignments', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('role_definitions', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('role_settings', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')

    with self.argument_context('identitygovernance privileged-access-privileged-access delete-privileged-access') as c:
        c.argument('privileged_access_id', type=str, help='key: id of privilegedAccess')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance privileged-access-privileged-access list-privileged-access') as c:
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance privileged-access-privileged-access show-privileged-access') as c:
        c.argument('privileged_access_id', type=str, help='key: id of privilegedAccess')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance privileged-access-privileged-access update-privileged-access') as c:
        c.argument('privileged_access_id', type=str, help='key: id of privilegedAccess')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('display_name', type=str, help='')
        c.argument('resources', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('role_assignment_requests', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('role_assignments', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('role_definitions', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('role_settings', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')

    with self.argument_context('identitygovernance privileged-access create-resource') as c:
        c.argument('privileged_access_id', type=str, help='key: id of privilegedAccess')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('display_name', type=str, help='')
        c.argument('external_id', type=str, help='')
        c.argument('registered_date_time', help='')
        c.argument('registered_root', type=str, help='')
        c.argument('status', type=str, help='')
        c.argument('type_', options_list=['--type'], type=str, help='')
        c.argument('parent', type=validate_file_or_dict, help='governanceResource Expected value: '
                   'json-string/@json-file.')
        c.argument('role_assignment_requests', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('role_assignments', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('role_definitions', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('role_settings', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')

    with self.argument_context('identitygovernance privileged-access create-role-assignment') as c:
        c.argument('privileged_access_id', type=str, help='key: id of privilegedAccess')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('assignment_state', type=str, help='')
        c.argument('end_date_time', help='')
        c.argument('external_id', type=str, help='')
        c.argument('linked_eligible_role_assignment_id', type=str, help='')
        c.argument('member_type', type=str, help='')
        c.argument('resource_id', type=str, help='')
        c.argument('role_definition_id', type=str, help='')
        c.argument('start_date_time', help='')
        c.argument('status', type=str, help='')
        c.argument('subject_id', type=str, help='')
        c.argument('linked_eligible_role_assignment', type=validate_file_or_dict, help='governanceRoleAssignment '
                   'Expected value: json-string/@json-file.')
        c.argument('resource', type=validate_file_or_dict, help='governanceResource Expected value: '
                   'json-string/@json-file.')
        c.argument('role_definition', type=validate_file_or_dict, help='governanceRoleDefinition Expected value: '
                   'json-string/@json-file.')
        c.argument('subject', action=AddSubject, nargs='+', help='governanceSubject')

    with self.argument_context('identitygovernance privileged-access create-role-assignment-request') as c:
        c.argument('privileged_access_id', type=str, help='key: id of privilegedAccess')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('assignment_state', type=str, help='')
        c.argument('linked_eligible_role_assignment_id', type=str, help='')
        c.argument('reason', type=str, help='')
        c.argument('requested_date_time', help='')
        c.argument('resource_id', type=str, help='')
        c.argument('role_definition_id', type=str, help='')
        c.argument('schedule', action=AddSchedule, nargs='+', help='governanceSchedule')
        c.argument('subject_id', type=str, help='')
        c.argument('type_', options_list=['--type'], type=str, help='')
        c.argument('resource', type=validate_file_or_dict, help='governanceResource Expected value: '
                   'json-string/@json-file.')
        c.argument('role_definition', type=validate_file_or_dict, help='governanceRoleDefinition Expected value: '
                   'json-string/@json-file.')
        c.argument('subject', action=AddSubject, nargs='+', help='governanceSubject')
        c.argument('status', type=str, help='', arg_group='Status')
        c.argument('status_details', action=AddStatusDetails, nargs='+', help='', arg_group='Status')
        c.argument('sub_status', type=str, help='', arg_group='Status')

    with self.argument_context('identitygovernance privileged-access create-role-definition') as c:
        c.argument('privileged_access_id', type=str, help='key: id of privilegedAccess')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('display_name', type=str, help='')
        c.argument('external_id', type=str, help='')
        c.argument('resource_id', type=str, help='')
        c.argument('template_id', type=str, help='')
        c.argument('resource', type=validate_file_or_dict, help='governanceResource Expected value: '
                   'json-string/@json-file.')
        c.argument('role_setting', type=validate_file_or_dict, help='governanceRoleSetting Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance privileged-access create-role-setting') as c:
        c.argument('privileged_access_id', type=str, help='key: id of privilegedAccess')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('admin_eligible_settings', action=AddAdminEligibleSettings, nargs='+', help='')
        c.argument('admin_member_settings', action=AddAdminMemberSettings, nargs='+', help='')
        c.argument('is_default', arg_type=get_three_state_flag(), help='')
        c.argument('last_updated_by', type=str, help='')
        c.argument('last_updated_date_time', help='')
        c.argument('resource_id', type=str, help='')
        c.argument('role_definition_id', type=str, help='')
        c.argument('user_eligible_settings', action=AddUserEligibleSettings, nargs='+', help='')
        c.argument('user_member_settings', action=AddUserMemberSettings, nargs='+', help='')
        c.argument('resource', type=validate_file_or_dict, help='governanceResource Expected value: '
                   'json-string/@json-file.')
        c.argument('role_definition', type=validate_file_or_dict, help='governanceRoleDefinition Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance privileged-access delete-resource') as c:
        c.argument('privileged_access_id', type=str, help='key: id of privilegedAccess')
        c.argument('governance_resource_id', type=str, help='key: id of governanceResource')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance privileged-access delete-role-assignment') as c:
        c.argument('privileged_access_id', type=str, help='key: id of privilegedAccess')
        c.argument('governance_role_assignment_id', type=str, help='key: id of governanceRoleAssignment')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance privileged-access delete-role-assignment-request') as c:
        c.argument('privileged_access_id', type=str, help='key: id of privilegedAccess')
        c.argument('governance_role_assignment_request_id', type=str,
                   help='key: id of governanceRoleAssignmentRequest')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance privileged-access delete-role-definition') as c:
        c.argument('privileged_access_id', type=str, help='key: id of privilegedAccess')
        c.argument('governance_role_definition_id', type=str, help='key: id of governanceRoleDefinition')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance privileged-access delete-role-setting') as c:
        c.argument('privileged_access_id', type=str, help='key: id of privilegedAccess')
        c.argument('governance_role_setting_id', type=str, help='key: id of governanceRoleSetting')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance privileged-access list-resource') as c:
        c.argument('privileged_access_id', type=str, help='key: id of privilegedAccess')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance privileged-access list-role-assignment') as c:
        c.argument('privileged_access_id', type=str, help='key: id of privilegedAccess')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance privileged-access list-role-assignment-request') as c:
        c.argument('privileged_access_id', type=str, help='key: id of privilegedAccess')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance privileged-access list-role-definition') as c:
        c.argument('privileged_access_id', type=str, help='key: id of privilegedAccess')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance privileged-access list-role-setting') as c:
        c.argument('privileged_access_id', type=str, help='key: id of privilegedAccess')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance privileged-access show-resource') as c:
        c.argument('privileged_access_id', type=str, help='key: id of privilegedAccess')
        c.argument('governance_resource_id', type=str, help='key: id of governanceResource')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance privileged-access show-role-assignment') as c:
        c.argument('privileged_access_id', type=str, help='key: id of privilegedAccess')
        c.argument('governance_role_assignment_id', type=str, help='key: id of governanceRoleAssignment')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance privileged-access show-role-assignment-request') as c:
        c.argument('privileged_access_id', type=str, help='key: id of privilegedAccess')
        c.argument('governance_role_assignment_request_id', type=str,
                   help='key: id of governanceRoleAssignmentRequest')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance privileged-access show-role-definition') as c:
        c.argument('privileged_access_id', type=str, help='key: id of privilegedAccess')
        c.argument('governance_role_definition_id', type=str, help='key: id of governanceRoleDefinition')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance privileged-access show-role-setting') as c:
        c.argument('privileged_access_id', type=str, help='key: id of privilegedAccess')
        c.argument('governance_role_setting_id', type=str, help='key: id of governanceRoleSetting')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance privileged-access update-resource') as c:
        c.argument('privileged_access_id', type=str, help='key: id of privilegedAccess')
        c.argument('governance_resource_id', type=str, help='key: id of governanceResource')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('display_name', type=str, help='')
        c.argument('external_id', type=str, help='')
        c.argument('registered_date_time', help='')
        c.argument('registered_root', type=str, help='')
        c.argument('status', type=str, help='')
        c.argument('type_', options_list=['--type'], type=str, help='')
        c.argument('parent', type=validate_file_or_dict, help='governanceResource Expected value: '
                   'json-string/@json-file.')
        c.argument('role_assignment_requests', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('role_assignments', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('role_definitions', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('role_settings', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')

    with self.argument_context('identitygovernance privileged-access update-role-assignment') as c:
        c.argument('privileged_access_id', type=str, help='key: id of privilegedAccess')
        c.argument('governance_role_assignment_id', type=str, help='key: id of governanceRoleAssignment')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('assignment_state', type=str, help='')
        c.argument('end_date_time', help='')
        c.argument('external_id', type=str, help='')
        c.argument('linked_eligible_role_assignment_id', type=str, help='')
        c.argument('member_type', type=str, help='')
        c.argument('resource_id', type=str, help='')
        c.argument('role_definition_id', type=str, help='')
        c.argument('start_date_time', help='')
        c.argument('status', type=str, help='')
        c.argument('subject_id', type=str, help='')
        c.argument('linked_eligible_role_assignment', type=validate_file_or_dict, help='governanceRoleAssignment '
                   'Expected value: json-string/@json-file.')
        c.argument('resource', type=validate_file_or_dict, help='governanceResource Expected value: '
                   'json-string/@json-file.')
        c.argument('role_definition', type=validate_file_or_dict, help='governanceRoleDefinition Expected value: '
                   'json-string/@json-file.')
        c.argument('subject', action=AddSubject, nargs='+', help='governanceSubject')

    with self.argument_context('identitygovernance privileged-access update-role-assignment-request') as c:
        c.argument('privileged_access_id', type=str, help='key: id of privilegedAccess')
        c.argument('governance_role_assignment_request_id', type=str,
                   help='key: id of governanceRoleAssignmentRequest')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('assignment_state', type=str, help='')
        c.argument('linked_eligible_role_assignment_id', type=str, help='')
        c.argument('reason', type=str, help='')
        c.argument('requested_date_time', help='')
        c.argument('resource_id', type=str, help='')
        c.argument('role_definition_id', type=str, help='')
        c.argument('schedule', action=AddSchedule, nargs='+', help='governanceSchedule')
        c.argument('subject_id', type=str, help='')
        c.argument('type_', options_list=['--type'], type=str, help='')
        c.argument('resource', type=validate_file_or_dict, help='governanceResource Expected value: '
                   'json-string/@json-file.')
        c.argument('role_definition', type=validate_file_or_dict, help='governanceRoleDefinition Expected value: '
                   'json-string/@json-file.')
        c.argument('subject', action=AddSubject, nargs='+', help='governanceSubject')
        c.argument('status', type=str, help='', arg_group='Status')
        c.argument('status_details', action=AddStatusDetails, nargs='+', help='', arg_group='Status')
        c.argument('sub_status', type=str, help='', arg_group='Status')

    with self.argument_context('identitygovernance privileged-access update-role-definition') as c:
        c.argument('privileged_access_id', type=str, help='key: id of privilegedAccess')
        c.argument('governance_role_definition_id', type=str, help='key: id of governanceRoleDefinition')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('display_name', type=str, help='')
        c.argument('external_id', type=str, help='')
        c.argument('resource_id', type=str, help='')
        c.argument('template_id', type=str, help='')
        c.argument('resource', type=validate_file_or_dict, help='governanceResource Expected value: '
                   'json-string/@json-file.')
        c.argument('role_setting', type=validate_file_or_dict, help='governanceRoleSetting Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance privileged-access update-role-setting') as c:
        c.argument('privileged_access_id', type=str, help='key: id of privilegedAccess')
        c.argument('governance_role_setting_id', type=str, help='key: id of governanceRoleSetting')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('admin_eligible_settings', action=AddAdminEligibleSettings, nargs='+', help='')
        c.argument('admin_member_settings', action=AddAdminMemberSettings, nargs='+', help='')
        c.argument('is_default', arg_type=get_three_state_flag(), help='')
        c.argument('last_updated_by', type=str, help='')
        c.argument('last_updated_date_time', help='')
        c.argument('resource_id', type=str, help='')
        c.argument('role_definition_id', type=str, help='')
        c.argument('user_eligible_settings', action=AddUserEligibleSettings, nargs='+', help='')
        c.argument('user_member_settings', action=AddUserMemberSettings, nargs='+', help='')
        c.argument('resource', type=validate_file_or_dict, help='governanceResource Expected value: '
                   'json-string/@json-file.')
        c.argument('role_definition', type=validate_file_or_dict, help='governanceRoleDefinition Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance privileged-approval-privileged-approval create-privileged-approval') as c:
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('approval_duration', help='')
        c.argument('approval_state', arg_type=get_enum_type(['pending', 'approved', 'denied', 'aborted', 'canceled']),
                   help='')
        c.argument('approval_type', type=str, help='')
        c.argument('approver_reason', type=str, help='')
        c.argument('end_date_time', help='')
        c.argument('requestor_reason', type=str, help='')
        c.argument('role_id', type=str, help='')
        c.argument('start_date_time', help='')
        c.argument('user_id', type=str, help='')
        c.argument('role_info', type=validate_file_or_dict, help='privilegedRole Expected value: '
                   'json-string/@json-file.')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Request')
        c.argument('assignment_state', type=str, help='', arg_group='Request')
        c.argument('duration', type=str, help='', arg_group='Request')
        c.argument('reason', type=str, help='', arg_group='Request')
        c.argument('requested_date_time', help='', arg_group='Request')
        c.argument('microsoft_graph_privileged_role_assignment_request_role_id', type=str, help='',
                   arg_group='Request')
        c.argument('schedule', action=AddSchedule, nargs='+', help='governanceSchedule', arg_group='Request')
        c.argument('status', type=str, help='', arg_group='Request')
        c.argument('ticket_number', type=str, help='', arg_group='Request')
        c.argument('ticket_system', type=str, help='', arg_group='Request')
        c.argument('type_', options_list=['--type'], type=str, help='', arg_group='Request')
        c.argument('microsoft_graph_privileged_role_assignment_request_user_id', type=str, help='',
                   arg_group='Request')
        c.argument('microsoft_graph_privileged_role_info', type=validate_file_or_dict, help='privilegedRole Expected '
                   'value: json-string/@json-file.', arg_group='Request')

    with self.argument_context('identitygovernance privileged-approval-privileged-approval delete-privileged-approval') as c:
        c.argument('privileged_approval_id', type=str, help='key: id of privilegedApproval')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance privileged-approval-privileged-approval list-privileged-approval') as c:
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance privileged-approval-privileged-approval show-privileged-approval') as c:
        c.argument('privileged_approval_id', type=str, help='key: id of privilegedApproval')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance privileged-approval-privileged-approval update-privileged-approval') as c:
        c.argument('privileged_approval_id', type=str, help='key: id of privilegedApproval')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('approval_duration', help='')
        c.argument('approval_state', arg_type=get_enum_type(['pending', 'approved', 'denied', 'aborted', 'canceled']),
                   help='')
        c.argument('approval_type', type=str, help='')
        c.argument('approver_reason', type=str, help='')
        c.argument('end_date_time', help='')
        c.argument('requestor_reason', type=str, help='')
        c.argument('role_id', type=str, help='')
        c.argument('start_date_time', help='')
        c.argument('user_id', type=str, help='')
        c.argument('role_info', type=validate_file_or_dict, help='privilegedRole Expected value: '
                   'json-string/@json-file.')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Request')
        c.argument('assignment_state', type=str, help='', arg_group='Request')
        c.argument('duration', type=str, help='', arg_group='Request')
        c.argument('reason', type=str, help='', arg_group='Request')
        c.argument('requested_date_time', help='', arg_group='Request')
        c.argument('microsoft_graph_privileged_role_assignment_request_role_id', type=str, help='',
                   arg_group='Request')
        c.argument('schedule', action=AddSchedule, nargs='+', help='governanceSchedule', arg_group='Request')
        c.argument('status', type=str, help='', arg_group='Request')
        c.argument('ticket_number', type=str, help='', arg_group='Request')
        c.argument('ticket_system', type=str, help='', arg_group='Request')
        c.argument('type_', options_list=['--type'], type=str, help='', arg_group='Request')
        c.argument('microsoft_graph_privileged_role_assignment_request_user_id', type=str, help='',
                   arg_group='Request')
        c.argument('microsoft_graph_privileged_role_info', type=validate_file_or_dict, help='privilegedRole Expected '
                   'value: json-string/@json-file.', arg_group='Request')

    with self.argument_context('identitygovernance privileged-approval delete-ref-request') as c:
        c.argument('privileged_approval_id', type=str, help='key: id of privilegedApproval')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance privileged-approval delete-role-info') as c:
        c.argument('privileged_approval_id', type=str, help='key: id of privilegedApproval')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance privileged-approval set-ref-request') as c:
        c.argument('privileged_approval_id', type=str, help='key: id of privilegedApproval')
        c.argument('body', type=validate_file_or_dict, help='New navigation property ref values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance privileged-approval show-ref-request') as c:
        c.argument('privileged_approval_id', type=str, help='key: id of privilegedApproval')

    with self.argument_context('identitygovernance privileged-approval show-request') as c:
        c.argument('privileged_approval_id', type=str, help='key: id of privilegedApproval')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance privileged-approval show-role-info') as c:
        c.argument('privileged_approval_id', type=str, help='key: id of privilegedApproval')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance privileged-approval update-role-info') as c:
        c.argument('privileged_approval_id', type=str, help='key: id of privilegedApproval')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('name', type=str, help='')
        c.argument('assignments', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('settings', action=AddPrivilegedapprovalSettings, nargs='+', help='privilegedRoleSettings')
        c.argument('summary', action=AddSummary, nargs='+', help='privilegedRoleSummary')

    with self.argument_context('identitygovernance privileged-operation-event-privileged-operation-event create-privileged-operation-event') as c:
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('additional_information', type=str, help='')
        c.argument('creation_date_time', help='')
        c.argument('expiration_date_time', help='')
        c.argument('reference_key', type=str, help='')
        c.argument('reference_system', type=str, help='')
        c.argument('requestor_id', type=str, help='')
        c.argument('requestor_name', type=str, help='')
        c.argument('request_type', type=str, help='')
        c.argument('role_id', type=str, help='')
        c.argument('role_name', type=str, help='')
        c.argument('tenant_id', type=str, help='')
        c.argument('user_id', type=str, help='')
        c.argument('user_mail', type=str, help='')
        c.argument('user_name', type=str, help='')

    with self.argument_context('identitygovernance privileged-operation-event-privileged-operation-event delete-privileged-operation-event') as c:
        c.argument('privileged_operation_event_id', type=str, help='key: id of privilegedOperationEvent')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance privileged-operation-event-privileged-operation-event list-privileged-operation-event') as c:
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance privileged-operation-event-privileged-operation-event show-privileged-operation-event') as c:
        c.argument('privileged_operation_event_id', type=str, help='key: id of privilegedOperationEvent')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance privileged-operation-event-privileged-operation-event update-privileged-operation-event') as c:
        c.argument('privileged_operation_event_id', type=str, help='key: id of privilegedOperationEvent')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('additional_information', type=str, help='')
        c.argument('creation_date_time', help='')
        c.argument('expiration_date_time', help='')
        c.argument('reference_key', type=str, help='')
        c.argument('reference_system', type=str, help='')
        c.argument('requestor_id', type=str, help='')
        c.argument('requestor_name', type=str, help='')
        c.argument('request_type', type=str, help='')
        c.argument('role_id', type=str, help='')
        c.argument('role_name', type=str, help='')
        c.argument('tenant_id', type=str, help='')
        c.argument('user_id', type=str, help='')
        c.argument('user_mail', type=str, help='')
        c.argument('user_name', type=str, help='')

    with self.argument_context('identitygovernance privileged-role-assignment-request-privileged-role-assignment-request create-privileged-role-assignment-request') as c:
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('assignment_state', type=str, help='')
        c.argument('duration', type=str, help='')
        c.argument('reason', type=str, help='')
        c.argument('requested_date_time', help='')
        c.argument('role_id', type=str, help='')
        c.argument('schedule', action=AddSchedule, nargs='+', help='governanceSchedule')
        c.argument('status', type=str, help='')
        c.argument('ticket_number', type=str, help='')
        c.argument('ticket_system', type=str, help='')
        c.argument('type_', options_list=['--type'], type=str, help='')
        c.argument('user_id', type=str, help='')
        c.argument('role_info', type=validate_file_or_dict, help='privilegedRole Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance privileged-role-assignment-request-privileged-role-assignment-request delete-privileged-role-assignment-request') as c:
        c.argument('privileged_role_assignment_request_id', type=str,
                   help='key: id of privilegedRoleAssignmentRequest')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance privileged-role-assignment-request-privileged-role-assignment-request list-privileged-role-assignment-request') as c:
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance privileged-role-assignment-request-privileged-role-assignment-request show-privileged-role-assignment-request') as c:
        c.argument('privileged_role_assignment_request_id', type=str,
                   help='key: id of privilegedRoleAssignmentRequest')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance privileged-role-assignment-request-privileged-role-assignment-request update-privileged-role-assignment-request') as c:
        c.argument('privileged_role_assignment_request_id', type=str,
                   help='key: id of privilegedRoleAssignmentRequest')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('assignment_state', type=str, help='')
        c.argument('duration', type=str, help='')
        c.argument('reason', type=str, help='')
        c.argument('requested_date_time', help='')
        c.argument('role_id', type=str, help='')
        c.argument('schedule', action=AddSchedule, nargs='+', help='governanceSchedule')
        c.argument('status', type=str, help='')
        c.argument('ticket_number', type=str, help='')
        c.argument('ticket_system', type=str, help='')
        c.argument('type_', options_list=['--type'], type=str, help='')
        c.argument('user_id', type=str, help='')
        c.argument('role_info', type=validate_file_or_dict, help='privilegedRole Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance privileged-role-assignment-request cancel') as c:
        c.argument('privileged_role_assignment_request_id', type=str,
                   help='key: id of privilegedRoleAssignmentRequest')

    with self.argument_context('identitygovernance privileged-role-assignment-request delete-role-info') as c:
        c.argument('privileged_role_assignment_request_id', type=str,
                   help='key: id of privilegedRoleAssignmentRequest')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance privileged-role-assignment-request show-role-info') as c:
        c.argument('privileged_role_assignment_request_id', type=str,
                   help='key: id of privilegedRoleAssignmentRequest')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance privileged-role-assignment-request update-role-info') as c:
        c.argument('privileged_role_assignment_request_id', type=str,
                   help='key: id of privilegedRoleAssignmentRequest')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('name', type=str, help='')
        c.argument('assignments', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('settings', action=AddPrivilegedapprovalSettings, nargs='+', help='privilegedRoleSettings')
        c.argument('summary', action=AddSummary, nargs='+', help='privilegedRoleSummary')

    with self.argument_context('identitygovernance privileged-role-assignment-privileged-role-assignment create-privileged-role-assignment') as c:
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('expiration_date_time', help='')
        c.argument('is_elevated', arg_type=get_three_state_flag(), help='')
        c.argument('result_message', type=str, help='')
        c.argument('role_id', type=str, help='')
        c.argument('user_id', type=str, help='')
        c.argument('role_info', type=validate_file_or_dict, help='privilegedRole Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance privileged-role-assignment-privileged-role-assignment delete-privileged-role-assignment') as c:
        c.argument('privileged_role_assignment_id', type=str, help='key: id of privilegedRoleAssignment')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance privileged-role-assignment-privileged-role-assignment list-privileged-role-assignment') as c:
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance privileged-role-assignment-privileged-role-assignment show-privileged-role-assignment') as c:
        c.argument('privileged_role_assignment_id', type=str, help='key: id of privilegedRoleAssignment')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance privileged-role-assignment-privileged-role-assignment update-privileged-role-assignment') as c:
        c.argument('privileged_role_assignment_id', type=str, help='key: id of privilegedRoleAssignment')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('expiration_date_time', help='')
        c.argument('is_elevated', arg_type=get_three_state_flag(), help='')
        c.argument('result_message', type=str, help='')
        c.argument('role_id', type=str, help='')
        c.argument('user_id', type=str, help='')
        c.argument('role_info', type=validate_file_or_dict, help='privilegedRole Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance privileged-role-assignment delete-role-info') as c:
        c.argument('privileged_role_assignment_id', type=str, help='key: id of privilegedRoleAssignment')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance privileged-role-assignment make-eligible') as c:
        c.argument('privileged_role_assignment_id', type=str, help='key: id of privilegedRoleAssignment')

    with self.argument_context('identitygovernance privileged-role-assignment make-permanent') as c:
        c.argument('privileged_role_assignment_id', type=str, help='key: id of privilegedRoleAssignment')
        c.argument('reason', type=str, help='')
        c.argument('ticket_number', type=str, help='')
        c.argument('ticket_system', type=str, help='')

    with self.argument_context('identitygovernance privileged-role-assignment show-role-info') as c:
        c.argument('privileged_role_assignment_id', type=str, help='key: id of privilegedRoleAssignment')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance privileged-role-assignment update-role-info') as c:
        c.argument('privileged_role_assignment_id', type=str, help='key: id of privilegedRoleAssignment')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('name', type=str, help='')
        c.argument('assignments', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('settings', action=AddPrivilegedapprovalSettings, nargs='+', help='privilegedRoleSettings')
        c.argument('summary', action=AddSummary, nargs='+', help='privilegedRoleSummary')

    with self.argument_context('identitygovernance privileged-role-privileged-role create-privileged-role') as c:
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('name', type=str, help='')
        c.argument('assignments', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('settings', action=AddPrivilegedapprovalSettings, nargs='+', help='privilegedRoleSettings')
        c.argument('summary', action=AddSummary, nargs='+', help='privilegedRoleSummary')

    with self.argument_context('identitygovernance privileged-role-privileged-role delete-privileged-role') as c:
        c.argument('privileged_role_id', type=str, help='key: id of privilegedRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance privileged-role-privileged-role list-privileged-role') as c:
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance privileged-role-privileged-role show-privileged-role') as c:
        c.argument('privileged_role_id', type=str, help='key: id of privilegedRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance privileged-role-privileged-role update-privileged-role') as c:
        c.argument('privileged_role_id', type=str, help='key: id of privilegedRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('name', type=str, help='')
        c.argument('assignments', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('settings', action=AddPrivilegedapprovalSettings, nargs='+', help='privilegedRoleSettings')
        c.argument('summary', action=AddSummary, nargs='+', help='privilegedRoleSummary')

    with self.argument_context('identitygovernance privileged-role create-ref-assignment') as c:
        c.argument('privileged_role_id', type=str, help='key: id of privilegedRole')
        c.argument('body', type=validate_file_or_dict, help='New navigation property ref value Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance privileged-role delete-setting') as c:
        c.argument('privileged_role_id', type=str, help='key: id of privilegedRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance privileged-role delete-summary') as c:
        c.argument('privileged_role_id', type=str, help='key: id of privilegedRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance privileged-role list-assignment') as c:
        c.argument('privileged_role_id', type=str, help='key: id of privilegedRole')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance privileged-role list-ref-assignment') as c:
        c.argument('privileged_role_id', type=str, help='key: id of privilegedRole')
        c.argument('orderby', nargs='+', help='Order items by property values')

    with self.argument_context('identitygovernance privileged-role self-activate') as c:
        c.argument('privileged_role_id', type=str, help='key: id of privilegedRole')
        c.argument('reason', type=str, help='')
        c.argument('duration', type=str, help='')
        c.argument('ticket_number', type=str, help='')
        c.argument('ticket_system', type=str, help='')

    with self.argument_context('identitygovernance privileged-role self-deactivate') as c:
        c.argument('privileged_role_id', type=str, help='key: id of privilegedRole')

    with self.argument_context('identitygovernance privileged-role show-setting') as c:
        c.argument('privileged_role_id', type=str, help='key: id of privilegedRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance privileged-role show-summary') as c:
        c.argument('privileged_role_id', type=str, help='key: id of privilegedRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance privileged-role update-setting') as c:
        c.argument('privileged_role_id', type=str, help='key: id of privilegedRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('approval_on_elevation', arg_type=get_three_state_flag(), help='')
        c.argument('approver_ids', nargs='+', help='')
        c.argument('elevation_duration', help='')
        c.argument('is_mfa_on_elevation_configurable', arg_type=get_three_state_flag(), help='')
        c.argument('last_global_admin', arg_type=get_three_state_flag(), help='')
        c.argument('max_elavation_duration', help='')
        c.argument('mfa_on_elevation', arg_type=get_three_state_flag(), help='')
        c.argument('min_elevation_duration', help='')
        c.argument('notification_to_user_on_elevation', arg_type=get_three_state_flag(), help='')
        c.argument('ticketing_info_on_elevation', arg_type=get_three_state_flag(), help='')

    with self.argument_context('identitygovernance privileged-role update-summary') as c:
        c.argument('privileged_role_id', type=str, help='key: id of privilegedRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('elevated_count', type=int, help='')
        c.argument('managed_count', type=int, help='')
        c.argument('mfa_enabled', arg_type=get_three_state_flag(), help='')
        c.argument('status', arg_type=get_enum_type(['ok', 'bad']), help='')
        c.argument('users_count', type=int, help='')

    with self.argument_context('identitygovernance program-control-program-control create-program-control') as c:
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('control_id', type=str, help='')
        c.argument('control_type_id', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('display_name', type=str, help='')
        c.argument('owner', action=AddCreatedBy, nargs='+', help='userIdentity')
        c.argument('program_id', type=str, help='')
        c.argument('resource', action=AddResource, nargs='+', help='programResource')
        c.argument('status', type=str, help='')
        c.argument('program', type=validate_file_or_dict, help='program Expected value: json-string/@json-file.')

    with self.argument_context('identitygovernance program-control-program-control delete-program-control') as c:
        c.argument('program_control_id', type=str, help='key: id of programControl')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance program-control-program-control list-program-control') as c:
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance program-control-program-control show-program-control') as c:
        c.argument('program_control_id', type=str, help='key: id of programControl')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance program-control-program-control update-program-control') as c:
        c.argument('program_control_id', type=str, help='key: id of programControl')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('control_id', type=str, help='')
        c.argument('control_type_id', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('display_name', type=str, help='')
        c.argument('owner', action=AddCreatedBy, nargs='+', help='userIdentity')
        c.argument('program_id', type=str, help='')
        c.argument('resource', action=AddResource, nargs='+', help='programResource')
        c.argument('status', type=str, help='')
        c.argument('program', type=validate_file_or_dict, help='program Expected value: json-string/@json-file.')

    with self.argument_context('identitygovernance program-control delete-program') as c:
        c.argument('program_control_id', type=str, help='key: id of programControl')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance program-control show-program') as c:
        c.argument('program_control_id', type=str, help='key: id of programControl')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance program-control update-program') as c:
        c.argument('program_control_id', type=str, help='key: id of programControl')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('controls', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')

    with self.argument_context('identitygovernance program-control-type-program-control-type create-program-control-type') as c:
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('control_type_group_id', type=str, help='')
        c.argument('display_name', type=str, help='')

    with self.argument_context('identitygovernance program-control-type-program-control-type delete-program-control-type') as c:
        c.argument('program_control_type_id', type=str, help='key: id of programControlType')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance program-control-type-program-control-type list-program-control-type') as c:
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance program-control-type-program-control-type show-program-control-type') as c:
        c.argument('program_control_type_id', type=str, help='key: id of programControlType')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance program-control-type-program-control-type update-program-control-type') as c:
        c.argument('program_control_type_id', type=str, help='key: id of programControlType')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('control_type_group_id', type=str, help='')
        c.argument('display_name', type=str, help='')

    with self.argument_context('identitygovernance program-program create-program') as c:
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('controls', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')

    with self.argument_context('identitygovernance program-program delete-program') as c:
        c.argument('program_id', type=str, help='key: id of program')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance program-program list-program') as c:
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance program-program show-program') as c:
        c.argument('program_id', type=str, help='key: id of program')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance program-program update-program') as c:
        c.argument('program_id', type=str, help='key: id of program')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('controls', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')

    with self.argument_context('identitygovernance program create-control') as c:
        c.argument('program_id', type=str, help='key: id of program')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('control_id', type=str, help='')
        c.argument('control_type_id', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('display_name', type=str, help='')
        c.argument('owner', action=AddCreatedBy, nargs='+', help='userIdentity')
        c.argument('microsoft_graph_program_control_program_id', type=str, help='')
        c.argument('resource', action=AddResource, nargs='+', help='programResource')
        c.argument('status', type=str, help='')
        c.argument('program', type=validate_file_or_dict, help='program Expected value: json-string/@json-file.')

    with self.argument_context('identitygovernance program delete-control') as c:
        c.argument('program_id', type=str, help='key: id of program')
        c.argument('program_control_id', type=str, help='key: id of programControl')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance program list-control') as c:
        c.argument('program_id', type=str, help='key: id of program')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance program show-control') as c:
        c.argument('program_id', type=str, help='key: id of program')
        c.argument('program_control_id', type=str, help='key: id of programControl')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance program update-control') as c:
        c.argument('program_id', type=str, help='key: id of program')
        c.argument('program_control_id', type=str, help='key: id of programControl')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('control_id', type=str, help='')
        c.argument('control_type_id', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('display_name', type=str, help='')
        c.argument('owner', action=AddCreatedBy, nargs='+', help='userIdentity')
        c.argument('microsoft_graph_program_control_program_id', type=str, help='')
        c.argument('resource', action=AddResource, nargs='+', help='programResource')
        c.argument('status', type=str, help='')
        c.argument('program', type=validate_file_or_dict, help='program Expected value: json-string/@json-file.')

    with self.argument_context('identitygovernance user create-ref-agreement-acceptance') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('body', type=validate_file_or_dict, help='New navigation property ref value Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance user list-agreement-acceptance') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance user list-ref-agreement-acceptance') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('orderby', nargs='+', help='Order items by property values')
