# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=line-too-long
# pylint: disable=too-many-lines
# pylint: disable=too-many-statements

from msgraph.cli.core.commands.parameters import (
    get_three_state_flag,
    get_enum_type
)
from msgraph.cli.core.commands.validators import validate_file_or_dict
from azext_identitygovernance_beta.action import (
    AddCreatedBy,
    AddReviewedEntity,
    AddReviewers,
    AddAutoReviewSettings,
    AddRecurrenceSettings,
    AddTermsExpiration,
    AddAcceptances,
    AddFiles,
    AddLocalizations,
    AddIdentitygovernanceSettings,
    AddIdentitySources,
    AddExternalSponsors,
    AddInternalSponsors,
    AddExpiration,
    AddSchedule,
    AddPrivilegedapprovalSettings,
    AddSummary,
    AddResource
)


def load_arguments(self, _):

    with self.argument_context('identitygovernance accessreviewsaccessreview create-access-review') as c:
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('business_flow_template_id', type=str, help='')
        c.argument('created_by', action=AddCreatedBy, nargs='+', help='userIdentity')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('end_date_time', help='')
        c.argument('reviewed_entity', action=AddReviewedEntity, nargs='+', help='identity')
        c.argument('reviewer_type', type=str, help='')
        c.argument('start_date_time', help='')
        c.argument('status', type=str, help='')
        c.argument('decisions', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('instances', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('my_decisions', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('reviewers', action=AddReviewers, nargs='+', help='')
        c.argument('access_recommendations_enabled', arg_type=get_three_state_flag(), help='', arg_group='Settings')
        c.argument('activity_duration_in_days', type=int, help='', arg_group='Settings')
        c.argument('auto_apply_review_results_enabled', arg_type=get_three_state_flag(), help='',
                   arg_group='Settings')
        c.argument('auto_review_enabled', arg_type=get_three_state_flag(), help='', arg_group='Settings')
        c.argument('auto_review_settings', action=AddAutoReviewSettings, nargs='+', help='autoReviewSettings',
                   arg_group='Settings')
        c.argument('justification_required_on_approval', arg_type=get_three_state_flag(), help='',
                   arg_group='Settings')
        c.argument('mail_notifications_enabled', arg_type=get_three_state_flag(), help='', arg_group='Settings')
        c.argument('recurrence_settings', action=AddRecurrenceSettings, nargs='+',
                   help='accessReviewRecurrenceSettings', arg_group='Settings')
        c.argument('reminders_enabled', arg_type=get_three_state_flag(), help='', arg_group='Settings')

    with self.argument_context('identitygovernance accessreviewsaccessreview delete-access-review') as c:
        c.argument('access_review_id', type=str, help='key: id of accessReview')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance accessreviewsaccessreview list-access-review') as c:
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance accessreviewsaccessreview show-access-review') as c:
        c.argument('access_review_id', type=str, help='key: id of accessReview')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance accessreviewsaccessreview update-access-review') as c:
        c.argument('access_review_id', type=str, help='key: id of accessReview')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('business_flow_template_id', type=str, help='')
        c.argument('created_by', action=AddCreatedBy, nargs='+', help='userIdentity')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('end_date_time', help='')
        c.argument('reviewed_entity', action=AddReviewedEntity, nargs='+', help='identity')
        c.argument('reviewer_type', type=str, help='')
        c.argument('start_date_time', help='')
        c.argument('status', type=str, help='')
        c.argument('decisions', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('instances', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('my_decisions', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('reviewers', action=AddReviewers, nargs='+', help='')
        c.argument('access_recommendations_enabled', arg_type=get_three_state_flag(), help='', arg_group='Settings')
        c.argument('activity_duration_in_days', type=int, help='', arg_group='Settings')
        c.argument('auto_apply_review_results_enabled', arg_type=get_three_state_flag(), help='',
                   arg_group='Settings')
        c.argument('auto_review_enabled', arg_type=get_three_state_flag(), help='', arg_group='Settings')
        c.argument('auto_review_settings', action=AddAutoReviewSettings, nargs='+', help='autoReviewSettings',
                   arg_group='Settings')
        c.argument('justification_required_on_approval', arg_type=get_three_state_flag(), help='',
                   arg_group='Settings')
        c.argument('mail_notifications_enabled', arg_type=get_three_state_flag(), help='', arg_group='Settings')
        c.argument('recurrence_settings', action=AddRecurrenceSettings, nargs='+',
                   help='accessReviewRecurrenceSettings', arg_group='Settings')
        c.argument('reminders_enabled', arg_type=get_three_state_flag(), help='', arg_group='Settings')

    with self.argument_context('identitygovernance accessreview apply-decision') as c:
        c.argument('access_review_id', type=str, help='key: id of accessReview')

    with self.argument_context('identitygovernance accessreview create-decision') as c:
        c.argument('access_review_id', type=str, help='key: id of accessReview')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('access_recommendation', type=str, help='')
        c.argument('microsoft_graph_access_review_decision_access_review_id_access_review_id', type=str, help='')
        c.argument('applied_by', action=AddCreatedBy, nargs='+', help='userIdentity')
        c.argument('applied_date_time', help='')
        c.argument('apply_result', type=str, help='')
        c.argument('justification', type=str, help='')
        c.argument('reviewed_by', action=AddCreatedBy, nargs='+', help='userIdentity')
        c.argument('reviewed_date_time', help='')
        c.argument('review_result', type=str, help='')

    with self.argument_context('identitygovernance accessreview create-instance') as c:
        c.argument('access_review_id', type=str, help='key: id of accessReview')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('business_flow_template_id', type=str, help='')
        c.argument('created_by', action=AddCreatedBy, nargs='+', help='userIdentity')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('end_date_time', help='')
        c.argument('reviewed_entity', action=AddReviewedEntity, nargs='+', help='identity')
        c.argument('reviewer_type', type=str, help='')
        c.argument('start_date_time', help='')
        c.argument('status', type=str, help='')
        c.argument('decisions', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('instances', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('my_decisions', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('reviewers', action=AddReviewers, nargs='+', help='')
        c.argument('access_recommendations_enabled', arg_type=get_three_state_flag(), help='', arg_group='Settings')
        c.argument('activity_duration_in_days', type=int, help='', arg_group='Settings')
        c.argument('auto_apply_review_results_enabled', arg_type=get_three_state_flag(), help='',
                   arg_group='Settings')
        c.argument('auto_review_enabled', arg_type=get_three_state_flag(), help='', arg_group='Settings')
        c.argument('auto_review_settings', action=AddAutoReviewSettings, nargs='+', help='autoReviewSettings',
                   arg_group='Settings')
        c.argument('justification_required_on_approval', arg_type=get_three_state_flag(), help='',
                   arg_group='Settings')
        c.argument('mail_notifications_enabled', arg_type=get_three_state_flag(), help='', arg_group='Settings')
        c.argument('recurrence_settings', action=AddRecurrenceSettings, nargs='+',
                   help='accessReviewRecurrenceSettings', arg_group='Settings')
        c.argument('reminders_enabled', arg_type=get_three_state_flag(), help='', arg_group='Settings')

    with self.argument_context('identitygovernance accessreview create-my-decision') as c:
        c.argument('access_review_id', type=str, help='key: id of accessReview')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('access_recommendation', type=str, help='')
        c.argument('microsoft_graph_access_review_decision_access_review_id_access_review_id', type=str, help='')
        c.argument('applied_by', action=AddCreatedBy, nargs='+', help='userIdentity')
        c.argument('applied_date_time', help='')
        c.argument('apply_result', type=str, help='')
        c.argument('justification', type=str, help='')
        c.argument('reviewed_by', action=AddCreatedBy, nargs='+', help='userIdentity')
        c.argument('reviewed_date_time', help='')
        c.argument('review_result', type=str, help='')

    with self.argument_context('identitygovernance accessreview create-reviewer') as c:
        c.argument('access_review_id', type=str, help='key: id of accessReview')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('display_name', type=str, help='')
        c.argument('user_principal_name', type=str, help='')

    with self.argument_context('identitygovernance accessreview delete-decision') as c:
        c.argument('access_review_id', type=str, help='key: id of accessReview')
        c.argument('access_review_decision_id', type=str, help='key: id of accessReviewDecision')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance accessreview delete-instance') as c:
        c.argument('access_review_id', type=str, help='key: id of accessReview')
        c.argument('access_review_id1', type=str, help='key: id of accessReview')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance accessreview delete-my-decision') as c:
        c.argument('access_review_id', type=str, help='key: id of accessReview')
        c.argument('access_review_decision_id', type=str, help='key: id of accessReviewDecision')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance accessreview delete-reviewer') as c:
        c.argument('access_review_id', type=str, help='key: id of accessReview')
        c.argument('access_review_reviewer_id', type=str, help='key: id of accessReviewReviewer')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance accessreview list-decision') as c:
        c.argument('access_review_id', type=str, help='key: id of accessReview')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance accessreview list-instance') as c:
        c.argument('access_review_id', type=str, help='key: id of accessReview')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance accessreview list-my-decision') as c:
        c.argument('access_review_id', type=str, help='key: id of accessReview')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance accessreview list-reviewer') as c:
        c.argument('access_review_id', type=str, help='key: id of accessReview')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance accessreview reset-decision') as c:
        c.argument('access_review_id', type=str, help='key: id of accessReview')

    with self.argument_context('identitygovernance accessreview send-reminder') as c:
        c.argument('access_review_id', type=str, help='key: id of accessReview')

    with self.argument_context('identitygovernance accessreview show-decision') as c:
        c.argument('access_review_id', type=str, help='key: id of accessReview')
        c.argument('access_review_decision_id', type=str, help='key: id of accessReviewDecision')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance accessreview show-instance') as c:
        c.argument('access_review_id', type=str, help='key: id of accessReview')
        c.argument('access_review_id1', type=str, help='key: id of accessReview')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance accessreview show-my-decision') as c:
        c.argument('access_review_id', type=str, help='key: id of accessReview')
        c.argument('access_review_decision_id', type=str, help='key: id of accessReviewDecision')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance accessreview show-reviewer') as c:
        c.argument('access_review_id', type=str, help='key: id of accessReview')
        c.argument('access_review_reviewer_id', type=str, help='key: id of accessReviewReviewer')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance accessreview stop') as c:
        c.argument('access_review_id', type=str, help='key: id of accessReview')

    with self.argument_context('identitygovernance accessreview update-decision') as c:
        c.argument('access_review_id', type=str, help='key: id of accessReview')
        c.argument('access_review_decision_id', type=str, help='key: id of accessReviewDecision')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('access_recommendation', type=str, help='')
        c.argument('microsoft_graph_access_review_decision_access_review_id_access_review_id', type=str, help='')
        c.argument('applied_by', action=AddCreatedBy, nargs='+', help='userIdentity')
        c.argument('applied_date_time', help='')
        c.argument('apply_result', type=str, help='')
        c.argument('justification', type=str, help='')
        c.argument('reviewed_by', action=AddCreatedBy, nargs='+', help='userIdentity')
        c.argument('reviewed_date_time', help='')
        c.argument('review_result', type=str, help='')

    with self.argument_context('identitygovernance accessreview update-instance') as c:
        c.argument('access_review_id', type=str, help='key: id of accessReview')
        c.argument('access_review_id1', type=str, help='key: id of accessReview')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('business_flow_template_id', type=str, help='')
        c.argument('created_by', action=AddCreatedBy, nargs='+', help='userIdentity')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('end_date_time', help='')
        c.argument('reviewed_entity', action=AddReviewedEntity, nargs='+', help='identity')
        c.argument('reviewer_type', type=str, help='')
        c.argument('start_date_time', help='')
        c.argument('status', type=str, help='')
        c.argument('decisions', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('instances', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('my_decisions', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('reviewers', action=AddReviewers, nargs='+', help='')
        c.argument('access_recommendations_enabled', arg_type=get_three_state_flag(), help='', arg_group='Settings')
        c.argument('activity_duration_in_days', type=int, help='', arg_group='Settings')
        c.argument('auto_apply_review_results_enabled', arg_type=get_three_state_flag(), help='',
                   arg_group='Settings')
        c.argument('auto_review_enabled', arg_type=get_three_state_flag(), help='', arg_group='Settings')
        c.argument('auto_review_settings', action=AddAutoReviewSettings, nargs='+', help='autoReviewSettings',
                   arg_group='Settings')
        c.argument('justification_required_on_approval', arg_type=get_three_state_flag(), help='',
                   arg_group='Settings')
        c.argument('mail_notifications_enabled', arg_type=get_three_state_flag(), help='', arg_group='Settings')
        c.argument('recurrence_settings', action=AddRecurrenceSettings, nargs='+',
                   help='accessReviewRecurrenceSettings', arg_group='Settings')
        c.argument('reminders_enabled', arg_type=get_three_state_flag(), help='', arg_group='Settings')

    with self.argument_context('identitygovernance accessreview update-my-decision') as c:
        c.argument('access_review_id', type=str, help='key: id of accessReview')
        c.argument('access_review_decision_id', type=str, help='key: id of accessReviewDecision')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('access_recommendation', type=str, help='')
        c.argument('microsoft_graph_access_review_decision_access_review_id_access_review_id', type=str, help='')
        c.argument('applied_by', action=AddCreatedBy, nargs='+', help='userIdentity')
        c.argument('applied_date_time', help='')
        c.argument('apply_result', type=str, help='')
        c.argument('justification', type=str, help='')
        c.argument('reviewed_by', action=AddCreatedBy, nargs='+', help='userIdentity')
        c.argument('reviewed_date_time', help='')
        c.argument('review_result', type=str, help='')

    with self.argument_context('identitygovernance accessreview update-reviewer') as c:
        c.argument('access_review_id', type=str, help='key: id of accessReview')
        c.argument('access_review_reviewer_id', type=str, help='key: id of accessReviewReviewer')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('display_name', type=str, help='')
        c.argument('user_principal_name', type=str, help='')

    with self.argument_context('identitygovernance agreementsagreement create-agreement') as c:
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('display_name', type=str, help='')
        c.argument('is_per_device_acceptance_required', arg_type=get_three_state_flag(), help='')
        c.argument('is_viewing_before_acceptance_required', arg_type=get_three_state_flag(), help='')
        c.argument('terms_expiration', action=AddTermsExpiration, nargs='+', help='termsExpiration')
        c.argument('user_reaccept_required_frequency', help='')
        c.argument('acceptances', action=AddAcceptances, nargs='+', help='')
        c.argument('files', action=AddFiles, nargs='+', help='')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='File')
        c.argument('file_name', type=str, help='', arg_group='File')
        c.argument('is_default', arg_type=get_three_state_flag(), help='', arg_group='File')
        c.argument('language', type=str, help='', arg_group='File')
        c.argument('data', help='', arg_group='File File Data')
        c.argument('localizations', action=AddLocalizations, nargs='+', help='', arg_group='File')

    with self.argument_context('identitygovernance agreementsagreement delete-agreement') as c:
        c.argument('agreement_id', type=str, help='key: id of agreement')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance agreementsagreement list-agreement') as c:
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance agreementsagreement show-agreement') as c:
        c.argument('agreement_id', type=str, help='key: id of agreement')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance agreementsagreement update-agreement') as c:
        c.argument('agreement_id', type=str, help='key: id of agreement')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('display_name', type=str, help='')
        c.argument('is_per_device_acceptance_required', arg_type=get_three_state_flag(), help='')
        c.argument('is_viewing_before_acceptance_required', arg_type=get_three_state_flag(), help='')
        c.argument('terms_expiration', action=AddTermsExpiration, nargs='+', help='termsExpiration')
        c.argument('user_reaccept_required_frequency', help='')
        c.argument('acceptances', action=AddAcceptances, nargs='+', help='')
        c.argument('files', action=AddFiles, nargs='+', help='')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='File')
        c.argument('file_name', type=str, help='', arg_group='File')
        c.argument('is_default', arg_type=get_three_state_flag(), help='', arg_group='File')
        c.argument('language', type=str, help='', arg_group='File')
        c.argument('data', help='', arg_group='File File Data')
        c.argument('localizations', action=AddLocalizations, nargs='+', help='', arg_group='File')

    with self.argument_context('identitygovernance agreement create-acceptance') as c:
        c.argument('agreement_id', type=str, help='key: id of agreement')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('agreement_file_id', type=str, help='')
        c.argument('microsoft_graph_agreement_acceptance_agreement_id', type=str, help='')
        c.argument('device_display_name', type=str, help='')
        c.argument('device_id', type=str, help='')
        c.argument('device_os_type', type=str, help='')
        c.argument('device_os_version', type=str, help='')
        c.argument('expiration_date_time', help='')
        c.argument('recorded_date_time', help='')
        c.argument('state', arg_type=get_enum_type(['accepted', 'declined', 'unknownFutureValue']), help='')
        c.argument('user_display_name', type=str, help='')
        c.argument('user_email', type=str, help='')
        c.argument('user_id', type=str, help='')
        c.argument('user_principal_name', type=str, help='')

    with self.argument_context('identitygovernance agreement create-file') as c:
        c.argument('agreement_id', type=str, help='key: id of agreement')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('file_name', type=str, help='')
        c.argument('is_default', arg_type=get_three_state_flag(), help='')
        c.argument('language', type=str, help='')
        c.argument('data', help='', arg_group='File Data')

    with self.argument_context('identitygovernance agreement delete-acceptance') as c:
        c.argument('agreement_id', type=str, help='key: id of agreement')
        c.argument('agreement_acceptance_id', type=str, help='key: id of agreementAcceptance')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance agreement delete-file') as c:
        c.argument('agreement_id', type=str, help='key: id of agreement')
        c.argument('agreement_file_localization_id', type=str, help='key: id of agreementFileLocalization')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance agreement list-acceptance') as c:
        c.argument('agreement_id', type=str, help='key: id of agreement')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance agreement list-file') as c:
        c.argument('agreement_id', type=str, help='key: id of agreement')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance agreement show-acceptance') as c:
        c.argument('agreement_id', type=str, help='key: id of agreement')
        c.argument('agreement_acceptance_id', type=str, help='key: id of agreementAcceptance')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance agreement show-file') as c:
        c.argument('agreement_id', type=str, help='key: id of agreement')
        c.argument('agreement_file_localization_id', type=str, help='key: id of agreementFileLocalization')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance agreement update-acceptance') as c:
        c.argument('agreement_id', type=str, help='key: id of agreement')
        c.argument('agreement_acceptance_id', type=str, help='key: id of agreementAcceptance')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('agreement_file_id', type=str, help='')
        c.argument('microsoft_graph_agreement_acceptance_agreement_id', type=str, help='')
        c.argument('device_display_name', type=str, help='')
        c.argument('device_id', type=str, help='')
        c.argument('device_os_type', type=str, help='')
        c.argument('device_os_version', type=str, help='')
        c.argument('expiration_date_time', help='')
        c.argument('recorded_date_time', help='')
        c.argument('state', arg_type=get_enum_type(['accepted', 'declined', 'unknownFutureValue']), help='')
        c.argument('user_display_name', type=str, help='')
        c.argument('user_email', type=str, help='')
        c.argument('user_id', type=str, help='')
        c.argument('user_principal_name', type=str, help='')

    with self.argument_context('identitygovernance agreement update-file') as c:
        c.argument('agreement_id', type=str, help='key: id of agreement')
        c.argument('agreement_file_localization_id', type=str, help='key: id of agreementFileLocalization')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('file_name', type=str, help='')
        c.argument('is_default', arg_type=get_three_state_flag(), help='')
        c.argument('language', type=str, help='')
        c.argument('data', help='', arg_group='File Data')
        c.argument('localizations', action=AddLocalizations, nargs='+', help='')

    with self.argument_context('identitygovernance agreementsfile create-localization') as c:
        c.argument('agreement_id', type=str, help='key: id of agreement')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('file_name', type=str, help='')
        c.argument('is_default', arg_type=get_three_state_flag(), help='')
        c.argument('language', type=str, help='')
        c.argument('data', help='', arg_group='File Data')

    with self.argument_context('identitygovernance agreementsfile delete-localization') as c:
        c.argument('agreement_id', type=str, help='key: id of agreement')
        c.argument('agreement_file_localization_id', type=str, help='key: id of agreementFileLocalization')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance agreementsfile list-localization') as c:
        c.argument('agreement_id', type=str, help='key: id of agreement')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance agreementsfile show-localization') as c:
        c.argument('agreement_id', type=str, help='key: id of agreement')
        c.argument('agreement_file_localization_id', type=str, help='key: id of agreementFileLocalization')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance agreementsfile update-localization') as c:
        c.argument('agreement_id', type=str, help='key: id of agreement')
        c.argument('agreement_file_localization_id', type=str, help='key: id of agreementFileLocalization')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('file_name', type=str, help='')
        c.argument('is_default', arg_type=get_three_state_flag(), help='')
        c.argument('language', type=str, help='')
        c.argument('data', help='', arg_group='File Data')

    with self.argument_context('identitygovernance businessflowtemplatesbusinessflowtemplate create-business-flow-template') as c:
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('display_name', type=str, help='')

    with self.argument_context('identitygovernance businessflowtemplatesbusinessflowtemplate delete-business-flow-template') as c:
        c.argument('business_flow_template_id', type=str, help='key: id of businessFlowTemplate')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance businessflowtemplatesbusinessflowtemplate list-business-flow-template') as c:
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance businessflowtemplatesbusinessflowtemplate show-business-flow-template') as c:
        c.argument('business_flow_template_id', type=str, help='key: id of businessFlowTemplate')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance businessflowtemplatesbusinessflowtemplate update-business-flow-template') as c:
        c.argument('business_flow_template_id', type=str, help='key: id of businessFlowTemplate')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('display_name', type=str, help='')

    with self.argument_context('identitygovernance identitygovernanceaccessreviewsdefinitionsinstancesdefinition stop') as c:
        c.argument('access_review_schedule_definition_id', type=str, help='key: id of accessReviewScheduleDefinition')
        c.argument('access_review_instance_id', type=str, help='key: id of accessReviewInstance')

    with self.argument_context('identitygovernance identitygovernanceaccessreviewsdefinitionsinstance accept-recommendation') as c:
        c.argument('access_review_schedule_definition_id', type=str, help='key: id of accessReviewScheduleDefinition')
        c.argument('access_review_instance_id', type=str, help='key: id of accessReviewInstance')

    with self.argument_context('identitygovernance identitygovernanceaccessreviewsdefinitionsinstance apply-decision') as c:
        c.argument('access_review_schedule_definition_id', type=str, help='key: id of accessReviewScheduleDefinition')
        c.argument('access_review_instance_id', type=str, help='key: id of accessReviewInstance')

    with self.argument_context('identitygovernance identitygovernanceaccessreviewsdefinitionsinstance reset-decision') as c:
        c.argument('access_review_schedule_definition_id', type=str, help='key: id of accessReviewScheduleDefinition')
        c.argument('access_review_instance_id', type=str, help='key: id of accessReviewInstance')

    with self.argument_context('identitygovernance identitygovernanceaccessreviewsdefinitionsinstance send-reminder') as c:
        c.argument('access_review_schedule_definition_id', type=str, help='key: id of accessReviewScheduleDefinition')
        c.argument('access_review_instance_id', type=str, help='key: id of accessReviewInstance')

    with self.argument_context('identitygovernance identitygovernanceaccessreviewsdefinitionsinstance stop') as c:
        c.argument('access_review_schedule_definition_id', type=str, help='key: id of accessReviewScheduleDefinition')
        c.argument('access_review_instance_id', type=str, help='key: id of accessReviewInstance')

    with self.argument_context('identitygovernance identitygovernanceaccessreviewsdefinition stop') as c:
        c.argument('access_review_schedule_definition_id', type=str, help='key: id of accessReviewScheduleDefinition')

    with self.argument_context('identitygovernance identitygovernance delete-entitlement-management') as c:
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernance show-entitlement-management') as c:
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernance update-entitlement-management') as c:
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('access_package_assignment_policies', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_assignment_requests', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_assignment_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_assignments', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_catalogs', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_requests', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_role_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resources', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_packages', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('connected_organizations', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('settings', action=AddIdentitygovernanceSettings, nargs='+', help='entitlementManagementSettings')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagement create-access-package') as c:
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('catalog_id', type=str, help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_hidden', arg_type=get_three_state_flag(), help='')
        c.argument('is_role_scopes_visible', arg_type=get_three_state_flag(), help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_assignment_policies', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_catalog', type=validate_file_or_dict, help='accessPackageCatalog Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_role_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagement create-access-package-assignment') as c:
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('access_package_id', type=str, help='')
        c.argument('assignment_policy_id', type=str, help='')
        c.argument('assignment_state', type=str, help='')
        c.argument('assignment_status', type=str, help='')
        c.argument('catalog_id', type=str, help='')
        c.argument('expired_date_time', help='')
        c.argument('is_extended', arg_type=get_three_state_flag(), help='')
        c.argument('target_id', type=str, help='')
        c.argument('access_package', type=validate_file_or_dict, help='accessPackage Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_assignment_policy', type=validate_file_or_dict, help='accessPackageAssignmentPolicy '
                   'Expected value: json-string/@json-file.')
        c.argument('access_package_assignment_requests', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_assignment_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Target')
        c.argument('alt_sec_id', type=str, help='', arg_group='Target')
        c.argument('connected_organization_id', type=str, help='', arg_group='Target')
        c.argument('display_name', type=str, help='', arg_group='Target')
        c.argument('email', type=str, help='', arg_group='Target')
        c.argument('object_id', type=str, help='', arg_group='Target')
        c.argument('on_premises_security_identifier', type=str, help='', arg_group='Target')
        c.argument('principal_name', type=str, help='', arg_group='Target')
        c.argument('type_', options_list=['--type'], type=str, help='', arg_group='Target')
        c.argument('id1', type=str, help='Read-only.', arg_group='Target Connected Organization')
        c.argument('created_by', type=str, help='', arg_group='Target Connected Organization')
        c.argument('created_date_time', help='', arg_group='Target Connected Organization')
        c.argument('description', type=str, help='', arg_group='Target Connected Organization')
        c.argument('microsoft_graph_connected_organization_display_name', type=str, help='', arg_group='Target '
                   'Connected Organization')
        c.argument('identity_sources', action=AddIdentitySources, nargs='+', help=' Expect value: KEY1=VALUE1 '
                   'KEY2=VALUE2 ...', arg_group='Target Connected Organization')
        c.argument('modified_by', type=str, help='', arg_group='Target Connected Organization')
        c.argument('modified_date_time', help='', arg_group='Target Connected Organization')
        c.argument('state', arg_type=get_enum_type(['configured', 'proposed', 'unknownFutureValue']), help='',
                   arg_group='Target Connected Organization')
        c.argument('external_sponsors', action=AddExternalSponsors, nargs='+', help='', arg_group='Target Connected '
                   'Organization')
        c.argument('internal_sponsors', action=AddInternalSponsors, nargs='+', help='', arg_group='Target Connected '
                   'Organization')
        c.argument('expiration', action=AddExpiration, nargs='+', help='expirationPattern', arg_group='Schedule')
        c.argument('recurrence', type=validate_file_or_dict, help='patternedRecurrence Expected value: '
                   'json-string/@json-file.', arg_group='Schedule')
        c.argument('start_date_time', help='', arg_group='Schedule')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagement create-access-package-assignment-policy') as c:
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagement create-access-package-assignment-request') as c:
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagement create-access-package-assignment-resource-role') as c:
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagement create-access-package-catalog') as c:
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('catalog_status', type=str, help='')
        c.argument('catalog_type', type=str, help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_externally_visible', arg_type=get_three_state_flag(), help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resources', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_packages', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagement create-access-package-resource') as c:
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagement create-access-package-resource-request') as c:
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('catalog_id', type=str, help='')
        c.argument('execute_immediately', arg_type=get_three_state_flag(), help='')
        c.argument('expiration_date_time', help='')
        c.argument('is_validation_only', arg_type=get_three_state_flag(), help='')
        c.argument('justification', type=str, help='')
        c.argument('request_state', type=str, help='')
        c.argument('request_status', type=str, help='')
        c.argument('request_type', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Requestor')
        c.argument('alt_sec_id', type=str, help='', arg_group='Requestor')
        c.argument('connected_organization_id', type=str, help='', arg_group='Requestor')
        c.argument('display_name', type=str, help='', arg_group='Requestor')
        c.argument('email', type=str, help='', arg_group='Requestor')
        c.argument('object_id', type=str, help='', arg_group='Requestor')
        c.argument('on_premises_security_identifier', type=str, help='', arg_group='Requestor')
        c.argument('principal_name', type=str, help='', arg_group='Requestor')
        c.argument('type_', options_list=['--type'], type=str, help='', arg_group='Requestor')
        c.argument('id1', type=str, help='Read-only.', arg_group='Requestor Connected Organization')
        c.argument('created_by', type=str, help='', arg_group='Requestor Connected Organization')
        c.argument('created_date_time', help='', arg_group='Requestor Connected Organization')
        c.argument('description', type=str, help='', arg_group='Requestor Connected Organization')
        c.argument('microsoft_graph_connected_organization_display_name', type=str, help='', arg_group='Requestor '
                   'Connected Organization')
        c.argument('identity_sources', action=AddIdentitySources, nargs='+', help=' Expect value: KEY1=VALUE1 '
                   'KEY2=VALUE2 ...', arg_group='Requestor Connected Organization')
        c.argument('modified_by', type=str, help='', arg_group='Requestor Connected Organization')
        c.argument('modified_date_time', help='', arg_group='Requestor Connected Organization')
        c.argument('state', arg_type=get_enum_type(['configured', 'proposed', 'unknownFutureValue']), help='',
                   arg_group='Requestor Connected Organization')
        c.argument('external_sponsors', action=AddExternalSponsors, nargs='+', help='', arg_group='Requestor Connected '
                   'Organization')
        c.argument('internal_sponsors', action=AddInternalSponsors, nargs='+', help='', arg_group='Requestor Connected '
                   'Organization')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagement create-access-package-resource-role-scope') as c:
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_resource_role', type=validate_file_or_dict, help='accessPackageResourceRole '
                   'Expected value: json-string/@json-file.')
        c.argument('access_package_resource_scope', type=validate_file_or_dict, help='accessPackageResourceScope '
                   'Expected value: json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagement create-connected-organization') as c:
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('identity_sources', action=AddIdentitySources, nargs='+', help=' Expect value: KEY1=VALUE1 '
                   'KEY2=VALUE2 ...')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('state', arg_type=get_enum_type(['configured', 'proposed', 'unknownFutureValue']), help='')
        c.argument('external_sponsors', action=AddExternalSponsors, nargs='+', help='')
        c.argument('internal_sponsors', action=AddInternalSponsors, nargs='+', help='')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagement delete-access-package') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagement delete-access-package-assignment') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagement delete-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagement delete-access-package-assignment-request') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagement delete-access-package-assignment-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagement delete-access-package-catalog') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagement delete-access-package-resource') as c:
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagement delete-access-package-resource-request') as c:
        c.argument('access_package_resource_request_id', type=str, help='key: id of accessPackageResourceRequest')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagement delete-access-package-resource-role-scope') as c:
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagement delete-connected-organization') as c:
        c.argument('connected_organization_id', type=str, help='key: id of connectedOrganization')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagement delete-setting') as c:
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagement list-access-package') as c:
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagement list-access-package-assignment') as c:
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagement list-access-package-assignment-policy') as c:
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagement list-access-package-assignment-request') as c:
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagement list-access-package-assignment-resource-role') as c:
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagement list-access-package-catalog') as c:
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagement list-access-package-resource') as c:
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagement list-access-package-resource-request') as c:
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagement list-access-package-resource-role-scope') as c:
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagement list-connected-organization') as c:
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagement show-access-package') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagement show-access-package-assignment') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagement show-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagement show-access-package-assignment-request') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagement show-access-package-assignment-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagement show-access-package-catalog') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagement show-access-package-resource') as c:
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagement show-access-package-resource-request') as c:
        c.argument('access_package_resource_request_id', type=str, help='key: id of accessPackageResourceRequest')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagement show-access-package-resource-role-scope') as c:
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagement show-connected-organization') as c:
        c.argument('connected_organization_id', type=str, help='key: id of connectedOrganization')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagement show-setting') as c:
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagement update-access-package') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('catalog_id', type=str, help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_hidden', arg_type=get_three_state_flag(), help='')
        c.argument('is_role_scopes_visible', arg_type=get_three_state_flag(), help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_assignment_policies', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_catalog', type=validate_file_or_dict, help='accessPackageCatalog Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_role_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagement update-access-package-assignment') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('access_package_id', type=str, help='')
        c.argument('assignment_policy_id', type=str, help='')
        c.argument('assignment_state', type=str, help='')
        c.argument('assignment_status', type=str, help='')
        c.argument('catalog_id', type=str, help='')
        c.argument('expired_date_time', help='')
        c.argument('is_extended', arg_type=get_three_state_flag(), help='')
        c.argument('target_id', type=str, help='')
        c.argument('access_package', type=validate_file_or_dict, help='accessPackage Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_assignment_policy', type=validate_file_or_dict, help='accessPackageAssignmentPolicy '
                   'Expected value: json-string/@json-file.')
        c.argument('access_package_assignment_requests', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_assignment_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Target')
        c.argument('alt_sec_id', type=str, help='', arg_group='Target')
        c.argument('connected_organization_id', type=str, help='', arg_group='Target')
        c.argument('display_name', type=str, help='', arg_group='Target')
        c.argument('email', type=str, help='', arg_group='Target')
        c.argument('object_id', type=str, help='', arg_group='Target')
        c.argument('on_premises_security_identifier', type=str, help='', arg_group='Target')
        c.argument('principal_name', type=str, help='', arg_group='Target')
        c.argument('type_', options_list=['--type'], type=str, help='', arg_group='Target')
        c.argument('id1', type=str, help='Read-only.', arg_group='Target Connected Organization')
        c.argument('created_by', type=str, help='', arg_group='Target Connected Organization')
        c.argument('created_date_time', help='', arg_group='Target Connected Organization')
        c.argument('description', type=str, help='', arg_group='Target Connected Organization')
        c.argument('microsoft_graph_connected_organization_display_name', type=str, help='', arg_group='Target '
                   'Connected Organization')
        c.argument('identity_sources', action=AddIdentitySources, nargs='+', help=' Expect value: KEY1=VALUE1 '
                   'KEY2=VALUE2 ...', arg_group='Target Connected Organization')
        c.argument('modified_by', type=str, help='', arg_group='Target Connected Organization')
        c.argument('modified_date_time', help='', arg_group='Target Connected Organization')
        c.argument('state', arg_type=get_enum_type(['configured', 'proposed', 'unknownFutureValue']), help='',
                   arg_group='Target Connected Organization')
        c.argument('external_sponsors', action=AddExternalSponsors, nargs='+', help='', arg_group='Target Connected '
                   'Organization')
        c.argument('internal_sponsors', action=AddInternalSponsors, nargs='+', help='', arg_group='Target Connected '
                   'Organization')
        c.argument('expiration', action=AddExpiration, nargs='+', help='expirationPattern', arg_group='Schedule')
        c.argument('recurrence', type=validate_file_or_dict, help='patternedRecurrence Expected value: '
                   'json-string/@json-file.', arg_group='Schedule')
        c.argument('start_date_time', help='', arg_group='Schedule')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagement update-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagement update-access-package-assignment-request') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagement update-access-package-assignment-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagement update-access-package-catalog') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('catalog_status', type=str, help='')
        c.argument('catalog_type', type=str, help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_externally_visible', arg_type=get_three_state_flag(), help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resources', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_packages', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagement update-access-package-resource') as c:
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagement update-access-package-resource-request') as c:
        c.argument('access_package_resource_request_id', type=str, help='key: id of accessPackageResourceRequest')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('catalog_id', type=str, help='')
        c.argument('execute_immediately', arg_type=get_three_state_flag(), help='')
        c.argument('expiration_date_time', help='')
        c.argument('is_validation_only', arg_type=get_three_state_flag(), help='')
        c.argument('justification', type=str, help='')
        c.argument('request_state', type=str, help='')
        c.argument('request_status', type=str, help='')
        c.argument('request_type', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Requestor')
        c.argument('alt_sec_id', type=str, help='', arg_group='Requestor')
        c.argument('connected_organization_id', type=str, help='', arg_group='Requestor')
        c.argument('display_name', type=str, help='', arg_group='Requestor')
        c.argument('email', type=str, help='', arg_group='Requestor')
        c.argument('object_id', type=str, help='', arg_group='Requestor')
        c.argument('on_premises_security_identifier', type=str, help='', arg_group='Requestor')
        c.argument('principal_name', type=str, help='', arg_group='Requestor')
        c.argument('type_', options_list=['--type'], type=str, help='', arg_group='Requestor')
        c.argument('id1', type=str, help='Read-only.', arg_group='Requestor Connected Organization')
        c.argument('created_by', type=str, help='', arg_group='Requestor Connected Organization')
        c.argument('created_date_time', help='', arg_group='Requestor Connected Organization')
        c.argument('description', type=str, help='', arg_group='Requestor Connected Organization')
        c.argument('microsoft_graph_connected_organization_display_name', type=str, help='', arg_group='Requestor '
                   'Connected Organization')
        c.argument('identity_sources', action=AddIdentitySources, nargs='+', help=' Expect value: KEY1=VALUE1 '
                   'KEY2=VALUE2 ...', arg_group='Requestor Connected Organization')
        c.argument('modified_by', type=str, help='', arg_group='Requestor Connected Organization')
        c.argument('modified_date_time', help='', arg_group='Requestor Connected Organization')
        c.argument('state', arg_type=get_enum_type(['configured', 'proposed', 'unknownFutureValue']), help='',
                   arg_group='Requestor Connected Organization')
        c.argument('external_sponsors', action=AddExternalSponsors, nargs='+', help='', arg_group='Requestor Connected '
                   'Organization')
        c.argument('internal_sponsors', action=AddInternalSponsors, nargs='+', help='', arg_group='Requestor Connected '
                   'Organization')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagement update-access-package-resource-role-scope') as c:
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_resource_role', type=validate_file_or_dict, help='accessPackageResourceRole '
                   'Expected value: json-string/@json-file.')
        c.argument('access_package_resource_scope', type=validate_file_or_dict, help='accessPackageResourceScope '
                   'Expected value: json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagement update-connected-organization') as c:
        c.argument('connected_organization_id', type=str, help='key: id of connectedOrganization')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('identity_sources', action=AddIdentitySources, nargs='+', help=' Expect value: KEY1=VALUE1 '
                   'KEY2=VALUE2 ...')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('state', arg_type=get_enum_type(['configured', 'proposed', 'unknownFutureValue']), help='')
        c.argument('external_sponsors', action=AddExternalSponsors, nargs='+', help='')
        c.argument('internal_sponsors', action=AddInternalSponsors, nargs='+', help='')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagement update-setting') as c:
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('days_until_external_user_deleted_after_blocked', type=int, help='')
        c.argument('external_user_lifecycle_action', type=str, help='')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpolicy delete-access-package-catalog') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpolicy delete-ref-access-package') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpolicy set-ref-access-package') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('body', type=validate_file_or_dict, help='New navigation property ref values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpolicy show-access-package') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpolicy show-access-package-catalog') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpolicy show-ref-access-package') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpolicy update-access-package-catalog') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('catalog_status', type=str, help='')
        c.argument('catalog_type', type=str, help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_externally_visible', arg_type=get_three_state_flag(), help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resources', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_packages', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalog create-access-package') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('catalog_id', type=str, help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_hidden', arg_type=get_three_state_flag(), help='')
        c.argument('is_role_scopes_visible', arg_type=get_three_state_flag(), help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_assignment_policies', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_catalog', type=validate_file_or_dict, help='accessPackageCatalog Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_role_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalog create-access-package-resource') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalog create-access-package-resource-role') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalog create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalog delete-access-package') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalog delete-access-package-resource') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalog delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalog delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalog list-access-package') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalog list-access-package-resource') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalog list-access-package-resource-role') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalog list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalog show-access-package') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalog show-access-package-resource') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalog show-access-package-resource-role') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalog show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalog update-access-package') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('catalog_id', type=str, help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_hidden', arg_type=get_three_state_flag(), help='')
        c.argument('is_role_scopes_visible', arg_type=get_three_state_flag(), help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_assignment_policies', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_catalog', type=validate_file_or_dict, help='accessPackageCatalog Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_role_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalog update-access-package-resource') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalog update-access-package-resource-role') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalog update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcerole delete-access-package-resource') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcerole show-access-package-resource') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcerole update-access-package-resource') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcerolesaccesspackageresource create-access-package-resource-role') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcerolesaccesspackageresource create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcerolesaccesspackageresource delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_role_id1', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcerolesaccesspackageresource delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcerolesaccesspackageresource list-access-package-resource-role') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcerolesaccesspackageresource list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcerolesaccesspackageresource show-access-package-resource-role') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_role_id1', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcerolesaccesspackageresource show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcerolesaccesspackageresource update-access-package-resource-role') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_role_id1', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcerolesaccesspackageresource update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcerolesaccesspackageresourceaccesspackageresourcescope delete-access-package-resource') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcerolesaccesspackageresourceaccesspackageresourcescope show-access-package-resource') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcerolesaccesspackageresourceaccesspackageresourcescope update-access-package-resource') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresource create-access-package-resource-role') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresource create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresource delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresource delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresource list-access-package-resource-role') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresource list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresource show-access-package-resource-role') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresource show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresource update-access-package-resource-role') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresource update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcesaccesspackageresourcerole delete-access-package-resource') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcesaccesspackageresourcerole show-access-package-resource') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcesaccesspackageresourcerole update-access-package-resource') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcesaccesspackageresourcescope delete-access-package-resource') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcesaccesspackageresourcescope show-access-package-resource') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcesaccesspackageresourcescope update-access-package-resource') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcescope delete-access-package-resource') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcescope show-access-package-resource') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcescope update-access-package-resource') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcescopesaccesspackageresource create-access-package-resource-role') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcescopesaccesspackageresource create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcescopesaccesspackageresource delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcescopesaccesspackageresource delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_scope_id1', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcescopesaccesspackageresource list-access-package-resource-role') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcescopesaccesspackageresource list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcescopesaccesspackageresource show-access-package-resource-role') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcescopesaccesspackageresource show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_scope_id1', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcescopesaccesspackageresource update-access-package-resource-role') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcescopesaccesspackageresource update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_scope_id1', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcescopesaccesspackageresourceaccesspackageresourcerole delete-access-package-resource') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcescopesaccesspackageresourceaccesspackageresourcerole show-access-package-resource') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcescopesaccesspackageresourceaccesspackageresourcerole update-access-package-resource') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackage create-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackage create-access-package-resource-role-scope') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_resource_role', type=validate_file_or_dict, help='accessPackageResourceRole '
                   'Expected value: json-string/@json-file.')
        c.argument('access_package_resource_scope', type=validate_file_or_dict, help='accessPackageResourceScope '
                   'Expected value: json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackage delete-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id1', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackage delete-access-package-resource-role-scope') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackage delete-ref-access-package-catalog') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackage list-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackage list-access-package-resource-role-scope') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackage search') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackage set-ref-access-package-catalog') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('body', type=validate_file_or_dict, help='New navigation property ref values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackage show-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id1', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackage show-access-package-catalog') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackage show-access-package-resource-role-scope') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackage show-ref-access-package-catalog') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackage update-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id1', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackage update-access-package-resource-role-scope') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_resource_role', type=validate_file_or_dict, help='accessPackageResourceRole '
                   'Expected value: json-string/@json-file.')
        c.argument('access_package_resource_scope', type=validate_file_or_dict, help='accessPackageResourceScope '
                   'Expected value: json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackagesaccesspackageresourcerolescope delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackagesaccesspackageresourcerolescope delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackagesaccesspackageresourcerolescope show-access-package-resource-role') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackagesaccesspackageresourcerolescope show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackagesaccesspackageresourcerolescope update-access-package-resource-role') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackagesaccesspackageresourcerolescope update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcerole delete-access-package-resource') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcerole show-access-package-resource') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcerole update-access-package-resource') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource create-access-package-resource-role') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource list-access-package-resource-role') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource show-access-package-resource-role') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource update-access-package-resource-role') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresourceaccesspackageresourcescope delete-access-package-resource') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresourceaccesspackageresourcescope show-access-package-resource') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresourceaccesspackageresourcescope update-access-package-resource') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescope delete-access-package-resource') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescope show-access-package-resource') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescope update-access-package-resource') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource create-access-package-resource-role') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource list-access-package-resource-role') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource show-access-package-resource-role') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource update-access-package-resource-role') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresourceaccesspackageresourcerole delete-access-package-resource') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresourceaccesspackageresourcerole show-access-package-resource') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresourceaccesspackageresourcerole update-access-package-resource') as c:
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequest cancel') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequest delete-access-package-assignment') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequest delete-ref-access-package') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequest delete-requestor') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequest set-ref-access-package') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('body', type=validate_file_or_dict, help='New navigation property ref values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequest show-access-package') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequest show-access-package-assignment') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequest show-ref-access-package') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequest show-requestor') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequest update-access-package-assignment') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('access_package_id', type=str, help='')
        c.argument('assignment_policy_id', type=str, help='')
        c.argument('assignment_state', type=str, help='')
        c.argument('assignment_status', type=str, help='')
        c.argument('catalog_id', type=str, help='')
        c.argument('expired_date_time', help='')
        c.argument('is_extended', arg_type=get_three_state_flag(), help='')
        c.argument('target_id', type=str, help='')
        c.argument('access_package', type=validate_file_or_dict, help='accessPackage Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_assignment_policy', type=validate_file_or_dict, help='accessPackageAssignmentPolicy '
                   'Expected value: json-string/@json-file.')
        c.argument('access_package_assignment_requests', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_assignment_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Target')
        c.argument('alt_sec_id', type=str, help='', arg_group='Target')
        c.argument('connected_organization_id', type=str, help='', arg_group='Target')
        c.argument('display_name', type=str, help='', arg_group='Target')
        c.argument('email', type=str, help='', arg_group='Target')
        c.argument('object_id', type=str, help='', arg_group='Target')
        c.argument('on_premises_security_identifier', type=str, help='', arg_group='Target')
        c.argument('principal_name', type=str, help='', arg_group='Target')
        c.argument('type_', options_list=['--type'], type=str, help='', arg_group='Target')
        c.argument('id1', type=str, help='Read-only.', arg_group='Target Connected Organization')
        c.argument('created_by', type=str, help='', arg_group='Target Connected Organization')
        c.argument('created_date_time', help='', arg_group='Target Connected Organization')
        c.argument('description', type=str, help='', arg_group='Target Connected Organization')
        c.argument('microsoft_graph_connected_organization_display_name', type=str, help='', arg_group='Target '
                   'Connected Organization')
        c.argument('identity_sources', action=AddIdentitySources, nargs='+', help=' Expect value: KEY1=VALUE1 '
                   'KEY2=VALUE2 ...', arg_group='Target Connected Organization')
        c.argument('modified_by', type=str, help='', arg_group='Target Connected Organization')
        c.argument('modified_date_time', help='', arg_group='Target Connected Organization')
        c.argument('state', arg_type=get_enum_type(['configured', 'proposed', 'unknownFutureValue']), help='',
                   arg_group='Target Connected Organization')
        c.argument('external_sponsors', action=AddExternalSponsors, nargs='+', help='', arg_group='Target Connected '
                   'Organization')
        c.argument('internal_sponsors', action=AddInternalSponsors, nargs='+', help='', arg_group='Target Connected '
                   'Organization')
        c.argument('expiration', action=AddExpiration, nargs='+', help='expirationPattern', arg_group='Schedule')
        c.argument('recurrence', type=validate_file_or_dict, help='patternedRecurrence Expected value: '
                   'json-string/@json-file.', arg_group='Schedule')
        c.argument('start_date_time', help='', arg_group='Schedule')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequest update-requestor') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('alt_sec_id', type=str, help='')
        c.argument('connected_organization_id', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('email', type=str, help='')
        c.argument('object_id', type=str, help='')
        c.argument('on_premises_security_identifier', type=str, help='')
        c.argument('principal_name', type=str, help='')
        c.argument('type_', options_list=['--type'], type=str, help='')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Connected Organization')
        c.argument('created_by', type=str, help='', arg_group='Connected Organization')
        c.argument('created_date_time', help='', arg_group='Connected Organization')
        c.argument('description', type=str, help='', arg_group='Connected Organization')
        c.argument('microsoft_graph_connected_organization_display_name', type=str, help='', arg_group='Connected '
                   'Organization')
        c.argument('identity_sources', action=AddIdentitySources, nargs='+', help=' Expect value: KEY1=VALUE1 '
                   'KEY2=VALUE2 ...', arg_group='Connected Organization')
        c.argument('modified_by', type=str, help='', arg_group='Connected Organization')
        c.argument('modified_date_time', help='', arg_group='Connected Organization')
        c.argument('state', arg_type=get_enum_type(['configured', 'proposed', 'unknownFutureValue']), help='',
                   arg_group='Connected Organization')
        c.argument('external_sponsors', action=AddExternalSponsors, nargs='+', help='', arg_group='Connected '
                   'Organization')
        c.argument('internal_sponsors', action=AddInternalSponsors, nargs='+', help='', arg_group='Connected '
                   'Organization')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignment create-access-package-assignment-request') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignment create-access-package-assignment-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignment delete-access-package') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignment delete-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignment delete-access-package-assignment-request') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_request_id1', type=str,
                   help='key: id of accessPackageAssignmentRequest')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignment delete-access-package-assignment-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignment delete-target') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignment list-access-package-assignment-request') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignment list-access-package-assignment-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignment show-access-package') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignment show-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignment show-access-package-assignment-request') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_request_id1', type=str,
                   help='key: id of accessPackageAssignmentRequest')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignment show-access-package-assignment-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignment show-target') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignment update-access-package') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('catalog_id', type=str, help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_hidden', arg_type=get_three_state_flag(), help='')
        c.argument('is_role_scopes_visible', arg_type=get_three_state_flag(), help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_assignment_policies', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_catalog', type=validate_file_or_dict, help='accessPackageCatalog Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_role_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignment update-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignment update-access-package-assignment-request') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_request_id1', type=str,
                   help='key: id of accessPackageAssignmentRequest')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignment update-access-package-assignment-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignment update-target') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('alt_sec_id', type=str, help='')
        c.argument('connected_organization_id', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('email', type=str, help='')
        c.argument('object_id', type=str, help='')
        c.argument('on_premises_security_identifier', type=str, help='')
        c.argument('principal_name', type=str, help='')
        c.argument('type_', options_list=['--type'], type=str, help='')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Connected Organization')
        c.argument('created_by', type=str, help='', arg_group='Connected Organization')
        c.argument('created_date_time', help='', arg_group='Connected Organization')
        c.argument('description', type=str, help='', arg_group='Connected Organization')
        c.argument('microsoft_graph_connected_organization_display_name', type=str, help='', arg_group='Connected '
                   'Organization')
        c.argument('identity_sources', action=AddIdentitySources, nargs='+', help=' Expect value: KEY1=VALUE1 '
                   'KEY2=VALUE2 ...', arg_group='Connected Organization')
        c.argument('modified_by', type=str, help='', arg_group='Connected Organization')
        c.argument('modified_date_time', help='', arg_group='Connected Organization')
        c.argument('state', arg_type=get_enum_type(['configured', 'proposed', 'unknownFutureValue']), help='',
                   arg_group='Connected Organization')
        c.argument('external_sponsors', action=AddExternalSponsors, nargs='+', help='', arg_group='Connected '
                   'Organization')
        c.argument('internal_sponsors', action=AddInternalSponsors, nargs='+', help='', arg_group='Connected '
                   'Organization')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackage create-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackage create-access-package-resource-role-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_resource_role', type=validate_file_or_dict, help='accessPackageResourceRole '
                   'Expected value: json-string/@json-file.')
        c.argument('access_package_resource_scope', type=validate_file_or_dict, help='accessPackageResourceScope '
                   'Expected value: json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackage delete-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackage delete-access-package-resource-role-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackage delete-ref-access-package-catalog') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackage list-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackage list-access-package-resource-role-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackage set-ref-access-package-catalog') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('body', type=validate_file_or_dict, help='New navigation property ref values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackage show-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackage show-access-package-catalog') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackage show-access-package-resource-role-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackage show-ref-access-package-catalog') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackage update-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackage update-access-package-resource-role-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_resource_role', type=validate_file_or_dict, help='accessPackageResourceRole '
                   'Expected value: json-string/@json-file.')
        c.argument('access_package_resource_scope', type=validate_file_or_dict, help='accessPackageResourceScope '
                   'Expected value: json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicy delete-access-package-catalog') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicy delete-ref-access-package') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicy set-ref-access-package') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('body', type=validate_file_or_dict, help='New navigation property ref values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicy show-access-package') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicy show-access-package-catalog') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicy show-ref-access-package') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicy update-access-package-catalog') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('catalog_status', type=str, help='')
        c.argument('catalog_type', type=str, help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_externally_visible', arg_type=get_three_state_flag(), help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resources', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_packages', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpoliciesaccesspackagecatalog create-access-package') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('catalog_id', type=str, help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_hidden', arg_type=get_three_state_flag(), help='')
        c.argument('is_role_scopes_visible', arg_type=get_three_state_flag(), help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_assignment_policies', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_catalog', type=validate_file_or_dict, help='accessPackageCatalog Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_role_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpoliciesaccesspackagecatalog create-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpoliciesaccesspackagecatalog create-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpoliciesaccesspackagecatalog create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpoliciesaccesspackagecatalog delete-access-package') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpoliciesaccesspackagecatalog delete-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpoliciesaccesspackagecatalog delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpoliciesaccesspackagecatalog delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpoliciesaccesspackagecatalog list-access-package') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpoliciesaccesspackagecatalog list-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpoliciesaccesspackagecatalog list-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpoliciesaccesspackagecatalog list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpoliciesaccesspackagecatalog show-access-package') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpoliciesaccesspackagecatalog show-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpoliciesaccesspackagecatalog show-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpoliciesaccesspackagecatalog show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpoliciesaccesspackagecatalog update-access-package') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('catalog_id', type=str, help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_hidden', arg_type=get_three_state_flag(), help='')
        c.argument('is_role_scopes_visible', arg_type=get_three_state_flag(), help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_assignment_policies', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_catalog', type=validate_file_or_dict, help='accessPackageCatalog Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_role_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpoliciesaccesspackagecatalog update-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpoliciesaccesspackagecatalog update-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpoliciesaccesspackagecatalog update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcerole delete-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcerole show-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcerole update-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcerolesaccesspackageresource create-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcerolesaccesspackageresource create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcerolesaccesspackageresource delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_role_id1', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcerolesaccesspackageresource delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcerolesaccesspackageresource list-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcerolesaccesspackageresource list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcerolesaccesspackageresource show-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_role_id1', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcerolesaccesspackageresource show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcerolesaccesspackageresource update-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_role_id1', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcerolesaccesspackageresource update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcerolesaccesspackageresourceaccesspackageresourcescope delete-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcerolesaccesspackageresourceaccesspackageresourcescope show-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcerolesaccesspackageresourceaccesspackageresourcescope update-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresource create-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresource create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresource delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresource delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresource list-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresource list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresource show-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresource show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresource update-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresource update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcesaccesspackageresourcerole delete-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcesaccesspackageresourcerole show-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcesaccesspackageresourcerole update-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcesaccesspackageresourcescope delete-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcesaccesspackageresourcescope show-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcesaccesspackageresourcescope update-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcescope delete-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcescope show-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcescope update-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcescopesaccesspackageresource create-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcescopesaccesspackageresource create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcescopesaccesspackageresource delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcescopesaccesspackageresource delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_scope_id1', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcescopesaccesspackageresource list-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcescopesaccesspackageresource list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcescopesaccesspackageresource show-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcescopesaccesspackageresource show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_scope_id1', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcescopesaccesspackageresource update-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcescopesaccesspackageresource update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_scope_id1', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcescopesaccesspackageresourceaccesspackageresourcerole delete-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcescopesaccesspackageresourceaccesspackageresourcerole show-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcescopesaccesspackageresourceaccesspackageresourcerole update-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackage search') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageresourcerolescope delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageresourcerolescope delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageresourcerolescope show-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageresourcerolescope show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageresourcerolescope update-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageresourcerolescope update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageresourcerolescopesaccesspackageresourcerole delete-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageresourcerolescopesaccesspackageresourcerole show-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageresourcerolescopesaccesspackageresourcerole update-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource create-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource list-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource show-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource update-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresourceaccesspackageresourcescope delete-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresourceaccesspackageresourcescope show-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresourceaccesspackageresourcescope update-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageresourcerolescopesaccesspackageresourcescope delete-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageresourcerolescopesaccesspackageresourcescope show-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageresourcerolescopesaccesspackageresourcescope update-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource create-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource list-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource show-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource update-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresourceaccesspackageresourcerole delete-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresourceaccesspackageresourcerole show-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresourceaccesspackageresourcerole update-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicy delete-access-package-catalog') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicy delete-ref-access-package') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicy set-ref-access-package') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('body', type=validate_file_or_dict, help='New navigation property ref values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicy show-access-package') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicy show-access-package-catalog') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicy show-ref-access-package') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicy update-access-package-catalog') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('catalog_status', type=str, help='')
        c.argument('catalog_type', type=str, help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_externally_visible', arg_type=get_three_state_flag(), help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resources', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_packages', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalog create-access-package') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('catalog_id', type=str, help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_hidden', arg_type=get_three_state_flag(), help='')
        c.argument('is_role_scopes_visible', arg_type=get_three_state_flag(), help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_assignment_policies', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_catalog', type=validate_file_or_dict, help='accessPackageCatalog Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_role_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalog create-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalog create-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalog create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalog delete-access-package') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalog delete-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalog delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalog delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalog list-access-package') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalog list-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalog list-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalog list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalog show-access-package') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalog show-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalog show-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalog show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalog update-access-package') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('catalog_id', type=str, help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_hidden', arg_type=get_three_state_flag(), help='')
        c.argument('is_role_scopes_visible', arg_type=get_three_state_flag(), help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_assignment_policies', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_catalog', type=validate_file_or_dict, help='accessPackageCatalog Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_role_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalog update-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalog update-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalog update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcerole delete-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcerole show-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcerole update-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcerolesaccesspackageresource create-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcerolesaccesspackageresource create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcerolesaccesspackageresource delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_role_id1', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcerolesaccesspackageresource delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcerolesaccesspackageresource list-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcerolesaccesspackageresource list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcerolesaccesspackageresource show-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_role_id1', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcerolesaccesspackageresource show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcerolesaccesspackageresource update-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_role_id1', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcerolesaccesspackageresource update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcerolesaccesspackageresourceaccesspackageresourcescope delete-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcerolesaccesspackageresourceaccesspackageresourcescope show-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcerolesaccesspackageresourceaccesspackageresourcescope update-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresource create-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresource create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresource delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresource delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresource list-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresource list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresource show-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresource show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresource update-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresource update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcesaccesspackageresourcerole delete-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcesaccesspackageresourcerole show-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcesaccesspackageresourcerole update-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcesaccesspackageresourcescope delete-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcesaccesspackageresourcescope show-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcesaccesspackageresourcescope update-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcescope delete-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcescope show-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcescope update-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcescopesaccesspackageresource create-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcescopesaccesspackageresource create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcescopesaccesspackageresource delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcescopesaccesspackageresource delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_scope_id1', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcescopesaccesspackageresource list-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcescopesaccesspackageresource list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcescopesaccesspackageresource show-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcescopesaccesspackageresource show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_scope_id1', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcescopesaccesspackageresource update-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcescopesaccesspackageresource update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_scope_id1', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcescopesaccesspackageresourceaccesspackageresourcerole delete-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcescopesaccesspackageresourceaccesspackageresourcerole show-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcescopesaccesspackageresourceaccesspackageresourcerole update-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackage create-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackage create-access-package-resource-role-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_resource_role', type=validate_file_or_dict, help='accessPackageResourceRole '
                   'Expected value: json-string/@json-file.')
        c.argument('access_package_resource_scope', type=validate_file_or_dict, help='accessPackageResourceScope '
                   'Expected value: json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackage delete-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackage delete-access-package-resource-role-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackage delete-ref-access-package-catalog') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackage list-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackage list-access-package-resource-role-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackage search') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackage set-ref-access-package-catalog') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('body', type=validate_file_or_dict, help='New navigation property ref values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackage show-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackage show-access-package-catalog') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackage show-access-package-resource-role-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackage show-ref-access-package-catalog') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackage update-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackage update-access-package-resource-role-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_resource_role', type=validate_file_or_dict, help='accessPackageResourceRole '
                   'Expected value: json-string/@json-file.')
        c.argument('access_package_resource_scope', type=validate_file_or_dict, help='accessPackageResourceScope '
                   'Expected value: json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescope delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescope delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescope show-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescope show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescope update-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescope update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcerole delete-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcerole show-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcerole update-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource create-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource list-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource show-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource update-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresourceaccesspackageresourcescope delete-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresourceaccesspackageresourcescope show-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresourceaccesspackageresourcescope update-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescope delete-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescope show-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescope update-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource create-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource list-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource show-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource update-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresourceaccesspackageresourcerole delete-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresourceaccesspackageresourcerole show-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresourceaccesspackageresourcerole update-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentrequest cancel') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_request_id1', type=str,
                   help='key: id of accessPackageAssignmentRequest')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentrequest my') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentresourcerole create-access-package-assignment') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('access_package_id', type=str, help='')
        c.argument('assignment_policy_id', type=str, help='')
        c.argument('assignment_state', type=str, help='')
        c.argument('assignment_status', type=str, help='')
        c.argument('catalog_id', type=str, help='')
        c.argument('expired_date_time', help='')
        c.argument('is_extended', arg_type=get_three_state_flag(), help='')
        c.argument('target_id', type=str, help='')
        c.argument('access_package', type=validate_file_or_dict, help='accessPackage Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_assignment_policy', type=validate_file_or_dict, help='accessPackageAssignmentPolicy '
                   'Expected value: json-string/@json-file.')
        c.argument('access_package_assignment_requests', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_assignment_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Target')
        c.argument('alt_sec_id', type=str, help='', arg_group='Target')
        c.argument('connected_organization_id', type=str, help='', arg_group='Target')
        c.argument('display_name', type=str, help='', arg_group='Target')
        c.argument('email', type=str, help='', arg_group='Target')
        c.argument('object_id', type=str, help='', arg_group='Target')
        c.argument('on_premises_security_identifier', type=str, help='', arg_group='Target')
        c.argument('principal_name', type=str, help='', arg_group='Target')
        c.argument('type_', options_list=['--type'], type=str, help='', arg_group='Target')
        c.argument('id1', type=str, help='Read-only.', arg_group='Target Connected Organization')
        c.argument('created_by', type=str, help='', arg_group='Target Connected Organization')
        c.argument('created_date_time', help='', arg_group='Target Connected Organization')
        c.argument('description', type=str, help='', arg_group='Target Connected Organization')
        c.argument('microsoft_graph_connected_organization_display_name', type=str, help='', arg_group='Target '
                   'Connected Organization')
        c.argument('identity_sources', action=AddIdentitySources, nargs='+', help=' Expect value: KEY1=VALUE1 '
                   'KEY2=VALUE2 ...', arg_group='Target Connected Organization')
        c.argument('modified_by', type=str, help='', arg_group='Target Connected Organization')
        c.argument('modified_date_time', help='', arg_group='Target Connected Organization')
        c.argument('state', arg_type=get_enum_type(['configured', 'proposed', 'unknownFutureValue']), help='',
                   arg_group='Target Connected Organization')
        c.argument('external_sponsors', action=AddExternalSponsors, nargs='+', help='', arg_group='Target Connected '
                   'Organization')
        c.argument('internal_sponsors', action=AddInternalSponsors, nargs='+', help='', arg_group='Target Connected '
                   'Organization')
        c.argument('expiration', action=AddExpiration, nargs='+', help='expirationPattern', arg_group='Schedule')
        c.argument('recurrence', type=validate_file_or_dict, help='patternedRecurrence Expected value: '
                   'json-string/@json-file.', arg_group='Schedule')
        c.argument('start_date_time', help='', arg_group='Schedule')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentresourcerole delete-access-package-assignment') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentresourcerole delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentresourcerole delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentresourcerole delete-access-package-subject') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentresourcerole list-access-package-assignment') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentresourcerole my') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentresourcerole show-access-package-assignment') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentresourcerole show-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentresourcerole show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentresourcerole show-access-package-subject') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentresourcerole update-access-package-assignment') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('access_package_id', type=str, help='')
        c.argument('assignment_policy_id', type=str, help='')
        c.argument('assignment_state', type=str, help='')
        c.argument('assignment_status', type=str, help='')
        c.argument('catalog_id', type=str, help='')
        c.argument('expired_date_time', help='')
        c.argument('is_extended', arg_type=get_three_state_flag(), help='')
        c.argument('target_id', type=str, help='')
        c.argument('access_package', type=validate_file_or_dict, help='accessPackage Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_assignment_policy', type=validate_file_or_dict, help='accessPackageAssignmentPolicy '
                   'Expected value: json-string/@json-file.')
        c.argument('access_package_assignment_requests', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_assignment_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Target')
        c.argument('alt_sec_id', type=str, help='', arg_group='Target')
        c.argument('connected_organization_id', type=str, help='', arg_group='Target')
        c.argument('display_name', type=str, help='', arg_group='Target')
        c.argument('email', type=str, help='', arg_group='Target')
        c.argument('object_id', type=str, help='', arg_group='Target')
        c.argument('on_premises_security_identifier', type=str, help='', arg_group='Target')
        c.argument('principal_name', type=str, help='', arg_group='Target')
        c.argument('type_', options_list=['--type'], type=str, help='', arg_group='Target')
        c.argument('id1', type=str, help='Read-only.', arg_group='Target Connected Organization')
        c.argument('created_by', type=str, help='', arg_group='Target Connected Organization')
        c.argument('created_date_time', help='', arg_group='Target Connected Organization')
        c.argument('description', type=str, help='', arg_group='Target Connected Organization')
        c.argument('microsoft_graph_connected_organization_display_name', type=str, help='', arg_group='Target '
                   'Connected Organization')
        c.argument('identity_sources', action=AddIdentitySources, nargs='+', help=' Expect value: KEY1=VALUE1 '
                   'KEY2=VALUE2 ...', arg_group='Target Connected Organization')
        c.argument('modified_by', type=str, help='', arg_group='Target Connected Organization')
        c.argument('modified_date_time', help='', arg_group='Target Connected Organization')
        c.argument('state', arg_type=get_enum_type(['configured', 'proposed', 'unknownFutureValue']), help='',
                   arg_group='Target Connected Organization')
        c.argument('external_sponsors', action=AddExternalSponsors, nargs='+', help='', arg_group='Target Connected '
                   'Organization')
        c.argument('internal_sponsors', action=AddInternalSponsors, nargs='+', help='', arg_group='Target Connected '
                   'Organization')
        c.argument('expiration', action=AddExpiration, nargs='+', help='expirationPattern', arg_group='Schedule')
        c.argument('recurrence', type=validate_file_or_dict, help='patternedRecurrence Expected value: '
                   'json-string/@json-file.', arg_group='Schedule')
        c.argument('start_date_time', help='', arg_group='Schedule')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentresourcerole update-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentresourcerole update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentresourcerole update-access-package-subject') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('alt_sec_id', type=str, help='')
        c.argument('connected_organization_id', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('email', type=str, help='')
        c.argument('object_id', type=str, help='')
        c.argument('on_premises_security_identifier', type=str, help='')
        c.argument('principal_name', type=str, help='')
        c.argument('type_', options_list=['--type'], type=str, help='')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Connected Organization')
        c.argument('created_by', type=str, help='', arg_group='Connected Organization')
        c.argument('created_date_time', help='', arg_group='Connected Organization')
        c.argument('description', type=str, help='', arg_group='Connected Organization')
        c.argument('microsoft_graph_connected_organization_display_name', type=str, help='', arg_group='Connected '
                   'Organization')
        c.argument('identity_sources', action=AddIdentitySources, nargs='+', help=' Expect value: KEY1=VALUE1 '
                   'KEY2=VALUE2 ...', arg_group='Connected Organization')
        c.argument('modified_by', type=str, help='', arg_group='Connected Organization')
        c.argument('modified_date_time', help='', arg_group='Connected Organization')
        c.argument('state', arg_type=get_enum_type(['configured', 'proposed', 'unknownFutureValue']), help='',
                   arg_group='Connected Organization')
        c.argument('external_sponsors', action=AddExternalSponsors, nargs='+', help='', arg_group='Connected '
                   'Organization')
        c.argument('internal_sponsors', action=AddInternalSponsors, nargs='+', help='', arg_group='Connected '
                   'Organization')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentresourcerolesaccesspackageassignment my') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentresourcerolesaccesspackageresourcerole delete-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentresourcerolesaccesspackageresourcerole show-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentresourcerolesaccesspackageresourcerole update-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentresourcerolesaccesspackageresourceroleaccesspackageresource create-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentresourcerolesaccesspackageresourceroleaccesspackageresource create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentresourcerolesaccesspackageresourceroleaccesspackageresource delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentresourcerolesaccesspackageresourceroleaccesspackageresource delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentresourcerolesaccesspackageresourceroleaccesspackageresource list-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentresourcerolesaccesspackageresourceroleaccesspackageresource list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentresourcerolesaccesspackageresourceroleaccesspackageresource show-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentresourcerolesaccesspackageresourceroleaccesspackageresource show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentresourcerolesaccesspackageresourceroleaccesspackageresource update-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentresourcerolesaccesspackageresourceroleaccesspackageresource update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentresourcerolesaccesspackageresourceroleaccesspackageresourceaccesspackageresourcescope delete-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentresourcerolesaccesspackageresourceroleaccesspackageresourceaccesspackageresourcescope show-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentresourcerolesaccesspackageresourceroleaccesspackageresourceaccesspackageresourcescope update-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentresourcerolesaccesspackageresourcescope delete-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentresourcerolesaccesspackageresourcescope show-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentresourcerolesaccesspackageresourcescope update-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentresourcerolesaccesspackageresourcescopeaccesspackageresource create-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentresourcerolesaccesspackageresourcescopeaccesspackageresource create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentresourcerolesaccesspackageresourcescopeaccesspackageresource delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentresourcerolesaccesspackageresourcescopeaccesspackageresource delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentresourcerolesaccesspackageresourcescopeaccesspackageresource list-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentresourcerolesaccesspackageresourcescopeaccesspackageresource list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentresourcerolesaccesspackageresourcescopeaccesspackageresource show-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentresourcerolesaccesspackageresourcescopeaccesspackageresource show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentresourcerolesaccesspackageresourcescopeaccesspackageresource update-access-package-resource-role') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentresourcerolesaccesspackageresourcescopeaccesspackageresource update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentresourcerolesaccesspackageresourcescopeaccesspackageresourceaccesspackageresourcerole delete-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentresourcerolesaccesspackageresourcescopeaccesspackageresourceaccesspackageresourcerole show-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentresourcerolesaccesspackageresourcescopeaccesspackageresourceaccesspackageresourcerole update-access-package-resource') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentresourcerolesaccesspackagesubject delete-ref-connected-organization') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentresourcerolesaccesspackagesubject set-ref-connected-organization') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('body', type=validate_file_or_dict, help='New navigation property ref values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentresourcerolesaccesspackagesubject show-connected-organization') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmentaccesspackageassignmentresourcerolesaccesspackagesubject show-ref-connected-organization') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmenttarget delete-ref-connected-organization') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmenttarget set-ref-connected-organization') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('body', type=validate_file_or_dict, help='New navigation property ref values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmenttarget show-connected-organization') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsaccesspackageassignmenttarget show-ref-connected-organization') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsrequestor delete-ref-connected-organization') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsrequestor set-ref-connected-organization') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('body', type=validate_file_or_dict, help='New navigation property ref values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsrequestor show-connected-organization') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentrequestsrequestor show-ref-connected-organization') as c:
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerole create-access-package-assignment') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('access_package_id', type=str, help='')
        c.argument('assignment_policy_id', type=str, help='')
        c.argument('assignment_state', type=str, help='')
        c.argument('assignment_status', type=str, help='')
        c.argument('catalog_id', type=str, help='')
        c.argument('expired_date_time', help='')
        c.argument('is_extended', arg_type=get_three_state_flag(), help='')
        c.argument('target_id', type=str, help='')
        c.argument('access_package', type=validate_file_or_dict, help='accessPackage Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_assignment_policy', type=validate_file_or_dict, help='accessPackageAssignmentPolicy '
                   'Expected value: json-string/@json-file.')
        c.argument('access_package_assignment_requests', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_assignment_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Target')
        c.argument('alt_sec_id', type=str, help='', arg_group='Target')
        c.argument('connected_organization_id', type=str, help='', arg_group='Target')
        c.argument('display_name', type=str, help='', arg_group='Target')
        c.argument('email', type=str, help='', arg_group='Target')
        c.argument('object_id', type=str, help='', arg_group='Target')
        c.argument('on_premises_security_identifier', type=str, help='', arg_group='Target')
        c.argument('principal_name', type=str, help='', arg_group='Target')
        c.argument('type_', options_list=['--type'], type=str, help='', arg_group='Target')
        c.argument('id1', type=str, help='Read-only.', arg_group='Target Connected Organization')
        c.argument('created_by', type=str, help='', arg_group='Target Connected Organization')
        c.argument('created_date_time', help='', arg_group='Target Connected Organization')
        c.argument('description', type=str, help='', arg_group='Target Connected Organization')
        c.argument('microsoft_graph_connected_organization_display_name', type=str, help='', arg_group='Target '
                   'Connected Organization')
        c.argument('identity_sources', action=AddIdentitySources, nargs='+', help=' Expect value: KEY1=VALUE1 '
                   'KEY2=VALUE2 ...', arg_group='Target Connected Organization')
        c.argument('modified_by', type=str, help='', arg_group='Target Connected Organization')
        c.argument('modified_date_time', help='', arg_group='Target Connected Organization')
        c.argument('state', arg_type=get_enum_type(['configured', 'proposed', 'unknownFutureValue']), help='',
                   arg_group='Target Connected Organization')
        c.argument('external_sponsors', action=AddExternalSponsors, nargs='+', help='', arg_group='Target Connected '
                   'Organization')
        c.argument('internal_sponsors', action=AddInternalSponsors, nargs='+', help='', arg_group='Target Connected '
                   'Organization')
        c.argument('expiration', action=AddExpiration, nargs='+', help='expirationPattern', arg_group='Schedule')
        c.argument('recurrence', type=validate_file_or_dict, help='patternedRecurrence Expected value: '
                   'json-string/@json-file.', arg_group='Schedule')
        c.argument('start_date_time', help='', arg_group='Schedule')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerole delete-access-package-assignment') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerole delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerole delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerole delete-access-package-subject') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerole list-access-package-assignment') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerole show-access-package-assignment') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerole show-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerole show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerole show-access-package-subject') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerole update-access-package-assignment') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('access_package_id', type=str, help='')
        c.argument('assignment_policy_id', type=str, help='')
        c.argument('assignment_state', type=str, help='')
        c.argument('assignment_status', type=str, help='')
        c.argument('catalog_id', type=str, help='')
        c.argument('expired_date_time', help='')
        c.argument('is_extended', arg_type=get_three_state_flag(), help='')
        c.argument('target_id', type=str, help='')
        c.argument('access_package', type=validate_file_or_dict, help='accessPackage Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_assignment_policy', type=validate_file_or_dict, help='accessPackageAssignmentPolicy '
                   'Expected value: json-string/@json-file.')
        c.argument('access_package_assignment_requests', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_assignment_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Target')
        c.argument('alt_sec_id', type=str, help='', arg_group='Target')
        c.argument('connected_organization_id', type=str, help='', arg_group='Target')
        c.argument('display_name', type=str, help='', arg_group='Target')
        c.argument('email', type=str, help='', arg_group='Target')
        c.argument('object_id', type=str, help='', arg_group='Target')
        c.argument('on_premises_security_identifier', type=str, help='', arg_group='Target')
        c.argument('principal_name', type=str, help='', arg_group='Target')
        c.argument('type_', options_list=['--type'], type=str, help='', arg_group='Target')
        c.argument('id1', type=str, help='Read-only.', arg_group='Target Connected Organization')
        c.argument('created_by', type=str, help='', arg_group='Target Connected Organization')
        c.argument('created_date_time', help='', arg_group='Target Connected Organization')
        c.argument('description', type=str, help='', arg_group='Target Connected Organization')
        c.argument('microsoft_graph_connected_organization_display_name', type=str, help='', arg_group='Target '
                   'Connected Organization')
        c.argument('identity_sources', action=AddIdentitySources, nargs='+', help=' Expect value: KEY1=VALUE1 '
                   'KEY2=VALUE2 ...', arg_group='Target Connected Organization')
        c.argument('modified_by', type=str, help='', arg_group='Target Connected Organization')
        c.argument('modified_date_time', help='', arg_group='Target Connected Organization')
        c.argument('state', arg_type=get_enum_type(['configured', 'proposed', 'unknownFutureValue']), help='',
                   arg_group='Target Connected Organization')
        c.argument('external_sponsors', action=AddExternalSponsors, nargs='+', help='', arg_group='Target Connected '
                   'Organization')
        c.argument('internal_sponsors', action=AddInternalSponsors, nargs='+', help='', arg_group='Target Connected '
                   'Organization')
        c.argument('expiration', action=AddExpiration, nargs='+', help='expirationPattern', arg_group='Schedule')
        c.argument('recurrence', type=validate_file_or_dict, help='patternedRecurrence Expected value: '
                   'json-string/@json-file.', arg_group='Schedule')
        c.argument('start_date_time', help='', arg_group='Schedule')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerole update-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerole update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerole update-access-package-subject') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('alt_sec_id', type=str, help='')
        c.argument('connected_organization_id', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('email', type=str, help='')
        c.argument('object_id', type=str, help='')
        c.argument('on_premises_security_identifier', type=str, help='')
        c.argument('principal_name', type=str, help='')
        c.argument('type_', options_list=['--type'], type=str, help='')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Connected Organization')
        c.argument('created_by', type=str, help='', arg_group='Connected Organization')
        c.argument('created_date_time', help='', arg_group='Connected Organization')
        c.argument('description', type=str, help='', arg_group='Connected Organization')
        c.argument('microsoft_graph_connected_organization_display_name', type=str, help='', arg_group='Connected '
                   'Organization')
        c.argument('identity_sources', action=AddIdentitySources, nargs='+', help=' Expect value: KEY1=VALUE1 '
                   'KEY2=VALUE2 ...', arg_group='Connected Organization')
        c.argument('modified_by', type=str, help='', arg_group='Connected Organization')
        c.argument('modified_date_time', help='', arg_group='Connected Organization')
        c.argument('state', arg_type=get_enum_type(['configured', 'proposed', 'unknownFutureValue']), help='',
                   arg_group='Connected Organization')
        c.argument('external_sponsors', action=AddExternalSponsors, nargs='+', help='', arg_group='Connected '
                   'Organization')
        c.argument('internal_sponsors', action=AddInternalSponsors, nargs='+', help='', arg_group='Connected '
                   'Organization')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignment create-access-package-assignment-request') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignment create-access-package-assignment-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignment delete-access-package') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignment delete-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignment delete-access-package-assignment-request') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignment delete-access-package-assignment-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id1', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignment delete-target') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignment list-access-package-assignment-request') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignment list-access-package-assignment-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignment my') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignment show-access-package') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignment show-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignment show-access-package-assignment-request') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignment show-access-package-assignment-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id1', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignment show-target') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignment update-access-package') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('catalog_id', type=str, help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_hidden', arg_type=get_three_state_flag(), help='')
        c.argument('is_role_scopes_visible', arg_type=get_three_state_flag(), help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_assignment_policies', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_catalog', type=validate_file_or_dict, help='accessPackageCatalog Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_role_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignment update-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignment update-access-package-assignment-request') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignment update-access-package-assignment-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id1', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignment update-target') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('alt_sec_id', type=str, help='')
        c.argument('connected_organization_id', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('email', type=str, help='')
        c.argument('object_id', type=str, help='')
        c.argument('on_premises_security_identifier', type=str, help='')
        c.argument('principal_name', type=str, help='')
        c.argument('type_', options_list=['--type'], type=str, help='')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Connected Organization')
        c.argument('created_by', type=str, help='', arg_group='Connected Organization')
        c.argument('created_date_time', help='', arg_group='Connected Organization')
        c.argument('description', type=str, help='', arg_group='Connected Organization')
        c.argument('microsoft_graph_connected_organization_display_name', type=str, help='', arg_group='Connected '
                   'Organization')
        c.argument('identity_sources', action=AddIdentitySources, nargs='+', help=' Expect value: KEY1=VALUE1 '
                   'KEY2=VALUE2 ...', arg_group='Connected Organization')
        c.argument('modified_by', type=str, help='', arg_group='Connected Organization')
        c.argument('modified_date_time', help='', arg_group='Connected Organization')
        c.argument('state', arg_type=get_enum_type(['configured', 'proposed', 'unknownFutureValue']), help='',
                   arg_group='Connected Organization')
        c.argument('external_sponsors', action=AddExternalSponsors, nargs='+', help='', arg_group='Connected '
                   'Organization')
        c.argument('internal_sponsors', action=AddInternalSponsors, nargs='+', help='', arg_group='Connected '
                   'Organization')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackage create-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackage create-access-package-resource-role-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_resource_role', type=validate_file_or_dict, help='accessPackageResourceRole '
                   'Expected value: json-string/@json-file.')
        c.argument('access_package_resource_scope', type=validate_file_or_dict, help='accessPackageResourceScope '
                   'Expected value: json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackage delete-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackage delete-access-package-resource-role-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackage delete-ref-access-package-catalog') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackage list-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackage list-access-package-resource-role-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackage set-ref-access-package-catalog') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('body', type=validate_file_or_dict, help='New navigation property ref values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackage show-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackage show-access-package-catalog') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackage show-access-package-resource-role-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackage show-ref-access-package-catalog') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackage update-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackage update-access-package-resource-role-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_resource_role', type=validate_file_or_dict, help='accessPackageResourceRole '
                   'Expected value: json-string/@json-file.')
        c.argument('access_package_resource_scope', type=validate_file_or_dict, help='accessPackageResourceScope '
                   'Expected value: json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicy delete-access-package-catalog') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicy delete-ref-access-package') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicy set-ref-access-package') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('body', type=validate_file_or_dict, help='New navigation property ref values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicy show-access-package') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicy show-access-package-catalog') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicy show-ref-access-package') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicy update-access-package-catalog') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('catalog_status', type=str, help='')
        c.argument('catalog_type', type=str, help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_externally_visible', arg_type=get_three_state_flag(), help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resources', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_packages', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalog create-access-package') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('catalog_id', type=str, help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_hidden', arg_type=get_three_state_flag(), help='')
        c.argument('is_role_scopes_visible', arg_type=get_three_state_flag(), help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_assignment_policies', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_catalog', type=validate_file_or_dict, help='accessPackageCatalog Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_role_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalog create-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalog create-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalog create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalog delete-access-package') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalog delete-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalog delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalog delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalog list-access-package') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalog list-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalog list-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalog list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalog show-access-package') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalog show-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalog show-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalog show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalog update-access-package') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('catalog_id', type=str, help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_hidden', arg_type=get_three_state_flag(), help='')
        c.argument('is_role_scopes_visible', arg_type=get_three_state_flag(), help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_assignment_policies', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_catalog', type=validate_file_or_dict, help='accessPackageCatalog Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_role_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalog update-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalog update-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalog update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcerole delete-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcerole show-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcerole update-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcerolesaccesspackageresource create-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcerolesaccesspackageresource create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcerolesaccesspackageresource delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_role_id1', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcerolesaccesspackageresource delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcerolesaccesspackageresource list-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcerolesaccesspackageresource list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcerolesaccesspackageresource show-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_role_id1', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcerolesaccesspackageresource show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcerolesaccesspackageresource update-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_role_id1', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcerolesaccesspackageresource update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcerolesaccesspackageresourceaccesspackageresourcescope delete-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcerolesaccesspackageresourceaccesspackageresourcescope show-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcerolesaccesspackageresourceaccesspackageresourcescope update-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresource create-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresource create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresource delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresource delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresource list-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresource list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresource show-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresource show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresource update-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresource update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcesaccesspackageresourcerole delete-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcesaccesspackageresourcerole show-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcesaccesspackageresourcerole update-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcesaccesspackageresourcescope delete-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcesaccesspackageresourcescope show-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcesaccesspackageresourcescope update-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcescope delete-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcescope show-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcescope update-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcescopesaccesspackageresource create-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcescopesaccesspackageresource create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcescopesaccesspackageresource delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcescopesaccesspackageresource delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_scope_id1', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcescopesaccesspackageresource list-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcescopesaccesspackageresource list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcescopesaccesspackageresource show-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcescopesaccesspackageresource show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_scope_id1', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcescopesaccesspackageresource update-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcescopesaccesspackageresource update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_scope_id1', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcescopesaccesspackageresourceaccesspackageresourcerole delete-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcescopesaccesspackageresourceaccesspackageresourcerole show-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcescopesaccesspackageresourceaccesspackageresourcerole update-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackage search') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageresourcerolescope delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageresourcerolescope delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageresourcerolescope show-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageresourcerolescope show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageresourcerolescope update-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageresourcerolescope update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageresourcerolescopesaccesspackageresourcerole delete-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageresourcerolescopesaccesspackageresourcerole show-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageresourcerolescopesaccesspackageresourcerole update-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource create-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource list-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource show-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource update-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresourceaccesspackageresourcescope delete-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresourceaccesspackageresourcescope show-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresourceaccesspackageresourcescope update-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageresourcerolescopesaccesspackageresourcescope delete-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageresourcerolescopesaccesspackageresourcescope show-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageresourcerolescopesaccesspackageresourcescope update-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource create-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource list-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource show-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource update-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresourceaccesspackageresourcerole delete-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresourceaccesspackageresourcerole show-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresourceaccesspackageresourcerole update-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicy delete-access-package-catalog') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicy delete-ref-access-package') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicy set-ref-access-package') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('body', type=validate_file_or_dict, help='New navigation property ref values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicy show-access-package') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicy show-access-package-catalog') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicy show-ref-access-package') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicy update-access-package-catalog') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('catalog_status', type=str, help='')
        c.argument('catalog_type', type=str, help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_externally_visible', arg_type=get_three_state_flag(), help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resources', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_packages', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalog create-access-package') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('catalog_id', type=str, help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_hidden', arg_type=get_three_state_flag(), help='')
        c.argument('is_role_scopes_visible', arg_type=get_three_state_flag(), help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_assignment_policies', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_catalog', type=validate_file_or_dict, help='accessPackageCatalog Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_role_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalog create-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalog create-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalog create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalog delete-access-package') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalog delete-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalog delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalog delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalog list-access-package') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalog list-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalog list-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalog list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalog show-access-package') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalog show-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalog show-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalog show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalog update-access-package') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('catalog_id', type=str, help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_hidden', arg_type=get_three_state_flag(), help='')
        c.argument('is_role_scopes_visible', arg_type=get_three_state_flag(), help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_assignment_policies', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_catalog', type=validate_file_or_dict, help='accessPackageCatalog Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_role_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalog update-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalog update-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalog update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcerole delete-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcerole show-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcerole update-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcerolesaccesspackageresource create-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcerolesaccesspackageresource create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcerolesaccesspackageresource delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_role_id1', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcerolesaccesspackageresource delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcerolesaccesspackageresource list-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcerolesaccesspackageresource list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcerolesaccesspackageresource show-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_role_id1', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcerolesaccesspackageresource show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcerolesaccesspackageresource update-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_role_id1', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcerolesaccesspackageresource update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcerolesaccesspackageresourceaccesspackageresourcescope delete-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcerolesaccesspackageresourceaccesspackageresourcescope show-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcerolesaccesspackageresourceaccesspackageresourcescope update-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresource create-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresource create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresource delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresource delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresource list-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresource list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresource show-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresource show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresource update-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresource update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcesaccesspackageresourcerole delete-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcesaccesspackageresourcerole show-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcesaccesspackageresourcerole update-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcesaccesspackageresourcescope delete-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcesaccesspackageresourcescope show-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcesaccesspackageresourcescope update-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcescope delete-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcescope show-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcescope update-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcescopesaccesspackageresource create-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcescopesaccesspackageresource create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcescopesaccesspackageresource delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcescopesaccesspackageresource delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_scope_id1', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcescopesaccesspackageresource list-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcescopesaccesspackageresource list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcescopesaccesspackageresource show-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcescopesaccesspackageresource show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_scope_id1', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcescopesaccesspackageresource update-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcescopesaccesspackageresource update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_scope_id1', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcescopesaccesspackageresourceaccesspackageresourcerole delete-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcescopesaccesspackageresourceaccesspackageresourcerole show-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcescopesaccesspackageresourceaccesspackageresourcerole update-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackage create-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackage create-access-package-resource-role-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_resource_role', type=validate_file_or_dict, help='accessPackageResourceRole '
                   'Expected value: json-string/@json-file.')
        c.argument('access_package_resource_scope', type=validate_file_or_dict, help='accessPackageResourceScope '
                   'Expected value: json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackage delete-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackage delete-access-package-resource-role-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackage delete-ref-access-package-catalog') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackage list-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackage list-access-package-resource-role-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackage search') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackage set-ref-access-package-catalog') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('body', type=validate_file_or_dict, help='New navigation property ref values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackage show-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackage show-access-package-catalog') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackage show-access-package-resource-role-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackage show-ref-access-package-catalog') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackage update-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackage update-access-package-resource-role-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_resource_role', type=validate_file_or_dict, help='accessPackageResourceRole '
                   'Expected value: json-string/@json-file.')
        c.argument('access_package_resource_scope', type=validate_file_or_dict, help='accessPackageResourceScope '
                   'Expected value: json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescope delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescope delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescope show-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescope show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescope update-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescope update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcerole delete-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcerole show-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcerole update-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource create-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource list-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource show-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource update-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresourceaccesspackageresourcescope delete-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresourceaccesspackageresourcescope show-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresourceaccesspackageresourcescope update-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescope delete-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescope show-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescope update-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource create-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource list-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource show-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource update-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresourceaccesspackageresourcerole delete-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresourceaccesspackageresourcerole show-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresourceaccesspackageresourcerole update-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentrequest cancel') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentrequest delete-access-package-assignment') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentrequest delete-ref-access-package') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentrequest delete-requestor') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentrequest my') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentrequest set-ref-access-package') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('body', type=validate_file_or_dict, help='New navigation property ref values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentrequest show-access-package') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentrequest show-access-package-assignment') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentrequest show-ref-access-package') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentrequest show-requestor') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentrequest update-access-package-assignment') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('access_package_id', type=str, help='')
        c.argument('assignment_policy_id', type=str, help='')
        c.argument('assignment_state', type=str, help='')
        c.argument('assignment_status', type=str, help='')
        c.argument('catalog_id', type=str, help='')
        c.argument('expired_date_time', help='')
        c.argument('is_extended', arg_type=get_three_state_flag(), help='')
        c.argument('target_id', type=str, help='')
        c.argument('access_package', type=validate_file_or_dict, help='accessPackage Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_assignment_policy', type=validate_file_or_dict, help='accessPackageAssignmentPolicy '
                   'Expected value: json-string/@json-file.')
        c.argument('access_package_assignment_requests', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_assignment_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Target')
        c.argument('alt_sec_id', type=str, help='', arg_group='Target')
        c.argument('connected_organization_id', type=str, help='', arg_group='Target')
        c.argument('display_name', type=str, help='', arg_group='Target')
        c.argument('email', type=str, help='', arg_group='Target')
        c.argument('object_id', type=str, help='', arg_group='Target')
        c.argument('on_premises_security_identifier', type=str, help='', arg_group='Target')
        c.argument('principal_name', type=str, help='', arg_group='Target')
        c.argument('type_', options_list=['--type'], type=str, help='', arg_group='Target')
        c.argument('id1', type=str, help='Read-only.', arg_group='Target Connected Organization')
        c.argument('created_by', type=str, help='', arg_group='Target Connected Organization')
        c.argument('created_date_time', help='', arg_group='Target Connected Organization')
        c.argument('description', type=str, help='', arg_group='Target Connected Organization')
        c.argument('microsoft_graph_connected_organization_display_name', type=str, help='', arg_group='Target '
                   'Connected Organization')
        c.argument('identity_sources', action=AddIdentitySources, nargs='+', help=' Expect value: KEY1=VALUE1 '
                   'KEY2=VALUE2 ...', arg_group='Target Connected Organization')
        c.argument('modified_by', type=str, help='', arg_group='Target Connected Organization')
        c.argument('modified_date_time', help='', arg_group='Target Connected Organization')
        c.argument('state', arg_type=get_enum_type(['configured', 'proposed', 'unknownFutureValue']), help='',
                   arg_group='Target Connected Organization')
        c.argument('external_sponsors', action=AddExternalSponsors, nargs='+', help='', arg_group='Target Connected '
                   'Organization')
        c.argument('internal_sponsors', action=AddInternalSponsors, nargs='+', help='', arg_group='Target Connected '
                   'Organization')
        c.argument('expiration', action=AddExpiration, nargs='+', help='expirationPattern', arg_group='Schedule')
        c.argument('recurrence', type=validate_file_or_dict, help='patternedRecurrence Expected value: '
                   'json-string/@json-file.', arg_group='Schedule')
        c.argument('start_date_time', help='', arg_group='Schedule')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentrequest update-requestor') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('alt_sec_id', type=str, help='')
        c.argument('connected_organization_id', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('email', type=str, help='')
        c.argument('object_id', type=str, help='')
        c.argument('on_premises_security_identifier', type=str, help='')
        c.argument('principal_name', type=str, help='')
        c.argument('type_', options_list=['--type'], type=str, help='')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Connected Organization')
        c.argument('created_by', type=str, help='', arg_group='Connected Organization')
        c.argument('created_date_time', help='', arg_group='Connected Organization')
        c.argument('description', type=str, help='', arg_group='Connected Organization')
        c.argument('microsoft_graph_connected_organization_display_name', type=str, help='', arg_group='Connected '
                   'Organization')
        c.argument('identity_sources', action=AddIdentitySources, nargs='+', help=' Expect value: KEY1=VALUE1 '
                   'KEY2=VALUE2 ...', arg_group='Connected Organization')
        c.argument('modified_by', type=str, help='', arg_group='Connected Organization')
        c.argument('modified_date_time', help='', arg_group='Connected Organization')
        c.argument('state', arg_type=get_enum_type(['configured', 'proposed', 'unknownFutureValue']), help='',
                   arg_group='Connected Organization')
        c.argument('external_sponsors', action=AddExternalSponsors, nargs='+', help='', arg_group='Connected '
                   'Organization')
        c.argument('internal_sponsors', action=AddInternalSponsors, nargs='+', help='', arg_group='Connected '
                   'Organization')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentrequestsrequestor delete-ref-connected-organization') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentrequestsrequestor set-ref-connected-organization') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('body', type=validate_file_or_dict, help='New navigation property ref values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentrequestsrequestor show-connected-organization') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentrequestsrequestor show-ref-connected-organization') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentsaccesspackageassignmentresourcerole my') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentstarget delete-ref-connected-organization') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentstarget set-ref-connected-organization') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('body', type=validate_file_or_dict, help='New navigation property ref values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentstarget show-connected-organization') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageassignmentstarget show-ref-connected-organization') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageresourcerole delete-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageresourcerole show-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageresourcerole update-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageresourceroleaccesspackageresource create-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageresourceroleaccesspackageresource create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageresourceroleaccesspackageresource delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageresourceroleaccesspackageresource delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageresourceroleaccesspackageresource list-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageresourceroleaccesspackageresource list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageresourceroleaccesspackageresource show-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageresourceroleaccesspackageresource show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageresourceroleaccesspackageresource update-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageresourceroleaccesspackageresource update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageresourceroleaccesspackageresourceaccesspackageresourcescope delete-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageresourceroleaccesspackageresourceaccesspackageresourcescope show-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageresourceroleaccesspackageresourceaccesspackageresourcescope update-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageresourcescope delete-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageresourcescope show-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageresourcescope update-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageresourcescopeaccesspackageresource create-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageresourcescopeaccesspackageresource create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageresourcescopeaccesspackageresource delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageresourcescopeaccesspackageresource delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageresourcescopeaccesspackageresource list-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageresourcescopeaccesspackageresource list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageresourcescopeaccesspackageresource show-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageresourcescopeaccesspackageresource show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageresourcescopeaccesspackageresource update-access-package-resource-role') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageresourcescopeaccesspackageresource update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageresourcescopeaccesspackageresourceaccesspackageresourcerole delete-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageresourcescopeaccesspackageresourceaccesspackageresourcerole show-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackageresourcescopeaccesspackageresourceaccesspackageresourcerole update-access-package-resource') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackagesubject delete-ref-connected-organization') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackagesubject set-ref-connected-organization') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('body', type=validate_file_or_dict, help='New navigation property ref values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackagesubject show-connected-organization') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentresourcerolesaccesspackagesubject show-ref-connected-organization') as c:
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignment create-access-package-assignment-request') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignment create-access-package-assignment-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignment delete-access-package') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignment delete-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignment delete-access-package-assignment-request') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignment delete-access-package-assignment-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignment delete-target') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignment list-access-package-assignment-request') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignment list-access-package-assignment-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignment show-access-package') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignment show-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignment show-access-package-assignment-request') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignment show-access-package-assignment-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignment show-target') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignment update-access-package') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('catalog_id', type=str, help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_hidden', arg_type=get_three_state_flag(), help='')
        c.argument('is_role_scopes_visible', arg_type=get_three_state_flag(), help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_assignment_policies', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_catalog', type=validate_file_or_dict, help='accessPackageCatalog Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_role_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignment update-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignment update-access-package-assignment-request') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignment update-access-package-assignment-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignment update-target') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('alt_sec_id', type=str, help='')
        c.argument('connected_organization_id', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('email', type=str, help='')
        c.argument('object_id', type=str, help='')
        c.argument('on_premises_security_identifier', type=str, help='')
        c.argument('principal_name', type=str, help='')
        c.argument('type_', options_list=['--type'], type=str, help='')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Connected Organization')
        c.argument('created_by', type=str, help='', arg_group='Connected Organization')
        c.argument('created_date_time', help='', arg_group='Connected Organization')
        c.argument('description', type=str, help='', arg_group='Connected Organization')
        c.argument('microsoft_graph_connected_organization_display_name', type=str, help='', arg_group='Connected '
                   'Organization')
        c.argument('identity_sources', action=AddIdentitySources, nargs='+', help=' Expect value: KEY1=VALUE1 '
                   'KEY2=VALUE2 ...', arg_group='Connected Organization')
        c.argument('modified_by', type=str, help='', arg_group='Connected Organization')
        c.argument('modified_date_time', help='', arg_group='Connected Organization')
        c.argument('state', arg_type=get_enum_type(['configured', 'proposed', 'unknownFutureValue']), help='',
                   arg_group='Connected Organization')
        c.argument('external_sponsors', action=AddExternalSponsors, nargs='+', help='', arg_group='Connected '
                   'Organization')
        c.argument('internal_sponsors', action=AddInternalSponsors, nargs='+', help='', arg_group='Connected '
                   'Organization')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackage create-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackage create-access-package-resource-role-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_resource_role', type=validate_file_or_dict, help='accessPackageResourceRole '
                   'Expected value: json-string/@json-file.')
        c.argument('access_package_resource_scope', type=validate_file_or_dict, help='accessPackageResourceScope '
                   'Expected value: json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackage delete-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackage delete-access-package-resource-role-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackage delete-ref-access-package-catalog') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackage list-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackage list-access-package-resource-role-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackage set-ref-access-package-catalog') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('body', type=validate_file_or_dict, help='New navigation property ref values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackage show-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackage show-access-package-catalog') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackage show-access-package-resource-role-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackage show-ref-access-package-catalog') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackage update-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackage update-access-package-resource-role-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_resource_role', type=validate_file_or_dict, help='accessPackageResourceRole '
                   'Expected value: json-string/@json-file.')
        c.argument('access_package_resource_scope', type=validate_file_or_dict, help='accessPackageResourceScope '
                   'Expected value: json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicy delete-access-package-catalog') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicy delete-ref-access-package') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicy set-ref-access-package') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('body', type=validate_file_or_dict, help='New navigation property ref values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicy show-access-package') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicy show-access-package-catalog') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicy show-ref-access-package') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicy update-access-package-catalog') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('catalog_status', type=str, help='')
        c.argument('catalog_type', type=str, help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_externally_visible', arg_type=get_three_state_flag(), help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resources', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_packages', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalog create-access-package') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('catalog_id', type=str, help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_hidden', arg_type=get_three_state_flag(), help='')
        c.argument('is_role_scopes_visible', arg_type=get_three_state_flag(), help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_assignment_policies', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_catalog', type=validate_file_or_dict, help='accessPackageCatalog Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_role_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalog create-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalog create-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalog create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalog delete-access-package') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalog delete-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalog delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalog delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalog list-access-package') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalog list-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalog list-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalog list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalog show-access-package') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalog show-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalog show-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalog show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalog update-access-package') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('catalog_id', type=str, help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_hidden', arg_type=get_three_state_flag(), help='')
        c.argument('is_role_scopes_visible', arg_type=get_three_state_flag(), help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_assignment_policies', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_catalog', type=validate_file_or_dict, help='accessPackageCatalog Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_role_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalog update-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalog update-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalog update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcerole delete-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcerole show-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcerole update-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcerolesaccesspackageresource create-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcerolesaccesspackageresource create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcerolesaccesspackageresource delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_role_id1', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcerolesaccesspackageresource delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcerolesaccesspackageresource list-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcerolesaccesspackageresource list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcerolesaccesspackageresource show-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_role_id1', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcerolesaccesspackageresource show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcerolesaccesspackageresource update-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_role_id1', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcerolesaccesspackageresource update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcerolesaccesspackageresourceaccesspackageresourcescope delete-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcerolesaccesspackageresourceaccesspackageresourcescope show-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcerolesaccesspackageresourceaccesspackageresourcescope update-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresource create-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresource create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresource delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresource delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresource list-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresource list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresource show-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresource show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresource update-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresource update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcesaccesspackageresourcerole delete-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcesaccesspackageresourcerole show-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcesaccesspackageresourcerole update-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcesaccesspackageresourcescope delete-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcesaccesspackageresourcescope show-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcesaccesspackageresourcescope update-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcescope delete-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcescope show-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcescope update-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcescopesaccesspackageresource create-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcescopesaccesspackageresource create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcescopesaccesspackageresource delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcescopesaccesspackageresource delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_scope_id1', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcescopesaccesspackageresource list-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcescopesaccesspackageresource list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcescopesaccesspackageresource show-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcescopesaccesspackageresource show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_scope_id1', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcescopesaccesspackageresource update-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcescopesaccesspackageresource update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_scope_id1', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcescopesaccesspackageresourceaccesspackageresourcerole delete-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcescopesaccesspackageresourceaccesspackageresourcerole show-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcescopesaccesspackageresourceaccesspackageresourcerole update-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackage search') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageresourcerolescope delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageresourcerolescope delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageresourcerolescope show-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageresourcerolescope show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageresourcerolescope update-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageresourcerolescope update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageresourcerolescopesaccesspackageresourcerole delete-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageresourcerolescopesaccesspackageresourcerole show-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageresourcerolescopesaccesspackageresourcerole update-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource create-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource list-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource show-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource update-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresourceaccesspackageresourcescope delete-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresourceaccesspackageresourcescope show-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresourceaccesspackageresourcescope update-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageresourcerolescopesaccesspackageresourcescope delete-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageresourcerolescopesaccesspackageresourcescope show-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageresourcerolescopesaccesspackageresourcescope update-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource create-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource list-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource show-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource update-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresourceaccesspackageresourcerole delete-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresourceaccesspackageresourcerole show-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresourceaccesspackageresourcerole update-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicy delete-access-package-catalog') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicy delete-ref-access-package') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicy set-ref-access-package') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('body', type=validate_file_or_dict, help='New navigation property ref values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicy show-access-package') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicy show-access-package-catalog') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicy show-ref-access-package') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicy update-access-package-catalog') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('catalog_status', type=str, help='')
        c.argument('catalog_type', type=str, help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_externally_visible', arg_type=get_three_state_flag(), help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resources', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_packages', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalog create-access-package') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('catalog_id', type=str, help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_hidden', arg_type=get_three_state_flag(), help='')
        c.argument('is_role_scopes_visible', arg_type=get_three_state_flag(), help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_assignment_policies', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_catalog', type=validate_file_or_dict, help='accessPackageCatalog Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_role_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalog create-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalog create-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalog create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalog delete-access-package') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalog delete-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalog delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalog delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalog list-access-package') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalog list-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalog list-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalog list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalog show-access-package') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalog show-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalog show-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalog show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalog update-access-package') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('catalog_id', type=str, help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_hidden', arg_type=get_three_state_flag(), help='')
        c.argument('is_role_scopes_visible', arg_type=get_three_state_flag(), help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_assignment_policies', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_catalog', type=validate_file_or_dict, help='accessPackageCatalog Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_role_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalog update-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalog update-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalog update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcerole delete-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcerole show-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcerole update-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcerolesaccesspackageresource create-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcerolesaccesspackageresource create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcerolesaccesspackageresource delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_role_id1', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcerolesaccesspackageresource delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcerolesaccesspackageresource list-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcerolesaccesspackageresource list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcerolesaccesspackageresource show-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_role_id1', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcerolesaccesspackageresource show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcerolesaccesspackageresource update-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_role_id1', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcerolesaccesspackageresource update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcerolesaccesspackageresourceaccesspackageresourcescope delete-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcerolesaccesspackageresourceaccesspackageresourcescope show-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcerolesaccesspackageresourceaccesspackageresourcescope update-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresource create-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresource create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresource delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresource delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresource list-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresource list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresource show-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresource show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresource update-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresource update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcesaccesspackageresourcerole delete-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcesaccesspackageresourcerole show-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcesaccesspackageresourcerole update-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcesaccesspackageresourcescope delete-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcesaccesspackageresourcescope show-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcesaccesspackageresourcescope update-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcescope delete-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcescope show-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcescope update-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcescopesaccesspackageresource create-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcescopesaccesspackageresource create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcescopesaccesspackageresource delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcescopesaccesspackageresource delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_scope_id1', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcescopesaccesspackageresource list-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcescopesaccesspackageresource list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcescopesaccesspackageresource show-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcescopesaccesspackageresource show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_scope_id1', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcescopesaccesspackageresource update-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcescopesaccesspackageresource update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_scope_id1', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcescopesaccesspackageresourceaccesspackageresourcerole delete-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcescopesaccesspackageresourceaccesspackageresourcerole show-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackageresourcescopesaccesspackageresourceaccesspackageresourcerole update-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackage create-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackage create-access-package-resource-role-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_resource_role', type=validate_file_or_dict, help='accessPackageResourceRole '
                   'Expected value: json-string/@json-file.')
        c.argument('access_package_resource_scope', type=validate_file_or_dict, help='accessPackageResourceScope '
                   'Expected value: json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackage delete-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackage delete-access-package-resource-role-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackage delete-ref-access-package-catalog') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackage list-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackage list-access-package-resource-role-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackage search') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackage set-ref-access-package-catalog') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('body', type=validate_file_or_dict, help='New navigation property ref values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackage show-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackage show-access-package-catalog') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackage show-access-package-resource-role-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackage show-ref-access-package-catalog') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackage update-access-package-assignment-policy') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackage update-access-package-resource-role-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_resource_role', type=validate_file_or_dict, help='accessPackageResourceRole '
                   'Expected value: json-string/@json-file.')
        c.argument('access_package_resource_scope', type=validate_file_or_dict, help='accessPackageResourceScope '
                   'Expected value: json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescope delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescope delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescope show-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescope show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescope update-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescope update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcerole delete-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcerole show-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcerole update-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource create-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource list-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource show-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource update-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresourceaccesspackageresourcescope delete-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresourceaccesspackageresourcescope show-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresourceaccesspackageresourcescope update-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescope delete-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescope show-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescope update-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource create-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource list-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource show-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource update-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresourceaccesspackageresourcerole delete-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresourceaccesspackageresourcerole show-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentpolicyaccesspackagecatalogaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresourceaccesspackageresourcerole update-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentrequest cancel') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentrequest delete-access-package-assignment') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentrequest delete-ref-access-package') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentrequest delete-requestor') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentrequest my') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentrequest set-ref-access-package') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('body', type=validate_file_or_dict, help='New navigation property ref values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentrequest show-access-package') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentrequest show-access-package-assignment') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentrequest show-ref-access-package') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentrequest show-requestor') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentrequest update-access-package-assignment') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('access_package_id', type=str, help='')
        c.argument('assignment_policy_id', type=str, help='')
        c.argument('assignment_state', type=str, help='')
        c.argument('assignment_status', type=str, help='')
        c.argument('catalog_id', type=str, help='')
        c.argument('expired_date_time', help='')
        c.argument('is_extended', arg_type=get_three_state_flag(), help='')
        c.argument('target_id', type=str, help='')
        c.argument('access_package', type=validate_file_or_dict, help='accessPackage Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_assignment_policy', type=validate_file_or_dict, help='accessPackageAssignmentPolicy '
                   'Expected value: json-string/@json-file.')
        c.argument('access_package_assignment_requests', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_assignment_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Target')
        c.argument('alt_sec_id', type=str, help='', arg_group='Target')
        c.argument('connected_organization_id', type=str, help='', arg_group='Target')
        c.argument('display_name', type=str, help='', arg_group='Target')
        c.argument('email', type=str, help='', arg_group='Target')
        c.argument('object_id', type=str, help='', arg_group='Target')
        c.argument('on_premises_security_identifier', type=str, help='', arg_group='Target')
        c.argument('principal_name', type=str, help='', arg_group='Target')
        c.argument('type_', options_list=['--type'], type=str, help='', arg_group='Target')
        c.argument('id1', type=str, help='Read-only.', arg_group='Target Connected Organization')
        c.argument('created_by', type=str, help='', arg_group='Target Connected Organization')
        c.argument('created_date_time', help='', arg_group='Target Connected Organization')
        c.argument('description', type=str, help='', arg_group='Target Connected Organization')
        c.argument('microsoft_graph_connected_organization_display_name', type=str, help='', arg_group='Target '
                   'Connected Organization')
        c.argument('identity_sources', action=AddIdentitySources, nargs='+', help=' Expect value: KEY1=VALUE1 '
                   'KEY2=VALUE2 ...', arg_group='Target Connected Organization')
        c.argument('modified_by', type=str, help='', arg_group='Target Connected Organization')
        c.argument('modified_date_time', help='', arg_group='Target Connected Organization')
        c.argument('state', arg_type=get_enum_type(['configured', 'proposed', 'unknownFutureValue']), help='',
                   arg_group='Target Connected Organization')
        c.argument('external_sponsors', action=AddExternalSponsors, nargs='+', help='', arg_group='Target Connected '
                   'Organization')
        c.argument('internal_sponsors', action=AddInternalSponsors, nargs='+', help='', arg_group='Target Connected '
                   'Organization')
        c.argument('expiration', action=AddExpiration, nargs='+', help='expirationPattern', arg_group='Schedule')
        c.argument('recurrence', type=validate_file_or_dict, help='patternedRecurrence Expected value: '
                   'json-string/@json-file.', arg_group='Schedule')
        c.argument('start_date_time', help='', arg_group='Schedule')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentrequest update-requestor') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('alt_sec_id', type=str, help='')
        c.argument('connected_organization_id', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('email', type=str, help='')
        c.argument('object_id', type=str, help='')
        c.argument('on_premises_security_identifier', type=str, help='')
        c.argument('principal_name', type=str, help='')
        c.argument('type_', options_list=['--type'], type=str, help='')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Connected Organization')
        c.argument('created_by', type=str, help='', arg_group='Connected Organization')
        c.argument('created_date_time', help='', arg_group='Connected Organization')
        c.argument('description', type=str, help='', arg_group='Connected Organization')
        c.argument('microsoft_graph_connected_organization_display_name', type=str, help='', arg_group='Connected '
                   'Organization')
        c.argument('identity_sources', action=AddIdentitySources, nargs='+', help=' Expect value: KEY1=VALUE1 '
                   'KEY2=VALUE2 ...', arg_group='Connected Organization')
        c.argument('modified_by', type=str, help='', arg_group='Connected Organization')
        c.argument('modified_date_time', help='', arg_group='Connected Organization')
        c.argument('state', arg_type=get_enum_type(['configured', 'proposed', 'unknownFutureValue']), help='',
                   arg_group='Connected Organization')
        c.argument('external_sponsors', action=AddExternalSponsors, nargs='+', help='', arg_group='Connected '
                   'Organization')
        c.argument('internal_sponsors', action=AddInternalSponsors, nargs='+', help='', arg_group='Connected '
                   'Organization')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentrequestsrequestor delete-ref-connected-organization') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentrequestsrequestor set-ref-connected-organization') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('body', type=validate_file_or_dict, help='New navigation property ref values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentrequestsrequestor show-connected-organization') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentrequestsrequestor show-ref-connected-organization') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_request_id', type=str, help='key: id of accessPackageAssignmentRequest')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentresourcerole create-access-package-assignment') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('access_package_id', type=str, help='')
        c.argument('assignment_policy_id', type=str, help='')
        c.argument('assignment_state', type=str, help='')
        c.argument('assignment_status', type=str, help='')
        c.argument('catalog_id', type=str, help='')
        c.argument('expired_date_time', help='')
        c.argument('is_extended', arg_type=get_three_state_flag(), help='')
        c.argument('target_id', type=str, help='')
        c.argument('access_package', type=validate_file_or_dict, help='accessPackage Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_assignment_policy', type=validate_file_or_dict, help='accessPackageAssignmentPolicy '
                   'Expected value: json-string/@json-file.')
        c.argument('access_package_assignment_requests', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_assignment_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Target')
        c.argument('alt_sec_id', type=str, help='', arg_group='Target')
        c.argument('connected_organization_id', type=str, help='', arg_group='Target')
        c.argument('display_name', type=str, help='', arg_group='Target')
        c.argument('email', type=str, help='', arg_group='Target')
        c.argument('object_id', type=str, help='', arg_group='Target')
        c.argument('on_premises_security_identifier', type=str, help='', arg_group='Target')
        c.argument('principal_name', type=str, help='', arg_group='Target')
        c.argument('type_', options_list=['--type'], type=str, help='', arg_group='Target')
        c.argument('id1', type=str, help='Read-only.', arg_group='Target Connected Organization')
        c.argument('created_by', type=str, help='', arg_group='Target Connected Organization')
        c.argument('created_date_time', help='', arg_group='Target Connected Organization')
        c.argument('description', type=str, help='', arg_group='Target Connected Organization')
        c.argument('microsoft_graph_connected_organization_display_name', type=str, help='', arg_group='Target '
                   'Connected Organization')
        c.argument('identity_sources', action=AddIdentitySources, nargs='+', help=' Expect value: KEY1=VALUE1 '
                   'KEY2=VALUE2 ...', arg_group='Target Connected Organization')
        c.argument('modified_by', type=str, help='', arg_group='Target Connected Organization')
        c.argument('modified_date_time', help='', arg_group='Target Connected Organization')
        c.argument('state', arg_type=get_enum_type(['configured', 'proposed', 'unknownFutureValue']), help='',
                   arg_group='Target Connected Organization')
        c.argument('external_sponsors', action=AddExternalSponsors, nargs='+', help='', arg_group='Target Connected '
                   'Organization')
        c.argument('internal_sponsors', action=AddInternalSponsors, nargs='+', help='', arg_group='Target Connected '
                   'Organization')
        c.argument('expiration', action=AddExpiration, nargs='+', help='expirationPattern', arg_group='Schedule')
        c.argument('recurrence', type=validate_file_or_dict, help='patternedRecurrence Expected value: '
                   'json-string/@json-file.', arg_group='Schedule')
        c.argument('start_date_time', help='', arg_group='Schedule')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentresourcerole delete-access-package-assignment') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id1', type=str, help='key: id of accessPackageAssignment')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentresourcerole delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentresourcerole delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentresourcerole delete-access-package-subject') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentresourcerole list-access-package-assignment') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentresourcerole my') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentresourcerole show-access-package-assignment') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id1', type=str, help='key: id of accessPackageAssignment')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentresourcerole show-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentresourcerole show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentresourcerole show-access-package-subject') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentresourcerole update-access-package-assignment') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_assignment_id1', type=str, help='key: id of accessPackageAssignment')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('access_package_id', type=str, help='')
        c.argument('assignment_policy_id', type=str, help='')
        c.argument('assignment_state', type=str, help='')
        c.argument('assignment_status', type=str, help='')
        c.argument('catalog_id', type=str, help='')
        c.argument('expired_date_time', help='')
        c.argument('is_extended', arg_type=get_three_state_flag(), help='')
        c.argument('target_id', type=str, help='')
        c.argument('access_package', type=validate_file_or_dict, help='accessPackage Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_assignment_policy', type=validate_file_or_dict, help='accessPackageAssignmentPolicy '
                   'Expected value: json-string/@json-file.')
        c.argument('access_package_assignment_requests', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_assignment_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Target')
        c.argument('alt_sec_id', type=str, help='', arg_group='Target')
        c.argument('connected_organization_id', type=str, help='', arg_group='Target')
        c.argument('display_name', type=str, help='', arg_group='Target')
        c.argument('email', type=str, help='', arg_group='Target')
        c.argument('object_id', type=str, help='', arg_group='Target')
        c.argument('on_premises_security_identifier', type=str, help='', arg_group='Target')
        c.argument('principal_name', type=str, help='', arg_group='Target')
        c.argument('type_', options_list=['--type'], type=str, help='', arg_group='Target')
        c.argument('id1', type=str, help='Read-only.', arg_group='Target Connected Organization')
        c.argument('created_by', type=str, help='', arg_group='Target Connected Organization')
        c.argument('created_date_time', help='', arg_group='Target Connected Organization')
        c.argument('description', type=str, help='', arg_group='Target Connected Organization')
        c.argument('microsoft_graph_connected_organization_display_name', type=str, help='', arg_group='Target '
                   'Connected Organization')
        c.argument('identity_sources', action=AddIdentitySources, nargs='+', help=' Expect value: KEY1=VALUE1 '
                   'KEY2=VALUE2 ...', arg_group='Target Connected Organization')
        c.argument('modified_by', type=str, help='', arg_group='Target Connected Organization')
        c.argument('modified_date_time', help='', arg_group='Target Connected Organization')
        c.argument('state', arg_type=get_enum_type(['configured', 'proposed', 'unknownFutureValue']), help='',
                   arg_group='Target Connected Organization')
        c.argument('external_sponsors', action=AddExternalSponsors, nargs='+', help='', arg_group='Target Connected '
                   'Organization')
        c.argument('internal_sponsors', action=AddInternalSponsors, nargs='+', help='', arg_group='Target Connected '
                   'Organization')
        c.argument('expiration', action=AddExpiration, nargs='+', help='expirationPattern', arg_group='Schedule')
        c.argument('recurrence', type=validate_file_or_dict, help='patternedRecurrence Expected value: '
                   'json-string/@json-file.', arg_group='Schedule')
        c.argument('start_date_time', help='', arg_group='Schedule')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentresourcerole update-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentresourcerole update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentresourcerole update-access-package-subject') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('alt_sec_id', type=str, help='')
        c.argument('connected_organization_id', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('email', type=str, help='')
        c.argument('object_id', type=str, help='')
        c.argument('on_premises_security_identifier', type=str, help='')
        c.argument('principal_name', type=str, help='')
        c.argument('type_', options_list=['--type'], type=str, help='')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Connected Organization')
        c.argument('created_by', type=str, help='', arg_group='Connected Organization')
        c.argument('created_date_time', help='', arg_group='Connected Organization')
        c.argument('description', type=str, help='', arg_group='Connected Organization')
        c.argument('microsoft_graph_connected_organization_display_name', type=str, help='', arg_group='Connected '
                   'Organization')
        c.argument('identity_sources', action=AddIdentitySources, nargs='+', help=' Expect value: KEY1=VALUE1 '
                   'KEY2=VALUE2 ...', arg_group='Connected Organization')
        c.argument('modified_by', type=str, help='', arg_group='Connected Organization')
        c.argument('modified_date_time', help='', arg_group='Connected Organization')
        c.argument('state', arg_type=get_enum_type(['configured', 'proposed', 'unknownFutureValue']), help='',
                   arg_group='Connected Organization')
        c.argument('external_sponsors', action=AddExternalSponsors, nargs='+', help='', arg_group='Connected '
                   'Organization')
        c.argument('internal_sponsors', action=AddInternalSponsors, nargs='+', help='', arg_group='Connected '
                   'Organization')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentresourcerolesaccesspackageassignment my') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentresourcerolesaccesspackageresourcerole delete-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentresourcerolesaccesspackageresourcerole show-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentresourcerolesaccesspackageresourcerole update-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentresourcerolesaccesspackageresourceroleaccesspackageresource create-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentresourcerolesaccesspackageresourceroleaccesspackageresource create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentresourcerolesaccesspackageresourceroleaccesspackageresource delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentresourcerolesaccesspackageresourceroleaccesspackageresource delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentresourcerolesaccesspackageresourceroleaccesspackageresource list-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentresourcerolesaccesspackageresourceroleaccesspackageresource list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentresourcerolesaccesspackageresourceroleaccesspackageresource show-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentresourcerolesaccesspackageresourceroleaccesspackageresource show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentresourcerolesaccesspackageresourceroleaccesspackageresource update-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentresourcerolesaccesspackageresourceroleaccesspackageresource update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentresourcerolesaccesspackageresourceroleaccesspackageresourceaccesspackageresourcescope delete-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentresourcerolesaccesspackageresourceroleaccesspackageresourceaccesspackageresourcescope show-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentresourcerolesaccesspackageresourceroleaccesspackageresourceaccesspackageresourcescope update-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentresourcerolesaccesspackageresourcescope delete-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentresourcerolesaccesspackageresourcescope show-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentresourcerolesaccesspackageresourcescope update-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentresourcerolesaccesspackageresourcescopeaccesspackageresource create-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentresourcerolesaccesspackageresourcescopeaccesspackageresource create-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentresourcerolesaccesspackageresourcescopeaccesspackageresource delete-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentresourcerolesaccesspackageresourcescopeaccesspackageresource delete-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentresourcerolesaccesspackageresourcescopeaccesspackageresource list-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentresourcerolesaccesspackageresourcescopeaccesspackageresource list-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentresourcerolesaccesspackageresourcescopeaccesspackageresource show-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentresourcerolesaccesspackageresourcescopeaccesspackageresource show-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentresourcerolesaccesspackageresourcescopeaccesspackageresource update-access-package-resource-role') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentresourcerolesaccesspackageresourcescopeaccesspackageresource update-access-package-resource-scope') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentresourcerolesaccesspackageresourcescopeaccesspackageresourceaccesspackageresourcerole delete-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentresourcerolesaccesspackageresourcescopeaccesspackageresourceaccesspackageresourcerole show-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentresourcerolesaccesspackageresourcescopeaccesspackageresourceaccesspackageresourcerole update-access-package-resource') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentresourcerolesaccesspackagesubject delete-ref-connected-organization') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentresourcerolesaccesspackagesubject set-ref-connected-organization') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('body', type=validate_file_or_dict, help='New navigation property ref values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentresourcerolesaccesspackagesubject show-connected-organization') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentsaccesspackageassignmentresourcerolesaccesspackagesubject show-ref-connected-organization') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('access_package_assignment_resource_role_id', type=str, help='key: id of '
                   'accessPackageAssignmentResourceRole')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentstarget delete-ref-connected-organization') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentstarget set-ref-connected-organization') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('body', type=validate_file_or_dict, help='New navigation property ref values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentstarget show-connected-organization') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageassignmentstarget show-ref-connected-organization') as c:
        c.argument('access_package_assignment_id', type=str, help='key: id of accessPackageAssignment')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalog create-access-package') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('catalog_id', type=str, help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_hidden', arg_type=get_three_state_flag(), help='')
        c.argument('is_role_scopes_visible', arg_type=get_three_state_flag(), help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_assignment_policies', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_catalog', type=validate_file_or_dict, help='accessPackageCatalog Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_role_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalog create-access-package-resource') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalog create-access-package-resource-role') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalog create-access-package-resource-scope') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalog delete-access-package') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalog delete-access-package-resource') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalog delete-access-package-resource-role') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalog delete-access-package-resource-scope') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalog list-access-package') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalog list-access-package-resource') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalog list-access-package-resource-role') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalog list-access-package-resource-scope') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalog show-access-package') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalog show-access-package-resource') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalog show-access-package-resource-role') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalog show-access-package-resource-scope') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalog update-access-package') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('catalog_id', type=str, help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_hidden', arg_type=get_three_state_flag(), help='')
        c.argument('is_role_scopes_visible', arg_type=get_three_state_flag(), help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_assignment_policies', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_catalog', type=validate_file_or_dict, help='accessPackageCatalog Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_role_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalog update-access-package-resource') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalog update-access-package-resource-role') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalog update-access-package-resource-scope') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackageresourcerole delete-access-package-resource') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackageresourcerole show-access-package-resource') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackageresourcerole update-access-package-resource') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackageresourcerolesaccesspackageresource create-access-package-resource-role') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackageresourcerolesaccesspackageresource create-access-package-resource-scope') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackageresourcerolesaccesspackageresource delete-access-package-resource-role') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_role_id1', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackageresourcerolesaccesspackageresource delete-access-package-resource-scope') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackageresourcerolesaccesspackageresource list-access-package-resource-role') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackageresourcerolesaccesspackageresource list-access-package-resource-scope') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackageresourcerolesaccesspackageresource show-access-package-resource-role') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_role_id1', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackageresourcerolesaccesspackageresource show-access-package-resource-scope') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackageresourcerolesaccesspackageresource update-access-package-resource-role') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_role_id1', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackageresourcerolesaccesspackageresource update-access-package-resource-scope') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackageresourcerolesaccesspackageresourceaccesspackageresourcescope delete-access-package-resource') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackageresourcerolesaccesspackageresourceaccesspackageresourcescope show-access-package-resource') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackageresourcerolesaccesspackageresourceaccesspackageresourcescope update-access-package-resource') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackageresource create-access-package-resource-role') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackageresource create-access-package-resource-scope') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackageresource delete-access-package-resource-role') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackageresource delete-access-package-resource-scope') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackageresource list-access-package-resource-role') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackageresource list-access-package-resource-scope') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackageresource show-access-package-resource-role') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackageresource show-access-package-resource-scope') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackageresource update-access-package-resource-role') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackageresource update-access-package-resource-scope') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackageresourcesaccesspackageresourcerole delete-access-package-resource') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackageresourcesaccesspackageresourcerole show-access-package-resource') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackageresourcesaccesspackageresourcerole update-access-package-resource') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackageresourcesaccesspackageresourcescope delete-access-package-resource') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackageresourcesaccesspackageresourcescope show-access-package-resource') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackageresourcesaccesspackageresourcescope update-access-package-resource') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackageresourcescope delete-access-package-resource') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackageresourcescope show-access-package-resource') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackageresourcescope update-access-package-resource') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackageresourcescopesaccesspackageresource create-access-package-resource-role') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackageresourcescopesaccesspackageresource create-access-package-resource-scope') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackageresourcescopesaccesspackageresource delete-access-package-resource-role') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackageresourcescopesaccesspackageresource delete-access-package-resource-scope') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_scope_id1', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackageresourcescopesaccesspackageresource list-access-package-resource-role') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackageresourcescopesaccesspackageresource list-access-package-resource-scope') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackageresourcescopesaccesspackageresource show-access-package-resource-role') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackageresourcescopesaccesspackageresource show-access-package-resource-scope') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_scope_id1', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackageresourcescopesaccesspackageresource update-access-package-resource-role') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackageresourcescopesaccesspackageresource update-access-package-resource-scope') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_scope_id1', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackageresourcescopesaccesspackageresourceaccesspackageresourcerole delete-access-package-resource') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackageresourcescopesaccesspackageresourceaccesspackageresourcerole show-access-package-resource') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackageresourcescopesaccesspackageresourceaccesspackageresourcerole update-access-package-resource') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackage create-access-package-assignment-policy') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackage create-access-package-resource-role-scope') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_resource_role', type=validate_file_or_dict, help='accessPackageResourceRole '
                   'Expected value: json-string/@json-file.')
        c.argument('access_package_resource_scope', type=validate_file_or_dict, help='accessPackageResourceScope '
                   'Expected value: json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackage delete-access-package-assignment-policy') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackage delete-access-package-resource-role-scope') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackage delete-ref-access-package-catalog') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackage list-access-package-assignment-policy') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackage list-access-package-resource-role-scope') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackage search') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackage set-ref-access-package-catalog') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('body', type=validate_file_or_dict, help='New navigation property ref values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackage show-access-package-assignment-policy') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackage show-access-package-catalog') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackage show-access-package-resource-role-scope') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackage show-ref-access-package-catalog') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackage update-access-package-assignment-policy') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackage update-access-package-resource-role-scope') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_resource_role', type=validate_file_or_dict, help='accessPackageResourceRole '
                   'Expected value: json-string/@json-file.')
        c.argument('access_package_resource_scope', type=validate_file_or_dict, help='accessPackageResourceScope '
                   'Expected value: json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackagesaccesspackageassignmentpolicy delete-access-package-catalog') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackagesaccesspackageassignmentpolicy delete-ref-access-package') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackagesaccesspackageassignmentpolicy set-ref-access-package') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('body', type=validate_file_or_dict, help='New navigation property ref values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackagesaccesspackageassignmentpolicy show-access-package') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackagesaccesspackageassignmentpolicy show-access-package-catalog') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackagesaccesspackageassignmentpolicy show-ref-access-package') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackagesaccesspackageassignmentpolicy update-access-package-catalog') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('catalog_status', type=str, help='')
        c.argument('catalog_type', type=str, help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_externally_visible', arg_type=get_three_state_flag(), help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resources', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_packages', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackagesaccesspackageresourcerolescope delete-access-package-resource-role') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackagesaccesspackageresourcerolescope delete-access-package-resource-scope') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackagesaccesspackageresourcerolescope show-access-package-resource-role') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackagesaccesspackageresourcerolescope show-access-package-resource-scope') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackagesaccesspackageresourcerolescope update-access-package-resource-role') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackagesaccesspackageresourcerolescope update-access-package-resource-scope') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcerole delete-access-package-resource') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcerole show-access-package-resource') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcerole update-access-package-resource') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackagesaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource create-access-package-resource-role') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackagesaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource create-access-package-resource-scope') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackagesaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource delete-access-package-resource-role') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackagesaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource delete-access-package-resource-scope') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackagesaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource list-access-package-resource-role') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackagesaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource list-access-package-resource-scope') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackagesaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource show-access-package-resource-role') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackagesaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource show-access-package-resource-scope') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackagesaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource update-access-package-resource-role') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackagesaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource update-access-package-resource-scope') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackagesaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresourceaccesspackageresourcescope delete-access-package-resource') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackagesaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresourceaccesspackageresourcescope show-access-package-resource') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackagesaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresourceaccesspackageresourcescope update-access-package-resource') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescope delete-access-package-resource') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescope show-access-package-resource') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescope update-access-package-resource') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource create-access-package-resource-role') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource create-access-package-resource-scope') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource delete-access-package-resource-role') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource delete-access-package-resource-scope') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource list-access-package-resource-role') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource list-access-package-resource-scope') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource show-access-package-resource-role') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource show-access-package-resource-scope') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource update-access-package-resource-role') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource update-access-package-resource-scope') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresourceaccesspackageresourcerole delete-access-package-resource') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresourceaccesspackageresourcerole show-access-package-resource') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagecatalogsaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresourceaccesspackageresourcerole update-access-package-resource') as c:
        c.argument('access_package_catalog_id', type=str, help='key: id of accessPackageCatalog')
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageresourcerequest delete-ref-access-package-resource') as c:
        c.argument('access_package_resource_request_id', type=str, help='key: id of accessPackageResourceRequest')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageresourcerequest delete-requestor') as c:
        c.argument('access_package_resource_request_id', type=str, help='key: id of accessPackageResourceRequest')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageresourcerequest set-ref-access-package-resource') as c:
        c.argument('access_package_resource_request_id', type=str, help='key: id of accessPackageResourceRequest')
        c.argument('body', type=validate_file_or_dict, help='New navigation property ref values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageresourcerequest show-access-package-resource') as c:
        c.argument('access_package_resource_request_id', type=str, help='key: id of accessPackageResourceRequest')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageresourcerequest show-ref-access-package-resource') as c:
        c.argument('access_package_resource_request_id', type=str, help='key: id of accessPackageResourceRequest')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageresourcerequest show-requestor') as c:
        c.argument('access_package_resource_request_id', type=str, help='key: id of accessPackageResourceRequest')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageresourcerequest update-requestor') as c:
        c.argument('access_package_resource_request_id', type=str, help='key: id of accessPackageResourceRequest')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('alt_sec_id', type=str, help='')
        c.argument('connected_organization_id', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('email', type=str, help='')
        c.argument('object_id', type=str, help='')
        c.argument('on_premises_security_identifier', type=str, help='')
        c.argument('principal_name', type=str, help='')
        c.argument('type_', options_list=['--type'], type=str, help='')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Connected Organization')
        c.argument('created_by', type=str, help='', arg_group='Connected Organization')
        c.argument('created_date_time', help='', arg_group='Connected Organization')
        c.argument('description', type=str, help='', arg_group='Connected Organization')
        c.argument('microsoft_graph_connected_organization_display_name', type=str, help='', arg_group='Connected '
                   'Organization')
        c.argument('identity_sources', action=AddIdentitySources, nargs='+', help=' Expect value: KEY1=VALUE1 '
                   'KEY2=VALUE2 ...', arg_group='Connected Organization')
        c.argument('modified_by', type=str, help='', arg_group='Connected Organization')
        c.argument('modified_date_time', help='', arg_group='Connected Organization')
        c.argument('state', arg_type=get_enum_type(['configured', 'proposed', 'unknownFutureValue']), help='',
                   arg_group='Connected Organization')
        c.argument('external_sponsors', action=AddExternalSponsors, nargs='+', help='', arg_group='Connected '
                   'Organization')
        c.argument('internal_sponsors', action=AddInternalSponsors, nargs='+', help='', arg_group='Connected '
                   'Organization')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageresourcerequestsrequestor delete-ref-connected-organization') as c:
        c.argument('access_package_resource_request_id', type=str, help='key: id of accessPackageResourceRequest')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageresourcerequestsrequestor set-ref-connected-organization') as c:
        c.argument('access_package_resource_request_id', type=str, help='key: id of accessPackageResourceRequest')
        c.argument('body', type=validate_file_or_dict, help='New navigation property ref values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageresourcerequestsrequestor show-connected-organization') as c:
        c.argument('access_package_resource_request_id', type=str, help='key: id of accessPackageResourceRequest')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageresourcerequestsrequestor show-ref-connected-organization') as c:
        c.argument('access_package_resource_request_id', type=str, help='key: id of accessPackageResourceRequest')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageresourcerolescope delete-access-package-resource-role') as c:
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageresourcerolescope delete-access-package-resource-scope') as c:
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageresourcerolescope show-access-package-resource-role') as c:
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageresourcerolescope show-access-package-resource-scope') as c:
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageresourcerolescope update-access-package-resource-role') as c:
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageresourcerolescope update-access-package-resource-scope') as c:
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageresourcerolescopesaccesspackageresourcerole delete-access-package-resource') as c:
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageresourcerolescopesaccesspackageresourcerole show-access-package-resource') as c:
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageresourcerolescopesaccesspackageresourcerole update-access-package-resource') as c:
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource create-access-package-resource-role') as c:
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource create-access-package-resource-scope') as c:
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource delete-access-package-resource-role') as c:
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource delete-access-package-resource-scope') as c:
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource list-access-package-resource-role') as c:
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource list-access-package-resource-scope') as c:
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource show-access-package-resource-role') as c:
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource show-access-package-resource-scope') as c:
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource update-access-package-resource-role') as c:
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource update-access-package-resource-scope') as c:
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresourceaccesspackageresourcescope delete-access-package-resource') as c:
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresourceaccesspackageresourcescope show-access-package-resource') as c:
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresourceaccesspackageresourcescope update-access-package-resource') as c:
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageresourcerolescopesaccesspackageresourcescope delete-access-package-resource') as c:
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageresourcerolescopesaccesspackageresourcescope show-access-package-resource') as c:
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageresourcerolescopesaccesspackageresourcescope update-access-package-resource') as c:
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource create-access-package-resource-role') as c:
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource create-access-package-resource-scope') as c:
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource delete-access-package-resource-role') as c:
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource delete-access-package-resource-scope') as c:
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource list-access-package-resource-role') as c:
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource list-access-package-resource-scope') as c:
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource show-access-package-resource-role') as c:
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource show-access-package-resource-scope') as c:
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource update-access-package-resource-role') as c:
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource update-access-package-resource-scope') as c:
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresourceaccesspackageresourcerole delete-access-package-resource') as c:
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresourceaccesspackageresourcerole show-access-package-resource') as c:
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresourceaccesspackageresourcerole update-access-package-resource') as c:
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageresource create-access-package-resource-role') as c:
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageresource create-access-package-resource-scope') as c:
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageresource delete-access-package-resource-role') as c:
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageresource delete-access-package-resource-scope') as c:
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageresource list-access-package-resource-role') as c:
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageresource list-access-package-resource-scope') as c:
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageresource show-access-package-resource-role') as c:
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageresource show-access-package-resource-scope') as c:
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageresource update-access-package-resource-role') as c:
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageresource update-access-package-resource-scope') as c:
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageresourcesaccesspackageresourcerole delete-access-package-resource') as c:
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageresourcesaccesspackageresourcerole show-access-package-resource') as c:
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageresourcesaccesspackageresourcerole update-access-package-resource') as c:
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageresourcesaccesspackageresourcescope delete-access-package-resource') as c:
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageresourcesaccesspackageresourcescope show-access-package-resource') as c:
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackageresourcesaccesspackageresourcescope update-access-package-resource') as c:
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackage create-access-package-assignment-policy') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackage create-access-package-resource-role-scope') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_resource_role', type=validate_file_or_dict, help='accessPackageResourceRole '
                   'Expected value: json-string/@json-file.')
        c.argument('access_package_resource_scope', type=validate_file_or_dict, help='accessPackageResourceScope '
                   'Expected value: json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackage delete-access-package-assignment-policy') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackage delete-access-package-resource-role-scope') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackage delete-ref-access-package-catalog') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackage list-access-package-assignment-policy') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackage list-access-package-resource-role-scope') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackage set-ref-access-package-catalog') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('body', type=validate_file_or_dict, help='New navigation property ref values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackage show-access-package-assignment-policy') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackage show-access-package-catalog') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackage show-access-package-resource-role-scope') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackage show-ref-access-package-catalog') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackage update-access-package-assignment-policy') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackage update-access-package-resource-role-scope') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_resource_role', type=validate_file_or_dict, help='accessPackageResourceRole '
                   'Expected value: json-string/@json-file.')
        c.argument('access_package_resource_scope', type=validate_file_or_dict, help='accessPackageResourceScope '
                   'Expected value: json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageassignmentpolicy delete-access-package-catalog') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageassignmentpolicy delete-ref-access-package') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageassignmentpolicy set-ref-access-package') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('body', type=validate_file_or_dict, help='New navigation property ref values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageassignmentpolicy show-access-package') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageassignmentpolicy show-access-package-catalog') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageassignmentpolicy show-ref-access-package') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageassignmentpolicy update-access-package-catalog') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('catalog_status', type=str, help='')
        c.argument('catalog_type', type=str, help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_externally_visible', arg_type=get_three_state_flag(), help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resources', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_packages', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageassignmentpoliciesaccesspackagecatalog create-access-package') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('catalog_id', type=str, help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_hidden', arg_type=get_three_state_flag(), help='')
        c.argument('is_role_scopes_visible', arg_type=get_three_state_flag(), help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_assignment_policies', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_catalog', type=validate_file_or_dict, help='accessPackageCatalog Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_role_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageassignmentpoliciesaccesspackagecatalog create-access-package-resource') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageassignmentpoliciesaccesspackagecatalog create-access-package-resource-role') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageassignmentpoliciesaccesspackagecatalog create-access-package-resource-scope') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageassignmentpoliciesaccesspackagecatalog delete-access-package') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id1', type=str, help='key: id of accessPackage')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageassignmentpoliciesaccesspackagecatalog delete-access-package-resource') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageassignmentpoliciesaccesspackagecatalog delete-access-package-resource-role') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageassignmentpoliciesaccesspackagecatalog delete-access-package-resource-scope') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageassignmentpoliciesaccesspackagecatalog list-access-package') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageassignmentpoliciesaccesspackagecatalog list-access-package-resource') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageassignmentpoliciesaccesspackagecatalog list-access-package-resource-role') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageassignmentpoliciesaccesspackagecatalog list-access-package-resource-scope') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageassignmentpoliciesaccesspackagecatalog show-access-package') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id1', type=str, help='key: id of accessPackage')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageassignmentpoliciesaccesspackagecatalog show-access-package-resource') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageassignmentpoliciesaccesspackagecatalog show-access-package-resource-role') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageassignmentpoliciesaccesspackagecatalog show-access-package-resource-scope') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageassignmentpoliciesaccesspackagecatalog update-access-package') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_id1', type=str, help='key: id of accessPackage')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('catalog_id', type=str, help='')
        c.argument('created_by', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_hidden', arg_type=get_three_state_flag(), help='')
        c.argument('is_role_scopes_visible', arg_type=get_three_state_flag(), help='')
        c.argument('modified_by', type=str, help='')
        c.argument('modified_date_time', help='')
        c.argument('access_package_assignment_policies', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_catalog', type=validate_file_or_dict, help='accessPackageCatalog Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_role_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageassignmentpoliciesaccesspackagecatalog update-access-package-resource') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageassignmentpoliciesaccesspackagecatalog update-access-package-resource-role') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageassignmentpoliciesaccesspackagecatalog update-access-package-resource-scope') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcerole delete-access-package-resource') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcerole show-access-package-resource') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcerole update-access-package-resource') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcerolesaccesspackageresource create-access-package-resource-role') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcerolesaccesspackageresource create-access-package-resource-scope') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcerolesaccesspackageresource delete-access-package-resource-role') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_role_id1', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcerolesaccesspackageresource delete-access-package-resource-scope') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcerolesaccesspackageresource list-access-package-resource-role') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcerolesaccesspackageresource list-access-package-resource-scope') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcerolesaccesspackageresource show-access-package-resource-role') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_role_id1', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcerolesaccesspackageresource show-access-package-resource-scope') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcerolesaccesspackageresource update-access-package-resource-role') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_role_id1', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcerolesaccesspackageresource update-access-package-resource-scope') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcerolesaccesspackageresourceaccesspackageresourcescope delete-access-package-resource') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcerolesaccesspackageresourceaccesspackageresourcescope show-access-package-resource') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcerolesaccesspackageresourceaccesspackageresourcescope update-access-package-resource') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresource create-access-package-resource-role') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresource create-access-package-resource-scope') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresource delete-access-package-resource-role') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresource delete-access-package-resource-scope') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresource list-access-package-resource-role') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresource list-access-package-resource-scope') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresource show-access-package-resource-role') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresource show-access-package-resource-scope') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresource update-access-package-resource-role') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresource update-access-package-resource-scope') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcesaccesspackageresourcerole delete-access-package-resource') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcesaccesspackageresourcerole show-access-package-resource') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcesaccesspackageresourcerole update-access-package-resource') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcesaccesspackageresourcescope delete-access-package-resource') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcesaccesspackageresourcescope show-access-package-resource') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcesaccesspackageresourcescope update-access-package-resource') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_id', type=str, help='key: id of accessPackageResource')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcescope delete-access-package-resource') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcescope show-access-package-resource') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcescope update-access-package-resource') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcescopesaccesspackageresource create-access-package-resource-role') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcescopesaccesspackageresource create-access-package-resource-scope') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcescopesaccesspackageresource delete-access-package-resource-role') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcescopesaccesspackageresource delete-access-package-resource-scope') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_scope_id1', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcescopesaccesspackageresource list-access-package-resource-role') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcescopesaccesspackageresource list-access-package-resource-scope') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcescopesaccesspackageresource show-access-package-resource-role') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcescopesaccesspackageresource show-access-package-resource-scope') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_scope_id1', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcescopesaccesspackageresource update-access-package-resource-role') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcescopesaccesspackageresource update-access-package-resource-scope') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_scope_id1', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcescopesaccesspackageresourceaccesspackageresourcerole delete-access-package-resource') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcescopesaccesspackageresourceaccesspackageresourcerole show-access-package-resource') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackageresourcescopesaccesspackageresourceaccesspackageresourcerole update-access-package-resource') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageassignmentpoliciesaccesspackagecatalogaccesspackage search') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_assignment_policy_id', type=str, help='key: id of accessPackageAssignmentPolicy')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageresourcerolescope delete-access-package-resource-role') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageresourcerolescope delete-access-package-resource-scope') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageresourcerolescope show-access-package-resource-role') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageresourcerolescope show-access-package-resource-scope') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageresourcerolescope update-access-package-resource-role') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageresourcerolescope update-access-package-resource-scope') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcerole delete-access-package-resource') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcerole show-access-package-resource') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcerole update-access-package-resource') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource create-access-package-resource-role') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource create-access-package-resource-scope') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource delete-access-package-resource-role') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource delete-access-package-resource-scope') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource list-access-package-resource-role') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource list-access-package-resource-scope') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource show-access-package-resource-role') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource show-access-package-resource-scope') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource update-access-package-resource-role') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresource update-access-package-resource-scope') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresourceaccesspackageresourcescope delete-access-package-resource') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresourceaccesspackageresourcescope show-access-package-resource') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageresourcerolescopesaccesspackageresourceroleaccesspackageresourceaccesspackageresourcescope update-access-package-resource') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescope delete-access-package-resource') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescope show-access-package-resource') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescope update-access-package-resource') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource create-access-package-resource-role') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource create-access-package-resource-scope') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource delete-access-package-resource-role') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource delete-access-package-resource-scope') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource list-access-package-resource-role') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource list-access-package-resource-scope') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource show-access-package-resource-role') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource show-access-package-resource-scope') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource update-access-package-resource-role') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresource update-access-package-resource-scope') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_scope_id', type=str, help='key: id of accessPackageResourceScope')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_root_scope', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('role_origin_id', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource', type=validate_file_or_dict, help='accessPackageResource Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresourceaccesspackageresourcerole delete-access-package-resource') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresourceaccesspackageresourcerole show-access-package-resource') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementaccesspackagesaccesspackageresourcerolescopesaccesspackageresourcescopeaccesspackageresourceaccesspackageresourcerole update-access-package-resource') as c:
        c.argument('access_package_id', type=str, help='key: id of accessPackage')
        c.argument('access_package_resource_role_scope_id', type=str,
                   help='key: id of accessPackageResourceRoleScope')
        c.argument('access_package_resource_role_id', type=str, help='key: id of accessPackageResourceRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('added_by', type=str, help='')
        c.argument('added_on', help='')
        c.argument('attributes', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('is_pending_onboarding', arg_type=get_three_state_flag(), help='')
        c.argument('origin_id', type=str, help='')
        c.argument('origin_system', type=str, help='')
        c.argument('resource_type', type=str, help='')
        c.argument('url', type=str, help='')
        c.argument('access_package_resource_roles', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('access_package_resource_scopes', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementconnectedorganization create-external-sponsor') as c:
        c.argument('connected_organization_id', type=str, help='key: id of connectedOrganization')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('deleted_date_time', help='')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementconnectedorganization create-internal-sponsor') as c:
        c.argument('connected_organization_id', type=str, help='key: id of connectedOrganization')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('deleted_date_time', help='')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementconnectedorganization delete-external-sponsor') as c:
        c.argument('connected_organization_id', type=str, help='key: id of connectedOrganization')
        c.argument('directory_object_id', type=str, help='key: id of directoryObject')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementconnectedorganization delete-internal-sponsor') as c:
        c.argument('connected_organization_id', type=str, help='key: id of connectedOrganization')
        c.argument('directory_object_id', type=str, help='key: id of directoryObject')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementconnectedorganization list-external-sponsor') as c:
        c.argument('connected_organization_id', type=str, help='key: id of connectedOrganization')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementconnectedorganization list-internal-sponsor') as c:
        c.argument('connected_organization_id', type=str, help='key: id of connectedOrganization')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementconnectedorganization show-external-sponsor') as c:
        c.argument('connected_organization_id', type=str, help='key: id of connectedOrganization')
        c.argument('directory_object_id', type=str, help='key: id of directoryObject')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementconnectedorganization show-internal-sponsor') as c:
        c.argument('connected_organization_id', type=str, help='key: id of connectedOrganization')
        c.argument('directory_object_id', type=str, help='key: id of directoryObject')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementconnectedorganization update-external-sponsor') as c:
        c.argument('connected_organization_id', type=str, help='key: id of connectedOrganization')
        c.argument('directory_object_id', type=str, help='key: id of directoryObject')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('deleted_date_time', help='')

    with self.argument_context('identitygovernance identitygovernanceentitlementmanagementconnectedorganization update-internal-sponsor') as c:
        c.argument('connected_organization_id', type=str, help='key: id of connectedOrganization')
        c.argument('directory_object_id', type=str, help='key: id of directoryObject')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('deleted_date_time', help='')

    with self.argument_context('identitygovernance privilegedaccess create-privileged-access') as c:
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('display_name', type=str, help='')
        c.argument('resources', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('role_assignment_requests', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('role_assignments', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('role_definitions', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('role_settings', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')

    with self.argument_context('identitygovernance privilegedaccess delete-privileged-access') as c:
        c.argument('privileged_access_id', type=str, help='key: id of privilegedAccess')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance privilegedaccess list-privileged-access') as c:
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance privilegedaccess show-privileged-access') as c:
        c.argument('privileged_access_id', type=str, help='key: id of privilegedAccess')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance privilegedaccess update-privileged-access') as c:
        c.argument('privileged_access_id', type=str, help='key: id of privilegedAccess')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('display_name', type=str, help='')
        c.argument('resources', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('role_assignment_requests', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('role_assignments', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('role_definitions', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('role_settings', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')

    with self.argument_context('identitygovernance privilegedaccess create-resource') as c:
        c.argument('privileged_access_id', type=str, help='key: id of privilegedAccess')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('display_name', type=str, help='')
        c.argument('external_id', type=str, help='')
        c.argument('registered_date_time', help='')
        c.argument('registered_root', type=str, help='')
        c.argument('status', type=str, help='')
        c.argument('type_', options_list=['--type'], type=str, help='')
        c.argument('parent', type=validate_file_or_dict, help='governanceResource Expected value: '
                   'json-string/@json-file.')
        c.argument('role_assignment_requests', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('role_assignments', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('role_definitions', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('role_settings', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')

    with self.argument_context('identitygovernance privilegedaccess create-role-assignment') as c:
        c.argument('privileged_access_id', type=str, help='key: id of privilegedAccess')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance privilegedaccess create-role-assignment-request') as c:
        c.argument('privileged_access_id', type=str, help='key: id of privilegedAccess')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance privilegedaccess create-role-definition') as c:
        c.argument('privileged_access_id', type=str, help='key: id of privilegedAccess')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('display_name', type=str, help='')
        c.argument('external_id', type=str, help='')
        c.argument('resource_id', type=str, help='')
        c.argument('template_id', type=str, help='')
        c.argument('resource', type=validate_file_or_dict, help='governanceResource Expected value: '
                   'json-string/@json-file.')
        c.argument('role_setting', type=validate_file_or_dict, help='governanceRoleSetting Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance privilegedaccess create-role-setting') as c:
        c.argument('privileged_access_id', type=str, help='key: id of privilegedAccess')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance privilegedaccess delete-resource') as c:
        c.argument('privileged_access_id', type=str, help='key: id of privilegedAccess')
        c.argument('governance_resource_id', type=str, help='key: id of governanceResource')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance privilegedaccess delete-role-assignment') as c:
        c.argument('privileged_access_id', type=str, help='key: id of privilegedAccess')
        c.argument('governance_role_assignment_id', type=str, help='key: id of governanceRoleAssignment')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance privilegedaccess delete-role-assignment-request') as c:
        c.argument('privileged_access_id', type=str, help='key: id of privilegedAccess')
        c.argument('governance_role_assignment_request_id', type=str,
                   help='key: id of governanceRoleAssignmentRequest')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance privilegedaccess delete-role-definition') as c:
        c.argument('privileged_access_id', type=str, help='key: id of privilegedAccess')
        c.argument('governance_role_definition_id', type=str, help='key: id of governanceRoleDefinition')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance privilegedaccess delete-role-setting') as c:
        c.argument('privileged_access_id', type=str, help='key: id of privilegedAccess')
        c.argument('governance_role_setting_id', type=str, help='key: id of governanceRoleSetting')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance privilegedaccess list-resource') as c:
        c.argument('privileged_access_id', type=str, help='key: id of privilegedAccess')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance privilegedaccess list-role-assignment') as c:
        c.argument('privileged_access_id', type=str, help='key: id of privilegedAccess')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance privilegedaccess list-role-assignment-request') as c:
        c.argument('privileged_access_id', type=str, help='key: id of privilegedAccess')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance privilegedaccess list-role-definition') as c:
        c.argument('privileged_access_id', type=str, help='key: id of privilegedAccess')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance privilegedaccess list-role-setting') as c:
        c.argument('privileged_access_id', type=str, help='key: id of privilegedAccess')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance privilegedaccess show-resource') as c:
        c.argument('privileged_access_id', type=str, help='key: id of privilegedAccess')
        c.argument('governance_resource_id', type=str, help='key: id of governanceResource')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance privilegedaccess show-role-assignment') as c:
        c.argument('privileged_access_id', type=str, help='key: id of privilegedAccess')
        c.argument('governance_role_assignment_id', type=str, help='key: id of governanceRoleAssignment')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance privilegedaccess show-role-assignment-request') as c:
        c.argument('privileged_access_id', type=str, help='key: id of privilegedAccess')
        c.argument('governance_role_assignment_request_id', type=str,
                   help='key: id of governanceRoleAssignmentRequest')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance privilegedaccess show-role-definition') as c:
        c.argument('privileged_access_id', type=str, help='key: id of privilegedAccess')
        c.argument('governance_role_definition_id', type=str, help='key: id of governanceRoleDefinition')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance privilegedaccess show-role-setting') as c:
        c.argument('privileged_access_id', type=str, help='key: id of privilegedAccess')
        c.argument('governance_role_setting_id', type=str, help='key: id of governanceRoleSetting')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance privilegedaccess update-resource') as c:
        c.argument('privileged_access_id', type=str, help='key: id of privilegedAccess')
        c.argument('governance_resource_id', type=str, help='key: id of governanceResource')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('display_name', type=str, help='')
        c.argument('external_id', type=str, help='')
        c.argument('registered_date_time', help='')
        c.argument('registered_root', type=str, help='')
        c.argument('status', type=str, help='')
        c.argument('type_', options_list=['--type'], type=str, help='')
        c.argument('parent', type=validate_file_or_dict, help='governanceResource Expected value: '
                   'json-string/@json-file.')
        c.argument('role_assignment_requests', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('role_assignments', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('role_definitions', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('role_settings', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')

    with self.argument_context('identitygovernance privilegedaccess update-role-assignment') as c:
        c.argument('privileged_access_id', type=str, help='key: id of privilegedAccess')
        c.argument('governance_role_assignment_id', type=str, help='key: id of governanceRoleAssignment')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance privilegedaccess update-role-assignment-request') as c:
        c.argument('privileged_access_id', type=str, help='key: id of privilegedAccess')
        c.argument('governance_role_assignment_request_id', type=str,
                   help='key: id of governanceRoleAssignmentRequest')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance privilegedaccess update-role-definition') as c:
        c.argument('privileged_access_id', type=str, help='key: id of privilegedAccess')
        c.argument('governance_role_definition_id', type=str, help='key: id of governanceRoleDefinition')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('display_name', type=str, help='')
        c.argument('external_id', type=str, help='')
        c.argument('resource_id', type=str, help='')
        c.argument('template_id', type=str, help='')
        c.argument('resource', type=validate_file_or_dict, help='governanceResource Expected value: '
                   'json-string/@json-file.')
        c.argument('role_setting', type=validate_file_or_dict, help='governanceRoleSetting Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance privilegedaccess update-role-setting') as c:
        c.argument('privileged_access_id', type=str, help='key: id of privilegedAccess')
        c.argument('governance_role_setting_id', type=str, help='key: id of governanceRoleSetting')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance privilegedapproval create-privileged-approval') as c:
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('approval_duration', help='')
        c.argument('approval_state', arg_type=get_enum_type(['pending', 'approved', 'denied', 'aborted', 'canceled']),
                   help='')
        c.argument('approval_type', type=str, help='')
        c.argument('approver_reason', type=str, help='')
        c.argument('end_date_time', help='')
        c.argument('requestor_reason', type=str, help='')
        c.argument('role_id', type=str, help='')
        c.argument('start_date_time', help='')
        c.argument('user_id', type=str, help='')
        c.argument('role_info', type=validate_file_or_dict, help='privilegedRole Expected value: '
                   'json-string/@json-file.')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Request')
        c.argument('assignment_state', type=str, help='', arg_group='Request')
        c.argument('duration', type=str, help='', arg_group='Request')
        c.argument('reason', type=str, help='', arg_group='Request')
        c.argument('requested_date_time', help='', arg_group='Request')
        c.argument('microsoft_graph_privileged_role_assignment_request_role_id', type=str, help='',
                   arg_group='Request')
        c.argument('schedule', action=AddSchedule, nargs='+', help='governanceSchedule', arg_group='Request')
        c.argument('status', type=str, help='', arg_group='Request')
        c.argument('ticket_number', type=str, help='', arg_group='Request')
        c.argument('ticket_system', type=str, help='', arg_group='Request')
        c.argument('type_', options_list=['--type'], type=str, help='', arg_group='Request')
        c.argument('microsoft_graph_privileged_role_assignment_request_user_id', type=str, help='',
                   arg_group='Request')
        c.argument('microsoft_graph_privileged_role_info', type=validate_file_or_dict, help='privilegedRole Expected '
                   'value: json-string/@json-file.', arg_group='Request')

    with self.argument_context('identitygovernance privilegedapproval delete-privileged-approval') as c:
        c.argument('privileged_approval_id', type=str, help='key: id of privilegedApproval')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance privilegedapproval list-privileged-approval') as c:
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance privilegedapproval show-privileged-approval') as c:
        c.argument('privileged_approval_id', type=str, help='key: id of privilegedApproval')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance privilegedapproval update-privileged-approval') as c:
        c.argument('privileged_approval_id', type=str, help='key: id of privilegedApproval')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('approval_duration', help='')
        c.argument('approval_state', arg_type=get_enum_type(['pending', 'approved', 'denied', 'aborted', 'canceled']),
                   help='')
        c.argument('approval_type', type=str, help='')
        c.argument('approver_reason', type=str, help='')
        c.argument('end_date_time', help='')
        c.argument('requestor_reason', type=str, help='')
        c.argument('role_id', type=str, help='')
        c.argument('start_date_time', help='')
        c.argument('user_id', type=str, help='')
        c.argument('role_info', type=validate_file_or_dict, help='privilegedRole Expected value: '
                   'json-string/@json-file.')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Request')
        c.argument('assignment_state', type=str, help='', arg_group='Request')
        c.argument('duration', type=str, help='', arg_group='Request')
        c.argument('reason', type=str, help='', arg_group='Request')
        c.argument('requested_date_time', help='', arg_group='Request')
        c.argument('microsoft_graph_privileged_role_assignment_request_role_id', type=str, help='',
                   arg_group='Request')
        c.argument('schedule', action=AddSchedule, nargs='+', help='governanceSchedule', arg_group='Request')
        c.argument('status', type=str, help='', arg_group='Request')
        c.argument('ticket_number', type=str, help='', arg_group='Request')
        c.argument('ticket_system', type=str, help='', arg_group='Request')
        c.argument('type_', options_list=['--type'], type=str, help='', arg_group='Request')
        c.argument('microsoft_graph_privileged_role_assignment_request_user_id', type=str, help='',
                   arg_group='Request')
        c.argument('microsoft_graph_privileged_role_info', type=validate_file_or_dict, help='privilegedRole Expected '
                   'value: json-string/@json-file.', arg_group='Request')

    with self.argument_context('identitygovernance privilegedapproval delete-ref-request') as c:
        c.argument('privileged_approval_id', type=str, help='key: id of privilegedApproval')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance privilegedapproval delete-role-info') as c:
        c.argument('privileged_approval_id', type=str, help='key: id of privilegedApproval')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance privilegedapproval set-ref-request') as c:
        c.argument('privileged_approval_id', type=str, help='key: id of privilegedApproval')
        c.argument('body', type=validate_file_or_dict, help='New navigation property ref values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance privilegedapproval show-ref-request') as c:
        c.argument('privileged_approval_id', type=str, help='key: id of privilegedApproval')

    with self.argument_context('identitygovernance privilegedapproval show-request') as c:
        c.argument('privileged_approval_id', type=str, help='key: id of privilegedApproval')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance privilegedapproval show-role-info') as c:
        c.argument('privileged_approval_id', type=str, help='key: id of privilegedApproval')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance privilegedapproval update-role-info') as c:
        c.argument('privileged_approval_id', type=str, help='key: id of privilegedApproval')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('name', type=str, help='')
        c.argument('assignments', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('settings', action=AddPrivilegedapprovalSettings, nargs='+', help='privilegedRoleSettings')
        c.argument('summary', action=AddSummary, nargs='+', help='privilegedRoleSummary')

    with self.argument_context('identitygovernance privilegedoperationeventsprivilegedoperationevent create-privileged-operation-event') as c:
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('additional_information', type=str, help='')
        c.argument('creation_date_time', help='')
        c.argument('expiration_date_time', help='')
        c.argument('reference_key', type=str, help='')
        c.argument('reference_system', type=str, help='')
        c.argument('requestor_id', type=str, help='')
        c.argument('requestor_name', type=str, help='')
        c.argument('request_type', type=str, help='')
        c.argument('role_id', type=str, help='')
        c.argument('role_name', type=str, help='')
        c.argument('tenant_id', type=str, help='')
        c.argument('user_id', type=str, help='')
        c.argument('user_mail', type=str, help='')
        c.argument('user_name', type=str, help='')

    with self.argument_context('identitygovernance privilegedoperationeventsprivilegedoperationevent delete-privileged-operation-event') as c:
        c.argument('privileged_operation_event_id', type=str, help='key: id of privilegedOperationEvent')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance privilegedoperationeventsprivilegedoperationevent list-privileged-operation-event') as c:
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance privilegedoperationeventsprivilegedoperationevent show-privileged-operation-event') as c:
        c.argument('privileged_operation_event_id', type=str, help='key: id of privilegedOperationEvent')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance privilegedoperationeventsprivilegedoperationevent update-privileged-operation-event') as c:
        c.argument('privileged_operation_event_id', type=str, help='key: id of privilegedOperationEvent')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('additional_information', type=str, help='')
        c.argument('creation_date_time', help='')
        c.argument('expiration_date_time', help='')
        c.argument('reference_key', type=str, help='')
        c.argument('reference_system', type=str, help='')
        c.argument('requestor_id', type=str, help='')
        c.argument('requestor_name', type=str, help='')
        c.argument('request_type', type=str, help='')
        c.argument('role_id', type=str, help='')
        c.argument('role_name', type=str, help='')
        c.argument('tenant_id', type=str, help='')
        c.argument('user_id', type=str, help='')
        c.argument('user_mail', type=str, help='')
        c.argument('user_name', type=str, help='')

    with self.argument_context('identitygovernance privilegedroleassignmentrequestsprivilegedroleassignmentrequest create-privileged-role-assignment-request') as c:
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('assignment_state', type=str, help='')
        c.argument('duration', type=str, help='')
        c.argument('reason', type=str, help='')
        c.argument('requested_date_time', help='')
        c.argument('role_id', type=str, help='')
        c.argument('schedule', action=AddSchedule, nargs='+', help='governanceSchedule')
        c.argument('status', type=str, help='')
        c.argument('ticket_number', type=str, help='')
        c.argument('ticket_system', type=str, help='')
        c.argument('type_', options_list=['--type'], type=str, help='')
        c.argument('user_id', type=str, help='')
        c.argument('role_info', type=validate_file_or_dict, help='privilegedRole Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance privilegedroleassignmentrequestsprivilegedroleassignmentrequest delete-privileged-role-assignment-request') as c:
        c.argument('privileged_role_assignment_request_id', type=str,
                   help='key: id of privilegedRoleAssignmentRequest')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance privilegedroleassignmentrequestsprivilegedroleassignmentrequest list-privileged-role-assignment-request') as c:
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance privilegedroleassignmentrequestsprivilegedroleassignmentrequest show-privileged-role-assignment-request') as c:
        c.argument('privileged_role_assignment_request_id', type=str,
                   help='key: id of privilegedRoleAssignmentRequest')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance privilegedroleassignmentrequestsprivilegedroleassignmentrequest update-privileged-role-assignment-request') as c:
        c.argument('privileged_role_assignment_request_id', type=str,
                   help='key: id of privilegedRoleAssignmentRequest')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('assignment_state', type=str, help='')
        c.argument('duration', type=str, help='')
        c.argument('reason', type=str, help='')
        c.argument('requested_date_time', help='')
        c.argument('role_id', type=str, help='')
        c.argument('schedule', action=AddSchedule, nargs='+', help='governanceSchedule')
        c.argument('status', type=str, help='')
        c.argument('ticket_number', type=str, help='')
        c.argument('ticket_system', type=str, help='')
        c.argument('type_', options_list=['--type'], type=str, help='')
        c.argument('user_id', type=str, help='')
        c.argument('role_info', type=validate_file_or_dict, help='privilegedRole Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance privilegedroleassignmentrequest cancel') as c:
        c.argument('privileged_role_assignment_request_id', type=str,
                   help='key: id of privilegedRoleAssignmentRequest')

    with self.argument_context('identitygovernance privilegedroleassignmentrequest delete-role-info') as c:
        c.argument('privileged_role_assignment_request_id', type=str,
                   help='key: id of privilegedRoleAssignmentRequest')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance privilegedroleassignmentrequest show-role-info') as c:
        c.argument('privileged_role_assignment_request_id', type=str,
                   help='key: id of privilegedRoleAssignmentRequest')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance privilegedroleassignmentrequest update-role-info') as c:
        c.argument('privileged_role_assignment_request_id', type=str,
                   help='key: id of privilegedRoleAssignmentRequest')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('name', type=str, help='')
        c.argument('assignments', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('settings', action=AddPrivilegedapprovalSettings, nargs='+', help='privilegedRoleSettings')
        c.argument('summary', action=AddSummary, nargs='+', help='privilegedRoleSummary')

    with self.argument_context('identitygovernance privilegedroleassignmentsprivilegedroleassignment create-privileged-role-assignment') as c:
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('expiration_date_time', help='')
        c.argument('is_elevated', arg_type=get_three_state_flag(), help='')
        c.argument('result_message', type=str, help='')
        c.argument('role_id', type=str, help='')
        c.argument('user_id', type=str, help='')
        c.argument('role_info', type=validate_file_or_dict, help='privilegedRole Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance privilegedroleassignmentsprivilegedroleassignment delete-privileged-role-assignment') as c:
        c.argument('privileged_role_assignment_id', type=str, help='key: id of privilegedRoleAssignment')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance privilegedroleassignmentsprivilegedroleassignment list-privileged-role-assignment') as c:
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance privilegedroleassignmentsprivilegedroleassignment show-privileged-role-assignment') as c:
        c.argument('privileged_role_assignment_id', type=str, help='key: id of privilegedRoleAssignment')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance privilegedroleassignmentsprivilegedroleassignment update-privileged-role-assignment') as c:
        c.argument('privileged_role_assignment_id', type=str, help='key: id of privilegedRoleAssignment')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('expiration_date_time', help='')
        c.argument('is_elevated', arg_type=get_three_state_flag(), help='')
        c.argument('result_message', type=str, help='')
        c.argument('role_id', type=str, help='')
        c.argument('user_id', type=str, help='')
        c.argument('role_info', type=validate_file_or_dict, help='privilegedRole Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance privilegedroleassignment delete-role-info') as c:
        c.argument('privileged_role_assignment_id', type=str, help='key: id of privilegedRoleAssignment')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance privilegedroleassignment make-eligible') as c:
        c.argument('privileged_role_assignment_id', type=str, help='key: id of privilegedRoleAssignment')

    with self.argument_context('identitygovernance privilegedroleassignment make-permanent') as c:
        c.argument('privileged_role_assignment_id', type=str, help='key: id of privilegedRoleAssignment')
        c.argument('reason', type=str, help='')
        c.argument('ticket_number', type=str, help='')
        c.argument('ticket_system', type=str, help='')

    with self.argument_context('identitygovernance privilegedroleassignment show-role-info') as c:
        c.argument('privileged_role_assignment_id', type=str, help='key: id of privilegedRoleAssignment')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance privilegedroleassignment update-role-info') as c:
        c.argument('privileged_role_assignment_id', type=str, help='key: id of privilegedRoleAssignment')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('name', type=str, help='')
        c.argument('assignments', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('settings', action=AddPrivilegedapprovalSettings, nargs='+', help='privilegedRoleSettings')
        c.argument('summary', action=AddSummary, nargs='+', help='privilegedRoleSummary')

    with self.argument_context('identitygovernance privilegedrolesprivilegedrole create-privileged-role') as c:
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('name', type=str, help='')
        c.argument('assignments', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('settings', action=AddPrivilegedapprovalSettings, nargs='+', help='privilegedRoleSettings')
        c.argument('summary', action=AddSummary, nargs='+', help='privilegedRoleSummary')

    with self.argument_context('identitygovernance privilegedrolesprivilegedrole delete-privileged-role') as c:
        c.argument('privileged_role_id', type=str, help='key: id of privilegedRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance privilegedrolesprivilegedrole list-privileged-role') as c:
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance privilegedrolesprivilegedrole show-privileged-role') as c:
        c.argument('privileged_role_id', type=str, help='key: id of privilegedRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance privilegedrolesprivilegedrole update-privileged-role') as c:
        c.argument('privileged_role_id', type=str, help='key: id of privilegedRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('name', type=str, help='')
        c.argument('assignments', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('settings', action=AddPrivilegedapprovalSettings, nargs='+', help='privilegedRoleSettings')
        c.argument('summary', action=AddSummary, nargs='+', help='privilegedRoleSummary')

    with self.argument_context('identitygovernance privilegedrole create-ref-assignment') as c:
        c.argument('privileged_role_id', type=str, help='key: id of privilegedRole')
        c.argument('body', type=validate_file_or_dict, help='New navigation property ref value Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance privilegedrole delete-setting') as c:
        c.argument('privileged_role_id', type=str, help='key: id of privilegedRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance privilegedrole delete-summary') as c:
        c.argument('privileged_role_id', type=str, help='key: id of privilegedRole')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance privilegedrole list-assignment') as c:
        c.argument('privileged_role_id', type=str, help='key: id of privilegedRole')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance privilegedrole list-ref-assignment') as c:
        c.argument('privileged_role_id', type=str, help='key: id of privilegedRole')
        c.argument('orderby', nargs='+', help='Order items by property values')

    with self.argument_context('identitygovernance privilegedrole self-activate') as c:
        c.argument('privileged_role_id', type=str, help='key: id of privilegedRole')
        c.argument('reason', type=str, help='')
        c.argument('duration', type=str, help='')
        c.argument('ticket_number', type=str, help='')
        c.argument('ticket_system', type=str, help='')

    with self.argument_context('identitygovernance privilegedrole self-deactivate') as c:
        c.argument('privileged_role_id', type=str, help='key: id of privilegedRole')

    with self.argument_context('identitygovernance privilegedrole show-setting') as c:
        c.argument('privileged_role_id', type=str, help='key: id of privilegedRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance privilegedrole show-summary') as c:
        c.argument('privileged_role_id', type=str, help='key: id of privilegedRole')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance privilegedrole update-setting') as c:
        c.argument('privileged_role_id', type=str, help='key: id of privilegedRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('approval_on_elevation', arg_type=get_three_state_flag(), help='')
        c.argument('approver_ids', nargs='+', help='')
        c.argument('elevation_duration', help='')
        c.argument('is_mfa_on_elevation_configurable', arg_type=get_three_state_flag(), help='')
        c.argument('last_global_admin', arg_type=get_three_state_flag(), help='')
        c.argument('max_elavation_duration', help='')
        c.argument('mfa_on_elevation', arg_type=get_three_state_flag(), help='')
        c.argument('min_elevation_duration', help='')
        c.argument('notification_to_user_on_elevation', arg_type=get_three_state_flag(), help='')
        c.argument('ticketing_info_on_elevation', arg_type=get_three_state_flag(), help='')

    with self.argument_context('identitygovernance privilegedrole update-summary') as c:
        c.argument('privileged_role_id', type=str, help='key: id of privilegedRole')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('elevated_count', type=int, help='')
        c.argument('managed_count', type=int, help='')
        c.argument('mfa_enabled', arg_type=get_three_state_flag(), help='')
        c.argument('status', arg_type=get_enum_type(['ok', 'bad']), help='')
        c.argument('users_count', type=int, help='')

    with self.argument_context('identitygovernance programcontrolsprogramcontrol create-program-control') as c:
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('control_id', type=str, help='')
        c.argument('control_type_id', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('display_name', type=str, help='')
        c.argument('owner', action=AddCreatedBy, nargs='+', help='userIdentity')
        c.argument('program_id', type=str, help='')
        c.argument('resource', action=AddResource, nargs='+', help='programResource')
        c.argument('status', type=str, help='')
        c.argument('program', type=validate_file_or_dict, help='program Expected value: json-string/@json-file.')

    with self.argument_context('identitygovernance programcontrolsprogramcontrol delete-program-control') as c:
        c.argument('program_control_id', type=str, help='key: id of programControl')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance programcontrolsprogramcontrol list-program-control') as c:
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance programcontrolsprogramcontrol show-program-control') as c:
        c.argument('program_control_id', type=str, help='key: id of programControl')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance programcontrolsprogramcontrol update-program-control') as c:
        c.argument('program_control_id', type=str, help='key: id of programControl')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('control_id', type=str, help='')
        c.argument('control_type_id', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('display_name', type=str, help='')
        c.argument('owner', action=AddCreatedBy, nargs='+', help='userIdentity')
        c.argument('program_id', type=str, help='')
        c.argument('resource', action=AddResource, nargs='+', help='programResource')
        c.argument('status', type=str, help='')
        c.argument('program', type=validate_file_or_dict, help='program Expected value: json-string/@json-file.')

    with self.argument_context('identitygovernance programcontrol delete-program') as c:
        c.argument('program_control_id', type=str, help='key: id of programControl')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance programcontrol show-program') as c:
        c.argument('program_control_id', type=str, help='key: id of programControl')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance programcontrol update-program') as c:
        c.argument('program_control_id', type=str, help='key: id of programControl')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('controls', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')

    with self.argument_context('identitygovernance programcontroltypesprogramcontroltype create-program-control-type') as c:
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('control_type_group_id', type=str, help='')
        c.argument('display_name', type=str, help='')

    with self.argument_context('identitygovernance programcontroltypesprogramcontroltype delete-program-control-type') as c:
        c.argument('program_control_type_id', type=str, help='key: id of programControlType')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance programcontroltypesprogramcontroltype list-program-control-type') as c:
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance programcontroltypesprogramcontroltype show-program-control-type') as c:
        c.argument('program_control_type_id', type=str, help='key: id of programControlType')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance programcontroltypesprogramcontroltype update-program-control-type') as c:
        c.argument('program_control_type_id', type=str, help='key: id of programControlType')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('control_type_group_id', type=str, help='')
        c.argument('display_name', type=str, help='')

    with self.argument_context('identitygovernance programsprogram create-program') as c:
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('controls', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')

    with self.argument_context('identitygovernance programsprogram delete-program') as c:
        c.argument('program_id', type=str, help='key: id of program')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance programsprogram list-program') as c:
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance programsprogram show-program') as c:
        c.argument('program_id', type=str, help='key: id of program')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance programsprogram update-program') as c:
        c.argument('program_id', type=str, help='key: id of program')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('controls', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')

    with self.argument_context('identitygovernance program create-control') as c:
        c.argument('program_id', type=str, help='key: id of program')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('control_id', type=str, help='')
        c.argument('control_type_id', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('display_name', type=str, help='')
        c.argument('owner', action=AddCreatedBy, nargs='+', help='userIdentity')
        c.argument('microsoft_graph_program_control_program_id', type=str, help='')
        c.argument('resource', action=AddResource, nargs='+', help='programResource')
        c.argument('status', type=str, help='')
        c.argument('program', type=validate_file_or_dict, help='program Expected value: json-string/@json-file.')

    with self.argument_context('identitygovernance program delete-control') as c:
        c.argument('program_id', type=str, help='key: id of program')
        c.argument('program_control_id', type=str, help='key: id of programControl')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('identitygovernance program list-control') as c:
        c.argument('program_id', type=str, help='key: id of program')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance program show-control') as c:
        c.argument('program_id', type=str, help='key: id of program')
        c.argument('program_control_id', type=str, help='key: id of programControl')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance program update-control') as c:
        c.argument('program_id', type=str, help='key: id of program')
        c.argument('program_control_id', type=str, help='key: id of programControl')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('control_id', type=str, help='')
        c.argument('control_type_id', type=str, help='')
        c.argument('created_date_time', help='')
        c.argument('display_name', type=str, help='')
        c.argument('owner', action=AddCreatedBy, nargs='+', help='userIdentity')
        c.argument('microsoft_graph_program_control_program_id', type=str, help='')
        c.argument('resource', action=AddResource, nargs='+', help='programResource')
        c.argument('status', type=str, help='')
        c.argument('program', type=validate_file_or_dict, help='program Expected value: json-string/@json-file.')

    with self.argument_context('identitygovernance user create-ref-agreement-acceptance') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('body', type=validate_file_or_dict, help='New navigation property ref value Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('identitygovernance user list-agreement-acceptance') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('identitygovernance user list-ref-agreement-acceptance') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('orderby', nargs='+', help='Order items by property values')
