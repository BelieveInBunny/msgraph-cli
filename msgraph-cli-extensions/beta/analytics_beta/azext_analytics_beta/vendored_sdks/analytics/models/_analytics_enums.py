# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from enum import Enum, EnumMeta
from six import with_metaclass

class _CaseInsensitiveEnumMeta(EnumMeta):
    def __getitem__(self, name):
        return super().__getitem__(name.upper())

    def __getattr__(cls, name):
        """Return the enum member matching `name`
        We use __getattr__ instead of descriptors or inserting into the enum
        class' __dict__ in order to support `name` and `value` being both
        properties for enum members (which live in the class' __dict__) and
        enum members themselves.
        """
        try:
            return cls._member_map_[name.upper()]
        except KeyError:
            raise AttributeError(name)


class Enum10(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    TRENDING = "trending"
    SHARED = "shared"
    USED = "used"

class Enum11(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    LAST_SHARED = "lastShared"
    LAST_SHARED_DESC = "lastShared desc"
    SHARING_HISTORY = "sharingHistory"
    SHARING_HISTORY_DESC = "sharingHistory desc"
    RESOURCE_VISUALIZATION = "resourceVisualization"
    RESOURCE_VISUALIZATION_DESC = "resourceVisualization desc"
    RESOURCE_REFERENCE = "resourceReference"
    RESOURCE_REFERENCE_DESC = "resourceReference desc"

class Enum12(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    LAST_SHARED = "lastShared"
    SHARING_HISTORY = "sharingHistory"
    RESOURCE_VISUALIZATION = "resourceVisualization"
    RESOURCE_REFERENCE = "resourceReference"
    LAST_SHARED_METHOD = "lastSharedMethod"
    RESOURCE = "resource"

class Enum13(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    LAST_SHARED_METHOD = "lastSharedMethod"
    RESOURCE = "resource"

class Enum14(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    LAST_SHARED = "lastShared"
    SHARING_HISTORY = "sharingHistory"
    RESOURCE_VISUALIZATION = "resourceVisualization"
    RESOURCE_REFERENCE = "resourceReference"
    LAST_SHARED_METHOD = "lastSharedMethod"
    RESOURCE = "resource"

class Enum15(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    LAST_SHARED_METHOD = "lastSharedMethod"
    RESOURCE = "resource"

class Enum16(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    WEIGHT = "weight"
    WEIGHT_DESC = "weight desc"
    RESOURCE_VISUALIZATION = "resourceVisualization"
    RESOURCE_VISUALIZATION_DESC = "resourceVisualization desc"
    RESOURCE_REFERENCE = "resourceReference"
    RESOURCE_REFERENCE_DESC = "resourceReference desc"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    LAST_MODIFIED_DATE_TIME_DESC = "lastModifiedDateTime desc"

class Enum17(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    WEIGHT = "weight"
    RESOURCE_VISUALIZATION = "resourceVisualization"
    RESOURCE_REFERENCE = "resourceReference"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    RESOURCE = "resource"

class Enum18(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    RESOURCE = "resource"

class Enum19(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    WEIGHT = "weight"
    RESOURCE_VISUALIZATION = "resourceVisualization"
    RESOURCE_REFERENCE = "resourceReference"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    RESOURCE = "resource"

class Enum20(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    RESOURCE = "resource"

class Enum21(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    LAST_USED = "lastUsed"
    LAST_USED_DESC = "lastUsed desc"
    RESOURCE_VISUALIZATION = "resourceVisualization"
    RESOURCE_VISUALIZATION_DESC = "resourceVisualization desc"
    RESOURCE_REFERENCE = "resourceReference"
    RESOURCE_REFERENCE_DESC = "resourceReference desc"

class Enum22(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    LAST_USED = "lastUsed"
    RESOURCE_VISUALIZATION = "resourceVisualization"
    RESOURCE_REFERENCE = "resourceReference"
    RESOURCE = "resource"

class Enum23(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    RESOURCE = "resource"

class Enum24(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    LAST_USED = "lastUsed"
    RESOURCE_VISUALIZATION = "resourceVisualization"
    RESOURCE_REFERENCE = "resourceReference"
    RESOURCE = "resource"

class Enum25(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    RESOURCE = "resource"

class Enum4(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    SETTINGS = "settings"
    ACTIVITY_STATISTICS = "activityStatistics"

class Enum5(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    ACTIVITY_STATISTICS = "activityStatistics"

class Enum6(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    ACTIVITY = "activity"
    ACTIVITY_DESC = "activity desc"
    START_DATE = "startDate"
    START_DATE_DESC = "startDate desc"
    END_DATE = "endDate"
    END_DATE_DESC = "endDate desc"
    TIME_ZONE_USED = "timeZoneUsed"
    TIME_ZONE_USED_DESC = "timeZoneUsed desc"
    DURATION = "duration"
    DURATION_DESC = "duration desc"

class Enum7(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ACTIVITY = "activity"
    START_DATE = "startDate"
    END_DATE = "endDate"
    TIME_ZONE_USED = "timeZoneUsed"
    DURATION = "duration"

class Enum8(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ACTIVITY = "activity"
    START_DATE = "startDate"
    END_DATE = "endDate"
    TIME_ZONE_USED = "timeZoneUsed"
    DURATION = "duration"

class Enum9(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    TRENDING = "trending"
    SHARED = "shared"
    USED = "used"

class Get1ItemsItem(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ACTIVITY = "activity"
    START_DATE = "startDate"
    END_DATE = "endDate"
    TIME_ZONE_USED = "timeZoneUsed"
    DURATION = "duration"

class Get5ItemsItem(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    ACTIVITY = "activity"
    ACTIVITY_DESC = "activity desc"
    START_DATE = "startDate"
    START_DATE_DESC = "startDate desc"
    END_DATE = "endDate"
    END_DATE_DESC = "endDate desc"
    TIME_ZONE_USED = "timeZoneUsed"
    TIME_ZONE_USED_DESC = "timeZoneUsed desc"
    DURATION = "duration"
    DURATION_DESC = "duration desc"

class Get6ItemsItem(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ACTIVITY = "activity"
    START_DATE = "startDate"
    END_DATE = "endDate"
    TIME_ZONE_USED = "timeZoneUsed"
    DURATION = "duration"

class MicrosoftGraphAnalyticsActivityType(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    EMAIL = "Email"
    MEETING = "Meeting"
    FOCUS = "Focus"
    CHAT = "Chat"
    CALL = "Call"
