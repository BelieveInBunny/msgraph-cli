# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=line-too-long
# pylint: disable=too-many-lines


def identitysignins_data_policy_operation_data_policy_operation_create_data_policy_operation(client,
                                                                                             id_=None,
                                                                                             completed_date_time=None,
                                                                                             progress=None,
                                                                                             status=None,
                                                                                             storage_location=None,
                                                                                             submitted_date_time=None,
                                                                                             user_id=None):
    return client.create_data_policy_operation(id=id_,
                                               completed_date_time=completed_date_time,
                                               progress=progress,
                                               status=status,
                                               storage_location=storage_location,
                                               submitted_date_time=submitted_date_time,
                                               user_id=user_id)


def identitysignins_data_policy_operation_data_policy_operation_delete_data_policy_operation(client,
                                                                                             data_policy_operation_id,
                                                                                             if_match=None):
    return client.delete_data_policy_operation(data_policy_operation_id=data_policy_operation_id,
                                               if_match=if_match)


def identitysignins_data_policy_operation_data_policy_operation_list_data_policy_operation(client,
                                                                                           orderby=None,
                                                                                           select=None,
                                                                                           expand=None):
    return client.list_data_policy_operation(orderby=orderby,
                                             select=select,
                                             expand=expand)


def identitysignins_data_policy_operation_data_policy_operation_show_data_policy_operation(client,
                                                                                           data_policy_operation_id,
                                                                                           select=None,
                                                                                           expand=None):
    return client.get_data_policy_operation(data_policy_operation_id=data_policy_operation_id,
                                            select=select,
                                            expand=expand)


def identitysignins_data_policy_operation_data_policy_operation_update_data_policy_operation(client,
                                                                                             data_policy_operation_id,
                                                                                             id_=None,
                                                                                             completed_date_time=None,
                                                                                             progress=None,
                                                                                             status=None,
                                                                                             storage_location=None,
                                                                                             submitted_date_time=None,
                                                                                             user_id=None):
    return client.update_data_policy_operation(data_policy_operation_id=data_policy_operation_id,
                                               id=id_,
                                               completed_date_time=completed_date_time,
                                               progress=progress,
                                               status=status,
                                               storage_location=storage_location,
                                               submitted_date_time=submitted_date_time,
                                               user_id=user_id)


def identitysignins_identity_create_user_flow(client,
                                              id_=None,
                                              user_flow_type=None,
                                              user_flow_type_version=None):
    return client.create_user_flow(id=id_,
                                   user_flow_type=user_flow_type,
                                   user_flow_type_version=user_flow_type_version)


def identitysignins_identity_delete_conditional_access(client,
                                                       if_match=None):
    return client.delete_conditional_access(if_match=if_match)


def identitysignins_identity_delete_user_flow(client,
                                              identity_user_flow_id,
                                              if_match=None):
    return client.delete_user_flow(identity_user_flow_id=identity_user_flow_id,
                                   if_match=if_match)


def identitysignins_identity_list_user_flow(client,
                                            orderby=None,
                                            select=None,
                                            expand=None):
    return client.list_user_flow(orderby=orderby,
                                 select=select,
                                 expand=expand)


def identitysignins_identity_show_conditional_access(client,
                                                     select=None,
                                                     expand=None):
    return client.get_conditional_access(select=select,
                                         expand=expand)


def identitysignins_identity_show_user_flow(client,
                                            identity_user_flow_id,
                                            select=None,
                                            expand=None):
    return client.get_user_flow(identity_user_flow_id=identity_user_flow_id,
                                select=select,
                                expand=expand)


def identitysignins_identity_update_conditional_access(client,
                                                       id_=None,
                                                       named_locations=None,
                                                       policies=None):
    return client.update_conditional_access(id=id_,
                                            named_locations=named_locations,
                                            policies=policies)


def identitysignins_identity_update_user_flow(client,
                                              identity_user_flow_id,
                                              id_=None,
                                              user_flow_type=None,
                                              user_flow_type_version=None):
    return client.update_user_flow(identity_user_flow_id=identity_user_flow_id,
                                   id=id_,
                                   user_flow_type=user_flow_type,
                                   user_flow_type_version=user_flow_type_version)


def identitysignins_identity_conditional_access_create_named_location(client,
                                                                      id_=None,
                                                                      created_date_time=None,
                                                                      display_name=None,
                                                                      modified_date_time=None):
    return client.create_named_location(id=id_,
                                        created_date_time=created_date_time,
                                        display_name=display_name,
                                        modified_date_time=modified_date_time)


def identitysignins_identity_conditional_access_create_policy(client,
                                                              id_=None,
                                                              created_date_time=None,
                                                              description=None,
                                                              display_name=None,
                                                              grant_controls=None,
                                                              modified_date_time=None,
                                                              state=None,
                                                              application_enforced_restrictions=None,
                                                              cloud_app_security=None,
                                                              persistent_browser=None,
                                                              sign_in_frequency=None,
                                                              applications=None,
                                                              client_applications=None,
                                                              client_app_types=None,
                                                              devices=None,
                                                              device_states=None,
                                                              locations=None,
                                                              platforms=None,
                                                              sign_in_risk_levels=None,
                                                              user_risk_levels=None,
                                                              users=None):
    return client.create_policy(id=id_,
                                created_date_time=created_date_time,
                                description=description,
                                display_name=display_name,
                                grant_controls=grant_controls,
                                modified_date_time=modified_date_time,
                                state=state,
                                application_enforced_restrictions=application_enforced_restrictions,
                                cloud_app_security=cloud_app_security,
                                persistent_browser=persistent_browser,
                                sign_in_frequency=sign_in_frequency,
                                applications=applications,
                                client_applications=client_applications,
                                client_app_types=client_app_types,
                                devices=devices,
                                device_states=device_states,
                                locations=locations,
                                platforms=platforms,
                                sign_in_risk_levels=sign_in_risk_levels,
                                user_risk_levels=user_risk_levels,
                                users=users)


def identitysignins_identity_conditional_access_delete_named_location(client,
                                                                      named_location_id,
                                                                      if_match=None):
    return client.delete_named_location(named_location_id=named_location_id,
                                        if_match=if_match)


def identitysignins_identity_conditional_access_delete_policy(client,
                                                              conditional_access_policy_id,
                                                              if_match=None):
    return client.delete_policy(conditional_access_policy_id=conditional_access_policy_id,
                                if_match=if_match)


def identitysignins_identity_conditional_access_list_named_location(client,
                                                                    orderby=None,
                                                                    select=None,
                                                                    expand=None):
    return client.list_named_location(orderby=orderby,
                                      select=select,
                                      expand=expand)


def identitysignins_identity_conditional_access_list_policy(client,
                                                            orderby=None,
                                                            select=None,
                                                            expand=None):
    return client.list_policy(orderby=orderby,
                              select=select,
                              expand=expand)


def identitysignins_identity_conditional_access_show_named_location(client,
                                                                    named_location_id,
                                                                    select=None,
                                                                    expand=None):
    return client.get_named_location(named_location_id=named_location_id,
                                     select=select,
                                     expand=expand)


def identitysignins_identity_conditional_access_show_policy(client,
                                                            conditional_access_policy_id,
                                                            select=None,
                                                            expand=None):
    return client.get_policy(conditional_access_policy_id=conditional_access_policy_id,
                             select=select,
                             expand=expand)


def identitysignins_identity_conditional_access_update_named_location(client,
                                                                      named_location_id,
                                                                      id_=None,
                                                                      created_date_time=None,
                                                                      display_name=None,
                                                                      modified_date_time=None):
    return client.update_named_location(named_location_id=named_location_id,
                                        id=id_,
                                        created_date_time=created_date_time,
                                        display_name=display_name,
                                        modified_date_time=modified_date_time)


def identitysignins_identity_conditional_access_update_policy(client,
                                                              conditional_access_policy_id,
                                                              id_=None,
                                                              created_date_time=None,
                                                              description=None,
                                                              display_name=None,
                                                              grant_controls=None,
                                                              modified_date_time=None,
                                                              state=None,
                                                              application_enforced_restrictions=None,
                                                              cloud_app_security=None,
                                                              persistent_browser=None,
                                                              sign_in_frequency=None,
                                                              applications=None,
                                                              client_applications=None,
                                                              client_app_types=None,
                                                              devices=None,
                                                              device_states=None,
                                                              locations=None,
                                                              platforms=None,
                                                              sign_in_risk_levels=None,
                                                              user_risk_levels=None,
                                                              users=None):
    return client.update_policy(conditional_access_policy_id=conditional_access_policy_id,
                                id=id_,
                                created_date_time=created_date_time,
                                description=description,
                                display_name=display_name,
                                grant_controls=grant_controls,
                                modified_date_time=modified_date_time,
                                state=state,
                                application_enforced_restrictions=application_enforced_restrictions,
                                cloud_app_security=cloud_app_security,
                                persistent_browser=persistent_browser,
                                sign_in_frequency=sign_in_frequency,
                                applications=applications,
                                client_applications=client_applications,
                                client_app_types=client_app_types,
                                devices=devices,
                                device_states=device_states,
                                locations=locations,
                                platforms=platforms,
                                sign_in_risk_levels=sign_in_risk_levels,
                                user_risk_levels=user_risk_levels,
                                users=users)


def identitysignins_identity_provider_identity_provider_create_identity_provider(client,
                                                                                 id_=None,
                                                                                 client_id=None,
                                                                                 client_secret=None,
                                                                                 name=None,
                                                                                 type_=None):
    return client.create_identity_provider(id=id_,
                                           client_id=client_id,
                                           client_secret=client_secret,
                                           name=name,
                                           type=type_)


def identitysignins_identity_provider_identity_provider_delete_identity_provider(client,
                                                                                 identity_provider_id,
                                                                                 if_match=None):
    return client.delete_identity_provider(identity_provider_id=identity_provider_id,
                                           if_match=if_match)


def identitysignins_identity_provider_identity_provider_list_identity_provider(client,
                                                                               orderby=None,
                                                                               select=None,
                                                                               expand=None):
    return client.list_identity_provider(orderby=orderby,
                                         select=select,
                                         expand=expand)


def identitysignins_identity_provider_identity_provider_show_identity_provider(client,
                                                                               identity_provider_id,
                                                                               select=None,
                                                                               expand=None):
    return client.get_identity_provider(identity_provider_id=identity_provider_id,
                                        select=select,
                                        expand=expand)


def identitysignins_identity_provider_identity_provider_update_identity_provider(client,
                                                                                 identity_provider_id,
                                                                                 id_=None,
                                                                                 client_id=None,
                                                                                 client_secret=None,
                                                                                 name=None,
                                                                                 type_=None):
    return client.update_identity_provider(identity_provider_id=identity_provider_id,
                                           id=id_,
                                           client_id=client_id,
                                           client_secret=client_secret,
                                           name=name,
                                           type=type_)


def identitysignins_identity_provider_available_provider_type(client):
    return client.available_provider_type()


def identitysignins_information_protection_information_protection_show_information_protection(client,
                                                                                              select=None,
                                                                                              expand=None):
    return client.get_information_protection(select=select,
                                             expand=expand)


def identitysignins_information_protection_information_protection_update_information_protection(client,
                                                                                                id_=None,
                                                                                                data_loss_prevention_policies=None,
                                                                                                sensitivity_labels=None,
                                                                                                sensitivity_policy_settings=None,
                                                                                                threat_assessment_requests=None,
                                                                                                microsoft_graph_entity_id=None,
                                                                                                labels=None):
    return client.update_information_protection(id=id_,
                                                data_loss_prevention_policies=data_loss_prevention_policies,
                                                sensitivity_labels=sensitivity_labels,
                                                sensitivity_policy_settings=sensitivity_policy_settings,
                                                threat_assessment_requests=threat_assessment_requests,
                                                microsoft_graph_entity_id=microsoft_graph_entity_id,
                                                labels=labels)


def identitysignins_information_protection_create_data_loss_prevention_policy(client,
                                                                              id_=None,
                                                                              name=None):
    return client.create_data_loss_prevention_policy(id=id_,
                                                     name=name)


def identitysignins_information_protection_create_sensitivity_label(client,
                                                                    id_=None,
                                                                    applicable_to=None,
                                                                    application_mode=None,
                                                                    assigned_policies=None,
                                                                    auto_labeling=None,
                                                                    description=None,
                                                                    display_name=None,
                                                                    is_default=None,
                                                                    is_endpoint_protection_enabled=None,
                                                                    label_actions=None,
                                                                    name=None,
                                                                    priority=None,
                                                                    tool_tip=None,
                                                                    sublabels=None):
    return client.create_sensitivity_label(id=id_,
                                           applicable_to=applicable_to,
                                           application_mode=application_mode,
                                           assigned_policies=assigned_policies,
                                           auto_labeling=auto_labeling,
                                           description=description,
                                           display_name=display_name,
                                           is_default=is_default,
                                           is_endpoint_protection_enabled=is_endpoint_protection_enabled,
                                           label_actions=label_actions,
                                           name=name,
                                           priority=priority,
                                           tool_tip=tool_tip,
                                           sublabels=sublabels)


def identitysignins_information_protection_create_threat_assessment_request(client,
                                                                            content_type,
                                                                            id_=None,
                                                                            category=None,
                                                                            created_date_time=None,
                                                                            expected_assessment=None,
                                                                            request_source=None,
                                                                            status=None,
                                                                            results=None,
                                                                            application=None,
                                                                            device=None,
                                                                            user=None):
    return client.create_threat_assessment_request(id=id_,
                                                   category=category,
                                                   content_type_parameter=content_type,
                                                   created_date_time=created_date_time,
                                                   expected_assessment=expected_assessment,
                                                   request_source=request_source,
                                                   status=status,
                                                   results=results,
                                                   application=application,
                                                   device=device,
                                                   user=user)


def identitysignins_information_protection_delete_data_loss_prevention_policy(client,
                                                                              data_loss_prevention_policy_id,
                                                                              if_match=None):
    return client.delete_data_loss_prevention_policy(data_loss_prevention_policy_id=data_loss_prevention_policy_id,
                                                     if_match=if_match)


def identitysignins_information_protection_delete_policy(client,
                                                         if_match=None):
    return client.delete_policy(if_match=if_match)


def identitysignins_information_protection_delete_sensitivity_label(client,
                                                                    sensitivity_label_id,
                                                                    if_match=None):
    return client.delete_sensitivity_label(sensitivity_label_id=sensitivity_label_id,
                                           if_match=if_match)


def identitysignins_information_protection_delete_sensitivity_policy_setting(client,
                                                                             if_match=None):
    return client.delete_sensitivity_policy_setting(if_match=if_match)


def identitysignins_information_protection_delete_threat_assessment_request(client,
                                                                            threat_assessment_request_id,
                                                                            if_match=None):
    return client.delete_threat_assessment_request(threat_assessment_request_id=threat_assessment_request_id,
                                                   if_match=if_match)


def identitysignins_information_protection_evaluate_label_and_policy(client,
                                                                     classify_text=None,
                                                                     evaluation_input=None,
                                                                     notification_info=None,
                                                                     target=None,
                                                                     current_label=None,
                                                                     discovered_sensitive_types=None):
    return client.evaluate_label_and_policy(classify_text=classify_text,
                                            evaluation_input=evaluation_input,
                                            notification_info=notification_info,
                                            target=target,
                                            current_label=current_label,
                                            discovered_sensitive_types=discovered_sensitive_types)


def identitysignins_information_protection_list_data_loss_prevention_policy(client,
                                                                            orderby=None,
                                                                            select=None,
                                                                            expand=None):
    return client.list_data_loss_prevention_policy(orderby=orderby,
                                                   select=select,
                                                   expand=expand)


def identitysignins_information_protection_list_sensitivity_label(client,
                                                                  orderby=None,
                                                                  select=None,
                                                                  expand=None):
    return client.list_sensitivity_label(orderby=orderby,
                                         select=select,
                                         expand=expand)


def identitysignins_information_protection_list_threat_assessment_request(client,
                                                                          orderby=None,
                                                                          select=None,
                                                                          expand=None):
    return client.list_threat_assessment_request(orderby=orderby,
                                                 select=select,
                                                 expand=expand)


def identitysignins_information_protection_show_data_loss_prevention_policy(client,
                                                                            data_loss_prevention_policy_id,
                                                                            select=None,
                                                                            expand=None):
    return client.get_data_loss_prevention_policy(data_loss_prevention_policy_id=data_loss_prevention_policy_id,
                                                  select=select,
                                                  expand=expand)


def identitysignins_information_protection_show_policy(client,
                                                       select=None,
                                                       expand=None):
    return client.get_policy(select=select,
                             expand=expand)


def identitysignins_information_protection_show_sensitivity_label(client,
                                                                  sensitivity_label_id,
                                                                  select=None,
                                                                  expand=None):
    return client.get_sensitivity_label(sensitivity_label_id=sensitivity_label_id,
                                        select=select,
                                        expand=expand)


def identitysignins_information_protection_show_sensitivity_policy_setting(client,
                                                                           select=None,
                                                                           expand=None):
    return client.get_sensitivity_policy_setting(select=select,
                                                 expand=expand)


def identitysignins_information_protection_show_threat_assessment_request(client,
                                                                          threat_assessment_request_id,
                                                                          select=None,
                                                                          expand=None):
    return client.get_threat_assessment_request(threat_assessment_request_id=threat_assessment_request_id,
                                                select=select,
                                                expand=expand)


def identitysignins_information_protection_update_data_loss_prevention_policy(client,
                                                                              data_loss_prevention_policy_id,
                                                                              id_=None,
                                                                              name=None):
    return client.update_data_loss_prevention_policy(data_loss_prevention_policy_id=data_loss_prevention_policy_id,
                                                     id=id_,
                                                     name=name)


def identitysignins_information_protection_update_policy(client,
                                                         id_=None,
                                                         labels=None):
    return client.update_policy(id=id_,
                                labels=labels)


def identitysignins_information_protection_update_sensitivity_label(client,
                                                                    sensitivity_label_id,
                                                                    id_=None,
                                                                    applicable_to=None,
                                                                    application_mode=None,
                                                                    assigned_policies=None,
                                                                    auto_labeling=None,
                                                                    description=None,
                                                                    display_name=None,
                                                                    is_default=None,
                                                                    is_endpoint_protection_enabled=None,
                                                                    label_actions=None,
                                                                    name=None,
                                                                    priority=None,
                                                                    tool_tip=None,
                                                                    sublabels=None):
    return client.update_sensitivity_label(sensitivity_label_id=sensitivity_label_id,
                                           id=id_,
                                           applicable_to=applicable_to,
                                           application_mode=application_mode,
                                           assigned_policies=assigned_policies,
                                           auto_labeling=auto_labeling,
                                           description=description,
                                           display_name=display_name,
                                           is_default=is_default,
                                           is_endpoint_protection_enabled=is_endpoint_protection_enabled,
                                           label_actions=label_actions,
                                           name=name,
                                           priority=priority,
                                           tool_tip=tool_tip,
                                           sublabels=sublabels)


def identitysignins_information_protection_update_sensitivity_policy_setting(client,
                                                                             id_=None,
                                                                             applicable_to=None,
                                                                             downgrade_sensitivity_requires_justification=None,
                                                                             help_web_url=None,
                                                                             is_mandatory=None):
    return client.update_sensitivity_policy_setting(id=id_,
                                                    applicable_to=applicable_to,
                                                    downgrade_sensitivity_requires_justification=downgrade_sensitivity_requires_justification,
                                                    help_web_url=help_web_url,
                                                    is_mandatory=is_mandatory)


def identitysignins_information_protection_update_threat_assessment_request(client,
                                                                            threat_assessment_request_id,
                                                                            content_type,
                                                                            id_=None,
                                                                            category=None,
                                                                            created_date_time=None,
                                                                            expected_assessment=None,
                                                                            request_source=None,
                                                                            status=None,
                                                                            results=None,
                                                                            application=None,
                                                                            device=None,
                                                                            user=None):
    return client.update_threat_assessment_request(threat_assessment_request_id=threat_assessment_request_id,
                                                   id=id_,
                                                   category=category,
                                                   content_type_parameter=content_type,
                                                   created_date_time=created_date_time,
                                                   expected_assessment=expected_assessment,
                                                   request_source=request_source,
                                                   status=status,
                                                   results=results,
                                                   application=application,
                                                   device=device,
                                                   user=user)


def identitysignins_information_protection_data_loss_prevention_policy_evaluate(client,
                                                                                target=None,
                                                                                author=None,
                                                                                access_scope=None,
                                                                                current_label=None,
                                                                                discovered_sensitive_types=None):
    return client.evaluate(target=target,
                           author=author,
                           access_scope=access_scope,
                           current_label=current_label,
                           discovered_sensitive_types=discovered_sensitive_types)


def identitysignins_information_protection_policy_create_label(client,
                                                               id_=None,
                                                               color=None,
                                                               description=None,
                                                               is_active=None,
                                                               name=None,
                                                               parent=None,
                                                               sensitivity=None,
                                                               tooltip=None):
    return client.create_label(id=id_,
                               color=color,
                               description=description,
                               is_active=is_active,
                               name=name,
                               parent=parent,
                               sensitivity=sensitivity,
                               tooltip=tooltip)


def identitysignins_information_protection_policy_delete_label(client,
                                                               information_protection_label_id,
                                                               if_match=None):
    return client.delete_label(information_protection_label_id=information_protection_label_id,
                               if_match=if_match)


def identitysignins_information_protection_policy_list_label(client,
                                                             orderby=None,
                                                             select=None,
                                                             expand=None):
    return client.list_label(orderby=orderby,
                             select=select,
                             expand=expand)


def identitysignins_information_protection_policy_show_label(client,
                                                             information_protection_label_id,
                                                             select=None,
                                                             expand=None):
    return client.get_label(information_protection_label_id=information_protection_label_id,
                            select=select,
                            expand=expand)


def identitysignins_information_protection_policy_update_label(client,
                                                               information_protection_label_id,
                                                               id_=None,
                                                               color=None,
                                                               description=None,
                                                               is_active=None,
                                                               name=None,
                                                               parent=None,
                                                               sensitivity=None,
                                                               tooltip=None):
    return client.update_label(information_protection_label_id=information_protection_label_id,
                               id=id_,
                               color=color,
                               description=description,
                               is_active=is_active,
                               name=name,
                               parent=parent,
                               sensitivity=sensitivity,
                               tooltip=tooltip)


def identitysignins_information_protection_policy_label_evaluate_application(client,
                                                                             assignment_method=None,
                                                                             downgrade_justification=None,
                                                                             extended_properties=None,
                                                                             label_id=None,
                                                                             format_=None,
                                                                             identifier=None,
                                                                             metadata=None,
                                                                             state=None):
    return client.evaluate_application(assignment_method=assignment_method,
                                       downgrade_justification=downgrade_justification,
                                       extended_properties=extended_properties,
                                       label_id=label_id,
                                       format=format_,
                                       identifier=identifier,
                                       metadata=metadata,
                                       state=state)


def identitysignins_information_protection_policy_label_evaluate_classification_result(client,
                                                                                       classification_results=None,
                                                                                       format_=None,
                                                                                       identifier=None,
                                                                                       metadata=None,
                                                                                       state=None):
    return client.evaluate_classification_result(classification_results=classification_results,
                                                 format=format_,
                                                 identifier=identifier,
                                                 metadata=metadata,
                                                 state=state)


def identitysignins_information_protection_policy_label_evaluate_removal(client,
                                                                         downgrade_justification=None,
                                                                         format_=None,
                                                                         identifier=None,
                                                                         metadata=None,
                                                                         state=None):
    return client.evaluate_removal(downgrade_justification=downgrade_justification,
                                   format=format_,
                                   identifier=identifier,
                                   metadata=metadata,
                                   state=state)


def identitysignins_information_protection_policy_label_extract_label(client,
                                                                      format_=None,
                                                                      identifier=None,
                                                                      metadata=None,
                                                                      state=None):
    return client.extract_label(format=format_,
                                identifier=identifier,
                                metadata=metadata,
                                state=state)


def identitysignins_information_protection_sensitivity_label_create_sublabel(client,
                                                                             sensitivity_label_id,
                                                                             id_=None,
                                                                             applicable_to=None,
                                                                             application_mode=None,
                                                                             assigned_policies=None,
                                                                             auto_labeling=None,
                                                                             description=None,
                                                                             display_name=None,
                                                                             is_default=None,
                                                                             is_endpoint_protection_enabled=None,
                                                                             label_actions=None,
                                                                             name=None,
                                                                             priority=None,
                                                                             tool_tip=None,
                                                                             sublabels=None):
    return client.create_sublabel(sensitivity_label_id=sensitivity_label_id,
                                  id=id_,
                                  applicable_to=applicable_to,
                                  application_mode=application_mode,
                                  assigned_policies=assigned_policies,
                                  auto_labeling=auto_labeling,
                                  description=description,
                                  display_name=display_name,
                                  is_default=is_default,
                                  is_endpoint_protection_enabled=is_endpoint_protection_enabled,
                                  label_actions=label_actions,
                                  name=name,
                                  priority=priority,
                                  tool_tip=tool_tip,
                                  sublabels=sublabels)


def identitysignins_information_protection_sensitivity_label_delete_sublabel(client,
                                                                             sensitivity_label_id,
                                                                             sensitivity_label_id1,
                                                                             if_match=None):
    return client.delete_sublabel(sensitivity_label_id=sensitivity_label_id,
                                  sensitivity_label_id1=sensitivity_label_id1,
                                  if_match=if_match)


def identitysignins_information_protection_sensitivity_label_evaluate(client,
                                                                      discovered_sensitive_types=None,
                                                                      current_label=None):
    return client.evaluate(discovered_sensitive_types=discovered_sensitive_types,
                           current_label=current_label)


def identitysignins_information_protection_sensitivity_label_list_sublabel(client,
                                                                           sensitivity_label_id,
                                                                           orderby=None,
                                                                           select=None,
                                                                           expand=None):
    return client.list_sublabel(sensitivity_label_id=sensitivity_label_id,
                                orderby=orderby,
                                select=select,
                                expand=expand)


def identitysignins_information_protection_sensitivity_label_show_sublabel(client,
                                                                           sensitivity_label_id,
                                                                           sensitivity_label_id1,
                                                                           select=None,
                                                                           expand=None):
    return client.get_sublabel(sensitivity_label_id=sensitivity_label_id,
                               sensitivity_label_id1=sensitivity_label_id1,
                               select=select,
                               expand=expand)


def identitysignins_information_protection_sensitivity_label_update_sublabel(client,
                                                                             sensitivity_label_id,
                                                                             sensitivity_label_id1,
                                                                             id_=None,
                                                                             applicable_to=None,
                                                                             application_mode=None,
                                                                             assigned_policies=None,
                                                                             auto_labeling=None,
                                                                             description=None,
                                                                             display_name=None,
                                                                             is_default=None,
                                                                             is_endpoint_protection_enabled=None,
                                                                             label_actions=None,
                                                                             name=None,
                                                                             priority=None,
                                                                             tool_tip=None,
                                                                             sublabels=None):
    return client.update_sublabel(sensitivity_label_id=sensitivity_label_id,
                                  sensitivity_label_id1=sensitivity_label_id1,
                                  id=id_,
                                  applicable_to=applicable_to,
                                  application_mode=application_mode,
                                  assigned_policies=assigned_policies,
                                  auto_labeling=auto_labeling,
                                  description=description,
                                  display_name=display_name,
                                  is_default=is_default,
                                  is_endpoint_protection_enabled=is_endpoint_protection_enabled,
                                  label_actions=label_actions,
                                  name=name,
                                  priority=priority,
                                  tool_tip=tool_tip,
                                  sublabels=sublabels)


def identitysignins_information_protection_sensitivity_label_sublabel_evaluate(client,
                                                                               sensitivity_label_id,
                                                                               discovered_sensitive_types=None,
                                                                               current_label=None):
    return client.evaluate(sensitivity_label_id=sensitivity_label_id,
                           discovered_sensitive_types=discovered_sensitive_types,
                           current_label=current_label)


def identitysignins_information_protection_threat_assessment_request_create_result(client,
                                                                                   threat_assessment_request_id,
                                                                                   id_=None,
                                                                                   created_date_time=None,
                                                                                   message=None,
                                                                                   result_type=None):
    return client.create_result(threat_assessment_request_id=threat_assessment_request_id,
                                id=id_,
                                created_date_time=created_date_time,
                                message=message,
                                result_type=result_type)


def identitysignins_information_protection_threat_assessment_request_delete_result(client,
                                                                                   threat_assessment_request_id,
                                                                                   threat_assessment_result_id,
                                                                                   if_match=None):
    return client.delete_result(threat_assessment_request_id=threat_assessment_request_id,
                                threat_assessment_result_id=threat_assessment_result_id,
                                if_match=if_match)


def identitysignins_information_protection_threat_assessment_request_list_result(client,
                                                                                 threat_assessment_request_id,
                                                                                 orderby=None,
                                                                                 select=None,
                                                                                 expand=None):
    return client.list_result(threat_assessment_request_id=threat_assessment_request_id,
                              orderby=orderby,
                              select=select,
                              expand=expand)


def identitysignins_information_protection_threat_assessment_request_show_result(client,
                                                                                 threat_assessment_request_id,
                                                                                 threat_assessment_result_id,
                                                                                 select=None,
                                                                                 expand=None):
    return client.get_result(threat_assessment_request_id=threat_assessment_request_id,
                             threat_assessment_result_id=threat_assessment_result_id,
                             select=select,
                             expand=expand)


def identitysignins_information_protection_threat_assessment_request_update_result(client,
                                                                                   threat_assessment_request_id,
                                                                                   threat_assessment_result_id,
                                                                                   id_=None,
                                                                                   created_date_time=None,
                                                                                   message=None,
                                                                                   result_type=None):
    return client.update_result(threat_assessment_request_id=threat_assessment_request_id,
                                threat_assessment_result_id=threat_assessment_result_id,
                                id=id_,
                                created_date_time=created_date_time,
                                message=message,
                                result_type=result_type)


def identitysignins_invitation_invitation_create_invitation(client,
                                                            id_=None,
                                                            invited_user_display_name=None,
                                                            invited_user_email_address=None,
                                                            invited_user_type=None,
                                                            invite_redeem_url=None,
                                                            invite_redirect_url=None,
                                                            reset_redemption=None,
                                                            send_invitation_message=None,
                                                            status=None,
                                                            invited_user=None,
                                                            cc_recipients=None,
                                                            customized_message_body=None,
                                                            message_language=None):
    return client.create_invitation(id=id_,
                                    invited_user_display_name=invited_user_display_name,
                                    invited_user_email_address=invited_user_email_address,
                                    invited_user_type=invited_user_type,
                                    invite_redeem_url=invite_redeem_url,
                                    invite_redirect_url=invite_redirect_url,
                                    reset_redemption=reset_redemption,
                                    send_invitation_message=send_invitation_message,
                                    status=status,
                                    invited_user=invited_user,
                                    cc_recipients=cc_recipients,
                                    customized_message_body=customized_message_body,
                                    message_language=message_language)


def identitysignins_invitation_invitation_delete_invitation(client,
                                                            invitation_id,
                                                            if_match=None):
    return client.delete_invitation(invitation_id=invitation_id,
                                    if_match=if_match)


def identitysignins_invitation_invitation_list_invitation(client,
                                                          orderby=None,
                                                          select=None,
                                                          expand=None):
    return client.list_invitation(orderby=orderby,
                                  select=select,
                                  expand=expand)


def identitysignins_invitation_invitation_show_invitation(client,
                                                          invitation_id,
                                                          select=None,
                                                          expand=None):
    return client.get_invitation(invitation_id=invitation_id,
                                 select=select,
                                 expand=expand)


def identitysignins_invitation_invitation_update_invitation(client,
                                                            invitation_id,
                                                            id_=None,
                                                            invited_user_display_name=None,
                                                            invited_user_email_address=None,
                                                            invited_user_type=None,
                                                            invite_redeem_url=None,
                                                            invite_redirect_url=None,
                                                            reset_redemption=None,
                                                            send_invitation_message=None,
                                                            status=None,
                                                            invited_user=None,
                                                            cc_recipients=None,
                                                            customized_message_body=None,
                                                            message_language=None):
    return client.update_invitation(invitation_id=invitation_id,
                                    id=id_,
                                    invited_user_display_name=invited_user_display_name,
                                    invited_user_email_address=invited_user_email_address,
                                    invited_user_type=invited_user_type,
                                    invite_redeem_url=invite_redeem_url,
                                    invite_redirect_url=invite_redirect_url,
                                    reset_redemption=reset_redemption,
                                    send_invitation_message=send_invitation_message,
                                    status=status,
                                    invited_user=invited_user,
                                    cc_recipients=cc_recipients,
                                    customized_message_body=customized_message_body,
                                    message_language=message_language)


def identitysignins_invitation_delete_ref_invited_user(client,
                                                       invitation_id,
                                                       if_match=None):
    return client.delete_ref_invited_user(invitation_id=invitation_id,
                                          if_match=if_match)


def identitysignins_invitation_set_ref_invited_user(client,
                                                    invitation_id,
                                                    body):
    return client.set_ref_invited_user(invitation_id=invitation_id,
                                       body=body)


def identitysignins_invitation_show_invited_user(client,
                                                 invitation_id,
                                                 select=None,
                                                 expand=None):
    return client.get_invited_user(invitation_id=invitation_id,
                                   select=select,
                                   expand=expand)


def identitysignins_invitation_show_ref_invited_user(client,
                                                     invitation_id):
    return client.get_ref_invited_user(invitation_id=invitation_id)


def identitysignins_oauth2_permission_grant_o_auth2_permission_grant_create_o_auth2_permission_grant(client,
                                                                                                     id_=None,
                                                                                                     client_id=None,
                                                                                                     consent_type=None,
                                                                                                     expiry_time=None,
                                                                                                     principal_id=None,
                                                                                                     resource_id=None,
                                                                                                     scope=None,
                                                                                                     start_time=None):
    return client.create_o_auth2_permission_grant(id=id_,
                                                  client_id=client_id,
                                                  consent_type=consent_type,
                                                  expiry_time=expiry_time,
                                                  principal_id=principal_id,
                                                  resource_id=resource_id,
                                                  scope=scope,
                                                  start_time=start_time)


def identitysignins_oauth2_permission_grant_o_auth2_permission_grant_delete_o_auth2_permission_grant(client,
                                                                                                     o_auth2_permission_grant_id,
                                                                                                     if_match=None):
    return client.delete_o_auth2_permission_grant(o_auth2_permission_grant_id=o_auth2_permission_grant_id,
                                                  if_match=if_match)


def identitysignins_oauth2_permission_grant_o_auth2_permission_grant_list_o_auth2_permission_grant(client,
                                                                                                   orderby=None,
                                                                                                   select=None,
                                                                                                   expand=None):
    return client.list_o_auth2_permission_grant(orderby=orderby,
                                                select=select,
                                                expand=expand)


def identitysignins_oauth2_permission_grant_o_auth2_permission_grant_show_o_auth2_permission_grant(client,
                                                                                                   o_auth2_permission_grant_id,
                                                                                                   select=None,
                                                                                                   expand=None):
    return client.get_o_auth2_permission_grant(o_auth2_permission_grant_id=o_auth2_permission_grant_id,
                                               select=select,
                                               expand=expand)


def identitysignins_oauth2_permission_grant_o_auth2_permission_grant_update_o_auth2_permission_grant(client,
                                                                                                     o_auth2_permission_grant_id,
                                                                                                     id_=None,
                                                                                                     client_id=None,
                                                                                                     consent_type=None,
                                                                                                     expiry_time=None,
                                                                                                     principal_id=None,
                                                                                                     resource_id=None,
                                                                                                     scope=None,
                                                                                                     start_time=None):
    return client.update_o_auth2_permission_grant(o_auth2_permission_grant_id=o_auth2_permission_grant_id,
                                                  id=id_,
                                                  client_id=client_id,
                                                  consent_type=consent_type,
                                                  expiry_time=expiry_time,
                                                  principal_id=principal_id,
                                                  resource_id=resource_id,
                                                  scope=scope,
                                                  start_time=start_time)


def identitysignins_oauth2_permission_grant_delta(client):
    return client.delta()


def identitysignins_organization_create_ref_certificate_based_auth_configuration(client,
                                                                                 organization_id,
                                                                                 body):
    return client.create_ref_certificate_based_auth_configuration(organization_id=organization_id,
                                                                  body=body)


def identitysignins_organization_list_certificate_based_auth_configuration(client,
                                                                           organization_id,
                                                                           orderby=None,
                                                                           select=None,
                                                                           expand=None):
    return client.list_certificate_based_auth_configuration(organization_id=organization_id,
                                                            orderby=orderby,
                                                            select=select,
                                                            expand=expand)


def identitysignins_organization_list_ref_certificate_based_auth_configuration(client,
                                                                               organization_id,
                                                                               orderby=None):
    return client.list_ref_certificate_based_auth_configuration(organization_id=organization_id,
                                                                orderby=orderby)


def identitysignins_policy_policy_root_show_policy_root(client,
                                                        select=None,
                                                        expand=None):
    return client.get_policy_root(select=select,
                                  expand=expand)


def identitysignins_policy_policy_root_update_policy_root(client,
                                                          b2_c_authentication_methods_policy=None,
                                                          activity_based_timeout_policies=None,
                                                          authorization_policy=None,
                                                          claims_mapping_policies=None,
                                                          home_realm_discovery_policies=None,
                                                          permission_grant_policies=None,
                                                          private_link_resource_policies=None,
                                                          token_issuance_policies=None,
                                                          token_lifetime_policies=None,
                                                          conditional_access_policies=None,
                                                          identity_security_defaults_enforcement_policy=None,
                                                          id_=None,
                                                          apply_actions=None,
                                                          auto_apply_decisions_enabled=None,
                                                          default_decision=None,
                                                          default_decision_enabled=None,
                                                          instance_duration_in_days=None,
                                                          justification_required_on_approval=None,
                                                          mail_notifications_enabled=None,
                                                          recommendations_enabled=None,
                                                          recurrence=None,
                                                          reminder_notifications_enabled=None,
                                                          microsoft_graph_entity_id=None,
                                                          is_enabled=None,
                                                          notify_reviewers=None,
                                                          reminders_enabled=None,
                                                          request_duration_in_days=None,
                                                          reviewers=None,
                                                          version=None,
                                                          id1=None,
                                                          id2=None,
                                                          description=None,
                                                          display_name=None):
    return client.update_policy_root(b2_c_authentication_methods_policy=b2_c_authentication_methods_policy,
                                     activity_based_timeout_policies=activity_based_timeout_policies,
                                     authorization_policy=authorization_policy,
                                     claims_mapping_policies=claims_mapping_policies,
                                     home_realm_discovery_policies=home_realm_discovery_policies,
                                     permission_grant_policies=permission_grant_policies,
                                     private_link_resource_policies=private_link_resource_policies,
                                     token_issuance_policies=token_issuance_policies,
                                     token_lifetime_policies=token_lifetime_policies,
                                     conditional_access_policies=conditional_access_policies,
                                     identity_security_defaults_enforcement_policy=identity_security_defaults_enforcement_policy,
                                     id=id_,
                                     apply_actions=apply_actions,
                                     auto_apply_decisions_enabled=auto_apply_decisions_enabled,
                                     default_decision=default_decision,
                                     default_decision_enabled=default_decision_enabled,
                                     instance_duration_in_days=instance_duration_in_days,
                                     justification_required_on_approval=justification_required_on_approval,
                                     mail_notifications_enabled=mail_notifications_enabled,
                                     recommendations_enabled=recommendations_enabled,
                                     recurrence=recurrence,
                                     reminder_notifications_enabled=reminder_notifications_enabled,
                                     microsoft_graph_entity_id=microsoft_graph_entity_id,
                                     is_enabled=is_enabled,
                                     notify_reviewers=notify_reviewers,
                                     reminders_enabled=reminders_enabled,
                                     request_duration_in_days=request_duration_in_days,
                                     reviewers=reviewers,
                                     version=version,
                                     id1=id1,
                                     id2=id2,
                                     description=description,
                                     display_name=display_name,
                                     is_enabled=is_enabled)


def identitysignins_policy_create_activity_based_timeout_policy(client,
                                                                id_=None,
                                                                deleted_date_time=None,
                                                                description=None,
                                                                display_name=None,
                                                                definition=None,
                                                                is_organization_default=None,
                                                                applies_to=None):
    return client.create_activity_based_timeout_policy(id=id_,
                                                       deleted_date_time=deleted_date_time,
                                                       description=description,
                                                       display_name=display_name,
                                                       definition=definition,
                                                       is_organization_default=is_organization_default,
                                                       applies_to=applies_to)


def identitysignins_policy_create_authorization_policy(client,
                                                       id_=None,
                                                       deleted_date_time=None,
                                                       description=None,
                                                       display_name=None,
                                                       allowed_to_sign_up_email_based_subscriptions=None,
                                                       allowed_to_use_sspr=None,
                                                       allow_email_verified_users_to_join_organization=None,
                                                       allow_invites_from=None,
                                                       block_msol_power_shell=None,
                                                       default_user_role_permissions=None,
                                                       enabled_preview_features=None,
                                                       guest_user_role_id=None,
                                                       permission_grant_policy_ids_assigned_to_default_user_role=None):
    return client.create_authorization_policy(id=id_,
                                              deleted_date_time=deleted_date_time,
                                              description=description,
                                              display_name=display_name,
                                              allowed_to_sign_up_email_based_subscriptions=allowed_to_sign_up_email_based_subscriptions,
                                              allowed_to_use_sspr=allowed_to_use_sspr,
                                              allow_email_verified_users_to_join_organization=allow_email_verified_users_to_join_organization,
                                              allow_invites_from=allow_invites_from,
                                              block_msol_power_shell=block_msol_power_shell,
                                              default_user_role_permissions=default_user_role_permissions,
                                              enabled_preview_features=enabled_preview_features,
                                              guest_user_role_id=guest_user_role_id,
                                              permission_grant_policy_ids_assigned_to_default_user_role=permission_grant_policy_ids_assigned_to_default_user_role)


def identitysignins_policy_create_claim_mapping_policy(client,
                                                       id_=None,
                                                       deleted_date_time=None,
                                                       description=None,
                                                       display_name=None,
                                                       definition=None,
                                                       is_organization_default=None,
                                                       applies_to=None):
    return client.create_claim_mapping_policy(id=id_,
                                              deleted_date_time=deleted_date_time,
                                              description=description,
                                              display_name=display_name,
                                              definition=definition,
                                              is_organization_default=is_organization_default,
                                              applies_to=applies_to)


def identitysignins_policy_create_conditional_access_policy(client,
                                                            id_=None,
                                                            created_date_time=None,
                                                            description=None,
                                                            display_name=None,
                                                            grant_controls=None,
                                                            modified_date_time=None,
                                                            state=None,
                                                            application_enforced_restrictions=None,
                                                            cloud_app_security=None,
                                                            persistent_browser=None,
                                                            sign_in_frequency=None,
                                                            applications=None,
                                                            client_applications=None,
                                                            client_app_types=None,
                                                            devices=None,
                                                            device_states=None,
                                                            locations=None,
                                                            platforms=None,
                                                            sign_in_risk_levels=None,
                                                            user_risk_levels=None,
                                                            users=None):
    return client.create_conditional_access_policy(id=id_,
                                                   created_date_time=created_date_time,
                                                   description=description,
                                                   display_name=display_name,
                                                   grant_controls=grant_controls,
                                                   modified_date_time=modified_date_time,
                                                   state=state,
                                                   application_enforced_restrictions=application_enforced_restrictions,
                                                   cloud_app_security=cloud_app_security,
                                                   persistent_browser=persistent_browser,
                                                   sign_in_frequency=sign_in_frequency,
                                                   applications=applications,
                                                   client_applications=client_applications,
                                                   client_app_types=client_app_types,
                                                   devices=devices,
                                                   device_states=device_states,
                                                   locations=locations,
                                                   platforms=platforms,
                                                   sign_in_risk_levels=sign_in_risk_levels,
                                                   user_risk_levels=user_risk_levels,
                                                   users=users)


def identitysignins_policy_create_home_realm_discovery_policy(client,
                                                              id_=None,
                                                              deleted_date_time=None,
                                                              description=None,
                                                              display_name=None,
                                                              definition=None,
                                                              is_organization_default=None,
                                                              applies_to=None):
    return client.create_home_realm_discovery_policy(id=id_,
                                                     deleted_date_time=deleted_date_time,
                                                     description=description,
                                                     display_name=display_name,
                                                     definition=definition,
                                                     is_organization_default=is_organization_default,
                                                     applies_to=applies_to)


def identitysignins_policy_create_permission_grant_policy(client,
                                                          id_=None,
                                                          deleted_date_time=None,
                                                          description=None,
                                                          display_name=None,
                                                          excludes=None,
                                                          includes=None):
    return client.create_permission_grant_policy(id=id_,
                                                 deleted_date_time=deleted_date_time,
                                                 description=description,
                                                 display_name=display_name,
                                                 excludes=excludes,
                                                 includes=includes)


def identitysignins_policy_create_private_link_resource_policy(client,
                                                               id_=None,
                                                               allowed_tenant_ids=None,
                                                               arm_resource_id=None):
    return client.create_private_link_resource_policy(id=id_,
                                                      allowed_tenant_ids=allowed_tenant_ids,
                                                      arm_resource_id=arm_resource_id)


def identitysignins_policy_create_token_issuance_policy(client,
                                                        id_=None,
                                                        deleted_date_time=None,
                                                        description=None,
                                                        display_name=None,
                                                        definition=None,
                                                        is_organization_default=None,
                                                        applies_to=None):
    return client.create_token_issuance_policy(id=id_,
                                               deleted_date_time=deleted_date_time,
                                               description=description,
                                               display_name=display_name,
                                               definition=definition,
                                               is_organization_default=is_organization_default,
                                               applies_to=applies_to)


def identitysignins_policy_create_token_lifetime_policy(client,
                                                        id_=None,
                                                        deleted_date_time=None,
                                                        description=None,
                                                        display_name=None,
                                                        definition=None,
                                                        is_organization_default=None,
                                                        applies_to=None):
    return client.create_token_lifetime_policy(id=id_,
                                               deleted_date_time=deleted_date_time,
                                               description=description,
                                               display_name=display_name,
                                               definition=definition,
                                               is_organization_default=is_organization_default,
                                               applies_to=applies_to)


def identitysignins_policy_delete_activity_based_timeout_policy(client,
                                                                activity_based_timeout_policy_id,
                                                                if_match=None):
    return client.delete_activity_based_timeout_policy(activity_based_timeout_policy_id=activity_based_timeout_policy_id,
                                                       if_match=if_match)


def identitysignins_policy_delete_admin_consent_request_policy(client,
                                                               if_match=None):
    return client.delete_admin_consent_request_policy(if_match=if_match)


def identitysignins_policy_delete_authentication_flow_policy(client,
                                                             if_match=None):
    return client.delete_authentication_flow_policy(if_match=if_match)


def identitysignins_policy_delete_authorization_policy(client,
                                                       authorization_policy_id,
                                                       if_match=None):
    return client.delete_authorization_policy(authorization_policy_id=authorization_policy_id,
                                              if_match=if_match)


def identitysignins_policy_delete_b2_c_authentication_method_policy(client,
                                                                    if_match=None):
    return client.delete_b2_c_authentication_method_policy(if_match=if_match)


def identitysignins_policy_delete_claim_mapping_policy(client,
                                                       claims_mapping_policy_id,
                                                       if_match=None):
    return client.delete_claim_mapping_policy(claims_mapping_policy_id=claims_mapping_policy_id,
                                              if_match=if_match)


def identitysignins_policy_delete_conditional_access_policy(client,
                                                            conditional_access_policy_id,
                                                            if_match=None):
    return client.delete_conditional_access_policy(conditional_access_policy_id=conditional_access_policy_id,
                                                   if_match=if_match)


def identitysignins_policy_delete_device_registration_policy(client,
                                                             if_match=None):
    return client.delete_device_registration_policy(if_match=if_match)


def identitysignins_policy_delete_directory_role_access_review_policy(client,
                                                                      if_match=None):
    return client.delete_directory_role_access_review_policy(if_match=if_match)


def identitysignins_policy_delete_home_realm_discovery_policy(client,
                                                              home_realm_discovery_policy_id,
                                                              if_match=None):
    return client.delete_home_realm_discovery_policy(home_realm_discovery_policy_id=home_realm_discovery_policy_id,
                                                     if_match=if_match)


def identitysignins_policy_delete_identity_security_default_enforcement_policy(client,
                                                                               if_match=None):
    return client.delete_identity_security_default_enforcement_policy(if_match=if_match)


def identitysignins_policy_delete_permission_grant_policy(client,
                                                          permission_grant_policy_id,
                                                          if_match=None):
    return client.delete_permission_grant_policy(permission_grant_policy_id=permission_grant_policy_id,
                                                 if_match=if_match)


def identitysignins_policy_delete_private_link_resource_policy(client,
                                                               private_link_resource_id,
                                                               if_match=None):
    return client.delete_private_link_resource_policy(private_link_resource_id=private_link_resource_id,
                                                      if_match=if_match)


def identitysignins_policy_delete_token_issuance_policy(client,
                                                        token_issuance_policy_id,
                                                        if_match=None):
    return client.delete_token_issuance_policy(token_issuance_policy_id=token_issuance_policy_id,
                                               if_match=if_match)


def identitysignins_policy_delete_token_lifetime_policy(client,
                                                        token_lifetime_policy_id,
                                                        if_match=None):
    return client.delete_token_lifetime_policy(token_lifetime_policy_id=token_lifetime_policy_id,
                                               if_match=if_match)


def identitysignins_policy_list_activity_based_timeout_policy(client,
                                                              orderby=None,
                                                              select=None,
                                                              expand=None):
    return client.list_activity_based_timeout_policy(orderby=orderby,
                                                     select=select,
                                                     expand=expand)


def identitysignins_policy_list_authorization_policy(client,
                                                     orderby=None,
                                                     select=None,
                                                     expand=None):
    return client.list_authorization_policy(orderby=orderby,
                                            select=select,
                                            expand=expand)


def identitysignins_policy_list_claim_mapping_policy(client,
                                                     orderby=None,
                                                     select=None,
                                                     expand=None):
    return client.list_claim_mapping_policy(orderby=orderby,
                                            select=select,
                                            expand=expand)


def identitysignins_policy_list_conditional_access_policy(client,
                                                          orderby=None,
                                                          select=None,
                                                          expand=None):
    return client.list_conditional_access_policy(orderby=orderby,
                                                 select=select,
                                                 expand=expand)


def identitysignins_policy_list_home_realm_discovery_policy(client,
                                                            orderby=None,
                                                            select=None,
                                                            expand=None):
    return client.list_home_realm_discovery_policy(orderby=orderby,
                                                   select=select,
                                                   expand=expand)


def identitysignins_policy_list_permission_grant_policy(client,
                                                        orderby=None,
                                                        select=None,
                                                        expand=None):
    return client.list_permission_grant_policy(orderby=orderby,
                                               select=select,
                                               expand=expand)


def identitysignins_policy_list_private_link_resource_policy(client,
                                                             orderby=None,
                                                             select=None,
                                                             expand=None):
    return client.list_private_link_resource_policy(orderby=orderby,
                                                    select=select,
                                                    expand=expand)


def identitysignins_policy_list_token_issuance_policy(client,
                                                      orderby=None,
                                                      select=None,
                                                      expand=None):
    return client.list_token_issuance_policy(orderby=orderby,
                                             select=select,
                                             expand=expand)


def identitysignins_policy_list_token_lifetime_policy(client,
                                                      orderby=None,
                                                      select=None,
                                                      expand=None):
    return client.list_token_lifetime_policy(orderby=orderby,
                                             select=select,
                                             expand=expand)


def identitysignins_policy_show_activity_based_timeout_policy(client,
                                                              activity_based_timeout_policy_id,
                                                              select=None,
                                                              expand=None):
    return client.get_activity_based_timeout_policy(activity_based_timeout_policy_id=activity_based_timeout_policy_id,
                                                    select=select,
                                                    expand=expand)


def identitysignins_policy_show_admin_consent_request_policy(client,
                                                             select=None,
                                                             expand=None):
    return client.get_admin_consent_request_policy(select=select,
                                                   expand=expand)


def identitysignins_policy_show_authentication_flow_policy(client,
                                                           select=None,
                                                           expand=None):
    return client.get_authentication_flow_policy(select=select,
                                                 expand=expand)


def identitysignins_policy_show_authorization_policy(client,
                                                     authorization_policy_id,
                                                     select=None,
                                                     expand=None):
    return client.get_authorization_policy(authorization_policy_id=authorization_policy_id,
                                           select=select,
                                           expand=expand)


def identitysignins_policy_show_b2_c_authentication_method_policy(client,
                                                                  select=None,
                                                                  expand=None):
    return client.get_b2_c_authentication_method_policy(select=select,
                                                        expand=expand)


def identitysignins_policy_show_claim_mapping_policy(client,
                                                     claims_mapping_policy_id,
                                                     select=None,
                                                     expand=None):
    return client.get_claim_mapping_policy(claims_mapping_policy_id=claims_mapping_policy_id,
                                           select=select,
                                           expand=expand)


def identitysignins_policy_show_conditional_access_policy(client,
                                                          conditional_access_policy_id,
                                                          select=None,
                                                          expand=None):
    return client.get_conditional_access_policy(conditional_access_policy_id=conditional_access_policy_id,
                                                select=select,
                                                expand=expand)


def identitysignins_policy_show_device_registration_policy(client,
                                                           select=None,
                                                           expand=None):
    return client.get_device_registration_policy(select=select,
                                                 expand=expand)


def identitysignins_policy_show_directory_role_access_review_policy(client,
                                                                    select=None,
                                                                    expand=None):
    return client.get_directory_role_access_review_policy(select=select,
                                                          expand=expand)


def identitysignins_policy_show_home_realm_discovery_policy(client,
                                                            home_realm_discovery_policy_id,
                                                            select=None,
                                                            expand=None):
    return client.get_home_realm_discovery_policy(home_realm_discovery_policy_id=home_realm_discovery_policy_id,
                                                  select=select,
                                                  expand=expand)


def identitysignins_policy_show_identity_security_default_enforcement_policy(client,
                                                                             select=None,
                                                                             expand=None):
    return client.get_identity_security_default_enforcement_policy(select=select,
                                                                   expand=expand)


def identitysignins_policy_show_permission_grant_policy(client,
                                                        permission_grant_policy_id,
                                                        select=None,
                                                        expand=None):
    return client.get_permission_grant_policy(permission_grant_policy_id=permission_grant_policy_id,
                                              select=select,
                                              expand=expand)


def identitysignins_policy_show_private_link_resource_policy(client,
                                                             private_link_resource_id,
                                                             select=None,
                                                             expand=None):
    return client.get_private_link_resource_policy(private_link_resource_id=private_link_resource_id,
                                                   select=select,
                                                   expand=expand)


def identitysignins_policy_show_token_issuance_policy(client,
                                                      token_issuance_policy_id,
                                                      select=None,
                                                      expand=None):
    return client.get_token_issuance_policy(token_issuance_policy_id=token_issuance_policy_id,
                                            select=select,
                                            expand=expand)


def identitysignins_policy_show_token_lifetime_policy(client,
                                                      token_lifetime_policy_id,
                                                      select=None,
                                                      expand=None):
    return client.get_token_lifetime_policy(token_lifetime_policy_id=token_lifetime_policy_id,
                                            select=select,
                                            expand=expand)


def identitysignins_policy_update_activity_based_timeout_policy(client,
                                                                activity_based_timeout_policy_id,
                                                                id_=None,
                                                                deleted_date_time=None,
                                                                description=None,
                                                                display_name=None,
                                                                definition=None,
                                                                is_organization_default=None,
                                                                applies_to=None):
    return client.update_activity_based_timeout_policy(activity_based_timeout_policy_id=activity_based_timeout_policy_id,
                                                       id=id_,
                                                       deleted_date_time=deleted_date_time,
                                                       description=description,
                                                       display_name=display_name,
                                                       definition=definition,
                                                       is_organization_default=is_organization_default,
                                                       applies_to=applies_to)


def identitysignins_policy_update_admin_consent_request_policy(client,
                                                               id_=None,
                                                               is_enabled=None,
                                                               notify_reviewers=None,
                                                               reminders_enabled=None,
                                                               request_duration_in_days=None,
                                                               reviewers=None,
                                                               version=None):
    return client.update_admin_consent_request_policy(id=id_,
                                                      is_enabled=is_enabled,
                                                      notify_reviewers=notify_reviewers,
                                                      reminders_enabled=reminders_enabled,
                                                      request_duration_in_days=request_duration_in_days,
                                                      reviewers=reviewers,
                                                      version=version)


def identitysignins_policy_update_authentication_flow_policy(client,
                                                             id_=None,
                                                             description=None,
                                                             display_name=None,
                                                             is_enabled=None):
    return client.update_authentication_flow_policy(id=id_,
                                                    description=description,
                                                    display_name=display_name,
                                                    is_enabled=is_enabled)


def identitysignins_policy_update_authorization_policy(client,
                                                       authorization_policy_id,
                                                       id_=None,
                                                       deleted_date_time=None,
                                                       description=None,
                                                       display_name=None,
                                                       allowed_to_sign_up_email_based_subscriptions=None,
                                                       allowed_to_use_sspr=None,
                                                       allow_email_verified_users_to_join_organization=None,
                                                       allow_invites_from=None,
                                                       block_msol_power_shell=None,
                                                       default_user_role_permissions=None,
                                                       enabled_preview_features=None,
                                                       guest_user_role_id=None,
                                                       permission_grant_policy_ids_assigned_to_default_user_role=None):
    return client.update_authorization_policy(authorization_policy_id=authorization_policy_id,
                                              id=id_,
                                              deleted_date_time=deleted_date_time,
                                              description=description,
                                              display_name=display_name,
                                              allowed_to_sign_up_email_based_subscriptions=allowed_to_sign_up_email_based_subscriptions,
                                              allowed_to_use_sspr=allowed_to_use_sspr,
                                              allow_email_verified_users_to_join_organization=allow_email_verified_users_to_join_organization,
                                              allow_invites_from=allow_invites_from,
                                              block_msol_power_shell=block_msol_power_shell,
                                              default_user_role_permissions=default_user_role_permissions,
                                              enabled_preview_features=enabled_preview_features,
                                              guest_user_role_id=guest_user_role_id,
                                              permission_grant_policy_ids_assigned_to_default_user_role=permission_grant_policy_ids_assigned_to_default_user_role)


def identitysignins_policy_update_b2_c_authentication_method_policy(client,
                                                                    id_=None,
                                                                    is_email_password_authentication_enabled=None,
                                                                    is_phone_one_time_password_authentication_enabled=None,
                                                                    is_user_name_authentication_enabled=None):
    return client.update_b2_c_authentication_method_policy(id=id_,
                                                           is_email_password_authentication_enabled=is_email_password_authentication_enabled,
                                                           is_phone_one_time_password_authentication_enabled=is_phone_one_time_password_authentication_enabled,
                                                           is_user_name_authentication_enabled=is_user_name_authentication_enabled)


def identitysignins_policy_update_claim_mapping_policy(client,
                                                       claims_mapping_policy_id,
                                                       id_=None,
                                                       deleted_date_time=None,
                                                       description=None,
                                                       display_name=None,
                                                       definition=None,
                                                       is_organization_default=None,
                                                       applies_to=None):
    return client.update_claim_mapping_policy(claims_mapping_policy_id=claims_mapping_policy_id,
                                              id=id_,
                                              deleted_date_time=deleted_date_time,
                                              description=description,
                                              display_name=display_name,
                                              definition=definition,
                                              is_organization_default=is_organization_default,
                                              applies_to=applies_to)


def identitysignins_policy_update_conditional_access_policy(client,
                                                            conditional_access_policy_id,
                                                            id_=None,
                                                            created_date_time=None,
                                                            description=None,
                                                            display_name=None,
                                                            grant_controls=None,
                                                            modified_date_time=None,
                                                            state=None,
                                                            application_enforced_restrictions=None,
                                                            cloud_app_security=None,
                                                            persistent_browser=None,
                                                            sign_in_frequency=None,
                                                            applications=None,
                                                            client_applications=None,
                                                            client_app_types=None,
                                                            devices=None,
                                                            device_states=None,
                                                            locations=None,
                                                            platforms=None,
                                                            sign_in_risk_levels=None,
                                                            user_risk_levels=None,
                                                            users=None):
    return client.update_conditional_access_policy(conditional_access_policy_id=conditional_access_policy_id,
                                                   id=id_,
                                                   created_date_time=created_date_time,
                                                   description=description,
                                                   display_name=display_name,
                                                   grant_controls=grant_controls,
                                                   modified_date_time=modified_date_time,
                                                   state=state,
                                                   application_enforced_restrictions=application_enforced_restrictions,
                                                   cloud_app_security=cloud_app_security,
                                                   persistent_browser=persistent_browser,
                                                   sign_in_frequency=sign_in_frequency,
                                                   applications=applications,
                                                   client_applications=client_applications,
                                                   client_app_types=client_app_types,
                                                   devices=devices,
                                                   device_states=device_states,
                                                   locations=locations,
                                                   platforms=platforms,
                                                   sign_in_risk_levels=sign_in_risk_levels,
                                                   user_risk_levels=user_risk_levels,
                                                   users=users)


def identitysignins_policy_update_device_registration_policy(client,
                                                             id_=None):
    return client.update_device_registration_policy(id=id_)


def identitysignins_policy_update_directory_role_access_review_policy(client,
                                                                      id_=None,
                                                                      apply_actions=None,
                                                                      auto_apply_decisions_enabled=None,
                                                                      default_decision=None,
                                                                      default_decision_enabled=None,
                                                                      instance_duration_in_days=None,
                                                                      justification_required_on_approval=None,
                                                                      mail_notifications_enabled=None,
                                                                      recommendations_enabled=None,
                                                                      recurrence=None,
                                                                      reminder_notifications_enabled=None):
    return client.update_directory_role_access_review_policy(id=id_,
                                                             apply_actions=apply_actions,
                                                             auto_apply_decisions_enabled=auto_apply_decisions_enabled,
                                                             default_decision=default_decision,
                                                             default_decision_enabled=default_decision_enabled,
                                                             instance_duration_in_days=instance_duration_in_days,
                                                             justification_required_on_approval=justification_required_on_approval,
                                                             mail_notifications_enabled=mail_notifications_enabled,
                                                             recommendations_enabled=recommendations_enabled,
                                                             recurrence=recurrence,
                                                             reminder_notifications_enabled=reminder_notifications_enabled)


def identitysignins_policy_update_home_realm_discovery_policy(client,
                                                              home_realm_discovery_policy_id,
                                                              id_=None,
                                                              deleted_date_time=None,
                                                              description=None,
                                                              display_name=None,
                                                              definition=None,
                                                              is_organization_default=None,
                                                              applies_to=None):
    return client.update_home_realm_discovery_policy(home_realm_discovery_policy_id=home_realm_discovery_policy_id,
                                                     id=id_,
                                                     deleted_date_time=deleted_date_time,
                                                     description=description,
                                                     display_name=display_name,
                                                     definition=definition,
                                                     is_organization_default=is_organization_default,
                                                     applies_to=applies_to)


def identitysignins_policy_update_identity_security_default_enforcement_policy(client,
                                                                               id_=None,
                                                                               deleted_date_time=None,
                                                                               description=None,
                                                                               display_name=None,
                                                                               is_enabled=None):
    return client.update_identity_security_default_enforcement_policy(id=id_,
                                                                      deleted_date_time=deleted_date_time,
                                                                      description=description,
                                                                      display_name=display_name,
                                                                      is_enabled=is_enabled)


def identitysignins_policy_update_permission_grant_policy(client,
                                                          permission_grant_policy_id,
                                                          id_=None,
                                                          deleted_date_time=None,
                                                          description=None,
                                                          display_name=None,
                                                          excludes=None,
                                                          includes=None):
    return client.update_permission_grant_policy(permission_grant_policy_id=permission_grant_policy_id,
                                                 id=id_,
                                                 deleted_date_time=deleted_date_time,
                                                 description=description,
                                                 display_name=display_name,
                                                 excludes=excludes,
                                                 includes=includes)


def identitysignins_policy_update_private_link_resource_policy(client,
                                                               private_link_resource_id,
                                                               id_=None,
                                                               allowed_tenant_ids=None,
                                                               arm_resource_id=None):
    return client.update_private_link_resource_policy(private_link_resource_id=private_link_resource_id,
                                                      id=id_,
                                                      allowed_tenant_ids=allowed_tenant_ids,
                                                      arm_resource_id=arm_resource_id)


def identitysignins_policy_update_token_issuance_policy(client,
                                                        token_issuance_policy_id,
                                                        id_=None,
                                                        deleted_date_time=None,
                                                        description=None,
                                                        display_name=None,
                                                        definition=None,
                                                        is_organization_default=None,
                                                        applies_to=None):
    return client.update_token_issuance_policy(token_issuance_policy_id=token_issuance_policy_id,
                                               id=id_,
                                               deleted_date_time=deleted_date_time,
                                               description=description,
                                               display_name=display_name,
                                               definition=definition,
                                               is_organization_default=is_organization_default,
                                               applies_to=applies_to)


def identitysignins_policy_update_token_lifetime_policy(client,
                                                        token_lifetime_policy_id,
                                                        id_=None,
                                                        deleted_date_time=None,
                                                        description=None,
                                                        display_name=None,
                                                        definition=None,
                                                        is_organization_default=None,
                                                        applies_to=None):
    return client.update_token_lifetime_policy(token_lifetime_policy_id=token_lifetime_policy_id,
                                               id=id_,
                                               deleted_date_time=deleted_date_time,
                                               description=description,
                                               display_name=display_name,
                                               definition=definition,
                                               is_organization_default=is_organization_default,
                                               applies_to=applies_to)


def identitysignins_policy_permission_grant_policy_create_exclude(client,
                                                                  permission_grant_policy_id,
                                                                  id_=None,
                                                                  client_application_ids=None,
                                                                  client_application_publisher_ids=None,
                                                                  client_applications_from_verified_publisher_only=None,
                                                                  client_application_tenant_ids=None,
                                                                  permission_classification=None,
                                                                  permissions=None,
                                                                  permission_type=None,
                                                                  resource_application=None):
    return client.create_exclude(permission_grant_policy_id=permission_grant_policy_id,
                                 id=id_,
                                 client_application_ids=client_application_ids,
                                 client_application_publisher_ids=client_application_publisher_ids,
                                 client_applications_from_verified_publisher_only=client_applications_from_verified_publisher_only,
                                 client_application_tenant_ids=client_application_tenant_ids,
                                 permission_classification=permission_classification,
                                 permissions=permissions,
                                 permission_type=permission_type,
                                 resource_application=resource_application)


def identitysignins_policy_permission_grant_policy_create_include(client,
                                                                  permission_grant_policy_id,
                                                                  id_=None,
                                                                  client_application_ids=None,
                                                                  client_application_publisher_ids=None,
                                                                  client_applications_from_verified_publisher_only=None,
                                                                  client_application_tenant_ids=None,
                                                                  permission_classification=None,
                                                                  permissions=None,
                                                                  permission_type=None,
                                                                  resource_application=None):
    return client.create_include(permission_grant_policy_id=permission_grant_policy_id,
                                 id=id_,
                                 client_application_ids=client_application_ids,
                                 client_application_publisher_ids=client_application_publisher_ids,
                                 client_applications_from_verified_publisher_only=client_applications_from_verified_publisher_only,
                                 client_application_tenant_ids=client_application_tenant_ids,
                                 permission_classification=permission_classification,
                                 permissions=permissions,
                                 permission_type=permission_type,
                                 resource_application=resource_application)


def identitysignins_policy_permission_grant_policy_delete_exclude(client,
                                                                  permission_grant_policy_id,
                                                                  permission_grant_condition_set_id,
                                                                  if_match=None):
    return client.delete_exclude(permission_grant_policy_id=permission_grant_policy_id,
                                 permission_grant_condition_set_id=permission_grant_condition_set_id,
                                 if_match=if_match)


def identitysignins_policy_permission_grant_policy_delete_include(client,
                                                                  permission_grant_policy_id,
                                                                  permission_grant_condition_set_id,
                                                                  if_match=None):
    return client.delete_include(permission_grant_policy_id=permission_grant_policy_id,
                                 permission_grant_condition_set_id=permission_grant_condition_set_id,
                                 if_match=if_match)


def identitysignins_policy_permission_grant_policy_list_exclude(client,
                                                                permission_grant_policy_id,
                                                                orderby=None,
                                                                select=None,
                                                                expand=None):
    return client.list_exclude(permission_grant_policy_id=permission_grant_policy_id,
                               orderby=orderby,
                               select=select,
                               expand=expand)


def identitysignins_policy_permission_grant_policy_list_include(client,
                                                                permission_grant_policy_id,
                                                                orderby=None,
                                                                select=None,
                                                                expand=None):
    return client.list_include(permission_grant_policy_id=permission_grant_policy_id,
                               orderby=orderby,
                               select=select,
                               expand=expand)


def identitysignins_policy_permission_grant_policy_show_exclude(client,
                                                                permission_grant_policy_id,
                                                                permission_grant_condition_set_id,
                                                                select=None,
                                                                expand=None):
    return client.get_exclude(permission_grant_policy_id=permission_grant_policy_id,
                              permission_grant_condition_set_id=permission_grant_condition_set_id,
                              select=select,
                              expand=expand)


def identitysignins_policy_permission_grant_policy_show_include(client,
                                                                permission_grant_policy_id,
                                                                permission_grant_condition_set_id,
                                                                select=None,
                                                                expand=None):
    return client.get_include(permission_grant_policy_id=permission_grant_policy_id,
                              permission_grant_condition_set_id=permission_grant_condition_set_id,
                              select=select,
                              expand=expand)


def identitysignins_policy_permission_grant_policy_update_exclude(client,
                                                                  permission_grant_policy_id,
                                                                  permission_grant_condition_set_id,
                                                                  id_=None,
                                                                  client_application_ids=None,
                                                                  client_application_publisher_ids=None,
                                                                  client_applications_from_verified_publisher_only=None,
                                                                  client_application_tenant_ids=None,
                                                                  permission_classification=None,
                                                                  permissions=None,
                                                                  permission_type=None,
                                                                  resource_application=None):
    return client.update_exclude(permission_grant_policy_id=permission_grant_policy_id,
                                 permission_grant_condition_set_id=permission_grant_condition_set_id,
                                 id=id_,
                                 client_application_ids=client_application_ids,
                                 client_application_publisher_ids=client_application_publisher_ids,
                                 client_applications_from_verified_publisher_only=client_applications_from_verified_publisher_only,
                                 client_application_tenant_ids=client_application_tenant_ids,
                                 permission_classification=permission_classification,
                                 permissions=permissions,
                                 permission_type=permission_type,
                                 resource_application=resource_application)


def identitysignins_policy_permission_grant_policy_update_include(client,
                                                                  permission_grant_policy_id,
                                                                  permission_grant_condition_set_id,
                                                                  id_=None,
                                                                  client_application_ids=None,
                                                                  client_application_publisher_ids=None,
                                                                  client_applications_from_verified_publisher_only=None,
                                                                  client_application_tenant_ids=None,
                                                                  permission_classification=None,
                                                                  permissions=None,
                                                                  permission_type=None,
                                                                  resource_application=None):
    return client.update_include(permission_grant_policy_id=permission_grant_policy_id,
                                 permission_grant_condition_set_id=permission_grant_condition_set_id,
                                 id=id_,
                                 client_application_ids=client_application_ids,
                                 client_application_publisher_ids=client_application_publisher_ids,
                                 client_applications_from_verified_publisher_only=client_applications_from_verified_publisher_only,
                                 client_application_tenant_ids=client_application_tenant_ids,
                                 permission_classification=permission_classification,
                                 permissions=permissions,
                                 permission_type=permission_type,
                                 resource_application=resource_application)


def identitysignins_risk_detection_risk_detection_create_risk_detection(client,
                                                                        id_=None,
                                                                        activity=None,
                                                                        activity_date_time=None,
                                                                        additional_info=None,
                                                                        correlation_id=None,
                                                                        detected_date_time=None,
                                                                        detection_timing_type=None,
                                                                        ip_address=None,
                                                                        last_updated_date_time=None,
                                                                        request_id=None,
                                                                        risk_detail=None,
                                                                        risk_event_type=None,
                                                                        risk_level=None,
                                                                        risk_state=None,
                                                                        risk_type=None,
                                                                        source=None,
                                                                        token_issuer_type=None,
                                                                        user_display_name=None,
                                                                        user_id=None,
                                                                        user_principal_name=None,
                                                                        city=None,
                                                                        country_or_region=None,
                                                                        geo_coordinates=None,
                                                                        state=None):
    return client.create_risk_detection(id=id_,
                                        activity=activity,
                                        activity_date_time=activity_date_time,
                                        additional_info=additional_info,
                                        correlation_id=correlation_id,
                                        detected_date_time=detected_date_time,
                                        detection_timing_type=detection_timing_type,
                                        ip_address=ip_address,
                                        last_updated_date_time=last_updated_date_time,
                                        request_id_parameter=request_id,
                                        risk_detail=risk_detail,
                                        risk_event_type=risk_event_type,
                                        risk_level=risk_level,
                                        risk_state=risk_state,
                                        risk_type=risk_type,
                                        source=source,
                                        token_issuer_type=token_issuer_type,
                                        user_display_name=user_display_name,
                                        user_id=user_id,
                                        user_principal_name=user_principal_name,
                                        city=city,
                                        country_or_region=country_or_region,
                                        geo_coordinates=geo_coordinates,
                                        state=state)


def identitysignins_risk_detection_risk_detection_delete_risk_detection(client,
                                                                        risk_detection_id,
                                                                        if_match=None):
    return client.delete_risk_detection(risk_detection_id=risk_detection_id,
                                        if_match=if_match)


def identitysignins_risk_detection_risk_detection_list_risk_detection(client,
                                                                      orderby=None,
                                                                      select=None,
                                                                      expand=None):
    return client.list_risk_detection(orderby=orderby,
                                      select=select,
                                      expand=expand)


def identitysignins_risk_detection_risk_detection_show_risk_detection(client,
                                                                      risk_detection_id,
                                                                      select=None,
                                                                      expand=None):
    return client.get_risk_detection(risk_detection_id=risk_detection_id,
                                     select=select,
                                     expand=expand)


def identitysignins_risk_detection_risk_detection_update_risk_detection(client,
                                                                        risk_detection_id,
                                                                        id_=None,
                                                                        activity=None,
                                                                        activity_date_time=None,
                                                                        additional_info=None,
                                                                        correlation_id=None,
                                                                        detected_date_time=None,
                                                                        detection_timing_type=None,
                                                                        ip_address=None,
                                                                        last_updated_date_time=None,
                                                                        request_id=None,
                                                                        risk_detail=None,
                                                                        risk_event_type=None,
                                                                        risk_level=None,
                                                                        risk_state=None,
                                                                        risk_type=None,
                                                                        source=None,
                                                                        token_issuer_type=None,
                                                                        user_display_name=None,
                                                                        user_id=None,
                                                                        user_principal_name=None,
                                                                        city=None,
                                                                        country_or_region=None,
                                                                        geo_coordinates=None,
                                                                        state=None):
    return client.update_risk_detection(risk_detection_id=risk_detection_id,
                                        id=id_,
                                        activity=activity,
                                        activity_date_time=activity_date_time,
                                        additional_info=additional_info,
                                        correlation_id=correlation_id,
                                        detected_date_time=detected_date_time,
                                        detection_timing_type=detection_timing_type,
                                        ip_address=ip_address,
                                        last_updated_date_time=last_updated_date_time,
                                        request_id_parameter=request_id,
                                        risk_detail=risk_detail,
                                        risk_event_type=risk_event_type,
                                        risk_level=risk_level,
                                        risk_state=risk_state,
                                        risk_type=risk_type,
                                        source=source,
                                        token_issuer_type=token_issuer_type,
                                        user_display_name=user_display_name,
                                        user_id=user_id,
                                        user_principal_name=user_principal_name,
                                        city=city,
                                        country_or_region=country_or_region,
                                        geo_coordinates=geo_coordinates,
                                        state=state)


def identitysignins_risky_user_risky_user_create_risky_user(client,
                                                            id_=None,
                                                            is_deleted=None,
                                                            is_processing=None,
                                                            risk_detail=None,
                                                            risk_last_updated_date_time=None,
                                                            risk_level=None,
                                                            risk_state=None,
                                                            user_display_name=None,
                                                            user_principal_name=None,
                                                            history=None):
    return client.create_risky_user(id=id_,
                                    is_deleted=is_deleted,
                                    is_processing=is_processing,
                                    risk_detail=risk_detail,
                                    risk_last_updated_date_time=risk_last_updated_date_time,
                                    risk_level=risk_level,
                                    risk_state=risk_state,
                                    user_display_name=user_display_name,
                                    user_principal_name=user_principal_name,
                                    history=history)


def identitysignins_risky_user_risky_user_delete_risky_user(client,
                                                            risky_user_id,
                                                            if_match=None):
    return client.delete_risky_user(risky_user_id=risky_user_id,
                                    if_match=if_match)


def identitysignins_risky_user_risky_user_list_risky_user(client,
                                                          orderby=None,
                                                          select=None,
                                                          expand=None):
    return client.list_risky_user(orderby=orderby,
                                  select=select,
                                  expand=expand)


def identitysignins_risky_user_risky_user_show_risky_user(client,
                                                          risky_user_id,
                                                          select=None,
                                                          expand=None):
    return client.get_risky_user(risky_user_id=risky_user_id,
                                 select=select,
                                 expand=expand)


def identitysignins_risky_user_risky_user_update_risky_user(client,
                                                            risky_user_id,
                                                            id_=None,
                                                            is_deleted=None,
                                                            is_processing=None,
                                                            risk_detail=None,
                                                            risk_last_updated_date_time=None,
                                                            risk_level=None,
                                                            risk_state=None,
                                                            user_display_name=None,
                                                            user_principal_name=None,
                                                            history=None):
    return client.update_risky_user(risky_user_id=risky_user_id,
                                    id=id_,
                                    is_deleted=is_deleted,
                                    is_processing=is_processing,
                                    risk_detail=risk_detail,
                                    risk_last_updated_date_time=risk_last_updated_date_time,
                                    risk_level=risk_level,
                                    risk_state=risk_state,
                                    user_display_name=user_display_name,
                                    user_principal_name=user_principal_name,
                                    history=history)


def identitysignins_risky_user_confirm_compromised(client,
                                                   user_ids=None):
    return client.confirm_compromised(user_ids=user_ids)


def identitysignins_risky_user_create_history(client,
                                              risky_user_id,
                                              id_=None,
                                              is_deleted=None,
                                              is_processing=None,
                                              risk_detail=None,
                                              risk_last_updated_date_time=None,
                                              risk_level=None,
                                              risk_state=None,
                                              user_display_name=None,
                                              user_principal_name=None,
                                              history=None,
                                              activity=None,
                                              initiated_by=None,
                                              user_id=None):
    return client.create_history(risky_user_id=risky_user_id,
                                 id=id_,
                                 is_deleted=is_deleted,
                                 is_processing=is_processing,
                                 risk_detail=risk_detail,
                                 risk_last_updated_date_time=risk_last_updated_date_time,
                                 risk_level=risk_level,
                                 risk_state=risk_state,
                                 user_display_name=user_display_name,
                                 user_principal_name=user_principal_name,
                                 history=history,
                                 activity=activity,
                                 initiated_by=initiated_by,
                                 user_id=user_id)


def identitysignins_risky_user_delete_history(client,
                                              risky_user_id,
                                              risky_user_history_item_id,
                                              if_match=None):
    return client.delete_history(risky_user_id=risky_user_id,
                                 risky_user_history_item_id=risky_user_history_item_id,
                                 if_match=if_match)


def identitysignins_risky_user_dismiss(client,
                                       user_ids=None):
    return client.dismiss(user_ids=user_ids)


def identitysignins_risky_user_list_history(client,
                                            risky_user_id,
                                            orderby=None,
                                            select=None,
                                            expand=None):
    return client.list_history(risky_user_id=risky_user_id,
                               orderby=orderby,
                               select=select,
                               expand=expand)


def identitysignins_risky_user_show_history(client,
                                            risky_user_id,
                                            risky_user_history_item_id,
                                            select=None,
                                            expand=None):
    return client.get_history(risky_user_id=risky_user_id,
                              risky_user_history_item_id=risky_user_history_item_id,
                              select=select,
                              expand=expand)


def identitysignins_risky_user_update_history(client,
                                              risky_user_id,
                                              risky_user_history_item_id,
                                              id_=None,
                                              is_deleted=None,
                                              is_processing=None,
                                              risk_detail=None,
                                              risk_last_updated_date_time=None,
                                              risk_level=None,
                                              risk_state=None,
                                              user_display_name=None,
                                              user_principal_name=None,
                                              history=None,
                                              activity=None,
                                              initiated_by=None,
                                              user_id=None):
    return client.update_history(risky_user_id=risky_user_id,
                                 risky_user_history_item_id=risky_user_history_item_id,
                                 id=id_,
                                 is_deleted=is_deleted,
                                 is_processing=is_processing,
                                 risk_detail=risk_detail,
                                 risk_last_updated_date_time=risk_last_updated_date_time,
                                 risk_level=risk_level,
                                 risk_state=risk_state,
                                 user_display_name=user_display_name,
                                 user_principal_name=user_principal_name,
                                 history=history,
                                 activity=activity,
                                 initiated_by=initiated_by,
                                 user_id=user_id)


def identitysignins_trust_framework_trust_framework_show_trust_framework(client,
                                                                         select=None,
                                                                         expand=None):
    return client.get_trust_framework(select=select,
                                      expand=expand)


def identitysignins_trust_framework_trust_framework_update_trust_framework(client,
                                                                           key_sets=None,
                                                                           policies=None):
    return client.update_trust_framework(key_sets=key_sets,
                                         policies=policies)


def identitysignins_trust_framework_create_key_set(client,
                                                   id_=None,
                                                   keys=None):
    return client.create_key_set(id=id_,
                                 keys=keys)


def identitysignins_trust_framework_create_policy(client,
                                                  id_=None):
    return client.create_policy(id=id_)


def identitysignins_trust_framework_delete_key_set(client,
                                                   trust_framework_key_set_id,
                                                   if_match=None):
    return client.delete_key_set(trust_framework_key_set_id=trust_framework_key_set_id,
                                 if_match=if_match)


def identitysignins_trust_framework_delete_policy(client,
                                                  trust_framework_policy_id,
                                                  if_match=None):
    return client.delete_policy(trust_framework_policy_id=trust_framework_policy_id,
                                if_match=if_match)


def identitysignins_trust_framework_list_key_set(client,
                                                 orderby=None,
                                                 select=None,
                                                 expand=None):
    return client.list_key_set(orderby=orderby,
                               select=select,
                               expand=expand)


def identitysignins_trust_framework_list_policy(client,
                                                orderby=None,
                                                select=None,
                                                expand=None):
    return client.list_policy(orderby=orderby,
                              select=select,
                              expand=expand)


def identitysignins_trust_framework_set_policy_content(client,
                                                       trust_framework_policy_id,
                                                       data):
    return client.set_policy_content(trust_framework_policy_id=trust_framework_policy_id,
                                     data=data)


def identitysignins_trust_framework_show_key_set(client,
                                                 trust_framework_key_set_id,
                                                 select=None,
                                                 expand=None):
    return client.get_key_set(trust_framework_key_set_id=trust_framework_key_set_id,
                              select=select,
                              expand=expand)


def identitysignins_trust_framework_show_policy(client,
                                                trust_framework_policy_id,
                                                select=None,
                                                expand=None):
    return client.get_policy(trust_framework_policy_id=trust_framework_policy_id,
                             select=select,
                             expand=expand)


def identitysignins_trust_framework_show_policy_content(client,
                                                        trust_framework_policy_id):
    return client.get_policy_content(trust_framework_policy_id=trust_framework_policy_id)


def identitysignins_trust_framework_update_key_set(client,
                                                   trust_framework_key_set_id,
                                                   id_=None,
                                                   keys=None):
    return client.update_key_set(trust_framework_key_set_id=trust_framework_key_set_id,
                                 id=id_,
                                 keys=keys)


def identitysignins_trust_framework_update_policy(client,
                                                  trust_framework_policy_id,
                                                  id_=None):
    return client.update_policy(trust_framework_policy_id=trust_framework_policy_id,
                                id=id_)


def identitysignins_trust_framework_key_set_generate_key(client,
                                                         trust_framework_key_set_id,
                                                         use=None,
                                                         kty=None,
                                                         nbf=None,
                                                         exp=None):
    return client.generate_key(trust_framework_key_set_id=trust_framework_key_set_id,
                               use=use,
                               kty=kty,
                               nbf=nbf,
                               exp=exp)


def identitysignins_trust_framework_key_set_show_active_key(client,
                                                            trust_framework_key_set_id):
    return client.get_active_key(trust_framework_key_set_id=trust_framework_key_set_id)


def identitysignins_trust_framework_key_set_upload_certificate(client,
                                                               trust_framework_key_set_id,
                                                               key=None):
    return client.upload_certificate(trust_framework_key_set_id=trust_framework_key_set_id,
                                     key=key)


def identitysignins_trust_framework_key_set_upload_pkcs12(client,
                                                          trust_framework_key_set_id,
                                                          key=None,
                                                          password=None):
    return client.upload_pkcs12(trust_framework_key_set_id=trust_framework_key_set_id,
                                key=key,
                                password=password)


def identitysignins_trust_framework_key_set_upload_secret(client,
                                                          trust_framework_key_set_id,
                                                          use=None,
                                                          k=None,
                                                          nbf=None,
                                                          exp=None):
    return client.upload_secret(trust_framework_key_set_id=trust_framework_key_set_id,
                                use=use,
                                k=k,
                                nbf=nbf,
                                exp=exp)


def identitysignins_user_delete_authentication(client,
                                               user_id,
                                               if_match=None):
    return client.delete_authentication(user_id=user_id,
                                        if_match=if_match)


def identitysignins_user_delete_information_protection(client,
                                                       user_id,
                                                       if_match=None):
    return client.delete_information_protection(user_id=user_id,
                                                if_match=if_match)


def identitysignins_user_show_authentication(client,
                                             user_id,
                                             select=None,
                                             expand=None):
    return client.get_authentication(user_id=user_id,
                                     select=select,
                                     expand=expand)


def identitysignins_user_show_information_protection(client,
                                                     user_id,
                                                     select=None,
                                                     expand=None):
    return client.get_information_protection(user_id=user_id,
                                             select=select,
                                             expand=expand)


def identitysignins_user_update_authentication(client,
                                               user_id,
                                               id_=None,
                                               email_methods=None,
                                               fido2_methods=None,
                                               methods=None,
                                               microsoft_authenticator_methods=None,
                                               oath_methods=None,
                                               operations=None,
                                               passwordless_microsoft_authenticator_methods=None,
                                               password_methods=None,
                                               phone_methods=None,
                                               security_question_methods=None,
                                               temporary_access_pass_methods=None):
    return client.update_authentication(user_id=user_id,
                                        id=id_,
                                        email_methods=email_methods,
                                        fido2_methods=fido2_methods,
                                        methods=methods,
                                        microsoft_authenticator_methods=microsoft_authenticator_methods,
                                        oath_methods=oath_methods,
                                        operations=operations,
                                        passwordless_microsoft_authenticator_methods=passwordless_microsoft_authenticator_methods,
                                        password_methods=password_methods,
                                        phone_methods=phone_methods,
                                        security_question_methods=security_question_methods,
                                        temporary_access_pass_methods=temporary_access_pass_methods)


def identitysignins_user_update_information_protection(client,
                                                       user_id,
                                                       id_=None,
                                                       data_loss_prevention_policies=None,
                                                       sensitivity_labels=None,
                                                       sensitivity_policy_settings=None,
                                                       threat_assessment_requests=None,
                                                       microsoft_graph_entity_id=None,
                                                       labels=None):
    return client.update_information_protection(user_id=user_id,
                                                id=id_,
                                                data_loss_prevention_policies=data_loss_prevention_policies,
                                                sensitivity_labels=sensitivity_labels,
                                                sensitivity_policy_settings=sensitivity_policy_settings,
                                                threat_assessment_requests=threat_assessment_requests,
                                                microsoft_graph_entity_id=microsoft_graph_entity_id,
                                                labels=labels)


def identitysignins_user_authentication_create_email_method(client,
                                                            user_id,
                                                            id_=None):
    return client.create_email_method(user_id=user_id,
                                      id=id_)


def identitysignins_user_authentication_create_fido2_method(client,
                                                            user_id,
                                                            id_=None):
    return client.create_fido2_method(user_id=user_id,
                                      id=id_)


def identitysignins_user_authentication_create_method(client,
                                                      user_id,
                                                      id_=None):
    return client.create_method(user_id=user_id,
                                id=id_)


def identitysignins_user_authentication_create_microsoft_authenticator_method(client,
                                                                              user_id,
                                                                              id_=None):
    return client.create_microsoft_authenticator_method(user_id=user_id,
                                                        id=id_)


def identitysignins_user_authentication_create_oath_method(client,
                                                           user_id,
                                                           id_=None):
    return client.create_oath_method(user_id=user_id,
                                     id=id_)


def identitysignins_user_authentication_create_operation(client,
                                                         user_id,
                                                         id_=None,
                                                         created_date_time=None,
                                                         last_action_date_time=None,
                                                         resource_location=None,
                                                         status=None,
                                                         status_detail=None):
    return client.create_operation(user_id=user_id,
                                   id=id_,
                                   created_date_time=created_date_time,
                                   last_action_date_time=last_action_date_time,
                                   resource_location=resource_location,
                                   status=status,
                                   status_detail=status_detail)


def identitysignins_user_authentication_create_password_method(client,
                                                               user_id,
                                                               id_=None,
                                                               creation_date_time=None,
                                                               password=None):
    return client.create_password_method(user_id=user_id,
                                         id=id_,
                                         creation_date_time=creation_date_time,
                                         password=password)


def identitysignins_user_authentication_create_passwordless_microsoft_authenticator_method(client,
                                                                                           user_id,
                                                                                           id_=None):
    return client.create_passwordless_microsoft_authenticator_method(user_id=user_id,
                                                                     id=id_)


def identitysignins_user_authentication_create_phone_method(client,
                                                            user_id,
                                                            id_=None,
                                                            phone_number=None,
                                                            phone_type=None,
                                                            sms_sign_in_state=None):
    return client.create_phone_method(user_id=user_id,
                                      id=id_,
                                      phone_number=phone_number,
                                      phone_type=phone_type,
                                      sms_sign_in_state=sms_sign_in_state)


def identitysignins_user_authentication_create_security_question_method(client,
                                                                        user_id,
                                                                        id_=None):
    return client.create_security_question_method(user_id=user_id,
                                                  id=id_)


def identitysignins_user_authentication_create_temporary_access_pass_method(client,
                                                                            user_id,
                                                                            id_=None):
    return client.create_temporary_access_pass_method(user_id=user_id,
                                                      id=id_)


def identitysignins_user_authentication_delete_email_method(client,
                                                            user_id,
                                                            email_authentication_method_id,
                                                            if_match=None):
    return client.delete_email_method(user_id=user_id,
                                      email_authentication_method_id=email_authentication_method_id,
                                      if_match=if_match)


def identitysignins_user_authentication_delete_fido2_method(client,
                                                            user_id,
                                                            fido2_authentication_method_id,
                                                            if_match=None):
    return client.delete_fido2_method(user_id=user_id,
                                      fido2_authentication_method_id=fido2_authentication_method_id,
                                      if_match=if_match)


def identitysignins_user_authentication_delete_method(client,
                                                      user_id,
                                                      authentication_method_id,
                                                      if_match=None):
    return client.delete_method(user_id=user_id,
                                authentication_method_id=authentication_method_id,
                                if_match=if_match)


def identitysignins_user_authentication_delete_microsoft_authenticator_method(client,
                                                                              user_id,
                                                                              microsoft_authenticator_authentication_method_id,
                                                                              if_match=None):
    return client.delete_microsoft_authenticator_method(user_id=user_id,
                                                        microsoft_authenticator_authentication_method_id=microsoft_authenticator_authentication_method_id,
                                                        if_match=if_match)


def identitysignins_user_authentication_delete_oath_method(client,
                                                           user_id,
                                                           software_oath_authentication_method_id,
                                                           if_match=None):
    return client.delete_oath_method(user_id=user_id,
                                     software_oath_authentication_method_id=software_oath_authentication_method_id,
                                     if_match=if_match)


def identitysignins_user_authentication_delete_operation(client,
                                                         user_id,
                                                         long_running_operation_id,
                                                         if_match=None):
    return client.delete_operation(user_id=user_id,
                                   long_running_operation_id=long_running_operation_id,
                                   if_match=if_match)


def identitysignins_user_authentication_delete_password_method(client,
                                                               user_id,
                                                               password_authentication_method_id,
                                                               if_match=None):
    return client.delete_password_method(user_id=user_id,
                                         password_authentication_method_id=password_authentication_method_id,
                                         if_match=if_match)


def identitysignins_user_authentication_delete_passwordless_microsoft_authenticator_method(client,
                                                                                           user_id,
                                                                                           passwordless_microsoft_authenticator_authentication_method_id,
                                                                                           if_match=None):
    return client.delete_passwordless_microsoft_authenticator_method(user_id=user_id,
                                                                     passwordless_microsoft_authenticator_authentication_method_id=passwordless_microsoft_authenticator_authentication_method_id,
                                                                     if_match=if_match)


def identitysignins_user_authentication_delete_phone_method(client,
                                                            user_id,
                                                            phone_authentication_method_id,
                                                            if_match=None):
    return client.delete_phone_method(user_id=user_id,
                                      phone_authentication_method_id=phone_authentication_method_id,
                                      if_match=if_match)


def identitysignins_user_authentication_delete_security_question_method(client,
                                                                        user_id,
                                                                        security_question_authentication_method_id,
                                                                        if_match=None):
    return client.delete_security_question_method(user_id=user_id,
                                                  security_question_authentication_method_id=security_question_authentication_method_id,
                                                  if_match=if_match)


def identitysignins_user_authentication_delete_temporary_access_pass_method(client,
                                                                            user_id,
                                                                            temporary_access_pass_authentication_method_id,
                                                                            if_match=None):
    return client.delete_temporary_access_pass_method(user_id=user_id,
                                                      temporary_access_pass_authentication_method_id=temporary_access_pass_authentication_method_id,
                                                      if_match=if_match)


def identitysignins_user_authentication_list_email_method(client,
                                                          user_id,
                                                          orderby=None,
                                                          select=None,
                                                          expand=None):
    return client.list_email_method(user_id=user_id,
                                    orderby=orderby,
                                    select=select,
                                    expand=expand)


def identitysignins_user_authentication_list_fido2_method(client,
                                                          user_id,
                                                          orderby=None,
                                                          select=None,
                                                          expand=None):
    return client.list_fido2_method(user_id=user_id,
                                    orderby=orderby,
                                    select=select,
                                    expand=expand)


def identitysignins_user_authentication_list_method(client,
                                                    user_id,
                                                    orderby=None,
                                                    select=None,
                                                    expand=None):
    return client.list_method(user_id=user_id,
                              orderby=orderby,
                              select=select,
                              expand=expand)


def identitysignins_user_authentication_list_microsoft_authenticator_method(client,
                                                                            user_id,
                                                                            orderby=None,
                                                                            select=None,
                                                                            expand=None):
    return client.list_microsoft_authenticator_method(user_id=user_id,
                                                      orderby=orderby,
                                                      select=select,
                                                      expand=expand)


def identitysignins_user_authentication_list_oath_method(client,
                                                         user_id,
                                                         orderby=None,
                                                         select=None,
                                                         expand=None):
    return client.list_oath_method(user_id=user_id,
                                   orderby=orderby,
                                   select=select,
                                   expand=expand)


def identitysignins_user_authentication_list_operation(client,
                                                       user_id,
                                                       orderby=None,
                                                       select=None,
                                                       expand=None):
    return client.list_operation(user_id=user_id,
                                 orderby=orderby,
                                 select=select,
                                 expand=expand)


def identitysignins_user_authentication_list_password_method(client,
                                                             user_id,
                                                             orderby=None,
                                                             select=None,
                                                             expand=None):
    return client.list_password_method(user_id=user_id,
                                       orderby=orderby,
                                       select=select,
                                       expand=expand)


def identitysignins_user_authentication_list_passwordless_microsoft_authenticator_method(client,
                                                                                         user_id,
                                                                                         orderby=None,
                                                                                         select=None,
                                                                                         expand=None):
    return client.list_passwordless_microsoft_authenticator_method(user_id=user_id,
                                                                   orderby=orderby,
                                                                   select=select,
                                                                   expand=expand)


def identitysignins_user_authentication_list_phone_method(client,
                                                          user_id,
                                                          orderby=None,
                                                          select=None,
                                                          expand=None):
    return client.list_phone_method(user_id=user_id,
                                    orderby=orderby,
                                    select=select,
                                    expand=expand)


def identitysignins_user_authentication_list_security_question_method(client,
                                                                      user_id,
                                                                      orderby=None,
                                                                      select=None,
                                                                      expand=None):
    return client.list_security_question_method(user_id=user_id,
                                                orderby=orderby,
                                                select=select,
                                                expand=expand)


def identitysignins_user_authentication_list_temporary_access_pass_method(client,
                                                                          user_id,
                                                                          orderby=None,
                                                                          select=None,
                                                                          expand=None):
    return client.list_temporary_access_pass_method(user_id=user_id,
                                                    orderby=orderby,
                                                    select=select,
                                                    expand=expand)


def identitysignins_user_authentication_show_email_method(client,
                                                          user_id,
                                                          email_authentication_method_id,
                                                          select=None,
                                                          expand=None):
    return client.get_email_method(user_id=user_id,
                                   email_authentication_method_id=email_authentication_method_id,
                                   select=select,
                                   expand=expand)


def identitysignins_user_authentication_show_fido2_method(client,
                                                          user_id,
                                                          fido2_authentication_method_id,
                                                          select=None,
                                                          expand=None):
    return client.get_fido2_method(user_id=user_id,
                                   fido2_authentication_method_id=fido2_authentication_method_id,
                                   select=select,
                                   expand=expand)


def identitysignins_user_authentication_show_method(client,
                                                    user_id,
                                                    authentication_method_id,
                                                    select=None,
                                                    expand=None):
    return client.get_method(user_id=user_id,
                             authentication_method_id=authentication_method_id,
                             select=select,
                             expand=expand)


def identitysignins_user_authentication_show_microsoft_authenticator_method(client,
                                                                            user_id,
                                                                            microsoft_authenticator_authentication_method_id,
                                                                            select=None,
                                                                            expand=None):
    return client.get_microsoft_authenticator_method(user_id=user_id,
                                                     microsoft_authenticator_authentication_method_id=microsoft_authenticator_authentication_method_id,
                                                     select=select,
                                                     expand=expand)


def identitysignins_user_authentication_show_oath_method(client,
                                                         user_id,
                                                         software_oath_authentication_method_id,
                                                         select=None,
                                                         expand=None):
    return client.get_oath_method(user_id=user_id,
                                  software_oath_authentication_method_id=software_oath_authentication_method_id,
                                  select=select,
                                  expand=expand)


def identitysignins_user_authentication_show_operation(client,
                                                       user_id,
                                                       long_running_operation_id,
                                                       select=None,
                                                       expand=None):
    return client.get_operation(user_id=user_id,
                                long_running_operation_id=long_running_operation_id,
                                select=select,
                                expand=expand)


def identitysignins_user_authentication_show_password_method(client,
                                                             user_id,
                                                             password_authentication_method_id,
                                                             select=None,
                                                             expand=None):
    return client.get_password_method(user_id=user_id,
                                      password_authentication_method_id=password_authentication_method_id,
                                      select=select,
                                      expand=expand)


def identitysignins_user_authentication_show_passwordless_microsoft_authenticator_method(client,
                                                                                         user_id,
                                                                                         passwordless_microsoft_authenticator_authentication_method_id,
                                                                                         select=None,
                                                                                         expand=None):
    return client.get_passwordless_microsoft_authenticator_method(user_id=user_id,
                                                                  passwordless_microsoft_authenticator_authentication_method_id=passwordless_microsoft_authenticator_authentication_method_id,
                                                                  select=select,
                                                                  expand=expand)


def identitysignins_user_authentication_show_phone_method(client,
                                                          user_id,
                                                          phone_authentication_method_id,
                                                          select=None,
                                                          expand=None):
    return client.get_phone_method(user_id=user_id,
                                   phone_authentication_method_id=phone_authentication_method_id,
                                   select=select,
                                   expand=expand)


def identitysignins_user_authentication_show_security_question_method(client,
                                                                      user_id,
                                                                      security_question_authentication_method_id,
                                                                      select=None,
                                                                      expand=None):
    return client.get_security_question_method(user_id=user_id,
                                               security_question_authentication_method_id=security_question_authentication_method_id,
                                               select=select,
                                               expand=expand)


def identitysignins_user_authentication_show_temporary_access_pass_method(client,
                                                                          user_id,
                                                                          temporary_access_pass_authentication_method_id,
                                                                          select=None,
                                                                          expand=None):
    return client.get_temporary_access_pass_method(user_id=user_id,
                                                   temporary_access_pass_authentication_method_id=temporary_access_pass_authentication_method_id,
                                                   select=select,
                                                   expand=expand)


def identitysignins_user_authentication_update_email_method(client,
                                                            user_id,
                                                            email_authentication_method_id,
                                                            id_=None):
    return client.update_email_method(user_id=user_id,
                                      email_authentication_method_id=email_authentication_method_id,
                                      id=id_)


def identitysignins_user_authentication_update_fido2_method(client,
                                                            user_id,
                                                            fido2_authentication_method_id,
                                                            id_=None):
    return client.update_fido2_method(user_id=user_id,
                                      fido2_authentication_method_id=fido2_authentication_method_id,
                                      id=id_)


def identitysignins_user_authentication_update_method(client,
                                                      user_id,
                                                      authentication_method_id,
                                                      id_=None):
    return client.update_method(user_id=user_id,
                                authentication_method_id=authentication_method_id,
                                id=id_)


def identitysignins_user_authentication_update_microsoft_authenticator_method(client,
                                                                              user_id,
                                                                              microsoft_authenticator_authentication_method_id,
                                                                              id_=None):
    return client.update_microsoft_authenticator_method(user_id=user_id,
                                                        microsoft_authenticator_authentication_method_id=microsoft_authenticator_authentication_method_id,
                                                        id=id_)


def identitysignins_user_authentication_update_oath_method(client,
                                                           user_id,
                                                           software_oath_authentication_method_id,
                                                           id_=None):
    return client.update_oath_method(user_id=user_id,
                                     software_oath_authentication_method_id=software_oath_authentication_method_id,
                                     id=id_)


def identitysignins_user_authentication_update_operation(client,
                                                         user_id,
                                                         long_running_operation_id,
                                                         id_=None,
                                                         created_date_time=None,
                                                         last_action_date_time=None,
                                                         resource_location=None,
                                                         status=None,
                                                         status_detail=None):
    return client.update_operation(user_id=user_id,
                                   long_running_operation_id=long_running_operation_id,
                                   id=id_,
                                   created_date_time=created_date_time,
                                   last_action_date_time=last_action_date_time,
                                   resource_location=resource_location,
                                   status=status,
                                   status_detail=status_detail)


def identitysignins_user_authentication_update_password_method(client,
                                                               user_id,
                                                               password_authentication_method_id,
                                                               id_=None,
                                                               creation_date_time=None,
                                                               password=None):
    return client.update_password_method(user_id=user_id,
                                         password_authentication_method_id=password_authentication_method_id,
                                         id=id_,
                                         creation_date_time=creation_date_time,
                                         password=password)


def identitysignins_user_authentication_update_passwordless_microsoft_authenticator_method(client,
                                                                                           user_id,
                                                                                           passwordless_microsoft_authenticator_authentication_method_id,
                                                                                           id_=None):
    return client.update_passwordless_microsoft_authenticator_method(user_id=user_id,
                                                                     passwordless_microsoft_authenticator_authentication_method_id=passwordless_microsoft_authenticator_authentication_method_id,
                                                                     id=id_)


def identitysignins_user_authentication_update_phone_method(client,
                                                            user_id,
                                                            phone_authentication_method_id,
                                                            id_=None,
                                                            phone_number=None,
                                                            phone_type=None,
                                                            sms_sign_in_state=None):
    return client.update_phone_method(user_id=user_id,
                                      phone_authentication_method_id=phone_authentication_method_id,
                                      id=id_,
                                      phone_number=phone_number,
                                      phone_type=phone_type,
                                      sms_sign_in_state=sms_sign_in_state)


def identitysignins_user_authentication_update_security_question_method(client,
                                                                        user_id,
                                                                        security_question_authentication_method_id,
                                                                        id_=None):
    return client.update_security_question_method(user_id=user_id,
                                                  security_question_authentication_method_id=security_question_authentication_method_id,
                                                  id=id_)


def identitysignins_user_authentication_update_temporary_access_pass_method(client,
                                                                            user_id,
                                                                            temporary_access_pass_authentication_method_id,
                                                                            id_=None):
    return client.update_temporary_access_pass_method(user_id=user_id,
                                                      temporary_access_pass_authentication_method_id=temporary_access_pass_authentication_method_id,
                                                      id=id_)
