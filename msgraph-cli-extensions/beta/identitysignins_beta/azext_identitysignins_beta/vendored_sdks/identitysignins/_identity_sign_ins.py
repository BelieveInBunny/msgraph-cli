# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from typing import TYPE_CHECKING

from azure.mgmt.core import ARMPipelineClient
from msrest import Deserializer, Serializer

if TYPE_CHECKING:
    # pylint: disable=unused-import,ungrouped-imports
    from typing import Any, Optional

    from azure.core.credentials import TokenCredential

from ._configuration import IdentitySignInsConfiguration
from .operations import DataPolicyOperationDataPolicyOperationOperations
from .operations import IdentityOperations
from .operations import IdentityConditionalAccessOperations
from .operations import IdentityProviderIdentityProviderOperations
from .operations import IdentityProviderOperations
from .operations import InformationProtectionInformationProtectionOperations
from .operations import InformationProtectionOperations
from .operations import InformationProtectionDataLossPreventionPolicyOperations
from .operations import InformationProtectionPolicyOperations
from .operations import InformationProtectionPolicyLabelOperations
from .operations import InformationProtectionSensitivityLabelOperations
from .operations import InformationProtectionSensitivityLabelSublabelOperations
from .operations import InformationProtectionThreatAssessmentRequestOperations
from .operations import InvitationInvitationOperations
from .operations import InvitationOperations
from .operations import Oauth2PermissionGrantOAuth2PermissionGrantOperations
from .operations import Oauth2PermissionGrantOperations
from .operations import OrganizationOperations
from .operations import PolicyPolicyRootOperations
from .operations import PolicyOperations
from .operations import PolicyPermissionGrantPolicyOperations
from .operations import RiskDetectionRiskDetectionOperations
from .operations import RiskyUserRiskyUserOperations
from .operations import RiskyUserOperations
from .operations import TrustFrameworkTrustFrameworkOperations
from .operations import TrustFrameworkOperations
from .operations import TrustFrameworkKeySetOperations
from .operations import UserOperations
from .operations import UserAuthenticationOperations
from . import models


class IdentitySignIns(object):
    """IdentitySignIns.

    :ivar data_policy_operation_data_policy_operation: DataPolicyOperationDataPolicyOperationOperations operations
    :vartype data_policy_operation_data_policy_operation: identity_sign_ins.operations.DataPolicyOperationDataPolicyOperationOperations
    :ivar identity: IdentityOperations operations
    :vartype identity: identity_sign_ins.operations.IdentityOperations
    :ivar identity_conditional_access: IdentityConditionalAccessOperations operations
    :vartype identity_conditional_access: identity_sign_ins.operations.IdentityConditionalAccessOperations
    :ivar identity_provider_identity_provider: IdentityProviderIdentityProviderOperations operations
    :vartype identity_provider_identity_provider: identity_sign_ins.operations.IdentityProviderIdentityProviderOperations
    :ivar identity_provider: IdentityProviderOperations operations
    :vartype identity_provider: identity_sign_ins.operations.IdentityProviderOperations
    :ivar information_protection_information_protection: InformationProtectionInformationProtectionOperations operations
    :vartype information_protection_information_protection: identity_sign_ins.operations.InformationProtectionInformationProtectionOperations
    :ivar information_protection: InformationProtectionOperations operations
    :vartype information_protection: identity_sign_ins.operations.InformationProtectionOperations
    :ivar information_protection_data_loss_prevention_policy: InformationProtectionDataLossPreventionPolicyOperations operations
    :vartype information_protection_data_loss_prevention_policy: identity_sign_ins.operations.InformationProtectionDataLossPreventionPolicyOperations
    :ivar information_protection_policy: InformationProtectionPolicyOperations operations
    :vartype information_protection_policy: identity_sign_ins.operations.InformationProtectionPolicyOperations
    :ivar information_protection_policy_label: InformationProtectionPolicyLabelOperations operations
    :vartype information_protection_policy_label: identity_sign_ins.operations.InformationProtectionPolicyLabelOperations
    :ivar information_protection_sensitivity_label: InformationProtectionSensitivityLabelOperations operations
    :vartype information_protection_sensitivity_label: identity_sign_ins.operations.InformationProtectionSensitivityLabelOperations
    :ivar information_protection_sensitivity_label_sublabel: InformationProtectionSensitivityLabelSublabelOperations operations
    :vartype information_protection_sensitivity_label_sublabel: identity_sign_ins.operations.InformationProtectionSensitivityLabelSublabelOperations
    :ivar information_protection_threat_assessment_request: InformationProtectionThreatAssessmentRequestOperations operations
    :vartype information_protection_threat_assessment_request: identity_sign_ins.operations.InformationProtectionThreatAssessmentRequestOperations
    :ivar invitation_invitation: InvitationInvitationOperations operations
    :vartype invitation_invitation: identity_sign_ins.operations.InvitationInvitationOperations
    :ivar invitation: InvitationOperations operations
    :vartype invitation: identity_sign_ins.operations.InvitationOperations
    :ivar oauth2_permission_grant_oauth2_permission_grant: Oauth2PermissionGrantOAuth2PermissionGrantOperations operations
    :vartype oauth2_permission_grant_oauth2_permission_grant: identity_sign_ins.operations.Oauth2PermissionGrantOAuth2PermissionGrantOperations
    :ivar oauth2_permission_grant: Oauth2PermissionGrantOperations operations
    :vartype oauth2_permission_grant: identity_sign_ins.operations.Oauth2PermissionGrantOperations
    :ivar organization: OrganizationOperations operations
    :vartype organization: identity_sign_ins.operations.OrganizationOperations
    :ivar policy_policy_root: PolicyPolicyRootOperations operations
    :vartype policy_policy_root: identity_sign_ins.operations.PolicyPolicyRootOperations
    :ivar policy: PolicyOperations operations
    :vartype policy: identity_sign_ins.operations.PolicyOperations
    :ivar policy_permission_grant_policy: PolicyPermissionGrantPolicyOperations operations
    :vartype policy_permission_grant_policy: identity_sign_ins.operations.PolicyPermissionGrantPolicyOperations
    :ivar risk_detection_risk_detection: RiskDetectionRiskDetectionOperations operations
    :vartype risk_detection_risk_detection: identity_sign_ins.operations.RiskDetectionRiskDetectionOperations
    :ivar risky_user_risky_user: RiskyUserRiskyUserOperations operations
    :vartype risky_user_risky_user: identity_sign_ins.operations.RiskyUserRiskyUserOperations
    :ivar risky_user: RiskyUserOperations operations
    :vartype risky_user: identity_sign_ins.operations.RiskyUserOperations
    :ivar trust_framework_trust_framework: TrustFrameworkTrustFrameworkOperations operations
    :vartype trust_framework_trust_framework: identity_sign_ins.operations.TrustFrameworkTrustFrameworkOperations
    :ivar trust_framework: TrustFrameworkOperations operations
    :vartype trust_framework: identity_sign_ins.operations.TrustFrameworkOperations
    :ivar trust_framework_key_set: TrustFrameworkKeySetOperations operations
    :vartype trust_framework_key_set: identity_sign_ins.operations.TrustFrameworkKeySetOperations
    :ivar user: UserOperations operations
    :vartype user: identity_sign_ins.operations.UserOperations
    :ivar user_authentication: UserAuthenticationOperations operations
    :vartype user_authentication: identity_sign_ins.operations.UserAuthenticationOperations
    :param credential: Credential needed for the client to connect to Azure.
    :type credential: ~azure.core.credentials.TokenCredential
    :param top: Show only the first n items.
    :type top: int
    :param skip: Skip the first n items.
    :type skip: int
    :param search: Search items by search phrases.
    :type search: str
    :param filter: Filter items by property values.
    :type filter: str
    :param count: Include count of items.
    :type count: bool
    :param str base_url: Service URL
    """

    def __init__(
        self,
        credential,  # type: "TokenCredential"
        top=None,  # type: Optional[int]
        skip=None,  # type: Optional[int]
        search=None,  # type: Optional[str]
        filter=None,  # type: Optional[str]
        count=None,  # type: Optional[bool]
        base_url=None,  # type: Optional[str]
        **kwargs  # type: Any
    ):
        # type: (...) -> None
        if not base_url:
            base_url = 'https://graph.microsoft.com/beta'
        self._config = IdentitySignInsConfiguration(credential, top, skip, search, filter, count, **kwargs)
        self._client = ARMPipelineClient(base_url=base_url, config=self._config, **kwargs)

        client_models = {k: v for k, v in models.__dict__.items() if isinstance(v, type)}
        self._serialize = Serializer(client_models)
        self._serialize.client_side_validation = False
        self._deserialize = Deserializer(client_models)

        self.data_policy_operation_data_policy_operation = DataPolicyOperationDataPolicyOperationOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.identity = IdentityOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.identity_conditional_access = IdentityConditionalAccessOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.identity_provider_identity_provider = IdentityProviderIdentityProviderOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.identity_provider = IdentityProviderOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.information_protection_information_protection = InformationProtectionInformationProtectionOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.information_protection = InformationProtectionOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.information_protection_data_loss_prevention_policy = InformationProtectionDataLossPreventionPolicyOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.information_protection_policy = InformationProtectionPolicyOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.information_protection_policy_label = InformationProtectionPolicyLabelOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.information_protection_sensitivity_label = InformationProtectionSensitivityLabelOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.information_protection_sensitivity_label_sublabel = InformationProtectionSensitivityLabelSublabelOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.information_protection_threat_assessment_request = InformationProtectionThreatAssessmentRequestOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.invitation_invitation = InvitationInvitationOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.invitation = InvitationOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.oauth2_permission_grant_oauth2_permission_grant = Oauth2PermissionGrantOAuth2PermissionGrantOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.oauth2_permission_grant = Oauth2PermissionGrantOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.organization = OrganizationOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.policy_policy_root = PolicyPolicyRootOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.policy = PolicyOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.policy_permission_grant_policy = PolicyPermissionGrantPolicyOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.risk_detection_risk_detection = RiskDetectionRiskDetectionOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.risky_user_risky_user = RiskyUserRiskyUserOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.risky_user = RiskyUserOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.trust_framework_trust_framework = TrustFrameworkTrustFrameworkOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.trust_framework = TrustFrameworkOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.trust_framework_key_set = TrustFrameworkKeySetOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.user = UserOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.user_authentication = UserAuthenticationOperations(
            self._client, self._config, self._serialize, self._deserialize)

    def close(self):
        # type: () -> None
        self._client.close()

    def __enter__(self):
        # type: () -> IdentitySignIns
        self._client.__enter__()
        return self

    def __exit__(self, *exc_details):
        # type: (Any) -> None
        self._client.__exit__(*exc_details)
