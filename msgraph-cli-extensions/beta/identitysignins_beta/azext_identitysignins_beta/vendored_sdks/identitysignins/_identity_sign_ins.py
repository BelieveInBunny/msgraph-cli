# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from typing import TYPE_CHECKING

from azure.mgmt.core import ARMPipelineClient
from msrest import Deserializer, Serializer

if TYPE_CHECKING:
    # pylint: disable=unused-import,ungrouped-imports
    from typing import Any, Optional

    from azure.core.credentials import TokenCredential

from ._configuration import IdentitySignInsConfiguration
from .operations import DataPolicyOperationsDataPolicyOperationOperations
from .operations import IdentityOperations
from .operations import IdentityConditionalAccessOperations
from .operations import IdentityProvidersIdentityProviderOperations
from .operations import IdentityProvidersOperations
from .operations import InformationProtectionInformationProtectionOperations
from .operations import InformationProtectionOperations
from .operations import InformationProtectionDataLossPreventionPoliciesOperations
from .operations import InformationProtectionPolicyOperations
from .operations import InformationProtectionPolicyLabelsOperations
from .operations import InformationProtectionSensitivityLabelsOperations
from .operations import InformationProtectionSensitivityLabelsSublabelsOperations
from .operations import InformationProtectionThreatAssessmentRequestsOperations
from .operations import InvitationsInvitationOperations
from .operations import InvitationsOperations
from .operations import Oauth2PermissionGrantsOAuth2PermissionGrantOperations
from .operations import Oauth2PermissionGrantsOperations
from .operations import OrganizationOperations
from .operations import PoliciesPolicyRootOperations
from .operations import PoliciesOperations
from .operations import PoliciesPermissionGrantPoliciesOperations
from .operations import RiskDetectionsRiskDetectionOperations
from .operations import RiskyUsersRiskyUserOperations
from .operations import RiskyUsersOperations
from .operations import TrustFrameworkTrustFrameworkOperations
from .operations import TrustFrameworkOperations
from .operations import TrustFrameworkKeySetsOperations
from .operations import UsersOperations
from .operations import UsersAuthenticationOperations
from . import models


class IdentitySignIns(object):
    """IdentitySignIns.

    :ivar data_policy_operations_data_policy_operation: DataPolicyOperationsDataPolicyOperationOperations operations
    :vartype data_policy_operations_data_policy_operation: identity_sign_ins.operations.DataPolicyOperationsDataPolicyOperationOperations
    :ivar identity: IdentityOperations operations
    :vartype identity: identity_sign_ins.operations.IdentityOperations
    :ivar identity_conditional_access: IdentityConditionalAccessOperations operations
    :vartype identity_conditional_access: identity_sign_ins.operations.IdentityConditionalAccessOperations
    :ivar identity_providers_identity_provider: IdentityProvidersIdentityProviderOperations operations
    :vartype identity_providers_identity_provider: identity_sign_ins.operations.IdentityProvidersIdentityProviderOperations
    :ivar identity_providers: IdentityProvidersOperations operations
    :vartype identity_providers: identity_sign_ins.operations.IdentityProvidersOperations
    :ivar information_protection_information_protection: InformationProtectionInformationProtectionOperations operations
    :vartype information_protection_information_protection: identity_sign_ins.operations.InformationProtectionInformationProtectionOperations
    :ivar information_protection: InformationProtectionOperations operations
    :vartype information_protection: identity_sign_ins.operations.InformationProtectionOperations
    :ivar information_protection_data_loss_prevention_policies: InformationProtectionDataLossPreventionPoliciesOperations operations
    :vartype information_protection_data_loss_prevention_policies: identity_sign_ins.operations.InformationProtectionDataLossPreventionPoliciesOperations
    :ivar information_protection_policy: InformationProtectionPolicyOperations operations
    :vartype information_protection_policy: identity_sign_ins.operations.InformationProtectionPolicyOperations
    :ivar information_protection_policy_labels: InformationProtectionPolicyLabelsOperations operations
    :vartype information_protection_policy_labels: identity_sign_ins.operations.InformationProtectionPolicyLabelsOperations
    :ivar information_protection_sensitivity_labels: InformationProtectionSensitivityLabelsOperations operations
    :vartype information_protection_sensitivity_labels: identity_sign_ins.operations.InformationProtectionSensitivityLabelsOperations
    :ivar information_protection_sensitivity_labels_sublabels: InformationProtectionSensitivityLabelsSublabelsOperations operations
    :vartype information_protection_sensitivity_labels_sublabels: identity_sign_ins.operations.InformationProtectionSensitivityLabelsSublabelsOperations
    :ivar information_protection_threat_assessment_requests: InformationProtectionThreatAssessmentRequestsOperations operations
    :vartype information_protection_threat_assessment_requests: identity_sign_ins.operations.InformationProtectionThreatAssessmentRequestsOperations
    :ivar invitations_invitation: InvitationsInvitationOperations operations
    :vartype invitations_invitation: identity_sign_ins.operations.InvitationsInvitationOperations
    :ivar invitations: InvitationsOperations operations
    :vartype invitations: identity_sign_ins.operations.InvitationsOperations
    :ivar oauth2_permission_grants_oauth2_permission_grant: Oauth2PermissionGrantsOAuth2PermissionGrantOperations operations
    :vartype oauth2_permission_grants_oauth2_permission_grant: identity_sign_ins.operations.Oauth2PermissionGrantsOAuth2PermissionGrantOperations
    :ivar oauth2_permission_grants: Oauth2PermissionGrantsOperations operations
    :vartype oauth2_permission_grants: identity_sign_ins.operations.Oauth2PermissionGrantsOperations
    :ivar organization: OrganizationOperations operations
    :vartype organization: identity_sign_ins.operations.OrganizationOperations
    :ivar policies_policy_root: PoliciesPolicyRootOperations operations
    :vartype policies_policy_root: identity_sign_ins.operations.PoliciesPolicyRootOperations
    :ivar policies: PoliciesOperations operations
    :vartype policies: identity_sign_ins.operations.PoliciesOperations
    :ivar policies_permission_grant_policies: PoliciesPermissionGrantPoliciesOperations operations
    :vartype policies_permission_grant_policies: identity_sign_ins.operations.PoliciesPermissionGrantPoliciesOperations
    :ivar risk_detections_risk_detection: RiskDetectionsRiskDetectionOperations operations
    :vartype risk_detections_risk_detection: identity_sign_ins.operations.RiskDetectionsRiskDetectionOperations
    :ivar risky_users_risky_user: RiskyUsersRiskyUserOperations operations
    :vartype risky_users_risky_user: identity_sign_ins.operations.RiskyUsersRiskyUserOperations
    :ivar risky_users: RiskyUsersOperations operations
    :vartype risky_users: identity_sign_ins.operations.RiskyUsersOperations
    :ivar trust_framework_trust_framework: TrustFrameworkTrustFrameworkOperations operations
    :vartype trust_framework_trust_framework: identity_sign_ins.operations.TrustFrameworkTrustFrameworkOperations
    :ivar trust_framework: TrustFrameworkOperations operations
    :vartype trust_framework: identity_sign_ins.operations.TrustFrameworkOperations
    :ivar trust_framework_key_sets: TrustFrameworkKeySetsOperations operations
    :vartype trust_framework_key_sets: identity_sign_ins.operations.TrustFrameworkKeySetsOperations
    :ivar users: UsersOperations operations
    :vartype users: identity_sign_ins.operations.UsersOperations
    :ivar users_authentication: UsersAuthenticationOperations operations
    :vartype users_authentication: identity_sign_ins.operations.UsersAuthenticationOperations
    :param credential: Credential needed for the client to connect to Azure.
    :type credential: ~azure.core.credentials.TokenCredential
    :param top: Show only the first n items.
    :type top: int
    :param skip: Skip the first n items.
    :type skip: int
    :param search: Search items by search phrases.
    :type search: str
    :param filter: Filter items by property values.
    :type filter: str
    :param count: Include count of items.
    :type count: bool
    :param str base_url: Service URL
    """

    def __init__(
        self,
        credential,  # type: "TokenCredential"
        top=None,  # type: Optional[int]
        skip=None,  # type: Optional[int]
        search=None,  # type: Optional[str]
        filter=None,  # type: Optional[str]
        count=None,  # type: Optional[bool]
        base_url=None,  # type: Optional[str]
        **kwargs  # type: Any
    ):
        # type: (...) -> None
        if not base_url:
            base_url = 'https://graph.microsoft.com/beta'
        self._config = IdentitySignInsConfiguration(credential, top, skip, search, filter, count, **kwargs)
        self._client = ARMPipelineClient(base_url=base_url, config=self._config, **kwargs)

        client_models = {k: v for k, v in models.__dict__.items() if isinstance(v, type)}
        self._serialize = Serializer(client_models)
        self._serialize.client_side_validation = False
        self._deserialize = Deserializer(client_models)

        self.data_policy_operations_data_policy_operation = DataPolicyOperationsDataPolicyOperationOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.identity = IdentityOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.identity_conditional_access = IdentityConditionalAccessOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.identity_providers_identity_provider = IdentityProvidersIdentityProviderOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.identity_providers = IdentityProvidersOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.information_protection_information_protection = InformationProtectionInformationProtectionOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.information_protection = InformationProtectionOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.information_protection_data_loss_prevention_policies = InformationProtectionDataLossPreventionPoliciesOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.information_protection_policy = InformationProtectionPolicyOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.information_protection_policy_labels = InformationProtectionPolicyLabelsOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.information_protection_sensitivity_labels = InformationProtectionSensitivityLabelsOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.information_protection_sensitivity_labels_sublabels = InformationProtectionSensitivityLabelsSublabelsOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.information_protection_threat_assessment_requests = InformationProtectionThreatAssessmentRequestsOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.invitations_invitation = InvitationsInvitationOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.invitations = InvitationsOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.oauth2_permission_grants_oauth2_permission_grant = Oauth2PermissionGrantsOAuth2PermissionGrantOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.oauth2_permission_grants = Oauth2PermissionGrantsOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.organization = OrganizationOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.policies_policy_root = PoliciesPolicyRootOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.policies = PoliciesOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.policies_permission_grant_policies = PoliciesPermissionGrantPoliciesOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.risk_detections_risk_detection = RiskDetectionsRiskDetectionOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.risky_users_risky_user = RiskyUsersRiskyUserOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.risky_users = RiskyUsersOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.trust_framework_trust_framework = TrustFrameworkTrustFrameworkOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.trust_framework = TrustFrameworkOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.trust_framework_key_sets = TrustFrameworkKeySetsOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.users = UsersOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.users_authentication = UsersAuthenticationOperations(
            self._client, self._config, self._serialize, self._deserialize)

    def close(self):
        # type: () -> None
        self._client.close()

    def __enter__(self):
        # type: () -> IdentitySignIns
        self._client.__enter__()
        return self

    def __exit__(self, *exc_details):
        # type: (Any) -> None
        self._client.__exit__(*exc_details)
