# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from typing import Any, Optional, TYPE_CHECKING

from azure.mgmt.core import AsyncARMPipelineClient
from msrest import Deserializer, Serializer

if TYPE_CHECKING:
    # pylint: disable=unused-import,ungrouped-imports
    from azure.core.credentials_async import AsyncTokenCredential

from ._configuration_async import FilesConfiguration
from .operations_async import DriveDriveOperations
from .operations_async import DriveOperations
from .operations_async import DriveActivityOperations
from .operations_async import DriveActivityListItemOperations
from .operations_async import DriveActivityListItemVersionOperations
from .operations_async import DriveListOperations
from .operations_async import DriveListActivityOperations
from .operations_async import DriveListActivityListItemOperations
from .operations_async import DriveListActivityListItemVersionOperations
from .operations_async import DriveListContentTypeOperations
from .operations_async import DriveListItemOperations
from .operations_async import DriveListItemActivityOperations
from .operations_async import DriveListItemActivityListItemOperations
from .operations_async import DriveListItemVersionOperations
from .operations_async import GroupOperations
from .operations_async import ShareSharedDriveItemOperations
from .operations_async import ShareOperations
from .operations_async import ShareListOperations
from .operations_async import ShareListActivityOperations
from .operations_async import ShareListActivityListItemOperations
from .operations_async import ShareListActivityListItemVersionOperations
from .operations_async import ShareListContentTypeOperations
from .operations_async import ShareListItemOperations
from .operations_async import ShareListItemActivityOperations
from .operations_async import ShareListItemActivityListItemOperations
from .operations_async import ShareListItemVersionOperations
from .operations_async import ShareListItemOperations
from .operations_async import ShareListItemActivityOperations
from .operations_async import ShareListItemActivityListItemOperations
from .operations_async import ShareListItemVersionOperations
from .operations_async import SharePermissionOperations
from .operations_async import UserOperations
from .. import models


class Files(object):
    """Files.

    :ivar drive_drive: DriveDriveOperations operations
    :vartype drive_drive: files.aio.operations_async.DriveDriveOperations
    :ivar drive: DriveOperations operations
    :vartype drive: files.aio.operations_async.DriveOperations
    :ivar drive_activity: DriveActivityOperations operations
    :vartype drive_activity: files.aio.operations_async.DriveActivityOperations
    :ivar drive_activity_list_item: DriveActivityListItemOperations operations
    :vartype drive_activity_list_item: files.aio.operations_async.DriveActivityListItemOperations
    :ivar drive_activity_list_item_version: DriveActivityListItemVersionOperations operations
    :vartype drive_activity_list_item_version: files.aio.operations_async.DriveActivityListItemVersionOperations
    :ivar drive_list: DriveListOperations operations
    :vartype drive_list: files.aio.operations_async.DriveListOperations
    :ivar drive_list_activity: DriveListActivityOperations operations
    :vartype drive_list_activity: files.aio.operations_async.DriveListActivityOperations
    :ivar drive_list_activity_list_item: DriveListActivityListItemOperations operations
    :vartype drive_list_activity_list_item: files.aio.operations_async.DriveListActivityListItemOperations
    :ivar drive_list_activity_list_item_version: DriveListActivityListItemVersionOperations operations
    :vartype drive_list_activity_list_item_version: files.aio.operations_async.DriveListActivityListItemVersionOperations
    :ivar drive_list_content_type: DriveListContentTypeOperations operations
    :vartype drive_list_content_type: files.aio.operations_async.DriveListContentTypeOperations
    :ivar drive_list_item: DriveListItemOperations operations
    :vartype drive_list_item: files.aio.operations_async.DriveListItemOperations
    :ivar drive_list_item_activity: DriveListItemActivityOperations operations
    :vartype drive_list_item_activity: files.aio.operations_async.DriveListItemActivityOperations
    :ivar drive_list_item_activity_list_item: DriveListItemActivityListItemOperations operations
    :vartype drive_list_item_activity_list_item: files.aio.operations_async.DriveListItemActivityListItemOperations
    :ivar drive_list_item_version: DriveListItemVersionOperations operations
    :vartype drive_list_item_version: files.aio.operations_async.DriveListItemVersionOperations
    :ivar group: GroupOperations operations
    :vartype group: files.aio.operations_async.GroupOperations
    :ivar share_shared_drive_item: ShareSharedDriveItemOperations operations
    :vartype share_shared_drive_item: files.aio.operations_async.ShareSharedDriveItemOperations
    :ivar share: ShareOperations operations
    :vartype share: files.aio.operations_async.ShareOperations
    :ivar share_list: ShareListOperations operations
    :vartype share_list: files.aio.operations_async.ShareListOperations
    :ivar share_list_activity: ShareListActivityOperations operations
    :vartype share_list_activity: files.aio.operations_async.ShareListActivityOperations
    :ivar share_list_activity_list_item: ShareListActivityListItemOperations operations
    :vartype share_list_activity_list_item: files.aio.operations_async.ShareListActivityListItemOperations
    :ivar share_list_activity_list_item_version: ShareListActivityListItemVersionOperations operations
    :vartype share_list_activity_list_item_version: files.aio.operations_async.ShareListActivityListItemVersionOperations
    :ivar share_list_content_type: ShareListContentTypeOperations operations
    :vartype share_list_content_type: files.aio.operations_async.ShareListContentTypeOperations
    :ivar share_list_item: ShareListItemOperations operations
    :vartype share_list_item: files.aio.operations_async.ShareListItemOperations
    :ivar share_list_item_activity: ShareListItemActivityOperations operations
    :vartype share_list_item_activity: files.aio.operations_async.ShareListItemActivityOperations
    :ivar share_list_item_activity_list_item: ShareListItemActivityListItemOperations operations
    :vartype share_list_item_activity_list_item: files.aio.operations_async.ShareListItemActivityListItemOperations
    :ivar share_list_item_version: ShareListItemVersionOperations operations
    :vartype share_list_item_version: files.aio.operations_async.ShareListItemVersionOperations
    :ivar share_list_item: ShareListItemOperations operations
    :vartype share_list_item: files.aio.operations_async.ShareListItemOperations
    :ivar share_list_item_activity: ShareListItemActivityOperations operations
    :vartype share_list_item_activity: files.aio.operations_async.ShareListItemActivityOperations
    :ivar share_list_item_activity_list_item: ShareListItemActivityListItemOperations operations
    :vartype share_list_item_activity_list_item: files.aio.operations_async.ShareListItemActivityListItemOperations
    :ivar share_list_item_version: ShareListItemVersionOperations operations
    :vartype share_list_item_version: files.aio.operations_async.ShareListItemVersionOperations
    :ivar share_permission: SharePermissionOperations operations
    :vartype share_permission: files.aio.operations_async.SharePermissionOperations
    :ivar user: UserOperations operations
    :vartype user: files.aio.operations_async.UserOperations
    :param credential: Credential needed for the client to connect to Azure.
    :type credential: ~azure.core.credentials_async.AsyncTokenCredential
    :param top: Show only the first n items.
    :type top: int
    :param skip: Skip the first n items.
    :type skip: int
    :param search: Search items by search phrases.
    :type search: str
    :param filter: Filter items by property values.
    :type filter: str
    :param count: Include count of items.
    :type count: bool
    :param str base_url: Service URL
    :keyword int polling_interval: Default waiting time between two polls for LRO operations if no Retry-After header is present.
    """

    def __init__(
        self,
        credential: "AsyncTokenCredential",
        top: Optional[int] = None,
        skip: Optional[int] = None,
        search: Optional[str] = None,
        filter: Optional[str] = None,
        count: Optional[bool] = None,
        base_url: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        if not base_url:
            base_url = 'https://graph.microsoft.com/beta'
        self._config = FilesConfiguration(credential, top, skip, search, filter, count, **kwargs)
        self._client = AsyncARMPipelineClient(base_url=base_url, config=self._config, **kwargs)

        client_models = {k: v for k, v in models.__dict__.items() if isinstance(v, type)}
        self._serialize = Serializer(client_models)
        self._deserialize = Deserializer(client_models)

        self.drive_drive = DriveDriveOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.drive = DriveOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.drive_activity = DriveActivityOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.drive_activity_list_item = DriveActivityListItemOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.drive_activity_list_item_version = DriveActivityListItemVersionOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.drive_list = DriveListOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.drive_list_activity = DriveListActivityOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.drive_list_activity_list_item = DriveListActivityListItemOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.drive_list_activity_list_item_version = DriveListActivityListItemVersionOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.drive_list_content_type = DriveListContentTypeOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.drive_list_item = DriveListItemOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.drive_list_item_activity = DriveListItemActivityOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.drive_list_item_activity_list_item = DriveListItemActivityListItemOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.drive_list_item_version = DriveListItemVersionOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.group = GroupOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.share_shared_drive_item = ShareSharedDriveItemOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.share = ShareOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.share_list = ShareListOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.share_list_activity = ShareListActivityOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.share_list_activity_list_item = ShareListActivityListItemOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.share_list_activity_list_item_version = ShareListActivityListItemVersionOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.share_list_content_type = ShareListContentTypeOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.share_list_item = ShareListItemOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.share_list_item_activity = ShareListItemActivityOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.share_list_item_activity_list_item = ShareListItemActivityListItemOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.share_list_item_version = ShareListItemVersionOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.share_list_item = ShareListItemOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.share_list_item_activity = ShareListItemActivityOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.share_list_item_activity_list_item = ShareListItemActivityListItemOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.share_list_item_version = ShareListItemVersionOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.share_permission = SharePermissionOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.user = UserOperations(
            self._client, self._config, self._serialize, self._deserialize)

    async def close(self) -> None:
        await self._client.close()

    async def __aenter__(self) -> "Files":
        await self._client.__aenter__()
        return self

    async def __aexit__(self, *exc_details) -> None:
        await self._client.__aexit__(*exc_details)
