# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
import datetime
from typing import TYPE_CHECKING
import warnings

from azure.core.exceptions import HttpResponseError, ResourceExistsError, ResourceNotFoundError, map_error
from azure.core.paging import ItemPaged
from azure.core.pipeline import PipelineResponse
from azure.core.pipeline.transport import HttpRequest, HttpResponse
from azure.mgmt.core.exceptions import ARMErrorFormat

from .. import models

if TYPE_CHECKING:
    # pylint: disable=unused-import,ungrouped-imports
    from typing import Any, Callable, Dict, Generic, Iterable, List, Optional, TypeVar, Union

    T = TypeVar('T')
    ClsType = Optional[Callable[[PipelineResponse[HttpRequest, HttpResponse], T, Dict[str, Any]], Any]]

class ShareSharedDriveItemOperations(object):
    """ShareSharedDriveItemOperations operations.

    You should not instantiate this class directly. Instead, you should create a Client instance that
    instantiates it for you and attaches it as an attribute.

    :ivar models: Alias to model classes used in this operation group.
    :type models: ~files.models
    :param client: Client for service requests.
    :param config: Configuration of service client.
    :param serializer: An object model serializer.
    :param deserializer: An object model deserializer.
    """

    models = models

    def __init__(self, client, config, serializer, deserializer):
        self._client = client
        self._serialize = serializer
        self._deserialize = deserializer
        self._config = config

    def list_shared_drive_item(
        self,
        orderby=None,  # type: Optional[List[Union[str, "models.Enum240"]]]
        select=None,  # type: Optional[List[Union[str, "models.Enum241"]]]
        expand=None,  # type: Optional[List[Union[str, "models.Enum242"]]]
        **kwargs  # type: Any
    ):
        # type: (...) -> Iterable["models.CollectionOfSharedDriveItem"]
        """Get entities from shares.

        Get entities from shares.

        :param orderby: Order items by property values.
        :type orderby: list[str or ~files.models.Enum240]
        :param select: Select properties to be returned.
        :type select: list[str or ~files.models.Enum241]
        :param expand: Expand related entities.
        :type expand: list[str or ~files.models.Enum242]
        :keyword callable cls: A custom type or function that will be passed the direct response
        :return: An iterator like instance of either CollectionOfSharedDriveItem or the result of cls(response)
        :rtype: ~azure.core.paging.ItemPaged[~files.models.CollectionOfSharedDriveItem]
        :raises: ~azure.core.exceptions.HttpResponseError
        """
        cls = kwargs.pop('cls', None)  # type: ClsType["models.CollectionOfSharedDriveItem"]
        error_map = {404: ResourceNotFoundError, 409: ResourceExistsError}
        error_map.update(kwargs.pop('error_map', {}))
        accept = "application/json"

        def prepare_request(next_link=None):
            # Construct headers
            header_parameters = {}  # type: Dict[str, Any]
            header_parameters['Accept'] = self._serialize.header("accept", accept, 'str')
            header_parameters['Accept'] = 'application/json'

            if not next_link:
                # Construct URL
                url = self.list_shared_drive_item.metadata['url']  # type: ignore
                # Construct parameters
                query_parameters = {}  # type: Dict[str, Any]
                if self._config.top is not None:
                    query_parameters['$top'] = self._serialize.query("self._config.top", self._config.top, 'int', minimum=0)
                if self._config.skip is not None:
                    query_parameters['$skip'] = self._serialize.query("self._config.skip", self._config.skip, 'int', minimum=0)
                if self._config.search is not None:
                    query_parameters['$search'] = self._serialize.query("self._config.search", self._config.search, 'str')
                if self._config.filter is not None:
                    query_parameters['$filter'] = self._serialize.query("self._config.filter", self._config.filter, 'str')
                if self._config.count is not None:
                    query_parameters['$count'] = self._serialize.query("self._config.count", self._config.count, 'bool')
                if orderby is not None:
                    query_parameters['$orderby'] = self._serialize.query("orderby", orderby, '[str]', div=',')
                if select is not None:
                    query_parameters['$select'] = self._serialize.query("select", select, '[str]', div=',')
                if expand is not None:
                    query_parameters['$expand'] = self._serialize.query("expand", expand, '[str]', div=',')

                request = self._client.get(url, query_parameters, header_parameters)
            else:
                url = next_link
                query_parameters = {}  # type: Dict[str, Any]
                request = self._client.get(url, query_parameters, header_parameters)
            return request

        def extract_data(pipeline_response):
            deserialized = self._deserialize('CollectionOfSharedDriveItem', pipeline_response)
            list_of_elem = deserialized.value
            if cls:
                list_of_elem = cls(list_of_elem)
            return deserialized.odata_next_link or None, iter(list_of_elem)

        def get_next(next_link=None):
            request = prepare_request(next_link)

            pipeline_response = self._client._pipeline.run(request, stream=False, **kwargs)
            response = pipeline_response.http_response

            if response.status_code not in [200]:
                error = self._deserialize(models.OdataError, response)
                map_error(status_code=response.status_code, response=response, error_map=error_map)
                raise HttpResponseError(response=response, model=error, error_format=ARMErrorFormat)

            return pipeline_response

        return ItemPaged(
            get_next, extract_data
        )
    list_shared_drive_item.metadata = {'url': '/shares'}  # type: ignore

    def create_shared_drive_item(
        self,
        id=None,  # type: Optional[str]
        created_date_time=None,  # type: Optional[datetime.datetime]
        description=None,  # type: Optional[str]
        e_tag=None,  # type: Optional[str]
        last_modified_date_time=None,  # type: Optional[datetime.datetime]
        name=None,  # type: Optional[str]
        web_url=None,  # type: Optional[str]
        created_by_user=None,  # type: Optional["models.MicrosoftGraphUser"]
        last_modified_by_user=None,  # type: Optional["models.MicrosoftGraphUser"]
        drive_id=None,  # type: Optional[str]
        drive_type=None,  # type: Optional[str]
        microsoft_graph_item_reference_id=None,  # type: Optional[str]
        microsoft_graph_item_reference_name=None,  # type: Optional[str]
        path=None,  # type: Optional[str]
        share_id=None,  # type: Optional[str]
        sharepoint_ids=None,  # type: Optional["models.MicrosoftGraphSharepointIds"]
        site_id=None,  # type: Optional[str]
        display_name=None,  # type: Optional[str]
        microsoft_graph_identity_id=None,  # type: Optional[str]
        microsoft_graph_identity_display_name=None,  # type: Optional[str]
        id1=None,  # type: Optional[str]
        display_name1=None,  # type: Optional[str]
        id2=None,  # type: Optional[str]
        display_name2=None,  # type: Optional[str]
        id3=None,  # type: Optional[str]
        display_name3=None,  # type: Optional[str]
        id4=None,  # type: Optional[str]
        display_name4=None,  # type: Optional[str]
        id5=None,  # type: Optional[str]
        drive_item=None,  # type: Optional["models.MicrosoftGraphDriveItem"]
        items=None,  # type: Optional[List["models.MicrosoftGraphDriveItem"]]
        list_item=None,  # type: Optional["models.MicrosoftGraphListItem"]
        root=None,  # type: Optional["models.MicrosoftGraphDriveItem"]
        site=None,  # type: Optional["models.MicrosoftGraphSite"]
        microsoft_graph_entity_id=None,  # type: Optional[str]
        expiration_date_time=None,  # type: Optional[datetime.datetime]
        granted_to_identities=None,  # type: Optional[List["models.MicrosoftGraphIdentitySet"]]
        has_password=None,  # type: Optional[bool]
        roles=None,  # type: Optional[List[str]]
        microsoft_graph_permission_share_id=None,  # type: Optional[str]
        application=None,  # type: Optional["models.MicrosoftGraphIdentity"]
        configurator_url=None,  # type: Optional[str]
        prevents_download=None,  # type: Optional[bool]
        scope=None,  # type: Optional[str]
        type=None,  # type: Optional[str]
        web_html=None,  # type: Optional[str]
        microsoft_graph_sharing_link_web_url=None,  # type: Optional[str]
        email=None,  # type: Optional[str]
        invited_by=None,  # type: Optional["models.MicrosoftGraphIdentitySet"]
        redeemed_by=None,  # type: Optional[str]
        sign_in_required=None,  # type: Optional[bool]
        microsoft_graph_item_reference_drive_id=None,  # type: Optional[str]
        microsoft_graph_item_reference_drive_type=None,  # type: Optional[str]
        id6=None,  # type: Optional[str]
        name1=None,  # type: Optional[str]
        microsoft_graph_item_reference_path=None,  # type: Optional[str]
        microsoft_graph_item_reference_share_id=None,  # type: Optional[str]
        microsoft_graph_sharepoint_ids=None,  # type: Optional["models.MicrosoftGraphSharepointIds"]
        microsoft_graph_item_reference_site_id=None,  # type: Optional[str]
        display_name5=None,  # type: Optional[str]
        id7=None,  # type: Optional[str]
        display_name6=None,  # type: Optional[str]
        id8=None,  # type: Optional[str]
        display_name7=None,  # type: Optional[str]
        id9=None,  # type: Optional[str]
        id10=None,  # type: Optional[str]
        microsoft_graph_base_item_created_date_time_created_date_time=None,  # type: Optional[datetime.datetime]
        microsoft_graph_base_item_description=None,  # type: Optional[str]
        microsoft_graph_base_item_e_tag=None,  # type: Optional[str]
        microsoft_graph_base_item_last_modified_date_time_last_modified_date_time=None,  # type: Optional[datetime.datetime]
        microsoft_graph_base_item_name=None,  # type: Optional[str]
        microsoft_graph_base_item_web_url=None,  # type: Optional[str]
        microsoft_graph_user_created_by_user=None,  # type: Optional["models.MicrosoftGraphUser"]
        microsoft_graph_user_last_modified_by_user=None,  # type: Optional["models.MicrosoftGraphUser"]
        drive_id1=None,  # type: Optional[str]
        drive_type1=None,  # type: Optional[str]
        id11=None,  # type: Optional[str]
        name2=None,  # type: Optional[str]
        path1=None,  # type: Optional[str]
        share_id1=None,  # type: Optional[str]
        sharepoint_ids1=None,  # type: Optional["models.MicrosoftGraphSharepointIds"]
        site_id1=None,  # type: Optional[str]
        display_name8=None,  # type: Optional[str]
        id12=None,  # type: Optional[str]
        display_name9=None,  # type: Optional[str]
        id13=None,  # type: Optional[str]
        display_name10=None,  # type: Optional[str]
        id14=None,  # type: Optional[str]
        display_name11=None,  # type: Optional[str]
        id15=None,  # type: Optional[str]
        display_name12=None,  # type: Optional[str]
        id16=None,  # type: Optional[str]
        display_name13=None,  # type: Optional[str]
        id17=None,  # type: Optional[str]
        microsoft_graph_list_display_name=None,  # type: Optional[str]
        list=None,  # type: Optional["models.MicrosoftGraphListInfo"]
        sharepoint_ids2=None,  # type: Optional["models.MicrosoftGraphSharepointIds"]
        system=None,  # type: Optional[Dict[str, object]]
        activities=None,  # type: Optional[List["models.MicrosoftGraphItemActivityOld"]]
        columns=None,  # type: Optional[List["models.MicrosoftGraphColumnDefinition"]]
        content_types=None,  # type: Optional[List["models.MicrosoftGraphContentType"]]
        drive=None,  # type: Optional["models.MicrosoftGraphDrive"]
        microsoft_graph_list_items=None,  # type: Optional[List["models.MicrosoftGraphListItem"]]
        subscriptions=None,  # type: Optional[List["models.MicrosoftGraphSubscription"]]
        display_name14=None,  # type: Optional[str]
        id18=None,  # type: Optional[str]
        display_name15=None,  # type: Optional[str]
        id19=None,  # type: Optional[str]
        display_name16=None,  # type: Optional[str]
        id20=None,  # type: Optional[str]
        **kwargs  # type: Any
    ):
        # type: (...) -> "models.MicrosoftGraphSharedDriveItem"
        """Add new entity to shares.

        Add new entity to shares.

        :param id: Read-only.
        :type id: str
        :param created_date_time: Date and time of item creation. Read-only.
        :type created_date_time: ~datetime.datetime
        :param description: Provides a user-visible description of the item. Optional.
        :type description: str
        :param e_tag: ETag for the item. Read-only.
        :type e_tag: str
        :param last_modified_date_time: Date and time the item was last modified. Read-only.
        :type last_modified_date_time: ~datetime.datetime
        :param name: The name of the item. Read-write.
        :type name: str
        :param web_url: URL that displays the resource in the browser. Read-only.
        :type web_url: str
        :param created_by_user: Represents an Azure Active Directory user object.
        :type created_by_user: ~files.models.MicrosoftGraphUser
        :param last_modified_by_user: Represents an Azure Active Directory user object.
        :type last_modified_by_user: ~files.models.MicrosoftGraphUser
        :param drive_id: Unique identifier of the drive instance that contains the item. Read-only.
        :type drive_id: str
        :param drive_type: Identifies the type of drive. See [drive][] resource for values.
        :type drive_type: str
        :param microsoft_graph_item_reference_id: Unique identifier of the item in the drive. Read-
         only.
        :type microsoft_graph_item_reference_id: str
        :param microsoft_graph_item_reference_name: The name of the item being referenced. Read-only.
        :type microsoft_graph_item_reference_name: str
        :param path: Path that can be used to navigate to the item. Read-only.
        :type path: str
        :param share_id: A unique identifier for a shared resource that can be accessed via the
         [Shares][] API.
        :type share_id: str
        :param sharepoint_ids: sharepointIds.
        :type sharepoint_ids: ~files.models.MicrosoftGraphSharepointIds
        :param site_id:
        :type site_id: str
        :param display_name: The identity's display name. Note that this may not always be available or
         up to date. For example, if a user changes their display name, the API may show the new value
         in a future response, but the items associated with the user won't show up as having changed
         when using delta.
        :type display_name: str
        :param microsoft_graph_identity_id: Unique identifier for the identity.
        :type microsoft_graph_identity_id: str
        :param microsoft_graph_identity_display_name: The identity's display name. Note that this may
         not always be available or up to date. For example, if a user changes their display name, the
         API may show the new value in a future response, but the items associated with the user won't
         show up as having changed when using delta.
        :type microsoft_graph_identity_display_name: str
        :param id1: Unique identifier for the identity.
        :type id1: str
        :param display_name1: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name1: str
        :param id2: Unique identifier for the identity.
        :type id2: str
        :param display_name2: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name2: str
        :param id3: Unique identifier for the identity.
        :type id3: str
        :param display_name3: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name3: str
        :param id4: Unique identifier for the identity.
        :type id4: str
        :param display_name4: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name4: str
        :param id5: Unique identifier for the identity.
        :type id5: str
        :param drive_item: driveItem.
        :type drive_item: ~files.models.MicrosoftGraphDriveItem
        :param items: All driveItems contained in the sharing root. This collection cannot be
         enumerated.
        :type items: list[~files.models.MicrosoftGraphDriveItem]
        :param list_item: listItem.
        :type list_item: ~files.models.MicrosoftGraphListItem
        :param root: driveItem.
        :type root: ~files.models.MicrosoftGraphDriveItem
        :param site: site.
        :type site: ~files.models.MicrosoftGraphSite
        :param microsoft_graph_entity_id: Read-only.
        :type microsoft_graph_entity_id: str
        :param expiration_date_time: A format of yyyy-MM-ddTHH:mm:ssZ of DateTimeOffset indicates the
         expiration time of the permission. DateTime.MinValue indicates there is no expiration set for
         this permission. Optional.
        :type expiration_date_time: ~datetime.datetime
        :param granted_to_identities: For link type permissions, the details of the users to whom
         permission was granted. Read-only.
        :type granted_to_identities: list[~files.models.MicrosoftGraphIdentitySet]
        :param has_password: This indicates whether password is set for this permission, it's only
         showing in response. Optional and Read-only and for OneDrive Personal only.
        :type has_password: bool
        :param roles: The type of permission, e.g. read. See below for the full list of roles. Read-
         only.
        :type roles: list[str]
        :param microsoft_graph_permission_share_id: A unique token that can be used to access this
         shared item via the **shares** API. Read-only.
        :type microsoft_graph_permission_share_id: str
        :param application: identity.
        :type application: ~files.models.MicrosoftGraphIdentity
        :param configurator_url:
        :type configurator_url: str
        :param prevents_download: If true then the user can only use this link to view the item on the
         web, and cannot use it to download the contents of the item. Only for OneDrive for Business and
         SharePoint.
        :type prevents_download: bool
        :param scope: The scope of the link represented by this permission. Value anonymous indicates
         the link is usable by anyone, organization indicates the link is only usable for users signed
         into the same tenant.
        :type scope: str
        :param type: The type of the link created.
        :type type: str
        :param web_html: For embed links, this property contains the HTML code for an :code:`<iframe>`
         element that will embed the item in a webpage.
        :type web_html: str
        :param microsoft_graph_sharing_link_web_url: A URL that opens the item in the browser on the
         OneDrive website.
        :type microsoft_graph_sharing_link_web_url: str
        :param email: The email address provided for the recipient of the sharing invitation. Read-
         only.
        :type email: str
        :param invited_by: identitySet.
        :type invited_by: ~files.models.MicrosoftGraphIdentitySet
        :param redeemed_by:
        :type redeemed_by: str
        :param sign_in_required: If true the recipient of the invitation needs to sign in in order to
         access the shared item. Read-only.
        :type sign_in_required: bool
        :param microsoft_graph_item_reference_drive_id: Unique identifier of the drive instance that
         contains the item. Read-only.
        :type microsoft_graph_item_reference_drive_id: str
        :param microsoft_graph_item_reference_drive_type: Identifies the type of drive. See [drive][]
         resource for values.
        :type microsoft_graph_item_reference_drive_type: str
        :param id6: Unique identifier of the item in the drive. Read-only.
        :type id6: str
        :param name1: The name of the item being referenced. Read-only.
        :type name1: str
        :param microsoft_graph_item_reference_path: Path that can be used to navigate to the item.
         Read-only.
        :type microsoft_graph_item_reference_path: str
        :param microsoft_graph_item_reference_share_id: A unique identifier for a shared resource that
         can be accessed via the [Shares][] API.
        :type microsoft_graph_item_reference_share_id: str
        :param microsoft_graph_sharepoint_ids: sharepointIds.
        :type microsoft_graph_sharepoint_ids: ~files.models.MicrosoftGraphSharepointIds
        :param microsoft_graph_item_reference_site_id:
        :type microsoft_graph_item_reference_site_id: str
        :param display_name5: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name5: str
        :param id7: Unique identifier for the identity.
        :type id7: str
        :param display_name6: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name6: str
        :param id8: Unique identifier for the identity.
        :type id8: str
        :param display_name7: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name7: str
        :param id9: Unique identifier for the identity.
        :type id9: str
        :param id10: Read-only.
        :type id10: str
        :param microsoft_graph_base_item_created_date_time_created_date_time: Date and time of item
         creation. Read-only.
        :type microsoft_graph_base_item_created_date_time_created_date_time: ~datetime.datetime
        :param microsoft_graph_base_item_description: Provides a user-visible description of the item.
         Optional.
        :type microsoft_graph_base_item_description: str
        :param microsoft_graph_base_item_e_tag: ETag for the item. Read-only.
        :type microsoft_graph_base_item_e_tag: str
        :param microsoft_graph_base_item_last_modified_date_time_last_modified_date_time: Date and time
         the item was last modified. Read-only.
        :type microsoft_graph_base_item_last_modified_date_time_last_modified_date_time: ~datetime.datetime
        :param microsoft_graph_base_item_name: The name of the item. Read-write.
        :type microsoft_graph_base_item_name: str
        :param microsoft_graph_base_item_web_url: URL that displays the resource in the browser. Read-
         only.
        :type microsoft_graph_base_item_web_url: str
        :param microsoft_graph_user_created_by_user: Represents an Azure Active Directory user object.
        :type microsoft_graph_user_created_by_user: ~files.models.MicrosoftGraphUser
        :param microsoft_graph_user_last_modified_by_user: Represents an Azure Active Directory user
         object.
        :type microsoft_graph_user_last_modified_by_user: ~files.models.MicrosoftGraphUser
        :param drive_id1: Unique identifier of the drive instance that contains the item. Read-only.
        :type drive_id1: str
        :param drive_type1: Identifies the type of drive. See [drive][] resource for values.
        :type drive_type1: str
        :param id11: Unique identifier of the item in the drive. Read-only.
        :type id11: str
        :param name2: The name of the item being referenced. Read-only.
        :type name2: str
        :param path1: Path that can be used to navigate to the item. Read-only.
        :type path1: str
        :param share_id1: A unique identifier for a shared resource that can be accessed via the
         [Shares][] API.
        :type share_id1: str
        :param sharepoint_ids1: sharepointIds.
        :type sharepoint_ids1: ~files.models.MicrosoftGraphSharepointIds
        :param site_id1:
        :type site_id1: str
        :param display_name8: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name8: str
        :param id12: Unique identifier for the identity.
        :type id12: str
        :param display_name9: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name9: str
        :param id13: Unique identifier for the identity.
        :type id13: str
        :param display_name10: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name10: str
        :param id14: Unique identifier for the identity.
        :type id14: str
        :param display_name11: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name11: str
        :param id15: Unique identifier for the identity.
        :type id15: str
        :param display_name12: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name12: str
        :param id16: Unique identifier for the identity.
        :type id16: str
        :param display_name13: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name13: str
        :param id17: Unique identifier for the identity.
        :type id17: str
        :param microsoft_graph_list_display_name: The displayable title of the list.
        :type microsoft_graph_list_display_name: str
        :param list: listInfo.
        :type list: ~files.models.MicrosoftGraphListInfo
        :param sharepoint_ids2: sharepointIds.
        :type sharepoint_ids2: ~files.models.MicrosoftGraphSharepointIds
        :param system: systemFacet.
        :type system: dict[str, object]
        :param activities:
        :type activities: list[~files.models.MicrosoftGraphItemActivityOld]
        :param columns: The collection of field definitions for this list.
        :type columns: list[~files.models.MicrosoftGraphColumnDefinition]
        :param content_types: The collection of content types present in this list.
        :type content_types: list[~files.models.MicrosoftGraphContentType]
        :param drive: drive.
        :type drive: ~files.models.MicrosoftGraphDrive
        :param microsoft_graph_list_items: All items contained in the list.
        :type microsoft_graph_list_items: list[~files.models.MicrosoftGraphListItem]
        :param subscriptions: The set of subscriptions on the list.
        :type subscriptions: list[~files.models.MicrosoftGraphSubscription]
        :param display_name14: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name14: str
        :param id18: Unique identifier for the identity.
        :type id18: str
        :param display_name15: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name15: str
        :param id19: Unique identifier for the identity.
        :type id19: str
        :param display_name16: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name16: str
        :param id20: Unique identifier for the identity.
        :type id20: str
        :keyword callable cls: A custom type or function that will be passed the direct response
        :return: MicrosoftGraphSharedDriveItem, or the result of cls(response)
        :rtype: ~files.models.MicrosoftGraphSharedDriveItem
        :raises: ~azure.core.exceptions.HttpResponseError
        """
        cls = kwargs.pop('cls', None)  # type: ClsType["models.MicrosoftGraphSharedDriveItem"]
        error_map = {404: ResourceNotFoundError, 409: ResourceExistsError}
        error_map.update(kwargs.pop('error_map', {}))

        _body = models.MicrosoftGraphSharedDriveItem(id=id, created_date_time=created_date_time, description=description, e_tag=e_tag, last_modified_date_time=last_modified_date_time, name=name, web_url=web_url, created_by_user=created_by_user, last_modified_by_user=last_modified_by_user, drive_id=drive_id, drive_type=drive_type, id_parent_reference_id=microsoft_graph_item_reference_id, name_parent_reference_name=microsoft_graph_item_reference_name, path=path, share_id=share_id, sharepoint_ids=sharepoint_ids, site_id=site_id, display_name_last_modified_by_user_display_name=display_name, id_last_modified_by_user_id=microsoft_graph_identity_id, display_name_last_modified_by_device_display_name=microsoft_graph_identity_display_name, id_last_modified_by_device_id=id1, display_name_last_modified_by_application_display_name=display_name1, id_last_modified_by_application_id=id2, display_name_created_by_user_display_name=display_name2, id_created_by_user_id=id3, display_name_created_by_device_display_name=display_name3, id_created_by_device_id=id4, display_name_created_by_application_display_name=display_name4, id_created_by_application_id=id5, drive_item=drive_item, items=items, list_item=list_item, root=root, site=site, id_permission_id=microsoft_graph_entity_id, expiration_date_time=expiration_date_time, granted_to_identities=granted_to_identities, has_password=has_password, roles=roles, share_id_permission_share_id=microsoft_graph_permission_share_id, application=application, configurator_url=configurator_url, prevents_download=prevents_download, scope=scope, type=type, web_html=web_html, web_url_permission_link_web_url=microsoft_graph_sharing_link_web_url, email=email, invited_by=invited_by, redeemed_by=redeemed_by, sign_in_required=sign_in_required, drive_id_permission_inherited_from_drive_id=microsoft_graph_item_reference_drive_id, drive_type_permission_inherited_from_drive_type=microsoft_graph_item_reference_drive_type, id_permission_inherited_from_id=id6, name_permission_inherited_from_name=name1, path_permission_inherited_from_path=microsoft_graph_item_reference_path, share_id_permission_inherited_from_share_id=microsoft_graph_item_reference_share_id, sharepoint_ids_permission_inherited_from_sharepoint_ids=microsoft_graph_sharepoint_ids, site_id_permission_inherited_from_site_id=microsoft_graph_item_reference_site_id, display_name_permission_granted_to_user_display_name=display_name5, id_permission_granted_to_user_id=id7, display_name_permission_granted_to_device_display_name=display_name6, id_permission_granted_to_device_id=id8, display_name_permission_granted_to_application_display_name=display_name7, id_permission_granted_to_application_id=id9, id_list_id=id10, created_date_time_list_created_date_time=microsoft_graph_base_item_created_date_time_created_date_time, description_list_description=microsoft_graph_base_item_description, e_tag_list_e_tag=microsoft_graph_base_item_e_tag, last_modified_date_time_list_last_modified_date_time=microsoft_graph_base_item_last_modified_date_time_last_modified_date_time, name_list_name=microsoft_graph_base_item_name, web_url_list_web_url=microsoft_graph_base_item_web_url, created_by_user_list_created_by_user=microsoft_graph_user_created_by_user, last_modified_by_user_list_last_modified_by_user=microsoft_graph_user_last_modified_by_user, drive_id_list_parent_reference_drive_id=drive_id1, drive_type_list_parent_reference_drive_type=drive_type1, id_list_parent_reference_id=id11, name_list_parent_reference_name=name2, path_list_parent_reference_path=path1, share_id_list_parent_reference_share_id=share_id1, sharepoint_ids_list_parent_reference_sharepoint_ids=sharepoint_ids1, site_id_list_parent_reference_site_id=site_id1, display_name_list_last_modified_by_user_display_name=display_name8, id_list_last_modified_by_user_id=id12, display_name_list_last_modified_by_device_display_name=display_name9, id_list_last_modified_by_device_id=id13, display_name_list_last_modified_by_application_display_name=display_name10, id_list_last_modified_by_application_id=id14, display_name_list_created_by_user_display_name=display_name11, id_list_created_by_user_id=id15, display_name_list_created_by_device_display_name=display_name12, id_list_created_by_device_id=id16, display_name_list_created_by_application_display_name=display_name13, id_list_created_by_application_id=id17, display_name_list_display_name=microsoft_graph_list_display_name, list=list, sharepoint_ids_list_sharepoint_ids=sharepoint_ids2, system=system, activities=activities, columns=columns, content_types=content_types, drive=drive, items_list_items=microsoft_graph_list_items, subscriptions=subscriptions, display_name_owner_user_display_name=display_name14, id_owner_user_id=id18, display_name_owner_device_display_name=display_name15, id_owner_device_id=id19, display_name_owner_application_display_name=display_name16, id_owner_application_id=id20)
        content_type = kwargs.pop("content_type", "application/json")
        accept = "application/json"

        # Construct URL
        url = self.create_shared_drive_item.metadata['url']  # type: ignore

        # Construct parameters
        query_parameters = {}  # type: Dict[str, Any]

        # Construct headers
        header_parameters = {}  # type: Dict[str, Any]
        header_parameters['Content-Type'] = self._serialize.header("content_type", content_type, 'str')
        header_parameters['Accept'] = self._serialize.header("accept", accept, 'str')
        header_parameters['Accept'] = 'application/json'

        body_content_kwargs = {}  # type: Dict[str, Any]
        body_content = self._serialize.body(_body, 'MicrosoftGraphSharedDriveItem')
        body_content_kwargs['content'] = body_content
        request = self._client.post(url, query_parameters, header_parameters, **body_content_kwargs)

        pipeline_response = self._client._pipeline.run(request, stream=False, **kwargs)
        response = pipeline_response.http_response

        if response.status_code not in [201]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            error = self._deserialize(models.OdataError, response)
            raise HttpResponseError(response=response, model=error, error_format=ARMErrorFormat)

        deserialized = self._deserialize('MicrosoftGraphSharedDriveItem', pipeline_response)

        if cls:
            return cls(pipeline_response, deserialized, {})

        return deserialized
    create_shared_drive_item.metadata = {'url': '/shares'}  # type: ignore

    def get_shared_drive_item(
        self,
        shared_drive_item_id,  # type: str
        select=None,  # type: Optional[List[Union[str, "models.Enum243"]]]
        expand=None,  # type: Optional[List[Union[str, "models.Enum244"]]]
        **kwargs  # type: Any
    ):
        # type: (...) -> "models.MicrosoftGraphSharedDriveItem"
        """Get entity from shares by key.

        Get entity from shares by key.

        :param shared_drive_item_id: key: id of sharedDriveItem.
        :type shared_drive_item_id: str
        :param select: Select properties to be returned.
        :type select: list[str or ~files.models.Enum243]
        :param expand: Expand related entities.
        :type expand: list[str or ~files.models.Enum244]
        :keyword callable cls: A custom type or function that will be passed the direct response
        :return: MicrosoftGraphSharedDriveItem, or the result of cls(response)
        :rtype: ~files.models.MicrosoftGraphSharedDriveItem
        :raises: ~azure.core.exceptions.HttpResponseError
        """
        cls = kwargs.pop('cls', None)  # type: ClsType["models.MicrosoftGraphSharedDriveItem"]
        error_map = {404: ResourceNotFoundError, 409: ResourceExistsError}
        error_map.update(kwargs.pop('error_map', {}))
        accept = "application/json"

        # Construct URL
        url = self.get_shared_drive_item.metadata['url']  # type: ignore
        path_format_arguments = {
            'sharedDriveItem-id': self._serialize.url("shared_drive_item_id", shared_drive_item_id, 'str'),
        }
        url = self._client.format_url(url, **path_format_arguments)

        # Construct parameters
        query_parameters = {}  # type: Dict[str, Any]
        if select is not None:
            query_parameters['$select'] = self._serialize.query("select", select, '[str]', div=',')
        if expand is not None:
            query_parameters['$expand'] = self._serialize.query("expand", expand, '[str]', div=',')

        # Construct headers
        header_parameters = {}  # type: Dict[str, Any]
        header_parameters['Accept'] = self._serialize.header("accept", accept, 'str')
        header_parameters['Accept'] = 'application/json'

        request = self._client.get(url, query_parameters, header_parameters)
        pipeline_response = self._client._pipeline.run(request, stream=False, **kwargs)
        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            error = self._deserialize(models.OdataError, response)
            raise HttpResponseError(response=response, model=error, error_format=ARMErrorFormat)

        deserialized = self._deserialize('MicrosoftGraphSharedDriveItem', pipeline_response)

        if cls:
            return cls(pipeline_response, deserialized, {})

        return deserialized
    get_shared_drive_item.metadata = {'url': '/shares/{sharedDriveItem-id}'}  # type: ignore

    def update_shared_drive_item(
        self,
        shared_drive_item_id,  # type: str
        id=None,  # type: Optional[str]
        created_date_time=None,  # type: Optional[datetime.datetime]
        description=None,  # type: Optional[str]
        e_tag=None,  # type: Optional[str]
        last_modified_date_time=None,  # type: Optional[datetime.datetime]
        name=None,  # type: Optional[str]
        web_url=None,  # type: Optional[str]
        created_by_user=None,  # type: Optional["models.MicrosoftGraphUser"]
        last_modified_by_user=None,  # type: Optional["models.MicrosoftGraphUser"]
        drive_id=None,  # type: Optional[str]
        drive_type=None,  # type: Optional[str]
        microsoft_graph_item_reference_id=None,  # type: Optional[str]
        microsoft_graph_item_reference_name=None,  # type: Optional[str]
        path=None,  # type: Optional[str]
        share_id=None,  # type: Optional[str]
        sharepoint_ids=None,  # type: Optional["models.MicrosoftGraphSharepointIds"]
        site_id=None,  # type: Optional[str]
        display_name=None,  # type: Optional[str]
        microsoft_graph_identity_id=None,  # type: Optional[str]
        microsoft_graph_identity_display_name=None,  # type: Optional[str]
        id1=None,  # type: Optional[str]
        display_name1=None,  # type: Optional[str]
        id2=None,  # type: Optional[str]
        display_name2=None,  # type: Optional[str]
        id3=None,  # type: Optional[str]
        display_name3=None,  # type: Optional[str]
        id4=None,  # type: Optional[str]
        display_name4=None,  # type: Optional[str]
        id5=None,  # type: Optional[str]
        drive_item=None,  # type: Optional["models.MicrosoftGraphDriveItem"]
        items=None,  # type: Optional[List["models.MicrosoftGraphDriveItem"]]
        list_item=None,  # type: Optional["models.MicrosoftGraphListItem"]
        root=None,  # type: Optional["models.MicrosoftGraphDriveItem"]
        site=None,  # type: Optional["models.MicrosoftGraphSite"]
        microsoft_graph_entity_id=None,  # type: Optional[str]
        expiration_date_time=None,  # type: Optional[datetime.datetime]
        granted_to_identities=None,  # type: Optional[List["models.MicrosoftGraphIdentitySet"]]
        has_password=None,  # type: Optional[bool]
        roles=None,  # type: Optional[List[str]]
        microsoft_graph_permission_share_id=None,  # type: Optional[str]
        application=None,  # type: Optional["models.MicrosoftGraphIdentity"]
        configurator_url=None,  # type: Optional[str]
        prevents_download=None,  # type: Optional[bool]
        scope=None,  # type: Optional[str]
        type=None,  # type: Optional[str]
        web_html=None,  # type: Optional[str]
        microsoft_graph_sharing_link_web_url=None,  # type: Optional[str]
        email=None,  # type: Optional[str]
        invited_by=None,  # type: Optional["models.MicrosoftGraphIdentitySet"]
        redeemed_by=None,  # type: Optional[str]
        sign_in_required=None,  # type: Optional[bool]
        microsoft_graph_item_reference_drive_id=None,  # type: Optional[str]
        microsoft_graph_item_reference_drive_type=None,  # type: Optional[str]
        id6=None,  # type: Optional[str]
        name1=None,  # type: Optional[str]
        microsoft_graph_item_reference_path=None,  # type: Optional[str]
        microsoft_graph_item_reference_share_id=None,  # type: Optional[str]
        microsoft_graph_sharepoint_ids=None,  # type: Optional["models.MicrosoftGraphSharepointIds"]
        microsoft_graph_item_reference_site_id=None,  # type: Optional[str]
        display_name5=None,  # type: Optional[str]
        id7=None,  # type: Optional[str]
        display_name6=None,  # type: Optional[str]
        id8=None,  # type: Optional[str]
        display_name7=None,  # type: Optional[str]
        id9=None,  # type: Optional[str]
        id10=None,  # type: Optional[str]
        microsoft_graph_base_item_created_date_time_created_date_time=None,  # type: Optional[datetime.datetime]
        microsoft_graph_base_item_description=None,  # type: Optional[str]
        microsoft_graph_base_item_e_tag=None,  # type: Optional[str]
        microsoft_graph_base_item_last_modified_date_time_last_modified_date_time=None,  # type: Optional[datetime.datetime]
        microsoft_graph_base_item_name=None,  # type: Optional[str]
        microsoft_graph_base_item_web_url=None,  # type: Optional[str]
        microsoft_graph_user_created_by_user=None,  # type: Optional["models.MicrosoftGraphUser"]
        microsoft_graph_user_last_modified_by_user=None,  # type: Optional["models.MicrosoftGraphUser"]
        drive_id1=None,  # type: Optional[str]
        drive_type1=None,  # type: Optional[str]
        id11=None,  # type: Optional[str]
        name2=None,  # type: Optional[str]
        path1=None,  # type: Optional[str]
        share_id1=None,  # type: Optional[str]
        sharepoint_ids1=None,  # type: Optional["models.MicrosoftGraphSharepointIds"]
        site_id1=None,  # type: Optional[str]
        display_name8=None,  # type: Optional[str]
        id12=None,  # type: Optional[str]
        display_name9=None,  # type: Optional[str]
        id13=None,  # type: Optional[str]
        display_name10=None,  # type: Optional[str]
        id14=None,  # type: Optional[str]
        display_name11=None,  # type: Optional[str]
        id15=None,  # type: Optional[str]
        display_name12=None,  # type: Optional[str]
        id16=None,  # type: Optional[str]
        display_name13=None,  # type: Optional[str]
        id17=None,  # type: Optional[str]
        microsoft_graph_list_display_name=None,  # type: Optional[str]
        list=None,  # type: Optional["models.MicrosoftGraphListInfo"]
        sharepoint_ids2=None,  # type: Optional["models.MicrosoftGraphSharepointIds"]
        system=None,  # type: Optional[Dict[str, object]]
        activities=None,  # type: Optional[List["models.MicrosoftGraphItemActivityOld"]]
        columns=None,  # type: Optional[List["models.MicrosoftGraphColumnDefinition"]]
        content_types=None,  # type: Optional[List["models.MicrosoftGraphContentType"]]
        drive=None,  # type: Optional["models.MicrosoftGraphDrive"]
        microsoft_graph_list_items=None,  # type: Optional[List["models.MicrosoftGraphListItem"]]
        subscriptions=None,  # type: Optional[List["models.MicrosoftGraphSubscription"]]
        display_name14=None,  # type: Optional[str]
        id18=None,  # type: Optional[str]
        display_name15=None,  # type: Optional[str]
        id19=None,  # type: Optional[str]
        display_name16=None,  # type: Optional[str]
        id20=None,  # type: Optional[str]
        **kwargs  # type: Any
    ):
        # type: (...) -> None
        """Update entity in shares.

        Update entity in shares.

        :param shared_drive_item_id: key: id of sharedDriveItem.
        :type shared_drive_item_id: str
        :param id: Read-only.
        :type id: str
        :param created_date_time: Date and time of item creation. Read-only.
        :type created_date_time: ~datetime.datetime
        :param description: Provides a user-visible description of the item. Optional.
        :type description: str
        :param e_tag: ETag for the item. Read-only.
        :type e_tag: str
        :param last_modified_date_time: Date and time the item was last modified. Read-only.
        :type last_modified_date_time: ~datetime.datetime
        :param name: The name of the item. Read-write.
        :type name: str
        :param web_url: URL that displays the resource in the browser. Read-only.
        :type web_url: str
        :param created_by_user: Represents an Azure Active Directory user object.
        :type created_by_user: ~files.models.MicrosoftGraphUser
        :param last_modified_by_user: Represents an Azure Active Directory user object.
        :type last_modified_by_user: ~files.models.MicrosoftGraphUser
        :param drive_id: Unique identifier of the drive instance that contains the item. Read-only.
        :type drive_id: str
        :param drive_type: Identifies the type of drive. See [drive][] resource for values.
        :type drive_type: str
        :param microsoft_graph_item_reference_id: Unique identifier of the item in the drive. Read-
         only.
        :type microsoft_graph_item_reference_id: str
        :param microsoft_graph_item_reference_name: The name of the item being referenced. Read-only.
        :type microsoft_graph_item_reference_name: str
        :param path: Path that can be used to navigate to the item. Read-only.
        :type path: str
        :param share_id: A unique identifier for a shared resource that can be accessed via the
         [Shares][] API.
        :type share_id: str
        :param sharepoint_ids: sharepointIds.
        :type sharepoint_ids: ~files.models.MicrosoftGraphSharepointIds
        :param site_id:
        :type site_id: str
        :param display_name: The identity's display name. Note that this may not always be available or
         up to date. For example, if a user changes their display name, the API may show the new value
         in a future response, but the items associated with the user won't show up as having changed
         when using delta.
        :type display_name: str
        :param microsoft_graph_identity_id: Unique identifier for the identity.
        :type microsoft_graph_identity_id: str
        :param microsoft_graph_identity_display_name: The identity's display name. Note that this may
         not always be available or up to date. For example, if a user changes their display name, the
         API may show the new value in a future response, but the items associated with the user won't
         show up as having changed when using delta.
        :type microsoft_graph_identity_display_name: str
        :param id1: Unique identifier for the identity.
        :type id1: str
        :param display_name1: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name1: str
        :param id2: Unique identifier for the identity.
        :type id2: str
        :param display_name2: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name2: str
        :param id3: Unique identifier for the identity.
        :type id3: str
        :param display_name3: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name3: str
        :param id4: Unique identifier for the identity.
        :type id4: str
        :param display_name4: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name4: str
        :param id5: Unique identifier for the identity.
        :type id5: str
        :param drive_item: driveItem.
        :type drive_item: ~files.models.MicrosoftGraphDriveItem
        :param items: All driveItems contained in the sharing root. This collection cannot be
         enumerated.
        :type items: list[~files.models.MicrosoftGraphDriveItem]
        :param list_item: listItem.
        :type list_item: ~files.models.MicrosoftGraphListItem
        :param root: driveItem.
        :type root: ~files.models.MicrosoftGraphDriveItem
        :param site: site.
        :type site: ~files.models.MicrosoftGraphSite
        :param microsoft_graph_entity_id: Read-only.
        :type microsoft_graph_entity_id: str
        :param expiration_date_time: A format of yyyy-MM-ddTHH:mm:ssZ of DateTimeOffset indicates the
         expiration time of the permission. DateTime.MinValue indicates there is no expiration set for
         this permission. Optional.
        :type expiration_date_time: ~datetime.datetime
        :param granted_to_identities: For link type permissions, the details of the users to whom
         permission was granted. Read-only.
        :type granted_to_identities: list[~files.models.MicrosoftGraphIdentitySet]
        :param has_password: This indicates whether password is set for this permission, it's only
         showing in response. Optional and Read-only and for OneDrive Personal only.
        :type has_password: bool
        :param roles: The type of permission, e.g. read. See below for the full list of roles. Read-
         only.
        :type roles: list[str]
        :param microsoft_graph_permission_share_id: A unique token that can be used to access this
         shared item via the **shares** API. Read-only.
        :type microsoft_graph_permission_share_id: str
        :param application: identity.
        :type application: ~files.models.MicrosoftGraphIdentity
        :param configurator_url:
        :type configurator_url: str
        :param prevents_download: If true then the user can only use this link to view the item on the
         web, and cannot use it to download the contents of the item. Only for OneDrive for Business and
         SharePoint.
        :type prevents_download: bool
        :param scope: The scope of the link represented by this permission. Value anonymous indicates
         the link is usable by anyone, organization indicates the link is only usable for users signed
         into the same tenant.
        :type scope: str
        :param type: The type of the link created.
        :type type: str
        :param web_html: For embed links, this property contains the HTML code for an :code:`<iframe>`
         element that will embed the item in a webpage.
        :type web_html: str
        :param microsoft_graph_sharing_link_web_url: A URL that opens the item in the browser on the
         OneDrive website.
        :type microsoft_graph_sharing_link_web_url: str
        :param email: The email address provided for the recipient of the sharing invitation. Read-
         only.
        :type email: str
        :param invited_by: identitySet.
        :type invited_by: ~files.models.MicrosoftGraphIdentitySet
        :param redeemed_by:
        :type redeemed_by: str
        :param sign_in_required: If true the recipient of the invitation needs to sign in in order to
         access the shared item. Read-only.
        :type sign_in_required: bool
        :param microsoft_graph_item_reference_drive_id: Unique identifier of the drive instance that
         contains the item. Read-only.
        :type microsoft_graph_item_reference_drive_id: str
        :param microsoft_graph_item_reference_drive_type: Identifies the type of drive. See [drive][]
         resource for values.
        :type microsoft_graph_item_reference_drive_type: str
        :param id6: Unique identifier of the item in the drive. Read-only.
        :type id6: str
        :param name1: The name of the item being referenced. Read-only.
        :type name1: str
        :param microsoft_graph_item_reference_path: Path that can be used to navigate to the item.
         Read-only.
        :type microsoft_graph_item_reference_path: str
        :param microsoft_graph_item_reference_share_id: A unique identifier for a shared resource that
         can be accessed via the [Shares][] API.
        :type microsoft_graph_item_reference_share_id: str
        :param microsoft_graph_sharepoint_ids: sharepointIds.
        :type microsoft_graph_sharepoint_ids: ~files.models.MicrosoftGraphSharepointIds
        :param microsoft_graph_item_reference_site_id:
        :type microsoft_graph_item_reference_site_id: str
        :param display_name5: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name5: str
        :param id7: Unique identifier for the identity.
        :type id7: str
        :param display_name6: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name6: str
        :param id8: Unique identifier for the identity.
        :type id8: str
        :param display_name7: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name7: str
        :param id9: Unique identifier for the identity.
        :type id9: str
        :param id10: Read-only.
        :type id10: str
        :param microsoft_graph_base_item_created_date_time_created_date_time: Date and time of item
         creation. Read-only.
        :type microsoft_graph_base_item_created_date_time_created_date_time: ~datetime.datetime
        :param microsoft_graph_base_item_description: Provides a user-visible description of the item.
         Optional.
        :type microsoft_graph_base_item_description: str
        :param microsoft_graph_base_item_e_tag: ETag for the item. Read-only.
        :type microsoft_graph_base_item_e_tag: str
        :param microsoft_graph_base_item_last_modified_date_time_last_modified_date_time: Date and time
         the item was last modified. Read-only.
        :type microsoft_graph_base_item_last_modified_date_time_last_modified_date_time: ~datetime.datetime
        :param microsoft_graph_base_item_name: The name of the item. Read-write.
        :type microsoft_graph_base_item_name: str
        :param microsoft_graph_base_item_web_url: URL that displays the resource in the browser. Read-
         only.
        :type microsoft_graph_base_item_web_url: str
        :param microsoft_graph_user_created_by_user: Represents an Azure Active Directory user object.
        :type microsoft_graph_user_created_by_user: ~files.models.MicrosoftGraphUser
        :param microsoft_graph_user_last_modified_by_user: Represents an Azure Active Directory user
         object.
        :type microsoft_graph_user_last_modified_by_user: ~files.models.MicrosoftGraphUser
        :param drive_id1: Unique identifier of the drive instance that contains the item. Read-only.
        :type drive_id1: str
        :param drive_type1: Identifies the type of drive. See [drive][] resource for values.
        :type drive_type1: str
        :param id11: Unique identifier of the item in the drive. Read-only.
        :type id11: str
        :param name2: The name of the item being referenced. Read-only.
        :type name2: str
        :param path1: Path that can be used to navigate to the item. Read-only.
        :type path1: str
        :param share_id1: A unique identifier for a shared resource that can be accessed via the
         [Shares][] API.
        :type share_id1: str
        :param sharepoint_ids1: sharepointIds.
        :type sharepoint_ids1: ~files.models.MicrosoftGraphSharepointIds
        :param site_id1:
        :type site_id1: str
        :param display_name8: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name8: str
        :param id12: Unique identifier for the identity.
        :type id12: str
        :param display_name9: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name9: str
        :param id13: Unique identifier for the identity.
        :type id13: str
        :param display_name10: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name10: str
        :param id14: Unique identifier for the identity.
        :type id14: str
        :param display_name11: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name11: str
        :param id15: Unique identifier for the identity.
        :type id15: str
        :param display_name12: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name12: str
        :param id16: Unique identifier for the identity.
        :type id16: str
        :param display_name13: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name13: str
        :param id17: Unique identifier for the identity.
        :type id17: str
        :param microsoft_graph_list_display_name: The displayable title of the list.
        :type microsoft_graph_list_display_name: str
        :param list: listInfo.
        :type list: ~files.models.MicrosoftGraphListInfo
        :param sharepoint_ids2: sharepointIds.
        :type sharepoint_ids2: ~files.models.MicrosoftGraphSharepointIds
        :param system: systemFacet.
        :type system: dict[str, object]
        :param activities:
        :type activities: list[~files.models.MicrosoftGraphItemActivityOld]
        :param columns: The collection of field definitions for this list.
        :type columns: list[~files.models.MicrosoftGraphColumnDefinition]
        :param content_types: The collection of content types present in this list.
        :type content_types: list[~files.models.MicrosoftGraphContentType]
        :param drive: drive.
        :type drive: ~files.models.MicrosoftGraphDrive
        :param microsoft_graph_list_items: All items contained in the list.
        :type microsoft_graph_list_items: list[~files.models.MicrosoftGraphListItem]
        :param subscriptions: The set of subscriptions on the list.
        :type subscriptions: list[~files.models.MicrosoftGraphSubscription]
        :param display_name14: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name14: str
        :param id18: Unique identifier for the identity.
        :type id18: str
        :param display_name15: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name15: str
        :param id19: Unique identifier for the identity.
        :type id19: str
        :param display_name16: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name16: str
        :param id20: Unique identifier for the identity.
        :type id20: str
        :keyword callable cls: A custom type or function that will be passed the direct response
        :return: None, or the result of cls(response)
        :rtype: None
        :raises: ~azure.core.exceptions.HttpResponseError
        """
        cls = kwargs.pop('cls', None)  # type: ClsType[None]
        error_map = {404: ResourceNotFoundError, 409: ResourceExistsError}
        error_map.update(kwargs.pop('error_map', {}))

        _body = models.MicrosoftGraphSharedDriveItem(id=id, created_date_time=created_date_time, description=description, e_tag=e_tag, last_modified_date_time=last_modified_date_time, name=name, web_url=web_url, created_by_user=created_by_user, last_modified_by_user=last_modified_by_user, drive_id=drive_id, drive_type=drive_type, id_parent_reference_id=microsoft_graph_item_reference_id, name_parent_reference_name=microsoft_graph_item_reference_name, path=path, share_id=share_id, sharepoint_ids=sharepoint_ids, site_id=site_id, display_name_last_modified_by_user_display_name=display_name, id_last_modified_by_user_id=microsoft_graph_identity_id, display_name_last_modified_by_device_display_name=microsoft_graph_identity_display_name, id_last_modified_by_device_id=id1, display_name_last_modified_by_application_display_name=display_name1, id_last_modified_by_application_id=id2, display_name_created_by_user_display_name=display_name2, id_created_by_user_id=id3, display_name_created_by_device_display_name=display_name3, id_created_by_device_id=id4, display_name_created_by_application_display_name=display_name4, id_created_by_application_id=id5, drive_item=drive_item, items=items, list_item=list_item, root=root, site=site, id_permission_id=microsoft_graph_entity_id, expiration_date_time=expiration_date_time, granted_to_identities=granted_to_identities, has_password=has_password, roles=roles, share_id_permission_share_id=microsoft_graph_permission_share_id, application=application, configurator_url=configurator_url, prevents_download=prevents_download, scope=scope, type=type, web_html=web_html, web_url_permission_link_web_url=microsoft_graph_sharing_link_web_url, email=email, invited_by=invited_by, redeemed_by=redeemed_by, sign_in_required=sign_in_required, drive_id_permission_inherited_from_drive_id=microsoft_graph_item_reference_drive_id, drive_type_permission_inherited_from_drive_type=microsoft_graph_item_reference_drive_type, id_permission_inherited_from_id=id6, name_permission_inherited_from_name=name1, path_permission_inherited_from_path=microsoft_graph_item_reference_path, share_id_permission_inherited_from_share_id=microsoft_graph_item_reference_share_id, sharepoint_ids_permission_inherited_from_sharepoint_ids=microsoft_graph_sharepoint_ids, site_id_permission_inherited_from_site_id=microsoft_graph_item_reference_site_id, display_name_permission_granted_to_user_display_name=display_name5, id_permission_granted_to_user_id=id7, display_name_permission_granted_to_device_display_name=display_name6, id_permission_granted_to_device_id=id8, display_name_permission_granted_to_application_display_name=display_name7, id_permission_granted_to_application_id=id9, id_list_id=id10, created_date_time_list_created_date_time=microsoft_graph_base_item_created_date_time_created_date_time, description_list_description=microsoft_graph_base_item_description, e_tag_list_e_tag=microsoft_graph_base_item_e_tag, last_modified_date_time_list_last_modified_date_time=microsoft_graph_base_item_last_modified_date_time_last_modified_date_time, name_list_name=microsoft_graph_base_item_name, web_url_list_web_url=microsoft_graph_base_item_web_url, created_by_user_list_created_by_user=microsoft_graph_user_created_by_user, last_modified_by_user_list_last_modified_by_user=microsoft_graph_user_last_modified_by_user, drive_id_list_parent_reference_drive_id=drive_id1, drive_type_list_parent_reference_drive_type=drive_type1, id_list_parent_reference_id=id11, name_list_parent_reference_name=name2, path_list_parent_reference_path=path1, share_id_list_parent_reference_share_id=share_id1, sharepoint_ids_list_parent_reference_sharepoint_ids=sharepoint_ids1, site_id_list_parent_reference_site_id=site_id1, display_name_list_last_modified_by_user_display_name=display_name8, id_list_last_modified_by_user_id=id12, display_name_list_last_modified_by_device_display_name=display_name9, id_list_last_modified_by_device_id=id13, display_name_list_last_modified_by_application_display_name=display_name10, id_list_last_modified_by_application_id=id14, display_name_list_created_by_user_display_name=display_name11, id_list_created_by_user_id=id15, display_name_list_created_by_device_display_name=display_name12, id_list_created_by_device_id=id16, display_name_list_created_by_application_display_name=display_name13, id_list_created_by_application_id=id17, display_name_list_display_name=microsoft_graph_list_display_name, list=list, sharepoint_ids_list_sharepoint_ids=sharepoint_ids2, system=system, activities=activities, columns=columns, content_types=content_types, drive=drive, items_list_items=microsoft_graph_list_items, subscriptions=subscriptions, display_name_owner_user_display_name=display_name14, id_owner_user_id=id18, display_name_owner_device_display_name=display_name15, id_owner_device_id=id19, display_name_owner_application_display_name=display_name16, id_owner_application_id=id20)
        content_type = kwargs.pop("content_type", "application/json")
        accept = "application/json"

        # Construct URL
        url = self.update_shared_drive_item.metadata['url']  # type: ignore
        path_format_arguments = {
            'sharedDriveItem-id': self._serialize.url("shared_drive_item_id", shared_drive_item_id, 'str'),
        }
        url = self._client.format_url(url, **path_format_arguments)

        # Construct parameters
        query_parameters = {}  # type: Dict[str, Any]

        # Construct headers
        header_parameters = {}  # type: Dict[str, Any]
        header_parameters['Content-Type'] = self._serialize.header("content_type", content_type, 'str')
        header_parameters['Accept'] = self._serialize.header("accept", accept, 'str')

        body_content_kwargs = {}  # type: Dict[str, Any]
        body_content = self._serialize.body(_body, 'MicrosoftGraphSharedDriveItem')
        body_content_kwargs['content'] = body_content
        request = self._client.patch(url, query_parameters, header_parameters, **body_content_kwargs)

        pipeline_response = self._client._pipeline.run(request, stream=False, **kwargs)
        response = pipeline_response.http_response

        if response.status_code not in [204]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            error = self._deserialize(models.OdataError, response)
            raise HttpResponseError(response=response, model=error, error_format=ARMErrorFormat)

        if cls:
            return cls(pipeline_response, None, {})

    update_shared_drive_item.metadata = {'url': '/shares/{sharedDriveItem-id}'}  # type: ignore

    def delete_shared_drive_item(
        self,
        shared_drive_item_id,  # type: str
        if_match=None,  # type: Optional[str]
        **kwargs  # type: Any
    ):
        # type: (...) -> None
        """Delete entity from shares.

        Delete entity from shares.

        :param shared_drive_item_id: key: id of sharedDriveItem.
        :type shared_drive_item_id: str
        :param if_match: ETag.
        :type if_match: str
        :keyword callable cls: A custom type or function that will be passed the direct response
        :return: None, or the result of cls(response)
        :rtype: None
        :raises: ~azure.core.exceptions.HttpResponseError
        """
        cls = kwargs.pop('cls', None)  # type: ClsType[None]
        error_map = {404: ResourceNotFoundError, 409: ResourceExistsError}
        error_map.update(kwargs.pop('error_map', {}))
        accept = "application/json"

        # Construct URL
        url = self.delete_shared_drive_item.metadata['url']  # type: ignore
        path_format_arguments = {
            'sharedDriveItem-id': self._serialize.url("shared_drive_item_id", shared_drive_item_id, 'str'),
        }
        url = self._client.format_url(url, **path_format_arguments)

        # Construct parameters
        query_parameters = {}  # type: Dict[str, Any]

        # Construct headers
        header_parameters = {}  # type: Dict[str, Any]
        if if_match is not None:
            header_parameters['If-Match'] = self._serialize.header("if_match", if_match, 'str')
        header_parameters['Accept'] = self._serialize.header("accept", accept, 'str')

        request = self._client.delete(url, query_parameters, header_parameters)
        pipeline_response = self._client._pipeline.run(request, stream=False, **kwargs)
        response = pipeline_response.http_response

        if response.status_code not in [204]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            error = self._deserialize(models.OdataError, response)
            raise HttpResponseError(response=response, model=error, error_format=ARMErrorFormat)

        if cls:
            return cls(pipeline_response, None, {})

    delete_shared_drive_item.metadata = {'url': '/shares/{sharedDriveItem-id}'}  # type: ignore
