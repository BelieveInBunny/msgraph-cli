# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=too-many-lines
# pylint: disable=too-many-statements

from msgraph.cli.core.commands.parameters import (
    get_three_state_flag,
    get_location_type
)
from msgraph.cli.core.commands.validators import validate_file_or_dict
from azext_files_beta.action import (
    AddParentReferenceSharepointIds,
    AddLastModifiedByApplication,
    AddListList,
    AddFilesDriveUpdateListSubscriptions,
    AddQuotaStoragePlanInformation,
    AddAudio,
    AddFileSystemInfo,
    AddImage,
    AddPhoto,
    AddPublication,
    AddVideo,
    AddFilesDriveCreateBundleSubscriptions,
    AddDrivesVersions,
    AddWorkbookApplication,
    AddWorkbookComments,
    AddWorkbookFunctions,
    AddRemoteItemPackage,
    AddRemoteItemSpecialFolder,
    AddFolderView,
    AddFileHashes,
    AddBundleAlbum,
    AddContentType,
    AddDrivesActivitiesVersions,
    AddDrivesActivitiesListitemRecipients,
    AddCalculated,
    AddChoice,
    AddDateTime,
    AddDefaultValue,
    AddLookup,
    AddNumber,
    AddPersonOrGroup,
    AddText,
    AddOrder,
    AddColumnLinks,
    AddDrivesListActivitiesListitemRecipients,
    AddDrivesListItemsRecipients,
    AddDrivesListItemsActivitiesListitemRecipients,
    AddOnenoteResources,
    AddSharesListActivitiesListitemRecipients,
    AddSharesListItemsRecipients,
    AddSharesListItemsActivitiesListitemRecipients,
    AddSharesListitemRecipients,
    AddSharesListitemActivitiesListitemRecipients,
    AddSharesPermissionRecipients,
    AddGrantees
)


def load_arguments(self, _):

    with self.argument_context('files drive-drive delete') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('files drive-drive create-drive') as c:
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_date_time', help='Date and time of item creation. Read-only.')
        c.argument('description', type=str, help='Provides a user-visible description of the item. Optional.')
        c.argument('e_tag', type=str, help='ETag for the item. Read-only.')
        c.argument('last_modified_date_time', help='Date and time the item was last modified. Read-only.')
        c.argument('name', type=str, help='The name of the item. Read-write.')
        c.argument('web_url', type=str, help='URL that displays the resource in the browser. Read-only.')
        c.argument('created_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory user '
                   'object. Expected value: json-string/@json-file.')
        c.argument('last_modified_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory '
                   'user object. Expected value: json-string/@json-file.')
        c.argument('parent_reference_drive_id', type=str, help='Unique identifier of the drive instance that contains '
                   'the item. Read-only.')
        c.argument('parent_reference_drive_type', type=str, help='Identifies the type of drive. See [drive][] resource '
                   'for values.')
        c.argument('parent_reference_id', type=str, help='Unique identifier of the item in the drive. Read-only.')
        c.argument('parent_reference_name', type=str, help='The name of the item being referenced. Read-only.')
        c.argument('parent_reference_path', type=str,
                   help='Path that can be used to navigate to the item. Read-only.')
        c.argument('parent_reference_share_id', type=str, help='A unique identifier for a shared resource that can be '
                   'accessed via the [Shares][] API.')
        c.argument('parent_reference_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('parent_reference_site_id', type=str, help='')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('microsoft_graph_identity_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('microsoft_graph_drive_type', type=str, help='Describes the type of drive represented by this '
                   'resource. OneDrive personal drives will return personal. OneDrive for Business will return '
                   'business. SharePoint document libraries will return documentLibrary. Read-only.')
        c.argument('share_point_ids', action=AddParentReferenceSharepointIds, nargs='*', help='sharepointIds')
        c.argument('system', type=validate_file_or_dict, help='systemFacet Expected value: json-string/@json-file.')
        c.argument('activities', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('bundles', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('following', type=validate_file_or_dict, help='The list of items the user is following. Only in '
                   'OneDrive for Business. Expected value: json-string/@json-file.')
        c.argument('items', type=validate_file_or_dict, help='All items contained in the drive. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('root', type=validate_file_or_dict, help='driveItem Expected value: json-string/@json-file.')
        c.argument('special', type=validate_file_or_dict, help='Collection of common folders available in OneDrive. '
                   'Read-only. Nullable. Expected value: json-string/@json-file.')
        c.argument('list_id', type=str, help='Read-only.')
        c.argument('list_created_date_time', help='Date and time of item creation. Read-only.')
        c.argument('list_description', type=str, help='Provides a user-visible description of the item. Optional.')
        c.argument('list_e_tag', type=str, help='ETag for the item. Read-only.')
        c.argument('list_last_modified_date_time', help='Date and time the item was last modified. Read-only.')
        c.argument('list_name', type=str, help='The name of the item. Read-write.')
        c.argument('list_web_url', type=str, help='URL that displays the resource in the browser. Read-only.')
        c.argument('list_created_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory user '
                   'object. Expected value: json-string/@json-file.')
        c.argument('list_last_modified_by_user', type=validate_file_or_dict, help='Represents an Azure Active '
                   'Directory user object. Expected value: json-string/@json-file.')
        c.argument('list_parent_reference_drive_id', type=str, help='Unique identifier of the drive instance that '
                   'contains the item. Read-only.')
        c.argument('list_parent_reference_drive_type', type=str, help='Identifies the type of drive. See [drive][] '
                   'resource for values.')
        c.argument('list_parent_reference_id', type=str,
                   help='Unique identifier of the item in the drive. Read-only.')
        c.argument('list_parent_reference_name', type=str, help='The name of the item being referenced. Read-only.')
        c.argument('list_parent_reference_path', type=str, help='Path that can be used to navigate to the item. '
                   'Read-only.')
        c.argument('list_parent_reference_share_id', type=str, help='A unique identifier for a shared resource that '
                   'can be accessed via the [Shares][] API.')
        c.argument('list_parent_reference_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('list_parent_reference_site_id', type=str, help='')
        c.argument('list_last_modified_by_application', action=AddLastModifiedByApplication, nargs='*',
                   help='identity')
        c.argument('list_last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('user1', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('list_created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('list_created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('user2', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('list_display_name', type=str, help='The displayable title of the list.')
        c.argument('list_list', action=AddListList, nargs='*', help='listInfo')
        c.argument('list_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help='sharepointIds')
        c.argument('list_system', type=validate_file_or_dict, help='systemFacet Expected value: '
                   'json-string/@json-file.')
        c.argument('list_activities', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('list_columns', type=validate_file_or_dict, help='The collection of field definitions for this '
                   'list. Expected value: json-string/@json-file.')
        c.argument('list_content_types', type=validate_file_or_dict, help='The collection of content types present in '
                   'this list. Expected value: json-string/@json-file.')
        c.argument('list_drive', type=validate_file_or_dict, help='drive Expected value: json-string/@json-file.')
        c.argument('list_items', type=validate_file_or_dict, help='All items contained in the list. Expected value: '
                   'json-string/@json-file.')
        c.argument('list_subscriptions', action=AddFilesDriveUpdateListSubscriptions, nargs='*', help='The set of '
                   'subscriptions on the list.')
        c.argument('quota_deleted', type=int, help='Total space consumed by files in the recycle bin, in bytes. '
                   'Read-only.')
        c.argument('quota_remaining', type=int, help='Total space remaining before reaching the quota limit, in bytes. '
                   'Read-only.')
        c.argument('quota_state', type=str, help='Enumeration value that indicates the state of the storage space. '
                   'Read-only.')
        c.argument('quota_storage_plan_information', action=AddQuotaStoragePlanInformation, nargs='*', help=''
                   'storagePlanInformation')
        c.argument('quota_total', type=int, help='Total allowed storage space, in bytes. Read-only.')
        c.argument('quota_used', type=int, help='Total space used, in bytes. Read-only.')
        c.argument('owner_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('owner_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('owner_user', action=AddLastModifiedByApplication, nargs='*', help='identity')

    with self.argument_context('files drive-drive get-drive') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files drive-drive list-drive') as c:
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files drive-drive update-drive') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_date_time', help='Date and time of item creation. Read-only.')
        c.argument('description', type=str, help='Provides a user-visible description of the item. Optional.')
        c.argument('e_tag', type=str, help='ETag for the item. Read-only.')
        c.argument('last_modified_date_time', help='Date and time the item was last modified. Read-only.')
        c.argument('name', type=str, help='The name of the item. Read-write.')
        c.argument('web_url', type=str, help='URL that displays the resource in the browser. Read-only.')
        c.argument('created_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory user '
                   'object. Expected value: json-string/@json-file.')
        c.argument('last_modified_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory '
                   'user object. Expected value: json-string/@json-file.')
        c.argument('parent_reference_drive_id', type=str, help='Unique identifier of the drive instance that contains '
                   'the item. Read-only.')
        c.argument('parent_reference_drive_type', type=str, help='Identifies the type of drive. See [drive][] resource '
                   'for values.')
        c.argument('parent_reference_id', type=str, help='Unique identifier of the item in the drive. Read-only.')
        c.argument('parent_reference_name', type=str, help='The name of the item being referenced. Read-only.')
        c.argument('parent_reference_path', type=str,
                   help='Path that can be used to navigate to the item. Read-only.')
        c.argument('parent_reference_share_id', type=str, help='A unique identifier for a shared resource that can be '
                   'accessed via the [Shares][] API.')
        c.argument('parent_reference_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('parent_reference_site_id', type=str, help='')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('microsoft_graph_identity_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('microsoft_graph_drive_type', type=str, help='Describes the type of drive represented by this '
                   'resource. OneDrive personal drives will return personal. OneDrive for Business will return '
                   'business. SharePoint document libraries will return documentLibrary. Read-only.')
        c.argument('share_point_ids', action=AddParentReferenceSharepointIds, nargs='*', help='sharepointIds')
        c.argument('system', type=validate_file_or_dict, help='systemFacet Expected value: json-string/@json-file.')
        c.argument('activities', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('bundles', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('following', type=validate_file_or_dict, help='The list of items the user is following. Only in '
                   'OneDrive for Business. Expected value: json-string/@json-file.')
        c.argument('items', type=validate_file_or_dict, help='All items contained in the drive. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('root', type=validate_file_or_dict, help='driveItem Expected value: json-string/@json-file.')
        c.argument('special', type=validate_file_or_dict, help='Collection of common folders available in OneDrive. '
                   'Read-only. Nullable. Expected value: json-string/@json-file.')
        c.argument('list_id', type=str, help='Read-only.')
        c.argument('list_created_date_time', help='Date and time of item creation. Read-only.')
        c.argument('list_description', type=str, help='Provides a user-visible description of the item. Optional.')
        c.argument('list_e_tag', type=str, help='ETag for the item. Read-only.')
        c.argument('list_last_modified_date_time', help='Date and time the item was last modified. Read-only.')
        c.argument('list_name', type=str, help='The name of the item. Read-write.')
        c.argument('list_web_url', type=str, help='URL that displays the resource in the browser. Read-only.')
        c.argument('list_created_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory user '
                   'object. Expected value: json-string/@json-file.')
        c.argument('list_last_modified_by_user', type=validate_file_or_dict, help='Represents an Azure Active '
                   'Directory user object. Expected value: json-string/@json-file.')
        c.argument('list_parent_reference_drive_id', type=str, help='Unique identifier of the drive instance that '
                   'contains the item. Read-only.')
        c.argument('list_parent_reference_drive_type', type=str, help='Identifies the type of drive. See [drive][] '
                   'resource for values.')
        c.argument('list_parent_reference_id', type=str,
                   help='Unique identifier of the item in the drive. Read-only.')
        c.argument('list_parent_reference_name', type=str, help='The name of the item being referenced. Read-only.')
        c.argument('list_parent_reference_path', type=str, help='Path that can be used to navigate to the item. '
                   'Read-only.')
        c.argument('list_parent_reference_share_id', type=str, help='A unique identifier for a shared resource that '
                   'can be accessed via the [Shares][] API.')
        c.argument('list_parent_reference_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('list_parent_reference_site_id', type=str, help='')
        c.argument('list_last_modified_by_application', action=AddLastModifiedByApplication, nargs='*',
                   help='identity')
        c.argument('list_last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('user1', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('list_created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('list_created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('user2', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('list_display_name', type=str, help='The displayable title of the list.')
        c.argument('list_list', action=AddListList, nargs='*', help='listInfo')
        c.argument('list_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help='sharepointIds')
        c.argument('list_system', type=validate_file_or_dict, help='systemFacet Expected value: '
                   'json-string/@json-file.')
        c.argument('list_activities', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('list_columns', type=validate_file_or_dict, help='The collection of field definitions for this '
                   'list. Expected value: json-string/@json-file.')
        c.argument('list_content_types', type=validate_file_or_dict, help='The collection of content types present in '
                   'this list. Expected value: json-string/@json-file.')
        c.argument('list_drive', type=validate_file_or_dict, help='drive Expected value: json-string/@json-file.')
        c.argument('list_items', type=validate_file_or_dict, help='All items contained in the list. Expected value: '
                   'json-string/@json-file.')
        c.argument('list_subscriptions', action=AddFilesDriveUpdateListSubscriptions, nargs='*', help='The set of '
                   'subscriptions on the list.')
        c.argument('quota_deleted', type=int, help='Total space consumed by files in the recycle bin, in bytes. '
                   'Read-only.')
        c.argument('quota_remaining', type=int, help='Total space remaining before reaching the quota limit, in bytes. '
                   'Read-only.')
        c.argument('quota_state', type=str, help='Enumeration value that indicates the state of the storage space. '
                   'Read-only.')
        c.argument('quota_storage_plan_information', action=AddQuotaStoragePlanInformation, nargs='*', help=''
                   'storagePlanInformation')
        c.argument('quota_total', type=int, help='Total allowed storage space, in bytes. Read-only.')
        c.argument('quota_used', type=int, help='Total space used, in bytes. Read-only.')
        c.argument('owner_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('owner_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('owner_user', action=AddLastModifiedByApplication, nargs='*', help='identity')

    with self.argument_context('files drive delete') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('if_match', type=str, help='ETag')
        c.argument('drive_item_id', type=str, help='key: id of driveItem')

    with self.argument_context('files drive create-activity') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('files drive create-bundle') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_date_time', help='Date and time of item creation. Read-only.')
        c.argument('description', type=str, help='Provides a user-visible description of the item. Optional.')
        c.argument('e_tag', type=str, help='ETag for the item. Read-only.')
        c.argument('last_modified_date_time', help='Date and time the item was last modified. Read-only.')
        c.argument('name', type=str, help='The name of the item. Read-write.')
        c.argument('web_url', type=str, help='URL that displays the resource in the browser. Read-only.')
        c.argument('created_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory user '
                   'object. Expected value: json-string/@json-file.')
        c.argument('last_modified_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory '
                   'user object. Expected value: json-string/@json-file.')
        c.argument('parent_reference_drive_id', type=str, help='Unique identifier of the drive instance that contains '
                   'the item. Read-only.')
        c.argument('parent_reference_drive_type', type=str, help='Identifies the type of drive. See [drive][] resource '
                   'for values.')
        c.argument('parent_reference_id', type=str, help='Unique identifier of the item in the drive. Read-only.')
        c.argument('parent_reference_name', type=str, help='The name of the item being referenced. Read-only.')
        c.argument('parent_reference_path', type=str,
                   help='Path that can be used to navigate to the item. Read-only.')
        c.argument('parent_reference_share_id', type=str, help='A unique identifier for a shared resource that can be '
                   'accessed via the [Shares][] API.')
        c.argument('parent_reference_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('parent_reference_site_id', type=str, help='')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('microsoft_graph_identity_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('audio', action=AddAudio, nargs='*', help='audio')
        c.argument('content', help='The content stream, if the item represents a file.')
        c.argument('c_tag', type=str, help='An eTag for the content of the item. This eTag is not changed if only the '
                   'metadata is changed. Note This property is not returned if the item is a folder. Read-only.')
        c.argument('file_system_info', action=AddFileSystemInfo, nargs='*', help='fileSystemInfo')
        c.argument('image', action=AddImage, nargs='*', help='image')
        c.argument('location', arg_type=get_location_type(self.cli_ctx))
        c.argument('photo', action=AddPhoto, nargs='*', help='photo')
        c.argument('publication', action=AddPublication, nargs='*', help='publicationFacet')
        c.argument('root', type=validate_file_or_dict, help='root Expected value: json-string/@json-file.')
        c.argument('microsoft_graph_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('size', type=int, help='Size of the item in bytes. Read-only.')
        c.argument('video', action=AddVideo, nargs='*', help='video')
        c.argument('web_dav_url', type=str, help='WebDAV compatible URL for the item.')
        c.argument('activities', type=validate_file_or_dict, help='The list of recent activities that took place on '
                   'this item. Expected value: json-string/@json-file.')
        c.argument('analytics', type=validate_file_or_dict, help='itemAnalytics Expected value: '
                   'json-string/@json-file.')
        c.argument('children', type=validate_file_or_dict, help='Collection containing Item objects for the immediate '
                   'children of Item. Only items representing folders have children. Read-only. Nullable. Expected '
                   'value: json-string/@json-file.')
        c.argument('list_item', type=validate_file_or_dict, help='listItem Expected value: json-string/@json-file.')
        c.argument('permissions', type=validate_file_or_dict, help='The set of permissions for the item. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('subscriptions', action=AddFilesDriveCreateBundleSubscriptions, nargs='*', help='The set of '
                   'subscriptions on the item. Only supported on the root of a drive.')
        c.argument('thumbnails', type=validate_file_or_dict, help='Collection containing [ThumbnailSet][] objects '
                   'associated with the item. For more info, see [getting thumbnails][]. Read-only. Nullable. Expected '
                   'value: json-string/@json-file.')
        c.argument('versions', action=AddDrivesVersions, nargs='*', help='The list of previous versions of the item. '
                   'For more info, see [getting previous versions][]. Read-only. Nullable.')
        c.argument('workbook_id', type=str, help='Read-only.')
        c.argument('workbook_application', action=AddWorkbookApplication, nargs='*', help='workbookApplication')
        c.argument('workbook_comments', action=AddWorkbookComments, nargs='*', help='')
        c.argument('workbook_functions', action=AddWorkbookFunctions, nargs='*', help='workbookFunctions')
        c.argument('workbook_names', type=validate_file_or_dict, help='Represents a collection of workbook scoped '
                   'named items (named ranges and constants). Read-only. Expected value: json-string/@json-file.')
        c.argument('workbook_operations', type=validate_file_or_dict, help='The status of workbook operations. Getting '
                   'an operation collection is not supported, but you can get the status of a long-running operation '
                   'if the Location header is returned in the response. Read-only. Expected value: '
                   'json-string/@json-file.')
        c.argument('workbook_tables', type=validate_file_or_dict, help='Represents a collection of tables associated '
                   'with the workbook. Read-only. Expected value: json-string/@json-file.')
        c.argument('workbook_worksheets', type=validate_file_or_dict, help='Represents a collection of worksheets '
                   'associated with the workbook. Read-only. Expected value: json-string/@json-file.')
        c.argument('special_folder_name', type=str, help='The unique identifier for this item in the /drive/special '
                   'collection')
        c.argument('shared_owner', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('shared_scope', type=str, help='Indicates the scope of how the item is shared: anonymous, '
                   'organization, or users. Read-only.')
        c.argument('shared_shared_by', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('shared_shared_date_time', help='The UTC date and time when the item was shared. Read-only.')
        c.argument('search_result_on_click_telemetry_url', type=str, help='A callback URL that can be used to record '
                   'telemetry information. The application should issue a GET on this URL if the user interacts with '
                   'this item to improve the quality of results.')
        c.argument('remote_item_created_by', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_created_date_time', help='Date and time of item creation. Read-only.')
        c.argument('remote_item_file', type=validate_file_or_dict,
                   help='file Expected value: json-string/@json-file.')
        c.argument('remote_item_file_system_info', action=AddFileSystemInfo, nargs='*', help='fileSystemInfo')
        c.argument('remote_item_folder', type=validate_file_or_dict, help='folder Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_id', type=str, help='Unique identifier for the remote item in its drive. Read-only.')
        c.argument('remote_item_image', action=AddImage, nargs='*', help='image')
        c.argument('remote_item_last_modified_by', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_last_modified_date_time', help='Date and time the item was last modified. Read-only.')
        c.argument('remote_item_name', type=str, help='Optional. Filename of the remote item. Read-only.')
        c.argument('remote_item_package', action=AddRemoteItemPackage, nargs='*', help='package')
        c.argument('remote_item_parent_reference', type=validate_file_or_dict, help='itemReference Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_shared', type=validate_file_or_dict, help='shared Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('remote_item_size', type=int, help='Size of the remote item. Read-only.')
        c.argument('remote_item_special_folder', action=AddRemoteItemSpecialFolder, nargs='*', help='specialFolder')
        c.argument('remote_item_video', action=AddVideo, nargs='*', help='video')
        c.argument('remote_item_web_dav_url', type=str, help='DAV compatible URL for the item.')
        c.argument('remote_item_web_url', type=str, help='URL that displays the resource in the browser. Read-only.')
        c.argument('pending_operations_pending_content_update_queued_date_time', help='Date and time the pending '
                   'binary operation was queued in UTC time. Read-only.')
        c.argument('package_type', type=str, help='A string indicating the type of package. While oneNote is the only '
                   'currently defined value, you should expect other package types to be returned and handle them '
                   'accordingly.')
        c.argument('folder_child_count', type=int, help='Number of children contained immediately within this '
                   'container.')
        c.argument('folder_view', action=AddFolderView, nargs='*', help='folderView')
        c.argument('file_hashes', action=AddFileHashes, nargs='*', help='hashes')
        c.argument('file_mime_type', type=str, help='The MIME type for the file. This is determined by logic on the '
                   'server and might not be the value provided when the file was uploaded. Read-only.')
        c.argument('file_processing_metadata', arg_type=get_three_state_flag(), help='')
        c.argument('deleted_state', type=str, help='Represents the state of the deleted item.')
        c.argument('bundle_album', action=AddBundleAlbum, nargs='*', help='album')
        c.argument('bundle_child_count', type=int, help='')

    with self.argument_context('files drive create-following') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_date_time', help='Date and time of item creation. Read-only.')
        c.argument('description', type=str, help='Provides a user-visible description of the item. Optional.')
        c.argument('e_tag', type=str, help='ETag for the item. Read-only.')
        c.argument('last_modified_date_time', help='Date and time the item was last modified. Read-only.')
        c.argument('name', type=str, help='The name of the item. Read-write.')
        c.argument('web_url', type=str, help='URL that displays the resource in the browser. Read-only.')
        c.argument('created_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory user '
                   'object. Expected value: json-string/@json-file.')
        c.argument('last_modified_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory '
                   'user object. Expected value: json-string/@json-file.')
        c.argument('parent_reference_drive_id', type=str, help='Unique identifier of the drive instance that contains '
                   'the item. Read-only.')
        c.argument('parent_reference_drive_type', type=str, help='Identifies the type of drive. See [drive][] resource '
                   'for values.')
        c.argument('parent_reference_id', type=str, help='Unique identifier of the item in the drive. Read-only.')
        c.argument('parent_reference_name', type=str, help='The name of the item being referenced. Read-only.')
        c.argument('parent_reference_path', type=str,
                   help='Path that can be used to navigate to the item. Read-only.')
        c.argument('parent_reference_share_id', type=str, help='A unique identifier for a shared resource that can be '
                   'accessed via the [Shares][] API.')
        c.argument('parent_reference_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('parent_reference_site_id', type=str, help='')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('microsoft_graph_identity_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('audio', action=AddAudio, nargs='*', help='audio')
        c.argument('content', help='The content stream, if the item represents a file.')
        c.argument('c_tag', type=str, help='An eTag for the content of the item. This eTag is not changed if only the '
                   'metadata is changed. Note This property is not returned if the item is a folder. Read-only.')
        c.argument('file_system_info', action=AddFileSystemInfo, nargs='*', help='fileSystemInfo')
        c.argument('image', action=AddImage, nargs='*', help='image')
        c.argument('location', arg_type=get_location_type(self.cli_ctx))
        c.argument('photo', action=AddPhoto, nargs='*', help='photo')
        c.argument('publication', action=AddPublication, nargs='*', help='publicationFacet')
        c.argument('root', type=validate_file_or_dict, help='root Expected value: json-string/@json-file.')
        c.argument('microsoft_graph_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('size', type=int, help='Size of the item in bytes. Read-only.')
        c.argument('video', action=AddVideo, nargs='*', help='video')
        c.argument('web_dav_url', type=str, help='WebDAV compatible URL for the item.')
        c.argument('activities', type=validate_file_or_dict, help='The list of recent activities that took place on '
                   'this item. Expected value: json-string/@json-file.')
        c.argument('analytics', type=validate_file_or_dict, help='itemAnalytics Expected value: '
                   'json-string/@json-file.')
        c.argument('children', type=validate_file_or_dict, help='Collection containing Item objects for the immediate '
                   'children of Item. Only items representing folders have children. Read-only. Nullable. Expected '
                   'value: json-string/@json-file.')
        c.argument('list_item', type=validate_file_or_dict, help='listItem Expected value: json-string/@json-file.')
        c.argument('permissions', type=validate_file_or_dict, help='The set of permissions for the item. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('subscriptions', action=AddFilesDriveCreateBundleSubscriptions, nargs='*', help='The set of '
                   'subscriptions on the item. Only supported on the root of a drive.')
        c.argument('thumbnails', type=validate_file_or_dict, help='Collection containing [ThumbnailSet][] objects '
                   'associated with the item. For more info, see [getting thumbnails][]. Read-only. Nullable. Expected '
                   'value: json-string/@json-file.')
        c.argument('versions', action=AddDrivesVersions, nargs='*', help='The list of previous versions of the item. '
                   'For more info, see [getting previous versions][]. Read-only. Nullable.')
        c.argument('workbook_id', type=str, help='Read-only.')
        c.argument('workbook_application', action=AddWorkbookApplication, nargs='*', help='workbookApplication')
        c.argument('workbook_comments', action=AddWorkbookComments, nargs='*', help='')
        c.argument('workbook_functions', action=AddWorkbookFunctions, nargs='*', help='workbookFunctions')
        c.argument('workbook_names', type=validate_file_or_dict, help='Represents a collection of workbook scoped '
                   'named items (named ranges and constants). Read-only. Expected value: json-string/@json-file.')
        c.argument('workbook_operations', type=validate_file_or_dict, help='The status of workbook operations. Getting '
                   'an operation collection is not supported, but you can get the status of a long-running operation '
                   'if the Location header is returned in the response. Read-only. Expected value: '
                   'json-string/@json-file.')
        c.argument('workbook_tables', type=validate_file_or_dict, help='Represents a collection of tables associated '
                   'with the workbook. Read-only. Expected value: json-string/@json-file.')
        c.argument('workbook_worksheets', type=validate_file_or_dict, help='Represents a collection of worksheets '
                   'associated with the workbook. Read-only. Expected value: json-string/@json-file.')
        c.argument('special_folder_name', type=str, help='The unique identifier for this item in the /drive/special '
                   'collection')
        c.argument('shared_owner', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('shared_scope', type=str, help='Indicates the scope of how the item is shared: anonymous, '
                   'organization, or users. Read-only.')
        c.argument('shared_shared_by', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('shared_shared_date_time', help='The UTC date and time when the item was shared. Read-only.')
        c.argument('search_result_on_click_telemetry_url', type=str, help='A callback URL that can be used to record '
                   'telemetry information. The application should issue a GET on this URL if the user interacts with '
                   'this item to improve the quality of results.')
        c.argument('remote_item_created_by', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_created_date_time', help='Date and time of item creation. Read-only.')
        c.argument('remote_item_file', type=validate_file_or_dict,
                   help='file Expected value: json-string/@json-file.')
        c.argument('remote_item_file_system_info', action=AddFileSystemInfo, nargs='*', help='fileSystemInfo')
        c.argument('remote_item_folder', type=validate_file_or_dict, help='folder Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_id', type=str, help='Unique identifier for the remote item in its drive. Read-only.')
        c.argument('remote_item_image', action=AddImage, nargs='*', help='image')
        c.argument('remote_item_last_modified_by', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_last_modified_date_time', help='Date and time the item was last modified. Read-only.')
        c.argument('remote_item_name', type=str, help='Optional. Filename of the remote item. Read-only.')
        c.argument('remote_item_package', action=AddRemoteItemPackage, nargs='*', help='package')
        c.argument('remote_item_parent_reference', type=validate_file_or_dict, help='itemReference Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_shared', type=validate_file_or_dict, help='shared Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('remote_item_size', type=int, help='Size of the remote item. Read-only.')
        c.argument('remote_item_special_folder', action=AddRemoteItemSpecialFolder, nargs='*', help='specialFolder')
        c.argument('remote_item_video', action=AddVideo, nargs='*', help='video')
        c.argument('remote_item_web_dav_url', type=str, help='DAV compatible URL for the item.')
        c.argument('remote_item_web_url', type=str, help='URL that displays the resource in the browser. Read-only.')
        c.argument('pending_operations_pending_content_update_queued_date_time', help='Date and time the pending '
                   'binary operation was queued in UTC time. Read-only.')
        c.argument('package_type', type=str, help='A string indicating the type of package. While oneNote is the only '
                   'currently defined value, you should expect other package types to be returned and handle them '
                   'accordingly.')
        c.argument('folder_child_count', type=int, help='Number of children contained immediately within this '
                   'container.')
        c.argument('folder_view', action=AddFolderView, nargs='*', help='folderView')
        c.argument('file_hashes', action=AddFileHashes, nargs='*', help='hashes')
        c.argument('file_mime_type', type=str, help='The MIME type for the file. This is determined by logic on the '
                   'server and might not be the value provided when the file was uploaded. Read-only.')
        c.argument('file_processing_metadata', arg_type=get_three_state_flag(), help='')
        c.argument('deleted_state', type=str, help='Represents the state of the deleted item.')
        c.argument('bundle_album', action=AddBundleAlbum, nargs='*', help='album')
        c.argument('bundle_child_count', type=int, help='')

    with self.argument_context('files drive create-item') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_date_time', help='Date and time of item creation. Read-only.')
        c.argument('description', type=str, help='Provides a user-visible description of the item. Optional.')
        c.argument('e_tag', type=str, help='ETag for the item. Read-only.')
        c.argument('last_modified_date_time', help='Date and time the item was last modified. Read-only.')
        c.argument('name', type=str, help='The name of the item. Read-write.')
        c.argument('web_url', type=str, help='URL that displays the resource in the browser. Read-only.')
        c.argument('created_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory user '
                   'object. Expected value: json-string/@json-file.')
        c.argument('last_modified_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory '
                   'user object. Expected value: json-string/@json-file.')
        c.argument('parent_reference_drive_id', type=str, help='Unique identifier of the drive instance that contains '
                   'the item. Read-only.')
        c.argument('parent_reference_drive_type', type=str, help='Identifies the type of drive. See [drive][] resource '
                   'for values.')
        c.argument('parent_reference_id', type=str, help='Unique identifier of the item in the drive. Read-only.')
        c.argument('parent_reference_name', type=str, help='The name of the item being referenced. Read-only.')
        c.argument('parent_reference_path', type=str,
                   help='Path that can be used to navigate to the item. Read-only.')
        c.argument('parent_reference_share_id', type=str, help='A unique identifier for a shared resource that can be '
                   'accessed via the [Shares][] API.')
        c.argument('parent_reference_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('parent_reference_site_id', type=str, help='')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('microsoft_graph_identity_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('audio', action=AddAudio, nargs='*', help='audio')
        c.argument('content', help='The content stream, if the item represents a file.')
        c.argument('c_tag', type=str, help='An eTag for the content of the item. This eTag is not changed if only the '
                   'metadata is changed. Note This property is not returned if the item is a folder. Read-only.')
        c.argument('file_system_info', action=AddFileSystemInfo, nargs='*', help='fileSystemInfo')
        c.argument('image', action=AddImage, nargs='*', help='image')
        c.argument('location', arg_type=get_location_type(self.cli_ctx))
        c.argument('photo', action=AddPhoto, nargs='*', help='photo')
        c.argument('publication', action=AddPublication, nargs='*', help='publicationFacet')
        c.argument('root', type=validate_file_or_dict, help='root Expected value: json-string/@json-file.')
        c.argument('microsoft_graph_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('size', type=int, help='Size of the item in bytes. Read-only.')
        c.argument('video', action=AddVideo, nargs='*', help='video')
        c.argument('web_dav_url', type=str, help='WebDAV compatible URL for the item.')
        c.argument('activities', type=validate_file_or_dict, help='The list of recent activities that took place on '
                   'this item. Expected value: json-string/@json-file.')
        c.argument('analytics', type=validate_file_or_dict, help='itemAnalytics Expected value: '
                   'json-string/@json-file.')
        c.argument('children', type=validate_file_or_dict, help='Collection containing Item objects for the immediate '
                   'children of Item. Only items representing folders have children. Read-only. Nullable. Expected '
                   'value: json-string/@json-file.')
        c.argument('list_item', type=validate_file_or_dict, help='listItem Expected value: json-string/@json-file.')
        c.argument('permissions', type=validate_file_or_dict, help='The set of permissions for the item. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('subscriptions', action=AddFilesDriveCreateBundleSubscriptions, nargs='*', help='The set of '
                   'subscriptions on the item. Only supported on the root of a drive.')
        c.argument('thumbnails', type=validate_file_or_dict, help='Collection containing [ThumbnailSet][] objects '
                   'associated with the item. For more info, see [getting thumbnails][]. Read-only. Nullable. Expected '
                   'value: json-string/@json-file.')
        c.argument('versions', action=AddDrivesVersions, nargs='*', help='The list of previous versions of the item. '
                   'For more info, see [getting previous versions][]. Read-only. Nullable.')
        c.argument('workbook_id', type=str, help='Read-only.')
        c.argument('workbook_application', action=AddWorkbookApplication, nargs='*', help='workbookApplication')
        c.argument('workbook_comments', action=AddWorkbookComments, nargs='*', help='')
        c.argument('workbook_functions', action=AddWorkbookFunctions, nargs='*', help='workbookFunctions')
        c.argument('workbook_names', type=validate_file_or_dict, help='Represents a collection of workbook scoped '
                   'named items (named ranges and constants). Read-only. Expected value: json-string/@json-file.')
        c.argument('workbook_operations', type=validate_file_or_dict, help='The status of workbook operations. Getting '
                   'an operation collection is not supported, but you can get the status of a long-running operation '
                   'if the Location header is returned in the response. Read-only. Expected value: '
                   'json-string/@json-file.')
        c.argument('workbook_tables', type=validate_file_or_dict, help='Represents a collection of tables associated '
                   'with the workbook. Read-only. Expected value: json-string/@json-file.')
        c.argument('workbook_worksheets', type=validate_file_or_dict, help='Represents a collection of worksheets '
                   'associated with the workbook. Read-only. Expected value: json-string/@json-file.')
        c.argument('special_folder_name', type=str, help='The unique identifier for this item in the /drive/special '
                   'collection')
        c.argument('shared_owner', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('shared_scope', type=str, help='Indicates the scope of how the item is shared: anonymous, '
                   'organization, or users. Read-only.')
        c.argument('shared_shared_by', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('shared_shared_date_time', help='The UTC date and time when the item was shared. Read-only.')
        c.argument('search_result_on_click_telemetry_url', type=str, help='A callback URL that can be used to record '
                   'telemetry information. The application should issue a GET on this URL if the user interacts with '
                   'this item to improve the quality of results.')
        c.argument('remote_item_created_by', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_created_date_time', help='Date and time of item creation. Read-only.')
        c.argument('remote_item_file', type=validate_file_or_dict,
                   help='file Expected value: json-string/@json-file.')
        c.argument('remote_item_file_system_info', action=AddFileSystemInfo, nargs='*', help='fileSystemInfo')
        c.argument('remote_item_folder', type=validate_file_or_dict, help='folder Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_id', type=str, help='Unique identifier for the remote item in its drive. Read-only.')
        c.argument('remote_item_image', action=AddImage, nargs='*', help='image')
        c.argument('remote_item_last_modified_by', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_last_modified_date_time', help='Date and time the item was last modified. Read-only.')
        c.argument('remote_item_name', type=str, help='Optional. Filename of the remote item. Read-only.')
        c.argument('remote_item_package', action=AddRemoteItemPackage, nargs='*', help='package')
        c.argument('remote_item_parent_reference', type=validate_file_or_dict, help='itemReference Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_shared', type=validate_file_or_dict, help='shared Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('remote_item_size', type=int, help='Size of the remote item. Read-only.')
        c.argument('remote_item_special_folder', action=AddRemoteItemSpecialFolder, nargs='*', help='specialFolder')
        c.argument('remote_item_video', action=AddVideo, nargs='*', help='video')
        c.argument('remote_item_web_dav_url', type=str, help='DAV compatible URL for the item.')
        c.argument('remote_item_web_url', type=str, help='URL that displays the resource in the browser. Read-only.')
        c.argument('pending_operations_pending_content_update_queued_date_time', help='Date and time the pending '
                   'binary operation was queued in UTC time. Read-only.')
        c.argument('package_type', type=str, help='A string indicating the type of package. While oneNote is the only '
                   'currently defined value, you should expect other package types to be returned and handle them '
                   'accordingly.')
        c.argument('folder_child_count', type=int, help='Number of children contained immediately within this '
                   'container.')
        c.argument('folder_view', action=AddFolderView, nargs='*', help='folderView')
        c.argument('file_hashes', action=AddFileHashes, nargs='*', help='hashes')
        c.argument('file_mime_type', type=str, help='The MIME type for the file. This is determined by logic on the '
                   'server and might not be the value provided when the file was uploaded. Read-only.')
        c.argument('file_processing_metadata', arg_type=get_three_state_flag(), help='')
        c.argument('deleted_state', type=str, help='Represents the state of the deleted item.')
        c.argument('bundle_album', action=AddBundleAlbum, nargs='*', help='album')
        c.argument('bundle_child_count', type=int, help='')

    with self.argument_context('files drive create-special') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_date_time', help='Date and time of item creation. Read-only.')
        c.argument('description', type=str, help='Provides a user-visible description of the item. Optional.')
        c.argument('e_tag', type=str, help='ETag for the item. Read-only.')
        c.argument('last_modified_date_time', help='Date and time the item was last modified. Read-only.')
        c.argument('name', type=str, help='The name of the item. Read-write.')
        c.argument('web_url', type=str, help='URL that displays the resource in the browser. Read-only.')
        c.argument('created_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory user '
                   'object. Expected value: json-string/@json-file.')
        c.argument('last_modified_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory '
                   'user object. Expected value: json-string/@json-file.')
        c.argument('parent_reference_drive_id', type=str, help='Unique identifier of the drive instance that contains '
                   'the item. Read-only.')
        c.argument('parent_reference_drive_type', type=str, help='Identifies the type of drive. See [drive][] resource '
                   'for values.')
        c.argument('parent_reference_id', type=str, help='Unique identifier of the item in the drive. Read-only.')
        c.argument('parent_reference_name', type=str, help='The name of the item being referenced. Read-only.')
        c.argument('parent_reference_path', type=str,
                   help='Path that can be used to navigate to the item. Read-only.')
        c.argument('parent_reference_share_id', type=str, help='A unique identifier for a shared resource that can be '
                   'accessed via the [Shares][] API.')
        c.argument('parent_reference_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('parent_reference_site_id', type=str, help='')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('microsoft_graph_identity_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('audio', action=AddAudio, nargs='*', help='audio')
        c.argument('content', help='The content stream, if the item represents a file.')
        c.argument('c_tag', type=str, help='An eTag for the content of the item. This eTag is not changed if only the '
                   'metadata is changed. Note This property is not returned if the item is a folder. Read-only.')
        c.argument('file_system_info', action=AddFileSystemInfo, nargs='*', help='fileSystemInfo')
        c.argument('image', action=AddImage, nargs='*', help='image')
        c.argument('location', arg_type=get_location_type(self.cli_ctx))
        c.argument('photo', action=AddPhoto, nargs='*', help='photo')
        c.argument('publication', action=AddPublication, nargs='*', help='publicationFacet')
        c.argument('root', type=validate_file_or_dict, help='root Expected value: json-string/@json-file.')
        c.argument('microsoft_graph_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('size', type=int, help='Size of the item in bytes. Read-only.')
        c.argument('video', action=AddVideo, nargs='*', help='video')
        c.argument('web_dav_url', type=str, help='WebDAV compatible URL for the item.')
        c.argument('activities', type=validate_file_or_dict, help='The list of recent activities that took place on '
                   'this item. Expected value: json-string/@json-file.')
        c.argument('analytics', type=validate_file_or_dict, help='itemAnalytics Expected value: '
                   'json-string/@json-file.')
        c.argument('children', type=validate_file_or_dict, help='Collection containing Item objects for the immediate '
                   'children of Item. Only items representing folders have children. Read-only. Nullable. Expected '
                   'value: json-string/@json-file.')
        c.argument('list_item', type=validate_file_or_dict, help='listItem Expected value: json-string/@json-file.')
        c.argument('permissions', type=validate_file_or_dict, help='The set of permissions for the item. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('subscriptions', action=AddFilesDriveCreateBundleSubscriptions, nargs='*', help='The set of '
                   'subscriptions on the item. Only supported on the root of a drive.')
        c.argument('thumbnails', type=validate_file_or_dict, help='Collection containing [ThumbnailSet][] objects '
                   'associated with the item. For more info, see [getting thumbnails][]. Read-only. Nullable. Expected '
                   'value: json-string/@json-file.')
        c.argument('versions', action=AddDrivesVersions, nargs='*', help='The list of previous versions of the item. '
                   'For more info, see [getting previous versions][]. Read-only. Nullable.')
        c.argument('workbook_id', type=str, help='Read-only.')
        c.argument('workbook_application', action=AddWorkbookApplication, nargs='*', help='workbookApplication')
        c.argument('workbook_comments', action=AddWorkbookComments, nargs='*', help='')
        c.argument('workbook_functions', action=AddWorkbookFunctions, nargs='*', help='workbookFunctions')
        c.argument('workbook_names', type=validate_file_or_dict, help='Represents a collection of workbook scoped '
                   'named items (named ranges and constants). Read-only. Expected value: json-string/@json-file.')
        c.argument('workbook_operations', type=validate_file_or_dict, help='The status of workbook operations. Getting '
                   'an operation collection is not supported, but you can get the status of a long-running operation '
                   'if the Location header is returned in the response. Read-only. Expected value: '
                   'json-string/@json-file.')
        c.argument('workbook_tables', type=validate_file_or_dict, help='Represents a collection of tables associated '
                   'with the workbook. Read-only. Expected value: json-string/@json-file.')
        c.argument('workbook_worksheets', type=validate_file_or_dict, help='Represents a collection of worksheets '
                   'associated with the workbook. Read-only. Expected value: json-string/@json-file.')
        c.argument('special_folder_name', type=str, help='The unique identifier for this item in the /drive/special '
                   'collection')
        c.argument('shared_owner', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('shared_scope', type=str, help='Indicates the scope of how the item is shared: anonymous, '
                   'organization, or users. Read-only.')
        c.argument('shared_shared_by', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('shared_shared_date_time', help='The UTC date and time when the item was shared. Read-only.')
        c.argument('search_result_on_click_telemetry_url', type=str, help='A callback URL that can be used to record '
                   'telemetry information. The application should issue a GET on this URL if the user interacts with '
                   'this item to improve the quality of results.')
        c.argument('remote_item_created_by', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_created_date_time', help='Date and time of item creation. Read-only.')
        c.argument('remote_item_file', type=validate_file_or_dict,
                   help='file Expected value: json-string/@json-file.')
        c.argument('remote_item_file_system_info', action=AddFileSystemInfo, nargs='*', help='fileSystemInfo')
        c.argument('remote_item_folder', type=validate_file_or_dict, help='folder Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_id', type=str, help='Unique identifier for the remote item in its drive. Read-only.')
        c.argument('remote_item_image', action=AddImage, nargs='*', help='image')
        c.argument('remote_item_last_modified_by', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_last_modified_date_time', help='Date and time the item was last modified. Read-only.')
        c.argument('remote_item_name', type=str, help='Optional. Filename of the remote item. Read-only.')
        c.argument('remote_item_package', action=AddRemoteItemPackage, nargs='*', help='package')
        c.argument('remote_item_parent_reference', type=validate_file_or_dict, help='itemReference Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_shared', type=validate_file_or_dict, help='shared Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('remote_item_size', type=int, help='Size of the remote item. Read-only.')
        c.argument('remote_item_special_folder', action=AddRemoteItemSpecialFolder, nargs='*', help='specialFolder')
        c.argument('remote_item_video', action=AddVideo, nargs='*', help='video')
        c.argument('remote_item_web_dav_url', type=str, help='DAV compatible URL for the item.')
        c.argument('remote_item_web_url', type=str, help='URL that displays the resource in the browser. Read-only.')
        c.argument('pending_operations_pending_content_update_queued_date_time', help='Date and time the pending '
                   'binary operation was queued in UTC time. Read-only.')
        c.argument('package_type', type=str, help='A string indicating the type of package. While oneNote is the only '
                   'currently defined value, you should expect other package types to be returned and handle them '
                   'accordingly.')
        c.argument('folder_child_count', type=int, help='Number of children contained immediately within this '
                   'container.')
        c.argument('folder_view', action=AddFolderView, nargs='*', help='folderView')
        c.argument('file_hashes', action=AddFileHashes, nargs='*', help='hashes')
        c.argument('file_mime_type', type=str, help='The MIME type for the file. This is determined by logic on the '
                   'server and might not be the value provided when the file was uploaded. Read-only.')
        c.argument('file_processing_metadata', arg_type=get_three_state_flag(), help='')
        c.argument('deleted_state', type=str, help='Represents the state of the deleted item.')
        c.argument('bundle_album', action=AddBundleAlbum, nargs='*', help='album')
        c.argument('bundle_child_count', type=int, help='')

    with self.argument_context('files drive get-activity') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files drive get-bundle') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('drive_item_id', type=str, help='key: id of driveItem')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files drive get-bundle-content') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('drive_item_id', type=str, help='key: id of driveItem')

    with self.argument_context('files drive get-following') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('drive_item_id', type=str, help='key: id of driveItem')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files drive get-following-content') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('drive_item_id', type=str, help='key: id of driveItem')

    with self.argument_context('files drive get-item') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('drive_item_id', type=str, help='key: id of driveItem')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files drive get-item-content') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('drive_item_id', type=str, help='key: id of driveItem')

    with self.argument_context('files drive get-list') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files drive get-root') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files drive get-root-content') as c:
        c.argument('drive_id', type=str, help='key: id of drive')

    with self.argument_context('files drive get-special') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('drive_item_id', type=str, help='key: id of driveItem')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files drive get-special-content') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('drive_item_id', type=str, help='key: id of driveItem')

    with self.argument_context('files drive list-activity') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files drive list-bundle') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files drive list-following') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files drive list-item') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files drive list-special') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files drive recent') as c:
        c.argument('drive_id', type=str, help='key: id of drive')

    with self.argument_context('files drive search') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('q', type=str, help='')

    with self.argument_context('files drive set-bundle-content') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('drive_item_id', type=str, help='key: id of driveItem')
        c.argument('data', help='New media content.')

    with self.argument_context('files drive set-following-content') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('drive_item_id', type=str, help='key: id of driveItem')
        c.argument('data', help='New media content.')

    with self.argument_context('files drive set-item-content') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('drive_item_id', type=str, help='key: id of driveItem')
        c.argument('data', help='New media content.')

    with self.argument_context('files drive set-root-content') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('data', help='New media content.')

    with self.argument_context('files drive set-special-content') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('drive_item_id', type=str, help='key: id of driveItem')
        c.argument('data', help='New media content.')

    with self.argument_context('files drive shared-with-me') as c:
        c.argument('drive_id', type=str, help='key: id of drive')

    with self.argument_context('files drive update-activity') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('files drive update-bundle') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('drive_item_id', type=str, help='key: id of driveItem')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_date_time', help='Date and time of item creation. Read-only.')
        c.argument('description', type=str, help='Provides a user-visible description of the item. Optional.')
        c.argument('e_tag', type=str, help='ETag for the item. Read-only.')
        c.argument('last_modified_date_time', help='Date and time the item was last modified. Read-only.')
        c.argument('name', type=str, help='The name of the item. Read-write.')
        c.argument('web_url', type=str, help='URL that displays the resource in the browser. Read-only.')
        c.argument('created_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory user '
                   'object. Expected value: json-string/@json-file.')
        c.argument('last_modified_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory '
                   'user object. Expected value: json-string/@json-file.')
        c.argument('parent_reference_drive_id', type=str, help='Unique identifier of the drive instance that contains '
                   'the item. Read-only.')
        c.argument('parent_reference_drive_type', type=str, help='Identifies the type of drive. See [drive][] resource '
                   'for values.')
        c.argument('parent_reference_id', type=str, help='Unique identifier of the item in the drive. Read-only.')
        c.argument('parent_reference_name', type=str, help='The name of the item being referenced. Read-only.')
        c.argument('parent_reference_path', type=str,
                   help='Path that can be used to navigate to the item. Read-only.')
        c.argument('parent_reference_share_id', type=str, help='A unique identifier for a shared resource that can be '
                   'accessed via the [Shares][] API.')
        c.argument('parent_reference_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('parent_reference_site_id', type=str, help='')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('microsoft_graph_identity_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('audio', action=AddAudio, nargs='*', help='audio')
        c.argument('content', help='The content stream, if the item represents a file.')
        c.argument('c_tag', type=str, help='An eTag for the content of the item. This eTag is not changed if only the '
                   'metadata is changed. Note This property is not returned if the item is a folder. Read-only.')
        c.argument('file_system_info', action=AddFileSystemInfo, nargs='*', help='fileSystemInfo')
        c.argument('image', action=AddImage, nargs='*', help='image')
        c.argument('location', arg_type=get_location_type(self.cli_ctx))
        c.argument('photo', action=AddPhoto, nargs='*', help='photo')
        c.argument('publication', action=AddPublication, nargs='*', help='publicationFacet')
        c.argument('root', type=validate_file_or_dict, help='root Expected value: json-string/@json-file.')
        c.argument('microsoft_graph_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('size', type=int, help='Size of the item in bytes. Read-only.')
        c.argument('video', action=AddVideo, nargs='*', help='video')
        c.argument('web_dav_url', type=str, help='WebDAV compatible URL for the item.')
        c.argument('activities', type=validate_file_or_dict, help='The list of recent activities that took place on '
                   'this item. Expected value: json-string/@json-file.')
        c.argument('analytics', type=validate_file_or_dict, help='itemAnalytics Expected value: '
                   'json-string/@json-file.')
        c.argument('children', type=validate_file_or_dict, help='Collection containing Item objects for the immediate '
                   'children of Item. Only items representing folders have children. Read-only. Nullable. Expected '
                   'value: json-string/@json-file.')
        c.argument('list_item', type=validate_file_or_dict, help='listItem Expected value: json-string/@json-file.')
        c.argument('permissions', type=validate_file_or_dict, help='The set of permissions for the item. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('subscriptions', action=AddFilesDriveCreateBundleSubscriptions, nargs='*', help='The set of '
                   'subscriptions on the item. Only supported on the root of a drive.')
        c.argument('thumbnails', type=validate_file_or_dict, help='Collection containing [ThumbnailSet][] objects '
                   'associated with the item. For more info, see [getting thumbnails][]. Read-only. Nullable. Expected '
                   'value: json-string/@json-file.')
        c.argument('versions', action=AddDrivesVersions, nargs='*', help='The list of previous versions of the item. '
                   'For more info, see [getting previous versions][]. Read-only. Nullable.')
        c.argument('workbook_id', type=str, help='Read-only.')
        c.argument('workbook_application', action=AddWorkbookApplication, nargs='*', help='workbookApplication')
        c.argument('workbook_comments', action=AddWorkbookComments, nargs='*', help='')
        c.argument('workbook_functions', action=AddWorkbookFunctions, nargs='*', help='workbookFunctions')
        c.argument('workbook_names', type=validate_file_or_dict, help='Represents a collection of workbook scoped '
                   'named items (named ranges and constants). Read-only. Expected value: json-string/@json-file.')
        c.argument('workbook_operations', type=validate_file_or_dict, help='The status of workbook operations. Getting '
                   'an operation collection is not supported, but you can get the status of a long-running operation '
                   'if the Location header is returned in the response. Read-only. Expected value: '
                   'json-string/@json-file.')
        c.argument('workbook_tables', type=validate_file_or_dict, help='Represents a collection of tables associated '
                   'with the workbook. Read-only. Expected value: json-string/@json-file.')
        c.argument('workbook_worksheets', type=validate_file_or_dict, help='Represents a collection of worksheets '
                   'associated with the workbook. Read-only. Expected value: json-string/@json-file.')
        c.argument('special_folder_name', type=str, help='The unique identifier for this item in the /drive/special '
                   'collection')
        c.argument('shared_owner', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('shared_scope', type=str, help='Indicates the scope of how the item is shared: anonymous, '
                   'organization, or users. Read-only.')
        c.argument('shared_shared_by', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('shared_shared_date_time', help='The UTC date and time when the item was shared. Read-only.')
        c.argument('search_result_on_click_telemetry_url', type=str, help='A callback URL that can be used to record '
                   'telemetry information. The application should issue a GET on this URL if the user interacts with '
                   'this item to improve the quality of results.')
        c.argument('remote_item_created_by', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_created_date_time', help='Date and time of item creation. Read-only.')
        c.argument('remote_item_file', type=validate_file_or_dict,
                   help='file Expected value: json-string/@json-file.')
        c.argument('remote_item_file_system_info', action=AddFileSystemInfo, nargs='*', help='fileSystemInfo')
        c.argument('remote_item_folder', type=validate_file_or_dict, help='folder Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_id', type=str, help='Unique identifier for the remote item in its drive. Read-only.')
        c.argument('remote_item_image', action=AddImage, nargs='*', help='image')
        c.argument('remote_item_last_modified_by', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_last_modified_date_time', help='Date and time the item was last modified. Read-only.')
        c.argument('remote_item_name', type=str, help='Optional. Filename of the remote item. Read-only.')
        c.argument('remote_item_package', action=AddRemoteItemPackage, nargs='*', help='package')
        c.argument('remote_item_parent_reference', type=validate_file_or_dict, help='itemReference Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_shared', type=validate_file_or_dict, help='shared Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('remote_item_size', type=int, help='Size of the remote item. Read-only.')
        c.argument('remote_item_special_folder', action=AddRemoteItemSpecialFolder, nargs='*', help='specialFolder')
        c.argument('remote_item_video', action=AddVideo, nargs='*', help='video')
        c.argument('remote_item_web_dav_url', type=str, help='DAV compatible URL for the item.')
        c.argument('remote_item_web_url', type=str, help='URL that displays the resource in the browser. Read-only.')
        c.argument('pending_operations_pending_content_update_queued_date_time', help='Date and time the pending '
                   'binary operation was queued in UTC time. Read-only.')
        c.argument('package_type', type=str, help='A string indicating the type of package. While oneNote is the only '
                   'currently defined value, you should expect other package types to be returned and handle them '
                   'accordingly.')
        c.argument('folder_child_count', type=int, help='Number of children contained immediately within this '
                   'container.')
        c.argument('folder_view', action=AddFolderView, nargs='*', help='folderView')
        c.argument('file_hashes', action=AddFileHashes, nargs='*', help='hashes')
        c.argument('file_mime_type', type=str, help='The MIME type for the file. This is determined by logic on the '
                   'server and might not be the value provided when the file was uploaded. Read-only.')
        c.argument('file_processing_metadata', arg_type=get_three_state_flag(), help='')
        c.argument('deleted_state', type=str, help='Represents the state of the deleted item.')
        c.argument('bundle_album', action=AddBundleAlbum, nargs='*', help='album')
        c.argument('bundle_child_count', type=int, help='')

    with self.argument_context('files drive update-following') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('drive_item_id', type=str, help='key: id of driveItem')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_date_time', help='Date and time of item creation. Read-only.')
        c.argument('description', type=str, help='Provides a user-visible description of the item. Optional.')
        c.argument('e_tag', type=str, help='ETag for the item. Read-only.')
        c.argument('last_modified_date_time', help='Date and time the item was last modified. Read-only.')
        c.argument('name', type=str, help='The name of the item. Read-write.')
        c.argument('web_url', type=str, help='URL that displays the resource in the browser. Read-only.')
        c.argument('created_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory user '
                   'object. Expected value: json-string/@json-file.')
        c.argument('last_modified_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory '
                   'user object. Expected value: json-string/@json-file.')
        c.argument('parent_reference_drive_id', type=str, help='Unique identifier of the drive instance that contains '
                   'the item. Read-only.')
        c.argument('parent_reference_drive_type', type=str, help='Identifies the type of drive. See [drive][] resource '
                   'for values.')
        c.argument('parent_reference_id', type=str, help='Unique identifier of the item in the drive. Read-only.')
        c.argument('parent_reference_name', type=str, help='The name of the item being referenced. Read-only.')
        c.argument('parent_reference_path', type=str,
                   help='Path that can be used to navigate to the item. Read-only.')
        c.argument('parent_reference_share_id', type=str, help='A unique identifier for a shared resource that can be '
                   'accessed via the [Shares][] API.')
        c.argument('parent_reference_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('parent_reference_site_id', type=str, help='')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('microsoft_graph_identity_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('audio', action=AddAudio, nargs='*', help='audio')
        c.argument('content', help='The content stream, if the item represents a file.')
        c.argument('c_tag', type=str, help='An eTag for the content of the item. This eTag is not changed if only the '
                   'metadata is changed. Note This property is not returned if the item is a folder. Read-only.')
        c.argument('file_system_info', action=AddFileSystemInfo, nargs='*', help='fileSystemInfo')
        c.argument('image', action=AddImage, nargs='*', help='image')
        c.argument('location', arg_type=get_location_type(self.cli_ctx))
        c.argument('photo', action=AddPhoto, nargs='*', help='photo')
        c.argument('publication', action=AddPublication, nargs='*', help='publicationFacet')
        c.argument('root', type=validate_file_or_dict, help='root Expected value: json-string/@json-file.')
        c.argument('microsoft_graph_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('size', type=int, help='Size of the item in bytes. Read-only.')
        c.argument('video', action=AddVideo, nargs='*', help='video')
        c.argument('web_dav_url', type=str, help='WebDAV compatible URL for the item.')
        c.argument('activities', type=validate_file_or_dict, help='The list of recent activities that took place on '
                   'this item. Expected value: json-string/@json-file.')
        c.argument('analytics', type=validate_file_or_dict, help='itemAnalytics Expected value: '
                   'json-string/@json-file.')
        c.argument('children', type=validate_file_or_dict, help='Collection containing Item objects for the immediate '
                   'children of Item. Only items representing folders have children. Read-only. Nullable. Expected '
                   'value: json-string/@json-file.')
        c.argument('list_item', type=validate_file_or_dict, help='listItem Expected value: json-string/@json-file.')
        c.argument('permissions', type=validate_file_or_dict, help='The set of permissions for the item. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('subscriptions', action=AddFilesDriveCreateBundleSubscriptions, nargs='*', help='The set of '
                   'subscriptions on the item. Only supported on the root of a drive.')
        c.argument('thumbnails', type=validate_file_or_dict, help='Collection containing [ThumbnailSet][] objects '
                   'associated with the item. For more info, see [getting thumbnails][]. Read-only. Nullable. Expected '
                   'value: json-string/@json-file.')
        c.argument('versions', action=AddDrivesVersions, nargs='*', help='The list of previous versions of the item. '
                   'For more info, see [getting previous versions][]. Read-only. Nullable.')
        c.argument('workbook_id', type=str, help='Read-only.')
        c.argument('workbook_application', action=AddWorkbookApplication, nargs='*', help='workbookApplication')
        c.argument('workbook_comments', action=AddWorkbookComments, nargs='*', help='')
        c.argument('workbook_functions', action=AddWorkbookFunctions, nargs='*', help='workbookFunctions')
        c.argument('workbook_names', type=validate_file_or_dict, help='Represents a collection of workbook scoped '
                   'named items (named ranges and constants). Read-only. Expected value: json-string/@json-file.')
        c.argument('workbook_operations', type=validate_file_or_dict, help='The status of workbook operations. Getting '
                   'an operation collection is not supported, but you can get the status of a long-running operation '
                   'if the Location header is returned in the response. Read-only. Expected value: '
                   'json-string/@json-file.')
        c.argument('workbook_tables', type=validate_file_or_dict, help='Represents a collection of tables associated '
                   'with the workbook. Read-only. Expected value: json-string/@json-file.')
        c.argument('workbook_worksheets', type=validate_file_or_dict, help='Represents a collection of worksheets '
                   'associated with the workbook. Read-only. Expected value: json-string/@json-file.')
        c.argument('special_folder_name', type=str, help='The unique identifier for this item in the /drive/special '
                   'collection')
        c.argument('shared_owner', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('shared_scope', type=str, help='Indicates the scope of how the item is shared: anonymous, '
                   'organization, or users. Read-only.')
        c.argument('shared_shared_by', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('shared_shared_date_time', help='The UTC date and time when the item was shared. Read-only.')
        c.argument('search_result_on_click_telemetry_url', type=str, help='A callback URL that can be used to record '
                   'telemetry information. The application should issue a GET on this URL if the user interacts with '
                   'this item to improve the quality of results.')
        c.argument('remote_item_created_by', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_created_date_time', help='Date and time of item creation. Read-only.')
        c.argument('remote_item_file', type=validate_file_or_dict,
                   help='file Expected value: json-string/@json-file.')
        c.argument('remote_item_file_system_info', action=AddFileSystemInfo, nargs='*', help='fileSystemInfo')
        c.argument('remote_item_folder', type=validate_file_or_dict, help='folder Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_id', type=str, help='Unique identifier for the remote item in its drive. Read-only.')
        c.argument('remote_item_image', action=AddImage, nargs='*', help='image')
        c.argument('remote_item_last_modified_by', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_last_modified_date_time', help='Date and time the item was last modified. Read-only.')
        c.argument('remote_item_name', type=str, help='Optional. Filename of the remote item. Read-only.')
        c.argument('remote_item_package', action=AddRemoteItemPackage, nargs='*', help='package')
        c.argument('remote_item_parent_reference', type=validate_file_or_dict, help='itemReference Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_shared', type=validate_file_or_dict, help='shared Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('remote_item_size', type=int, help='Size of the remote item. Read-only.')
        c.argument('remote_item_special_folder', action=AddRemoteItemSpecialFolder, nargs='*', help='specialFolder')
        c.argument('remote_item_video', action=AddVideo, nargs='*', help='video')
        c.argument('remote_item_web_dav_url', type=str, help='DAV compatible URL for the item.')
        c.argument('remote_item_web_url', type=str, help='URL that displays the resource in the browser. Read-only.')
        c.argument('pending_operations_pending_content_update_queued_date_time', help='Date and time the pending '
                   'binary operation was queued in UTC time. Read-only.')
        c.argument('package_type', type=str, help='A string indicating the type of package. While oneNote is the only '
                   'currently defined value, you should expect other package types to be returned and handle them '
                   'accordingly.')
        c.argument('folder_child_count', type=int, help='Number of children contained immediately within this '
                   'container.')
        c.argument('folder_view', action=AddFolderView, nargs='*', help='folderView')
        c.argument('file_hashes', action=AddFileHashes, nargs='*', help='hashes')
        c.argument('file_mime_type', type=str, help='The MIME type for the file. This is determined by logic on the '
                   'server and might not be the value provided when the file was uploaded. Read-only.')
        c.argument('file_processing_metadata', arg_type=get_three_state_flag(), help='')
        c.argument('deleted_state', type=str, help='Represents the state of the deleted item.')
        c.argument('bundle_album', action=AddBundleAlbum, nargs='*', help='album')
        c.argument('bundle_child_count', type=int, help='')

    with self.argument_context('files drive update-item') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('drive_item_id', type=str, help='key: id of driveItem')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_date_time', help='Date and time of item creation. Read-only.')
        c.argument('description', type=str, help='Provides a user-visible description of the item. Optional.')
        c.argument('e_tag', type=str, help='ETag for the item. Read-only.')
        c.argument('last_modified_date_time', help='Date and time the item was last modified. Read-only.')
        c.argument('name', type=str, help='The name of the item. Read-write.')
        c.argument('web_url', type=str, help='URL that displays the resource in the browser. Read-only.')
        c.argument('created_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory user '
                   'object. Expected value: json-string/@json-file.')
        c.argument('last_modified_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory '
                   'user object. Expected value: json-string/@json-file.')
        c.argument('parent_reference_drive_id', type=str, help='Unique identifier of the drive instance that contains '
                   'the item. Read-only.')
        c.argument('parent_reference_drive_type', type=str, help='Identifies the type of drive. See [drive][] resource '
                   'for values.')
        c.argument('parent_reference_id', type=str, help='Unique identifier of the item in the drive. Read-only.')
        c.argument('parent_reference_name', type=str, help='The name of the item being referenced. Read-only.')
        c.argument('parent_reference_path', type=str,
                   help='Path that can be used to navigate to the item. Read-only.')
        c.argument('parent_reference_share_id', type=str, help='A unique identifier for a shared resource that can be '
                   'accessed via the [Shares][] API.')
        c.argument('parent_reference_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('parent_reference_site_id', type=str, help='')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('microsoft_graph_identity_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('audio', action=AddAudio, nargs='*', help='audio')
        c.argument('content', help='The content stream, if the item represents a file.')
        c.argument('c_tag', type=str, help='An eTag for the content of the item. This eTag is not changed if only the '
                   'metadata is changed. Note This property is not returned if the item is a folder. Read-only.')
        c.argument('file_system_info', action=AddFileSystemInfo, nargs='*', help='fileSystemInfo')
        c.argument('image', action=AddImage, nargs='*', help='image')
        c.argument('location', arg_type=get_location_type(self.cli_ctx))
        c.argument('photo', action=AddPhoto, nargs='*', help='photo')
        c.argument('publication', action=AddPublication, nargs='*', help='publicationFacet')
        c.argument('root', type=validate_file_or_dict, help='root Expected value: json-string/@json-file.')
        c.argument('microsoft_graph_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('size', type=int, help='Size of the item in bytes. Read-only.')
        c.argument('video', action=AddVideo, nargs='*', help='video')
        c.argument('web_dav_url', type=str, help='WebDAV compatible URL for the item.')
        c.argument('activities', type=validate_file_or_dict, help='The list of recent activities that took place on '
                   'this item. Expected value: json-string/@json-file.')
        c.argument('analytics', type=validate_file_or_dict, help='itemAnalytics Expected value: '
                   'json-string/@json-file.')
        c.argument('children', type=validate_file_or_dict, help='Collection containing Item objects for the immediate '
                   'children of Item. Only items representing folders have children. Read-only. Nullable. Expected '
                   'value: json-string/@json-file.')
        c.argument('list_item', type=validate_file_or_dict, help='listItem Expected value: json-string/@json-file.')
        c.argument('permissions', type=validate_file_or_dict, help='The set of permissions for the item. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('subscriptions', action=AddFilesDriveCreateBundleSubscriptions, nargs='*', help='The set of '
                   'subscriptions on the item. Only supported on the root of a drive.')
        c.argument('thumbnails', type=validate_file_or_dict, help='Collection containing [ThumbnailSet][] objects '
                   'associated with the item. For more info, see [getting thumbnails][]. Read-only. Nullable. Expected '
                   'value: json-string/@json-file.')
        c.argument('versions', action=AddDrivesVersions, nargs='*', help='The list of previous versions of the item. '
                   'For more info, see [getting previous versions][]. Read-only. Nullable.')
        c.argument('workbook_id', type=str, help='Read-only.')
        c.argument('workbook_application', action=AddWorkbookApplication, nargs='*', help='workbookApplication')
        c.argument('workbook_comments', action=AddWorkbookComments, nargs='*', help='')
        c.argument('workbook_functions', action=AddWorkbookFunctions, nargs='*', help='workbookFunctions')
        c.argument('workbook_names', type=validate_file_or_dict, help='Represents a collection of workbook scoped '
                   'named items (named ranges and constants). Read-only. Expected value: json-string/@json-file.')
        c.argument('workbook_operations', type=validate_file_or_dict, help='The status of workbook operations. Getting '
                   'an operation collection is not supported, but you can get the status of a long-running operation '
                   'if the Location header is returned in the response. Read-only. Expected value: '
                   'json-string/@json-file.')
        c.argument('workbook_tables', type=validate_file_or_dict, help='Represents a collection of tables associated '
                   'with the workbook. Read-only. Expected value: json-string/@json-file.')
        c.argument('workbook_worksheets', type=validate_file_or_dict, help='Represents a collection of worksheets '
                   'associated with the workbook. Read-only. Expected value: json-string/@json-file.')
        c.argument('special_folder_name', type=str, help='The unique identifier for this item in the /drive/special '
                   'collection')
        c.argument('shared_owner', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('shared_scope', type=str, help='Indicates the scope of how the item is shared: anonymous, '
                   'organization, or users. Read-only.')
        c.argument('shared_shared_by', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('shared_shared_date_time', help='The UTC date and time when the item was shared. Read-only.')
        c.argument('search_result_on_click_telemetry_url', type=str, help='A callback URL that can be used to record '
                   'telemetry information. The application should issue a GET on this URL if the user interacts with '
                   'this item to improve the quality of results.')
        c.argument('remote_item_created_by', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_created_date_time', help='Date and time of item creation. Read-only.')
        c.argument('remote_item_file', type=validate_file_or_dict,
                   help='file Expected value: json-string/@json-file.')
        c.argument('remote_item_file_system_info', action=AddFileSystemInfo, nargs='*', help='fileSystemInfo')
        c.argument('remote_item_folder', type=validate_file_or_dict, help='folder Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_id', type=str, help='Unique identifier for the remote item in its drive. Read-only.')
        c.argument('remote_item_image', action=AddImage, nargs='*', help='image')
        c.argument('remote_item_last_modified_by', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_last_modified_date_time', help='Date and time the item was last modified. Read-only.')
        c.argument('remote_item_name', type=str, help='Optional. Filename of the remote item. Read-only.')
        c.argument('remote_item_package', action=AddRemoteItemPackage, nargs='*', help='package')
        c.argument('remote_item_parent_reference', type=validate_file_or_dict, help='itemReference Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_shared', type=validate_file_or_dict, help='shared Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('remote_item_size', type=int, help='Size of the remote item. Read-only.')
        c.argument('remote_item_special_folder', action=AddRemoteItemSpecialFolder, nargs='*', help='specialFolder')
        c.argument('remote_item_video', action=AddVideo, nargs='*', help='video')
        c.argument('remote_item_web_dav_url', type=str, help='DAV compatible URL for the item.')
        c.argument('remote_item_web_url', type=str, help='URL that displays the resource in the browser. Read-only.')
        c.argument('pending_operations_pending_content_update_queued_date_time', help='Date and time the pending '
                   'binary operation was queued in UTC time. Read-only.')
        c.argument('package_type', type=str, help='A string indicating the type of package. While oneNote is the only '
                   'currently defined value, you should expect other package types to be returned and handle them '
                   'accordingly.')
        c.argument('folder_child_count', type=int, help='Number of children contained immediately within this '
                   'container.')
        c.argument('folder_view', action=AddFolderView, nargs='*', help='folderView')
        c.argument('file_hashes', action=AddFileHashes, nargs='*', help='hashes')
        c.argument('file_mime_type', type=str, help='The MIME type for the file. This is determined by logic on the '
                   'server and might not be the value provided when the file was uploaded. Read-only.')
        c.argument('file_processing_metadata', arg_type=get_three_state_flag(), help='')
        c.argument('deleted_state', type=str, help='Represents the state of the deleted item.')
        c.argument('bundle_album', action=AddBundleAlbum, nargs='*', help='album')
        c.argument('bundle_child_count', type=int, help='')

    with self.argument_context('files drive update-list') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_date_time', help='Date and time of item creation. Read-only.')
        c.argument('description', type=str, help='Provides a user-visible description of the item. Optional.')
        c.argument('e_tag', type=str, help='ETag for the item. Read-only.')
        c.argument('last_modified_date_time', help='Date and time the item was last modified. Read-only.')
        c.argument('name', type=str, help='The name of the item. Read-write.')
        c.argument('web_url', type=str, help='URL that displays the resource in the browser. Read-only.')
        c.argument('created_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory user '
                   'object. Expected value: json-string/@json-file.')
        c.argument('last_modified_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory '
                   'user object. Expected value: json-string/@json-file.')
        c.argument('parent_reference_drive_id', type=str, help='Unique identifier of the drive instance that contains '
                   'the item. Read-only.')
        c.argument('parent_reference_drive_type', type=str, help='Identifies the type of drive. See [drive][] resource '
                   'for values.')
        c.argument('parent_reference_id', type=str, help='Unique identifier of the item in the drive. Read-only.')
        c.argument('parent_reference_name', type=str, help='The name of the item being referenced. Read-only.')
        c.argument('parent_reference_path', type=str,
                   help='Path that can be used to navigate to the item. Read-only.')
        c.argument('parent_reference_share_id', type=str, help='A unique identifier for a shared resource that can be '
                   'accessed via the [Shares][] API.')
        c.argument('parent_reference_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('parent_reference_site_id', type=str, help='')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('microsoft_graph_identity_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('display_name', type=str, help='The displayable title of the list.')
        c.argument('list', action=AddListList, nargs='*', help='listInfo')
        c.argument('microsoft_graph_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('system', type=validate_file_or_dict, help='systemFacet Expected value: json-string/@json-file.')
        c.argument('activities', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('columns', type=validate_file_or_dict, help='The collection of field definitions for this list. '
                   'Expected value: json-string/@json-file.')
        c.argument('content_types', type=validate_file_or_dict, help='The collection of content types present in this '
                   'list. Expected value: json-string/@json-file.')
        c.argument('drive', type=validate_file_or_dict, help='drive Expected value: json-string/@json-file.')
        c.argument('items', type=validate_file_or_dict, help='All items contained in the list. Expected value: '
                   'json-string/@json-file.')
        c.argument('subscriptions', action=AddFilesDriveUpdateListSubscriptions, nargs='*', help='The set of '
                   'subscriptions on the list.')

    with self.argument_context('files drive update-root') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_date_time', help='Date and time of item creation. Read-only.')
        c.argument('description', type=str, help='Provides a user-visible description of the item. Optional.')
        c.argument('e_tag', type=str, help='ETag for the item. Read-only.')
        c.argument('last_modified_date_time', help='Date and time the item was last modified. Read-only.')
        c.argument('name', type=str, help='The name of the item. Read-write.')
        c.argument('web_url', type=str, help='URL that displays the resource in the browser. Read-only.')
        c.argument('created_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory user '
                   'object. Expected value: json-string/@json-file.')
        c.argument('last_modified_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory '
                   'user object. Expected value: json-string/@json-file.')
        c.argument('parent_reference_drive_id', type=str, help='Unique identifier of the drive instance that contains '
                   'the item. Read-only.')
        c.argument('parent_reference_drive_type', type=str, help='Identifies the type of drive. See [drive][] resource '
                   'for values.')
        c.argument('parent_reference_id', type=str, help='Unique identifier of the item in the drive. Read-only.')
        c.argument('parent_reference_name', type=str, help='The name of the item being referenced. Read-only.')
        c.argument('parent_reference_path', type=str,
                   help='Path that can be used to navigate to the item. Read-only.')
        c.argument('parent_reference_share_id', type=str, help='A unique identifier for a shared resource that can be '
                   'accessed via the [Shares][] API.')
        c.argument('parent_reference_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('parent_reference_site_id', type=str, help='')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('microsoft_graph_identity_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('audio', action=AddAudio, nargs='*', help='audio')
        c.argument('content', help='The content stream, if the item represents a file.')
        c.argument('c_tag', type=str, help='An eTag for the content of the item. This eTag is not changed if only the '
                   'metadata is changed. Note This property is not returned if the item is a folder. Read-only.')
        c.argument('file_system_info', action=AddFileSystemInfo, nargs='*', help='fileSystemInfo')
        c.argument('image', action=AddImage, nargs='*', help='image')
        c.argument('location', arg_type=get_location_type(self.cli_ctx))
        c.argument('photo', action=AddPhoto, nargs='*', help='photo')
        c.argument('publication', action=AddPublication, nargs='*', help='publicationFacet')
        c.argument('root', type=validate_file_or_dict, help='root Expected value: json-string/@json-file.')
        c.argument('microsoft_graph_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('size', type=int, help='Size of the item in bytes. Read-only.')
        c.argument('video', action=AddVideo, nargs='*', help='video')
        c.argument('web_dav_url', type=str, help='WebDAV compatible URL for the item.')
        c.argument('activities', type=validate_file_or_dict, help='The list of recent activities that took place on '
                   'this item. Expected value: json-string/@json-file.')
        c.argument('analytics', type=validate_file_or_dict, help='itemAnalytics Expected value: '
                   'json-string/@json-file.')
        c.argument('children', type=validate_file_or_dict, help='Collection containing Item objects for the immediate '
                   'children of Item. Only items representing folders have children. Read-only. Nullable. Expected '
                   'value: json-string/@json-file.')
        c.argument('list_item', type=validate_file_or_dict, help='listItem Expected value: json-string/@json-file.')
        c.argument('permissions', type=validate_file_or_dict, help='The set of permissions for the item. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('subscriptions', action=AddFilesDriveCreateBundleSubscriptions, nargs='*', help='The set of '
                   'subscriptions on the item. Only supported on the root of a drive.')
        c.argument('thumbnails', type=validate_file_or_dict, help='Collection containing [ThumbnailSet][] objects '
                   'associated with the item. For more info, see [getting thumbnails][]. Read-only. Nullable. Expected '
                   'value: json-string/@json-file.')
        c.argument('versions', action=AddDrivesVersions, nargs='*', help='The list of previous versions of the item. '
                   'For more info, see [getting previous versions][]. Read-only. Nullable.')
        c.argument('workbook_id', type=str, help='Read-only.')
        c.argument('workbook_application', action=AddWorkbookApplication, nargs='*', help='workbookApplication')
        c.argument('workbook_comments', action=AddWorkbookComments, nargs='*', help='')
        c.argument('workbook_functions', action=AddWorkbookFunctions, nargs='*', help='workbookFunctions')
        c.argument('workbook_names', type=validate_file_or_dict, help='Represents a collection of workbook scoped '
                   'named items (named ranges and constants). Read-only. Expected value: json-string/@json-file.')
        c.argument('workbook_operations', type=validate_file_or_dict, help='The status of workbook operations. Getting '
                   'an operation collection is not supported, but you can get the status of a long-running operation '
                   'if the Location header is returned in the response. Read-only. Expected value: '
                   'json-string/@json-file.')
        c.argument('workbook_tables', type=validate_file_or_dict, help='Represents a collection of tables associated '
                   'with the workbook. Read-only. Expected value: json-string/@json-file.')
        c.argument('workbook_worksheets', type=validate_file_or_dict, help='Represents a collection of worksheets '
                   'associated with the workbook. Read-only. Expected value: json-string/@json-file.')
        c.argument('special_folder_name', type=str, help='The unique identifier for this item in the /drive/special '
                   'collection')
        c.argument('shared_owner', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('shared_scope', type=str, help='Indicates the scope of how the item is shared: anonymous, '
                   'organization, or users. Read-only.')
        c.argument('shared_shared_by', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('shared_shared_date_time', help='The UTC date and time when the item was shared. Read-only.')
        c.argument('search_result_on_click_telemetry_url', type=str, help='A callback URL that can be used to record '
                   'telemetry information. The application should issue a GET on this URL if the user interacts with '
                   'this item to improve the quality of results.')
        c.argument('remote_item_created_by', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_created_date_time', help='Date and time of item creation. Read-only.')
        c.argument('remote_item_file', type=validate_file_or_dict,
                   help='file Expected value: json-string/@json-file.')
        c.argument('remote_item_file_system_info', action=AddFileSystemInfo, nargs='*', help='fileSystemInfo')
        c.argument('remote_item_folder', type=validate_file_or_dict, help='folder Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_id', type=str, help='Unique identifier for the remote item in its drive. Read-only.')
        c.argument('remote_item_image', action=AddImage, nargs='*', help='image')
        c.argument('remote_item_last_modified_by', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_last_modified_date_time', help='Date and time the item was last modified. Read-only.')
        c.argument('remote_item_name', type=str, help='Optional. Filename of the remote item. Read-only.')
        c.argument('remote_item_package', action=AddRemoteItemPackage, nargs='*', help='package')
        c.argument('remote_item_parent_reference', type=validate_file_or_dict, help='itemReference Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_shared', type=validate_file_or_dict, help='shared Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('remote_item_size', type=int, help='Size of the remote item. Read-only.')
        c.argument('remote_item_special_folder', action=AddRemoteItemSpecialFolder, nargs='*', help='specialFolder')
        c.argument('remote_item_video', action=AddVideo, nargs='*', help='video')
        c.argument('remote_item_web_dav_url', type=str, help='DAV compatible URL for the item.')
        c.argument('remote_item_web_url', type=str, help='URL that displays the resource in the browser. Read-only.')
        c.argument('pending_operations_pending_content_update_queued_date_time', help='Date and time the pending '
                   'binary operation was queued in UTC time. Read-only.')
        c.argument('package_type', type=str, help='A string indicating the type of package. While oneNote is the only '
                   'currently defined value, you should expect other package types to be returned and handle them '
                   'accordingly.')
        c.argument('folder_child_count', type=int, help='Number of children contained immediately within this '
                   'container.')
        c.argument('folder_view', action=AddFolderView, nargs='*', help='folderView')
        c.argument('file_hashes', action=AddFileHashes, nargs='*', help='hashes')
        c.argument('file_mime_type', type=str, help='The MIME type for the file. This is determined by logic on the '
                   'server and might not be the value provided when the file was uploaded. Read-only.')
        c.argument('file_processing_metadata', arg_type=get_three_state_flag(), help='')
        c.argument('deleted_state', type=str, help='Represents the state of the deleted item.')
        c.argument('bundle_album', action=AddBundleAlbum, nargs='*', help='album')
        c.argument('bundle_child_count', type=int, help='')

    with self.argument_context('files drive update-special') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('drive_item_id', type=str, help='key: id of driveItem')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_date_time', help='Date and time of item creation. Read-only.')
        c.argument('description', type=str, help='Provides a user-visible description of the item. Optional.')
        c.argument('e_tag', type=str, help='ETag for the item. Read-only.')
        c.argument('last_modified_date_time', help='Date and time the item was last modified. Read-only.')
        c.argument('name', type=str, help='The name of the item. Read-write.')
        c.argument('web_url', type=str, help='URL that displays the resource in the browser. Read-only.')
        c.argument('created_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory user '
                   'object. Expected value: json-string/@json-file.')
        c.argument('last_modified_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory '
                   'user object. Expected value: json-string/@json-file.')
        c.argument('parent_reference_drive_id', type=str, help='Unique identifier of the drive instance that contains '
                   'the item. Read-only.')
        c.argument('parent_reference_drive_type', type=str, help='Identifies the type of drive. See [drive][] resource '
                   'for values.')
        c.argument('parent_reference_id', type=str, help='Unique identifier of the item in the drive. Read-only.')
        c.argument('parent_reference_name', type=str, help='The name of the item being referenced. Read-only.')
        c.argument('parent_reference_path', type=str,
                   help='Path that can be used to navigate to the item. Read-only.')
        c.argument('parent_reference_share_id', type=str, help='A unique identifier for a shared resource that can be '
                   'accessed via the [Shares][] API.')
        c.argument('parent_reference_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('parent_reference_site_id', type=str, help='')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('microsoft_graph_identity_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('audio', action=AddAudio, nargs='*', help='audio')
        c.argument('content', help='The content stream, if the item represents a file.')
        c.argument('c_tag', type=str, help='An eTag for the content of the item. This eTag is not changed if only the '
                   'metadata is changed. Note This property is not returned if the item is a folder. Read-only.')
        c.argument('file_system_info', action=AddFileSystemInfo, nargs='*', help='fileSystemInfo')
        c.argument('image', action=AddImage, nargs='*', help='image')
        c.argument('location', arg_type=get_location_type(self.cli_ctx))
        c.argument('photo', action=AddPhoto, nargs='*', help='photo')
        c.argument('publication', action=AddPublication, nargs='*', help='publicationFacet')
        c.argument('root', type=validate_file_or_dict, help='root Expected value: json-string/@json-file.')
        c.argument('microsoft_graph_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('size', type=int, help='Size of the item in bytes. Read-only.')
        c.argument('video', action=AddVideo, nargs='*', help='video')
        c.argument('web_dav_url', type=str, help='WebDAV compatible URL for the item.')
        c.argument('activities', type=validate_file_or_dict, help='The list of recent activities that took place on '
                   'this item. Expected value: json-string/@json-file.')
        c.argument('analytics', type=validate_file_or_dict, help='itemAnalytics Expected value: '
                   'json-string/@json-file.')
        c.argument('children', type=validate_file_or_dict, help='Collection containing Item objects for the immediate '
                   'children of Item. Only items representing folders have children. Read-only. Nullable. Expected '
                   'value: json-string/@json-file.')
        c.argument('list_item', type=validate_file_or_dict, help='listItem Expected value: json-string/@json-file.')
        c.argument('permissions', type=validate_file_or_dict, help='The set of permissions for the item. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('subscriptions', action=AddFilesDriveCreateBundleSubscriptions, nargs='*', help='The set of '
                   'subscriptions on the item. Only supported on the root of a drive.')
        c.argument('thumbnails', type=validate_file_or_dict, help='Collection containing [ThumbnailSet][] objects '
                   'associated with the item. For more info, see [getting thumbnails][]. Read-only. Nullable. Expected '
                   'value: json-string/@json-file.')
        c.argument('versions', action=AddDrivesVersions, nargs='*', help='The list of previous versions of the item. '
                   'For more info, see [getting previous versions][]. Read-only. Nullable.')
        c.argument('workbook_id', type=str, help='Read-only.')
        c.argument('workbook_application', action=AddWorkbookApplication, nargs='*', help='workbookApplication')
        c.argument('workbook_comments', action=AddWorkbookComments, nargs='*', help='')
        c.argument('workbook_functions', action=AddWorkbookFunctions, nargs='*', help='workbookFunctions')
        c.argument('workbook_names', type=validate_file_or_dict, help='Represents a collection of workbook scoped '
                   'named items (named ranges and constants). Read-only. Expected value: json-string/@json-file.')
        c.argument('workbook_operations', type=validate_file_or_dict, help='The status of workbook operations. Getting '
                   'an operation collection is not supported, but you can get the status of a long-running operation '
                   'if the Location header is returned in the response. Read-only. Expected value: '
                   'json-string/@json-file.')
        c.argument('workbook_tables', type=validate_file_or_dict, help='Represents a collection of tables associated '
                   'with the workbook. Read-only. Expected value: json-string/@json-file.')
        c.argument('workbook_worksheets', type=validate_file_or_dict, help='Represents a collection of worksheets '
                   'associated with the workbook. Read-only. Expected value: json-string/@json-file.')
        c.argument('special_folder_name', type=str, help='The unique identifier for this item in the /drive/special '
                   'collection')
        c.argument('shared_owner', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('shared_scope', type=str, help='Indicates the scope of how the item is shared: anonymous, '
                   'organization, or users. Read-only.')
        c.argument('shared_shared_by', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('shared_shared_date_time', help='The UTC date and time when the item was shared. Read-only.')
        c.argument('search_result_on_click_telemetry_url', type=str, help='A callback URL that can be used to record '
                   'telemetry information. The application should issue a GET on this URL if the user interacts with '
                   'this item to improve the quality of results.')
        c.argument('remote_item_created_by', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_created_date_time', help='Date and time of item creation. Read-only.')
        c.argument('remote_item_file', type=validate_file_or_dict,
                   help='file Expected value: json-string/@json-file.')
        c.argument('remote_item_file_system_info', action=AddFileSystemInfo, nargs='*', help='fileSystemInfo')
        c.argument('remote_item_folder', type=validate_file_or_dict, help='folder Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_id', type=str, help='Unique identifier for the remote item in its drive. Read-only.')
        c.argument('remote_item_image', action=AddImage, nargs='*', help='image')
        c.argument('remote_item_last_modified_by', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_last_modified_date_time', help='Date and time the item was last modified. Read-only.')
        c.argument('remote_item_name', type=str, help='Optional. Filename of the remote item. Read-only.')
        c.argument('remote_item_package', action=AddRemoteItemPackage, nargs='*', help='package')
        c.argument('remote_item_parent_reference', type=validate_file_or_dict, help='itemReference Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_shared', type=validate_file_or_dict, help='shared Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('remote_item_size', type=int, help='Size of the remote item. Read-only.')
        c.argument('remote_item_special_folder', action=AddRemoteItemSpecialFolder, nargs='*', help='specialFolder')
        c.argument('remote_item_video', action=AddVideo, nargs='*', help='video')
        c.argument('remote_item_web_dav_url', type=str, help='DAV compatible URL for the item.')
        c.argument('remote_item_web_url', type=str, help='URL that displays the resource in the browser. Read-only.')
        c.argument('pending_operations_pending_content_update_queued_date_time', help='Date and time the pending '
                   'binary operation was queued in UTC time. Read-only.')
        c.argument('package_type', type=str, help='A string indicating the type of package. While oneNote is the only '
                   'currently defined value, you should expect other package types to be returned and handle them '
                   'accordingly.')
        c.argument('folder_child_count', type=int, help='Number of children contained immediately within this '
                   'container.')
        c.argument('folder_view', action=AddFolderView, nargs='*', help='folderView')
        c.argument('file_hashes', action=AddFileHashes, nargs='*', help='hashes')
        c.argument('file_mime_type', type=str, help='The MIME type for the file. This is determined by logic on the '
                   'server and might not be the value provided when the file was uploaded. Read-only.')
        c.argument('file_processing_metadata', arg_type=get_three_state_flag(), help='')
        c.argument('deleted_state', type=str, help='Represents the state of the deleted item.')
        c.argument('bundle_album', action=AddBundleAlbum, nargs='*', help='album')
        c.argument('bundle_child_count', type=int, help='')

    with self.argument_context('files drive-activity delete') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('files drive-activity get-drive-item') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files drive-activity get-drive-item-content') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')

    with self.argument_context('files drive-activity get-list-item') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files drive-activity set-drive-item-content') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('data', help='New media content.')

    with self.argument_context('files drive-activity update-drive-item') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_date_time', help='Date and time of item creation. Read-only.')
        c.argument('description', type=str, help='Provides a user-visible description of the item. Optional.')
        c.argument('e_tag', type=str, help='ETag for the item. Read-only.')
        c.argument('last_modified_date_time', help='Date and time the item was last modified. Read-only.')
        c.argument('name', type=str, help='The name of the item. Read-write.')
        c.argument('web_url', type=str, help='URL that displays the resource in the browser. Read-only.')
        c.argument('created_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory user '
                   'object. Expected value: json-string/@json-file.')
        c.argument('last_modified_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory '
                   'user object. Expected value: json-string/@json-file.')
        c.argument('parent_reference_drive_id', type=str, help='Unique identifier of the drive instance that contains '
                   'the item. Read-only.')
        c.argument('parent_reference_drive_type', type=str, help='Identifies the type of drive. See [drive][] resource '
                   'for values.')
        c.argument('parent_reference_id', type=str, help='Unique identifier of the item in the drive. Read-only.')
        c.argument('parent_reference_name', type=str, help='The name of the item being referenced. Read-only.')
        c.argument('parent_reference_path', type=str,
                   help='Path that can be used to navigate to the item. Read-only.')
        c.argument('parent_reference_share_id', type=str, help='A unique identifier for a shared resource that can be '
                   'accessed via the [Shares][] API.')
        c.argument('parent_reference_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('parent_reference_site_id', type=str, help='')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('microsoft_graph_identity_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('audio', action=AddAudio, nargs='*', help='audio')
        c.argument('content', help='The content stream, if the item represents a file.')
        c.argument('c_tag', type=str, help='An eTag for the content of the item. This eTag is not changed if only the '
                   'metadata is changed. Note This property is not returned if the item is a folder. Read-only.')
        c.argument('file_system_info', action=AddFileSystemInfo, nargs='*', help='fileSystemInfo')
        c.argument('image', action=AddImage, nargs='*', help='image')
        c.argument('location', arg_type=get_location_type(self.cli_ctx))
        c.argument('photo', action=AddPhoto, nargs='*', help='photo')
        c.argument('publication', action=AddPublication, nargs='*', help='publicationFacet')
        c.argument('root', type=validate_file_or_dict, help='root Expected value: json-string/@json-file.')
        c.argument('microsoft_graph_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('size', type=int, help='Size of the item in bytes. Read-only.')
        c.argument('video', action=AddVideo, nargs='*', help='video')
        c.argument('web_dav_url', type=str, help='WebDAV compatible URL for the item.')
        c.argument('activities', type=validate_file_or_dict, help='The list of recent activities that took place on '
                   'this item. Expected value: json-string/@json-file.')
        c.argument('analytics', type=validate_file_or_dict, help='itemAnalytics Expected value: '
                   'json-string/@json-file.')
        c.argument('children', type=validate_file_or_dict, help='Collection containing Item objects for the immediate '
                   'children of Item. Only items representing folders have children. Read-only. Nullable. Expected '
                   'value: json-string/@json-file.')
        c.argument('list_item', type=validate_file_or_dict, help='listItem Expected value: json-string/@json-file.')
        c.argument('permissions', type=validate_file_or_dict, help='The set of permissions for the item. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('subscriptions', action=AddFilesDriveCreateBundleSubscriptions, nargs='*', help='The set of '
                   'subscriptions on the item. Only supported on the root of a drive.')
        c.argument('thumbnails', type=validate_file_or_dict, help='Collection containing [ThumbnailSet][] objects '
                   'associated with the item. For more info, see [getting thumbnails][]. Read-only. Nullable. Expected '
                   'value: json-string/@json-file.')
        c.argument('versions', action=AddDrivesVersions, nargs='*', help='The list of previous versions of the item. '
                   'For more info, see [getting previous versions][]. Read-only. Nullable.')
        c.argument('workbook_id', type=str, help='Read-only.')
        c.argument('workbook_application', action=AddWorkbookApplication, nargs='*', help='workbookApplication')
        c.argument('workbook_comments', action=AddWorkbookComments, nargs='*', help='')
        c.argument('workbook_functions', action=AddWorkbookFunctions, nargs='*', help='workbookFunctions')
        c.argument('workbook_names', type=validate_file_or_dict, help='Represents a collection of workbook scoped '
                   'named items (named ranges and constants). Read-only. Expected value: json-string/@json-file.')
        c.argument('workbook_operations', type=validate_file_or_dict, help='The status of workbook operations. Getting '
                   'an operation collection is not supported, but you can get the status of a long-running operation '
                   'if the Location header is returned in the response. Read-only. Expected value: '
                   'json-string/@json-file.')
        c.argument('workbook_tables', type=validate_file_or_dict, help='Represents a collection of tables associated '
                   'with the workbook. Read-only. Expected value: json-string/@json-file.')
        c.argument('workbook_worksheets', type=validate_file_or_dict, help='Represents a collection of worksheets '
                   'associated with the workbook. Read-only. Expected value: json-string/@json-file.')
        c.argument('special_folder_name', type=str, help='The unique identifier for this item in the /drive/special '
                   'collection')
        c.argument('shared_owner', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('shared_scope', type=str, help='Indicates the scope of how the item is shared: anonymous, '
                   'organization, or users. Read-only.')
        c.argument('shared_shared_by', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('shared_shared_date_time', help='The UTC date and time when the item was shared. Read-only.')
        c.argument('search_result_on_click_telemetry_url', type=str, help='A callback URL that can be used to record '
                   'telemetry information. The application should issue a GET on this URL if the user interacts with '
                   'this item to improve the quality of results.')
        c.argument('remote_item_created_by', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_created_date_time', help='Date and time of item creation. Read-only.')
        c.argument('remote_item_file', type=validate_file_or_dict,
                   help='file Expected value: json-string/@json-file.')
        c.argument('remote_item_file_system_info', action=AddFileSystemInfo, nargs='*', help='fileSystemInfo')
        c.argument('remote_item_folder', type=validate_file_or_dict, help='folder Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_id', type=str, help='Unique identifier for the remote item in its drive. Read-only.')
        c.argument('remote_item_image', action=AddImage, nargs='*', help='image')
        c.argument('remote_item_last_modified_by', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_last_modified_date_time', help='Date and time the item was last modified. Read-only.')
        c.argument('remote_item_name', type=str, help='Optional. Filename of the remote item. Read-only.')
        c.argument('remote_item_package', action=AddRemoteItemPackage, nargs='*', help='package')
        c.argument('remote_item_parent_reference', type=validate_file_or_dict, help='itemReference Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_shared', type=validate_file_or_dict, help='shared Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('remote_item_size', type=int, help='Size of the remote item. Read-only.')
        c.argument('remote_item_special_folder', action=AddRemoteItemSpecialFolder, nargs='*', help='specialFolder')
        c.argument('remote_item_video', action=AddVideo, nargs='*', help='video')
        c.argument('remote_item_web_dav_url', type=str, help='DAV compatible URL for the item.')
        c.argument('remote_item_web_url', type=str, help='URL that displays the resource in the browser. Read-only.')
        c.argument('pending_operations_pending_content_update_queued_date_time', help='Date and time the pending '
                   'binary operation was queued in UTC time. Read-only.')
        c.argument('package_type', type=str, help='A string indicating the type of package. While oneNote is the only '
                   'currently defined value, you should expect other package types to be returned and handle them '
                   'accordingly.')
        c.argument('folder_child_count', type=int, help='Number of children contained immediately within this '
                   'container.')
        c.argument('folder_view', action=AddFolderView, nargs='*', help='folderView')
        c.argument('file_hashes', action=AddFileHashes, nargs='*', help='hashes')
        c.argument('file_mime_type', type=str, help='The MIME type for the file. This is determined by logic on the '
                   'server and might not be the value provided when the file was uploaded. Read-only.')
        c.argument('file_processing_metadata', arg_type=get_three_state_flag(), help='')
        c.argument('deleted_state', type=str, help='Represents the state of the deleted item.')
        c.argument('bundle_album', action=AddBundleAlbum, nargs='*', help='album')
        c.argument('bundle_child_count', type=int, help='')

    with self.argument_context('files drive-activity update-list-item') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_date_time', help='Date and time of item creation. Read-only.')
        c.argument('description', type=str, help='Provides a user-visible description of the item. Optional.')
        c.argument('e_tag', type=str, help='ETag for the item. Read-only.')
        c.argument('last_modified_date_time', help='Date and time the item was last modified. Read-only.')
        c.argument('name', type=str, help='The name of the item. Read-write.')
        c.argument('web_url', type=str, help='URL that displays the resource in the browser. Read-only.')
        c.argument('created_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory user '
                   'object. Expected value: json-string/@json-file.')
        c.argument('last_modified_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory '
                   'user object. Expected value: json-string/@json-file.')
        c.argument('parent_reference_drive_id', type=str, help='Unique identifier of the drive instance that contains '
                   'the item. Read-only.')
        c.argument('parent_reference_drive_type', type=str, help='Identifies the type of drive. See [drive][] resource '
                   'for values.')
        c.argument('parent_reference_id', type=str, help='Unique identifier of the item in the drive. Read-only.')
        c.argument('parent_reference_name', type=str, help='The name of the item being referenced. Read-only.')
        c.argument('parent_reference_path', type=str,
                   help='Path that can be used to navigate to the item. Read-only.')
        c.argument('parent_reference_share_id', type=str, help='A unique identifier for a shared resource that can be '
                   'accessed via the [Shares][] API.')
        c.argument('parent_reference_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('parent_reference_site_id', type=str, help='')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('microsoft_graph_identity_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('content_type', action=AddContentType, nargs='*', help='contentTypeInfo')
        c.argument('microsoft_graph_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('activities', type=validate_file_or_dict, help='The list of recent activities that took place on '
                   'this item. Expected value: json-string/@json-file.')
        c.argument('analytics', type=validate_file_or_dict, help='itemAnalytics Expected value: '
                   'json-string/@json-file.')
        c.argument('drive_item', type=validate_file_or_dict, help='driveItem Expected value: json-string/@json-file.')
        c.argument('versions', action=AddDrivesActivitiesVersions, nargs='*', help='The list of previous versions of '
                   'the list item.')
        c.argument('fields_id', type=str, help='Read-only.')

    with self.argument_context('files drive-activity-list-item delete') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('item_activity_old_id1', type=str, help='key: id of itemActivityOLD')
        c.argument('if_match', type=str, help='ETag')
        c.argument('list_item_version_id', type=str, help='key: id of listItemVersion')

    with self.argument_context('files drive-activity-list-item create-activity') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('files drive-activity-list-item create-link') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('type_', options_list=['--type'], type=str, help='')
        c.argument('scope', type=str, help='')
        c.argument('expiration_date_time', help='')
        c.argument('password', type=str, help='')
        c.argument('recipients', action=AddDrivesActivitiesListitemRecipients, nargs='*', help='')

    with self.argument_context('files drive-activity-list-item create-version') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('last_modified_date_time', help='Date and time the version was last modified. Read-only.')
        c.argument('publication', action=AddPublication, nargs='*', help='publicationFacet')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('fields_id', type=str, help='Read-only.')

    with self.argument_context('files drive-activity-list-item get-activity') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('item_activity_old_id1', type=str, help='key: id of itemActivityOLD')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files drive-activity-list-item get-activity-by-interval') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('start_date_time', type=str, help='')
        c.argument('end_date_time', type=str, help='')
        c.argument('interval', type=str, help='')

    with self.argument_context('files drive-activity-list-item get-analytic') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files drive-activity-list-item get-drive-item') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files drive-activity-list-item get-drive-item-content') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')

    with self.argument_context('files drive-activity-list-item get-field') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files drive-activity-list-item get-ref-analytic') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')

    with self.argument_context('files drive-activity-list-item get-version') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('list_item_version_id', type=str, help='key: id of listItemVersion')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files drive-activity-list-item list-activity') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files drive-activity-list-item list-version') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files drive-activity-list-item set-drive-item-content') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('data', help='New media content.')

    with self.argument_context('files drive-activity-list-item set-ref-analytic') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('body', type=validate_file_or_dict, help='New navigation property ref values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('files drive-activity-list-item update-activity') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('item_activity_old_id1', type=str, help='key: id of itemActivityOLD')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('files drive-activity-list-item update-drive-item') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_date_time', help='Date and time of item creation. Read-only.')
        c.argument('description', type=str, help='Provides a user-visible description of the item. Optional.')
        c.argument('e_tag', type=str, help='ETag for the item. Read-only.')
        c.argument('last_modified_date_time', help='Date and time the item was last modified. Read-only.')
        c.argument('name', type=str, help='The name of the item. Read-write.')
        c.argument('web_url', type=str, help='URL that displays the resource in the browser. Read-only.')
        c.argument('created_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory user '
                   'object. Expected value: json-string/@json-file.')
        c.argument('last_modified_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory '
                   'user object. Expected value: json-string/@json-file.')
        c.argument('parent_reference_drive_id', type=str, help='Unique identifier of the drive instance that contains '
                   'the item. Read-only.')
        c.argument('parent_reference_drive_type', type=str, help='Identifies the type of drive. See [drive][] resource '
                   'for values.')
        c.argument('parent_reference_id', type=str, help='Unique identifier of the item in the drive. Read-only.')
        c.argument('parent_reference_name', type=str, help='The name of the item being referenced. Read-only.')
        c.argument('parent_reference_path', type=str,
                   help='Path that can be used to navigate to the item. Read-only.')
        c.argument('parent_reference_share_id', type=str, help='A unique identifier for a shared resource that can be '
                   'accessed via the [Shares][] API.')
        c.argument('parent_reference_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('parent_reference_site_id', type=str, help='')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('microsoft_graph_identity_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('audio', action=AddAudio, nargs='*', help='audio')
        c.argument('content', help='The content stream, if the item represents a file.')
        c.argument('c_tag', type=str, help='An eTag for the content of the item. This eTag is not changed if only the '
                   'metadata is changed. Note This property is not returned if the item is a folder. Read-only.')
        c.argument('file_system_info', action=AddFileSystemInfo, nargs='*', help='fileSystemInfo')
        c.argument('image', action=AddImage, nargs='*', help='image')
        c.argument('location', arg_type=get_location_type(self.cli_ctx))
        c.argument('photo', action=AddPhoto, nargs='*', help='photo')
        c.argument('publication', action=AddPublication, nargs='*', help='publicationFacet')
        c.argument('root', type=validate_file_or_dict, help='root Expected value: json-string/@json-file.')
        c.argument('microsoft_graph_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('size', type=int, help='Size of the item in bytes. Read-only.')
        c.argument('video', action=AddVideo, nargs='*', help='video')
        c.argument('web_dav_url', type=str, help='WebDAV compatible URL for the item.')
        c.argument('activities', type=validate_file_or_dict, help='The list of recent activities that took place on '
                   'this item. Expected value: json-string/@json-file.')
        c.argument('analytics', type=validate_file_or_dict, help='itemAnalytics Expected value: '
                   'json-string/@json-file.')
        c.argument('children', type=validate_file_or_dict, help='Collection containing Item objects for the immediate '
                   'children of Item. Only items representing folders have children. Read-only. Nullable. Expected '
                   'value: json-string/@json-file.')
        c.argument('list_item', type=validate_file_or_dict, help='listItem Expected value: json-string/@json-file.')
        c.argument('permissions', type=validate_file_or_dict, help='The set of permissions for the item. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('subscriptions', action=AddFilesDriveCreateBundleSubscriptions, nargs='*', help='The set of '
                   'subscriptions on the item. Only supported on the root of a drive.')
        c.argument('thumbnails', type=validate_file_or_dict, help='Collection containing [ThumbnailSet][] objects '
                   'associated with the item. For more info, see [getting thumbnails][]. Read-only. Nullable. Expected '
                   'value: json-string/@json-file.')
        c.argument('versions', action=AddDrivesVersions, nargs='*', help='The list of previous versions of the item. '
                   'For more info, see [getting previous versions][]. Read-only. Nullable.')
        c.argument('workbook_id', type=str, help='Read-only.')
        c.argument('workbook_application', action=AddWorkbookApplication, nargs='*', help='workbookApplication')
        c.argument('workbook_comments', action=AddWorkbookComments, nargs='*', help='')
        c.argument('workbook_functions', action=AddWorkbookFunctions, nargs='*', help='workbookFunctions')
        c.argument('workbook_names', type=validate_file_or_dict, help='Represents a collection of workbook scoped '
                   'named items (named ranges and constants). Read-only. Expected value: json-string/@json-file.')
        c.argument('workbook_operations', type=validate_file_or_dict, help='The status of workbook operations. Getting '
                   'an operation collection is not supported, but you can get the status of a long-running operation '
                   'if the Location header is returned in the response. Read-only. Expected value: '
                   'json-string/@json-file.')
        c.argument('workbook_tables', type=validate_file_or_dict, help='Represents a collection of tables associated '
                   'with the workbook. Read-only. Expected value: json-string/@json-file.')
        c.argument('workbook_worksheets', type=validate_file_or_dict, help='Represents a collection of worksheets '
                   'associated with the workbook. Read-only. Expected value: json-string/@json-file.')
        c.argument('special_folder_name', type=str, help='The unique identifier for this item in the /drive/special '
                   'collection')
        c.argument('shared_owner', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('shared_scope', type=str, help='Indicates the scope of how the item is shared: anonymous, '
                   'organization, or users. Read-only.')
        c.argument('shared_shared_by', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('shared_shared_date_time', help='The UTC date and time when the item was shared. Read-only.')
        c.argument('search_result_on_click_telemetry_url', type=str, help='A callback URL that can be used to record '
                   'telemetry information. The application should issue a GET on this URL if the user interacts with '
                   'this item to improve the quality of results.')
        c.argument('remote_item_created_by', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_created_date_time', help='Date and time of item creation. Read-only.')
        c.argument('remote_item_file', type=validate_file_or_dict,
                   help='file Expected value: json-string/@json-file.')
        c.argument('remote_item_file_system_info', action=AddFileSystemInfo, nargs='*', help='fileSystemInfo')
        c.argument('remote_item_folder', type=validate_file_or_dict, help='folder Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_id', type=str, help='Unique identifier for the remote item in its drive. Read-only.')
        c.argument('remote_item_image', action=AddImage, nargs='*', help='image')
        c.argument('remote_item_last_modified_by', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_last_modified_date_time', help='Date and time the item was last modified. Read-only.')
        c.argument('remote_item_name', type=str, help='Optional. Filename of the remote item. Read-only.')
        c.argument('remote_item_package', action=AddRemoteItemPackage, nargs='*', help='package')
        c.argument('remote_item_parent_reference', type=validate_file_or_dict, help='itemReference Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_shared', type=validate_file_or_dict, help='shared Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('remote_item_size', type=int, help='Size of the remote item. Read-only.')
        c.argument('remote_item_special_folder', action=AddRemoteItemSpecialFolder, nargs='*', help='specialFolder')
        c.argument('remote_item_video', action=AddVideo, nargs='*', help='video')
        c.argument('remote_item_web_dav_url', type=str, help='DAV compatible URL for the item.')
        c.argument('remote_item_web_url', type=str, help='URL that displays the resource in the browser. Read-only.')
        c.argument('pending_operations_pending_content_update_queued_date_time', help='Date and time the pending '
                   'binary operation was queued in UTC time. Read-only.')
        c.argument('package_type', type=str, help='A string indicating the type of package. While oneNote is the only '
                   'currently defined value, you should expect other package types to be returned and handle them '
                   'accordingly.')
        c.argument('folder_child_count', type=int, help='Number of children contained immediately within this '
                   'container.')
        c.argument('folder_view', action=AddFolderView, nargs='*', help='folderView')
        c.argument('file_hashes', action=AddFileHashes, nargs='*', help='hashes')
        c.argument('file_mime_type', type=str, help='The MIME type for the file. This is determined by logic on the '
                   'server and might not be the value provided when the file was uploaded. Read-only.')
        c.argument('file_processing_metadata', arg_type=get_three_state_flag(), help='')
        c.argument('deleted_state', type=str, help='Represents the state of the deleted item.')
        c.argument('bundle_album', action=AddBundleAlbum, nargs='*', help='album')
        c.argument('bundle_child_count', type=int, help='')

    with self.argument_context('files drive-activity-list-item update-field') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')

    with self.argument_context('files drive-activity-list-item update-version') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('list_item_version_id', type=str, help='key: id of listItemVersion')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('last_modified_date_time', help='Date and time the version was last modified. Read-only.')
        c.argument('publication', action=AddPublication, nargs='*', help='publicationFacet')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('fields_id', type=str, help='Read-only.')

    with self.argument_context('files drive-activity-list-item-version delete') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('list_item_version_id', type=str, help='key: id of listItemVersion')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('files drive-activity-list-item-version get-field') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('list_item_version_id', type=str, help='key: id of listItemVersion')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files drive-activity-list-item-version restore-version') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('list_item_version_id', type=str, help='key: id of listItemVersion')

    with self.argument_context('files drive-activity-list-item-version update-field') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('list_item_version_id', type=str, help='key: id of listItemVersion')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')

    with self.argument_context('files drive-list delete') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('if_match', type=str, help='ETag')
        c.argument('column_definition_id', type=str, help='key: id of columnDefinition')
        c.argument('content_type_id', type=str, help='key: id of contentType')
        c.argument('list_item_id', type=str, help='key: id of listItem')
        c.argument('subscription_id', type=str, help='key: id of subscription', id_part='subscription')

    with self.argument_context('files drive-list create-activity') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('files drive-list create-column') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('boolean', type=validate_file_or_dict,
                   help='booleanColumn Expected value: json-string/@json-file.')
        c.argument('calculated', action=AddCalculated, nargs='*', help='calculatedColumn')
        c.argument('choice', action=AddChoice, nargs='*', help='choiceColumn')
        c.argument('column_group', type=str, help='For site columns, the name of the group this column belongs to. '
                   'Helps organize related columns.')
        c.argument('date_time', action=AddDateTime, nargs='*', help='dateTimeColumn')
        c.argument('default_value', action=AddDefaultValue, nargs='*', help='defaultColumnValue')
        c.argument('description', type=str, help='The user-facing description of the column.')
        c.argument('display_name', type=str, help='The user-facing name of the column.')
        c.argument('enforce_unique_values', arg_type=get_three_state_flag(), help='If true, no two list items may have '
                   'the same value for this column.')
        c.argument('geolocation', type=validate_file_or_dict, help='geolocationColumn Expected value: '
                   'json-string/@json-file.')
        c.argument('hidden', arg_type=get_three_state_flag(), help='Specifies whether the column is displayed in the '
                   'user interface.')
        c.argument('indexed', arg_type=get_three_state_flag(), help='Specifies whether the column values can used for '
                   'sorting and searching.')
        c.argument('lookup', action=AddLookup, nargs='*', help='lookupColumn')
        c.argument('name', type=str, help='The API-facing name of the column as it appears in the [fields][] on a '
                   '[listItem][]. For the user-facing name, see displayName.')
        c.argument('number', action=AddNumber, nargs='*', help='numberColumn')
        c.argument('person_or_group', action=AddPersonOrGroup, nargs='*', help='personOrGroupColumn')
        c.argument('read_only', arg_type=get_three_state_flag(), help='Specifies whether the column values can be '
                   'modified.')
        c.argument('required', arg_type=get_three_state_flag(), help='Specifies whether the column value is not '
                   'optional.')
        c.argument('text', action=AddText, nargs='*', help='textColumn')
        c.argument('currency_locale', type=str, help='Specifies the locale from which to infer the currency symbol.')

    with self.argument_context('files drive-list create-content-type') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='The descriptive text for the item.')
        c.argument('group', type=str, help='The name of the group this content type belongs to. Helps organize related '
                   'content types.')
        c.argument('hidden', arg_type=get_three_state_flag(), help='Indicates whether the content type is hidden in '
                   'the list\'s \'New\' menu.')
        c.argument('name', type=str, help='The name of the content type.')
        c.argument('order', action=AddOrder, nargs='*', help='contentTypeOrder')
        c.argument('parent_id', type=str, help='The unique identifier of the content type.')
        c.argument('read_only', arg_type=get_three_state_flag(), help='If true, the content type cannot be modified '
                   'unless this value is first set to false.')
        c.argument('sealed', arg_type=get_three_state_flag(), help='If true, the content type cannot be modified by '
                   'users or through push-down operations. Only site collection administrators can seal or unseal '
                   'content types.')
        c.argument('column_links', action=AddColumnLinks, nargs='*', help='The collection of columns that are required '
                   'by this content type')
        c.argument('inherited_from_drive_id', type=str, help='Unique identifier of the drive instance that contains '
                   'the item. Read-only.')
        c.argument('inherited_from_drive_type', type=str, help='Identifies the type of drive. See [drive][] resource '
                   'for values.')
        c.argument('inherited_from_id', type=str, help='Unique identifier of the item in the drive. Read-only.')
        c.argument('inherited_from_name', type=str, help='The name of the item being referenced. Read-only.')
        c.argument('inherited_from_path', type=str, help='Path that can be used to navigate to the item. Read-only.')
        c.argument('inherited_from_share_id', type=str, help='A unique identifier for a shared resource that can be '
                   'accessed via the [Shares][] API.')
        c.argument('inherited_from_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('inherited_from_site_id', type=str, help='')

    with self.argument_context('files drive-list create-item') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_date_time', help='Date and time of item creation. Read-only.')
        c.argument('description', type=str, help='Provides a user-visible description of the item. Optional.')
        c.argument('e_tag', type=str, help='ETag for the item. Read-only.')
        c.argument('last_modified_date_time', help='Date and time the item was last modified. Read-only.')
        c.argument('name', type=str, help='The name of the item. Read-write.')
        c.argument('web_url', type=str, help='URL that displays the resource in the browser. Read-only.')
        c.argument('created_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory user '
                   'object. Expected value: json-string/@json-file.')
        c.argument('last_modified_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory '
                   'user object. Expected value: json-string/@json-file.')
        c.argument('parent_reference_drive_id', type=str, help='Unique identifier of the drive instance that contains '
                   'the item. Read-only.')
        c.argument('parent_reference_drive_type', type=str, help='Identifies the type of drive. See [drive][] resource '
                   'for values.')
        c.argument('parent_reference_id', type=str, help='Unique identifier of the item in the drive. Read-only.')
        c.argument('parent_reference_name', type=str, help='The name of the item being referenced. Read-only.')
        c.argument('parent_reference_path', type=str,
                   help='Path that can be used to navigate to the item. Read-only.')
        c.argument('parent_reference_share_id', type=str, help='A unique identifier for a shared resource that can be '
                   'accessed via the [Shares][] API.')
        c.argument('parent_reference_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('parent_reference_site_id', type=str, help='')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('microsoft_graph_identity_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('content_type', action=AddContentType, nargs='*', help='contentTypeInfo')
        c.argument('microsoft_graph_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('activities', type=validate_file_or_dict, help='The list of recent activities that took place on '
                   'this item. Expected value: json-string/@json-file.')
        c.argument('analytics', type=validate_file_or_dict, help='itemAnalytics Expected value: '
                   'json-string/@json-file.')
        c.argument('drive_item', type=validate_file_or_dict, help='driveItem Expected value: json-string/@json-file.')
        c.argument('versions', action=AddDrivesActivitiesVersions, nargs='*', help='The list of previous versions of '
                   'the list item.')
        c.argument('fields_id', type=str, help='Read-only.')

    with self.argument_context('files drive-list create-subscription') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('application_id', type=str, help='Identifier of the application used to create the subscription. '
                   'Read-only.')
        c.argument('change_type', type=str, help='Required. Indicates the type of change in the subscribed resource '
                   'that will raise a change notification. The supported values are: created, updated, deleted. '
                   'Multiple values can be combined using a comma-separated list.Note: Drive root item and list change '
                   'notifications support only the updated changeType. User and group change notifications support '
                   'updated and deleted changeType.')
        c.argument('client_state', type=str, help='Optional. Specifies the value of the clientState property sent by '
                   'the service in each change notification. The maximum length is 128 characters. The client can '
                   'check that the change notification came from the service by comparing the value of the clientState '
                   'property sent with the subscription with the value of the clientState property received with each '
                   'change notification.')
        c.argument('creator_id', type=str, help='Identifier of the user or service principal that created the '
                   'subscription. If the app used delegated permissions to create the subscription, this field '
                   'contains the id of the signed-in user the app called on behalf of. If the app used application '
                   'permissions, this field contains the id of the service principal corresponding to the app. '
                   'Read-only.')
        c.argument('encryption_certificate', type=str, help='A base64-encoded representation of a certificate with a '
                   'public key used to encrypt resource data in change notifications. Optional. Required when '
                   'includeResourceData is true.')
        c.argument('encryption_certificate_id', type=str, help='A custom app-provided identifier to help identify the '
                   'certificate needed to decrypt resource data. Optional.')
        c.argument('expiration_date_time', help='Required. Specifies the date and time when the webhook subscription '
                   'expires. The time is in UTC, and can be an amount of time from subscription creation that varies '
                   'for the resource subscribed to.  See the table below for maximum supported subscription length of '
                   'time.')
        c.argument('include_properties', arg_type=get_three_state_flag(), help='')
        c.argument('include_resource_data', arg_type=get_three_state_flag(), help='When set to true, change '
                   'notifications include resource data (such as content of a chat message). Optional.')
        c.argument('latest_supported_tls_version', type=str, help='Specifies the latest version of Transport Layer '
                   'Security (TLS) that the notification endpoint, specified by notificationUrl, supports. The '
                   'possible values are: v1_0, v1_1, v1_2, v1_3. For subscribers whose notification endpoint supports '
                   'a version lower than the currently recommended version (TLS 1.2), specifying this property by a '
                   'set timeline allows them to temporarily use their deprecated version of TLS before completing '
                   'their upgrade to TLS 1.2. For these subscribers, not setting this property per the timeline would '
                   'result in subscription operations failing. For subscribers whose notification endpoint already '
                   'supports TLS 1.2, setting this property is optional. In such cases, Microsoft Graph defaults the '
                   'property to v1_2.')
        c.argument('lifecycle_notification_url', type=str, help='The URL of the endpoint that receives lifecycle '
                   'notifications, including subscriptionRemoved and missed notifications. This URL must make use of '
                   'the HTTPS protocol. Optional. Read more about how Outlook resources use lifecycle notifications.')
        c.argument('notification_url', type=str, help='Required. The URL of the endpoint that will receive the change '
                   'notifications. This URL must make use of the HTTPS protocol.')
        c.argument('resource', type=str, help='Required. Specifies the resource that will be monitored for changes. Do '
                   'not include the base URL (https://graph.microsoft.com/v1.0/). See the possible resource path '
                   'values for each supported resource.')

    with self.argument_context('files drive-list get-activity') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files drive-list get-column') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('column_definition_id', type=str, help='key: id of columnDefinition')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files drive-list get-content-type') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('content_type_id', type=str, help='key: id of contentType')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files drive-list get-drive') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files drive-list get-item') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('list_item_id', type=str, help='key: id of listItem')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files drive-list get-subscription') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('subscription_id', type=str, help='key: id of subscription', id_part='subscription')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files drive-list list-activity') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files drive-list list-column') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files drive-list list-content-type') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files drive-list list-item') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files drive-list list-subscription') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files drive-list update-activity') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('files drive-list update-column') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('column_definition_id', type=str, help='key: id of columnDefinition')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('boolean', type=validate_file_or_dict,
                   help='booleanColumn Expected value: json-string/@json-file.')
        c.argument('calculated', action=AddCalculated, nargs='*', help='calculatedColumn')
        c.argument('choice', action=AddChoice, nargs='*', help='choiceColumn')
        c.argument('column_group', type=str, help='For site columns, the name of the group this column belongs to. '
                   'Helps organize related columns.')
        c.argument('date_time', action=AddDateTime, nargs='*', help='dateTimeColumn')
        c.argument('default_value', action=AddDefaultValue, nargs='*', help='defaultColumnValue')
        c.argument('description', type=str, help='The user-facing description of the column.')
        c.argument('display_name', type=str, help='The user-facing name of the column.')
        c.argument('enforce_unique_values', arg_type=get_three_state_flag(), help='If true, no two list items may have '
                   'the same value for this column.')
        c.argument('geolocation', type=validate_file_or_dict, help='geolocationColumn Expected value: '
                   'json-string/@json-file.')
        c.argument('hidden', arg_type=get_three_state_flag(), help='Specifies whether the column is displayed in the '
                   'user interface.')
        c.argument('indexed', arg_type=get_three_state_flag(), help='Specifies whether the column values can used for '
                   'sorting and searching.')
        c.argument('lookup', action=AddLookup, nargs='*', help='lookupColumn')
        c.argument('name', type=str, help='The API-facing name of the column as it appears in the [fields][] on a '
                   '[listItem][]. For the user-facing name, see displayName.')
        c.argument('number', action=AddNumber, nargs='*', help='numberColumn')
        c.argument('person_or_group', action=AddPersonOrGroup, nargs='*', help='personOrGroupColumn')
        c.argument('read_only', arg_type=get_three_state_flag(), help='Specifies whether the column values can be '
                   'modified.')
        c.argument('required', arg_type=get_three_state_flag(), help='Specifies whether the column value is not '
                   'optional.')
        c.argument('text', action=AddText, nargs='*', help='textColumn')
        c.argument('currency_locale', type=str, help='Specifies the locale from which to infer the currency symbol.')

    with self.argument_context('files drive-list update-content-type') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('content_type_id', type=str, help='key: id of contentType')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='The descriptive text for the item.')
        c.argument('group', type=str, help='The name of the group this content type belongs to. Helps organize related '
                   'content types.')
        c.argument('hidden', arg_type=get_three_state_flag(), help='Indicates whether the content type is hidden in '
                   'the list\'s \'New\' menu.')
        c.argument('name', type=str, help='The name of the content type.')
        c.argument('order', action=AddOrder, nargs='*', help='contentTypeOrder')
        c.argument('parent_id', type=str, help='The unique identifier of the content type.')
        c.argument('read_only', arg_type=get_three_state_flag(), help='If true, the content type cannot be modified '
                   'unless this value is first set to false.')
        c.argument('sealed', arg_type=get_three_state_flag(), help='If true, the content type cannot be modified by '
                   'users or through push-down operations. Only site collection administrators can seal or unseal '
                   'content types.')
        c.argument('column_links', action=AddColumnLinks, nargs='*', help='The collection of columns that are required '
                   'by this content type')
        c.argument('inherited_from_drive_id', type=str, help='Unique identifier of the drive instance that contains '
                   'the item. Read-only.')
        c.argument('inherited_from_drive_type', type=str, help='Identifies the type of drive. See [drive][] resource '
                   'for values.')
        c.argument('inherited_from_id', type=str, help='Unique identifier of the item in the drive. Read-only.')
        c.argument('inherited_from_name', type=str, help='The name of the item being referenced. Read-only.')
        c.argument('inherited_from_path', type=str, help='Path that can be used to navigate to the item. Read-only.')
        c.argument('inherited_from_share_id', type=str, help='A unique identifier for a shared resource that can be '
                   'accessed via the [Shares][] API.')
        c.argument('inherited_from_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('inherited_from_site_id', type=str, help='')

    with self.argument_context('files drive-list update-drive') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_date_time', help='Date and time of item creation. Read-only.')
        c.argument('description', type=str, help='Provides a user-visible description of the item. Optional.')
        c.argument('e_tag', type=str, help='ETag for the item. Read-only.')
        c.argument('last_modified_date_time', help='Date and time the item was last modified. Read-only.')
        c.argument('name', type=str, help='The name of the item. Read-write.')
        c.argument('web_url', type=str, help='URL that displays the resource in the browser. Read-only.')
        c.argument('created_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory user '
                   'object. Expected value: json-string/@json-file.')
        c.argument('last_modified_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory '
                   'user object. Expected value: json-string/@json-file.')
        c.argument('parent_reference_drive_id', type=str, help='Unique identifier of the drive instance that contains '
                   'the item. Read-only.')
        c.argument('parent_reference_drive_type', type=str, help='Identifies the type of drive. See [drive][] resource '
                   'for values.')
        c.argument('parent_reference_id', type=str, help='Unique identifier of the item in the drive. Read-only.')
        c.argument('parent_reference_name', type=str, help='The name of the item being referenced. Read-only.')
        c.argument('parent_reference_path', type=str,
                   help='Path that can be used to navigate to the item. Read-only.')
        c.argument('parent_reference_share_id', type=str, help='A unique identifier for a shared resource that can be '
                   'accessed via the [Shares][] API.')
        c.argument('parent_reference_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('parent_reference_site_id', type=str, help='')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('microsoft_graph_identity_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('microsoft_graph_drive_type', type=str, help='Describes the type of drive represented by this '
                   'resource. OneDrive personal drives will return personal. OneDrive for Business will return '
                   'business. SharePoint document libraries will return documentLibrary. Read-only.')
        c.argument('share_point_ids', action=AddParentReferenceSharepointIds, nargs='*', help='sharepointIds')
        c.argument('system', type=validate_file_or_dict, help='systemFacet Expected value: json-string/@json-file.')
        c.argument('activities', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('bundles', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('following', type=validate_file_or_dict, help='The list of items the user is following. Only in '
                   'OneDrive for Business. Expected value: json-string/@json-file.')
        c.argument('items', type=validate_file_or_dict, help='All items contained in the drive. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('root', type=validate_file_or_dict, help='driveItem Expected value: json-string/@json-file.')
        c.argument('special', type=validate_file_or_dict, help='Collection of common folders available in OneDrive. '
                   'Read-only. Nullable. Expected value: json-string/@json-file.')
        c.argument('list_id', type=str, help='Read-only.')
        c.argument('list_created_date_time', help='Date and time of item creation. Read-only.')
        c.argument('list_description', type=str, help='Provides a user-visible description of the item. Optional.')
        c.argument('list_e_tag', type=str, help='ETag for the item. Read-only.')
        c.argument('list_last_modified_date_time', help='Date and time the item was last modified. Read-only.')
        c.argument('list_name', type=str, help='The name of the item. Read-write.')
        c.argument('list_web_url', type=str, help='URL that displays the resource in the browser. Read-only.')
        c.argument('list_created_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory user '
                   'object. Expected value: json-string/@json-file.')
        c.argument('list_last_modified_by_user', type=validate_file_or_dict, help='Represents an Azure Active '
                   'Directory user object. Expected value: json-string/@json-file.')
        c.argument('list_parent_reference_drive_id', type=str, help='Unique identifier of the drive instance that '
                   'contains the item. Read-only.')
        c.argument('list_parent_reference_drive_type', type=str, help='Identifies the type of drive. See [drive][] '
                   'resource for values.')
        c.argument('list_parent_reference_id', type=str,
                   help='Unique identifier of the item in the drive. Read-only.')
        c.argument('list_parent_reference_name', type=str, help='The name of the item being referenced. Read-only.')
        c.argument('list_parent_reference_path', type=str, help='Path that can be used to navigate to the item. '
                   'Read-only.')
        c.argument('list_parent_reference_share_id', type=str, help='A unique identifier for a shared resource that '
                   'can be accessed via the [Shares][] API.')
        c.argument('list_parent_reference_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('list_parent_reference_site_id', type=str, help='')
        c.argument('list_last_modified_by_application', action=AddLastModifiedByApplication, nargs='*',
                   help='identity')
        c.argument('list_last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('user1', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('list_created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('list_created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('user2', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('list_display_name', type=str, help='The displayable title of the list.')
        c.argument('list_list', action=AddListList, nargs='*', help='listInfo')
        c.argument('list_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help='sharepointIds')
        c.argument('list_system', type=validate_file_or_dict, help='systemFacet Expected value: '
                   'json-string/@json-file.')
        c.argument('list_activities', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('list_columns', type=validate_file_or_dict, help='The collection of field definitions for this '
                   'list. Expected value: json-string/@json-file.')
        c.argument('list_content_types', type=validate_file_or_dict, help='The collection of content types present in '
                   'this list. Expected value: json-string/@json-file.')
        c.argument('list_drive', type=validate_file_or_dict, help='drive Expected value: json-string/@json-file.')
        c.argument('list_items', type=validate_file_or_dict, help='All items contained in the list. Expected value: '
                   'json-string/@json-file.')
        c.argument('list_subscriptions', action=AddFilesDriveUpdateListSubscriptions, nargs='*', help='The set of '
                   'subscriptions on the list.')
        c.argument('quota_deleted', type=int, help='Total space consumed by files in the recycle bin, in bytes. '
                   'Read-only.')
        c.argument('quota_remaining', type=int, help='Total space remaining before reaching the quota limit, in bytes. '
                   'Read-only.')
        c.argument('quota_state', type=str, help='Enumeration value that indicates the state of the storage space. '
                   'Read-only.')
        c.argument('quota_storage_plan_information', action=AddQuotaStoragePlanInformation, nargs='*', help=''
                   'storagePlanInformation')
        c.argument('quota_total', type=int, help='Total allowed storage space, in bytes. Read-only.')
        c.argument('quota_used', type=int, help='Total space used, in bytes. Read-only.')
        c.argument('owner_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('owner_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('owner_user', action=AddLastModifiedByApplication, nargs='*', help='identity')

    with self.argument_context('files drive-list update-item') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('list_item_id', type=str, help='key: id of listItem')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_date_time', help='Date and time of item creation. Read-only.')
        c.argument('description', type=str, help='Provides a user-visible description of the item. Optional.')
        c.argument('e_tag', type=str, help='ETag for the item. Read-only.')
        c.argument('last_modified_date_time', help='Date and time the item was last modified. Read-only.')
        c.argument('name', type=str, help='The name of the item. Read-write.')
        c.argument('web_url', type=str, help='URL that displays the resource in the browser. Read-only.')
        c.argument('created_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory user '
                   'object. Expected value: json-string/@json-file.')
        c.argument('last_modified_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory '
                   'user object. Expected value: json-string/@json-file.')
        c.argument('parent_reference_drive_id', type=str, help='Unique identifier of the drive instance that contains '
                   'the item. Read-only.')
        c.argument('parent_reference_drive_type', type=str, help='Identifies the type of drive. See [drive][] resource '
                   'for values.')
        c.argument('parent_reference_id', type=str, help='Unique identifier of the item in the drive. Read-only.')
        c.argument('parent_reference_name', type=str, help='The name of the item being referenced. Read-only.')
        c.argument('parent_reference_path', type=str,
                   help='Path that can be used to navigate to the item. Read-only.')
        c.argument('parent_reference_share_id', type=str, help='A unique identifier for a shared resource that can be '
                   'accessed via the [Shares][] API.')
        c.argument('parent_reference_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('parent_reference_site_id', type=str, help='')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('microsoft_graph_identity_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('content_type', action=AddContentType, nargs='*', help='contentTypeInfo')
        c.argument('microsoft_graph_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('activities', type=validate_file_or_dict, help='The list of recent activities that took place on '
                   'this item. Expected value: json-string/@json-file.')
        c.argument('analytics', type=validate_file_or_dict, help='itemAnalytics Expected value: '
                   'json-string/@json-file.')
        c.argument('drive_item', type=validate_file_or_dict, help='driveItem Expected value: json-string/@json-file.')
        c.argument('versions', action=AddDrivesActivitiesVersions, nargs='*', help='The list of previous versions of '
                   'the list item.')
        c.argument('fields_id', type=str, help='Read-only.')

    with self.argument_context('files drive-list update-subscription') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('subscription_id', type=str, help='key: id of subscription', id_part='subscription')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('application_id', type=str, help='Identifier of the application used to create the subscription. '
                   'Read-only.')
        c.argument('change_type', type=str, help='Required. Indicates the type of change in the subscribed resource '
                   'that will raise a change notification. The supported values are: created, updated, deleted. '
                   'Multiple values can be combined using a comma-separated list.Note: Drive root item and list change '
                   'notifications support only the updated changeType. User and group change notifications support '
                   'updated and deleted changeType.')
        c.argument('client_state', type=str, help='Optional. Specifies the value of the clientState property sent by '
                   'the service in each change notification. The maximum length is 128 characters. The client can '
                   'check that the change notification came from the service by comparing the value of the clientState '
                   'property sent with the subscription with the value of the clientState property received with each '
                   'change notification.')
        c.argument('creator_id', type=str, help='Identifier of the user or service principal that created the '
                   'subscription. If the app used delegated permissions to create the subscription, this field '
                   'contains the id of the signed-in user the app called on behalf of. If the app used application '
                   'permissions, this field contains the id of the service principal corresponding to the app. '
                   'Read-only.')
        c.argument('encryption_certificate', type=str, help='A base64-encoded representation of a certificate with a '
                   'public key used to encrypt resource data in change notifications. Optional. Required when '
                   'includeResourceData is true.')
        c.argument('encryption_certificate_id', type=str, help='A custom app-provided identifier to help identify the '
                   'certificate needed to decrypt resource data. Optional.')
        c.argument('expiration_date_time', help='Required. Specifies the date and time when the webhook subscription '
                   'expires. The time is in UTC, and can be an amount of time from subscription creation that varies '
                   'for the resource subscribed to.  See the table below for maximum supported subscription length of '
                   'time.')
        c.argument('include_properties', arg_type=get_three_state_flag(), help='')
        c.argument('include_resource_data', arg_type=get_three_state_flag(), help='When set to true, change '
                   'notifications include resource data (such as content of a chat message). Optional.')
        c.argument('latest_supported_tls_version', type=str, help='Specifies the latest version of Transport Layer '
                   'Security (TLS) that the notification endpoint, specified by notificationUrl, supports. The '
                   'possible values are: v1_0, v1_1, v1_2, v1_3. For subscribers whose notification endpoint supports '
                   'a version lower than the currently recommended version (TLS 1.2), specifying this property by a '
                   'set timeline allows them to temporarily use their deprecated version of TLS before completing '
                   'their upgrade to TLS 1.2. For these subscribers, not setting this property per the timeline would '
                   'result in subscription operations failing. For subscribers whose notification endpoint already '
                   'supports TLS 1.2, setting this property is optional. In such cases, Microsoft Graph defaults the '
                   'property to v1_2.')
        c.argument('lifecycle_notification_url', type=str, help='The URL of the endpoint that receives lifecycle '
                   'notifications, including subscriptionRemoved and missed notifications. This URL must make use of '
                   'the HTTPS protocol. Optional. Read more about how Outlook resources use lifecycle notifications.')
        c.argument('notification_url', type=str, help='Required. The URL of the endpoint that will receive the change '
                   'notifications. This URL must make use of the HTTPS protocol.')
        c.argument('resource', type=str, help='Required. Specifies the resource that will be monitored for changes. Do '
                   'not include the base URL (https://graph.microsoft.com/v1.0/). See the possible resource path '
                   'values for each supported resource.')

    with self.argument_context('files drive-list-activity delete') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('files drive-list-activity get-drive-item') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files drive-list-activity get-drive-item-content') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')

    with self.argument_context('files drive-list-activity get-list-item') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files drive-list-activity set-drive-item-content') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('data', help='New media content.')

    with self.argument_context('files drive-list-activity update-drive-item') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_date_time', help='Date and time of item creation. Read-only.')
        c.argument('description', type=str, help='Provides a user-visible description of the item. Optional.')
        c.argument('e_tag', type=str, help='ETag for the item. Read-only.')
        c.argument('last_modified_date_time', help='Date and time the item was last modified. Read-only.')
        c.argument('name', type=str, help='The name of the item. Read-write.')
        c.argument('web_url', type=str, help='URL that displays the resource in the browser. Read-only.')
        c.argument('created_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory user '
                   'object. Expected value: json-string/@json-file.')
        c.argument('last_modified_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory '
                   'user object. Expected value: json-string/@json-file.')
        c.argument('parent_reference_drive_id', type=str, help='Unique identifier of the drive instance that contains '
                   'the item. Read-only.')
        c.argument('parent_reference_drive_type', type=str, help='Identifies the type of drive. See [drive][] resource '
                   'for values.')
        c.argument('parent_reference_id', type=str, help='Unique identifier of the item in the drive. Read-only.')
        c.argument('parent_reference_name', type=str, help='The name of the item being referenced. Read-only.')
        c.argument('parent_reference_path', type=str,
                   help='Path that can be used to navigate to the item. Read-only.')
        c.argument('parent_reference_share_id', type=str, help='A unique identifier for a shared resource that can be '
                   'accessed via the [Shares][] API.')
        c.argument('parent_reference_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('parent_reference_site_id', type=str, help='')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('microsoft_graph_identity_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('audio', action=AddAudio, nargs='*', help='audio')
        c.argument('content', help='The content stream, if the item represents a file.')
        c.argument('c_tag', type=str, help='An eTag for the content of the item. This eTag is not changed if only the '
                   'metadata is changed. Note This property is not returned if the item is a folder. Read-only.')
        c.argument('file_system_info', action=AddFileSystemInfo, nargs='*', help='fileSystemInfo')
        c.argument('image', action=AddImage, nargs='*', help='image')
        c.argument('location', arg_type=get_location_type(self.cli_ctx))
        c.argument('photo', action=AddPhoto, nargs='*', help='photo')
        c.argument('publication', action=AddPublication, nargs='*', help='publicationFacet')
        c.argument('root', type=validate_file_or_dict, help='root Expected value: json-string/@json-file.')
        c.argument('microsoft_graph_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('size', type=int, help='Size of the item in bytes. Read-only.')
        c.argument('video', action=AddVideo, nargs='*', help='video')
        c.argument('web_dav_url', type=str, help='WebDAV compatible URL for the item.')
        c.argument('activities', type=validate_file_or_dict, help='The list of recent activities that took place on '
                   'this item. Expected value: json-string/@json-file.')
        c.argument('analytics', type=validate_file_or_dict, help='itemAnalytics Expected value: '
                   'json-string/@json-file.')
        c.argument('children', type=validate_file_or_dict, help='Collection containing Item objects for the immediate '
                   'children of Item. Only items representing folders have children. Read-only. Nullable. Expected '
                   'value: json-string/@json-file.')
        c.argument('list_item', type=validate_file_or_dict, help='listItem Expected value: json-string/@json-file.')
        c.argument('permissions', type=validate_file_or_dict, help='The set of permissions for the item. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('subscriptions', action=AddFilesDriveCreateBundleSubscriptions, nargs='*', help='The set of '
                   'subscriptions on the item. Only supported on the root of a drive.')
        c.argument('thumbnails', type=validate_file_or_dict, help='Collection containing [ThumbnailSet][] objects '
                   'associated with the item. For more info, see [getting thumbnails][]. Read-only. Nullable. Expected '
                   'value: json-string/@json-file.')
        c.argument('versions', action=AddDrivesVersions, nargs='*', help='The list of previous versions of the item. '
                   'For more info, see [getting previous versions][]. Read-only. Nullable.')
        c.argument('workbook_id', type=str, help='Read-only.')
        c.argument('workbook_application', action=AddWorkbookApplication, nargs='*', help='workbookApplication')
        c.argument('workbook_comments', action=AddWorkbookComments, nargs='*', help='')
        c.argument('workbook_functions', action=AddWorkbookFunctions, nargs='*', help='workbookFunctions')
        c.argument('workbook_names', type=validate_file_or_dict, help='Represents a collection of workbook scoped '
                   'named items (named ranges and constants). Read-only. Expected value: json-string/@json-file.')
        c.argument('workbook_operations', type=validate_file_or_dict, help='The status of workbook operations. Getting '
                   'an operation collection is not supported, but you can get the status of a long-running operation '
                   'if the Location header is returned in the response. Read-only. Expected value: '
                   'json-string/@json-file.')
        c.argument('workbook_tables', type=validate_file_or_dict, help='Represents a collection of tables associated '
                   'with the workbook. Read-only. Expected value: json-string/@json-file.')
        c.argument('workbook_worksheets', type=validate_file_or_dict, help='Represents a collection of worksheets '
                   'associated with the workbook. Read-only. Expected value: json-string/@json-file.')
        c.argument('special_folder_name', type=str, help='The unique identifier for this item in the /drive/special '
                   'collection')
        c.argument('shared_owner', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('shared_scope', type=str, help='Indicates the scope of how the item is shared: anonymous, '
                   'organization, or users. Read-only.')
        c.argument('shared_shared_by', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('shared_shared_date_time', help='The UTC date and time when the item was shared. Read-only.')
        c.argument('search_result_on_click_telemetry_url', type=str, help='A callback URL that can be used to record '
                   'telemetry information. The application should issue a GET on this URL if the user interacts with '
                   'this item to improve the quality of results.')
        c.argument('remote_item_created_by', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_created_date_time', help='Date and time of item creation. Read-only.')
        c.argument('remote_item_file', type=validate_file_or_dict,
                   help='file Expected value: json-string/@json-file.')
        c.argument('remote_item_file_system_info', action=AddFileSystemInfo, nargs='*', help='fileSystemInfo')
        c.argument('remote_item_folder', type=validate_file_or_dict, help='folder Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_id', type=str, help='Unique identifier for the remote item in its drive. Read-only.')
        c.argument('remote_item_image', action=AddImage, nargs='*', help='image')
        c.argument('remote_item_last_modified_by', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_last_modified_date_time', help='Date and time the item was last modified. Read-only.')
        c.argument('remote_item_name', type=str, help='Optional. Filename of the remote item. Read-only.')
        c.argument('remote_item_package', action=AddRemoteItemPackage, nargs='*', help='package')
        c.argument('remote_item_parent_reference', type=validate_file_or_dict, help='itemReference Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_shared', type=validate_file_or_dict, help='shared Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('remote_item_size', type=int, help='Size of the remote item. Read-only.')
        c.argument('remote_item_special_folder', action=AddRemoteItemSpecialFolder, nargs='*', help='specialFolder')
        c.argument('remote_item_video', action=AddVideo, nargs='*', help='video')
        c.argument('remote_item_web_dav_url', type=str, help='DAV compatible URL for the item.')
        c.argument('remote_item_web_url', type=str, help='URL that displays the resource in the browser. Read-only.')
        c.argument('pending_operations_pending_content_update_queued_date_time', help='Date and time the pending '
                   'binary operation was queued in UTC time. Read-only.')
        c.argument('package_type', type=str, help='A string indicating the type of package. While oneNote is the only '
                   'currently defined value, you should expect other package types to be returned and handle them '
                   'accordingly.')
        c.argument('folder_child_count', type=int, help='Number of children contained immediately within this '
                   'container.')
        c.argument('folder_view', action=AddFolderView, nargs='*', help='folderView')
        c.argument('file_hashes', action=AddFileHashes, nargs='*', help='hashes')
        c.argument('file_mime_type', type=str, help='The MIME type for the file. This is determined by logic on the '
                   'server and might not be the value provided when the file was uploaded. Read-only.')
        c.argument('file_processing_metadata', arg_type=get_three_state_flag(), help='')
        c.argument('deleted_state', type=str, help='Represents the state of the deleted item.')
        c.argument('bundle_album', action=AddBundleAlbum, nargs='*', help='album')
        c.argument('bundle_child_count', type=int, help='')

    with self.argument_context('files drive-list-activity update-list-item') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_date_time', help='Date and time of item creation. Read-only.')
        c.argument('description', type=str, help='Provides a user-visible description of the item. Optional.')
        c.argument('e_tag', type=str, help='ETag for the item. Read-only.')
        c.argument('last_modified_date_time', help='Date and time the item was last modified. Read-only.')
        c.argument('name', type=str, help='The name of the item. Read-write.')
        c.argument('web_url', type=str, help='URL that displays the resource in the browser. Read-only.')
        c.argument('created_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory user '
                   'object. Expected value: json-string/@json-file.')
        c.argument('last_modified_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory '
                   'user object. Expected value: json-string/@json-file.')
        c.argument('parent_reference_drive_id', type=str, help='Unique identifier of the drive instance that contains '
                   'the item. Read-only.')
        c.argument('parent_reference_drive_type', type=str, help='Identifies the type of drive. See [drive][] resource '
                   'for values.')
        c.argument('parent_reference_id', type=str, help='Unique identifier of the item in the drive. Read-only.')
        c.argument('parent_reference_name', type=str, help='The name of the item being referenced. Read-only.')
        c.argument('parent_reference_path', type=str,
                   help='Path that can be used to navigate to the item. Read-only.')
        c.argument('parent_reference_share_id', type=str, help='A unique identifier for a shared resource that can be '
                   'accessed via the [Shares][] API.')
        c.argument('parent_reference_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('parent_reference_site_id', type=str, help='')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('microsoft_graph_identity_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('content_type', action=AddContentType, nargs='*', help='contentTypeInfo')
        c.argument('microsoft_graph_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('activities', type=validate_file_or_dict, help='The list of recent activities that took place on '
                   'this item. Expected value: json-string/@json-file.')
        c.argument('analytics', type=validate_file_or_dict, help='itemAnalytics Expected value: '
                   'json-string/@json-file.')
        c.argument('drive_item', type=validate_file_or_dict, help='driveItem Expected value: json-string/@json-file.')
        c.argument('versions', action=AddDrivesActivitiesVersions, nargs='*', help='The list of previous versions of '
                   'the list item.')
        c.argument('fields_id', type=str, help='Read-only.')

    with self.argument_context('files drive-list-activity-list-item delete') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('item_activity_old_id1', type=str, help='key: id of itemActivityOLD')
        c.argument('if_match', type=str, help='ETag')
        c.argument('list_item_version_id', type=str, help='key: id of listItemVersion')

    with self.argument_context('files drive-list-activity-list-item create-activity') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('files drive-list-activity-list-item create-link') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('type_', options_list=['--type'], type=str, help='')
        c.argument('scope', type=str, help='')
        c.argument('expiration_date_time', help='')
        c.argument('password', type=str, help='')
        c.argument('recipients', action=AddDrivesListActivitiesListitemRecipients, nargs='*', help='')

    with self.argument_context('files drive-list-activity-list-item create-version') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('last_modified_date_time', help='Date and time the version was last modified. Read-only.')
        c.argument('publication', action=AddPublication, nargs='*', help='publicationFacet')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('fields_id', type=str, help='Read-only.')

    with self.argument_context('files drive-list-activity-list-item get-activity') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('item_activity_old_id1', type=str, help='key: id of itemActivityOLD')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files drive-list-activity-list-item get-activity-by-interval') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('start_date_time', type=str, help='')
        c.argument('end_date_time', type=str, help='')
        c.argument('interval', type=str, help='')

    with self.argument_context('files drive-list-activity-list-item get-analytic') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files drive-list-activity-list-item get-drive-item') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files drive-list-activity-list-item get-drive-item-content') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')

    with self.argument_context('files drive-list-activity-list-item get-field') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files drive-list-activity-list-item get-ref-analytic') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')

    with self.argument_context('files drive-list-activity-list-item get-version') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('list_item_version_id', type=str, help='key: id of listItemVersion')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files drive-list-activity-list-item list-activity') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files drive-list-activity-list-item list-version') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files drive-list-activity-list-item set-drive-item-content') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('data', help='New media content.')

    with self.argument_context('files drive-list-activity-list-item set-ref-analytic') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('body', type=validate_file_or_dict, help='New navigation property ref values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('files drive-list-activity-list-item update-activity') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('item_activity_old_id1', type=str, help='key: id of itemActivityOLD')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('files drive-list-activity-list-item update-drive-item') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_date_time', help='Date and time of item creation. Read-only.')
        c.argument('description', type=str, help='Provides a user-visible description of the item. Optional.')
        c.argument('e_tag', type=str, help='ETag for the item. Read-only.')
        c.argument('last_modified_date_time', help='Date and time the item was last modified. Read-only.')
        c.argument('name', type=str, help='The name of the item. Read-write.')
        c.argument('web_url', type=str, help='URL that displays the resource in the browser. Read-only.')
        c.argument('created_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory user '
                   'object. Expected value: json-string/@json-file.')
        c.argument('last_modified_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory '
                   'user object. Expected value: json-string/@json-file.')
        c.argument('parent_reference_drive_id', type=str, help='Unique identifier of the drive instance that contains '
                   'the item. Read-only.')
        c.argument('parent_reference_drive_type', type=str, help='Identifies the type of drive. See [drive][] resource '
                   'for values.')
        c.argument('parent_reference_id', type=str, help='Unique identifier of the item in the drive. Read-only.')
        c.argument('parent_reference_name', type=str, help='The name of the item being referenced. Read-only.')
        c.argument('parent_reference_path', type=str,
                   help='Path that can be used to navigate to the item. Read-only.')
        c.argument('parent_reference_share_id', type=str, help='A unique identifier for a shared resource that can be '
                   'accessed via the [Shares][] API.')
        c.argument('parent_reference_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('parent_reference_site_id', type=str, help='')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('microsoft_graph_identity_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('audio', action=AddAudio, nargs='*', help='audio')
        c.argument('content', help='The content stream, if the item represents a file.')
        c.argument('c_tag', type=str, help='An eTag for the content of the item. This eTag is not changed if only the '
                   'metadata is changed. Note This property is not returned if the item is a folder. Read-only.')
        c.argument('file_system_info', action=AddFileSystemInfo, nargs='*', help='fileSystemInfo')
        c.argument('image', action=AddImage, nargs='*', help='image')
        c.argument('location', arg_type=get_location_type(self.cli_ctx))
        c.argument('photo', action=AddPhoto, nargs='*', help='photo')
        c.argument('publication', action=AddPublication, nargs='*', help='publicationFacet')
        c.argument('root', type=validate_file_or_dict, help='root Expected value: json-string/@json-file.')
        c.argument('microsoft_graph_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('size', type=int, help='Size of the item in bytes. Read-only.')
        c.argument('video', action=AddVideo, nargs='*', help='video')
        c.argument('web_dav_url', type=str, help='WebDAV compatible URL for the item.')
        c.argument('activities', type=validate_file_or_dict, help='The list of recent activities that took place on '
                   'this item. Expected value: json-string/@json-file.')
        c.argument('analytics', type=validate_file_or_dict, help='itemAnalytics Expected value: '
                   'json-string/@json-file.')
        c.argument('children', type=validate_file_or_dict, help='Collection containing Item objects for the immediate '
                   'children of Item. Only items representing folders have children. Read-only. Nullable. Expected '
                   'value: json-string/@json-file.')
        c.argument('list_item', type=validate_file_or_dict, help='listItem Expected value: json-string/@json-file.')
        c.argument('permissions', type=validate_file_or_dict, help='The set of permissions for the item. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('subscriptions', action=AddFilesDriveCreateBundleSubscriptions, nargs='*', help='The set of '
                   'subscriptions on the item. Only supported on the root of a drive.')
        c.argument('thumbnails', type=validate_file_or_dict, help='Collection containing [ThumbnailSet][] objects '
                   'associated with the item. For more info, see [getting thumbnails][]. Read-only. Nullable. Expected '
                   'value: json-string/@json-file.')
        c.argument('versions', action=AddDrivesVersions, nargs='*', help='The list of previous versions of the item. '
                   'For more info, see [getting previous versions][]. Read-only. Nullable.')
        c.argument('workbook_id', type=str, help='Read-only.')
        c.argument('workbook_application', action=AddWorkbookApplication, nargs='*', help='workbookApplication')
        c.argument('workbook_comments', action=AddWorkbookComments, nargs='*', help='')
        c.argument('workbook_functions', action=AddWorkbookFunctions, nargs='*', help='workbookFunctions')
        c.argument('workbook_names', type=validate_file_or_dict, help='Represents a collection of workbook scoped '
                   'named items (named ranges and constants). Read-only. Expected value: json-string/@json-file.')
        c.argument('workbook_operations', type=validate_file_or_dict, help='The status of workbook operations. Getting '
                   'an operation collection is not supported, but you can get the status of a long-running operation '
                   'if the Location header is returned in the response. Read-only. Expected value: '
                   'json-string/@json-file.')
        c.argument('workbook_tables', type=validate_file_or_dict, help='Represents a collection of tables associated '
                   'with the workbook. Read-only. Expected value: json-string/@json-file.')
        c.argument('workbook_worksheets', type=validate_file_or_dict, help='Represents a collection of worksheets '
                   'associated with the workbook. Read-only. Expected value: json-string/@json-file.')
        c.argument('special_folder_name', type=str, help='The unique identifier for this item in the /drive/special '
                   'collection')
        c.argument('shared_owner', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('shared_scope', type=str, help='Indicates the scope of how the item is shared: anonymous, '
                   'organization, or users. Read-only.')
        c.argument('shared_shared_by', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('shared_shared_date_time', help='The UTC date and time when the item was shared. Read-only.')
        c.argument('search_result_on_click_telemetry_url', type=str, help='A callback URL that can be used to record '
                   'telemetry information. The application should issue a GET on this URL if the user interacts with '
                   'this item to improve the quality of results.')
        c.argument('remote_item_created_by', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_created_date_time', help='Date and time of item creation. Read-only.')
        c.argument('remote_item_file', type=validate_file_or_dict,
                   help='file Expected value: json-string/@json-file.')
        c.argument('remote_item_file_system_info', action=AddFileSystemInfo, nargs='*', help='fileSystemInfo')
        c.argument('remote_item_folder', type=validate_file_or_dict, help='folder Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_id', type=str, help='Unique identifier for the remote item in its drive. Read-only.')
        c.argument('remote_item_image', action=AddImage, nargs='*', help='image')
        c.argument('remote_item_last_modified_by', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_last_modified_date_time', help='Date and time the item was last modified. Read-only.')
        c.argument('remote_item_name', type=str, help='Optional. Filename of the remote item. Read-only.')
        c.argument('remote_item_package', action=AddRemoteItemPackage, nargs='*', help='package')
        c.argument('remote_item_parent_reference', type=validate_file_or_dict, help='itemReference Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_shared', type=validate_file_or_dict, help='shared Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('remote_item_size', type=int, help='Size of the remote item. Read-only.')
        c.argument('remote_item_special_folder', action=AddRemoteItemSpecialFolder, nargs='*', help='specialFolder')
        c.argument('remote_item_video', action=AddVideo, nargs='*', help='video')
        c.argument('remote_item_web_dav_url', type=str, help='DAV compatible URL for the item.')
        c.argument('remote_item_web_url', type=str, help='URL that displays the resource in the browser. Read-only.')
        c.argument('pending_operations_pending_content_update_queued_date_time', help='Date and time the pending '
                   'binary operation was queued in UTC time. Read-only.')
        c.argument('package_type', type=str, help='A string indicating the type of package. While oneNote is the only '
                   'currently defined value, you should expect other package types to be returned and handle them '
                   'accordingly.')
        c.argument('folder_child_count', type=int, help='Number of children contained immediately within this '
                   'container.')
        c.argument('folder_view', action=AddFolderView, nargs='*', help='folderView')
        c.argument('file_hashes', action=AddFileHashes, nargs='*', help='hashes')
        c.argument('file_mime_type', type=str, help='The MIME type for the file. This is determined by logic on the '
                   'server and might not be the value provided when the file was uploaded. Read-only.')
        c.argument('file_processing_metadata', arg_type=get_three_state_flag(), help='')
        c.argument('deleted_state', type=str, help='Represents the state of the deleted item.')
        c.argument('bundle_album', action=AddBundleAlbum, nargs='*', help='album')
        c.argument('bundle_child_count', type=int, help='')

    with self.argument_context('files drive-list-activity-list-item update-field') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')

    with self.argument_context('files drive-list-activity-list-item update-version') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('list_item_version_id', type=str, help='key: id of listItemVersion')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('last_modified_date_time', help='Date and time the version was last modified. Read-only.')
        c.argument('publication', action=AddPublication, nargs='*', help='publicationFacet')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('fields_id', type=str, help='Read-only.')

    with self.argument_context('files drive-list-activity-list-item-version delete') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('list_item_version_id', type=str, help='key: id of listItemVersion')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('files drive-list-activity-list-item-version get-field') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('list_item_version_id', type=str, help='key: id of listItemVersion')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files drive-list-activity-list-item-version restore-version') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('list_item_version_id', type=str, help='key: id of listItemVersion')

    with self.argument_context('files drive-list-activity-list-item-version update-field') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('list_item_version_id', type=str, help='key: id of listItemVersion')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')

    with self.argument_context('files drive-list-content-type delete') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('content_type_id', type=str, help='key: id of contentType')
        c.argument('column_link_id', type=str, help='key: id of columnLink')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('files drive-list-content-type create-column-link') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('content_type_id', type=str, help='key: id of contentType')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('name', type=str, help='The name of the column  in this content type.')

    with self.argument_context('files drive-list-content-type get-column-link') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('content_type_id', type=str, help='key: id of contentType')
        c.argument('column_link_id', type=str, help='key: id of columnLink')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files drive-list-content-type list-column-link') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('content_type_id', type=str, help='key: id of contentType')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files drive-list-content-type update-column-link') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('content_type_id', type=str, help='key: id of contentType')
        c.argument('column_link_id', type=str, help='key: id of columnLink')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('name', type=str, help='The name of the column  in this content type.')

    with self.argument_context('files drive-list-item delete') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('list_item_id', type=str, help='key: id of listItem')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('if_match', type=str, help='ETag')
        c.argument('list_item_version_id', type=str, help='key: id of listItemVersion')

    with self.argument_context('files drive-list-item create-activity') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('list_item_id', type=str, help='key: id of listItem')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('files drive-list-item create-link') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('list_item_id', type=str, help='key: id of listItem')
        c.argument('type_', options_list=['--type'], type=str, help='')
        c.argument('scope', type=str, help='')
        c.argument('expiration_date_time', help='')
        c.argument('password', type=str, help='')
        c.argument('recipients', action=AddDrivesListItemsRecipients, nargs='*', help='')

    with self.argument_context('files drive-list-item create-version') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('list_item_id', type=str, help='key: id of listItem')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('last_modified_date_time', help='Date and time the version was last modified. Read-only.')
        c.argument('publication', action=AddPublication, nargs='*', help='publicationFacet')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('fields_id', type=str, help='Read-only.')

    with self.argument_context('files drive-list-item get-activity') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('list_item_id', type=str, help='key: id of listItem')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files drive-list-item get-activity-by-interval') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('list_item_id', type=str, help='key: id of listItem')
        c.argument('start_date_time', type=str, help='')
        c.argument('end_date_time', type=str, help='')
        c.argument('interval', type=str, help='')

    with self.argument_context('files drive-list-item get-analytic') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('list_item_id', type=str, help='key: id of listItem')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files drive-list-item get-drive-item') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('list_item_id', type=str, help='key: id of listItem')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files drive-list-item get-drive-item-content') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('list_item_id', type=str, help='key: id of listItem')

    with self.argument_context('files drive-list-item get-field') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('list_item_id', type=str, help='key: id of listItem')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files drive-list-item get-ref-analytic') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('list_item_id', type=str, help='key: id of listItem')

    with self.argument_context('files drive-list-item get-version') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('list_item_id', type=str, help='key: id of listItem')
        c.argument('list_item_version_id', type=str, help='key: id of listItemVersion')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files drive-list-item list-activity') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('list_item_id', type=str, help='key: id of listItem')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files drive-list-item list-version') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('list_item_id', type=str, help='key: id of listItem')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files drive-list-item set-drive-item-content') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('list_item_id', type=str, help='key: id of listItem')
        c.argument('data', help='New media content.')

    with self.argument_context('files drive-list-item set-ref-analytic') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('list_item_id', type=str, help='key: id of listItem')
        c.argument('body', type=validate_file_or_dict, help='New navigation property ref values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('files drive-list-item update-activity') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('list_item_id', type=str, help='key: id of listItem')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('files drive-list-item update-drive-item') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('list_item_id', type=str, help='key: id of listItem')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_date_time', help='Date and time of item creation. Read-only.')
        c.argument('description', type=str, help='Provides a user-visible description of the item. Optional.')
        c.argument('e_tag', type=str, help='ETag for the item. Read-only.')
        c.argument('last_modified_date_time', help='Date and time the item was last modified. Read-only.')
        c.argument('name', type=str, help='The name of the item. Read-write.')
        c.argument('web_url', type=str, help='URL that displays the resource in the browser. Read-only.')
        c.argument('created_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory user '
                   'object. Expected value: json-string/@json-file.')
        c.argument('last_modified_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory '
                   'user object. Expected value: json-string/@json-file.')
        c.argument('parent_reference_drive_id', type=str, help='Unique identifier of the drive instance that contains '
                   'the item. Read-only.')
        c.argument('parent_reference_drive_type', type=str, help='Identifies the type of drive. See [drive][] resource '
                   'for values.')
        c.argument('parent_reference_id', type=str, help='Unique identifier of the item in the drive. Read-only.')
        c.argument('parent_reference_name', type=str, help='The name of the item being referenced. Read-only.')
        c.argument('parent_reference_path', type=str,
                   help='Path that can be used to navigate to the item. Read-only.')
        c.argument('parent_reference_share_id', type=str, help='A unique identifier for a shared resource that can be '
                   'accessed via the [Shares][] API.')
        c.argument('parent_reference_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('parent_reference_site_id', type=str, help='')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('microsoft_graph_identity_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('audio', action=AddAudio, nargs='*', help='audio')
        c.argument('content', help='The content stream, if the item represents a file.')
        c.argument('c_tag', type=str, help='An eTag for the content of the item. This eTag is not changed if only the '
                   'metadata is changed. Note This property is not returned if the item is a folder. Read-only.')
        c.argument('file_system_info', action=AddFileSystemInfo, nargs='*', help='fileSystemInfo')
        c.argument('image', action=AddImage, nargs='*', help='image')
        c.argument('location', arg_type=get_location_type(self.cli_ctx))
        c.argument('photo', action=AddPhoto, nargs='*', help='photo')
        c.argument('publication', action=AddPublication, nargs='*', help='publicationFacet')
        c.argument('root', type=validate_file_or_dict, help='root Expected value: json-string/@json-file.')
        c.argument('microsoft_graph_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('size', type=int, help='Size of the item in bytes. Read-only.')
        c.argument('video', action=AddVideo, nargs='*', help='video')
        c.argument('web_dav_url', type=str, help='WebDAV compatible URL for the item.')
        c.argument('activities', type=validate_file_or_dict, help='The list of recent activities that took place on '
                   'this item. Expected value: json-string/@json-file.')
        c.argument('analytics', type=validate_file_or_dict, help='itemAnalytics Expected value: '
                   'json-string/@json-file.')
        c.argument('children', type=validate_file_or_dict, help='Collection containing Item objects for the immediate '
                   'children of Item. Only items representing folders have children. Read-only. Nullable. Expected '
                   'value: json-string/@json-file.')
        c.argument('list_item', type=validate_file_or_dict, help='listItem Expected value: json-string/@json-file.')
        c.argument('permissions', type=validate_file_or_dict, help='The set of permissions for the item. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('subscriptions', action=AddFilesDriveCreateBundleSubscriptions, nargs='*', help='The set of '
                   'subscriptions on the item. Only supported on the root of a drive.')
        c.argument('thumbnails', type=validate_file_or_dict, help='Collection containing [ThumbnailSet][] objects '
                   'associated with the item. For more info, see [getting thumbnails][]. Read-only. Nullable. Expected '
                   'value: json-string/@json-file.')
        c.argument('versions', action=AddDrivesVersions, nargs='*', help='The list of previous versions of the item. '
                   'For more info, see [getting previous versions][]. Read-only. Nullable.')
        c.argument('workbook_id', type=str, help='Read-only.')
        c.argument('workbook_application', action=AddWorkbookApplication, nargs='*', help='workbookApplication')
        c.argument('workbook_comments', action=AddWorkbookComments, nargs='*', help='')
        c.argument('workbook_functions', action=AddWorkbookFunctions, nargs='*', help='workbookFunctions')
        c.argument('workbook_names', type=validate_file_or_dict, help='Represents a collection of workbook scoped '
                   'named items (named ranges and constants). Read-only. Expected value: json-string/@json-file.')
        c.argument('workbook_operations', type=validate_file_or_dict, help='The status of workbook operations. Getting '
                   'an operation collection is not supported, but you can get the status of a long-running operation '
                   'if the Location header is returned in the response. Read-only. Expected value: '
                   'json-string/@json-file.')
        c.argument('workbook_tables', type=validate_file_or_dict, help='Represents a collection of tables associated '
                   'with the workbook. Read-only. Expected value: json-string/@json-file.')
        c.argument('workbook_worksheets', type=validate_file_or_dict, help='Represents a collection of worksheets '
                   'associated with the workbook. Read-only. Expected value: json-string/@json-file.')
        c.argument('special_folder_name', type=str, help='The unique identifier for this item in the /drive/special '
                   'collection')
        c.argument('shared_owner', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('shared_scope', type=str, help='Indicates the scope of how the item is shared: anonymous, '
                   'organization, or users. Read-only.')
        c.argument('shared_shared_by', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('shared_shared_date_time', help='The UTC date and time when the item was shared. Read-only.')
        c.argument('search_result_on_click_telemetry_url', type=str, help='A callback URL that can be used to record '
                   'telemetry information. The application should issue a GET on this URL if the user interacts with '
                   'this item to improve the quality of results.')
        c.argument('remote_item_created_by', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_created_date_time', help='Date and time of item creation. Read-only.')
        c.argument('remote_item_file', type=validate_file_or_dict,
                   help='file Expected value: json-string/@json-file.')
        c.argument('remote_item_file_system_info', action=AddFileSystemInfo, nargs='*', help='fileSystemInfo')
        c.argument('remote_item_folder', type=validate_file_or_dict, help='folder Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_id', type=str, help='Unique identifier for the remote item in its drive. Read-only.')
        c.argument('remote_item_image', action=AddImage, nargs='*', help='image')
        c.argument('remote_item_last_modified_by', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_last_modified_date_time', help='Date and time the item was last modified. Read-only.')
        c.argument('remote_item_name', type=str, help='Optional. Filename of the remote item. Read-only.')
        c.argument('remote_item_package', action=AddRemoteItemPackage, nargs='*', help='package')
        c.argument('remote_item_parent_reference', type=validate_file_or_dict, help='itemReference Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_shared', type=validate_file_or_dict, help='shared Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('remote_item_size', type=int, help='Size of the remote item. Read-only.')
        c.argument('remote_item_special_folder', action=AddRemoteItemSpecialFolder, nargs='*', help='specialFolder')
        c.argument('remote_item_video', action=AddVideo, nargs='*', help='video')
        c.argument('remote_item_web_dav_url', type=str, help='DAV compatible URL for the item.')
        c.argument('remote_item_web_url', type=str, help='URL that displays the resource in the browser. Read-only.')
        c.argument('pending_operations_pending_content_update_queued_date_time', help='Date and time the pending '
                   'binary operation was queued in UTC time. Read-only.')
        c.argument('package_type', type=str, help='A string indicating the type of package. While oneNote is the only '
                   'currently defined value, you should expect other package types to be returned and handle them '
                   'accordingly.')
        c.argument('folder_child_count', type=int, help='Number of children contained immediately within this '
                   'container.')
        c.argument('folder_view', action=AddFolderView, nargs='*', help='folderView')
        c.argument('file_hashes', action=AddFileHashes, nargs='*', help='hashes')
        c.argument('file_mime_type', type=str, help='The MIME type for the file. This is determined by logic on the '
                   'server and might not be the value provided when the file was uploaded. Read-only.')
        c.argument('file_processing_metadata', arg_type=get_three_state_flag(), help='')
        c.argument('deleted_state', type=str, help='Represents the state of the deleted item.')
        c.argument('bundle_album', action=AddBundleAlbum, nargs='*', help='album')
        c.argument('bundle_child_count', type=int, help='')

    with self.argument_context('files drive-list-item update-field') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('list_item_id', type=str, help='key: id of listItem')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')

    with self.argument_context('files drive-list-item update-version') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('list_item_id', type=str, help='key: id of listItem')
        c.argument('list_item_version_id', type=str, help='key: id of listItemVersion')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('last_modified_date_time', help='Date and time the version was last modified. Read-only.')
        c.argument('publication', action=AddPublication, nargs='*', help='publicationFacet')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('fields_id', type=str, help='Read-only.')

    with self.argument_context('files drive-list-item-activity delete') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('list_item_id', type=str, help='key: id of listItem')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('files drive-list-item-activity get-drive-item') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('list_item_id', type=str, help='key: id of listItem')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files drive-list-item-activity get-drive-item-content') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('list_item_id', type=str, help='key: id of listItem')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')

    with self.argument_context('files drive-list-item-activity get-list-item') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('list_item_id', type=str, help='key: id of listItem')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files drive-list-item-activity set-drive-item-content') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('list_item_id', type=str, help='key: id of listItem')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('data', help='New media content.')

    with self.argument_context('files drive-list-item-activity update-drive-item') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('list_item_id', type=str, help='key: id of listItem')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_date_time', help='Date and time of item creation. Read-only.')
        c.argument('description', type=str, help='Provides a user-visible description of the item. Optional.')
        c.argument('e_tag', type=str, help='ETag for the item. Read-only.')
        c.argument('last_modified_date_time', help='Date and time the item was last modified. Read-only.')
        c.argument('name', type=str, help='The name of the item. Read-write.')
        c.argument('web_url', type=str, help='URL that displays the resource in the browser. Read-only.')
        c.argument('created_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory user '
                   'object. Expected value: json-string/@json-file.')
        c.argument('last_modified_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory '
                   'user object. Expected value: json-string/@json-file.')
        c.argument('parent_reference_drive_id', type=str, help='Unique identifier of the drive instance that contains '
                   'the item. Read-only.')
        c.argument('parent_reference_drive_type', type=str, help='Identifies the type of drive. See [drive][] resource '
                   'for values.')
        c.argument('parent_reference_id', type=str, help='Unique identifier of the item in the drive. Read-only.')
        c.argument('parent_reference_name', type=str, help='The name of the item being referenced. Read-only.')
        c.argument('parent_reference_path', type=str,
                   help='Path that can be used to navigate to the item. Read-only.')
        c.argument('parent_reference_share_id', type=str, help='A unique identifier for a shared resource that can be '
                   'accessed via the [Shares][] API.')
        c.argument('parent_reference_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('parent_reference_site_id', type=str, help='')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('microsoft_graph_identity_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('audio', action=AddAudio, nargs='*', help='audio')
        c.argument('content', help='The content stream, if the item represents a file.')
        c.argument('c_tag', type=str, help='An eTag for the content of the item. This eTag is not changed if only the '
                   'metadata is changed. Note This property is not returned if the item is a folder. Read-only.')
        c.argument('file_system_info', action=AddFileSystemInfo, nargs='*', help='fileSystemInfo')
        c.argument('image', action=AddImage, nargs='*', help='image')
        c.argument('location', arg_type=get_location_type(self.cli_ctx))
        c.argument('photo', action=AddPhoto, nargs='*', help='photo')
        c.argument('publication', action=AddPublication, nargs='*', help='publicationFacet')
        c.argument('root', type=validate_file_or_dict, help='root Expected value: json-string/@json-file.')
        c.argument('microsoft_graph_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('size', type=int, help='Size of the item in bytes. Read-only.')
        c.argument('video', action=AddVideo, nargs='*', help='video')
        c.argument('web_dav_url', type=str, help='WebDAV compatible URL for the item.')
        c.argument('activities', type=validate_file_or_dict, help='The list of recent activities that took place on '
                   'this item. Expected value: json-string/@json-file.')
        c.argument('analytics', type=validate_file_or_dict, help='itemAnalytics Expected value: '
                   'json-string/@json-file.')
        c.argument('children', type=validate_file_or_dict, help='Collection containing Item objects for the immediate '
                   'children of Item. Only items representing folders have children. Read-only. Nullable. Expected '
                   'value: json-string/@json-file.')
        c.argument('list_item', type=validate_file_or_dict, help='listItem Expected value: json-string/@json-file.')
        c.argument('permissions', type=validate_file_or_dict, help='The set of permissions for the item. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('subscriptions', action=AddFilesDriveCreateBundleSubscriptions, nargs='*', help='The set of '
                   'subscriptions on the item. Only supported on the root of a drive.')
        c.argument('thumbnails', type=validate_file_or_dict, help='Collection containing [ThumbnailSet][] objects '
                   'associated with the item. For more info, see [getting thumbnails][]. Read-only. Nullable. Expected '
                   'value: json-string/@json-file.')
        c.argument('versions', action=AddDrivesVersions, nargs='*', help='The list of previous versions of the item. '
                   'For more info, see [getting previous versions][]. Read-only. Nullable.')
        c.argument('workbook_id', type=str, help='Read-only.')
        c.argument('workbook_application', action=AddWorkbookApplication, nargs='*', help='workbookApplication')
        c.argument('workbook_comments', action=AddWorkbookComments, nargs='*', help='')
        c.argument('workbook_functions', action=AddWorkbookFunctions, nargs='*', help='workbookFunctions')
        c.argument('workbook_names', type=validate_file_or_dict, help='Represents a collection of workbook scoped '
                   'named items (named ranges and constants). Read-only. Expected value: json-string/@json-file.')
        c.argument('workbook_operations', type=validate_file_or_dict, help='The status of workbook operations. Getting '
                   'an operation collection is not supported, but you can get the status of a long-running operation '
                   'if the Location header is returned in the response. Read-only. Expected value: '
                   'json-string/@json-file.')
        c.argument('workbook_tables', type=validate_file_or_dict, help='Represents a collection of tables associated '
                   'with the workbook. Read-only. Expected value: json-string/@json-file.')
        c.argument('workbook_worksheets', type=validate_file_or_dict, help='Represents a collection of worksheets '
                   'associated with the workbook. Read-only. Expected value: json-string/@json-file.')
        c.argument('special_folder_name', type=str, help='The unique identifier for this item in the /drive/special '
                   'collection')
        c.argument('shared_owner', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('shared_scope', type=str, help='Indicates the scope of how the item is shared: anonymous, '
                   'organization, or users. Read-only.')
        c.argument('shared_shared_by', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('shared_shared_date_time', help='The UTC date and time when the item was shared. Read-only.')
        c.argument('search_result_on_click_telemetry_url', type=str, help='A callback URL that can be used to record '
                   'telemetry information. The application should issue a GET on this URL if the user interacts with '
                   'this item to improve the quality of results.')
        c.argument('remote_item_created_by', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_created_date_time', help='Date and time of item creation. Read-only.')
        c.argument('remote_item_file', type=validate_file_or_dict,
                   help='file Expected value: json-string/@json-file.')
        c.argument('remote_item_file_system_info', action=AddFileSystemInfo, nargs='*', help='fileSystemInfo')
        c.argument('remote_item_folder', type=validate_file_or_dict, help='folder Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_id', type=str, help='Unique identifier for the remote item in its drive. Read-only.')
        c.argument('remote_item_image', action=AddImage, nargs='*', help='image')
        c.argument('remote_item_last_modified_by', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_last_modified_date_time', help='Date and time the item was last modified. Read-only.')
        c.argument('remote_item_name', type=str, help='Optional. Filename of the remote item. Read-only.')
        c.argument('remote_item_package', action=AddRemoteItemPackage, nargs='*', help='package')
        c.argument('remote_item_parent_reference', type=validate_file_or_dict, help='itemReference Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_shared', type=validate_file_or_dict, help='shared Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('remote_item_size', type=int, help='Size of the remote item. Read-only.')
        c.argument('remote_item_special_folder', action=AddRemoteItemSpecialFolder, nargs='*', help='specialFolder')
        c.argument('remote_item_video', action=AddVideo, nargs='*', help='video')
        c.argument('remote_item_web_dav_url', type=str, help='DAV compatible URL for the item.')
        c.argument('remote_item_web_url', type=str, help='URL that displays the resource in the browser. Read-only.')
        c.argument('pending_operations_pending_content_update_queued_date_time', help='Date and time the pending '
                   'binary operation was queued in UTC time. Read-only.')
        c.argument('package_type', type=str, help='A string indicating the type of package. While oneNote is the only '
                   'currently defined value, you should expect other package types to be returned and handle them '
                   'accordingly.')
        c.argument('folder_child_count', type=int, help='Number of children contained immediately within this '
                   'container.')
        c.argument('folder_view', action=AddFolderView, nargs='*', help='folderView')
        c.argument('file_hashes', action=AddFileHashes, nargs='*', help='hashes')
        c.argument('file_mime_type', type=str, help='The MIME type for the file. This is determined by logic on the '
                   'server and might not be the value provided when the file was uploaded. Read-only.')
        c.argument('file_processing_metadata', arg_type=get_three_state_flag(), help='')
        c.argument('deleted_state', type=str, help='Represents the state of the deleted item.')
        c.argument('bundle_album', action=AddBundleAlbum, nargs='*', help='album')
        c.argument('bundle_child_count', type=int, help='')

    with self.argument_context('files drive-list-item-activity update-list-item') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('list_item_id', type=str, help='key: id of listItem')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_date_time', help='Date and time of item creation. Read-only.')
        c.argument('description', type=str, help='Provides a user-visible description of the item. Optional.')
        c.argument('e_tag', type=str, help='ETag for the item. Read-only.')
        c.argument('last_modified_date_time', help='Date and time the item was last modified. Read-only.')
        c.argument('name', type=str, help='The name of the item. Read-write.')
        c.argument('web_url', type=str, help='URL that displays the resource in the browser. Read-only.')
        c.argument('created_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory user '
                   'object. Expected value: json-string/@json-file.')
        c.argument('last_modified_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory '
                   'user object. Expected value: json-string/@json-file.')
        c.argument('parent_reference_drive_id', type=str, help='Unique identifier of the drive instance that contains '
                   'the item. Read-only.')
        c.argument('parent_reference_drive_type', type=str, help='Identifies the type of drive. See [drive][] resource '
                   'for values.')
        c.argument('parent_reference_id', type=str, help='Unique identifier of the item in the drive. Read-only.')
        c.argument('parent_reference_name', type=str, help='The name of the item being referenced. Read-only.')
        c.argument('parent_reference_path', type=str,
                   help='Path that can be used to navigate to the item. Read-only.')
        c.argument('parent_reference_share_id', type=str, help='A unique identifier for a shared resource that can be '
                   'accessed via the [Shares][] API.')
        c.argument('parent_reference_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('parent_reference_site_id', type=str, help='')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('microsoft_graph_identity_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('content_type', action=AddContentType, nargs='*', help='contentTypeInfo')
        c.argument('microsoft_graph_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('activities', type=validate_file_or_dict, help='The list of recent activities that took place on '
                   'this item. Expected value: json-string/@json-file.')
        c.argument('analytics', type=validate_file_or_dict, help='itemAnalytics Expected value: '
                   'json-string/@json-file.')
        c.argument('drive_item', type=validate_file_or_dict, help='driveItem Expected value: json-string/@json-file.')
        c.argument('versions', action=AddDrivesActivitiesVersions, nargs='*', help='The list of previous versions of '
                   'the list item.')
        c.argument('fields_id', type=str, help='Read-only.')

    with self.argument_context('files drive-list-item-activity-list-item create-link') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('list_item_id', type=str, help='key: id of listItem')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('type_', options_list=['--type'], type=str, help='')
        c.argument('scope', type=str, help='')
        c.argument('expiration_date_time', help='')
        c.argument('password', type=str, help='')
        c.argument('recipients', action=AddDrivesListItemsActivitiesListitemRecipients, nargs='*', help='')

    with self.argument_context('files drive-list-item-activity-list-item get-activity-by-interval') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('list_item_id', type=str, help='key: id of listItem')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('start_date_time', type=str, help='')
        c.argument('end_date_time', type=str, help='')
        c.argument('interval', type=str, help='')

    with self.argument_context('files drive-list-item-version delete') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('list_item_id', type=str, help='key: id of listItem')
        c.argument('list_item_version_id', type=str, help='key: id of listItemVersion')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('files drive-list-item-version get-field') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('list_item_id', type=str, help='key: id of listItem')
        c.argument('list_item_version_id', type=str, help='key: id of listItemVersion')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files drive-list-item-version restore-version') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('list_item_id', type=str, help='key: id of listItem')
        c.argument('list_item_version_id', type=str, help='key: id of listItemVersion')

    with self.argument_context('files drive-list-item-version update-field') as c:
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('list_item_id', type=str, help='key: id of listItem')
        c.argument('list_item_version_id', type=str, help='key: id of listItemVersion')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')

    with self.argument_context('files group delete') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('files group create-drive') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_date_time', help='Date and time of item creation. Read-only.')
        c.argument('description', type=str, help='Provides a user-visible description of the item. Optional.')
        c.argument('e_tag', type=str, help='ETag for the item. Read-only.')
        c.argument('last_modified_date_time', help='Date and time the item was last modified. Read-only.')
        c.argument('name', type=str, help='The name of the item. Read-write.')
        c.argument('web_url', type=str, help='URL that displays the resource in the browser. Read-only.')
        c.argument('created_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory user '
                   'object. Expected value: json-string/@json-file.')
        c.argument('last_modified_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory '
                   'user object. Expected value: json-string/@json-file.')
        c.argument('parent_reference_drive_id', type=str, help='Unique identifier of the drive instance that contains '
                   'the item. Read-only.')
        c.argument('parent_reference_drive_type', type=str, help='Identifies the type of drive. See [drive][] resource '
                   'for values.')
        c.argument('parent_reference_id', type=str, help='Unique identifier of the item in the drive. Read-only.')
        c.argument('parent_reference_name', type=str, help='The name of the item being referenced. Read-only.')
        c.argument('parent_reference_path', type=str,
                   help='Path that can be used to navigate to the item. Read-only.')
        c.argument('parent_reference_share_id', type=str, help='A unique identifier for a shared resource that can be '
                   'accessed via the [Shares][] API.')
        c.argument('parent_reference_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('parent_reference_site_id', type=str, help='')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('microsoft_graph_identity_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('microsoft_graph_drive_type', type=str, help='Describes the type of drive represented by this '
                   'resource. OneDrive personal drives will return personal. OneDrive for Business will return '
                   'business. SharePoint document libraries will return documentLibrary. Read-only.')
        c.argument('share_point_ids', action=AddParentReferenceSharepointIds, nargs='*', help='sharepointIds')
        c.argument('system', type=validate_file_or_dict, help='systemFacet Expected value: json-string/@json-file.')
        c.argument('activities', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('bundles', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('following', type=validate_file_or_dict, help='The list of items the user is following. Only in '
                   'OneDrive for Business. Expected value: json-string/@json-file.')
        c.argument('items', type=validate_file_or_dict, help='All items contained in the drive. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('root', type=validate_file_or_dict, help='driveItem Expected value: json-string/@json-file.')
        c.argument('special', type=validate_file_or_dict, help='Collection of common folders available in OneDrive. '
                   'Read-only. Nullable. Expected value: json-string/@json-file.')
        c.argument('list_id', type=str, help='Read-only.')
        c.argument('list_created_date_time', help='Date and time of item creation. Read-only.')
        c.argument('list_description', type=str, help='Provides a user-visible description of the item. Optional.')
        c.argument('list_e_tag', type=str, help='ETag for the item. Read-only.')
        c.argument('list_last_modified_date_time', help='Date and time the item was last modified. Read-only.')
        c.argument('list_name', type=str, help='The name of the item. Read-write.')
        c.argument('list_web_url', type=str, help='URL that displays the resource in the browser. Read-only.')
        c.argument('list_created_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory user '
                   'object. Expected value: json-string/@json-file.')
        c.argument('list_last_modified_by_user', type=validate_file_or_dict, help='Represents an Azure Active '
                   'Directory user object. Expected value: json-string/@json-file.')
        c.argument('list_parent_reference_drive_id', type=str, help='Unique identifier of the drive instance that '
                   'contains the item. Read-only.')
        c.argument('list_parent_reference_drive_type', type=str, help='Identifies the type of drive. See [drive][] '
                   'resource for values.')
        c.argument('list_parent_reference_id', type=str,
                   help='Unique identifier of the item in the drive. Read-only.')
        c.argument('list_parent_reference_name', type=str, help='The name of the item being referenced. Read-only.')
        c.argument('list_parent_reference_path', type=str, help='Path that can be used to navigate to the item. '
                   'Read-only.')
        c.argument('list_parent_reference_share_id', type=str, help='A unique identifier for a shared resource that '
                   'can be accessed via the [Shares][] API.')
        c.argument('list_parent_reference_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('list_parent_reference_site_id', type=str, help='')
        c.argument('list_last_modified_by_application', action=AddLastModifiedByApplication, nargs='*',
                   help='identity')
        c.argument('list_last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('user1', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('list_created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('list_created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('user2', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('list_display_name', type=str, help='The displayable title of the list.')
        c.argument('list_list', action=AddListList, nargs='*', help='listInfo')
        c.argument('list_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help='sharepointIds')
        c.argument('list_system', type=validate_file_or_dict, help='systemFacet Expected value: '
                   'json-string/@json-file.')
        c.argument('list_activities', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('list_columns', type=validate_file_or_dict, help='The collection of field definitions for this '
                   'list. Expected value: json-string/@json-file.')
        c.argument('list_content_types', type=validate_file_or_dict, help='The collection of content types present in '
                   'this list. Expected value: json-string/@json-file.')
        c.argument('list_drive', type=validate_file_or_dict, help='drive Expected value: json-string/@json-file.')
        c.argument('list_items', type=validate_file_or_dict, help='All items contained in the list. Expected value: '
                   'json-string/@json-file.')
        c.argument('list_subscriptions', action=AddFilesDriveUpdateListSubscriptions, nargs='*', help='The set of '
                   'subscriptions on the list.')
        c.argument('quota_deleted', type=int, help='Total space consumed by files in the recycle bin, in bytes. '
                   'Read-only.')
        c.argument('quota_remaining', type=int, help='Total space remaining before reaching the quota limit, in bytes. '
                   'Read-only.')
        c.argument('quota_state', type=str, help='Enumeration value that indicates the state of the storage space. '
                   'Read-only.')
        c.argument('quota_storage_plan_information', action=AddQuotaStoragePlanInformation, nargs='*', help=''
                   'storagePlanInformation')
        c.argument('quota_total', type=int, help='Total allowed storage space, in bytes. Read-only.')
        c.argument('quota_used', type=int, help='Total space used, in bytes. Read-only.')
        c.argument('owner_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('owner_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('owner_user', action=AddLastModifiedByApplication, nargs='*', help='identity')

    with self.argument_context('files group get-drive') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files group list-drive') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files group update-drive') as c:
        c.argument('group_id', type=str, help='key: id of group')
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_date_time', help='Date and time of item creation. Read-only.')
        c.argument('description', type=str, help='Provides a user-visible description of the item. Optional.')
        c.argument('e_tag', type=str, help='ETag for the item. Read-only.')
        c.argument('last_modified_date_time', help='Date and time the item was last modified. Read-only.')
        c.argument('name', type=str, help='The name of the item. Read-write.')
        c.argument('web_url', type=str, help='URL that displays the resource in the browser. Read-only.')
        c.argument('created_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory user '
                   'object. Expected value: json-string/@json-file.')
        c.argument('last_modified_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory '
                   'user object. Expected value: json-string/@json-file.')
        c.argument('parent_reference_drive_id', type=str, help='Unique identifier of the drive instance that contains '
                   'the item. Read-only.')
        c.argument('parent_reference_drive_type', type=str, help='Identifies the type of drive. See [drive][] resource '
                   'for values.')
        c.argument('parent_reference_id', type=str, help='Unique identifier of the item in the drive. Read-only.')
        c.argument('parent_reference_name', type=str, help='The name of the item being referenced. Read-only.')
        c.argument('parent_reference_path', type=str,
                   help='Path that can be used to navigate to the item. Read-only.')
        c.argument('parent_reference_share_id', type=str, help='A unique identifier for a shared resource that can be '
                   'accessed via the [Shares][] API.')
        c.argument('parent_reference_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('parent_reference_site_id', type=str, help='')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('microsoft_graph_identity_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('microsoft_graph_drive_type', type=str, help='Describes the type of drive represented by this '
                   'resource. OneDrive personal drives will return personal. OneDrive for Business will return '
                   'business. SharePoint document libraries will return documentLibrary. Read-only.')
        c.argument('share_point_ids', action=AddParentReferenceSharepointIds, nargs='*', help='sharepointIds')
        c.argument('system', type=validate_file_or_dict, help='systemFacet Expected value: json-string/@json-file.')
        c.argument('activities', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('bundles', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('following', type=validate_file_or_dict, help='The list of items the user is following. Only in '
                   'OneDrive for Business. Expected value: json-string/@json-file.')
        c.argument('items', type=validate_file_or_dict, help='All items contained in the drive. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('root', type=validate_file_or_dict, help='driveItem Expected value: json-string/@json-file.')
        c.argument('special', type=validate_file_or_dict, help='Collection of common folders available in OneDrive. '
                   'Read-only. Nullable. Expected value: json-string/@json-file.')
        c.argument('list_id', type=str, help='Read-only.')
        c.argument('list_created_date_time', help='Date and time of item creation. Read-only.')
        c.argument('list_description', type=str, help='Provides a user-visible description of the item. Optional.')
        c.argument('list_e_tag', type=str, help='ETag for the item. Read-only.')
        c.argument('list_last_modified_date_time', help='Date and time the item was last modified. Read-only.')
        c.argument('list_name', type=str, help='The name of the item. Read-write.')
        c.argument('list_web_url', type=str, help='URL that displays the resource in the browser. Read-only.')
        c.argument('list_created_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory user '
                   'object. Expected value: json-string/@json-file.')
        c.argument('list_last_modified_by_user', type=validate_file_or_dict, help='Represents an Azure Active '
                   'Directory user object. Expected value: json-string/@json-file.')
        c.argument('list_parent_reference_drive_id', type=str, help='Unique identifier of the drive instance that '
                   'contains the item. Read-only.')
        c.argument('list_parent_reference_drive_type', type=str, help='Identifies the type of drive. See [drive][] '
                   'resource for values.')
        c.argument('list_parent_reference_id', type=str,
                   help='Unique identifier of the item in the drive. Read-only.')
        c.argument('list_parent_reference_name', type=str, help='The name of the item being referenced. Read-only.')
        c.argument('list_parent_reference_path', type=str, help='Path that can be used to navigate to the item. '
                   'Read-only.')
        c.argument('list_parent_reference_share_id', type=str, help='A unique identifier for a shared resource that '
                   'can be accessed via the [Shares][] API.')
        c.argument('list_parent_reference_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('list_parent_reference_site_id', type=str, help='')
        c.argument('list_last_modified_by_application', action=AddLastModifiedByApplication, nargs='*',
                   help='identity')
        c.argument('list_last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('user1', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('list_created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('list_created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('user2', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('list_display_name', type=str, help='The displayable title of the list.')
        c.argument('list_list', action=AddListList, nargs='*', help='listInfo')
        c.argument('list_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help='sharepointIds')
        c.argument('list_system', type=validate_file_or_dict, help='systemFacet Expected value: '
                   'json-string/@json-file.')
        c.argument('list_activities', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('list_columns', type=validate_file_or_dict, help='The collection of field definitions for this '
                   'list. Expected value: json-string/@json-file.')
        c.argument('list_content_types', type=validate_file_or_dict, help='The collection of content types present in '
                   'this list. Expected value: json-string/@json-file.')
        c.argument('list_drive', type=validate_file_or_dict, help='drive Expected value: json-string/@json-file.')
        c.argument('list_items', type=validate_file_or_dict, help='All items contained in the list. Expected value: '
                   'json-string/@json-file.')
        c.argument('list_subscriptions', action=AddFilesDriveUpdateListSubscriptions, nargs='*', help='The set of '
                   'subscriptions on the list.')
        c.argument('quota_deleted', type=int, help='Total space consumed by files in the recycle bin, in bytes. '
                   'Read-only.')
        c.argument('quota_remaining', type=int, help='Total space remaining before reaching the quota limit, in bytes. '
                   'Read-only.')
        c.argument('quota_state', type=str, help='Enumeration value that indicates the state of the storage space. '
                   'Read-only.')
        c.argument('quota_storage_plan_information', action=AddQuotaStoragePlanInformation, nargs='*', help=''
                   'storagePlanInformation')
        c.argument('quota_total', type=int, help='Total allowed storage space, in bytes. Read-only.')
        c.argument('quota_used', type=int, help='Total space used, in bytes. Read-only.')
        c.argument('owner_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('owner_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('owner_user', action=AddLastModifiedByApplication, nargs='*', help='identity')

    with self.argument_context('files share-shared-drive-item delete') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('files share-shared-drive-item create-shared-drive-item') as c:
        c.argument('body', type=validate_file_or_dict, help='New entity Expected value: json-string/@json-file.')

    with self.argument_context('files share-shared-drive-item get-shared-drive-item') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files share-shared-drive-item list-shared-drive-item') as c:
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files share-shared-drive-item update-shared-drive-item') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('body', type=validate_file_or_dict, help='New property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('files share delete') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('drive_item_id', type=str, help='key: id of driveItem')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('files share create-item') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_date_time', help='Date and time of item creation. Read-only.')
        c.argument('description', type=str, help='Provides a user-visible description of the item. Optional.')
        c.argument('e_tag', type=str, help='ETag for the item. Read-only.')
        c.argument('last_modified_date_time', help='Date and time the item was last modified. Read-only.')
        c.argument('name', type=str, help='The name of the item. Read-write.')
        c.argument('web_url', type=str, help='URL that displays the resource in the browser. Read-only.')
        c.argument('created_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory user '
                   'object. Expected value: json-string/@json-file.')
        c.argument('last_modified_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory '
                   'user object. Expected value: json-string/@json-file.')
        c.argument('parent_reference_drive_id', type=str, help='Unique identifier of the drive instance that contains '
                   'the item. Read-only.')
        c.argument('parent_reference_drive_type', type=str, help='Identifies the type of drive. See [drive][] resource '
                   'for values.')
        c.argument('parent_reference_id', type=str, help='Unique identifier of the item in the drive. Read-only.')
        c.argument('parent_reference_name', type=str, help='The name of the item being referenced. Read-only.')
        c.argument('parent_reference_path', type=str,
                   help='Path that can be used to navigate to the item. Read-only.')
        c.argument('parent_reference_share_id', type=str, help='A unique identifier for a shared resource that can be '
                   'accessed via the [Shares][] API.')
        c.argument('parent_reference_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('parent_reference_site_id', type=str, help='')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('microsoft_graph_identity_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('audio', action=AddAudio, nargs='*', help='audio')
        c.argument('content', help='The content stream, if the item represents a file.')
        c.argument('c_tag', type=str, help='An eTag for the content of the item. This eTag is not changed if only the '
                   'metadata is changed. Note This property is not returned if the item is a folder. Read-only.')
        c.argument('file_system_info', action=AddFileSystemInfo, nargs='*', help='fileSystemInfo')
        c.argument('image', action=AddImage, nargs='*', help='image')
        c.argument('location', arg_type=get_location_type(self.cli_ctx))
        c.argument('photo', action=AddPhoto, nargs='*', help='photo')
        c.argument('publication', action=AddPublication, nargs='*', help='publicationFacet')
        c.argument('root', type=validate_file_or_dict, help='root Expected value: json-string/@json-file.')
        c.argument('microsoft_graph_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('size', type=int, help='Size of the item in bytes. Read-only.')
        c.argument('video', action=AddVideo, nargs='*', help='video')
        c.argument('web_dav_url', type=str, help='WebDAV compatible URL for the item.')
        c.argument('activities', type=validate_file_or_dict, help='The list of recent activities that took place on '
                   'this item. Expected value: json-string/@json-file.')
        c.argument('analytics', type=validate_file_or_dict, help='itemAnalytics Expected value: '
                   'json-string/@json-file.')
        c.argument('children', type=validate_file_or_dict, help='Collection containing Item objects for the immediate '
                   'children of Item. Only items representing folders have children. Read-only. Nullable. Expected '
                   'value: json-string/@json-file.')
        c.argument('list_item', type=validate_file_or_dict, help='listItem Expected value: json-string/@json-file.')
        c.argument('permissions', type=validate_file_or_dict, help='The set of permissions for the item. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('subscriptions', action=AddFilesDriveCreateBundleSubscriptions, nargs='*', help='The set of '
                   'subscriptions on the item. Only supported on the root of a drive.')
        c.argument('thumbnails', type=validate_file_or_dict, help='Collection containing [ThumbnailSet][] objects '
                   'associated with the item. For more info, see [getting thumbnails][]. Read-only. Nullable. Expected '
                   'value: json-string/@json-file.')
        c.argument('versions', action=AddDrivesVersions, nargs='*', help='The list of previous versions of the item. '
                   'For more info, see [getting previous versions][]. Read-only. Nullable.')
        c.argument('workbook_id', type=str, help='Read-only.')
        c.argument('workbook_application', action=AddWorkbookApplication, nargs='*', help='workbookApplication')
        c.argument('workbook_comments', action=AddWorkbookComments, nargs='*', help='')
        c.argument('workbook_functions', action=AddWorkbookFunctions, nargs='*', help='workbookFunctions')
        c.argument('workbook_names', type=validate_file_or_dict, help='Represents a collection of workbook scoped '
                   'named items (named ranges and constants). Read-only. Expected value: json-string/@json-file.')
        c.argument('workbook_operations', type=validate_file_or_dict, help='The status of workbook operations. Getting '
                   'an operation collection is not supported, but you can get the status of a long-running operation '
                   'if the Location header is returned in the response. Read-only. Expected value: '
                   'json-string/@json-file.')
        c.argument('workbook_tables', type=validate_file_or_dict, help='Represents a collection of tables associated '
                   'with the workbook. Read-only. Expected value: json-string/@json-file.')
        c.argument('workbook_worksheets', type=validate_file_or_dict, help='Represents a collection of worksheets '
                   'associated with the workbook. Read-only. Expected value: json-string/@json-file.')
        c.argument('special_folder_name', type=str, help='The unique identifier for this item in the /drive/special '
                   'collection')
        c.argument('shared_owner', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('shared_scope', type=str, help='Indicates the scope of how the item is shared: anonymous, '
                   'organization, or users. Read-only.')
        c.argument('shared_shared_by', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('shared_shared_date_time', help='The UTC date and time when the item was shared. Read-only.')
        c.argument('search_result_on_click_telemetry_url', type=str, help='A callback URL that can be used to record '
                   'telemetry information. The application should issue a GET on this URL if the user interacts with '
                   'this item to improve the quality of results.')
        c.argument('remote_item_created_by', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_created_date_time', help='Date and time of item creation. Read-only.')
        c.argument('remote_item_file', type=validate_file_or_dict,
                   help='file Expected value: json-string/@json-file.')
        c.argument('remote_item_file_system_info', action=AddFileSystemInfo, nargs='*', help='fileSystemInfo')
        c.argument('remote_item_folder', type=validate_file_or_dict, help='folder Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_id', type=str, help='Unique identifier for the remote item in its drive. Read-only.')
        c.argument('remote_item_image', action=AddImage, nargs='*', help='image')
        c.argument('remote_item_last_modified_by', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_last_modified_date_time', help='Date and time the item was last modified. Read-only.')
        c.argument('remote_item_name', type=str, help='Optional. Filename of the remote item. Read-only.')
        c.argument('remote_item_package', action=AddRemoteItemPackage, nargs='*', help='package')
        c.argument('remote_item_parent_reference', type=validate_file_or_dict, help='itemReference Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_shared', type=validate_file_or_dict, help='shared Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('remote_item_size', type=int, help='Size of the remote item. Read-only.')
        c.argument('remote_item_special_folder', action=AddRemoteItemSpecialFolder, nargs='*', help='specialFolder')
        c.argument('remote_item_video', action=AddVideo, nargs='*', help='video')
        c.argument('remote_item_web_dav_url', type=str, help='DAV compatible URL for the item.')
        c.argument('remote_item_web_url', type=str, help='URL that displays the resource in the browser. Read-only.')
        c.argument('pending_operations_pending_content_update_queued_date_time', help='Date and time the pending '
                   'binary operation was queued in UTC time. Read-only.')
        c.argument('package_type', type=str, help='A string indicating the type of package. While oneNote is the only '
                   'currently defined value, you should expect other package types to be returned and handle them '
                   'accordingly.')
        c.argument('folder_child_count', type=int, help='Number of children contained immediately within this '
                   'container.')
        c.argument('folder_view', action=AddFolderView, nargs='*', help='folderView')
        c.argument('file_hashes', action=AddFileHashes, nargs='*', help='hashes')
        c.argument('file_mime_type', type=str, help='The MIME type for the file. This is determined by logic on the '
                   'server and might not be the value provided when the file was uploaded. Read-only.')
        c.argument('file_processing_metadata', arg_type=get_three_state_flag(), help='')
        c.argument('deleted_state', type=str, help='Represents the state of the deleted item.')
        c.argument('bundle_album', action=AddBundleAlbum, nargs='*', help='album')
        c.argument('bundle_child_count', type=int, help='')

    with self.argument_context('files share get-drive-item') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files share get-drive-item-content') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')

    with self.argument_context('files share get-item') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('drive_item_id', type=str, help='key: id of driveItem')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files share get-item-content') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('drive_item_id', type=str, help='key: id of driveItem')

    with self.argument_context('files share get-list') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files share get-list-item') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files share get-permission') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files share get-root') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files share get-root-content') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')

    with self.argument_context('files share get-site') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files share list-item') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files share set-drive-item-content') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('data', help='New media content.')

    with self.argument_context('files share set-item-content') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('drive_item_id', type=str, help='key: id of driveItem')
        c.argument('data', help='New media content.')

    with self.argument_context('files share set-root-content') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('data', help='New media content.')

    with self.argument_context('files share update-drive-item') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_date_time', help='Date and time of item creation. Read-only.')
        c.argument('description', type=str, help='Provides a user-visible description of the item. Optional.')
        c.argument('e_tag', type=str, help='ETag for the item. Read-only.')
        c.argument('last_modified_date_time', help='Date and time the item was last modified. Read-only.')
        c.argument('name', type=str, help='The name of the item. Read-write.')
        c.argument('web_url', type=str, help='URL that displays the resource in the browser. Read-only.')
        c.argument('created_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory user '
                   'object. Expected value: json-string/@json-file.')
        c.argument('last_modified_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory '
                   'user object. Expected value: json-string/@json-file.')
        c.argument('parent_reference_drive_id', type=str, help='Unique identifier of the drive instance that contains '
                   'the item. Read-only.')
        c.argument('parent_reference_drive_type', type=str, help='Identifies the type of drive. See [drive][] resource '
                   'for values.')
        c.argument('parent_reference_id', type=str, help='Unique identifier of the item in the drive. Read-only.')
        c.argument('parent_reference_name', type=str, help='The name of the item being referenced. Read-only.')
        c.argument('parent_reference_path', type=str,
                   help='Path that can be used to navigate to the item. Read-only.')
        c.argument('parent_reference_share_id', type=str, help='A unique identifier for a shared resource that can be '
                   'accessed via the [Shares][] API.')
        c.argument('parent_reference_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('parent_reference_site_id', type=str, help='')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('microsoft_graph_identity_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('audio', action=AddAudio, nargs='*', help='audio')
        c.argument('content', help='The content stream, if the item represents a file.')
        c.argument('c_tag', type=str, help='An eTag for the content of the item. This eTag is not changed if only the '
                   'metadata is changed. Note This property is not returned if the item is a folder. Read-only.')
        c.argument('file_system_info', action=AddFileSystemInfo, nargs='*', help='fileSystemInfo')
        c.argument('image', action=AddImage, nargs='*', help='image')
        c.argument('location', arg_type=get_location_type(self.cli_ctx))
        c.argument('photo', action=AddPhoto, nargs='*', help='photo')
        c.argument('publication', action=AddPublication, nargs='*', help='publicationFacet')
        c.argument('root', type=validate_file_or_dict, help='root Expected value: json-string/@json-file.')
        c.argument('microsoft_graph_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('size', type=int, help='Size of the item in bytes. Read-only.')
        c.argument('video', action=AddVideo, nargs='*', help='video')
        c.argument('web_dav_url', type=str, help='WebDAV compatible URL for the item.')
        c.argument('activities', type=validate_file_or_dict, help='The list of recent activities that took place on '
                   'this item. Expected value: json-string/@json-file.')
        c.argument('analytics', type=validate_file_or_dict, help='itemAnalytics Expected value: '
                   'json-string/@json-file.')
        c.argument('children', type=validate_file_or_dict, help='Collection containing Item objects for the immediate '
                   'children of Item. Only items representing folders have children. Read-only. Nullable. Expected '
                   'value: json-string/@json-file.')
        c.argument('list_item', type=validate_file_or_dict, help='listItem Expected value: json-string/@json-file.')
        c.argument('permissions', type=validate_file_or_dict, help='The set of permissions for the item. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('subscriptions', action=AddFilesDriveCreateBundleSubscriptions, nargs='*', help='The set of '
                   'subscriptions on the item. Only supported on the root of a drive.')
        c.argument('thumbnails', type=validate_file_or_dict, help='Collection containing [ThumbnailSet][] objects '
                   'associated with the item. For more info, see [getting thumbnails][]. Read-only. Nullable. Expected '
                   'value: json-string/@json-file.')
        c.argument('versions', action=AddDrivesVersions, nargs='*', help='The list of previous versions of the item. '
                   'For more info, see [getting previous versions][]. Read-only. Nullable.')
        c.argument('workbook_id', type=str, help='Read-only.')
        c.argument('workbook_application', action=AddWorkbookApplication, nargs='*', help='workbookApplication')
        c.argument('workbook_comments', action=AddWorkbookComments, nargs='*', help='')
        c.argument('workbook_functions', action=AddWorkbookFunctions, nargs='*', help='workbookFunctions')
        c.argument('workbook_names', type=validate_file_or_dict, help='Represents a collection of workbook scoped '
                   'named items (named ranges and constants). Read-only. Expected value: json-string/@json-file.')
        c.argument('workbook_operations', type=validate_file_or_dict, help='The status of workbook operations. Getting '
                   'an operation collection is not supported, but you can get the status of a long-running operation '
                   'if the Location header is returned in the response. Read-only. Expected value: '
                   'json-string/@json-file.')
        c.argument('workbook_tables', type=validate_file_or_dict, help='Represents a collection of tables associated '
                   'with the workbook. Read-only. Expected value: json-string/@json-file.')
        c.argument('workbook_worksheets', type=validate_file_or_dict, help='Represents a collection of worksheets '
                   'associated with the workbook. Read-only. Expected value: json-string/@json-file.')
        c.argument('special_folder_name', type=str, help='The unique identifier for this item in the /drive/special '
                   'collection')
        c.argument('shared_owner', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('shared_scope', type=str, help='Indicates the scope of how the item is shared: anonymous, '
                   'organization, or users. Read-only.')
        c.argument('shared_shared_by', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('shared_shared_date_time', help='The UTC date and time when the item was shared. Read-only.')
        c.argument('search_result_on_click_telemetry_url', type=str, help='A callback URL that can be used to record '
                   'telemetry information. The application should issue a GET on this URL if the user interacts with '
                   'this item to improve the quality of results.')
        c.argument('remote_item_created_by', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_created_date_time', help='Date and time of item creation. Read-only.')
        c.argument('remote_item_file', type=validate_file_or_dict,
                   help='file Expected value: json-string/@json-file.')
        c.argument('remote_item_file_system_info', action=AddFileSystemInfo, nargs='*', help='fileSystemInfo')
        c.argument('remote_item_folder', type=validate_file_or_dict, help='folder Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_id', type=str, help='Unique identifier for the remote item in its drive. Read-only.')
        c.argument('remote_item_image', action=AddImage, nargs='*', help='image')
        c.argument('remote_item_last_modified_by', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_last_modified_date_time', help='Date and time the item was last modified. Read-only.')
        c.argument('remote_item_name', type=str, help='Optional. Filename of the remote item. Read-only.')
        c.argument('remote_item_package', action=AddRemoteItemPackage, nargs='*', help='package')
        c.argument('remote_item_parent_reference', type=validate_file_or_dict, help='itemReference Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_shared', type=validate_file_or_dict, help='shared Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('remote_item_size', type=int, help='Size of the remote item. Read-only.')
        c.argument('remote_item_special_folder', action=AddRemoteItemSpecialFolder, nargs='*', help='specialFolder')
        c.argument('remote_item_video', action=AddVideo, nargs='*', help='video')
        c.argument('remote_item_web_dav_url', type=str, help='DAV compatible URL for the item.')
        c.argument('remote_item_web_url', type=str, help='URL that displays the resource in the browser. Read-only.')
        c.argument('pending_operations_pending_content_update_queued_date_time', help='Date and time the pending '
                   'binary operation was queued in UTC time. Read-only.')
        c.argument('package_type', type=str, help='A string indicating the type of package. While oneNote is the only '
                   'currently defined value, you should expect other package types to be returned and handle them '
                   'accordingly.')
        c.argument('folder_child_count', type=int, help='Number of children contained immediately within this '
                   'container.')
        c.argument('folder_view', action=AddFolderView, nargs='*', help='folderView')
        c.argument('file_hashes', action=AddFileHashes, nargs='*', help='hashes')
        c.argument('file_mime_type', type=str, help='The MIME type for the file. This is determined by logic on the '
                   'server and might not be the value provided when the file was uploaded. Read-only.')
        c.argument('file_processing_metadata', arg_type=get_three_state_flag(), help='')
        c.argument('deleted_state', type=str, help='Represents the state of the deleted item.')
        c.argument('bundle_album', action=AddBundleAlbum, nargs='*', help='album')
        c.argument('bundle_child_count', type=int, help='')

    with self.argument_context('files share update-item') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('drive_item_id', type=str, help='key: id of driveItem')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_date_time', help='Date and time of item creation. Read-only.')
        c.argument('description', type=str, help='Provides a user-visible description of the item. Optional.')
        c.argument('e_tag', type=str, help='ETag for the item. Read-only.')
        c.argument('last_modified_date_time', help='Date and time the item was last modified. Read-only.')
        c.argument('name', type=str, help='The name of the item. Read-write.')
        c.argument('web_url', type=str, help='URL that displays the resource in the browser. Read-only.')
        c.argument('created_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory user '
                   'object. Expected value: json-string/@json-file.')
        c.argument('last_modified_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory '
                   'user object. Expected value: json-string/@json-file.')
        c.argument('parent_reference_drive_id', type=str, help='Unique identifier of the drive instance that contains '
                   'the item. Read-only.')
        c.argument('parent_reference_drive_type', type=str, help='Identifies the type of drive. See [drive][] resource '
                   'for values.')
        c.argument('parent_reference_id', type=str, help='Unique identifier of the item in the drive. Read-only.')
        c.argument('parent_reference_name', type=str, help='The name of the item being referenced. Read-only.')
        c.argument('parent_reference_path', type=str,
                   help='Path that can be used to navigate to the item. Read-only.')
        c.argument('parent_reference_share_id', type=str, help='A unique identifier for a shared resource that can be '
                   'accessed via the [Shares][] API.')
        c.argument('parent_reference_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('parent_reference_site_id', type=str, help='')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('microsoft_graph_identity_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('audio', action=AddAudio, nargs='*', help='audio')
        c.argument('content', help='The content stream, if the item represents a file.')
        c.argument('c_tag', type=str, help='An eTag for the content of the item. This eTag is not changed if only the '
                   'metadata is changed. Note This property is not returned if the item is a folder. Read-only.')
        c.argument('file_system_info', action=AddFileSystemInfo, nargs='*', help='fileSystemInfo')
        c.argument('image', action=AddImage, nargs='*', help='image')
        c.argument('location', arg_type=get_location_type(self.cli_ctx))
        c.argument('photo', action=AddPhoto, nargs='*', help='photo')
        c.argument('publication', action=AddPublication, nargs='*', help='publicationFacet')
        c.argument('root', type=validate_file_or_dict, help='root Expected value: json-string/@json-file.')
        c.argument('microsoft_graph_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('size', type=int, help='Size of the item in bytes. Read-only.')
        c.argument('video', action=AddVideo, nargs='*', help='video')
        c.argument('web_dav_url', type=str, help='WebDAV compatible URL for the item.')
        c.argument('activities', type=validate_file_or_dict, help='The list of recent activities that took place on '
                   'this item. Expected value: json-string/@json-file.')
        c.argument('analytics', type=validate_file_or_dict, help='itemAnalytics Expected value: '
                   'json-string/@json-file.')
        c.argument('children', type=validate_file_or_dict, help='Collection containing Item objects for the immediate '
                   'children of Item. Only items representing folders have children. Read-only. Nullable. Expected '
                   'value: json-string/@json-file.')
        c.argument('list_item', type=validate_file_or_dict, help='listItem Expected value: json-string/@json-file.')
        c.argument('permissions', type=validate_file_or_dict, help='The set of permissions for the item. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('subscriptions', action=AddFilesDriveCreateBundleSubscriptions, nargs='*', help='The set of '
                   'subscriptions on the item. Only supported on the root of a drive.')
        c.argument('thumbnails', type=validate_file_or_dict, help='Collection containing [ThumbnailSet][] objects '
                   'associated with the item. For more info, see [getting thumbnails][]. Read-only. Nullable. Expected '
                   'value: json-string/@json-file.')
        c.argument('versions', action=AddDrivesVersions, nargs='*', help='The list of previous versions of the item. '
                   'For more info, see [getting previous versions][]. Read-only. Nullable.')
        c.argument('workbook_id', type=str, help='Read-only.')
        c.argument('workbook_application', action=AddWorkbookApplication, nargs='*', help='workbookApplication')
        c.argument('workbook_comments', action=AddWorkbookComments, nargs='*', help='')
        c.argument('workbook_functions', action=AddWorkbookFunctions, nargs='*', help='workbookFunctions')
        c.argument('workbook_names', type=validate_file_or_dict, help='Represents a collection of workbook scoped '
                   'named items (named ranges and constants). Read-only. Expected value: json-string/@json-file.')
        c.argument('workbook_operations', type=validate_file_or_dict, help='The status of workbook operations. Getting '
                   'an operation collection is not supported, but you can get the status of a long-running operation '
                   'if the Location header is returned in the response. Read-only. Expected value: '
                   'json-string/@json-file.')
        c.argument('workbook_tables', type=validate_file_or_dict, help='Represents a collection of tables associated '
                   'with the workbook. Read-only. Expected value: json-string/@json-file.')
        c.argument('workbook_worksheets', type=validate_file_or_dict, help='Represents a collection of worksheets '
                   'associated with the workbook. Read-only. Expected value: json-string/@json-file.')
        c.argument('special_folder_name', type=str, help='The unique identifier for this item in the /drive/special '
                   'collection')
        c.argument('shared_owner', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('shared_scope', type=str, help='Indicates the scope of how the item is shared: anonymous, '
                   'organization, or users. Read-only.')
        c.argument('shared_shared_by', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('shared_shared_date_time', help='The UTC date and time when the item was shared. Read-only.')
        c.argument('search_result_on_click_telemetry_url', type=str, help='A callback URL that can be used to record '
                   'telemetry information. The application should issue a GET on this URL if the user interacts with '
                   'this item to improve the quality of results.')
        c.argument('remote_item_created_by', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_created_date_time', help='Date and time of item creation. Read-only.')
        c.argument('remote_item_file', type=validate_file_or_dict,
                   help='file Expected value: json-string/@json-file.')
        c.argument('remote_item_file_system_info', action=AddFileSystemInfo, nargs='*', help='fileSystemInfo')
        c.argument('remote_item_folder', type=validate_file_or_dict, help='folder Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_id', type=str, help='Unique identifier for the remote item in its drive. Read-only.')
        c.argument('remote_item_image', action=AddImage, nargs='*', help='image')
        c.argument('remote_item_last_modified_by', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_last_modified_date_time', help='Date and time the item was last modified. Read-only.')
        c.argument('remote_item_name', type=str, help='Optional. Filename of the remote item. Read-only.')
        c.argument('remote_item_package', action=AddRemoteItemPackage, nargs='*', help='package')
        c.argument('remote_item_parent_reference', type=validate_file_or_dict, help='itemReference Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_shared', type=validate_file_or_dict, help='shared Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('remote_item_size', type=int, help='Size of the remote item. Read-only.')
        c.argument('remote_item_special_folder', action=AddRemoteItemSpecialFolder, nargs='*', help='specialFolder')
        c.argument('remote_item_video', action=AddVideo, nargs='*', help='video')
        c.argument('remote_item_web_dav_url', type=str, help='DAV compatible URL for the item.')
        c.argument('remote_item_web_url', type=str, help='URL that displays the resource in the browser. Read-only.')
        c.argument('pending_operations_pending_content_update_queued_date_time', help='Date and time the pending '
                   'binary operation was queued in UTC time. Read-only.')
        c.argument('package_type', type=str, help='A string indicating the type of package. While oneNote is the only '
                   'currently defined value, you should expect other package types to be returned and handle them '
                   'accordingly.')
        c.argument('folder_child_count', type=int, help='Number of children contained immediately within this '
                   'container.')
        c.argument('folder_view', action=AddFolderView, nargs='*', help='folderView')
        c.argument('file_hashes', action=AddFileHashes, nargs='*', help='hashes')
        c.argument('file_mime_type', type=str, help='The MIME type for the file. This is determined by logic on the '
                   'server and might not be the value provided when the file was uploaded. Read-only.')
        c.argument('file_processing_metadata', arg_type=get_three_state_flag(), help='')
        c.argument('deleted_state', type=str, help='Represents the state of the deleted item.')
        c.argument('bundle_album', action=AddBundleAlbum, nargs='*', help='album')
        c.argument('bundle_child_count', type=int, help='')

    with self.argument_context('files share update-list') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_date_time', help='Date and time of item creation. Read-only.')
        c.argument('description', type=str, help='Provides a user-visible description of the item. Optional.')
        c.argument('e_tag', type=str, help='ETag for the item. Read-only.')
        c.argument('last_modified_date_time', help='Date and time the item was last modified. Read-only.')
        c.argument('name', type=str, help='The name of the item. Read-write.')
        c.argument('web_url', type=str, help='URL that displays the resource in the browser. Read-only.')
        c.argument('created_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory user '
                   'object. Expected value: json-string/@json-file.')
        c.argument('last_modified_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory '
                   'user object. Expected value: json-string/@json-file.')
        c.argument('parent_reference_drive_id', type=str, help='Unique identifier of the drive instance that contains '
                   'the item. Read-only.')
        c.argument('parent_reference_drive_type', type=str, help='Identifies the type of drive. See [drive][] resource '
                   'for values.')
        c.argument('parent_reference_id', type=str, help='Unique identifier of the item in the drive. Read-only.')
        c.argument('parent_reference_name', type=str, help='The name of the item being referenced. Read-only.')
        c.argument('parent_reference_path', type=str,
                   help='Path that can be used to navigate to the item. Read-only.')
        c.argument('parent_reference_share_id', type=str, help='A unique identifier for a shared resource that can be '
                   'accessed via the [Shares][] API.')
        c.argument('parent_reference_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('parent_reference_site_id', type=str, help='')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('microsoft_graph_identity_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('display_name', type=str, help='The displayable title of the list.')
        c.argument('list', action=AddListList, nargs='*', help='listInfo')
        c.argument('microsoft_graph_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('system', type=validate_file_or_dict, help='systemFacet Expected value: json-string/@json-file.')
        c.argument('activities', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('columns', type=validate_file_or_dict, help='The collection of field definitions for this list. '
                   'Expected value: json-string/@json-file.')
        c.argument('content_types', type=validate_file_or_dict, help='The collection of content types present in this '
                   'list. Expected value: json-string/@json-file.')
        c.argument('drive', type=validate_file_or_dict, help='drive Expected value: json-string/@json-file.')
        c.argument('items', type=validate_file_or_dict, help='All items contained in the list. Expected value: '
                   'json-string/@json-file.')
        c.argument('subscriptions', action=AddFilesDriveUpdateListSubscriptions, nargs='*', help='The set of '
                   'subscriptions on the list.')

    with self.argument_context('files share update-list-item') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_date_time', help='Date and time of item creation. Read-only.')
        c.argument('description', type=str, help='Provides a user-visible description of the item. Optional.')
        c.argument('e_tag', type=str, help='ETag for the item. Read-only.')
        c.argument('last_modified_date_time', help='Date and time the item was last modified. Read-only.')
        c.argument('name', type=str, help='The name of the item. Read-write.')
        c.argument('web_url', type=str, help='URL that displays the resource in the browser. Read-only.')
        c.argument('created_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory user '
                   'object. Expected value: json-string/@json-file.')
        c.argument('last_modified_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory '
                   'user object. Expected value: json-string/@json-file.')
        c.argument('parent_reference_drive_id', type=str, help='Unique identifier of the drive instance that contains '
                   'the item. Read-only.')
        c.argument('parent_reference_drive_type', type=str, help='Identifies the type of drive. See [drive][] resource '
                   'for values.')
        c.argument('parent_reference_id', type=str, help='Unique identifier of the item in the drive. Read-only.')
        c.argument('parent_reference_name', type=str, help='The name of the item being referenced. Read-only.')
        c.argument('parent_reference_path', type=str,
                   help='Path that can be used to navigate to the item. Read-only.')
        c.argument('parent_reference_share_id', type=str, help='A unique identifier for a shared resource that can be '
                   'accessed via the [Shares][] API.')
        c.argument('parent_reference_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('parent_reference_site_id', type=str, help='')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('microsoft_graph_identity_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('content_type', action=AddContentType, nargs='*', help='contentTypeInfo')
        c.argument('microsoft_graph_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('activities', type=validate_file_or_dict, help='The list of recent activities that took place on '
                   'this item. Expected value: json-string/@json-file.')
        c.argument('analytics', type=validate_file_or_dict, help='itemAnalytics Expected value: '
                   'json-string/@json-file.')
        c.argument('drive_item', type=validate_file_or_dict, help='driveItem Expected value: json-string/@json-file.')
        c.argument('versions', action=AddDrivesActivitiesVersions, nargs='*', help='The list of previous versions of '
                   'the list item.')
        c.argument('fields_id', type=str, help='Read-only.')

    with self.argument_context('files share update-permission') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('files share update-root') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_date_time', help='Date and time of item creation. Read-only.')
        c.argument('description', type=str, help='Provides a user-visible description of the item. Optional.')
        c.argument('e_tag', type=str, help='ETag for the item. Read-only.')
        c.argument('last_modified_date_time', help='Date and time the item was last modified. Read-only.')
        c.argument('name', type=str, help='The name of the item. Read-write.')
        c.argument('web_url', type=str, help='URL that displays the resource in the browser. Read-only.')
        c.argument('created_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory user '
                   'object. Expected value: json-string/@json-file.')
        c.argument('last_modified_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory '
                   'user object. Expected value: json-string/@json-file.')
        c.argument('parent_reference_drive_id', type=str, help='Unique identifier of the drive instance that contains '
                   'the item. Read-only.')
        c.argument('parent_reference_drive_type', type=str, help='Identifies the type of drive. See [drive][] resource '
                   'for values.')
        c.argument('parent_reference_id', type=str, help='Unique identifier of the item in the drive. Read-only.')
        c.argument('parent_reference_name', type=str, help='The name of the item being referenced. Read-only.')
        c.argument('parent_reference_path', type=str,
                   help='Path that can be used to navigate to the item. Read-only.')
        c.argument('parent_reference_share_id', type=str, help='A unique identifier for a shared resource that can be '
                   'accessed via the [Shares][] API.')
        c.argument('parent_reference_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('parent_reference_site_id', type=str, help='')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('microsoft_graph_identity_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('audio', action=AddAudio, nargs='*', help='audio')
        c.argument('content', help='The content stream, if the item represents a file.')
        c.argument('c_tag', type=str, help='An eTag for the content of the item. This eTag is not changed if only the '
                   'metadata is changed. Note This property is not returned if the item is a folder. Read-only.')
        c.argument('file_system_info', action=AddFileSystemInfo, nargs='*', help='fileSystemInfo')
        c.argument('image', action=AddImage, nargs='*', help='image')
        c.argument('location', arg_type=get_location_type(self.cli_ctx))
        c.argument('photo', action=AddPhoto, nargs='*', help='photo')
        c.argument('publication', action=AddPublication, nargs='*', help='publicationFacet')
        c.argument('root', type=validate_file_or_dict, help='root Expected value: json-string/@json-file.')
        c.argument('microsoft_graph_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('size', type=int, help='Size of the item in bytes. Read-only.')
        c.argument('video', action=AddVideo, nargs='*', help='video')
        c.argument('web_dav_url', type=str, help='WebDAV compatible URL for the item.')
        c.argument('activities', type=validate_file_or_dict, help='The list of recent activities that took place on '
                   'this item. Expected value: json-string/@json-file.')
        c.argument('analytics', type=validate_file_or_dict, help='itemAnalytics Expected value: '
                   'json-string/@json-file.')
        c.argument('children', type=validate_file_or_dict, help='Collection containing Item objects for the immediate '
                   'children of Item. Only items representing folders have children. Read-only. Nullable. Expected '
                   'value: json-string/@json-file.')
        c.argument('list_item', type=validate_file_or_dict, help='listItem Expected value: json-string/@json-file.')
        c.argument('permissions', type=validate_file_or_dict, help='The set of permissions for the item. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('subscriptions', action=AddFilesDriveCreateBundleSubscriptions, nargs='*', help='The set of '
                   'subscriptions on the item. Only supported on the root of a drive.')
        c.argument('thumbnails', type=validate_file_or_dict, help='Collection containing [ThumbnailSet][] objects '
                   'associated with the item. For more info, see [getting thumbnails][]. Read-only. Nullable. Expected '
                   'value: json-string/@json-file.')
        c.argument('versions', action=AddDrivesVersions, nargs='*', help='The list of previous versions of the item. '
                   'For more info, see [getting previous versions][]. Read-only. Nullable.')
        c.argument('workbook_id', type=str, help='Read-only.')
        c.argument('workbook_application', action=AddWorkbookApplication, nargs='*', help='workbookApplication')
        c.argument('workbook_comments', action=AddWorkbookComments, nargs='*', help='')
        c.argument('workbook_functions', action=AddWorkbookFunctions, nargs='*', help='workbookFunctions')
        c.argument('workbook_names', type=validate_file_or_dict, help='Represents a collection of workbook scoped '
                   'named items (named ranges and constants). Read-only. Expected value: json-string/@json-file.')
        c.argument('workbook_operations', type=validate_file_or_dict, help='The status of workbook operations. Getting '
                   'an operation collection is not supported, but you can get the status of a long-running operation '
                   'if the Location header is returned in the response. Read-only. Expected value: '
                   'json-string/@json-file.')
        c.argument('workbook_tables', type=validate_file_or_dict, help='Represents a collection of tables associated '
                   'with the workbook. Read-only. Expected value: json-string/@json-file.')
        c.argument('workbook_worksheets', type=validate_file_or_dict, help='Represents a collection of worksheets '
                   'associated with the workbook. Read-only. Expected value: json-string/@json-file.')
        c.argument('special_folder_name', type=str, help='The unique identifier for this item in the /drive/special '
                   'collection')
        c.argument('shared_owner', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('shared_scope', type=str, help='Indicates the scope of how the item is shared: anonymous, '
                   'organization, or users. Read-only.')
        c.argument('shared_shared_by', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('shared_shared_date_time', help='The UTC date and time when the item was shared. Read-only.')
        c.argument('search_result_on_click_telemetry_url', type=str, help='A callback URL that can be used to record '
                   'telemetry information. The application should issue a GET on this URL if the user interacts with '
                   'this item to improve the quality of results.')
        c.argument('remote_item_created_by', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_created_date_time', help='Date and time of item creation. Read-only.')
        c.argument('remote_item_file', type=validate_file_or_dict,
                   help='file Expected value: json-string/@json-file.')
        c.argument('remote_item_file_system_info', action=AddFileSystemInfo, nargs='*', help='fileSystemInfo')
        c.argument('remote_item_folder', type=validate_file_or_dict, help='folder Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_id', type=str, help='Unique identifier for the remote item in its drive. Read-only.')
        c.argument('remote_item_image', action=AddImage, nargs='*', help='image')
        c.argument('remote_item_last_modified_by', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_last_modified_date_time', help='Date and time the item was last modified. Read-only.')
        c.argument('remote_item_name', type=str, help='Optional. Filename of the remote item. Read-only.')
        c.argument('remote_item_package', action=AddRemoteItemPackage, nargs='*', help='package')
        c.argument('remote_item_parent_reference', type=validate_file_or_dict, help='itemReference Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_shared', type=validate_file_or_dict, help='shared Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('remote_item_size', type=int, help='Size of the remote item. Read-only.')
        c.argument('remote_item_special_folder', action=AddRemoteItemSpecialFolder, nargs='*', help='specialFolder')
        c.argument('remote_item_video', action=AddVideo, nargs='*', help='video')
        c.argument('remote_item_web_dav_url', type=str, help='DAV compatible URL for the item.')
        c.argument('remote_item_web_url', type=str, help='URL that displays the resource in the browser. Read-only.')
        c.argument('pending_operations_pending_content_update_queued_date_time', help='Date and time the pending '
                   'binary operation was queued in UTC time. Read-only.')
        c.argument('package_type', type=str, help='A string indicating the type of package. While oneNote is the only '
                   'currently defined value, you should expect other package types to be returned and handle them '
                   'accordingly.')
        c.argument('folder_child_count', type=int, help='Number of children contained immediately within this '
                   'container.')
        c.argument('folder_view', action=AddFolderView, nargs='*', help='folderView')
        c.argument('file_hashes', action=AddFileHashes, nargs='*', help='hashes')
        c.argument('file_mime_type', type=str, help='The MIME type for the file. This is determined by logic on the '
                   'server and might not be the value provided when the file was uploaded. Read-only.')
        c.argument('file_processing_metadata', arg_type=get_three_state_flag(), help='')
        c.argument('deleted_state', type=str, help='Represents the state of the deleted item.')
        c.argument('bundle_album', action=AddBundleAlbum, nargs='*', help='album')
        c.argument('bundle_child_count', type=int, help='')

    with self.argument_context('files share update-site') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_date_time', help='Date and time of item creation. Read-only.')
        c.argument('description', type=str, help='Provides a user-visible description of the item. Optional.')
        c.argument('e_tag', type=str, help='ETag for the item. Read-only.')
        c.argument('last_modified_date_time', help='Date and time the item was last modified. Read-only.')
        c.argument('name', type=str, help='The name of the item. Read-write.')
        c.argument('web_url', type=str, help='URL that displays the resource in the browser. Read-only.')
        c.argument('created_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory user '
                   'object. Expected value: json-string/@json-file.')
        c.argument('last_modified_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory '
                   'user object. Expected value: json-string/@json-file.')
        c.argument('parent_reference_drive_id', type=str, help='Unique identifier of the drive instance that contains '
                   'the item. Read-only.')
        c.argument('parent_reference_drive_type', type=str, help='Identifies the type of drive. See [drive][] resource '
                   'for values.')
        c.argument('parent_reference_id', type=str, help='Unique identifier of the item in the drive. Read-only.')
        c.argument('parent_reference_name', type=str, help='The name of the item being referenced. Read-only.')
        c.argument('parent_reference_path', type=str,
                   help='Path that can be used to navigate to the item. Read-only.')
        c.argument('parent_reference_share_id', type=str, help='A unique identifier for a shared resource that can be '
                   'accessed via the [Shares][] API.')
        c.argument('parent_reference_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('parent_reference_site_id', type=str, help='')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('microsoft_graph_identity_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('display_name', type=str, help='The full title for the site. Read-only.')
        c.argument('root', type=validate_file_or_dict, help='root Expected value: json-string/@json-file.')
        c.argument('microsoft_graph_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('analytics', type=validate_file_or_dict, help='itemAnalytics Expected value: '
                   'json-string/@json-file.')
        c.argument('columns', type=validate_file_or_dict, help='The collection of column definitions reusable across '
                   'lists under this site. Expected value: json-string/@json-file.')
        c.argument('content_types', type=validate_file_or_dict, help='The collection of content types defined for this '
                   'site. Expected value: json-string/@json-file.')
        c.argument('drive', type=validate_file_or_dict, help='drive Expected value: json-string/@json-file.')
        c.argument('drives', type=validate_file_or_dict, help='The collection of drives (document libraries) under '
                   'this site. Expected value: json-string/@json-file.')
        c.argument('items', type=validate_file_or_dict, help='Used to address any item contained in this site. This '
                   'collection cannot be enumerated. Expected value: json-string/@json-file.')
        c.argument('lists', type=validate_file_or_dict, help='The collection of lists under this site. Expected value: '
                   'json-string/@json-file.')
        c.argument('pages', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('sites', type=validate_file_or_dict, help='The collection of the sub-sites under this site. '
                   'Expected value: json-string/@json-file.')
        c.argument('onenote_id', type=str, help='Read-only.')
        c.argument('onenote_notebooks', type=validate_file_or_dict, help='The collection of OneNote notebooks that are '
                   'owned by the user or group. Read-only. Nullable. Expected value: json-string/@json-file.')
        c.argument('onenote_operations', type=validate_file_or_dict, help='The status of OneNote operations. Getting '
                   'an operations collection is not supported, but you can get the status of long-running operations '
                   'if the Operation-Location header is returned in the response. Read-only. Nullable. Expected value: '
                   'json-string/@json-file.')
        c.argument('onenote_pages', type=validate_file_or_dict, help='The pages in all OneNote notebooks that are '
                   'owned by the user or group.  Read-only. Nullable. Expected value: json-string/@json-file.')
        c.argument('onenote_resources', action=AddOnenoteResources, nargs='*', help='The image and other file '
                   'resources in OneNote pages. Getting a resources collection is not supported, but you can get the '
                   'binary content of a specific resource. Read-only. Nullable.')
        c.argument('onenote_section_groups', type=validate_file_or_dict, help='The section groups in all OneNote '
                   'notebooks that are owned by the user or group.  Read-only. Nullable. Expected value: '
                   'json-string/@json-file.')
        c.argument('onenote_sections', type=validate_file_or_dict, help='The sections in all OneNote notebooks that '
                   'are owned by the user or group.  Read-only. Nullable. Expected value: json-string/@json-file.')
        c.argument('site_collection_data_location_code', type=str, help='The geographic region code for where this '
                   'site collection resides. Read-only.')
        c.argument('site_collection_hostname', type=str, help='The hostname for the site collection. Read-only.')
        c.argument('site_collection_root', type=validate_file_or_dict, help='root Expected value: '
                   'json-string/@json-file.')
        c.argument('deleted_state', type=str, help='Represents the state of the deleted item.')

    with self.argument_context('files share-list delete') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('if_match', type=str, help='ETag')
        c.argument('column_definition_id', type=str, help='key: id of columnDefinition')
        c.argument('content_type_id', type=str, help='key: id of contentType')
        c.argument('list_item_id', type=str, help='key: id of listItem')
        c.argument('subscription_id', type=str, help='key: id of subscription', id_part='subscription')

    with self.argument_context('files share-list create-activity') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('files share-list create-column') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('boolean', type=validate_file_or_dict,
                   help='booleanColumn Expected value: json-string/@json-file.')
        c.argument('calculated', action=AddCalculated, nargs='*', help='calculatedColumn')
        c.argument('choice', action=AddChoice, nargs='*', help='choiceColumn')
        c.argument('column_group', type=str, help='For site columns, the name of the group this column belongs to. '
                   'Helps organize related columns.')
        c.argument('date_time', action=AddDateTime, nargs='*', help='dateTimeColumn')
        c.argument('default_value', action=AddDefaultValue, nargs='*', help='defaultColumnValue')
        c.argument('description', type=str, help='The user-facing description of the column.')
        c.argument('display_name', type=str, help='The user-facing name of the column.')
        c.argument('enforce_unique_values', arg_type=get_three_state_flag(), help='If true, no two list items may have '
                   'the same value for this column.')
        c.argument('geolocation', type=validate_file_or_dict, help='geolocationColumn Expected value: '
                   'json-string/@json-file.')
        c.argument('hidden', arg_type=get_three_state_flag(), help='Specifies whether the column is displayed in the '
                   'user interface.')
        c.argument('indexed', arg_type=get_three_state_flag(), help='Specifies whether the column values can used for '
                   'sorting and searching.')
        c.argument('lookup', action=AddLookup, nargs='*', help='lookupColumn')
        c.argument('name', type=str, help='The API-facing name of the column as it appears in the [fields][] on a '
                   '[listItem][]. For the user-facing name, see displayName.')
        c.argument('number', action=AddNumber, nargs='*', help='numberColumn')
        c.argument('person_or_group', action=AddPersonOrGroup, nargs='*', help='personOrGroupColumn')
        c.argument('read_only', arg_type=get_three_state_flag(), help='Specifies whether the column values can be '
                   'modified.')
        c.argument('required', arg_type=get_three_state_flag(), help='Specifies whether the column value is not '
                   'optional.')
        c.argument('text', action=AddText, nargs='*', help='textColumn')
        c.argument('currency_locale', type=str, help='Specifies the locale from which to infer the currency symbol.')

    with self.argument_context('files share-list create-content-type') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='The descriptive text for the item.')
        c.argument('group', type=str, help='The name of the group this content type belongs to. Helps organize related '
                   'content types.')
        c.argument('hidden', arg_type=get_three_state_flag(), help='Indicates whether the content type is hidden in '
                   'the list\'s \'New\' menu.')
        c.argument('name', type=str, help='The name of the content type.')
        c.argument('order', action=AddOrder, nargs='*', help='contentTypeOrder')
        c.argument('parent_id', type=str, help='The unique identifier of the content type.')
        c.argument('read_only', arg_type=get_three_state_flag(), help='If true, the content type cannot be modified '
                   'unless this value is first set to false.')
        c.argument('sealed', arg_type=get_three_state_flag(), help='If true, the content type cannot be modified by '
                   'users or through push-down operations. Only site collection administrators can seal or unseal '
                   'content types.')
        c.argument('column_links', action=AddColumnLinks, nargs='*', help='The collection of columns that are required '
                   'by this content type')
        c.argument('inherited_from_drive_id', type=str, help='Unique identifier of the drive instance that contains '
                   'the item. Read-only.')
        c.argument('inherited_from_drive_type', type=str, help='Identifies the type of drive. See [drive][] resource '
                   'for values.')
        c.argument('inherited_from_id', type=str, help='Unique identifier of the item in the drive. Read-only.')
        c.argument('inherited_from_name', type=str, help='The name of the item being referenced. Read-only.')
        c.argument('inherited_from_path', type=str, help='Path that can be used to navigate to the item. Read-only.')
        c.argument('inherited_from_share_id', type=str, help='A unique identifier for a shared resource that can be '
                   'accessed via the [Shares][] API.')
        c.argument('inherited_from_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('inherited_from_site_id', type=str, help='')

    with self.argument_context('files share-list create-item') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_date_time', help='Date and time of item creation. Read-only.')
        c.argument('description', type=str, help='Provides a user-visible description of the item. Optional.')
        c.argument('e_tag', type=str, help='ETag for the item. Read-only.')
        c.argument('last_modified_date_time', help='Date and time the item was last modified. Read-only.')
        c.argument('name', type=str, help='The name of the item. Read-write.')
        c.argument('web_url', type=str, help='URL that displays the resource in the browser. Read-only.')
        c.argument('created_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory user '
                   'object. Expected value: json-string/@json-file.')
        c.argument('last_modified_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory '
                   'user object. Expected value: json-string/@json-file.')
        c.argument('parent_reference_drive_id', type=str, help='Unique identifier of the drive instance that contains '
                   'the item. Read-only.')
        c.argument('parent_reference_drive_type', type=str, help='Identifies the type of drive. See [drive][] resource '
                   'for values.')
        c.argument('parent_reference_id', type=str, help='Unique identifier of the item in the drive. Read-only.')
        c.argument('parent_reference_name', type=str, help='The name of the item being referenced. Read-only.')
        c.argument('parent_reference_path', type=str,
                   help='Path that can be used to navigate to the item. Read-only.')
        c.argument('parent_reference_share_id', type=str, help='A unique identifier for a shared resource that can be '
                   'accessed via the [Shares][] API.')
        c.argument('parent_reference_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('parent_reference_site_id', type=str, help='')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('microsoft_graph_identity_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('content_type', action=AddContentType, nargs='*', help='contentTypeInfo')
        c.argument('microsoft_graph_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('activities', type=validate_file_or_dict, help='The list of recent activities that took place on '
                   'this item. Expected value: json-string/@json-file.')
        c.argument('analytics', type=validate_file_or_dict, help='itemAnalytics Expected value: '
                   'json-string/@json-file.')
        c.argument('drive_item', type=validate_file_or_dict, help='driveItem Expected value: json-string/@json-file.')
        c.argument('versions', action=AddDrivesActivitiesVersions, nargs='*', help='The list of previous versions of '
                   'the list item.')
        c.argument('fields_id', type=str, help='Read-only.')

    with self.argument_context('files share-list create-subscription') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('application_id', type=str, help='Identifier of the application used to create the subscription. '
                   'Read-only.')
        c.argument('change_type', type=str, help='Required. Indicates the type of change in the subscribed resource '
                   'that will raise a change notification. The supported values are: created, updated, deleted. '
                   'Multiple values can be combined using a comma-separated list.Note: Drive root item and list change '
                   'notifications support only the updated changeType. User and group change notifications support '
                   'updated and deleted changeType.')
        c.argument('client_state', type=str, help='Optional. Specifies the value of the clientState property sent by '
                   'the service in each change notification. The maximum length is 128 characters. The client can '
                   'check that the change notification came from the service by comparing the value of the clientState '
                   'property sent with the subscription with the value of the clientState property received with each '
                   'change notification.')
        c.argument('creator_id', type=str, help='Identifier of the user or service principal that created the '
                   'subscription. If the app used delegated permissions to create the subscription, this field '
                   'contains the id of the signed-in user the app called on behalf of. If the app used application '
                   'permissions, this field contains the id of the service principal corresponding to the app. '
                   'Read-only.')
        c.argument('encryption_certificate', type=str, help='A base64-encoded representation of a certificate with a '
                   'public key used to encrypt resource data in change notifications. Optional. Required when '
                   'includeResourceData is true.')
        c.argument('encryption_certificate_id', type=str, help='A custom app-provided identifier to help identify the '
                   'certificate needed to decrypt resource data. Optional.')
        c.argument('expiration_date_time', help='Required. Specifies the date and time when the webhook subscription '
                   'expires. The time is in UTC, and can be an amount of time from subscription creation that varies '
                   'for the resource subscribed to.  See the table below for maximum supported subscription length of '
                   'time.')
        c.argument('include_properties', arg_type=get_three_state_flag(), help='')
        c.argument('include_resource_data', arg_type=get_three_state_flag(), help='When set to true, change '
                   'notifications include resource data (such as content of a chat message). Optional.')
        c.argument('latest_supported_tls_version', type=str, help='Specifies the latest version of Transport Layer '
                   'Security (TLS) that the notification endpoint, specified by notificationUrl, supports. The '
                   'possible values are: v1_0, v1_1, v1_2, v1_3. For subscribers whose notification endpoint supports '
                   'a version lower than the currently recommended version (TLS 1.2), specifying this property by a '
                   'set timeline allows them to temporarily use their deprecated version of TLS before completing '
                   'their upgrade to TLS 1.2. For these subscribers, not setting this property per the timeline would '
                   'result in subscription operations failing. For subscribers whose notification endpoint already '
                   'supports TLS 1.2, setting this property is optional. In such cases, Microsoft Graph defaults the '
                   'property to v1_2.')
        c.argument('lifecycle_notification_url', type=str, help='The URL of the endpoint that receives lifecycle '
                   'notifications, including subscriptionRemoved and missed notifications. This URL must make use of '
                   'the HTTPS protocol. Optional. Read more about how Outlook resources use lifecycle notifications.')
        c.argument('notification_url', type=str, help='Required. The URL of the endpoint that will receive the change '
                   'notifications. This URL must make use of the HTTPS protocol.')
        c.argument('resource', type=str, help='Required. Specifies the resource that will be monitored for changes. Do '
                   'not include the base URL (https://graph.microsoft.com/v1.0/). See the possible resource path '
                   'values for each supported resource.')

    with self.argument_context('files share-list get-activity') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files share-list get-column') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('column_definition_id', type=str, help='key: id of columnDefinition')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files share-list get-content-type') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('content_type_id', type=str, help='key: id of contentType')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files share-list get-drive') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files share-list get-item') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('list_item_id', type=str, help='key: id of listItem')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files share-list get-subscription') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('subscription_id', type=str, help='key: id of subscription', id_part='subscription')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files share-list list-activity') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files share-list list-column') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files share-list list-content-type') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files share-list list-item') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files share-list list-subscription') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files share-list update-activity') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('files share-list update-column') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('column_definition_id', type=str, help='key: id of columnDefinition')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('boolean', type=validate_file_or_dict,
                   help='booleanColumn Expected value: json-string/@json-file.')
        c.argument('calculated', action=AddCalculated, nargs='*', help='calculatedColumn')
        c.argument('choice', action=AddChoice, nargs='*', help='choiceColumn')
        c.argument('column_group', type=str, help='For site columns, the name of the group this column belongs to. '
                   'Helps organize related columns.')
        c.argument('date_time', action=AddDateTime, nargs='*', help='dateTimeColumn')
        c.argument('default_value', action=AddDefaultValue, nargs='*', help='defaultColumnValue')
        c.argument('description', type=str, help='The user-facing description of the column.')
        c.argument('display_name', type=str, help='The user-facing name of the column.')
        c.argument('enforce_unique_values', arg_type=get_three_state_flag(), help='If true, no two list items may have '
                   'the same value for this column.')
        c.argument('geolocation', type=validate_file_or_dict, help='geolocationColumn Expected value: '
                   'json-string/@json-file.')
        c.argument('hidden', arg_type=get_three_state_flag(), help='Specifies whether the column is displayed in the '
                   'user interface.')
        c.argument('indexed', arg_type=get_three_state_flag(), help='Specifies whether the column values can used for '
                   'sorting and searching.')
        c.argument('lookup', action=AddLookup, nargs='*', help='lookupColumn')
        c.argument('name', type=str, help='The API-facing name of the column as it appears in the [fields][] on a '
                   '[listItem][]. For the user-facing name, see displayName.')
        c.argument('number', action=AddNumber, nargs='*', help='numberColumn')
        c.argument('person_or_group', action=AddPersonOrGroup, nargs='*', help='personOrGroupColumn')
        c.argument('read_only', arg_type=get_three_state_flag(), help='Specifies whether the column values can be '
                   'modified.')
        c.argument('required', arg_type=get_three_state_flag(), help='Specifies whether the column value is not '
                   'optional.')
        c.argument('text', action=AddText, nargs='*', help='textColumn')
        c.argument('currency_locale', type=str, help='Specifies the locale from which to infer the currency symbol.')

    with self.argument_context('files share-list update-content-type') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('content_type_id', type=str, help='key: id of contentType')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('description', type=str, help='The descriptive text for the item.')
        c.argument('group', type=str, help='The name of the group this content type belongs to. Helps organize related '
                   'content types.')
        c.argument('hidden', arg_type=get_three_state_flag(), help='Indicates whether the content type is hidden in '
                   'the list\'s \'New\' menu.')
        c.argument('name', type=str, help='The name of the content type.')
        c.argument('order', action=AddOrder, nargs='*', help='contentTypeOrder')
        c.argument('parent_id', type=str, help='The unique identifier of the content type.')
        c.argument('read_only', arg_type=get_three_state_flag(), help='If true, the content type cannot be modified '
                   'unless this value is first set to false.')
        c.argument('sealed', arg_type=get_three_state_flag(), help='If true, the content type cannot be modified by '
                   'users or through push-down operations. Only site collection administrators can seal or unseal '
                   'content types.')
        c.argument('column_links', action=AddColumnLinks, nargs='*', help='The collection of columns that are required '
                   'by this content type')
        c.argument('inherited_from_drive_id', type=str, help='Unique identifier of the drive instance that contains '
                   'the item. Read-only.')
        c.argument('inherited_from_drive_type', type=str, help='Identifies the type of drive. See [drive][] resource '
                   'for values.')
        c.argument('inherited_from_id', type=str, help='Unique identifier of the item in the drive. Read-only.')
        c.argument('inherited_from_name', type=str, help='The name of the item being referenced. Read-only.')
        c.argument('inherited_from_path', type=str, help='Path that can be used to navigate to the item. Read-only.')
        c.argument('inherited_from_share_id', type=str, help='A unique identifier for a shared resource that can be '
                   'accessed via the [Shares][] API.')
        c.argument('inherited_from_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('inherited_from_site_id', type=str, help='')

    with self.argument_context('files share-list update-drive') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_date_time', help='Date and time of item creation. Read-only.')
        c.argument('description', type=str, help='Provides a user-visible description of the item. Optional.')
        c.argument('e_tag', type=str, help='ETag for the item. Read-only.')
        c.argument('last_modified_date_time', help='Date and time the item was last modified. Read-only.')
        c.argument('name', type=str, help='The name of the item. Read-write.')
        c.argument('web_url', type=str, help='URL that displays the resource in the browser. Read-only.')
        c.argument('created_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory user '
                   'object. Expected value: json-string/@json-file.')
        c.argument('last_modified_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory '
                   'user object. Expected value: json-string/@json-file.')
        c.argument('parent_reference_drive_id', type=str, help='Unique identifier of the drive instance that contains '
                   'the item. Read-only.')
        c.argument('parent_reference_drive_type', type=str, help='Identifies the type of drive. See [drive][] resource '
                   'for values.')
        c.argument('parent_reference_id', type=str, help='Unique identifier of the item in the drive. Read-only.')
        c.argument('parent_reference_name', type=str, help='The name of the item being referenced. Read-only.')
        c.argument('parent_reference_path', type=str,
                   help='Path that can be used to navigate to the item. Read-only.')
        c.argument('parent_reference_share_id', type=str, help='A unique identifier for a shared resource that can be '
                   'accessed via the [Shares][] API.')
        c.argument('parent_reference_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('parent_reference_site_id', type=str, help='')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('microsoft_graph_identity_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('microsoft_graph_drive_type', type=str, help='Describes the type of drive represented by this '
                   'resource. OneDrive personal drives will return personal. OneDrive for Business will return '
                   'business. SharePoint document libraries will return documentLibrary. Read-only.')
        c.argument('share_point_ids', action=AddParentReferenceSharepointIds, nargs='*', help='sharepointIds')
        c.argument('system', type=validate_file_or_dict, help='systemFacet Expected value: json-string/@json-file.')
        c.argument('activities', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('bundles', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('following', type=validate_file_or_dict, help='The list of items the user is following. Only in '
                   'OneDrive for Business. Expected value: json-string/@json-file.')
        c.argument('items', type=validate_file_or_dict, help='All items contained in the drive. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('root', type=validate_file_or_dict, help='driveItem Expected value: json-string/@json-file.')
        c.argument('special', type=validate_file_or_dict, help='Collection of common folders available in OneDrive. '
                   'Read-only. Nullable. Expected value: json-string/@json-file.')
        c.argument('list_id', type=str, help='Read-only.')
        c.argument('list_created_date_time', help='Date and time of item creation. Read-only.')
        c.argument('list_description', type=str, help='Provides a user-visible description of the item. Optional.')
        c.argument('list_e_tag', type=str, help='ETag for the item. Read-only.')
        c.argument('list_last_modified_date_time', help='Date and time the item was last modified. Read-only.')
        c.argument('list_name', type=str, help='The name of the item. Read-write.')
        c.argument('list_web_url', type=str, help='URL that displays the resource in the browser. Read-only.')
        c.argument('list_created_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory user '
                   'object. Expected value: json-string/@json-file.')
        c.argument('list_last_modified_by_user', type=validate_file_or_dict, help='Represents an Azure Active '
                   'Directory user object. Expected value: json-string/@json-file.')
        c.argument('list_parent_reference_drive_id', type=str, help='Unique identifier of the drive instance that '
                   'contains the item. Read-only.')
        c.argument('list_parent_reference_drive_type', type=str, help='Identifies the type of drive. See [drive][] '
                   'resource for values.')
        c.argument('list_parent_reference_id', type=str,
                   help='Unique identifier of the item in the drive. Read-only.')
        c.argument('list_parent_reference_name', type=str, help='The name of the item being referenced. Read-only.')
        c.argument('list_parent_reference_path', type=str, help='Path that can be used to navigate to the item. '
                   'Read-only.')
        c.argument('list_parent_reference_share_id', type=str, help='A unique identifier for a shared resource that '
                   'can be accessed via the [Shares][] API.')
        c.argument('list_parent_reference_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('list_parent_reference_site_id', type=str, help='')
        c.argument('list_last_modified_by_application', action=AddLastModifiedByApplication, nargs='*',
                   help='identity')
        c.argument('list_last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('user1', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('list_created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('list_created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('user2', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('list_display_name', type=str, help='The displayable title of the list.')
        c.argument('list_list', action=AddListList, nargs='*', help='listInfo')
        c.argument('list_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help='sharepointIds')
        c.argument('list_system', type=validate_file_or_dict, help='systemFacet Expected value: '
                   'json-string/@json-file.')
        c.argument('list_activities', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('list_columns', type=validate_file_or_dict, help='The collection of field definitions for this '
                   'list. Expected value: json-string/@json-file.')
        c.argument('list_content_types', type=validate_file_or_dict, help='The collection of content types present in '
                   'this list. Expected value: json-string/@json-file.')
        c.argument('list_drive', type=validate_file_or_dict, help='drive Expected value: json-string/@json-file.')
        c.argument('list_items', type=validate_file_or_dict, help='All items contained in the list. Expected value: '
                   'json-string/@json-file.')
        c.argument('list_subscriptions', action=AddFilesDriveUpdateListSubscriptions, nargs='*', help='The set of '
                   'subscriptions on the list.')
        c.argument('quota_deleted', type=int, help='Total space consumed by files in the recycle bin, in bytes. '
                   'Read-only.')
        c.argument('quota_remaining', type=int, help='Total space remaining before reaching the quota limit, in bytes. '
                   'Read-only.')
        c.argument('quota_state', type=str, help='Enumeration value that indicates the state of the storage space. '
                   'Read-only.')
        c.argument('quota_storage_plan_information', action=AddQuotaStoragePlanInformation, nargs='*', help=''
                   'storagePlanInformation')
        c.argument('quota_total', type=int, help='Total allowed storage space, in bytes. Read-only.')
        c.argument('quota_used', type=int, help='Total space used, in bytes. Read-only.')
        c.argument('owner_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('owner_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('owner_user', action=AddLastModifiedByApplication, nargs='*', help='identity')

    with self.argument_context('files share-list update-item') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('list_item_id', type=str, help='key: id of listItem')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_date_time', help='Date and time of item creation. Read-only.')
        c.argument('description', type=str, help='Provides a user-visible description of the item. Optional.')
        c.argument('e_tag', type=str, help='ETag for the item. Read-only.')
        c.argument('last_modified_date_time', help='Date and time the item was last modified. Read-only.')
        c.argument('name', type=str, help='The name of the item. Read-write.')
        c.argument('web_url', type=str, help='URL that displays the resource in the browser. Read-only.')
        c.argument('created_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory user '
                   'object. Expected value: json-string/@json-file.')
        c.argument('last_modified_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory '
                   'user object. Expected value: json-string/@json-file.')
        c.argument('parent_reference_drive_id', type=str, help='Unique identifier of the drive instance that contains '
                   'the item. Read-only.')
        c.argument('parent_reference_drive_type', type=str, help='Identifies the type of drive. See [drive][] resource '
                   'for values.')
        c.argument('parent_reference_id', type=str, help='Unique identifier of the item in the drive. Read-only.')
        c.argument('parent_reference_name', type=str, help='The name of the item being referenced. Read-only.')
        c.argument('parent_reference_path', type=str,
                   help='Path that can be used to navigate to the item. Read-only.')
        c.argument('parent_reference_share_id', type=str, help='A unique identifier for a shared resource that can be '
                   'accessed via the [Shares][] API.')
        c.argument('parent_reference_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('parent_reference_site_id', type=str, help='')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('microsoft_graph_identity_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('content_type', action=AddContentType, nargs='*', help='contentTypeInfo')
        c.argument('microsoft_graph_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('activities', type=validate_file_or_dict, help='The list of recent activities that took place on '
                   'this item. Expected value: json-string/@json-file.')
        c.argument('analytics', type=validate_file_or_dict, help='itemAnalytics Expected value: '
                   'json-string/@json-file.')
        c.argument('drive_item', type=validate_file_or_dict, help='driveItem Expected value: json-string/@json-file.')
        c.argument('versions', action=AddDrivesActivitiesVersions, nargs='*', help='The list of previous versions of '
                   'the list item.')
        c.argument('fields_id', type=str, help='Read-only.')

    with self.argument_context('files share-list update-subscription') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('subscription_id', type=str, help='key: id of subscription', id_part='subscription')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('application_id', type=str, help='Identifier of the application used to create the subscription. '
                   'Read-only.')
        c.argument('change_type', type=str, help='Required. Indicates the type of change in the subscribed resource '
                   'that will raise a change notification. The supported values are: created, updated, deleted. '
                   'Multiple values can be combined using a comma-separated list.Note: Drive root item and list change '
                   'notifications support only the updated changeType. User and group change notifications support '
                   'updated and deleted changeType.')
        c.argument('client_state', type=str, help='Optional. Specifies the value of the clientState property sent by '
                   'the service in each change notification. The maximum length is 128 characters. The client can '
                   'check that the change notification came from the service by comparing the value of the clientState '
                   'property sent with the subscription with the value of the clientState property received with each '
                   'change notification.')
        c.argument('creator_id', type=str, help='Identifier of the user or service principal that created the '
                   'subscription. If the app used delegated permissions to create the subscription, this field '
                   'contains the id of the signed-in user the app called on behalf of. If the app used application '
                   'permissions, this field contains the id of the service principal corresponding to the app. '
                   'Read-only.')
        c.argument('encryption_certificate', type=str, help='A base64-encoded representation of a certificate with a '
                   'public key used to encrypt resource data in change notifications. Optional. Required when '
                   'includeResourceData is true.')
        c.argument('encryption_certificate_id', type=str, help='A custom app-provided identifier to help identify the '
                   'certificate needed to decrypt resource data. Optional.')
        c.argument('expiration_date_time', help='Required. Specifies the date and time when the webhook subscription '
                   'expires. The time is in UTC, and can be an amount of time from subscription creation that varies '
                   'for the resource subscribed to.  See the table below for maximum supported subscription length of '
                   'time.')
        c.argument('include_properties', arg_type=get_three_state_flag(), help='')
        c.argument('include_resource_data', arg_type=get_three_state_flag(), help='When set to true, change '
                   'notifications include resource data (such as content of a chat message). Optional.')
        c.argument('latest_supported_tls_version', type=str, help='Specifies the latest version of Transport Layer '
                   'Security (TLS) that the notification endpoint, specified by notificationUrl, supports. The '
                   'possible values are: v1_0, v1_1, v1_2, v1_3. For subscribers whose notification endpoint supports '
                   'a version lower than the currently recommended version (TLS 1.2), specifying this property by a '
                   'set timeline allows them to temporarily use their deprecated version of TLS before completing '
                   'their upgrade to TLS 1.2. For these subscribers, not setting this property per the timeline would '
                   'result in subscription operations failing. For subscribers whose notification endpoint already '
                   'supports TLS 1.2, setting this property is optional. In such cases, Microsoft Graph defaults the '
                   'property to v1_2.')
        c.argument('lifecycle_notification_url', type=str, help='The URL of the endpoint that receives lifecycle '
                   'notifications, including subscriptionRemoved and missed notifications. This URL must make use of '
                   'the HTTPS protocol. Optional. Read more about how Outlook resources use lifecycle notifications.')
        c.argument('notification_url', type=str, help='Required. The URL of the endpoint that will receive the change '
                   'notifications. This URL must make use of the HTTPS protocol.')
        c.argument('resource', type=str, help='Required. Specifies the resource that will be monitored for changes. Do '
                   'not include the base URL (https://graph.microsoft.com/v1.0/). See the possible resource path '
                   'values for each supported resource.')

    with self.argument_context('files share-list-activity delete') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('files share-list-activity get-drive-item') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files share-list-activity get-drive-item-content') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')

    with self.argument_context('files share-list-activity get-list-item') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files share-list-activity set-drive-item-content') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('data', help='New media content.')

    with self.argument_context('files share-list-activity update-drive-item') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_date_time', help='Date and time of item creation. Read-only.')
        c.argument('description', type=str, help='Provides a user-visible description of the item. Optional.')
        c.argument('e_tag', type=str, help='ETag for the item. Read-only.')
        c.argument('last_modified_date_time', help='Date and time the item was last modified. Read-only.')
        c.argument('name', type=str, help='The name of the item. Read-write.')
        c.argument('web_url', type=str, help='URL that displays the resource in the browser. Read-only.')
        c.argument('created_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory user '
                   'object. Expected value: json-string/@json-file.')
        c.argument('last_modified_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory '
                   'user object. Expected value: json-string/@json-file.')
        c.argument('parent_reference_drive_id', type=str, help='Unique identifier of the drive instance that contains '
                   'the item. Read-only.')
        c.argument('parent_reference_drive_type', type=str, help='Identifies the type of drive. See [drive][] resource '
                   'for values.')
        c.argument('parent_reference_id', type=str, help='Unique identifier of the item in the drive. Read-only.')
        c.argument('parent_reference_name', type=str, help='The name of the item being referenced. Read-only.')
        c.argument('parent_reference_path', type=str,
                   help='Path that can be used to navigate to the item. Read-only.')
        c.argument('parent_reference_share_id', type=str, help='A unique identifier for a shared resource that can be '
                   'accessed via the [Shares][] API.')
        c.argument('parent_reference_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('parent_reference_site_id', type=str, help='')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('microsoft_graph_identity_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('audio', action=AddAudio, nargs='*', help='audio')
        c.argument('content', help='The content stream, if the item represents a file.')
        c.argument('c_tag', type=str, help='An eTag for the content of the item. This eTag is not changed if only the '
                   'metadata is changed. Note This property is not returned if the item is a folder. Read-only.')
        c.argument('file_system_info', action=AddFileSystemInfo, nargs='*', help='fileSystemInfo')
        c.argument('image', action=AddImage, nargs='*', help='image')
        c.argument('location', arg_type=get_location_type(self.cli_ctx))
        c.argument('photo', action=AddPhoto, nargs='*', help='photo')
        c.argument('publication', action=AddPublication, nargs='*', help='publicationFacet')
        c.argument('root', type=validate_file_or_dict, help='root Expected value: json-string/@json-file.')
        c.argument('microsoft_graph_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('size', type=int, help='Size of the item in bytes. Read-only.')
        c.argument('video', action=AddVideo, nargs='*', help='video')
        c.argument('web_dav_url', type=str, help='WebDAV compatible URL for the item.')
        c.argument('activities', type=validate_file_or_dict, help='The list of recent activities that took place on '
                   'this item. Expected value: json-string/@json-file.')
        c.argument('analytics', type=validate_file_or_dict, help='itemAnalytics Expected value: '
                   'json-string/@json-file.')
        c.argument('children', type=validate_file_or_dict, help='Collection containing Item objects for the immediate '
                   'children of Item. Only items representing folders have children. Read-only. Nullable. Expected '
                   'value: json-string/@json-file.')
        c.argument('list_item', type=validate_file_or_dict, help='listItem Expected value: json-string/@json-file.')
        c.argument('permissions', type=validate_file_or_dict, help='The set of permissions for the item. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('subscriptions', action=AddFilesDriveCreateBundleSubscriptions, nargs='*', help='The set of '
                   'subscriptions on the item. Only supported on the root of a drive.')
        c.argument('thumbnails', type=validate_file_or_dict, help='Collection containing [ThumbnailSet][] objects '
                   'associated with the item. For more info, see [getting thumbnails][]. Read-only. Nullable. Expected '
                   'value: json-string/@json-file.')
        c.argument('versions', action=AddDrivesVersions, nargs='*', help='The list of previous versions of the item. '
                   'For more info, see [getting previous versions][]. Read-only. Nullable.')
        c.argument('workbook_id', type=str, help='Read-only.')
        c.argument('workbook_application', action=AddWorkbookApplication, nargs='*', help='workbookApplication')
        c.argument('workbook_comments', action=AddWorkbookComments, nargs='*', help='')
        c.argument('workbook_functions', action=AddWorkbookFunctions, nargs='*', help='workbookFunctions')
        c.argument('workbook_names', type=validate_file_or_dict, help='Represents a collection of workbook scoped '
                   'named items (named ranges and constants). Read-only. Expected value: json-string/@json-file.')
        c.argument('workbook_operations', type=validate_file_or_dict, help='The status of workbook operations. Getting '
                   'an operation collection is not supported, but you can get the status of a long-running operation '
                   'if the Location header is returned in the response. Read-only. Expected value: '
                   'json-string/@json-file.')
        c.argument('workbook_tables', type=validate_file_or_dict, help='Represents a collection of tables associated '
                   'with the workbook. Read-only. Expected value: json-string/@json-file.')
        c.argument('workbook_worksheets', type=validate_file_or_dict, help='Represents a collection of worksheets '
                   'associated with the workbook. Read-only. Expected value: json-string/@json-file.')
        c.argument('special_folder_name', type=str, help='The unique identifier for this item in the /drive/special '
                   'collection')
        c.argument('shared_owner', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('shared_scope', type=str, help='Indicates the scope of how the item is shared: anonymous, '
                   'organization, or users. Read-only.')
        c.argument('shared_shared_by', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('shared_shared_date_time', help='The UTC date and time when the item was shared. Read-only.')
        c.argument('search_result_on_click_telemetry_url', type=str, help='A callback URL that can be used to record '
                   'telemetry information. The application should issue a GET on this URL if the user interacts with '
                   'this item to improve the quality of results.')
        c.argument('remote_item_created_by', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_created_date_time', help='Date and time of item creation. Read-only.')
        c.argument('remote_item_file', type=validate_file_or_dict,
                   help='file Expected value: json-string/@json-file.')
        c.argument('remote_item_file_system_info', action=AddFileSystemInfo, nargs='*', help='fileSystemInfo')
        c.argument('remote_item_folder', type=validate_file_or_dict, help='folder Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_id', type=str, help='Unique identifier for the remote item in its drive. Read-only.')
        c.argument('remote_item_image', action=AddImage, nargs='*', help='image')
        c.argument('remote_item_last_modified_by', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_last_modified_date_time', help='Date and time the item was last modified. Read-only.')
        c.argument('remote_item_name', type=str, help='Optional. Filename of the remote item. Read-only.')
        c.argument('remote_item_package', action=AddRemoteItemPackage, nargs='*', help='package')
        c.argument('remote_item_parent_reference', type=validate_file_or_dict, help='itemReference Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_shared', type=validate_file_or_dict, help='shared Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('remote_item_size', type=int, help='Size of the remote item. Read-only.')
        c.argument('remote_item_special_folder', action=AddRemoteItemSpecialFolder, nargs='*', help='specialFolder')
        c.argument('remote_item_video', action=AddVideo, nargs='*', help='video')
        c.argument('remote_item_web_dav_url', type=str, help='DAV compatible URL for the item.')
        c.argument('remote_item_web_url', type=str, help='URL that displays the resource in the browser. Read-only.')
        c.argument('pending_operations_pending_content_update_queued_date_time', help='Date and time the pending '
                   'binary operation was queued in UTC time. Read-only.')
        c.argument('package_type', type=str, help='A string indicating the type of package. While oneNote is the only '
                   'currently defined value, you should expect other package types to be returned and handle them '
                   'accordingly.')
        c.argument('folder_child_count', type=int, help='Number of children contained immediately within this '
                   'container.')
        c.argument('folder_view', action=AddFolderView, nargs='*', help='folderView')
        c.argument('file_hashes', action=AddFileHashes, nargs='*', help='hashes')
        c.argument('file_mime_type', type=str, help='The MIME type for the file. This is determined by logic on the '
                   'server and might not be the value provided when the file was uploaded. Read-only.')
        c.argument('file_processing_metadata', arg_type=get_three_state_flag(), help='')
        c.argument('deleted_state', type=str, help='Represents the state of the deleted item.')
        c.argument('bundle_album', action=AddBundleAlbum, nargs='*', help='album')
        c.argument('bundle_child_count', type=int, help='')

    with self.argument_context('files share-list-activity update-list-item') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_date_time', help='Date and time of item creation. Read-only.')
        c.argument('description', type=str, help='Provides a user-visible description of the item. Optional.')
        c.argument('e_tag', type=str, help='ETag for the item. Read-only.')
        c.argument('last_modified_date_time', help='Date and time the item was last modified. Read-only.')
        c.argument('name', type=str, help='The name of the item. Read-write.')
        c.argument('web_url', type=str, help='URL that displays the resource in the browser. Read-only.')
        c.argument('created_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory user '
                   'object. Expected value: json-string/@json-file.')
        c.argument('last_modified_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory '
                   'user object. Expected value: json-string/@json-file.')
        c.argument('parent_reference_drive_id', type=str, help='Unique identifier of the drive instance that contains '
                   'the item. Read-only.')
        c.argument('parent_reference_drive_type', type=str, help='Identifies the type of drive. See [drive][] resource '
                   'for values.')
        c.argument('parent_reference_id', type=str, help='Unique identifier of the item in the drive. Read-only.')
        c.argument('parent_reference_name', type=str, help='The name of the item being referenced. Read-only.')
        c.argument('parent_reference_path', type=str,
                   help='Path that can be used to navigate to the item. Read-only.')
        c.argument('parent_reference_share_id', type=str, help='A unique identifier for a shared resource that can be '
                   'accessed via the [Shares][] API.')
        c.argument('parent_reference_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('parent_reference_site_id', type=str, help='')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('microsoft_graph_identity_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('content_type', action=AddContentType, nargs='*', help='contentTypeInfo')
        c.argument('microsoft_graph_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('activities', type=validate_file_or_dict, help='The list of recent activities that took place on '
                   'this item. Expected value: json-string/@json-file.')
        c.argument('analytics', type=validate_file_or_dict, help='itemAnalytics Expected value: '
                   'json-string/@json-file.')
        c.argument('drive_item', type=validate_file_or_dict, help='driveItem Expected value: json-string/@json-file.')
        c.argument('versions', action=AddDrivesActivitiesVersions, nargs='*', help='The list of previous versions of '
                   'the list item.')
        c.argument('fields_id', type=str, help='Read-only.')

    with self.argument_context('files share-list-activity-list-item delete') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('item_activity_old_id1', type=str, help='key: id of itemActivityOLD')
        c.argument('if_match', type=str, help='ETag')
        c.argument('list_item_version_id', type=str, help='key: id of listItemVersion')

    with self.argument_context('files share-list-activity-list-item create-activity') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('files share-list-activity-list-item create-link') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('type_', options_list=['--type'], type=str, help='')
        c.argument('scope', type=str, help='')
        c.argument('expiration_date_time', help='')
        c.argument('password', type=str, help='')
        c.argument('recipients', action=AddSharesListActivitiesListitemRecipients, nargs='*', help='')

    with self.argument_context('files share-list-activity-list-item create-version') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('last_modified_date_time', help='Date and time the version was last modified. Read-only.')
        c.argument('publication', action=AddPublication, nargs='*', help='publicationFacet')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('fields_id', type=str, help='Read-only.')

    with self.argument_context('files share-list-activity-list-item get-activity') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('item_activity_old_id1', type=str, help='key: id of itemActivityOLD')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files share-list-activity-list-item get-activity-by-interval') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('start_date_time', type=str, help='')
        c.argument('end_date_time', type=str, help='')
        c.argument('interval', type=str, help='')

    with self.argument_context('files share-list-activity-list-item get-analytic') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files share-list-activity-list-item get-drive-item') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files share-list-activity-list-item get-drive-item-content') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')

    with self.argument_context('files share-list-activity-list-item get-field') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files share-list-activity-list-item get-ref-analytic') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')

    with self.argument_context('files share-list-activity-list-item get-version') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('list_item_version_id', type=str, help='key: id of listItemVersion')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files share-list-activity-list-item list-activity') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files share-list-activity-list-item list-version') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files share-list-activity-list-item set-drive-item-content') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('data', help='New media content.')

    with self.argument_context('files share-list-activity-list-item set-ref-analytic') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('body', type=validate_file_or_dict, help='New navigation property ref values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('files share-list-activity-list-item update-activity') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('item_activity_old_id1', type=str, help='key: id of itemActivityOLD')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('files share-list-activity-list-item update-drive-item') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_date_time', help='Date and time of item creation. Read-only.')
        c.argument('description', type=str, help='Provides a user-visible description of the item. Optional.')
        c.argument('e_tag', type=str, help='ETag for the item. Read-only.')
        c.argument('last_modified_date_time', help='Date and time the item was last modified. Read-only.')
        c.argument('name', type=str, help='The name of the item. Read-write.')
        c.argument('web_url', type=str, help='URL that displays the resource in the browser. Read-only.')
        c.argument('created_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory user '
                   'object. Expected value: json-string/@json-file.')
        c.argument('last_modified_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory '
                   'user object. Expected value: json-string/@json-file.')
        c.argument('parent_reference_drive_id', type=str, help='Unique identifier of the drive instance that contains '
                   'the item. Read-only.')
        c.argument('parent_reference_drive_type', type=str, help='Identifies the type of drive. See [drive][] resource '
                   'for values.')
        c.argument('parent_reference_id', type=str, help='Unique identifier of the item in the drive. Read-only.')
        c.argument('parent_reference_name', type=str, help='The name of the item being referenced. Read-only.')
        c.argument('parent_reference_path', type=str,
                   help='Path that can be used to navigate to the item. Read-only.')
        c.argument('parent_reference_share_id', type=str, help='A unique identifier for a shared resource that can be '
                   'accessed via the [Shares][] API.')
        c.argument('parent_reference_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('parent_reference_site_id', type=str, help='')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('microsoft_graph_identity_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('audio', action=AddAudio, nargs='*', help='audio')
        c.argument('content', help='The content stream, if the item represents a file.')
        c.argument('c_tag', type=str, help='An eTag for the content of the item. This eTag is not changed if only the '
                   'metadata is changed. Note This property is not returned if the item is a folder. Read-only.')
        c.argument('file_system_info', action=AddFileSystemInfo, nargs='*', help='fileSystemInfo')
        c.argument('image', action=AddImage, nargs='*', help='image')
        c.argument('location', arg_type=get_location_type(self.cli_ctx))
        c.argument('photo', action=AddPhoto, nargs='*', help='photo')
        c.argument('publication', action=AddPublication, nargs='*', help='publicationFacet')
        c.argument('root', type=validate_file_or_dict, help='root Expected value: json-string/@json-file.')
        c.argument('microsoft_graph_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('size', type=int, help='Size of the item in bytes. Read-only.')
        c.argument('video', action=AddVideo, nargs='*', help='video')
        c.argument('web_dav_url', type=str, help='WebDAV compatible URL for the item.')
        c.argument('activities', type=validate_file_or_dict, help='The list of recent activities that took place on '
                   'this item. Expected value: json-string/@json-file.')
        c.argument('analytics', type=validate_file_or_dict, help='itemAnalytics Expected value: '
                   'json-string/@json-file.')
        c.argument('children', type=validate_file_or_dict, help='Collection containing Item objects for the immediate '
                   'children of Item. Only items representing folders have children. Read-only. Nullable. Expected '
                   'value: json-string/@json-file.')
        c.argument('list_item', type=validate_file_or_dict, help='listItem Expected value: json-string/@json-file.')
        c.argument('permissions', type=validate_file_or_dict, help='The set of permissions for the item. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('subscriptions', action=AddFilesDriveCreateBundleSubscriptions, nargs='*', help='The set of '
                   'subscriptions on the item. Only supported on the root of a drive.')
        c.argument('thumbnails', type=validate_file_or_dict, help='Collection containing [ThumbnailSet][] objects '
                   'associated with the item. For more info, see [getting thumbnails][]. Read-only. Nullable. Expected '
                   'value: json-string/@json-file.')
        c.argument('versions', action=AddDrivesVersions, nargs='*', help='The list of previous versions of the item. '
                   'For more info, see [getting previous versions][]. Read-only. Nullable.')
        c.argument('workbook_id', type=str, help='Read-only.')
        c.argument('workbook_application', action=AddWorkbookApplication, nargs='*', help='workbookApplication')
        c.argument('workbook_comments', action=AddWorkbookComments, nargs='*', help='')
        c.argument('workbook_functions', action=AddWorkbookFunctions, nargs='*', help='workbookFunctions')
        c.argument('workbook_names', type=validate_file_or_dict, help='Represents a collection of workbook scoped '
                   'named items (named ranges and constants). Read-only. Expected value: json-string/@json-file.')
        c.argument('workbook_operations', type=validate_file_or_dict, help='The status of workbook operations. Getting '
                   'an operation collection is not supported, but you can get the status of a long-running operation '
                   'if the Location header is returned in the response. Read-only. Expected value: '
                   'json-string/@json-file.')
        c.argument('workbook_tables', type=validate_file_or_dict, help='Represents a collection of tables associated '
                   'with the workbook. Read-only. Expected value: json-string/@json-file.')
        c.argument('workbook_worksheets', type=validate_file_or_dict, help='Represents a collection of worksheets '
                   'associated with the workbook. Read-only. Expected value: json-string/@json-file.')
        c.argument('special_folder_name', type=str, help='The unique identifier for this item in the /drive/special '
                   'collection')
        c.argument('shared_owner', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('shared_scope', type=str, help='Indicates the scope of how the item is shared: anonymous, '
                   'organization, or users. Read-only.')
        c.argument('shared_shared_by', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('shared_shared_date_time', help='The UTC date and time when the item was shared. Read-only.')
        c.argument('search_result_on_click_telemetry_url', type=str, help='A callback URL that can be used to record '
                   'telemetry information. The application should issue a GET on this URL if the user interacts with '
                   'this item to improve the quality of results.')
        c.argument('remote_item_created_by', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_created_date_time', help='Date and time of item creation. Read-only.')
        c.argument('remote_item_file', type=validate_file_or_dict,
                   help='file Expected value: json-string/@json-file.')
        c.argument('remote_item_file_system_info', action=AddFileSystemInfo, nargs='*', help='fileSystemInfo')
        c.argument('remote_item_folder', type=validate_file_or_dict, help='folder Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_id', type=str, help='Unique identifier for the remote item in its drive. Read-only.')
        c.argument('remote_item_image', action=AddImage, nargs='*', help='image')
        c.argument('remote_item_last_modified_by', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_last_modified_date_time', help='Date and time the item was last modified. Read-only.')
        c.argument('remote_item_name', type=str, help='Optional. Filename of the remote item. Read-only.')
        c.argument('remote_item_package', action=AddRemoteItemPackage, nargs='*', help='package')
        c.argument('remote_item_parent_reference', type=validate_file_or_dict, help='itemReference Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_shared', type=validate_file_or_dict, help='shared Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('remote_item_size', type=int, help='Size of the remote item. Read-only.')
        c.argument('remote_item_special_folder', action=AddRemoteItemSpecialFolder, nargs='*', help='specialFolder')
        c.argument('remote_item_video', action=AddVideo, nargs='*', help='video')
        c.argument('remote_item_web_dav_url', type=str, help='DAV compatible URL for the item.')
        c.argument('remote_item_web_url', type=str, help='URL that displays the resource in the browser. Read-only.')
        c.argument('pending_operations_pending_content_update_queued_date_time', help='Date and time the pending '
                   'binary operation was queued in UTC time. Read-only.')
        c.argument('package_type', type=str, help='A string indicating the type of package. While oneNote is the only '
                   'currently defined value, you should expect other package types to be returned and handle them '
                   'accordingly.')
        c.argument('folder_child_count', type=int, help='Number of children contained immediately within this '
                   'container.')
        c.argument('folder_view', action=AddFolderView, nargs='*', help='folderView')
        c.argument('file_hashes', action=AddFileHashes, nargs='*', help='hashes')
        c.argument('file_mime_type', type=str, help='The MIME type for the file. This is determined by logic on the '
                   'server and might not be the value provided when the file was uploaded. Read-only.')
        c.argument('file_processing_metadata', arg_type=get_three_state_flag(), help='')
        c.argument('deleted_state', type=str, help='Represents the state of the deleted item.')
        c.argument('bundle_album', action=AddBundleAlbum, nargs='*', help='album')
        c.argument('bundle_child_count', type=int, help='')

    with self.argument_context('files share-list-activity-list-item update-field') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')

    with self.argument_context('files share-list-activity-list-item update-version') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('list_item_version_id', type=str, help='key: id of listItemVersion')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('last_modified_date_time', help='Date and time the version was last modified. Read-only.')
        c.argument('publication', action=AddPublication, nargs='*', help='publicationFacet')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('fields_id', type=str, help='Read-only.')

    with self.argument_context('files share-list-activity-list-item-version delete') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('list_item_version_id', type=str, help='key: id of listItemVersion')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('files share-list-activity-list-item-version get-field') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('list_item_version_id', type=str, help='key: id of listItemVersion')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files share-list-activity-list-item-version restore-version') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('list_item_version_id', type=str, help='key: id of listItemVersion')

    with self.argument_context('files share-list-activity-list-item-version update-field') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('list_item_version_id', type=str, help='key: id of listItemVersion')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')

    with self.argument_context('files share-list-content-type delete') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('content_type_id', type=str, help='key: id of contentType')
        c.argument('column_link_id', type=str, help='key: id of columnLink')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('files share-list-content-type create-column-link') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('content_type_id', type=str, help='key: id of contentType')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('name', type=str, help='The name of the column  in this content type.')

    with self.argument_context('files share-list-content-type get-column-link') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('content_type_id', type=str, help='key: id of contentType')
        c.argument('column_link_id', type=str, help='key: id of columnLink')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files share-list-content-type list-column-link') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('content_type_id', type=str, help='key: id of contentType')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files share-list-content-type update-column-link') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('content_type_id', type=str, help='key: id of contentType')
        c.argument('column_link_id', type=str, help='key: id of columnLink')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('name', type=str, help='The name of the column  in this content type.')

    with self.argument_context('files share-list-item delete') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('list_item_id', type=str, help='key: id of listItem')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('if_match', type=str, help='ETag')
        c.argument('list_item_version_id', type=str, help='key: id of listItemVersion')

    with self.argument_context('files share-list-item create-activity') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('list_item_id', type=str, help='key: id of listItem')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('files share-list-item create-link') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('list_item_id', type=str, help='key: id of listItem')
        c.argument('type_', options_list=['--type'], type=str, help='')
        c.argument('scope', type=str, help='')
        c.argument('expiration_date_time', help='')
        c.argument('password', type=str, help='')
        c.argument('recipients', action=AddSharesListItemsRecipients, nargs='*', help='')

    with self.argument_context('files share-list-item create-version') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('list_item_id', type=str, help='key: id of listItem')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('last_modified_date_time', help='Date and time the version was last modified. Read-only.')
        c.argument('publication', action=AddPublication, nargs='*', help='publicationFacet')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('fields_id', type=str, help='Read-only.')

    with self.argument_context('files share-list-item get-activity') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('list_item_id', type=str, help='key: id of listItem')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files share-list-item get-activity-by-interval') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('list_item_id', type=str, help='key: id of listItem')
        c.argument('start_date_time', type=str, help='')
        c.argument('end_date_time', type=str, help='')
        c.argument('interval', type=str, help='')

    with self.argument_context('files share-list-item get-analytic') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('list_item_id', type=str, help='key: id of listItem')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files share-list-item get-drive-item') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('list_item_id', type=str, help='key: id of listItem')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files share-list-item get-drive-item-content') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('list_item_id', type=str, help='key: id of listItem')

    with self.argument_context('files share-list-item get-field') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('list_item_id', type=str, help='key: id of listItem')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files share-list-item get-ref-analytic') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('list_item_id', type=str, help='key: id of listItem')

    with self.argument_context('files share-list-item get-version') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('list_item_id', type=str, help='key: id of listItem')
        c.argument('list_item_version_id', type=str, help='key: id of listItemVersion')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files share-list-item list-activity') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('list_item_id', type=str, help='key: id of listItem')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files share-list-item list-version') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('list_item_id', type=str, help='key: id of listItem')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files share-list-item set-drive-item-content') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('list_item_id', type=str, help='key: id of listItem')
        c.argument('data', help='New media content.')

    with self.argument_context('files share-list-item set-ref-analytic') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('list_item_id', type=str, help='key: id of listItem')
        c.argument('body', type=validate_file_or_dict, help='New navigation property ref values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('files share-list-item update-activity') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('list_item_id', type=str, help='key: id of listItem')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('files share-list-item update-drive-item') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('list_item_id', type=str, help='key: id of listItem')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_date_time', help='Date and time of item creation. Read-only.')
        c.argument('description', type=str, help='Provides a user-visible description of the item. Optional.')
        c.argument('e_tag', type=str, help='ETag for the item. Read-only.')
        c.argument('last_modified_date_time', help='Date and time the item was last modified. Read-only.')
        c.argument('name', type=str, help='The name of the item. Read-write.')
        c.argument('web_url', type=str, help='URL that displays the resource in the browser. Read-only.')
        c.argument('created_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory user '
                   'object. Expected value: json-string/@json-file.')
        c.argument('last_modified_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory '
                   'user object. Expected value: json-string/@json-file.')
        c.argument('parent_reference_drive_id', type=str, help='Unique identifier of the drive instance that contains '
                   'the item. Read-only.')
        c.argument('parent_reference_drive_type', type=str, help='Identifies the type of drive. See [drive][] resource '
                   'for values.')
        c.argument('parent_reference_id', type=str, help='Unique identifier of the item in the drive. Read-only.')
        c.argument('parent_reference_name', type=str, help='The name of the item being referenced. Read-only.')
        c.argument('parent_reference_path', type=str,
                   help='Path that can be used to navigate to the item. Read-only.')
        c.argument('parent_reference_share_id', type=str, help='A unique identifier for a shared resource that can be '
                   'accessed via the [Shares][] API.')
        c.argument('parent_reference_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('parent_reference_site_id', type=str, help='')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('microsoft_graph_identity_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('audio', action=AddAudio, nargs='*', help='audio')
        c.argument('content', help='The content stream, if the item represents a file.')
        c.argument('c_tag', type=str, help='An eTag for the content of the item. This eTag is not changed if only the '
                   'metadata is changed. Note This property is not returned if the item is a folder. Read-only.')
        c.argument('file_system_info', action=AddFileSystemInfo, nargs='*', help='fileSystemInfo')
        c.argument('image', action=AddImage, nargs='*', help='image')
        c.argument('location', arg_type=get_location_type(self.cli_ctx))
        c.argument('photo', action=AddPhoto, nargs='*', help='photo')
        c.argument('publication', action=AddPublication, nargs='*', help='publicationFacet')
        c.argument('root', type=validate_file_or_dict, help='root Expected value: json-string/@json-file.')
        c.argument('microsoft_graph_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('size', type=int, help='Size of the item in bytes. Read-only.')
        c.argument('video', action=AddVideo, nargs='*', help='video')
        c.argument('web_dav_url', type=str, help='WebDAV compatible URL for the item.')
        c.argument('activities', type=validate_file_or_dict, help='The list of recent activities that took place on '
                   'this item. Expected value: json-string/@json-file.')
        c.argument('analytics', type=validate_file_or_dict, help='itemAnalytics Expected value: '
                   'json-string/@json-file.')
        c.argument('children', type=validate_file_or_dict, help='Collection containing Item objects for the immediate '
                   'children of Item. Only items representing folders have children. Read-only. Nullable. Expected '
                   'value: json-string/@json-file.')
        c.argument('list_item', type=validate_file_or_dict, help='listItem Expected value: json-string/@json-file.')
        c.argument('permissions', type=validate_file_or_dict, help='The set of permissions for the item. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('subscriptions', action=AddFilesDriveCreateBundleSubscriptions, nargs='*', help='The set of '
                   'subscriptions on the item. Only supported on the root of a drive.')
        c.argument('thumbnails', type=validate_file_or_dict, help='Collection containing [ThumbnailSet][] objects '
                   'associated with the item. For more info, see [getting thumbnails][]. Read-only. Nullable. Expected '
                   'value: json-string/@json-file.')
        c.argument('versions', action=AddDrivesVersions, nargs='*', help='The list of previous versions of the item. '
                   'For more info, see [getting previous versions][]. Read-only. Nullable.')
        c.argument('workbook_id', type=str, help='Read-only.')
        c.argument('workbook_application', action=AddWorkbookApplication, nargs='*', help='workbookApplication')
        c.argument('workbook_comments', action=AddWorkbookComments, nargs='*', help='')
        c.argument('workbook_functions', action=AddWorkbookFunctions, nargs='*', help='workbookFunctions')
        c.argument('workbook_names', type=validate_file_or_dict, help='Represents a collection of workbook scoped '
                   'named items (named ranges and constants). Read-only. Expected value: json-string/@json-file.')
        c.argument('workbook_operations', type=validate_file_or_dict, help='The status of workbook operations. Getting '
                   'an operation collection is not supported, but you can get the status of a long-running operation '
                   'if the Location header is returned in the response. Read-only. Expected value: '
                   'json-string/@json-file.')
        c.argument('workbook_tables', type=validate_file_or_dict, help='Represents a collection of tables associated '
                   'with the workbook. Read-only. Expected value: json-string/@json-file.')
        c.argument('workbook_worksheets', type=validate_file_or_dict, help='Represents a collection of worksheets '
                   'associated with the workbook. Read-only. Expected value: json-string/@json-file.')
        c.argument('special_folder_name', type=str, help='The unique identifier for this item in the /drive/special '
                   'collection')
        c.argument('shared_owner', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('shared_scope', type=str, help='Indicates the scope of how the item is shared: anonymous, '
                   'organization, or users. Read-only.')
        c.argument('shared_shared_by', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('shared_shared_date_time', help='The UTC date and time when the item was shared. Read-only.')
        c.argument('search_result_on_click_telemetry_url', type=str, help='A callback URL that can be used to record '
                   'telemetry information. The application should issue a GET on this URL if the user interacts with '
                   'this item to improve the quality of results.')
        c.argument('remote_item_created_by', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_created_date_time', help='Date and time of item creation. Read-only.')
        c.argument('remote_item_file', type=validate_file_or_dict,
                   help='file Expected value: json-string/@json-file.')
        c.argument('remote_item_file_system_info', action=AddFileSystemInfo, nargs='*', help='fileSystemInfo')
        c.argument('remote_item_folder', type=validate_file_or_dict, help='folder Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_id', type=str, help='Unique identifier for the remote item in its drive. Read-only.')
        c.argument('remote_item_image', action=AddImage, nargs='*', help='image')
        c.argument('remote_item_last_modified_by', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_last_modified_date_time', help='Date and time the item was last modified. Read-only.')
        c.argument('remote_item_name', type=str, help='Optional. Filename of the remote item. Read-only.')
        c.argument('remote_item_package', action=AddRemoteItemPackage, nargs='*', help='package')
        c.argument('remote_item_parent_reference', type=validate_file_or_dict, help='itemReference Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_shared', type=validate_file_or_dict, help='shared Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('remote_item_size', type=int, help='Size of the remote item. Read-only.')
        c.argument('remote_item_special_folder', action=AddRemoteItemSpecialFolder, nargs='*', help='specialFolder')
        c.argument('remote_item_video', action=AddVideo, nargs='*', help='video')
        c.argument('remote_item_web_dav_url', type=str, help='DAV compatible URL for the item.')
        c.argument('remote_item_web_url', type=str, help='URL that displays the resource in the browser. Read-only.')
        c.argument('pending_operations_pending_content_update_queued_date_time', help='Date and time the pending '
                   'binary operation was queued in UTC time. Read-only.')
        c.argument('package_type', type=str, help='A string indicating the type of package. While oneNote is the only '
                   'currently defined value, you should expect other package types to be returned and handle them '
                   'accordingly.')
        c.argument('folder_child_count', type=int, help='Number of children contained immediately within this '
                   'container.')
        c.argument('folder_view', action=AddFolderView, nargs='*', help='folderView')
        c.argument('file_hashes', action=AddFileHashes, nargs='*', help='hashes')
        c.argument('file_mime_type', type=str, help='The MIME type for the file. This is determined by logic on the '
                   'server and might not be the value provided when the file was uploaded. Read-only.')
        c.argument('file_processing_metadata', arg_type=get_three_state_flag(), help='')
        c.argument('deleted_state', type=str, help='Represents the state of the deleted item.')
        c.argument('bundle_album', action=AddBundleAlbum, nargs='*', help='album')
        c.argument('bundle_child_count', type=int, help='')

    with self.argument_context('files share-list-item update-field') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('list_item_id', type=str, help='key: id of listItem')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')

    with self.argument_context('files share-list-item update-version') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('list_item_id', type=str, help='key: id of listItem')
        c.argument('list_item_version_id', type=str, help='key: id of listItemVersion')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('last_modified_date_time', help='Date and time the version was last modified. Read-only.')
        c.argument('publication', action=AddPublication, nargs='*', help='publicationFacet')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('fields_id', type=str, help='Read-only.')

    with self.argument_context('files share-list-item-activity delete') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('list_item_id', type=str, help='key: id of listItem')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('files share-list-item-activity get-drive-item') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('list_item_id', type=str, help='key: id of listItem')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files share-list-item-activity get-drive-item-content') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('list_item_id', type=str, help='key: id of listItem')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')

    with self.argument_context('files share-list-item-activity get-list-item') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('list_item_id', type=str, help='key: id of listItem')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files share-list-item-activity set-drive-item-content') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('list_item_id', type=str, help='key: id of listItem')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('data', help='New media content.')

    with self.argument_context('files share-list-item-activity update-drive-item') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('list_item_id', type=str, help='key: id of listItem')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_date_time', help='Date and time of item creation. Read-only.')
        c.argument('description', type=str, help='Provides a user-visible description of the item. Optional.')
        c.argument('e_tag', type=str, help='ETag for the item. Read-only.')
        c.argument('last_modified_date_time', help='Date and time the item was last modified. Read-only.')
        c.argument('name', type=str, help='The name of the item. Read-write.')
        c.argument('web_url', type=str, help='URL that displays the resource in the browser. Read-only.')
        c.argument('created_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory user '
                   'object. Expected value: json-string/@json-file.')
        c.argument('last_modified_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory '
                   'user object. Expected value: json-string/@json-file.')
        c.argument('parent_reference_drive_id', type=str, help='Unique identifier of the drive instance that contains '
                   'the item. Read-only.')
        c.argument('parent_reference_drive_type', type=str, help='Identifies the type of drive. See [drive][] resource '
                   'for values.')
        c.argument('parent_reference_id', type=str, help='Unique identifier of the item in the drive. Read-only.')
        c.argument('parent_reference_name', type=str, help='The name of the item being referenced. Read-only.')
        c.argument('parent_reference_path', type=str,
                   help='Path that can be used to navigate to the item. Read-only.')
        c.argument('parent_reference_share_id', type=str, help='A unique identifier for a shared resource that can be '
                   'accessed via the [Shares][] API.')
        c.argument('parent_reference_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('parent_reference_site_id', type=str, help='')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('microsoft_graph_identity_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('audio', action=AddAudio, nargs='*', help='audio')
        c.argument('content', help='The content stream, if the item represents a file.')
        c.argument('c_tag', type=str, help='An eTag for the content of the item. This eTag is not changed if only the '
                   'metadata is changed. Note This property is not returned if the item is a folder. Read-only.')
        c.argument('file_system_info', action=AddFileSystemInfo, nargs='*', help='fileSystemInfo')
        c.argument('image', action=AddImage, nargs='*', help='image')
        c.argument('location', arg_type=get_location_type(self.cli_ctx))
        c.argument('photo', action=AddPhoto, nargs='*', help='photo')
        c.argument('publication', action=AddPublication, nargs='*', help='publicationFacet')
        c.argument('root', type=validate_file_or_dict, help='root Expected value: json-string/@json-file.')
        c.argument('microsoft_graph_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('size', type=int, help='Size of the item in bytes. Read-only.')
        c.argument('video', action=AddVideo, nargs='*', help='video')
        c.argument('web_dav_url', type=str, help='WebDAV compatible URL for the item.')
        c.argument('activities', type=validate_file_or_dict, help='The list of recent activities that took place on '
                   'this item. Expected value: json-string/@json-file.')
        c.argument('analytics', type=validate_file_or_dict, help='itemAnalytics Expected value: '
                   'json-string/@json-file.')
        c.argument('children', type=validate_file_or_dict, help='Collection containing Item objects for the immediate '
                   'children of Item. Only items representing folders have children. Read-only. Nullable. Expected '
                   'value: json-string/@json-file.')
        c.argument('list_item', type=validate_file_or_dict, help='listItem Expected value: json-string/@json-file.')
        c.argument('permissions', type=validate_file_or_dict, help='The set of permissions for the item. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('subscriptions', action=AddFilesDriveCreateBundleSubscriptions, nargs='*', help='The set of '
                   'subscriptions on the item. Only supported on the root of a drive.')
        c.argument('thumbnails', type=validate_file_or_dict, help='Collection containing [ThumbnailSet][] objects '
                   'associated with the item. For more info, see [getting thumbnails][]. Read-only. Nullable. Expected '
                   'value: json-string/@json-file.')
        c.argument('versions', action=AddDrivesVersions, nargs='*', help='The list of previous versions of the item. '
                   'For more info, see [getting previous versions][]. Read-only. Nullable.')
        c.argument('workbook_id', type=str, help='Read-only.')
        c.argument('workbook_application', action=AddWorkbookApplication, nargs='*', help='workbookApplication')
        c.argument('workbook_comments', action=AddWorkbookComments, nargs='*', help='')
        c.argument('workbook_functions', action=AddWorkbookFunctions, nargs='*', help='workbookFunctions')
        c.argument('workbook_names', type=validate_file_or_dict, help='Represents a collection of workbook scoped '
                   'named items (named ranges and constants). Read-only. Expected value: json-string/@json-file.')
        c.argument('workbook_operations', type=validate_file_or_dict, help='The status of workbook operations. Getting '
                   'an operation collection is not supported, but you can get the status of a long-running operation '
                   'if the Location header is returned in the response. Read-only. Expected value: '
                   'json-string/@json-file.')
        c.argument('workbook_tables', type=validate_file_or_dict, help='Represents a collection of tables associated '
                   'with the workbook. Read-only. Expected value: json-string/@json-file.')
        c.argument('workbook_worksheets', type=validate_file_or_dict, help='Represents a collection of worksheets '
                   'associated with the workbook. Read-only. Expected value: json-string/@json-file.')
        c.argument('special_folder_name', type=str, help='The unique identifier for this item in the /drive/special '
                   'collection')
        c.argument('shared_owner', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('shared_scope', type=str, help='Indicates the scope of how the item is shared: anonymous, '
                   'organization, or users. Read-only.')
        c.argument('shared_shared_by', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('shared_shared_date_time', help='The UTC date and time when the item was shared. Read-only.')
        c.argument('search_result_on_click_telemetry_url', type=str, help='A callback URL that can be used to record '
                   'telemetry information. The application should issue a GET on this URL if the user interacts with '
                   'this item to improve the quality of results.')
        c.argument('remote_item_created_by', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_created_date_time', help='Date and time of item creation. Read-only.')
        c.argument('remote_item_file', type=validate_file_or_dict,
                   help='file Expected value: json-string/@json-file.')
        c.argument('remote_item_file_system_info', action=AddFileSystemInfo, nargs='*', help='fileSystemInfo')
        c.argument('remote_item_folder', type=validate_file_or_dict, help='folder Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_id', type=str, help='Unique identifier for the remote item in its drive. Read-only.')
        c.argument('remote_item_image', action=AddImage, nargs='*', help='image')
        c.argument('remote_item_last_modified_by', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_last_modified_date_time', help='Date and time the item was last modified. Read-only.')
        c.argument('remote_item_name', type=str, help='Optional. Filename of the remote item. Read-only.')
        c.argument('remote_item_package', action=AddRemoteItemPackage, nargs='*', help='package')
        c.argument('remote_item_parent_reference', type=validate_file_or_dict, help='itemReference Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_shared', type=validate_file_or_dict, help='shared Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('remote_item_size', type=int, help='Size of the remote item. Read-only.')
        c.argument('remote_item_special_folder', action=AddRemoteItemSpecialFolder, nargs='*', help='specialFolder')
        c.argument('remote_item_video', action=AddVideo, nargs='*', help='video')
        c.argument('remote_item_web_dav_url', type=str, help='DAV compatible URL for the item.')
        c.argument('remote_item_web_url', type=str, help='URL that displays the resource in the browser. Read-only.')
        c.argument('pending_operations_pending_content_update_queued_date_time', help='Date and time the pending '
                   'binary operation was queued in UTC time. Read-only.')
        c.argument('package_type', type=str, help='A string indicating the type of package. While oneNote is the only '
                   'currently defined value, you should expect other package types to be returned and handle them '
                   'accordingly.')
        c.argument('folder_child_count', type=int, help='Number of children contained immediately within this '
                   'container.')
        c.argument('folder_view', action=AddFolderView, nargs='*', help='folderView')
        c.argument('file_hashes', action=AddFileHashes, nargs='*', help='hashes')
        c.argument('file_mime_type', type=str, help='The MIME type for the file. This is determined by logic on the '
                   'server and might not be the value provided when the file was uploaded. Read-only.')
        c.argument('file_processing_metadata', arg_type=get_three_state_flag(), help='')
        c.argument('deleted_state', type=str, help='Represents the state of the deleted item.')
        c.argument('bundle_album', action=AddBundleAlbum, nargs='*', help='album')
        c.argument('bundle_child_count', type=int, help='')

    with self.argument_context('files share-list-item-activity update-list-item') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('list_item_id', type=str, help='key: id of listItem')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_date_time', help='Date and time of item creation. Read-only.')
        c.argument('description', type=str, help='Provides a user-visible description of the item. Optional.')
        c.argument('e_tag', type=str, help='ETag for the item. Read-only.')
        c.argument('last_modified_date_time', help='Date and time the item was last modified. Read-only.')
        c.argument('name', type=str, help='The name of the item. Read-write.')
        c.argument('web_url', type=str, help='URL that displays the resource in the browser. Read-only.')
        c.argument('created_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory user '
                   'object. Expected value: json-string/@json-file.')
        c.argument('last_modified_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory '
                   'user object. Expected value: json-string/@json-file.')
        c.argument('parent_reference_drive_id', type=str, help='Unique identifier of the drive instance that contains '
                   'the item. Read-only.')
        c.argument('parent_reference_drive_type', type=str, help='Identifies the type of drive. See [drive][] resource '
                   'for values.')
        c.argument('parent_reference_id', type=str, help='Unique identifier of the item in the drive. Read-only.')
        c.argument('parent_reference_name', type=str, help='The name of the item being referenced. Read-only.')
        c.argument('parent_reference_path', type=str,
                   help='Path that can be used to navigate to the item. Read-only.')
        c.argument('parent_reference_share_id', type=str, help='A unique identifier for a shared resource that can be '
                   'accessed via the [Shares][] API.')
        c.argument('parent_reference_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('parent_reference_site_id', type=str, help='')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('microsoft_graph_identity_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('content_type', action=AddContentType, nargs='*', help='contentTypeInfo')
        c.argument('microsoft_graph_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('activities', type=validate_file_or_dict, help='The list of recent activities that took place on '
                   'this item. Expected value: json-string/@json-file.')
        c.argument('analytics', type=validate_file_or_dict, help='itemAnalytics Expected value: '
                   'json-string/@json-file.')
        c.argument('drive_item', type=validate_file_or_dict, help='driveItem Expected value: json-string/@json-file.')
        c.argument('versions', action=AddDrivesActivitiesVersions, nargs='*', help='The list of previous versions of '
                   'the list item.')
        c.argument('fields_id', type=str, help='Read-only.')

    with self.argument_context('files share-list-item-activity-list-item create-link') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('list_item_id', type=str, help='key: id of listItem')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('type_', options_list=['--type'], type=str, help='')
        c.argument('scope', type=str, help='')
        c.argument('expiration_date_time', help='')
        c.argument('password', type=str, help='')
        c.argument('recipients', action=AddSharesListItemsActivitiesListitemRecipients, nargs='*', help='')

    with self.argument_context('files share-list-item-activity-list-item get-activity-by-interval') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('list_item_id', type=str, help='key: id of listItem')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('start_date_time', type=str, help='')
        c.argument('end_date_time', type=str, help='')
        c.argument('interval', type=str, help='')

    with self.argument_context('files share-list-item-version delete') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('list_item_id', type=str, help='key: id of listItem')
        c.argument('list_item_version_id', type=str, help='key: id of listItemVersion')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('files share-list-item-version get-field') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('list_item_id', type=str, help='key: id of listItem')
        c.argument('list_item_version_id', type=str, help='key: id of listItemVersion')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files share-list-item-version restore-version') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('list_item_id', type=str, help='key: id of listItem')
        c.argument('list_item_version_id', type=str, help='key: id of listItemVersion')

    with self.argument_context('files share-list-item-version update-field') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('list_item_id', type=str, help='key: id of listItem')
        c.argument('list_item_version_id', type=str, help='key: id of listItemVersion')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')

    with self.argument_context('files share-list-item delete') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('if_match', type=str, help='ETag')
        c.argument('list_item_version_id', type=str, help='key: id of listItemVersion')

    with self.argument_context('files share-list-item create-activity') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('files share-list-item create-link') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('type_', options_list=['--type'], type=str, help='')
        c.argument('scope', type=str, help='')
        c.argument('expiration_date_time', help='')
        c.argument('password', type=str, help='')
        c.argument('recipients', action=AddSharesListitemRecipients, nargs='*', help='')

    with self.argument_context('files share-list-item create-version') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('last_modified_date_time', help='Date and time the version was last modified. Read-only.')
        c.argument('publication', action=AddPublication, nargs='*', help='publicationFacet')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('fields_id', type=str, help='Read-only.')

    with self.argument_context('files share-list-item get-activity') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files share-list-item get-activity-by-interval') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('start_date_time', type=str, help='')
        c.argument('end_date_time', type=str, help='')
        c.argument('interval', type=str, help='')

    with self.argument_context('files share-list-item get-analytic') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files share-list-item get-drive-item') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files share-list-item get-drive-item-content') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')

    with self.argument_context('files share-list-item get-field') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files share-list-item get-ref-analytic') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')

    with self.argument_context('files share-list-item get-version') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('list_item_version_id', type=str, help='key: id of listItemVersion')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files share-list-item list-activity') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files share-list-item list-version') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files share-list-item set-drive-item-content') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('data', help='New media content.')

    with self.argument_context('files share-list-item set-ref-analytic') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('body', type=validate_file_or_dict, help='New navigation property ref values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('files share-list-item update-activity') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('files share-list-item update-drive-item') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_date_time', help='Date and time of item creation. Read-only.')
        c.argument('description', type=str, help='Provides a user-visible description of the item. Optional.')
        c.argument('e_tag', type=str, help='ETag for the item. Read-only.')
        c.argument('last_modified_date_time', help='Date and time the item was last modified. Read-only.')
        c.argument('name', type=str, help='The name of the item. Read-write.')
        c.argument('web_url', type=str, help='URL that displays the resource in the browser. Read-only.')
        c.argument('created_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory user '
                   'object. Expected value: json-string/@json-file.')
        c.argument('last_modified_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory '
                   'user object. Expected value: json-string/@json-file.')
        c.argument('parent_reference_drive_id', type=str, help='Unique identifier of the drive instance that contains '
                   'the item. Read-only.')
        c.argument('parent_reference_drive_type', type=str, help='Identifies the type of drive. See [drive][] resource '
                   'for values.')
        c.argument('parent_reference_id', type=str, help='Unique identifier of the item in the drive. Read-only.')
        c.argument('parent_reference_name', type=str, help='The name of the item being referenced. Read-only.')
        c.argument('parent_reference_path', type=str,
                   help='Path that can be used to navigate to the item. Read-only.')
        c.argument('parent_reference_share_id', type=str, help='A unique identifier for a shared resource that can be '
                   'accessed via the [Shares][] API.')
        c.argument('parent_reference_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('parent_reference_site_id', type=str, help='')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('microsoft_graph_identity_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('audio', action=AddAudio, nargs='*', help='audio')
        c.argument('content', help='The content stream, if the item represents a file.')
        c.argument('c_tag', type=str, help='An eTag for the content of the item. This eTag is not changed if only the '
                   'metadata is changed. Note This property is not returned if the item is a folder. Read-only.')
        c.argument('file_system_info', action=AddFileSystemInfo, nargs='*', help='fileSystemInfo')
        c.argument('image', action=AddImage, nargs='*', help='image')
        c.argument('location', arg_type=get_location_type(self.cli_ctx))
        c.argument('photo', action=AddPhoto, nargs='*', help='photo')
        c.argument('publication', action=AddPublication, nargs='*', help='publicationFacet')
        c.argument('root', type=validate_file_or_dict, help='root Expected value: json-string/@json-file.')
        c.argument('microsoft_graph_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('size', type=int, help='Size of the item in bytes. Read-only.')
        c.argument('video', action=AddVideo, nargs='*', help='video')
        c.argument('web_dav_url', type=str, help='WebDAV compatible URL for the item.')
        c.argument('activities', type=validate_file_or_dict, help='The list of recent activities that took place on '
                   'this item. Expected value: json-string/@json-file.')
        c.argument('analytics', type=validate_file_or_dict, help='itemAnalytics Expected value: '
                   'json-string/@json-file.')
        c.argument('children', type=validate_file_or_dict, help='Collection containing Item objects for the immediate '
                   'children of Item. Only items representing folders have children. Read-only. Nullable. Expected '
                   'value: json-string/@json-file.')
        c.argument('list_item', type=validate_file_or_dict, help='listItem Expected value: json-string/@json-file.')
        c.argument('permissions', type=validate_file_or_dict, help='The set of permissions for the item. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('subscriptions', action=AddFilesDriveCreateBundleSubscriptions, nargs='*', help='The set of '
                   'subscriptions on the item. Only supported on the root of a drive.')
        c.argument('thumbnails', type=validate_file_or_dict, help='Collection containing [ThumbnailSet][] objects '
                   'associated with the item. For more info, see [getting thumbnails][]. Read-only. Nullable. Expected '
                   'value: json-string/@json-file.')
        c.argument('versions', action=AddDrivesVersions, nargs='*', help='The list of previous versions of the item. '
                   'For more info, see [getting previous versions][]. Read-only. Nullable.')
        c.argument('workbook_id', type=str, help='Read-only.')
        c.argument('workbook_application', action=AddWorkbookApplication, nargs='*', help='workbookApplication')
        c.argument('workbook_comments', action=AddWorkbookComments, nargs='*', help='')
        c.argument('workbook_functions', action=AddWorkbookFunctions, nargs='*', help='workbookFunctions')
        c.argument('workbook_names', type=validate_file_or_dict, help='Represents a collection of workbook scoped '
                   'named items (named ranges and constants). Read-only. Expected value: json-string/@json-file.')
        c.argument('workbook_operations', type=validate_file_or_dict, help='The status of workbook operations. Getting '
                   'an operation collection is not supported, but you can get the status of a long-running operation '
                   'if the Location header is returned in the response. Read-only. Expected value: '
                   'json-string/@json-file.')
        c.argument('workbook_tables', type=validate_file_or_dict, help='Represents a collection of tables associated '
                   'with the workbook. Read-only. Expected value: json-string/@json-file.')
        c.argument('workbook_worksheets', type=validate_file_or_dict, help='Represents a collection of worksheets '
                   'associated with the workbook. Read-only. Expected value: json-string/@json-file.')
        c.argument('special_folder_name', type=str, help='The unique identifier for this item in the /drive/special '
                   'collection')
        c.argument('shared_owner', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('shared_scope', type=str, help='Indicates the scope of how the item is shared: anonymous, '
                   'organization, or users. Read-only.')
        c.argument('shared_shared_by', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('shared_shared_date_time', help='The UTC date and time when the item was shared. Read-only.')
        c.argument('search_result_on_click_telemetry_url', type=str, help='A callback URL that can be used to record '
                   'telemetry information. The application should issue a GET on this URL if the user interacts with '
                   'this item to improve the quality of results.')
        c.argument('remote_item_created_by', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_created_date_time', help='Date and time of item creation. Read-only.')
        c.argument('remote_item_file', type=validate_file_or_dict,
                   help='file Expected value: json-string/@json-file.')
        c.argument('remote_item_file_system_info', action=AddFileSystemInfo, nargs='*', help='fileSystemInfo')
        c.argument('remote_item_folder', type=validate_file_or_dict, help='folder Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_id', type=str, help='Unique identifier for the remote item in its drive. Read-only.')
        c.argument('remote_item_image', action=AddImage, nargs='*', help='image')
        c.argument('remote_item_last_modified_by', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_last_modified_date_time', help='Date and time the item was last modified. Read-only.')
        c.argument('remote_item_name', type=str, help='Optional. Filename of the remote item. Read-only.')
        c.argument('remote_item_package', action=AddRemoteItemPackage, nargs='*', help='package')
        c.argument('remote_item_parent_reference', type=validate_file_or_dict, help='itemReference Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_shared', type=validate_file_or_dict, help='shared Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('remote_item_size', type=int, help='Size of the remote item. Read-only.')
        c.argument('remote_item_special_folder', action=AddRemoteItemSpecialFolder, nargs='*', help='specialFolder')
        c.argument('remote_item_video', action=AddVideo, nargs='*', help='video')
        c.argument('remote_item_web_dav_url', type=str, help='DAV compatible URL for the item.')
        c.argument('remote_item_web_url', type=str, help='URL that displays the resource in the browser. Read-only.')
        c.argument('pending_operations_pending_content_update_queued_date_time', help='Date and time the pending '
                   'binary operation was queued in UTC time. Read-only.')
        c.argument('package_type', type=str, help='A string indicating the type of package. While oneNote is the only '
                   'currently defined value, you should expect other package types to be returned and handle them '
                   'accordingly.')
        c.argument('folder_child_count', type=int, help='Number of children contained immediately within this '
                   'container.')
        c.argument('folder_view', action=AddFolderView, nargs='*', help='folderView')
        c.argument('file_hashes', action=AddFileHashes, nargs='*', help='hashes')
        c.argument('file_mime_type', type=str, help='The MIME type for the file. This is determined by logic on the '
                   'server and might not be the value provided when the file was uploaded. Read-only.')
        c.argument('file_processing_metadata', arg_type=get_three_state_flag(), help='')
        c.argument('deleted_state', type=str, help='Represents the state of the deleted item.')
        c.argument('bundle_album', action=AddBundleAlbum, nargs='*', help='album')
        c.argument('bundle_child_count', type=int, help='')

    with self.argument_context('files share-list-item update-field') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')

    with self.argument_context('files share-list-item update-version') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('list_item_version_id', type=str, help='key: id of listItemVersion')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('last_modified_date_time', help='Date and time the version was last modified. Read-only.')
        c.argument('publication', action=AddPublication, nargs='*', help='publicationFacet')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('fields_id', type=str, help='Read-only.')

    with self.argument_context('files share-list-item-activity delete') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('files share-list-item-activity get-drive-item') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files share-list-item-activity get-drive-item-content') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')

    with self.argument_context('files share-list-item-activity get-list-item') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files share-list-item-activity set-drive-item-content') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('data', help='New media content.')

    with self.argument_context('files share-list-item-activity update-drive-item') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_date_time', help='Date and time of item creation. Read-only.')
        c.argument('description', type=str, help='Provides a user-visible description of the item. Optional.')
        c.argument('e_tag', type=str, help='ETag for the item. Read-only.')
        c.argument('last_modified_date_time', help='Date and time the item was last modified. Read-only.')
        c.argument('name', type=str, help='The name of the item. Read-write.')
        c.argument('web_url', type=str, help='URL that displays the resource in the browser. Read-only.')
        c.argument('created_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory user '
                   'object. Expected value: json-string/@json-file.')
        c.argument('last_modified_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory '
                   'user object. Expected value: json-string/@json-file.')
        c.argument('parent_reference_drive_id', type=str, help='Unique identifier of the drive instance that contains '
                   'the item. Read-only.')
        c.argument('parent_reference_drive_type', type=str, help='Identifies the type of drive. See [drive][] resource '
                   'for values.')
        c.argument('parent_reference_id', type=str, help='Unique identifier of the item in the drive. Read-only.')
        c.argument('parent_reference_name', type=str, help='The name of the item being referenced. Read-only.')
        c.argument('parent_reference_path', type=str,
                   help='Path that can be used to navigate to the item. Read-only.')
        c.argument('parent_reference_share_id', type=str, help='A unique identifier for a shared resource that can be '
                   'accessed via the [Shares][] API.')
        c.argument('parent_reference_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('parent_reference_site_id', type=str, help='')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('microsoft_graph_identity_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('audio', action=AddAudio, nargs='*', help='audio')
        c.argument('content', help='The content stream, if the item represents a file.')
        c.argument('c_tag', type=str, help='An eTag for the content of the item. This eTag is not changed if only the '
                   'metadata is changed. Note This property is not returned if the item is a folder. Read-only.')
        c.argument('file_system_info', action=AddFileSystemInfo, nargs='*', help='fileSystemInfo')
        c.argument('image', action=AddImage, nargs='*', help='image')
        c.argument('location', arg_type=get_location_type(self.cli_ctx))
        c.argument('photo', action=AddPhoto, nargs='*', help='photo')
        c.argument('publication', action=AddPublication, nargs='*', help='publicationFacet')
        c.argument('root', type=validate_file_or_dict, help='root Expected value: json-string/@json-file.')
        c.argument('microsoft_graph_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('size', type=int, help='Size of the item in bytes. Read-only.')
        c.argument('video', action=AddVideo, nargs='*', help='video')
        c.argument('web_dav_url', type=str, help='WebDAV compatible URL for the item.')
        c.argument('activities', type=validate_file_or_dict, help='The list of recent activities that took place on '
                   'this item. Expected value: json-string/@json-file.')
        c.argument('analytics', type=validate_file_or_dict, help='itemAnalytics Expected value: '
                   'json-string/@json-file.')
        c.argument('children', type=validate_file_or_dict, help='Collection containing Item objects for the immediate '
                   'children of Item. Only items representing folders have children. Read-only. Nullable. Expected '
                   'value: json-string/@json-file.')
        c.argument('list_item', type=validate_file_or_dict, help='listItem Expected value: json-string/@json-file.')
        c.argument('permissions', type=validate_file_or_dict, help='The set of permissions for the item. Read-only. '
                   'Nullable. Expected value: json-string/@json-file.')
        c.argument('subscriptions', action=AddFilesDriveCreateBundleSubscriptions, nargs='*', help='The set of '
                   'subscriptions on the item. Only supported on the root of a drive.')
        c.argument('thumbnails', type=validate_file_or_dict, help='Collection containing [ThumbnailSet][] objects '
                   'associated with the item. For more info, see [getting thumbnails][]. Read-only. Nullable. Expected '
                   'value: json-string/@json-file.')
        c.argument('versions', action=AddDrivesVersions, nargs='*', help='The list of previous versions of the item. '
                   'For more info, see [getting previous versions][]. Read-only. Nullable.')
        c.argument('workbook_id', type=str, help='Read-only.')
        c.argument('workbook_application', action=AddWorkbookApplication, nargs='*', help='workbookApplication')
        c.argument('workbook_comments', action=AddWorkbookComments, nargs='*', help='')
        c.argument('workbook_functions', action=AddWorkbookFunctions, nargs='*', help='workbookFunctions')
        c.argument('workbook_names', type=validate_file_or_dict, help='Represents a collection of workbook scoped '
                   'named items (named ranges and constants). Read-only. Expected value: json-string/@json-file.')
        c.argument('workbook_operations', type=validate_file_or_dict, help='The status of workbook operations. Getting '
                   'an operation collection is not supported, but you can get the status of a long-running operation '
                   'if the Location header is returned in the response. Read-only. Expected value: '
                   'json-string/@json-file.')
        c.argument('workbook_tables', type=validate_file_or_dict, help='Represents a collection of tables associated '
                   'with the workbook. Read-only. Expected value: json-string/@json-file.')
        c.argument('workbook_worksheets', type=validate_file_or_dict, help='Represents a collection of worksheets '
                   'associated with the workbook. Read-only. Expected value: json-string/@json-file.')
        c.argument('special_folder_name', type=str, help='The unique identifier for this item in the /drive/special '
                   'collection')
        c.argument('shared_owner', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('shared_scope', type=str, help='Indicates the scope of how the item is shared: anonymous, '
                   'organization, or users. Read-only.')
        c.argument('shared_shared_by', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('shared_shared_date_time', help='The UTC date and time when the item was shared. Read-only.')
        c.argument('search_result_on_click_telemetry_url', type=str, help='A callback URL that can be used to record '
                   'telemetry information. The application should issue a GET on this URL if the user interacts with '
                   'this item to improve the quality of results.')
        c.argument('remote_item_created_by', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_created_date_time', help='Date and time of item creation. Read-only.')
        c.argument('remote_item_file', type=validate_file_or_dict,
                   help='file Expected value: json-string/@json-file.')
        c.argument('remote_item_file_system_info', action=AddFileSystemInfo, nargs='*', help='fileSystemInfo')
        c.argument('remote_item_folder', type=validate_file_or_dict, help='folder Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_id', type=str, help='Unique identifier for the remote item in its drive. Read-only.')
        c.argument('remote_item_image', action=AddImage, nargs='*', help='image')
        c.argument('remote_item_last_modified_by', type=validate_file_or_dict, help='identitySet Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_last_modified_date_time', help='Date and time the item was last modified. Read-only.')
        c.argument('remote_item_name', type=str, help='Optional. Filename of the remote item. Read-only.')
        c.argument('remote_item_package', action=AddRemoteItemPackage, nargs='*', help='package')
        c.argument('remote_item_parent_reference', type=validate_file_or_dict, help='itemReference Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_shared', type=validate_file_or_dict, help='shared Expected value: '
                   'json-string/@json-file.')
        c.argument('remote_item_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('remote_item_size', type=int, help='Size of the remote item. Read-only.')
        c.argument('remote_item_special_folder', action=AddRemoteItemSpecialFolder, nargs='*', help='specialFolder')
        c.argument('remote_item_video', action=AddVideo, nargs='*', help='video')
        c.argument('remote_item_web_dav_url', type=str, help='DAV compatible URL for the item.')
        c.argument('remote_item_web_url', type=str, help='URL that displays the resource in the browser. Read-only.')
        c.argument('pending_operations_pending_content_update_queued_date_time', help='Date and time the pending '
                   'binary operation was queued in UTC time. Read-only.')
        c.argument('package_type', type=str, help='A string indicating the type of package. While oneNote is the only '
                   'currently defined value, you should expect other package types to be returned and handle them '
                   'accordingly.')
        c.argument('folder_child_count', type=int, help='Number of children contained immediately within this '
                   'container.')
        c.argument('folder_view', action=AddFolderView, nargs='*', help='folderView')
        c.argument('file_hashes', action=AddFileHashes, nargs='*', help='hashes')
        c.argument('file_mime_type', type=str, help='The MIME type for the file. This is determined by logic on the '
                   'server and might not be the value provided when the file was uploaded. Read-only.')
        c.argument('file_processing_metadata', arg_type=get_three_state_flag(), help='')
        c.argument('deleted_state', type=str, help='Represents the state of the deleted item.')
        c.argument('bundle_album', action=AddBundleAlbum, nargs='*', help='album')
        c.argument('bundle_child_count', type=int, help='')

    with self.argument_context('files share-list-item-activity update-list-item') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_date_time', help='Date and time of item creation. Read-only.')
        c.argument('description', type=str, help='Provides a user-visible description of the item. Optional.')
        c.argument('e_tag', type=str, help='ETag for the item. Read-only.')
        c.argument('last_modified_date_time', help='Date and time the item was last modified. Read-only.')
        c.argument('name', type=str, help='The name of the item. Read-write.')
        c.argument('web_url', type=str, help='URL that displays the resource in the browser. Read-only.')
        c.argument('created_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory user '
                   'object. Expected value: json-string/@json-file.')
        c.argument('last_modified_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory '
                   'user object. Expected value: json-string/@json-file.')
        c.argument('parent_reference_drive_id', type=str, help='Unique identifier of the drive instance that contains '
                   'the item. Read-only.')
        c.argument('parent_reference_drive_type', type=str, help='Identifies the type of drive. See [drive][] resource '
                   'for values.')
        c.argument('parent_reference_id', type=str, help='Unique identifier of the item in the drive. Read-only.')
        c.argument('parent_reference_name', type=str, help='The name of the item being referenced. Read-only.')
        c.argument('parent_reference_path', type=str,
                   help='Path that can be used to navigate to the item. Read-only.')
        c.argument('parent_reference_share_id', type=str, help='A unique identifier for a shared resource that can be '
                   'accessed via the [Shares][] API.')
        c.argument('parent_reference_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('parent_reference_site_id', type=str, help='')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('microsoft_graph_identity_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('content_type', action=AddContentType, nargs='*', help='contentTypeInfo')
        c.argument('microsoft_graph_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('activities', type=validate_file_or_dict, help='The list of recent activities that took place on '
                   'this item. Expected value: json-string/@json-file.')
        c.argument('analytics', type=validate_file_or_dict, help='itemAnalytics Expected value: '
                   'json-string/@json-file.')
        c.argument('drive_item', type=validate_file_or_dict, help='driveItem Expected value: json-string/@json-file.')
        c.argument('versions', action=AddDrivesActivitiesVersions, nargs='*', help='The list of previous versions of '
                   'the list item.')
        c.argument('fields_id', type=str, help='Read-only.')

    with self.argument_context('files share-list-item-activity-list-item create-link') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('type_', options_list=['--type'], type=str, help='')
        c.argument('scope', type=str, help='')
        c.argument('expiration_date_time', help='')
        c.argument('password', type=str, help='')
        c.argument('recipients', action=AddSharesListitemActivitiesListitemRecipients, nargs='*', help='')

    with self.argument_context('files share-list-item-activity-list-item get-activity-by-interval') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('item_activity_old_id', type=str, help='key: id of itemActivityOLD')
        c.argument('start_date_time', type=str, help='')
        c.argument('end_date_time', type=str, help='')
        c.argument('interval', type=str, help='')

    with self.argument_context('files share-list-item-version delete') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('list_item_version_id', type=str, help='key: id of listItemVersion')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('files share-list-item-version get-field') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('list_item_version_id', type=str, help='key: id of listItemVersion')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files share-list-item-version restore-version') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('list_item_version_id', type=str, help='key: id of listItemVersion')

    with self.argument_context('files share-list-item-version update-field') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('list_item_version_id', type=str, help='key: id of listItemVersion')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')

    with self.argument_context('files share-permission grant') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('roles', nargs='*', help='')
        c.argument('recipients', action=AddSharesPermissionRecipients, nargs='*', help='')

    with self.argument_context('files share-permission revoke-grant') as c:
        c.argument('shared_drive_item_id', type=str, help='key: id of sharedDriveItem')
        c.argument('grantees', action=AddGrantees, nargs='*', help='')

    with self.argument_context('files user delete') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('files user create-drive') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_date_time', help='Date and time of item creation. Read-only.')
        c.argument('description', type=str, help='Provides a user-visible description of the item. Optional.')
        c.argument('e_tag', type=str, help='ETag for the item. Read-only.')
        c.argument('last_modified_date_time', help='Date and time the item was last modified. Read-only.')
        c.argument('name', type=str, help='The name of the item. Read-write.')
        c.argument('web_url', type=str, help='URL that displays the resource in the browser. Read-only.')
        c.argument('created_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory user '
                   'object. Expected value: json-string/@json-file.')
        c.argument('last_modified_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory '
                   'user object. Expected value: json-string/@json-file.')
        c.argument('parent_reference_drive_id', type=str, help='Unique identifier of the drive instance that contains '
                   'the item. Read-only.')
        c.argument('parent_reference_drive_type', type=str, help='Identifies the type of drive. See [drive][] resource '
                   'for values.')
        c.argument('parent_reference_id', type=str, help='Unique identifier of the item in the drive. Read-only.')
        c.argument('parent_reference_name', type=str, help='The name of the item being referenced. Read-only.')
        c.argument('parent_reference_path', type=str,
                   help='Path that can be used to navigate to the item. Read-only.')
        c.argument('parent_reference_share_id', type=str, help='A unique identifier for a shared resource that can be '
                   'accessed via the [Shares][] API.')
        c.argument('parent_reference_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('parent_reference_site_id', type=str, help='')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('microsoft_graph_identity_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('microsoft_graph_drive_type', type=str, help='Describes the type of drive represented by this '
                   'resource. OneDrive personal drives will return personal. OneDrive for Business will return '
                   'business. SharePoint document libraries will return documentLibrary. Read-only.')
        c.argument('share_point_ids', action=AddParentReferenceSharepointIds, nargs='*', help='sharepointIds')
        c.argument('system', type=validate_file_or_dict, help='systemFacet Expected value: json-string/@json-file.')
        c.argument('activities', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('bundles', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('following', type=validate_file_or_dict, help='The list of items the user is following. Only in '
                   'OneDrive for Business. Expected value: json-string/@json-file.')
        c.argument('items', type=validate_file_or_dict, help='All items contained in the drive. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('root', type=validate_file_or_dict, help='driveItem Expected value: json-string/@json-file.')
        c.argument('special', type=validate_file_or_dict, help='Collection of common folders available in OneDrive. '
                   'Read-only. Nullable. Expected value: json-string/@json-file.')
        c.argument('list_id', type=str, help='Read-only.')
        c.argument('list_created_date_time', help='Date and time of item creation. Read-only.')
        c.argument('list_description', type=str, help='Provides a user-visible description of the item. Optional.')
        c.argument('list_e_tag', type=str, help='ETag for the item. Read-only.')
        c.argument('list_last_modified_date_time', help='Date and time the item was last modified. Read-only.')
        c.argument('list_name', type=str, help='The name of the item. Read-write.')
        c.argument('list_web_url', type=str, help='URL that displays the resource in the browser. Read-only.')
        c.argument('list_created_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory user '
                   'object. Expected value: json-string/@json-file.')
        c.argument('list_last_modified_by_user', type=validate_file_or_dict, help='Represents an Azure Active '
                   'Directory user object. Expected value: json-string/@json-file.')
        c.argument('list_parent_reference_drive_id', type=str, help='Unique identifier of the drive instance that '
                   'contains the item. Read-only.')
        c.argument('list_parent_reference_drive_type', type=str, help='Identifies the type of drive. See [drive][] '
                   'resource for values.')
        c.argument('list_parent_reference_id', type=str,
                   help='Unique identifier of the item in the drive. Read-only.')
        c.argument('list_parent_reference_name', type=str, help='The name of the item being referenced. Read-only.')
        c.argument('list_parent_reference_path', type=str, help='Path that can be used to navigate to the item. '
                   'Read-only.')
        c.argument('list_parent_reference_share_id', type=str, help='A unique identifier for a shared resource that '
                   'can be accessed via the [Shares][] API.')
        c.argument('list_parent_reference_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('list_parent_reference_site_id', type=str, help='')
        c.argument('list_last_modified_by_application', action=AddLastModifiedByApplication, nargs='*',
                   help='identity')
        c.argument('list_last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('user1', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('list_created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('list_created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('user2', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('list_display_name', type=str, help='The displayable title of the list.')
        c.argument('list_list', action=AddListList, nargs='*', help='listInfo')
        c.argument('list_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help='sharepointIds')
        c.argument('list_system', type=validate_file_or_dict, help='systemFacet Expected value: '
                   'json-string/@json-file.')
        c.argument('list_activities', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('list_columns', type=validate_file_or_dict, help='The collection of field definitions for this '
                   'list. Expected value: json-string/@json-file.')
        c.argument('list_content_types', type=validate_file_or_dict, help='The collection of content types present in '
                   'this list. Expected value: json-string/@json-file.')
        c.argument('list_drive', type=validate_file_or_dict, help='drive Expected value: json-string/@json-file.')
        c.argument('list_items', type=validate_file_or_dict, help='All items contained in the list. Expected value: '
                   'json-string/@json-file.')
        c.argument('list_subscriptions', action=AddFilesDriveUpdateListSubscriptions, nargs='*', help='The set of '
                   'subscriptions on the list.')
        c.argument('quota_deleted', type=int, help='Total space consumed by files in the recycle bin, in bytes. '
                   'Read-only.')
        c.argument('quota_remaining', type=int, help='Total space remaining before reaching the quota limit, in bytes. '
                   'Read-only.')
        c.argument('quota_state', type=str, help='Enumeration value that indicates the state of the storage space. '
                   'Read-only.')
        c.argument('quota_storage_plan_information', action=AddQuotaStoragePlanInformation, nargs='*', help=''
                   'storagePlanInformation')
        c.argument('quota_total', type=int, help='Total allowed storage space, in bytes. Read-only.')
        c.argument('quota_used', type=int, help='Total space used, in bytes. Read-only.')
        c.argument('owner_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('owner_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('owner_user', action=AddLastModifiedByApplication, nargs='*', help='identity')

    with self.argument_context('files user get-drive') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files user list-drive') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('orderby', nargs='*', help='Order items by property values')
        c.argument('select', nargs='*', help='Select properties to be returned')
        c.argument('expand', nargs='*', help='Expand related entities')

    with self.argument_context('files user update-drive') as c:
        c.argument('user_id', type=str, help='key: id of user')
        c.argument('drive_id', type=str, help='key: id of drive')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_date_time', help='Date and time of item creation. Read-only.')
        c.argument('description', type=str, help='Provides a user-visible description of the item. Optional.')
        c.argument('e_tag', type=str, help='ETag for the item. Read-only.')
        c.argument('last_modified_date_time', help='Date and time the item was last modified. Read-only.')
        c.argument('name', type=str, help='The name of the item. Read-write.')
        c.argument('web_url', type=str, help='URL that displays the resource in the browser. Read-only.')
        c.argument('created_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory user '
                   'object. Expected value: json-string/@json-file.')
        c.argument('last_modified_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory '
                   'user object. Expected value: json-string/@json-file.')
        c.argument('parent_reference_drive_id', type=str, help='Unique identifier of the drive instance that contains '
                   'the item. Read-only.')
        c.argument('parent_reference_drive_type', type=str, help='Identifies the type of drive. See [drive][] resource '
                   'for values.')
        c.argument('parent_reference_id', type=str, help='Unique identifier of the item in the drive. Read-only.')
        c.argument('parent_reference_name', type=str, help='The name of the item being referenced. Read-only.')
        c.argument('parent_reference_path', type=str,
                   help='Path that can be used to navigate to the item. Read-only.')
        c.argument('parent_reference_share_id', type=str, help='A unique identifier for a shared resource that can be '
                   'accessed via the [Shares][] API.')
        c.argument('parent_reference_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('parent_reference_site_id', type=str, help='')
        c.argument('last_modified_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('microsoft_graph_identity_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('microsoft_graph_drive_type', type=str, help='Describes the type of drive represented by this '
                   'resource. OneDrive personal drives will return personal. OneDrive for Business will return '
                   'business. SharePoint document libraries will return documentLibrary. Read-only.')
        c.argument('share_point_ids', action=AddParentReferenceSharepointIds, nargs='*', help='sharepointIds')
        c.argument('system', type=validate_file_or_dict, help='systemFacet Expected value: json-string/@json-file.')
        c.argument('activities', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('bundles', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('following', type=validate_file_or_dict, help='The list of items the user is following. Only in '
                   'OneDrive for Business. Expected value: json-string/@json-file.')
        c.argument('items', type=validate_file_or_dict, help='All items contained in the drive. Read-only. Nullable. '
                   'Expected value: json-string/@json-file.')
        c.argument('root', type=validate_file_or_dict, help='driveItem Expected value: json-string/@json-file.')
        c.argument('special', type=validate_file_or_dict, help='Collection of common folders available in OneDrive. '
                   'Read-only. Nullable. Expected value: json-string/@json-file.')
        c.argument('list_id', type=str, help='Read-only.')
        c.argument('list_created_date_time', help='Date and time of item creation. Read-only.')
        c.argument('list_description', type=str, help='Provides a user-visible description of the item. Optional.')
        c.argument('list_e_tag', type=str, help='ETag for the item. Read-only.')
        c.argument('list_last_modified_date_time', help='Date and time the item was last modified. Read-only.')
        c.argument('list_name', type=str, help='The name of the item. Read-write.')
        c.argument('list_web_url', type=str, help='URL that displays the resource in the browser. Read-only.')
        c.argument('list_created_by_user', type=validate_file_or_dict, help='Represents an Azure Active Directory user '
                   'object. Expected value: json-string/@json-file.')
        c.argument('list_last_modified_by_user', type=validate_file_or_dict, help='Represents an Azure Active '
                   'Directory user object. Expected value: json-string/@json-file.')
        c.argument('list_parent_reference_drive_id', type=str, help='Unique identifier of the drive instance that '
                   'contains the item. Read-only.')
        c.argument('list_parent_reference_drive_type', type=str, help='Identifies the type of drive. See [drive][] '
                   'resource for values.')
        c.argument('list_parent_reference_id', type=str,
                   help='Unique identifier of the item in the drive. Read-only.')
        c.argument('list_parent_reference_name', type=str, help='The name of the item being referenced. Read-only.')
        c.argument('list_parent_reference_path', type=str, help='Path that can be used to navigate to the item. '
                   'Read-only.')
        c.argument('list_parent_reference_share_id', type=str, help='A unique identifier for a shared resource that '
                   'can be accessed via the [Shares][] API.')
        c.argument('list_parent_reference_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help=''
                   'sharepointIds')
        c.argument('list_parent_reference_site_id', type=str, help='')
        c.argument('list_last_modified_by_application', action=AddLastModifiedByApplication, nargs='*',
                   help='identity')
        c.argument('list_last_modified_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('user1', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('list_created_by_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('list_created_by_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('user2', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('list_display_name', type=str, help='The displayable title of the list.')
        c.argument('list_list', action=AddListList, nargs='*', help='listInfo')
        c.argument('list_sharepoint_ids', action=AddParentReferenceSharepointIds, nargs='*', help='sharepointIds')
        c.argument('list_system', type=validate_file_or_dict, help='systemFacet Expected value: '
                   'json-string/@json-file.')
        c.argument('list_activities', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('list_columns', type=validate_file_or_dict, help='The collection of field definitions for this '
                   'list. Expected value: json-string/@json-file.')
        c.argument('list_content_types', type=validate_file_or_dict, help='The collection of content types present in '
                   'this list. Expected value: json-string/@json-file.')
        c.argument('list_drive', type=validate_file_or_dict, help='drive Expected value: json-string/@json-file.')
        c.argument('list_items', type=validate_file_or_dict, help='All items contained in the list. Expected value: '
                   'json-string/@json-file.')
        c.argument('list_subscriptions', action=AddFilesDriveUpdateListSubscriptions, nargs='*', help='The set of '
                   'subscriptions on the list.')
        c.argument('quota_deleted', type=int, help='Total space consumed by files in the recycle bin, in bytes. '
                   'Read-only.')
        c.argument('quota_remaining', type=int, help='Total space remaining before reaching the quota limit, in bytes. '
                   'Read-only.')
        c.argument('quota_state', type=str, help='Enumeration value that indicates the state of the storage space. '
                   'Read-only.')
        c.argument('quota_storage_plan_information', action=AddQuotaStoragePlanInformation, nargs='*', help=''
                   'storagePlanInformation')
        c.argument('quota_total', type=int, help='Total allowed storage space, in bytes. Read-only.')
        c.argument('quota_used', type=int, help='Total space used, in bytes. Read-only.')
        c.argument('owner_application', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('owner_device', action=AddLastModifiedByApplication, nargs='*', help='identity')
        c.argument('owner_user', action=AddLastModifiedByApplication, nargs='*', help='identity')
