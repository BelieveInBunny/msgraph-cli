# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=too-many-statements
# pylint: disable=too-many-locals

from azure.cli.core.commands import CliCommandType


def load_command_table(self, _):

    from azext_planner_beta.generated._client_factory import cf_group
    planner_beta_group = CliCommandType(
        operations_tmpl='azext_planner_beta.vendored_sdks.planner.operations._groups_operations#GroupsOperations.{}',
        client_factory=cf_group)
    with self.command_group('planner group', planner_beta_group, client_factory=cf_group) as g:
        g.custom_command('update', 'planner_group_update')
        g.custom_command('delete', 'planner_group_delete', confirmation=True)
        g.custom_command('show-planner', 'planner_group_show_planner')

    from azext_planner_beta.generated._client_factory import cf_group_planner
    planner_beta_group_planner = CliCommandType(
        operations_tmpl='azext_planner_beta.vendored_sdks.planner.operations._groups_planner_operations#GroupsPlannerOp'
        'erations.{}',
        client_factory=cf_group_planner)
    with self.command_group('planner group-planner', planner_beta_group_planner,
                            client_factory=cf_group_planner) as g:
        g.custom_command('delete', 'planner_group_planner_delete', confirmation=True)
        g.custom_command('create-plan', 'planner_group_planner_create_plan')
        g.custom_command('list-plan', 'planner_group_planner_list_plan')
        g.custom_command('show-plan', 'planner_group_planner_show_plan')
        g.custom_command('update-plan', 'planner_group_planner_update_plan')

    from azext_planner_beta.generated._client_factory import cf_group_planner_plan
    planner_beta_group_planner_plan = CliCommandType(
        operations_tmpl='azext_planner_beta.vendored_sdks.planner.operations._groups_planner_plans_operations#GroupsPla'
        'nnerPlansOperations.{}',
        client_factory=cf_group_planner_plan)
    with self.command_group('planner group-planner-plan', planner_beta_group_planner_plan,
                            client_factory=cf_group_planner_plan) as g:
        g.custom_command('delete', 'planner_group_planner_plan_delete', confirmation=True)
        g.custom_command('create-bucket', 'planner_group_planner_plan_create_bucket')
        g.custom_command('create-task', 'planner_group_planner_plan_create_task')
        g.custom_command('list-bucket', 'planner_group_planner_plan_list_bucket')
        g.custom_command('list-task', 'planner_group_planner_plan_list_task')
        g.custom_command('show-bucket', 'planner_group_planner_plan_show_bucket')
        g.custom_command('show-detail', 'planner_group_planner_plan_show_detail')
        g.custom_command('show-task', 'planner_group_planner_plan_show_task')
        g.custom_command('update-bucket', 'planner_group_planner_plan_update_bucket')
        g.custom_command('update-detail', 'planner_group_planner_plan_update_detail')
        g.custom_command('update-task', 'planner_group_planner_plan_update_task')

    from azext_planner_beta.generated._client_factory import cf_group_planner_plan_bucket
    planner_beta_group_planner_plan_bucket = CliCommandType(
        operations_tmpl='azext_planner_beta.vendored_sdks.planner.operations._groups_planner_plans_buckets_operations#G'
        'roupsPlannerPlansBucketsOperations.{}',
        client_factory=cf_group_planner_plan_bucket)
    with self.command_group('planner group-planner-plan-bucket', planner_beta_group_planner_plan_bucket,
                            client_factory=cf_group_planner_plan_bucket) as g:
        g.custom_command('delete', 'planner_group_planner_plan_bucket_delete', confirmation=True)
        g.custom_command('create-task', 'planner_group_planner_plan_bucket_create_task')
        g.custom_command('list-task', 'planner_group_planner_plan_bucket_list_task')
        g.custom_command('show-task', 'planner_group_planner_plan_bucket_show_task')
        g.custom_command('update-task', 'planner_group_planner_plan_bucket_update_task')

    from azext_planner_beta.generated._client_factory import cf_group_planner_plan_bucket_task
    planner_beta_group_planner_plan_bucket_task = CliCommandType(
        operations_tmpl='azext_planner_beta.vendored_sdks.planner.operations._groups_planner_plans_buckets_tasks_operat'
        'ions#GroupsPlannerPlansBucketsTasksOperations.{}',
        client_factory=cf_group_planner_plan_bucket_task)
    with self.command_group('planner group-planner-plan-bucket-task', planner_beta_group_planner_plan_bucket_task,
                            client_factory=cf_group_planner_plan_bucket_task) as g:
        g.custom_command('delete', 'planner_group_planner_plan_bucket_task_delete', confirmation=True)
        g.custom_command('show-assigned-to-task-board-format', 'planner_group_planner_plan_bucket_task_show_assigned_to'
                         '_task_board_format')
        g.custom_command('show-bucket-task-board-format', 'planner_group_planner_plan_bucket_task_show_bucket_task_boar'
                         'd_format')
        g.custom_command('show-detail', 'planner_group_planner_plan_bucket_task_show_detail')
        g.custom_command('show-progress-task-board-format', 'planner_group_planner_plan_bucket_task_show_progress_task_'
                         'board_format')
        g.custom_command('update-assigned-to-task-board-format', 'planner_group_planner_plan_bucket_task_update_assigne'
                         'd_to_task_board_format')
        g.custom_command('update-bucket-task-board-format', 'planner_group_planner_plan_bucket_task_update_bucket_task_'
                         'board_format')
        g.custom_command('update-detail', 'planner_group_planner_plan_bucket_task_update_detail')
        g.custom_command('update-progress-task-board-format', 'planner_group_planner_plan_bucket_task_update_progress_t'
                         'ask_board_format')

    from azext_planner_beta.generated._client_factory import cf_group_planner_plan_task
    planner_beta_group_planner_plan_task = CliCommandType(
        operations_tmpl='azext_planner_beta.vendored_sdks.planner.operations._groups_planner_plans_tasks_operations#Gro'
        'upsPlannerPlansTasksOperations.{}',
        client_factory=cf_group_planner_plan_task)
    with self.command_group('planner group-planner-plan-task', planner_beta_group_planner_plan_task,
                            client_factory=cf_group_planner_plan_task) as g:
        g.custom_command('delete', 'planner_group_planner_plan_task_delete', confirmation=True)
        g.custom_command('show-assigned-to-task-board-format', 'planner_group_planner_plan_task_show_assigned_to_task_b'
                         'oard_format')
        g.custom_command('show-bucket-task-board-format', 'planner_group_planner_plan_task_show_bucket_task_board_forma'
                         't')
        g.custom_command('show-detail', 'planner_group_planner_plan_task_show_detail')
        g.custom_command('show-progress-task-board-format', 'planner_group_planner_plan_task_show_progress_task_board_f'
                         'ormat')
        g.custom_command('update-assigned-to-task-board-format', 'planner_group_planner_plan_task_update_assigned_to_ta'
                         'sk_board_format')
        g.custom_command('update-bucket-task-board-format', 'planner_group_planner_plan_task_update_bucket_task_board_f'
                         'ormat')
        g.custom_command('update-detail', 'planner_group_planner_plan_task_update_detail')
        g.custom_command('update-progress-task-board-format', 'planner_group_planner_plan_task_update_progress_task_boa'
                         'rd_format')

    from azext_planner_beta.generated._client_factory import cf_planner_planner
    planner_beta_planner_planner = CliCommandType(
        operations_tmpl='azext_planner_beta.vendored_sdks.planner.operations._planner_planner_operations#PlannerPlanner'
        'Operations.{}',
        client_factory=cf_planner_planner)
    with self.command_group('planner planner', planner_beta_planner_planner, client_factory=cf_planner_planner) as g:
        g.custom_command('update', 'planner_planner_update')
        g.custom_command('show-planner', 'planner_planner_show_planner')

    from azext_planner_beta.generated._client_factory import cf_planner
    planner_beta_planner = CliCommandType(
        operations_tmpl='azext_planner_beta.vendored_sdks.planner.operations._planner_operations#PlannerOperations.{}',
        client_factory=cf_planner)
    with self.command_group('planner planner', planner_beta_planner, client_factory=cf_planner) as g:
        g.custom_command('delete', 'planner_planner_delete', confirmation=True)
        g.custom_command('create-bucket', 'planner_planner_create_bucket')
        g.custom_command('create-plan', 'planner_planner_create_plan')
        g.custom_command('create-task', 'planner_planner_create_task')
        g.custom_command('list-bucket', 'planner_planner_list_bucket')
        g.custom_command('list-plan', 'planner_planner_list_plan')
        g.custom_command('list-task', 'planner_planner_list_task')
        g.custom_command('show-bucket', 'planner_planner_show_bucket')
        g.custom_command('show-plan', 'planner_planner_show_plan')
        g.custom_command('show-task', 'planner_planner_show_task')
        g.custom_command('update-bucket', 'planner_planner_update_bucket')
        g.custom_command('update-plan', 'planner_planner_update_plan')
        g.custom_command('update-task', 'planner_planner_update_task')

    from azext_planner_beta.generated._client_factory import cf_planner_bucket
    planner_beta_planner_bucket = CliCommandType(
        operations_tmpl='azext_planner_beta.vendored_sdks.planner.operations._planner_buckets_operations#PlannerBuckets'
        'Operations.{}',
        client_factory=cf_planner_bucket)
    with self.command_group('planner planner-bucket', planner_beta_planner_bucket,
                            client_factory=cf_planner_bucket) as g:
        g.custom_command('delete', 'planner_planner_bucket_delete', confirmation=True)
        g.custom_command('create-task', 'planner_planner_bucket_create_task')
        g.custom_command('list-task', 'planner_planner_bucket_list_task')
        g.custom_command('show-task', 'planner_planner_bucket_show_task')
        g.custom_command('update-task', 'planner_planner_bucket_update_task')

    from azext_planner_beta.generated._client_factory import cf_planner_bucket_task
    planner_beta_planner_bucket_task = CliCommandType(
        operations_tmpl='azext_planner_beta.vendored_sdks.planner.operations._planner_buckets_tasks_operations#PlannerB'
        'ucketsTasksOperations.{}',
        client_factory=cf_planner_bucket_task)
    with self.command_group('planner planner-bucket-task', planner_beta_planner_bucket_task,
                            client_factory=cf_planner_bucket_task) as g:
        g.custom_command('delete', 'planner_planner_bucket_task_delete', confirmation=True)
        g.custom_command('show-assigned-to-task-board-format', 'planner_planner_bucket_task_show_assigned_to_task_board'
                         '_format')
        g.custom_command('show-bucket-task-board-format', 'planner_planner_bucket_task_show_bucket_task_board_format')
        g.custom_command('show-detail', 'planner_planner_bucket_task_show_detail')
        g.custom_command('show-progress-task-board-format', 'planner_planner_bucket_task_show_progress_task_board_forma'
                         't')
        g.custom_command('update-assigned-to-task-board-format', 'planner_planner_bucket_task_update_assigned_to_task_b'
                         'oard_format')
        g.custom_command('update-bucket-task-board-format', 'planner_planner_bucket_task_update_bucket_task_board_forma'
                         't')
        g.custom_command('update-detail', 'planner_planner_bucket_task_update_detail')
        g.custom_command('update-progress-task-board-format', 'planner_planner_bucket_task_update_progress_task_board_f'
                         'ormat')

    from azext_planner_beta.generated._client_factory import cf_planner_plan
    planner_beta_planner_plan = CliCommandType(
        operations_tmpl='azext_planner_beta.vendored_sdks.planner.operations._planner_plans_operations#PlannerPlansOper'
        'ations.{}',
        client_factory=cf_planner_plan)
    with self.command_group('planner planner-plan', planner_beta_planner_plan, client_factory=cf_planner_plan) as g:
        g.custom_command('delete', 'planner_planner_plan_delete', confirmation=True)
        g.custom_command('create-bucket', 'planner_planner_plan_create_bucket')
        g.custom_command('create-task', 'planner_planner_plan_create_task')
        g.custom_command('list-bucket', 'planner_planner_plan_list_bucket')
        g.custom_command('list-task', 'planner_planner_plan_list_task')
        g.custom_command('show-bucket', 'planner_planner_plan_show_bucket')
        g.custom_command('show-detail', 'planner_planner_plan_show_detail')
        g.custom_command('show-task', 'planner_planner_plan_show_task')
        g.custom_command('update-bucket', 'planner_planner_plan_update_bucket')
        g.custom_command('update-detail', 'planner_planner_plan_update_detail')
        g.custom_command('update-task', 'planner_planner_plan_update_task')

    from azext_planner_beta.generated._client_factory import cf_planner_plan_bucket
    planner_beta_planner_plan_bucket = CliCommandType(
        operations_tmpl='azext_planner_beta.vendored_sdks.planner.operations._planner_plans_buckets_operations#PlannerP'
        'lansBucketsOperations.{}',
        client_factory=cf_planner_plan_bucket)
    with self.command_group('planner planner-plan-bucket', planner_beta_planner_plan_bucket,
                            client_factory=cf_planner_plan_bucket) as g:
        g.custom_command('delete', 'planner_planner_plan_bucket_delete', confirmation=True)
        g.custom_command('create-task', 'planner_planner_plan_bucket_create_task')
        g.custom_command('list-task', 'planner_planner_plan_bucket_list_task')
        g.custom_command('show-task', 'planner_planner_plan_bucket_show_task')
        g.custom_command('update-task', 'planner_planner_plan_bucket_update_task')

    from azext_planner_beta.generated._client_factory import cf_planner_plan_bucket_task
    planner_beta_planner_plan_bucket_task = CliCommandType(
        operations_tmpl='azext_planner_beta.vendored_sdks.planner.operations._planner_plans_buckets_tasks_operations#Pl'
        'annerPlansBucketsTasksOperations.{}',
        client_factory=cf_planner_plan_bucket_task)
    with self.command_group('planner planner-plan-bucket-task', planner_beta_planner_plan_bucket_task,
                            client_factory=cf_planner_plan_bucket_task) as g:
        g.custom_command('delete', 'planner_planner_plan_bucket_task_delete', confirmation=True)
        g.custom_command('show-assigned-to-task-board-format', 'planner_planner_plan_bucket_task_show_assigned_to_task_'
                         'board_format')
        g.custom_command('show-bucket-task-board-format', 'planner_planner_plan_bucket_task_show_bucket_task_board_form'
                         'at')
        g.custom_command('show-detail', 'planner_planner_plan_bucket_task_show_detail')
        g.custom_command('show-progress-task-board-format', 'planner_planner_plan_bucket_task_show_progress_task_board_'
                         'format')
        g.custom_command('update-assigned-to-task-board-format', 'planner_planner_plan_bucket_task_update_assigned_to_t'
                         'ask_board_format')
        g.custom_command('update-bucket-task-board-format', 'planner_planner_plan_bucket_task_update_bucket_task_board_'
                         'format')
        g.custom_command('update-detail', 'planner_planner_plan_bucket_task_update_detail')
        g.custom_command('update-progress-task-board-format', 'planner_planner_plan_bucket_task_update_progress_task_bo'
                         'ard_format')

    from azext_planner_beta.generated._client_factory import cf_planner_plan_task
    planner_beta_planner_plan_task = CliCommandType(
        operations_tmpl='azext_planner_beta.vendored_sdks.planner.operations._planner_plans_tasks_operations#PlannerPla'
        'nsTasksOperations.{}',
        client_factory=cf_planner_plan_task)
    with self.command_group('planner planner-plan-task', planner_beta_planner_plan_task,
                            client_factory=cf_planner_plan_task) as g:
        g.custom_command('delete', 'planner_planner_plan_task_delete', confirmation=True)
        g.custom_command('show-assigned-to-task-board-format', 'planner_planner_plan_task_show_assigned_to_task_board_f'
                         'ormat')
        g.custom_command('show-bucket-task-board-format', 'planner_planner_plan_task_show_bucket_task_board_format')
        g.custom_command('show-detail', 'planner_planner_plan_task_show_detail')
        g.custom_command('show-progress-task-board-format',
                         'planner_planner_plan_task_show_progress_task_board_format')
        g.custom_command('update-assigned-to-task-board-format', 'planner_planner_plan_task_update_assigned_to_task_boa'
                         'rd_format')
        g.custom_command('update-bucket-task-board-format',
                         'planner_planner_plan_task_update_bucket_task_board_format')
        g.custom_command('update-detail', 'planner_planner_plan_task_update_detail')
        g.custom_command('update-progress-task-board-format', 'planner_planner_plan_task_update_progress_task_board_for'
                         'mat')

    from azext_planner_beta.generated._client_factory import cf_planner_task
    planner_beta_planner_task = CliCommandType(
        operations_tmpl='azext_planner_beta.vendored_sdks.planner.operations._planner_tasks_operations#PlannerTasksOper'
        'ations.{}',
        client_factory=cf_planner_task)
    with self.command_group('planner planner-task', planner_beta_planner_task, client_factory=cf_planner_task) as g:
        g.custom_command('delete', 'planner_planner_task_delete', confirmation=True)
        g.custom_command('show-assigned-to-task-board-format', 'planner_planner_task_show_assigned_to_task_board_format'
                         '')
        g.custom_command('show-bucket-task-board-format', 'planner_planner_task_show_bucket_task_board_format')
        g.custom_command('show-detail', 'planner_planner_task_show_detail')
        g.custom_command('show-progress-task-board-format', 'planner_planner_task_show_progress_task_board_format')
        g.custom_command('update-assigned-to-task-board-format', 'planner_planner_task_update_assigned_to_task_board_fo'
                         'rmat')
        g.custom_command('update-bucket-task-board-format', 'planner_planner_task_update_bucket_task_board_format')
        g.custom_command('update-detail', 'planner_planner_task_update_detail')
        g.custom_command('update-progress-task-board-format',
                         'planner_planner_task_update_progress_task_board_format')

    from azext_planner_beta.generated._client_factory import cf_user
    planner_beta_user = CliCommandType(
        operations_tmpl='azext_planner_beta.vendored_sdks.planner.operations._users_operations#UsersOperations.{}',
        client_factory=cf_user)
    with self.command_group('planner user', planner_beta_user, client_factory=cf_user) as g:
        g.custom_command('update', 'planner_user_update')
        g.custom_command('delete', 'planner_user_delete', confirmation=True)
        g.custom_command('show-planner', 'planner_user_show_planner')

    from azext_planner_beta.generated._client_factory import cf_user_planner
    planner_beta_user_planner = CliCommandType(
        operations_tmpl='azext_planner_beta.vendored_sdks.planner.operations._users_planner_operations#UsersPlannerOper'
        'ations.{}',
        client_factory=cf_user_planner)
    with self.command_group('planner user-planner', planner_beta_user_planner, client_factory=cf_user_planner) as g:
        g.custom_command('delete', 'planner_user_planner_delete', confirmation=True)
        g.custom_command('create-all', 'planner_user_planner_create_all')
        g.custom_command('create-plan', 'planner_user_planner_create_plan')
        g.custom_command('create-ref-favorite-plan', 'planner_user_planner_create_ref_favorite_plan')
        g.custom_command('create-ref-recent-plan', 'planner_user_planner_create_ref_recent_plan')
        g.custom_command('create-task', 'planner_user_planner_create_task')
        g.custom_command('list-all', 'planner_user_planner_list_all')
        g.custom_command('list-favorite-plan', 'planner_user_planner_list_favorite_plan')
        g.custom_command('list-plan', 'planner_user_planner_list_plan')
        g.custom_command('list-recent-plan', 'planner_user_planner_list_recent_plan')
        g.custom_command('list-ref-favorite-plan', 'planner_user_planner_list_ref_favorite_plan')
        g.custom_command('list-ref-recent-plan', 'planner_user_planner_list_ref_recent_plan')
        g.custom_command('list-task', 'planner_user_planner_list_task')
        g.custom_command('show-all', 'planner_user_planner_show_all')
        g.custom_command('show-plan', 'planner_user_planner_show_plan')
        g.custom_command('show-task', 'planner_user_planner_show_task')
        g.custom_command('update-all', 'planner_user_planner_update_all')
        g.custom_command('update-plan', 'planner_user_planner_update_plan')
        g.custom_command('update-task', 'planner_user_planner_update_task')

    from azext_planner_beta.generated._client_factory import cf_user_planner_plan
    planner_beta_user_planner_plan = CliCommandType(
        operations_tmpl='azext_planner_beta.vendored_sdks.planner.operations._users_planner_plans_operations#UsersPlann'
        'erPlansOperations.{}',
        client_factory=cf_user_planner_plan)
    with self.command_group('planner user-planner-plan', planner_beta_user_planner_plan,
                            client_factory=cf_user_planner_plan) as g:
        g.custom_command('delete', 'planner_user_planner_plan_delete', confirmation=True)
        g.custom_command('create-bucket', 'planner_user_planner_plan_create_bucket')
        g.custom_command('create-task', 'planner_user_planner_plan_create_task')
        g.custom_command('list-bucket', 'planner_user_planner_plan_list_bucket')
        g.custom_command('list-task', 'planner_user_planner_plan_list_task')
        g.custom_command('show-bucket', 'planner_user_planner_plan_show_bucket')
        g.custom_command('show-detail', 'planner_user_planner_plan_show_detail')
        g.custom_command('show-task', 'planner_user_planner_plan_show_task')
        g.custom_command('update-bucket', 'planner_user_planner_plan_update_bucket')
        g.custom_command('update-detail', 'planner_user_planner_plan_update_detail')
        g.custom_command('update-task', 'planner_user_planner_plan_update_task')

    from azext_planner_beta.generated._client_factory import cf_user_planner_plan_bucket
    planner_beta_user_planner_plan_bucket = CliCommandType(
        operations_tmpl='azext_planner_beta.vendored_sdks.planner.operations._users_planner_plans_buckets_operations#Us'
        'ersPlannerPlansBucketsOperations.{}',
        client_factory=cf_user_planner_plan_bucket)
    with self.command_group('planner user-planner-plan-bucket', planner_beta_user_planner_plan_bucket,
                            client_factory=cf_user_planner_plan_bucket) as g:
        g.custom_command('delete', 'planner_user_planner_plan_bucket_delete', confirmation=True)
        g.custom_command('create-task', 'planner_user_planner_plan_bucket_create_task')
        g.custom_command('list-task', 'planner_user_planner_plan_bucket_list_task')
        g.custom_command('show-task', 'planner_user_planner_plan_bucket_show_task')
        g.custom_command('update-task', 'planner_user_planner_plan_bucket_update_task')

    from azext_planner_beta.generated._client_factory import cf_user_planner_plan_bucket_task
    planner_beta_user_planner_plan_bucket_task = CliCommandType(
        operations_tmpl='azext_planner_beta.vendored_sdks.planner.operations._users_planner_plans_buckets_tasks_operati'
        'ons#UsersPlannerPlansBucketsTasksOperations.{}',
        client_factory=cf_user_planner_plan_bucket_task)
    with self.command_group('planner user-planner-plan-bucket-task', planner_beta_user_planner_plan_bucket_task,
                            client_factory=cf_user_planner_plan_bucket_task) as g:
        g.custom_command('delete', 'planner_user_planner_plan_bucket_task_delete', confirmation=True)
        g.custom_command('show-assigned-to-task-board-format', 'planner_user_planner_plan_bucket_task_show_assigned_to_'
                         'task_board_format')
        g.custom_command('show-bucket-task-board-format', 'planner_user_planner_plan_bucket_task_show_bucket_task_board'
                         '_format')
        g.custom_command('show-detail', 'planner_user_planner_plan_bucket_task_show_detail')
        g.custom_command('show-progress-task-board-format', 'planner_user_planner_plan_bucket_task_show_progress_task_b'
                         'oard_format')
        g.custom_command('update-assigned-to-task-board-format', 'planner_user_planner_plan_bucket_task_update_assigned'
                         '_to_task_board_format')
        g.custom_command('update-bucket-task-board-format', 'planner_user_planner_plan_bucket_task_update_bucket_task_b'
                         'oard_format')
        g.custom_command('update-detail', 'planner_user_planner_plan_bucket_task_update_detail')
        g.custom_command('update-progress-task-board-format', 'planner_user_planner_plan_bucket_task_update_progress_ta'
                         'sk_board_format')

    from azext_planner_beta.generated._client_factory import cf_user_planner_plan_task
    planner_beta_user_planner_plan_task = CliCommandType(
        operations_tmpl='azext_planner_beta.vendored_sdks.planner.operations._users_planner_plans_tasks_operations#User'
        'sPlannerPlansTasksOperations.{}',
        client_factory=cf_user_planner_plan_task)
    with self.command_group('planner user-planner-plan-task', planner_beta_user_planner_plan_task,
                            client_factory=cf_user_planner_plan_task) as g:
        g.custom_command('delete', 'planner_user_planner_plan_task_delete', confirmation=True)
        g.custom_command('show-assigned-to-task-board-format', 'planner_user_planner_plan_task_show_assigned_to_task_bo'
                         'ard_format')
        g.custom_command('show-bucket-task-board-format', 'planner_user_planner_plan_task_show_bucket_task_board_format'
                         '')
        g.custom_command('show-detail', 'planner_user_planner_plan_task_show_detail')
        g.custom_command('show-progress-task-board-format', 'planner_user_planner_plan_task_show_progress_task_board_fo'
                         'rmat')
        g.custom_command('update-assigned-to-task-board-format', 'planner_user_planner_plan_task_update_assigned_to_tas'
                         'k_board_format')
        g.custom_command('update-bucket-task-board-format', 'planner_user_planner_plan_task_update_bucket_task_board_fo'
                         'rmat')
        g.custom_command('update-detail', 'planner_user_planner_plan_task_update_detail')
        g.custom_command('update-progress-task-board-format', 'planner_user_planner_plan_task_update_progress_task_boar'
                         'd_format')

    from azext_planner_beta.generated._client_factory import cf_user_planner_task
    planner_beta_user_planner_task = CliCommandType(
        operations_tmpl='azext_planner_beta.vendored_sdks.planner.operations._users_planner_tasks_operations#UsersPlann'
        'erTasksOperations.{}',
        client_factory=cf_user_planner_task)
    with self.command_group('planner user-planner-task', planner_beta_user_planner_task,
                            client_factory=cf_user_planner_task) as g:
        g.custom_command('delete', 'planner_user_planner_task_delete', confirmation=True)
        g.custom_command('show-assigned-to-task-board-format', 'planner_user_planner_task_show_assigned_to_task_board_f'
                         'ormat')
        g.custom_command('show-bucket-task-board-format', 'planner_user_planner_task_show_bucket_task_board_format')
        g.custom_command('show-detail', 'planner_user_planner_task_show_detail')
        g.custom_command('show-progress-task-board-format',
                         'planner_user_planner_task_show_progress_task_board_format')
        g.custom_command('update-assigned-to-task-board-format', 'planner_user_planner_task_update_assigned_to_task_boa'
                         'rd_format')
        g.custom_command('update-bucket-task-board-format',
                         'planner_user_planner_task_update_bucket_task_board_format')
        g.custom_command('update-detail', 'planner_user_planner_task_update_detail')
        g.custom_command('update-progress-task-board-format', 'planner_user_planner_task_update_progress_task_board_for'
                         'mat')

    with self.command_group('planner_beta', is_experimental=True):
        pass
