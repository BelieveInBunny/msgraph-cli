# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from enum import Enum, EnumMeta
from six import with_metaclass

class _CaseInsensitiveEnumMeta(EnumMeta):
    def __getitem__(self, name):
        return super().__getitem__(name.upper())

    def __getattr__(cls, name):
        """Return the enum member matching `name`
        We use __getattr__ instead of descriptors or inserting into the enum
        class' __dict__ in order to support `name` and `value` being both
        properties for enum members (which live in the class' __dict__) and
        enum members themselves.
        """
        try:
            return cls._member_map_[name.upper()]
        except KeyError:
            raise AttributeError(name)


class Enum10(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    AGED_AS_OF_DATE = "agedAsOfDate"
    BALANCE_DUE = "balanceDue"
    CURRENCY_CODE = "currencyCode"
    CURRENT_AMOUNT = "currentAmount"
    NAME = "name"
    PERIOD1_AMOUNT = "period1Amount"
    PERIOD2_AMOUNT = "period2Amount"
    PERIOD3_AMOUNT = "period3Amount"
    PERIOD_LENGTH_FILTER = "periodLengthFilter"
    VENDOR_NUMBER = "vendorNumber"

class Enum100(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    ITEM_CATEGORY = "itemCategory"
    PICTURE = "picture"

class Enum101(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    BASE_UNIT_OF_MEASURE_ID = "baseUnitOfMeasureId"
    BLOCKED = "blocked"
    DISPLAY_NAME = "displayName"
    GTIN = "gtin"
    INVENTORY = "inventory"
    ITEM_CATEGORY_CODE = "itemCategoryCode"
    ITEM_CATEGORY_ID = "itemCategoryId"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    NUMBER = "number"
    PRICE_INCLUDES_TAX = "priceIncludesTax"
    TAX_GROUP_CODE = "taxGroupCode"
    TAX_GROUP_ID = "taxGroupId"
    TYPE = "type"
    UNIT_COST = "unitCost"
    UNIT_PRICE = "unitPrice"
    ITEM_CATEGORY = "itemCategory"
    PICTURE = "picture"

class Enum102(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    ITEM_CATEGORY = "itemCategory"
    PICTURE = "picture"

class Enum103(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CODE = "code"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"

class Enum104(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    CONTENT = "content"
    CONTENT_DESC = "content desc"
    CONTENT_TYPE = "contentType"
    CONTENT_TYPE_DESC = "contentType desc"
    HEIGHT = "height"
    HEIGHT_DESC = "height desc"
    WIDTH = "width"
    WIDTH_DESC = "width desc"

class Enum105(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CONTENT = "content"
    CONTENT_TYPE = "contentType"
    HEIGHT = "height"
    WIDTH = "width"

class Enum106(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CONTENT = "content"
    CONTENT_TYPE = "contentType"
    HEIGHT = "height"
    WIDTH = "width"

class Enum107(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    ACCOUNT_ID = "accountId"
    ACCOUNT_ID_DESC = "accountId desc"
    ACCOUNT_NUMBER = "accountNumber"
    ACCOUNT_NUMBER_DESC = "accountNumber desc"
    AMOUNT = "amount"
    AMOUNT_DESC = "amount desc"
    COMMENT = "comment"
    COMMENT_DESC = "comment desc"
    DESCRIPTION = "description"
    DESCRIPTION_DESC = "description desc"
    DOCUMENT_NUMBER = "documentNumber"
    DOCUMENT_NUMBER_DESC = "documentNumber desc"
    EXTERNAL_DOCUMENT_NUMBER = "externalDocumentNumber"
    EXTERNAL_DOCUMENT_NUMBER_DESC = "externalDocumentNumber desc"
    JOURNAL_DISPLAY_NAME = "journalDisplayName"
    JOURNAL_DISPLAY_NAME_DESC = "journalDisplayName desc"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    LAST_MODIFIED_DATE_TIME_DESC = "lastModifiedDateTime desc"
    LINE_NUMBER = "lineNumber"
    LINE_NUMBER_DESC = "lineNumber desc"
    POSTING_DATE = "postingDate"
    POSTING_DATE_DESC = "postingDate desc"

class Enum108(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ACCOUNT_ID = "accountId"
    ACCOUNT_NUMBER = "accountNumber"
    AMOUNT = "amount"
    COMMENT = "comment"
    DESCRIPTION = "description"
    DOCUMENT_NUMBER = "documentNumber"
    EXTERNAL_DOCUMENT_NUMBER = "externalDocumentNumber"
    JOURNAL_DISPLAY_NAME = "journalDisplayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    LINE_NUMBER = "lineNumber"
    POSTING_DATE = "postingDate"
    ACCOUNT = "account"

class Enum109(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    ACCOUNT = "account"

class Enum11(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    AGED_AS_OF_DATE = "agedAsOfDate"
    BALANCE_DUE = "balanceDue"
    CURRENCY_CODE = "currencyCode"
    CURRENT_AMOUNT = "currentAmount"
    NAME = "name"
    PERIOD1_AMOUNT = "period1Amount"
    PERIOD2_AMOUNT = "period2Amount"
    PERIOD3_AMOUNT = "period3Amount"
    PERIOD_LENGTH_FILTER = "periodLengthFilter"
    VENDOR_NUMBER = "vendorNumber"

class Enum110(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ACCOUNT_ID = "accountId"
    ACCOUNT_NUMBER = "accountNumber"
    AMOUNT = "amount"
    COMMENT = "comment"
    DESCRIPTION = "description"
    DOCUMENT_NUMBER = "documentNumber"
    EXTERNAL_DOCUMENT_NUMBER = "externalDocumentNumber"
    JOURNAL_DISPLAY_NAME = "journalDisplayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    LINE_NUMBER = "lineNumber"
    POSTING_DATE = "postingDate"
    ACCOUNT = "account"

class Enum111(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    ACCOUNT = "account"

class Enum112(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    BLOCKED = "blocked"
    CATEGORY = "category"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    NUMBER = "number"
    SUB_CATEGORY = "subCategory"

class Enum113(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    BALANCING_ACCOUNT_ID = "balancingAccountId"
    BALANCING_ACCOUNT_ID_DESC = "balancingAccountId desc"
    BALANCING_ACCOUNT_NUMBER = "balancingAccountNumber"
    BALANCING_ACCOUNT_NUMBER_DESC = "balancingAccountNumber desc"
    CODE = "code"
    CODE_DESC = "code desc"
    DISPLAY_NAME = "displayName"
    DISPLAY_NAME_DESC = "displayName desc"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    LAST_MODIFIED_DATE_TIME_DESC = "lastModifiedDateTime desc"

class Enum114(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    BALANCING_ACCOUNT_ID = "balancingAccountId"
    BALANCING_ACCOUNT_NUMBER = "balancingAccountNumber"
    CODE = "code"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    ACCOUNT = "account"
    JOURNAL_LINES = "journalLines"

class Enum115(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    ACCOUNT = "account"
    JOURNAL_LINES = "journalLines"

class Enum116(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    BALANCING_ACCOUNT_ID = "balancingAccountId"
    BALANCING_ACCOUNT_NUMBER = "balancingAccountNumber"
    CODE = "code"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    ACCOUNT = "account"
    JOURNAL_LINES = "journalLines"

class Enum117(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    ACCOUNT = "account"
    JOURNAL_LINES = "journalLines"

class Enum118(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    BLOCKED = "blocked"
    CATEGORY = "category"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    NUMBER = "number"
    SUB_CATEGORY = "subCategory"

class Enum119(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    ACCOUNT_ID = "accountId"
    ACCOUNT_ID_DESC = "accountId desc"
    ACCOUNT_NUMBER = "accountNumber"
    ACCOUNT_NUMBER_DESC = "accountNumber desc"
    AMOUNT = "amount"
    AMOUNT_DESC = "amount desc"
    COMMENT = "comment"
    COMMENT_DESC = "comment desc"
    DESCRIPTION = "description"
    DESCRIPTION_DESC = "description desc"
    DOCUMENT_NUMBER = "documentNumber"
    DOCUMENT_NUMBER_DESC = "documentNumber desc"
    EXTERNAL_DOCUMENT_NUMBER = "externalDocumentNumber"
    EXTERNAL_DOCUMENT_NUMBER_DESC = "externalDocumentNumber desc"
    JOURNAL_DISPLAY_NAME = "journalDisplayName"
    JOURNAL_DISPLAY_NAME_DESC = "journalDisplayName desc"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    LAST_MODIFIED_DATE_TIME_DESC = "lastModifiedDateTime desc"
    LINE_NUMBER = "lineNumber"
    LINE_NUMBER_DESC = "lineNumber desc"
    POSTING_DATE = "postingDate"
    POSTING_DATE_DESC = "postingDate desc"

class Enum12(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    AGED_AS_OF_DATE = "agedAsOfDate"
    AGED_AS_OF_DATE_DESC = "agedAsOfDate desc"
    BALANCE_DUE = "balanceDue"
    BALANCE_DUE_DESC = "balanceDue desc"
    CURRENCY_CODE = "currencyCode"
    CURRENCY_CODE_DESC = "currencyCode desc"
    CURRENT_AMOUNT = "currentAmount"
    CURRENT_AMOUNT_DESC = "currentAmount desc"
    CUSTOMER_NUMBER = "customerNumber"
    CUSTOMER_NUMBER_DESC = "customerNumber desc"
    NAME = "name"
    NAME_DESC = "name desc"
    PERIOD1_AMOUNT = "period1Amount"
    PERIOD1_AMOUNT_DESC = "period1Amount desc"
    PERIOD2_AMOUNT = "period2Amount"
    PERIOD2_AMOUNT_DESC = "period2Amount desc"
    PERIOD3_AMOUNT = "period3Amount"
    PERIOD3_AMOUNT_DESC = "period3Amount desc"
    PERIOD_LENGTH_FILTER = "periodLengthFilter"
    PERIOD_LENGTH_FILTER_DESC = "periodLengthFilter desc"

class Enum120(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ACCOUNT_ID = "accountId"
    ACCOUNT_NUMBER = "accountNumber"
    AMOUNT = "amount"
    COMMENT = "comment"
    DESCRIPTION = "description"
    DOCUMENT_NUMBER = "documentNumber"
    EXTERNAL_DOCUMENT_NUMBER = "externalDocumentNumber"
    JOURNAL_DISPLAY_NAME = "journalDisplayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    LINE_NUMBER = "lineNumber"
    POSTING_DATE = "postingDate"
    ACCOUNT = "account"

class Enum121(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    ACCOUNT = "account"

class Enum122(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ACCOUNT_ID = "accountId"
    ACCOUNT_NUMBER = "accountNumber"
    AMOUNT = "amount"
    COMMENT = "comment"
    DESCRIPTION = "description"
    DOCUMENT_NUMBER = "documentNumber"
    EXTERNAL_DOCUMENT_NUMBER = "externalDocumentNumber"
    JOURNAL_DISPLAY_NAME = "journalDisplayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    LINE_NUMBER = "lineNumber"
    POSTING_DATE = "postingDate"
    ACCOUNT = "account"

class Enum123(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    ACCOUNT = "account"

class Enum124(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    BLOCKED = "blocked"
    CATEGORY = "category"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    NUMBER = "number"
    SUB_CATEGORY = "subCategory"

class Enum125(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    CODE = "code"
    CODE_DESC = "code desc"
    DISPLAY_NAME = "displayName"
    DISPLAY_NAME_DESC = "displayName desc"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    LAST_MODIFIED_DATE_TIME_DESC = "lastModifiedDateTime desc"

class Enum126(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CODE = "code"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"

class Enum127(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CODE = "code"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"

class Enum128(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    CALCULATE_DISCOUNT_ON_CREDIT_MEMOS = "calculateDiscountOnCreditMemos"
    CALCULATE_DISCOUNT_ON_CREDIT_MEMOS_DESC = "calculateDiscountOnCreditMemos desc"
    CODE = "code"
    CODE_DESC = "code desc"
    DISCOUNT_DATE_CALCULATION = "discountDateCalculation"
    DISCOUNT_DATE_CALCULATION_DESC = "discountDateCalculation desc"
    DISCOUNT_PERCENT = "discountPercent"
    DISCOUNT_PERCENT_DESC = "discountPercent desc"
    DISPLAY_NAME = "displayName"
    DISPLAY_NAME_DESC = "displayName desc"
    DUE_DATE_CALCULATION = "dueDateCalculation"
    DUE_DATE_CALCULATION_DESC = "dueDateCalculation desc"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    LAST_MODIFIED_DATE_TIME_DESC = "lastModifiedDateTime desc"

class Enum129(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CALCULATE_DISCOUNT_ON_CREDIT_MEMOS = "calculateDiscountOnCreditMemos"
    CODE = "code"
    DISCOUNT_DATE_CALCULATION = "discountDateCalculation"
    DISCOUNT_PERCENT = "discountPercent"
    DISPLAY_NAME = "displayName"
    DUE_DATE_CALCULATION = "dueDateCalculation"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"

class Enum13(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    AGED_AS_OF_DATE = "agedAsOfDate"
    BALANCE_DUE = "balanceDue"
    CURRENCY_CODE = "currencyCode"
    CURRENT_AMOUNT = "currentAmount"
    CUSTOMER_NUMBER = "customerNumber"
    NAME = "name"
    PERIOD1_AMOUNT = "period1Amount"
    PERIOD2_AMOUNT = "period2Amount"
    PERIOD3_AMOUNT = "period3Amount"
    PERIOD_LENGTH_FILTER = "periodLengthFilter"

class Enum130(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CALCULATE_DISCOUNT_ON_CREDIT_MEMOS = "calculateDiscountOnCreditMemos"
    CODE = "code"
    DISCOUNT_DATE_CALCULATION = "discountDateCalculation"
    DISCOUNT_PERCENT = "discountPercent"
    DISPLAY_NAME = "displayName"
    DUE_DATE_CALCULATION = "dueDateCalculation"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"

class Enum131(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    CONTENT = "content"
    CONTENT_DESC = "content desc"
    CONTENT_TYPE = "contentType"
    CONTENT_TYPE_DESC = "contentType desc"
    HEIGHT = "height"
    HEIGHT_DESC = "height desc"
    WIDTH = "width"
    WIDTH_DESC = "width desc"

class Enum132(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CONTENT = "content"
    CONTENT_TYPE = "contentType"
    HEIGHT = "height"
    WIDTH = "width"

class Enum133(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CONTENT = "content"
    CONTENT_TYPE = "contentType"
    HEIGHT = "height"
    WIDTH = "width"

class Enum134(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    ACCOUNT_ID = "accountId"
    ACCOUNT_ID_DESC = "accountId desc"
    AMOUNT_EXCLUDING_TAX = "amountExcludingTax"
    AMOUNT_EXCLUDING_TAX_DESC = "amountExcludingTax desc"
    AMOUNT_INCLUDING_TAX = "amountIncludingTax"
    AMOUNT_INCLUDING_TAX_DESC = "amountIncludingTax desc"
    DESCRIPTION = "description"
    DESCRIPTION_DESC = "description desc"
    DISCOUNT_AMOUNT = "discountAmount"
    DISCOUNT_AMOUNT_DESC = "discountAmount desc"
    DISCOUNT_APPLIED_BEFORE_TAX = "discountAppliedBeforeTax"
    DISCOUNT_APPLIED_BEFORE_TAX_DESC = "discountAppliedBeforeTax desc"
    DISCOUNT_PERCENT = "discountPercent"
    DISCOUNT_PERCENT_DESC = "discountPercent desc"
    DOCUMENT_ID = "documentId"
    DOCUMENT_ID_DESC = "documentId desc"
    EXPECTED_RECEIPT_DATE = "expectedReceiptDate"
    EXPECTED_RECEIPT_DATE_DESC = "expectedReceiptDate desc"
    INVOICE_DISCOUNT_ALLOCATION = "invoiceDiscountAllocation"
    INVOICE_DISCOUNT_ALLOCATION_DESC = "invoiceDiscountAllocation desc"
    ITEM_ID = "itemId"
    ITEM_ID_DESC = "itemId desc"
    LINE_TYPE = "lineType"
    LINE_TYPE_DESC = "lineType desc"
    NET_AMOUNT = "netAmount"
    NET_AMOUNT_DESC = "netAmount desc"
    NET_AMOUNT_INCLUDING_TAX = "netAmountIncludingTax"
    NET_AMOUNT_INCLUDING_TAX_DESC = "netAmountIncludingTax desc"
    NET_TAX_AMOUNT = "netTaxAmount"
    NET_TAX_AMOUNT_DESC = "netTaxAmount desc"
    QUANTITY = "quantity"
    QUANTITY_DESC = "quantity desc"
    SEQUENCE = "sequence"
    SEQUENCE_DESC = "sequence desc"
    TAX_CODE = "taxCode"
    TAX_CODE_DESC = "taxCode desc"
    TAX_PERCENT = "taxPercent"
    TAX_PERCENT_DESC = "taxPercent desc"
    TOTAL_TAX_AMOUNT = "totalTaxAmount"
    TOTAL_TAX_AMOUNT_DESC = "totalTaxAmount desc"
    UNIT_COST = "unitCost"
    UNIT_COST_DESC = "unitCost desc"

class Enum135(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ACCOUNT_ID = "accountId"
    AMOUNT_EXCLUDING_TAX = "amountExcludingTax"
    AMOUNT_INCLUDING_TAX = "amountIncludingTax"
    DESCRIPTION = "description"
    DISCOUNT_AMOUNT = "discountAmount"
    DISCOUNT_APPLIED_BEFORE_TAX = "discountAppliedBeforeTax"
    DISCOUNT_PERCENT = "discountPercent"
    DOCUMENT_ID = "documentId"
    EXPECTED_RECEIPT_DATE = "expectedReceiptDate"
    INVOICE_DISCOUNT_ALLOCATION = "invoiceDiscountAllocation"
    ITEM_ID = "itemId"
    LINE_TYPE = "lineType"
    NET_AMOUNT = "netAmount"
    NET_AMOUNT_INCLUDING_TAX = "netAmountIncludingTax"
    NET_TAX_AMOUNT = "netTaxAmount"
    QUANTITY = "quantity"
    SEQUENCE = "sequence"
    TAX_CODE = "taxCode"
    TAX_PERCENT = "taxPercent"
    TOTAL_TAX_AMOUNT = "totalTaxAmount"
    UNIT_COST = "unitCost"
    ACCOUNT = "account"
    ITEM = "item"

class Enum136(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    ACCOUNT = "account"
    ITEM = "item"

class Enum137(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ACCOUNT_ID = "accountId"
    AMOUNT_EXCLUDING_TAX = "amountExcludingTax"
    AMOUNT_INCLUDING_TAX = "amountIncludingTax"
    DESCRIPTION = "description"
    DISCOUNT_AMOUNT = "discountAmount"
    DISCOUNT_APPLIED_BEFORE_TAX = "discountAppliedBeforeTax"
    DISCOUNT_PERCENT = "discountPercent"
    DOCUMENT_ID = "documentId"
    EXPECTED_RECEIPT_DATE = "expectedReceiptDate"
    INVOICE_DISCOUNT_ALLOCATION = "invoiceDiscountAllocation"
    ITEM_ID = "itemId"
    LINE_TYPE = "lineType"
    NET_AMOUNT = "netAmount"
    NET_AMOUNT_INCLUDING_TAX = "netAmountIncludingTax"
    NET_TAX_AMOUNT = "netTaxAmount"
    QUANTITY = "quantity"
    SEQUENCE = "sequence"
    TAX_CODE = "taxCode"
    TAX_PERCENT = "taxPercent"
    TOTAL_TAX_AMOUNT = "totalTaxAmount"
    UNIT_COST = "unitCost"
    ACCOUNT = "account"
    ITEM = "item"

class Enum138(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    ACCOUNT = "account"
    ITEM = "item"

class Enum139(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    BLOCKED = "blocked"
    CATEGORY = "category"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    NUMBER = "number"
    SUB_CATEGORY = "subCategory"

class Enum14(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    AGED_AS_OF_DATE = "agedAsOfDate"
    BALANCE_DUE = "balanceDue"
    CURRENCY_CODE = "currencyCode"
    CURRENT_AMOUNT = "currentAmount"
    CUSTOMER_NUMBER = "customerNumber"
    NAME = "name"
    PERIOD1_AMOUNT = "period1Amount"
    PERIOD2_AMOUNT = "period2Amount"
    PERIOD3_AMOUNT = "period3Amount"
    PERIOD_LENGTH_FILTER = "periodLengthFilter"

class Enum140(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    BASE_UNIT_OF_MEASURE_ID = "baseUnitOfMeasureId"
    BLOCKED = "blocked"
    DISPLAY_NAME = "displayName"
    GTIN = "gtin"
    INVENTORY = "inventory"
    ITEM_CATEGORY_CODE = "itemCategoryCode"
    ITEM_CATEGORY_ID = "itemCategoryId"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    NUMBER = "number"
    PRICE_INCLUDES_TAX = "priceIncludesTax"
    TAX_GROUP_CODE = "taxGroupCode"
    TAX_GROUP_ID = "taxGroupId"
    TYPE = "type"
    UNIT_COST = "unitCost"
    UNIT_PRICE = "unitPrice"
    ITEM_CATEGORY = "itemCategory"
    PICTURE = "picture"

class Enum141(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    ITEM_CATEGORY = "itemCategory"
    PICTURE = "picture"

class Enum142(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CODE = "code"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"

class Enum143(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    CONTENT = "content"
    CONTENT_DESC = "content desc"
    CONTENT_TYPE = "contentType"
    CONTENT_TYPE_DESC = "contentType desc"
    HEIGHT = "height"
    HEIGHT_DESC = "height desc"
    WIDTH = "width"
    WIDTH_DESC = "width desc"

class Enum144(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CONTENT = "content"
    CONTENT_TYPE = "contentType"
    HEIGHT = "height"
    WIDTH = "width"

class Enum145(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CONTENT = "content"
    CONTENT_TYPE = "contentType"
    HEIGHT = "height"
    WIDTH = "width"

class Enum146(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    BUY_FROM_ADDRESS = "buyFromAddress"
    BUY_FROM_ADDRESS_DESC = "buyFromAddress desc"
    CURRENCY_CODE = "currencyCode"
    CURRENCY_CODE_DESC = "currencyCode desc"
    CURRENCY_ID = "currencyId"
    CURRENCY_ID_DESC = "currencyId desc"
    DISCOUNT_AMOUNT = "discountAmount"
    DISCOUNT_AMOUNT_DESC = "discountAmount desc"
    DISCOUNT_APPLIED_BEFORE_TAX = "discountAppliedBeforeTax"
    DISCOUNT_APPLIED_BEFORE_TAX_DESC = "discountAppliedBeforeTax desc"
    DUE_DATE = "dueDate"
    DUE_DATE_DESC = "dueDate desc"
    INVOICE_DATE = "invoiceDate"
    INVOICE_DATE_DESC = "invoiceDate desc"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    LAST_MODIFIED_DATE_TIME_DESC = "lastModifiedDateTime desc"
    NUMBER = "number"
    NUMBER_DESC = "number desc"
    PAY_TO_ADDRESS = "payToAddress"
    PAY_TO_ADDRESS_DESC = "payToAddress desc"
    PAY_TO_CONTACT = "payToContact"
    PAY_TO_CONTACT_DESC = "payToContact desc"
    PAY_TO_NAME = "payToName"
    PAY_TO_NAME_DESC = "payToName desc"
    PAY_TO_VENDOR_ID = "payToVendorId"
    PAY_TO_VENDOR_ID_DESC = "payToVendorId desc"
    PAY_TO_VENDOR_NUMBER = "payToVendorNumber"
    PAY_TO_VENDOR_NUMBER_DESC = "payToVendorNumber desc"
    PRICES_INCLUDE_TAX = "pricesIncludeTax"
    PRICES_INCLUDE_TAX_DESC = "pricesIncludeTax desc"
    SHIP_TO_ADDRESS = "shipToAddress"
    SHIP_TO_ADDRESS_DESC = "shipToAddress desc"
    SHIP_TO_CONTACT = "shipToContact"
    SHIP_TO_CONTACT_DESC = "shipToContact desc"
    SHIP_TO_NAME = "shipToName"
    SHIP_TO_NAME_DESC = "shipToName desc"
    STATUS = "status"
    STATUS_DESC = "status desc"
    TOTAL_AMOUNT_EXCLUDING_TAX = "totalAmountExcludingTax"
    TOTAL_AMOUNT_EXCLUDING_TAX_DESC = "totalAmountExcludingTax desc"
    TOTAL_AMOUNT_INCLUDING_TAX = "totalAmountIncludingTax"
    TOTAL_AMOUNT_INCLUDING_TAX_DESC = "totalAmountIncludingTax desc"
    TOTAL_TAX_AMOUNT = "totalTaxAmount"
    TOTAL_TAX_AMOUNT_DESC = "totalTaxAmount desc"
    VENDOR_ID = "vendorId"
    VENDOR_ID_DESC = "vendorId desc"
    VENDOR_INVOICE_NUMBER = "vendorInvoiceNumber"
    VENDOR_INVOICE_NUMBER_DESC = "vendorInvoiceNumber desc"
    VENDOR_NAME = "vendorName"
    VENDOR_NAME_DESC = "vendorName desc"
    VENDOR_NUMBER = "vendorNumber"
    VENDOR_NUMBER_DESC = "vendorNumber desc"

class Enum147(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    BUY_FROM_ADDRESS = "buyFromAddress"
    CURRENCY_CODE = "currencyCode"
    CURRENCY_ID = "currencyId"
    DISCOUNT_AMOUNT = "discountAmount"
    DISCOUNT_APPLIED_BEFORE_TAX = "discountAppliedBeforeTax"
    DUE_DATE = "dueDate"
    INVOICE_DATE = "invoiceDate"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    NUMBER = "number"
    PAY_TO_ADDRESS = "payToAddress"
    PAY_TO_CONTACT = "payToContact"
    PAY_TO_NAME = "payToName"
    PAY_TO_VENDOR_ID = "payToVendorId"
    PAY_TO_VENDOR_NUMBER = "payToVendorNumber"
    PRICES_INCLUDE_TAX = "pricesIncludeTax"
    SHIP_TO_ADDRESS = "shipToAddress"
    SHIP_TO_CONTACT = "shipToContact"
    SHIP_TO_NAME = "shipToName"
    STATUS = "status"
    TOTAL_AMOUNT_EXCLUDING_TAX = "totalAmountExcludingTax"
    TOTAL_AMOUNT_INCLUDING_TAX = "totalAmountIncludingTax"
    TOTAL_TAX_AMOUNT = "totalTaxAmount"
    VENDOR_ID = "vendorId"
    VENDOR_INVOICE_NUMBER = "vendorInvoiceNumber"
    VENDOR_NAME = "vendorName"
    VENDOR_NUMBER = "vendorNumber"
    CURRENCY = "currency"
    PURCHASE_INVOICE_LINES = "purchaseInvoiceLines"
    VENDOR = "vendor"

class Enum148(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    CURRENCY = "currency"
    PURCHASE_INVOICE_LINES = "purchaseInvoiceLines"
    VENDOR = "vendor"

class Enum149(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    BUY_FROM_ADDRESS = "buyFromAddress"
    CURRENCY_CODE = "currencyCode"
    CURRENCY_ID = "currencyId"
    DISCOUNT_AMOUNT = "discountAmount"
    DISCOUNT_APPLIED_BEFORE_TAX = "discountAppliedBeforeTax"
    DUE_DATE = "dueDate"
    INVOICE_DATE = "invoiceDate"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    NUMBER = "number"
    PAY_TO_ADDRESS = "payToAddress"
    PAY_TO_CONTACT = "payToContact"
    PAY_TO_NAME = "payToName"
    PAY_TO_VENDOR_ID = "payToVendorId"
    PAY_TO_VENDOR_NUMBER = "payToVendorNumber"
    PRICES_INCLUDE_TAX = "pricesIncludeTax"
    SHIP_TO_ADDRESS = "shipToAddress"
    SHIP_TO_CONTACT = "shipToContact"
    SHIP_TO_NAME = "shipToName"
    STATUS = "status"
    TOTAL_AMOUNT_EXCLUDING_TAX = "totalAmountExcludingTax"
    TOTAL_AMOUNT_INCLUDING_TAX = "totalAmountIncludingTax"
    TOTAL_TAX_AMOUNT = "totalTaxAmount"
    VENDOR_ID = "vendorId"
    VENDOR_INVOICE_NUMBER = "vendorInvoiceNumber"
    VENDOR_NAME = "vendorName"
    VENDOR_NUMBER = "vendorNumber"
    CURRENCY = "currency"
    PURCHASE_INVOICE_LINES = "purchaseInvoiceLines"
    VENDOR = "vendor"

class Enum15(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    ADDRESS = "address"
    ADDRESS_DESC = "address desc"
    CURRENCY_CODE = "currencyCode"
    CURRENCY_CODE_DESC = "currencyCode desc"
    CURRENT_FISCAL_YEAR_START_DATE = "currentFiscalYearStartDate"
    CURRENT_FISCAL_YEAR_START_DATE_DESC = "currentFiscalYearStartDate desc"
    DISPLAY_NAME = "displayName"
    DISPLAY_NAME_DESC = "displayName desc"
    EMAIL = "email"
    EMAIL_DESC = "email desc"
    FAX_NUMBER = "faxNumber"
    FAX_NUMBER_DESC = "faxNumber desc"
    INDUSTRY = "industry"
    INDUSTRY_DESC = "industry desc"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    LAST_MODIFIED_DATE_TIME_DESC = "lastModifiedDateTime desc"
    PHONE_NUMBER = "phoneNumber"
    PHONE_NUMBER_DESC = "phoneNumber desc"
    PICTURE = "picture"
    PICTURE_DESC = "picture desc"
    TAX_REGISTRATION_NUMBER = "taxRegistrationNumber"
    TAX_REGISTRATION_NUMBER_DESC = "taxRegistrationNumber desc"
    WEBSITE = "website"
    WEBSITE_DESC = "website desc"

class Enum150(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    CURRENCY = "currency"
    PURCHASE_INVOICE_LINES = "purchaseInvoiceLines"
    VENDOR = "vendor"

class Enum151(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    AMOUNT_DECIMAL_PLACES = "amountDecimalPlaces"
    AMOUNT_ROUNDING_PRECISION = "amountRoundingPrecision"
    CODE = "code"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    SYMBOL = "symbol"

class Enum152(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    ACCOUNT_ID = "accountId"
    ACCOUNT_ID_DESC = "accountId desc"
    AMOUNT_EXCLUDING_TAX = "amountExcludingTax"
    AMOUNT_EXCLUDING_TAX_DESC = "amountExcludingTax desc"
    AMOUNT_INCLUDING_TAX = "amountIncludingTax"
    AMOUNT_INCLUDING_TAX_DESC = "amountIncludingTax desc"
    DESCRIPTION = "description"
    DESCRIPTION_DESC = "description desc"
    DISCOUNT_AMOUNT = "discountAmount"
    DISCOUNT_AMOUNT_DESC = "discountAmount desc"
    DISCOUNT_APPLIED_BEFORE_TAX = "discountAppliedBeforeTax"
    DISCOUNT_APPLIED_BEFORE_TAX_DESC = "discountAppliedBeforeTax desc"
    DISCOUNT_PERCENT = "discountPercent"
    DISCOUNT_PERCENT_DESC = "discountPercent desc"
    DOCUMENT_ID = "documentId"
    DOCUMENT_ID_DESC = "documentId desc"
    EXPECTED_RECEIPT_DATE = "expectedReceiptDate"
    EXPECTED_RECEIPT_DATE_DESC = "expectedReceiptDate desc"
    INVOICE_DISCOUNT_ALLOCATION = "invoiceDiscountAllocation"
    INVOICE_DISCOUNT_ALLOCATION_DESC = "invoiceDiscountAllocation desc"
    ITEM_ID = "itemId"
    ITEM_ID_DESC = "itemId desc"
    LINE_TYPE = "lineType"
    LINE_TYPE_DESC = "lineType desc"
    NET_AMOUNT = "netAmount"
    NET_AMOUNT_DESC = "netAmount desc"
    NET_AMOUNT_INCLUDING_TAX = "netAmountIncludingTax"
    NET_AMOUNT_INCLUDING_TAX_DESC = "netAmountIncludingTax desc"
    NET_TAX_AMOUNT = "netTaxAmount"
    NET_TAX_AMOUNT_DESC = "netTaxAmount desc"
    QUANTITY = "quantity"
    QUANTITY_DESC = "quantity desc"
    SEQUENCE = "sequence"
    SEQUENCE_DESC = "sequence desc"
    TAX_CODE = "taxCode"
    TAX_CODE_DESC = "taxCode desc"
    TAX_PERCENT = "taxPercent"
    TAX_PERCENT_DESC = "taxPercent desc"
    TOTAL_TAX_AMOUNT = "totalTaxAmount"
    TOTAL_TAX_AMOUNT_DESC = "totalTaxAmount desc"
    UNIT_COST = "unitCost"
    UNIT_COST_DESC = "unitCost desc"

class Enum153(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ACCOUNT_ID = "accountId"
    AMOUNT_EXCLUDING_TAX = "amountExcludingTax"
    AMOUNT_INCLUDING_TAX = "amountIncludingTax"
    DESCRIPTION = "description"
    DISCOUNT_AMOUNT = "discountAmount"
    DISCOUNT_APPLIED_BEFORE_TAX = "discountAppliedBeforeTax"
    DISCOUNT_PERCENT = "discountPercent"
    DOCUMENT_ID = "documentId"
    EXPECTED_RECEIPT_DATE = "expectedReceiptDate"
    INVOICE_DISCOUNT_ALLOCATION = "invoiceDiscountAllocation"
    ITEM_ID = "itemId"
    LINE_TYPE = "lineType"
    NET_AMOUNT = "netAmount"
    NET_AMOUNT_INCLUDING_TAX = "netAmountIncludingTax"
    NET_TAX_AMOUNT = "netTaxAmount"
    QUANTITY = "quantity"
    SEQUENCE = "sequence"
    TAX_CODE = "taxCode"
    TAX_PERCENT = "taxPercent"
    TOTAL_TAX_AMOUNT = "totalTaxAmount"
    UNIT_COST = "unitCost"
    ACCOUNT = "account"
    ITEM = "item"

class Enum154(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    ACCOUNT = "account"
    ITEM = "item"

class Enum155(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ACCOUNT_ID = "accountId"
    AMOUNT_EXCLUDING_TAX = "amountExcludingTax"
    AMOUNT_INCLUDING_TAX = "amountIncludingTax"
    DESCRIPTION = "description"
    DISCOUNT_AMOUNT = "discountAmount"
    DISCOUNT_APPLIED_BEFORE_TAX = "discountAppliedBeforeTax"
    DISCOUNT_PERCENT = "discountPercent"
    DOCUMENT_ID = "documentId"
    EXPECTED_RECEIPT_DATE = "expectedReceiptDate"
    INVOICE_DISCOUNT_ALLOCATION = "invoiceDiscountAllocation"
    ITEM_ID = "itemId"
    LINE_TYPE = "lineType"
    NET_AMOUNT = "netAmount"
    NET_AMOUNT_INCLUDING_TAX = "netAmountIncludingTax"
    NET_TAX_AMOUNT = "netTaxAmount"
    QUANTITY = "quantity"
    SEQUENCE = "sequence"
    TAX_CODE = "taxCode"
    TAX_PERCENT = "taxPercent"
    TOTAL_TAX_AMOUNT = "totalTaxAmount"
    UNIT_COST = "unitCost"
    ACCOUNT = "account"
    ITEM = "item"

class Enum156(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    ACCOUNT = "account"
    ITEM = "item"

class Enum157(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    BLOCKED = "blocked"
    CATEGORY = "category"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    NUMBER = "number"
    SUB_CATEGORY = "subCategory"

class Enum158(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    BASE_UNIT_OF_MEASURE_ID = "baseUnitOfMeasureId"
    BLOCKED = "blocked"
    DISPLAY_NAME = "displayName"
    GTIN = "gtin"
    INVENTORY = "inventory"
    ITEM_CATEGORY_CODE = "itemCategoryCode"
    ITEM_CATEGORY_ID = "itemCategoryId"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    NUMBER = "number"
    PRICE_INCLUDES_TAX = "priceIncludesTax"
    TAX_GROUP_CODE = "taxGroupCode"
    TAX_GROUP_ID = "taxGroupId"
    TYPE = "type"
    UNIT_COST = "unitCost"
    UNIT_PRICE = "unitPrice"
    ITEM_CATEGORY = "itemCategory"
    PICTURE = "picture"

class Enum159(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    ITEM_CATEGORY = "itemCategory"
    PICTURE = "picture"

class Enum16(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ADDRESS = "address"
    CURRENCY_CODE = "currencyCode"
    CURRENT_FISCAL_YEAR_START_DATE = "currentFiscalYearStartDate"
    DISPLAY_NAME = "displayName"
    EMAIL = "email"
    FAX_NUMBER = "faxNumber"
    INDUSTRY = "industry"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    PHONE_NUMBER = "phoneNumber"
    PICTURE = "picture"
    TAX_REGISTRATION_NUMBER = "taxRegistrationNumber"
    WEBSITE = "website"

class Enum160(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CODE = "code"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"

class Enum161(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    CONTENT = "content"
    CONTENT_DESC = "content desc"
    CONTENT_TYPE = "contentType"
    CONTENT_TYPE_DESC = "contentType desc"
    HEIGHT = "height"
    HEIGHT_DESC = "height desc"
    WIDTH = "width"
    WIDTH_DESC = "width desc"

class Enum162(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CONTENT = "content"
    CONTENT_TYPE = "contentType"
    HEIGHT = "height"
    WIDTH = "width"

class Enum163(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CONTENT = "content"
    CONTENT_TYPE = "contentType"
    HEIGHT = "height"
    WIDTH = "width"

class Enum164(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ADDRESS = "address"
    BALANCE = "balance"
    BLOCKED = "blocked"
    CURRENCY_CODE = "currencyCode"
    CURRENCY_ID = "currencyId"
    DISPLAY_NAME = "displayName"
    EMAIL = "email"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    NUMBER = "number"
    PAYMENT_METHOD_ID = "paymentMethodId"
    PAYMENT_TERMS_ID = "paymentTermsId"
    PHONE_NUMBER = "phoneNumber"
    TAX_LIABLE = "taxLiable"
    TAX_REGISTRATION_NUMBER = "taxRegistrationNumber"
    WEBSITE = "website"
    CURRENCY = "currency"
    PAYMENT_METHOD = "paymentMethod"
    PAYMENT_TERM = "paymentTerm"
    PICTURE = "picture"

class Enum165(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    CURRENCY = "currency"
    PAYMENT_METHOD = "paymentMethod"
    PAYMENT_TERM = "paymentTerm"
    PICTURE = "picture"

class Enum166(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    AMOUNT_DECIMAL_PLACES = "amountDecimalPlaces"
    AMOUNT_ROUNDING_PRECISION = "amountRoundingPrecision"
    CODE = "code"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    SYMBOL = "symbol"

class Enum167(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CODE = "code"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"

class Enum168(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CALCULATE_DISCOUNT_ON_CREDIT_MEMOS = "calculateDiscountOnCreditMemos"
    CODE = "code"
    DISCOUNT_DATE_CALCULATION = "discountDateCalculation"
    DISCOUNT_PERCENT = "discountPercent"
    DISPLAY_NAME = "displayName"
    DUE_DATE_CALCULATION = "dueDateCalculation"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"

class Enum169(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    CONTENT = "content"
    CONTENT_DESC = "content desc"
    CONTENT_TYPE = "contentType"
    CONTENT_TYPE_DESC = "contentType desc"
    HEIGHT = "height"
    HEIGHT_DESC = "height desc"
    WIDTH = "width"
    WIDTH_DESC = "width desc"

class Enum17(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ADDRESS = "address"
    CURRENCY_CODE = "currencyCode"
    CURRENT_FISCAL_YEAR_START_DATE = "currentFiscalYearStartDate"
    DISPLAY_NAME = "displayName"
    EMAIL = "email"
    FAX_NUMBER = "faxNumber"
    INDUSTRY = "industry"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    PHONE_NUMBER = "phoneNumber"
    PICTURE = "picture"
    TAX_REGISTRATION_NUMBER = "taxRegistrationNumber"
    WEBSITE = "website"

class Enum170(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CONTENT = "content"
    CONTENT_TYPE = "contentType"
    HEIGHT = "height"
    WIDTH = "width"

class Enum171(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CONTENT = "content"
    CONTENT_TYPE = "contentType"
    HEIGHT = "height"
    WIDTH = "width"

class Enum172(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    ACCOUNT_ID = "accountId"
    ACCOUNT_ID_DESC = "accountId desc"
    AMOUNT_EXCLUDING_TAX = "amountExcludingTax"
    AMOUNT_EXCLUDING_TAX_DESC = "amountExcludingTax desc"
    AMOUNT_INCLUDING_TAX = "amountIncludingTax"
    AMOUNT_INCLUDING_TAX_DESC = "amountIncludingTax desc"
    DESCRIPTION = "description"
    DESCRIPTION_DESC = "description desc"
    DISCOUNT_AMOUNT = "discountAmount"
    DISCOUNT_AMOUNT_DESC = "discountAmount desc"
    DISCOUNT_APPLIED_BEFORE_TAX = "discountAppliedBeforeTax"
    DISCOUNT_APPLIED_BEFORE_TAX_DESC = "discountAppliedBeforeTax desc"
    DISCOUNT_PERCENT = "discountPercent"
    DISCOUNT_PERCENT_DESC = "discountPercent desc"
    DOCUMENT_ID = "documentId"
    DOCUMENT_ID_DESC = "documentId desc"
    INVOICE_DISCOUNT_ALLOCATION = "invoiceDiscountAllocation"
    INVOICE_DISCOUNT_ALLOCATION_DESC = "invoiceDiscountAllocation desc"
    ITEM_ID = "itemId"
    ITEM_ID_DESC = "itemId desc"
    LINE_TYPE = "lineType"
    LINE_TYPE_DESC = "lineType desc"
    NET_AMOUNT = "netAmount"
    NET_AMOUNT_DESC = "netAmount desc"
    NET_AMOUNT_INCLUDING_TAX = "netAmountIncludingTax"
    NET_AMOUNT_INCLUDING_TAX_DESC = "netAmountIncludingTax desc"
    NET_TAX_AMOUNT = "netTaxAmount"
    NET_TAX_AMOUNT_DESC = "netTaxAmount desc"
    QUANTITY = "quantity"
    QUANTITY_DESC = "quantity desc"
    SEQUENCE = "sequence"
    SEQUENCE_DESC = "sequence desc"
    SHIPMENT_DATE = "shipmentDate"
    SHIPMENT_DATE_DESC = "shipmentDate desc"
    TAX_CODE = "taxCode"
    TAX_CODE_DESC = "taxCode desc"
    TAX_PERCENT = "taxPercent"
    TAX_PERCENT_DESC = "taxPercent desc"
    TOTAL_TAX_AMOUNT = "totalTaxAmount"
    TOTAL_TAX_AMOUNT_DESC = "totalTaxAmount desc"
    UNIT_OF_MEASURE_ID = "unitOfMeasureId"
    UNIT_OF_MEASURE_ID_DESC = "unitOfMeasureId desc"
    UNIT_PRICE = "unitPrice"
    UNIT_PRICE_DESC = "unitPrice desc"

class Enum173(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ACCOUNT_ID = "accountId"
    AMOUNT_EXCLUDING_TAX = "amountExcludingTax"
    AMOUNT_INCLUDING_TAX = "amountIncludingTax"
    DESCRIPTION = "description"
    DISCOUNT_AMOUNT = "discountAmount"
    DISCOUNT_APPLIED_BEFORE_TAX = "discountAppliedBeforeTax"
    DISCOUNT_PERCENT = "discountPercent"
    DOCUMENT_ID = "documentId"
    INVOICE_DISCOUNT_ALLOCATION = "invoiceDiscountAllocation"
    ITEM_ID = "itemId"
    LINE_TYPE = "lineType"
    NET_AMOUNT = "netAmount"
    NET_AMOUNT_INCLUDING_TAX = "netAmountIncludingTax"
    NET_TAX_AMOUNT = "netTaxAmount"
    QUANTITY = "quantity"
    SEQUENCE = "sequence"
    SHIPMENT_DATE = "shipmentDate"
    TAX_CODE = "taxCode"
    TAX_PERCENT = "taxPercent"
    TOTAL_TAX_AMOUNT = "totalTaxAmount"
    UNIT_OF_MEASURE_ID = "unitOfMeasureId"
    UNIT_PRICE = "unitPrice"
    ACCOUNT = "account"
    ITEM = "item"

class Enum174(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    ACCOUNT = "account"
    ITEM = "item"

class Enum175(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ACCOUNT_ID = "accountId"
    AMOUNT_EXCLUDING_TAX = "amountExcludingTax"
    AMOUNT_INCLUDING_TAX = "amountIncludingTax"
    DESCRIPTION = "description"
    DISCOUNT_AMOUNT = "discountAmount"
    DISCOUNT_APPLIED_BEFORE_TAX = "discountAppliedBeforeTax"
    DISCOUNT_PERCENT = "discountPercent"
    DOCUMENT_ID = "documentId"
    INVOICE_DISCOUNT_ALLOCATION = "invoiceDiscountAllocation"
    ITEM_ID = "itemId"
    LINE_TYPE = "lineType"
    NET_AMOUNT = "netAmount"
    NET_AMOUNT_INCLUDING_TAX = "netAmountIncludingTax"
    NET_TAX_AMOUNT = "netTaxAmount"
    QUANTITY = "quantity"
    SEQUENCE = "sequence"
    SHIPMENT_DATE = "shipmentDate"
    TAX_CODE = "taxCode"
    TAX_PERCENT = "taxPercent"
    TOTAL_TAX_AMOUNT = "totalTaxAmount"
    UNIT_OF_MEASURE_ID = "unitOfMeasureId"
    UNIT_PRICE = "unitPrice"
    ACCOUNT = "account"
    ITEM = "item"

class Enum176(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    ACCOUNT = "account"
    ITEM = "item"

class Enum177(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    BLOCKED = "blocked"
    CATEGORY = "category"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    NUMBER = "number"
    SUB_CATEGORY = "subCategory"

class Enum178(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    BASE_UNIT_OF_MEASURE_ID = "baseUnitOfMeasureId"
    BLOCKED = "blocked"
    DISPLAY_NAME = "displayName"
    GTIN = "gtin"
    INVENTORY = "inventory"
    ITEM_CATEGORY_CODE = "itemCategoryCode"
    ITEM_CATEGORY_ID = "itemCategoryId"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    NUMBER = "number"
    PRICE_INCLUDES_TAX = "priceIncludesTax"
    TAX_GROUP_CODE = "taxGroupCode"
    TAX_GROUP_ID = "taxGroupId"
    TYPE = "type"
    UNIT_COST = "unitCost"
    UNIT_PRICE = "unitPrice"
    ITEM_CATEGORY = "itemCategory"
    PICTURE = "picture"

class Enum179(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    ITEM_CATEGORY = "itemCategory"
    PICTURE = "picture"

class Enum18(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    ADDRESS_FORMAT = "addressFormat"
    ADDRESS_FORMAT_DESC = "addressFormat desc"
    CODE = "code"
    CODE_DESC = "code desc"
    DISPLAY_NAME = "displayName"
    DISPLAY_NAME_DESC = "displayName desc"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    LAST_MODIFIED_DATE_TIME_DESC = "lastModifiedDateTime desc"

class Enum180(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CODE = "code"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"

class Enum181(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    CONTENT = "content"
    CONTENT_DESC = "content desc"
    CONTENT_TYPE = "contentType"
    CONTENT_TYPE_DESC = "contentType desc"
    HEIGHT = "height"
    HEIGHT_DESC = "height desc"
    WIDTH = "width"
    WIDTH_DESC = "width desc"

class Enum182(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CONTENT = "content"
    CONTENT_TYPE = "contentType"
    HEIGHT = "height"
    WIDTH = "width"

class Enum183(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CONTENT = "content"
    CONTENT_TYPE = "contentType"
    HEIGHT = "height"
    WIDTH = "width"

class Enum184(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    BILLING_POSTAL_ADDRESS = "billingPostalAddress"
    BILLING_POSTAL_ADDRESS_DESC = "billingPostalAddress desc"
    BILL_TO_CUSTOMER_ID = "billToCustomerId"
    BILL_TO_CUSTOMER_ID_DESC = "billToCustomerId desc"
    BILL_TO_CUSTOMER_NUMBER = "billToCustomerNumber"
    BILL_TO_CUSTOMER_NUMBER_DESC = "billToCustomerNumber desc"
    BILL_TO_NAME = "billToName"
    BILL_TO_NAME_DESC = "billToName desc"
    CREDIT_MEMO_DATE = "creditMemoDate"
    CREDIT_MEMO_DATE_DESC = "creditMemoDate desc"
    CURRENCY_CODE = "currencyCode"
    CURRENCY_CODE_DESC = "currencyCode desc"
    CURRENCY_ID = "currencyId"
    CURRENCY_ID_DESC = "currencyId desc"
    CUSTOMER_ID = "customerId"
    CUSTOMER_ID_DESC = "customerId desc"
    CUSTOMER_NAME = "customerName"
    CUSTOMER_NAME_DESC = "customerName desc"
    CUSTOMER_NUMBER = "customerNumber"
    CUSTOMER_NUMBER_DESC = "customerNumber desc"
    DISCOUNT_AMOUNT = "discountAmount"
    DISCOUNT_AMOUNT_DESC = "discountAmount desc"
    DISCOUNT_APPLIED_BEFORE_TAX = "discountAppliedBeforeTax"
    DISCOUNT_APPLIED_BEFORE_TAX_DESC = "discountAppliedBeforeTax desc"
    DUE_DATE = "dueDate"
    DUE_DATE_DESC = "dueDate desc"
    EMAIL = "email"
    EMAIL_DESC = "email desc"
    EXTERNAL_DOCUMENT_NUMBER = "externalDocumentNumber"
    EXTERNAL_DOCUMENT_NUMBER_DESC = "externalDocumentNumber desc"
    INVOICE_ID = "invoiceId"
    INVOICE_ID_DESC = "invoiceId desc"
    INVOICE_NUMBER = "invoiceNumber"
    INVOICE_NUMBER_DESC = "invoiceNumber desc"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    LAST_MODIFIED_DATE_TIME_DESC = "lastModifiedDateTime desc"
    NUMBER = "number"
    NUMBER_DESC = "number desc"
    PAYMENT_TERMS_ID = "paymentTermsId"
    PAYMENT_TERMS_ID_DESC = "paymentTermsId desc"
    PHONE_NUMBER = "phoneNumber"
    PHONE_NUMBER_DESC = "phoneNumber desc"
    PRICES_INCLUDE_TAX = "pricesIncludeTax"
    PRICES_INCLUDE_TAX_DESC = "pricesIncludeTax desc"
    SALESPERSON = "salesperson"
    SALESPERSON_DESC = "salesperson desc"
    SELLING_POSTAL_ADDRESS = "sellingPostalAddress"
    SELLING_POSTAL_ADDRESS_DESC = "sellingPostalAddress desc"
    STATUS = "status"
    STATUS_DESC = "status desc"
    TOTAL_AMOUNT_EXCLUDING_TAX = "totalAmountExcludingTax"
    TOTAL_AMOUNT_EXCLUDING_TAX_DESC = "totalAmountExcludingTax desc"
    TOTAL_AMOUNT_INCLUDING_TAX = "totalAmountIncludingTax"
    TOTAL_AMOUNT_INCLUDING_TAX_DESC = "totalAmountIncludingTax desc"
    TOTAL_TAX_AMOUNT = "totalTaxAmount"
    TOTAL_TAX_AMOUNT_DESC = "totalTaxAmount desc"

class Enum185(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    BILLING_POSTAL_ADDRESS = "billingPostalAddress"
    BILL_TO_CUSTOMER_ID = "billToCustomerId"
    BILL_TO_CUSTOMER_NUMBER = "billToCustomerNumber"
    BILL_TO_NAME = "billToName"
    CREDIT_MEMO_DATE = "creditMemoDate"
    CURRENCY_CODE = "currencyCode"
    CURRENCY_ID = "currencyId"
    CUSTOMER_ID = "customerId"
    CUSTOMER_NAME = "customerName"
    CUSTOMER_NUMBER = "customerNumber"
    DISCOUNT_AMOUNT = "discountAmount"
    DISCOUNT_APPLIED_BEFORE_TAX = "discountAppliedBeforeTax"
    DUE_DATE = "dueDate"
    EMAIL = "email"
    EXTERNAL_DOCUMENT_NUMBER = "externalDocumentNumber"
    INVOICE_ID = "invoiceId"
    INVOICE_NUMBER = "invoiceNumber"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    NUMBER = "number"
    PAYMENT_TERMS_ID = "paymentTermsId"
    PHONE_NUMBER = "phoneNumber"
    PRICES_INCLUDE_TAX = "pricesIncludeTax"
    SALESPERSON = "salesperson"
    SELLING_POSTAL_ADDRESS = "sellingPostalAddress"
    STATUS = "status"
    TOTAL_AMOUNT_EXCLUDING_TAX = "totalAmountExcludingTax"
    TOTAL_AMOUNT_INCLUDING_TAX = "totalAmountIncludingTax"
    TOTAL_TAX_AMOUNT = "totalTaxAmount"
    CURRENCY = "currency"
    CUSTOMER = "customer"
    PAYMENT_TERM = "paymentTerm"
    SALES_CREDIT_MEMO_LINES = "salesCreditMemoLines"

class Enum186(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    CURRENCY = "currency"
    CUSTOMER = "customer"
    PAYMENT_TERM = "paymentTerm"
    SALES_CREDIT_MEMO_LINES = "salesCreditMemoLines"

class Enum187(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    BILLING_POSTAL_ADDRESS = "billingPostalAddress"
    BILL_TO_CUSTOMER_ID = "billToCustomerId"
    BILL_TO_CUSTOMER_NUMBER = "billToCustomerNumber"
    BILL_TO_NAME = "billToName"
    CREDIT_MEMO_DATE = "creditMemoDate"
    CURRENCY_CODE = "currencyCode"
    CURRENCY_ID = "currencyId"
    CUSTOMER_ID = "customerId"
    CUSTOMER_NAME = "customerName"
    CUSTOMER_NUMBER = "customerNumber"
    DISCOUNT_AMOUNT = "discountAmount"
    DISCOUNT_APPLIED_BEFORE_TAX = "discountAppliedBeforeTax"
    DUE_DATE = "dueDate"
    EMAIL = "email"
    EXTERNAL_DOCUMENT_NUMBER = "externalDocumentNumber"
    INVOICE_ID = "invoiceId"
    INVOICE_NUMBER = "invoiceNumber"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    NUMBER = "number"
    PAYMENT_TERMS_ID = "paymentTermsId"
    PHONE_NUMBER = "phoneNumber"
    PRICES_INCLUDE_TAX = "pricesIncludeTax"
    SALESPERSON = "salesperson"
    SELLING_POSTAL_ADDRESS = "sellingPostalAddress"
    STATUS = "status"
    TOTAL_AMOUNT_EXCLUDING_TAX = "totalAmountExcludingTax"
    TOTAL_AMOUNT_INCLUDING_TAX = "totalAmountIncludingTax"
    TOTAL_TAX_AMOUNT = "totalTaxAmount"
    CURRENCY = "currency"
    CUSTOMER = "customer"
    PAYMENT_TERM = "paymentTerm"
    SALES_CREDIT_MEMO_LINES = "salesCreditMemoLines"

class Enum188(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    CURRENCY = "currency"
    CUSTOMER = "customer"
    PAYMENT_TERM = "paymentTerm"
    SALES_CREDIT_MEMO_LINES = "salesCreditMemoLines"

class Enum189(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    AMOUNT_DECIMAL_PLACES = "amountDecimalPlaces"
    AMOUNT_ROUNDING_PRECISION = "amountRoundingPrecision"
    CODE = "code"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    SYMBOL = "symbol"

class Enum19(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ADDRESS_FORMAT = "addressFormat"
    CODE = "code"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"

class Enum190(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ADDRESS = "address"
    BLOCKED = "blocked"
    CURRENCY_CODE = "currencyCode"
    CURRENCY_ID = "currencyId"
    DISPLAY_NAME = "displayName"
    EMAIL = "email"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    NUMBER = "number"
    PAYMENT_METHOD_ID = "paymentMethodId"
    PAYMENT_TERMS_ID = "paymentTermsId"
    PHONE_NUMBER = "phoneNumber"
    SHIPMENT_METHOD_ID = "shipmentMethodId"
    TAX_AREA_DISPLAY_NAME = "taxAreaDisplayName"
    TAX_AREA_ID = "taxAreaId"
    TAX_LIABLE = "taxLiable"
    TAX_REGISTRATION_NUMBER = "taxRegistrationNumber"
    TYPE = "type"
    WEBSITE = "website"
    CURRENCY = "currency"
    PAYMENT_METHOD = "paymentMethod"
    PAYMENT_TERM = "paymentTerm"
    PICTURE = "picture"
    SHIPMENT_METHOD = "shipmentMethod"

class Enum191(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    CURRENCY = "currency"
    PAYMENT_METHOD = "paymentMethod"
    PAYMENT_TERM = "paymentTerm"
    PICTURE = "picture"
    SHIPMENT_METHOD = "shipmentMethod"

class Enum192(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    AMOUNT_DECIMAL_PLACES = "amountDecimalPlaces"
    AMOUNT_ROUNDING_PRECISION = "amountRoundingPrecision"
    CODE = "code"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    SYMBOL = "symbol"

class Enum193(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CODE = "code"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"

class Enum194(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CALCULATE_DISCOUNT_ON_CREDIT_MEMOS = "calculateDiscountOnCreditMemos"
    CODE = "code"
    DISCOUNT_DATE_CALCULATION = "discountDateCalculation"
    DISCOUNT_PERCENT = "discountPercent"
    DISPLAY_NAME = "displayName"
    DUE_DATE_CALCULATION = "dueDateCalculation"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"

class Enum195(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    CONTENT = "content"
    CONTENT_DESC = "content desc"
    CONTENT_TYPE = "contentType"
    CONTENT_TYPE_DESC = "contentType desc"
    HEIGHT = "height"
    HEIGHT_DESC = "height desc"
    WIDTH = "width"
    WIDTH_DESC = "width desc"

class Enum196(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CONTENT = "content"
    CONTENT_TYPE = "contentType"
    HEIGHT = "height"
    WIDTH = "width"

class Enum197(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CONTENT = "content"
    CONTENT_TYPE = "contentType"
    HEIGHT = "height"
    WIDTH = "width"

class Enum198(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CODE = "code"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"

class Enum199(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CALCULATE_DISCOUNT_ON_CREDIT_MEMOS = "calculateDiscountOnCreditMemos"
    CODE = "code"
    DISCOUNT_DATE_CALCULATION = "discountDateCalculation"
    DISCOUNT_PERCENT = "discountPercent"
    DISPLAY_NAME = "displayName"
    DUE_DATE_CALCULATION = "dueDateCalculation"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"

class Enum20(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ADDRESS_FORMAT = "addressFormat"
    CODE = "code"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"

class Enum200(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    ACCOUNT_ID = "accountId"
    ACCOUNT_ID_DESC = "accountId desc"
    AMOUNT_EXCLUDING_TAX = "amountExcludingTax"
    AMOUNT_EXCLUDING_TAX_DESC = "amountExcludingTax desc"
    AMOUNT_INCLUDING_TAX = "amountIncludingTax"
    AMOUNT_INCLUDING_TAX_DESC = "amountIncludingTax desc"
    DESCRIPTION = "description"
    DESCRIPTION_DESC = "description desc"
    DISCOUNT_AMOUNT = "discountAmount"
    DISCOUNT_AMOUNT_DESC = "discountAmount desc"
    DISCOUNT_APPLIED_BEFORE_TAX = "discountAppliedBeforeTax"
    DISCOUNT_APPLIED_BEFORE_TAX_DESC = "discountAppliedBeforeTax desc"
    DISCOUNT_PERCENT = "discountPercent"
    DISCOUNT_PERCENT_DESC = "discountPercent desc"
    DOCUMENT_ID = "documentId"
    DOCUMENT_ID_DESC = "documentId desc"
    INVOICE_DISCOUNT_ALLOCATION = "invoiceDiscountAllocation"
    INVOICE_DISCOUNT_ALLOCATION_DESC = "invoiceDiscountAllocation desc"
    ITEM_ID = "itemId"
    ITEM_ID_DESC = "itemId desc"
    LINE_TYPE = "lineType"
    LINE_TYPE_DESC = "lineType desc"
    NET_AMOUNT = "netAmount"
    NET_AMOUNT_DESC = "netAmount desc"
    NET_AMOUNT_INCLUDING_TAX = "netAmountIncludingTax"
    NET_AMOUNT_INCLUDING_TAX_DESC = "netAmountIncludingTax desc"
    NET_TAX_AMOUNT = "netTaxAmount"
    NET_TAX_AMOUNT_DESC = "netTaxAmount desc"
    QUANTITY = "quantity"
    QUANTITY_DESC = "quantity desc"
    SEQUENCE = "sequence"
    SEQUENCE_DESC = "sequence desc"
    SHIPMENT_DATE = "shipmentDate"
    SHIPMENT_DATE_DESC = "shipmentDate desc"
    TAX_CODE = "taxCode"
    TAX_CODE_DESC = "taxCode desc"
    TAX_PERCENT = "taxPercent"
    TAX_PERCENT_DESC = "taxPercent desc"
    TOTAL_TAX_AMOUNT = "totalTaxAmount"
    TOTAL_TAX_AMOUNT_DESC = "totalTaxAmount desc"
    UNIT_OF_MEASURE_ID = "unitOfMeasureId"
    UNIT_OF_MEASURE_ID_DESC = "unitOfMeasureId desc"
    UNIT_PRICE = "unitPrice"
    UNIT_PRICE_DESC = "unitPrice desc"

class Enum201(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ACCOUNT_ID = "accountId"
    AMOUNT_EXCLUDING_TAX = "amountExcludingTax"
    AMOUNT_INCLUDING_TAX = "amountIncludingTax"
    DESCRIPTION = "description"
    DISCOUNT_AMOUNT = "discountAmount"
    DISCOUNT_APPLIED_BEFORE_TAX = "discountAppliedBeforeTax"
    DISCOUNT_PERCENT = "discountPercent"
    DOCUMENT_ID = "documentId"
    INVOICE_DISCOUNT_ALLOCATION = "invoiceDiscountAllocation"
    ITEM_ID = "itemId"
    LINE_TYPE = "lineType"
    NET_AMOUNT = "netAmount"
    NET_AMOUNT_INCLUDING_TAX = "netAmountIncludingTax"
    NET_TAX_AMOUNT = "netTaxAmount"
    QUANTITY = "quantity"
    SEQUENCE = "sequence"
    SHIPMENT_DATE = "shipmentDate"
    TAX_CODE = "taxCode"
    TAX_PERCENT = "taxPercent"
    TOTAL_TAX_AMOUNT = "totalTaxAmount"
    UNIT_OF_MEASURE_ID = "unitOfMeasureId"
    UNIT_PRICE = "unitPrice"
    ACCOUNT = "account"
    ITEM = "item"

class Enum202(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    ACCOUNT = "account"
    ITEM = "item"

class Enum203(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ACCOUNT_ID = "accountId"
    AMOUNT_EXCLUDING_TAX = "amountExcludingTax"
    AMOUNT_INCLUDING_TAX = "amountIncludingTax"
    DESCRIPTION = "description"
    DISCOUNT_AMOUNT = "discountAmount"
    DISCOUNT_APPLIED_BEFORE_TAX = "discountAppliedBeforeTax"
    DISCOUNT_PERCENT = "discountPercent"
    DOCUMENT_ID = "documentId"
    INVOICE_DISCOUNT_ALLOCATION = "invoiceDiscountAllocation"
    ITEM_ID = "itemId"
    LINE_TYPE = "lineType"
    NET_AMOUNT = "netAmount"
    NET_AMOUNT_INCLUDING_TAX = "netAmountIncludingTax"
    NET_TAX_AMOUNT = "netTaxAmount"
    QUANTITY = "quantity"
    SEQUENCE = "sequence"
    SHIPMENT_DATE = "shipmentDate"
    TAX_CODE = "taxCode"
    TAX_PERCENT = "taxPercent"
    TOTAL_TAX_AMOUNT = "totalTaxAmount"
    UNIT_OF_MEASURE_ID = "unitOfMeasureId"
    UNIT_PRICE = "unitPrice"
    ACCOUNT = "account"
    ITEM = "item"

class Enum204(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    ACCOUNT = "account"
    ITEM = "item"

class Enum205(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    BLOCKED = "blocked"
    CATEGORY = "category"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    NUMBER = "number"
    SUB_CATEGORY = "subCategory"

class Enum206(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    BASE_UNIT_OF_MEASURE_ID = "baseUnitOfMeasureId"
    BLOCKED = "blocked"
    DISPLAY_NAME = "displayName"
    GTIN = "gtin"
    INVENTORY = "inventory"
    ITEM_CATEGORY_CODE = "itemCategoryCode"
    ITEM_CATEGORY_ID = "itemCategoryId"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    NUMBER = "number"
    PRICE_INCLUDES_TAX = "priceIncludesTax"
    TAX_GROUP_CODE = "taxGroupCode"
    TAX_GROUP_ID = "taxGroupId"
    TYPE = "type"
    UNIT_COST = "unitCost"
    UNIT_PRICE = "unitPrice"
    ITEM_CATEGORY = "itemCategory"
    PICTURE = "picture"

class Enum207(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    ITEM_CATEGORY = "itemCategory"
    PICTURE = "picture"

class Enum208(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CODE = "code"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"

class Enum209(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    CONTENT = "content"
    CONTENT_DESC = "content desc"
    CONTENT_TYPE = "contentType"
    CONTENT_TYPE_DESC = "contentType desc"
    HEIGHT = "height"
    HEIGHT_DESC = "height desc"
    WIDTH = "width"
    WIDTH_DESC = "width desc"

class Enum21(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    AMOUNT_DECIMAL_PLACES = "amountDecimalPlaces"
    AMOUNT_DECIMAL_PLACES_DESC = "amountDecimalPlaces desc"
    AMOUNT_ROUNDING_PRECISION = "amountRoundingPrecision"
    AMOUNT_ROUNDING_PRECISION_DESC = "amountRoundingPrecision desc"
    CODE = "code"
    CODE_DESC = "code desc"
    DISPLAY_NAME = "displayName"
    DISPLAY_NAME_DESC = "displayName desc"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    LAST_MODIFIED_DATE_TIME_DESC = "lastModifiedDateTime desc"
    SYMBOL = "symbol"
    SYMBOL_DESC = "symbol desc"

class Enum210(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CONTENT = "content"
    CONTENT_TYPE = "contentType"
    HEIGHT = "height"
    WIDTH = "width"

class Enum211(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CONTENT = "content"
    CONTENT_TYPE = "contentType"
    HEIGHT = "height"
    WIDTH = "width"

class Enum212(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    ACCOUNT_ID = "accountId"
    ACCOUNT_ID_DESC = "accountId desc"
    AMOUNT_EXCLUDING_TAX = "amountExcludingTax"
    AMOUNT_EXCLUDING_TAX_DESC = "amountExcludingTax desc"
    AMOUNT_INCLUDING_TAX = "amountIncludingTax"
    AMOUNT_INCLUDING_TAX_DESC = "amountIncludingTax desc"
    DESCRIPTION = "description"
    DESCRIPTION_DESC = "description desc"
    DISCOUNT_AMOUNT = "discountAmount"
    DISCOUNT_AMOUNT_DESC = "discountAmount desc"
    DISCOUNT_APPLIED_BEFORE_TAX = "discountAppliedBeforeTax"
    DISCOUNT_APPLIED_BEFORE_TAX_DESC = "discountAppliedBeforeTax desc"
    DISCOUNT_PERCENT = "discountPercent"
    DISCOUNT_PERCENT_DESC = "discountPercent desc"
    DOCUMENT_ID = "documentId"
    DOCUMENT_ID_DESC = "documentId desc"
    INVOICE_DISCOUNT_ALLOCATION = "invoiceDiscountAllocation"
    INVOICE_DISCOUNT_ALLOCATION_DESC = "invoiceDiscountAllocation desc"
    ITEM_ID = "itemId"
    ITEM_ID_DESC = "itemId desc"
    LINE_TYPE = "lineType"
    LINE_TYPE_DESC = "lineType desc"
    NET_AMOUNT = "netAmount"
    NET_AMOUNT_DESC = "netAmount desc"
    NET_AMOUNT_INCLUDING_TAX = "netAmountIncludingTax"
    NET_AMOUNT_INCLUDING_TAX_DESC = "netAmountIncludingTax desc"
    NET_TAX_AMOUNT = "netTaxAmount"
    NET_TAX_AMOUNT_DESC = "netTaxAmount desc"
    QUANTITY = "quantity"
    QUANTITY_DESC = "quantity desc"
    SEQUENCE = "sequence"
    SEQUENCE_DESC = "sequence desc"
    SHIPMENT_DATE = "shipmentDate"
    SHIPMENT_DATE_DESC = "shipmentDate desc"
    TAX_CODE = "taxCode"
    TAX_CODE_DESC = "taxCode desc"
    TAX_PERCENT = "taxPercent"
    TAX_PERCENT_DESC = "taxPercent desc"
    TOTAL_TAX_AMOUNT = "totalTaxAmount"
    TOTAL_TAX_AMOUNT_DESC = "totalTaxAmount desc"
    UNIT_OF_MEASURE_ID = "unitOfMeasureId"
    UNIT_OF_MEASURE_ID_DESC = "unitOfMeasureId desc"
    UNIT_PRICE = "unitPrice"
    UNIT_PRICE_DESC = "unitPrice desc"

class Enum213(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ACCOUNT_ID = "accountId"
    AMOUNT_EXCLUDING_TAX = "amountExcludingTax"
    AMOUNT_INCLUDING_TAX = "amountIncludingTax"
    DESCRIPTION = "description"
    DISCOUNT_AMOUNT = "discountAmount"
    DISCOUNT_APPLIED_BEFORE_TAX = "discountAppliedBeforeTax"
    DISCOUNT_PERCENT = "discountPercent"
    DOCUMENT_ID = "documentId"
    INVOICE_DISCOUNT_ALLOCATION = "invoiceDiscountAllocation"
    ITEM_ID = "itemId"
    LINE_TYPE = "lineType"
    NET_AMOUNT = "netAmount"
    NET_AMOUNT_INCLUDING_TAX = "netAmountIncludingTax"
    NET_TAX_AMOUNT = "netTaxAmount"
    QUANTITY = "quantity"
    SEQUENCE = "sequence"
    SHIPMENT_DATE = "shipmentDate"
    TAX_CODE = "taxCode"
    TAX_PERCENT = "taxPercent"
    TOTAL_TAX_AMOUNT = "totalTaxAmount"
    UNIT_OF_MEASURE_ID = "unitOfMeasureId"
    UNIT_PRICE = "unitPrice"
    ACCOUNT = "account"
    ITEM = "item"

class Enum214(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    ACCOUNT = "account"
    ITEM = "item"

class Enum215(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ACCOUNT_ID = "accountId"
    AMOUNT_EXCLUDING_TAX = "amountExcludingTax"
    AMOUNT_INCLUDING_TAX = "amountIncludingTax"
    DESCRIPTION = "description"
    DISCOUNT_AMOUNT = "discountAmount"
    DISCOUNT_APPLIED_BEFORE_TAX = "discountAppliedBeforeTax"
    DISCOUNT_PERCENT = "discountPercent"
    DOCUMENT_ID = "documentId"
    INVOICE_DISCOUNT_ALLOCATION = "invoiceDiscountAllocation"
    ITEM_ID = "itemId"
    LINE_TYPE = "lineType"
    NET_AMOUNT = "netAmount"
    NET_AMOUNT_INCLUDING_TAX = "netAmountIncludingTax"
    NET_TAX_AMOUNT = "netTaxAmount"
    QUANTITY = "quantity"
    SEQUENCE = "sequence"
    SHIPMENT_DATE = "shipmentDate"
    TAX_CODE = "taxCode"
    TAX_PERCENT = "taxPercent"
    TOTAL_TAX_AMOUNT = "totalTaxAmount"
    UNIT_OF_MEASURE_ID = "unitOfMeasureId"
    UNIT_PRICE = "unitPrice"
    ACCOUNT = "account"
    ITEM = "item"

class Enum216(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    ACCOUNT = "account"
    ITEM = "item"

class Enum217(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    BLOCKED = "blocked"
    CATEGORY = "category"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    NUMBER = "number"
    SUB_CATEGORY = "subCategory"

class Enum218(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    BASE_UNIT_OF_MEASURE_ID = "baseUnitOfMeasureId"
    BLOCKED = "blocked"
    DISPLAY_NAME = "displayName"
    GTIN = "gtin"
    INVENTORY = "inventory"
    ITEM_CATEGORY_CODE = "itemCategoryCode"
    ITEM_CATEGORY_ID = "itemCategoryId"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    NUMBER = "number"
    PRICE_INCLUDES_TAX = "priceIncludesTax"
    TAX_GROUP_CODE = "taxGroupCode"
    TAX_GROUP_ID = "taxGroupId"
    TYPE = "type"
    UNIT_COST = "unitCost"
    UNIT_PRICE = "unitPrice"
    ITEM_CATEGORY = "itemCategory"
    PICTURE = "picture"

class Enum219(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    ITEM_CATEGORY = "itemCategory"
    PICTURE = "picture"

class Enum22(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    AMOUNT_DECIMAL_PLACES = "amountDecimalPlaces"
    AMOUNT_ROUNDING_PRECISION = "amountRoundingPrecision"
    CODE = "code"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    SYMBOL = "symbol"

class Enum220(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CODE = "code"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"

class Enum221(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    CONTENT = "content"
    CONTENT_DESC = "content desc"
    CONTENT_TYPE = "contentType"
    CONTENT_TYPE_DESC = "contentType desc"
    HEIGHT = "height"
    HEIGHT_DESC = "height desc"
    WIDTH = "width"
    WIDTH_DESC = "width desc"

class Enum222(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CONTENT = "content"
    CONTENT_TYPE = "contentType"
    HEIGHT = "height"
    WIDTH = "width"

class Enum223(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CONTENT = "content"
    CONTENT_TYPE = "contentType"
    HEIGHT = "height"
    WIDTH = "width"

class Enum224(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    BILLING_POSTAL_ADDRESS = "billingPostalAddress"
    BILLING_POSTAL_ADDRESS_DESC = "billingPostalAddress desc"
    BILL_TO_CUSTOMER_ID = "billToCustomerId"
    BILL_TO_CUSTOMER_ID_DESC = "billToCustomerId desc"
    BILL_TO_CUSTOMER_NUMBER = "billToCustomerNumber"
    BILL_TO_CUSTOMER_NUMBER_DESC = "billToCustomerNumber desc"
    BILL_TO_NAME = "billToName"
    BILL_TO_NAME_DESC = "billToName desc"
    CURRENCY_CODE = "currencyCode"
    CURRENCY_CODE_DESC = "currencyCode desc"
    CURRENCY_ID = "currencyId"
    CURRENCY_ID_DESC = "currencyId desc"
    CUSTOMER_ID = "customerId"
    CUSTOMER_ID_DESC = "customerId desc"
    CUSTOMER_NAME = "customerName"
    CUSTOMER_NAME_DESC = "customerName desc"
    CUSTOMER_NUMBER = "customerNumber"
    CUSTOMER_NUMBER_DESC = "customerNumber desc"
    CUSTOMER_PURCHASE_ORDER_REFERENCE = "customerPurchaseOrderReference"
    CUSTOMER_PURCHASE_ORDER_REFERENCE_DESC = "customerPurchaseOrderReference desc"
    DISCOUNT_AMOUNT = "discountAmount"
    DISCOUNT_AMOUNT_DESC = "discountAmount desc"
    DISCOUNT_APPLIED_BEFORE_TAX = "discountAppliedBeforeTax"
    DISCOUNT_APPLIED_BEFORE_TAX_DESC = "discountAppliedBeforeTax desc"
    DUE_DATE = "dueDate"
    DUE_DATE_DESC = "dueDate desc"
    EMAIL = "email"
    EMAIL_DESC = "email desc"
    EXTERNAL_DOCUMENT_NUMBER = "externalDocumentNumber"
    EXTERNAL_DOCUMENT_NUMBER_DESC = "externalDocumentNumber desc"
    INVOICE_DATE = "invoiceDate"
    INVOICE_DATE_DESC = "invoiceDate desc"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    LAST_MODIFIED_DATE_TIME_DESC = "lastModifiedDateTime desc"
    NUMBER = "number"
    NUMBER_DESC = "number desc"
    ORDER_ID = "orderId"
    ORDER_ID_DESC = "orderId desc"
    ORDER_NUMBER = "orderNumber"
    ORDER_NUMBER_DESC = "orderNumber desc"
    PAYMENT_TERMS_ID = "paymentTermsId"
    PAYMENT_TERMS_ID_DESC = "paymentTermsId desc"
    PHONE_NUMBER = "phoneNumber"
    PHONE_NUMBER_DESC = "phoneNumber desc"
    PRICES_INCLUDE_TAX = "pricesIncludeTax"
    PRICES_INCLUDE_TAX_DESC = "pricesIncludeTax desc"
    SALESPERSON = "salesperson"
    SALESPERSON_DESC = "salesperson desc"
    SELLING_POSTAL_ADDRESS = "sellingPostalAddress"
    SELLING_POSTAL_ADDRESS_DESC = "sellingPostalAddress desc"
    SHIPMENT_METHOD_ID = "shipmentMethodId"
    SHIPMENT_METHOD_ID_DESC = "shipmentMethodId desc"
    SHIPPING_POSTAL_ADDRESS = "shippingPostalAddress"
    SHIPPING_POSTAL_ADDRESS_DESC = "shippingPostalAddress desc"
    SHIP_TO_CONTACT = "shipToContact"
    SHIP_TO_CONTACT_DESC = "shipToContact desc"
    SHIP_TO_NAME = "shipToName"
    SHIP_TO_NAME_DESC = "shipToName desc"
    STATUS = "status"
    STATUS_DESC = "status desc"
    TOTAL_AMOUNT_EXCLUDING_TAX = "totalAmountExcludingTax"
    TOTAL_AMOUNT_EXCLUDING_TAX_DESC = "totalAmountExcludingTax desc"
    TOTAL_AMOUNT_INCLUDING_TAX = "totalAmountIncludingTax"
    TOTAL_AMOUNT_INCLUDING_TAX_DESC = "totalAmountIncludingTax desc"
    TOTAL_TAX_AMOUNT = "totalTaxAmount"
    TOTAL_TAX_AMOUNT_DESC = "totalTaxAmount desc"

class Enum225(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    BILLING_POSTAL_ADDRESS = "billingPostalAddress"
    BILL_TO_CUSTOMER_ID = "billToCustomerId"
    BILL_TO_CUSTOMER_NUMBER = "billToCustomerNumber"
    BILL_TO_NAME = "billToName"
    CURRENCY_CODE = "currencyCode"
    CURRENCY_ID = "currencyId"
    CUSTOMER_ID = "customerId"
    CUSTOMER_NAME = "customerName"
    CUSTOMER_NUMBER = "customerNumber"
    CUSTOMER_PURCHASE_ORDER_REFERENCE = "customerPurchaseOrderReference"
    DISCOUNT_AMOUNT = "discountAmount"
    DISCOUNT_APPLIED_BEFORE_TAX = "discountAppliedBeforeTax"
    DUE_DATE = "dueDate"
    EMAIL = "email"
    EXTERNAL_DOCUMENT_NUMBER = "externalDocumentNumber"
    INVOICE_DATE = "invoiceDate"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    NUMBER = "number"
    ORDER_ID = "orderId"
    ORDER_NUMBER = "orderNumber"
    PAYMENT_TERMS_ID = "paymentTermsId"
    PHONE_NUMBER = "phoneNumber"
    PRICES_INCLUDE_TAX = "pricesIncludeTax"
    SALESPERSON = "salesperson"
    SELLING_POSTAL_ADDRESS = "sellingPostalAddress"
    SHIPMENT_METHOD_ID = "shipmentMethodId"
    SHIPPING_POSTAL_ADDRESS = "shippingPostalAddress"
    SHIP_TO_CONTACT = "shipToContact"
    SHIP_TO_NAME = "shipToName"
    STATUS = "status"
    TOTAL_AMOUNT_EXCLUDING_TAX = "totalAmountExcludingTax"
    TOTAL_AMOUNT_INCLUDING_TAX = "totalAmountIncludingTax"
    TOTAL_TAX_AMOUNT = "totalTaxAmount"
    CURRENCY = "currency"
    CUSTOMER = "customer"
    PAYMENT_TERM = "paymentTerm"
    SALES_INVOICE_LINES = "salesInvoiceLines"
    SHIPMENT_METHOD = "shipmentMethod"

class Enum226(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    CURRENCY = "currency"
    CUSTOMER = "customer"
    PAYMENT_TERM = "paymentTerm"
    SALES_INVOICE_LINES = "salesInvoiceLines"
    SHIPMENT_METHOD = "shipmentMethod"

class Enum227(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    BILLING_POSTAL_ADDRESS = "billingPostalAddress"
    BILL_TO_CUSTOMER_ID = "billToCustomerId"
    BILL_TO_CUSTOMER_NUMBER = "billToCustomerNumber"
    BILL_TO_NAME = "billToName"
    CURRENCY_CODE = "currencyCode"
    CURRENCY_ID = "currencyId"
    CUSTOMER_ID = "customerId"
    CUSTOMER_NAME = "customerName"
    CUSTOMER_NUMBER = "customerNumber"
    CUSTOMER_PURCHASE_ORDER_REFERENCE = "customerPurchaseOrderReference"
    DISCOUNT_AMOUNT = "discountAmount"
    DISCOUNT_APPLIED_BEFORE_TAX = "discountAppliedBeforeTax"
    DUE_DATE = "dueDate"
    EMAIL = "email"
    EXTERNAL_DOCUMENT_NUMBER = "externalDocumentNumber"
    INVOICE_DATE = "invoiceDate"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    NUMBER = "number"
    ORDER_ID = "orderId"
    ORDER_NUMBER = "orderNumber"
    PAYMENT_TERMS_ID = "paymentTermsId"
    PHONE_NUMBER = "phoneNumber"
    PRICES_INCLUDE_TAX = "pricesIncludeTax"
    SALESPERSON = "salesperson"
    SELLING_POSTAL_ADDRESS = "sellingPostalAddress"
    SHIPMENT_METHOD_ID = "shipmentMethodId"
    SHIPPING_POSTAL_ADDRESS = "shippingPostalAddress"
    SHIP_TO_CONTACT = "shipToContact"
    SHIP_TO_NAME = "shipToName"
    STATUS = "status"
    TOTAL_AMOUNT_EXCLUDING_TAX = "totalAmountExcludingTax"
    TOTAL_AMOUNT_INCLUDING_TAX = "totalAmountIncludingTax"
    TOTAL_TAX_AMOUNT = "totalTaxAmount"
    CURRENCY = "currency"
    CUSTOMER = "customer"
    PAYMENT_TERM = "paymentTerm"
    SALES_INVOICE_LINES = "salesInvoiceLines"
    SHIPMENT_METHOD = "shipmentMethod"

class Enum228(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    CURRENCY = "currency"
    CUSTOMER = "customer"
    PAYMENT_TERM = "paymentTerm"
    SALES_INVOICE_LINES = "salesInvoiceLines"
    SHIPMENT_METHOD = "shipmentMethod"

class Enum229(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    AMOUNT_DECIMAL_PLACES = "amountDecimalPlaces"
    AMOUNT_ROUNDING_PRECISION = "amountRoundingPrecision"
    CODE = "code"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    SYMBOL = "symbol"

class Enum23(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    AMOUNT_DECIMAL_PLACES = "amountDecimalPlaces"
    AMOUNT_ROUNDING_PRECISION = "amountRoundingPrecision"
    CODE = "code"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    SYMBOL = "symbol"

class Enum230(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ADDRESS = "address"
    BLOCKED = "blocked"
    CURRENCY_CODE = "currencyCode"
    CURRENCY_ID = "currencyId"
    DISPLAY_NAME = "displayName"
    EMAIL = "email"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    NUMBER = "number"
    PAYMENT_METHOD_ID = "paymentMethodId"
    PAYMENT_TERMS_ID = "paymentTermsId"
    PHONE_NUMBER = "phoneNumber"
    SHIPMENT_METHOD_ID = "shipmentMethodId"
    TAX_AREA_DISPLAY_NAME = "taxAreaDisplayName"
    TAX_AREA_ID = "taxAreaId"
    TAX_LIABLE = "taxLiable"
    TAX_REGISTRATION_NUMBER = "taxRegistrationNumber"
    TYPE = "type"
    WEBSITE = "website"
    CURRENCY = "currency"
    PAYMENT_METHOD = "paymentMethod"
    PAYMENT_TERM = "paymentTerm"
    PICTURE = "picture"
    SHIPMENT_METHOD = "shipmentMethod"

class Enum231(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    CURRENCY = "currency"
    PAYMENT_METHOD = "paymentMethod"
    PAYMENT_TERM = "paymentTerm"
    PICTURE = "picture"
    SHIPMENT_METHOD = "shipmentMethod"

class Enum232(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    AMOUNT_DECIMAL_PLACES = "amountDecimalPlaces"
    AMOUNT_ROUNDING_PRECISION = "amountRoundingPrecision"
    CODE = "code"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    SYMBOL = "symbol"

class Enum233(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CODE = "code"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"

class Enum234(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CALCULATE_DISCOUNT_ON_CREDIT_MEMOS = "calculateDiscountOnCreditMemos"
    CODE = "code"
    DISCOUNT_DATE_CALCULATION = "discountDateCalculation"
    DISCOUNT_PERCENT = "discountPercent"
    DISPLAY_NAME = "displayName"
    DUE_DATE_CALCULATION = "dueDateCalculation"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"

class Enum235(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    CONTENT = "content"
    CONTENT_DESC = "content desc"
    CONTENT_TYPE = "contentType"
    CONTENT_TYPE_DESC = "contentType desc"
    HEIGHT = "height"
    HEIGHT_DESC = "height desc"
    WIDTH = "width"
    WIDTH_DESC = "width desc"

class Enum236(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CONTENT = "content"
    CONTENT_TYPE = "contentType"
    HEIGHT = "height"
    WIDTH = "width"

class Enum237(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CONTENT = "content"
    CONTENT_TYPE = "contentType"
    HEIGHT = "height"
    WIDTH = "width"

class Enum238(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CODE = "code"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"

class Enum239(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CALCULATE_DISCOUNT_ON_CREDIT_MEMOS = "calculateDiscountOnCreditMemos"
    CODE = "code"
    DISCOUNT_DATE_CALCULATION = "discountDateCalculation"
    DISCOUNT_PERCENT = "discountPercent"
    DISPLAY_NAME = "displayName"
    DUE_DATE_CALCULATION = "dueDateCalculation"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"

class Enum24(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    BALANCING_ACCOUNT_ID = "balancingAccountId"
    BALANCING_ACCOUNT_ID_DESC = "balancingAccountId desc"
    BALANCING_ACCOUNT_NUMBER = "balancingAccountNumber"
    BALANCING_ACCOUNT_NUMBER_DESC = "balancingAccountNumber desc"
    CODE = "code"
    CODE_DESC = "code desc"
    DISPLAY_NAME = "displayName"
    DISPLAY_NAME_DESC = "displayName desc"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    LAST_MODIFIED_DATE_TIME_DESC = "lastModifiedDateTime desc"

class Enum240(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    ACCOUNT_ID = "accountId"
    ACCOUNT_ID_DESC = "accountId desc"
    AMOUNT_EXCLUDING_TAX = "amountExcludingTax"
    AMOUNT_EXCLUDING_TAX_DESC = "amountExcludingTax desc"
    AMOUNT_INCLUDING_TAX = "amountIncludingTax"
    AMOUNT_INCLUDING_TAX_DESC = "amountIncludingTax desc"
    DESCRIPTION = "description"
    DESCRIPTION_DESC = "description desc"
    DISCOUNT_AMOUNT = "discountAmount"
    DISCOUNT_AMOUNT_DESC = "discountAmount desc"
    DISCOUNT_APPLIED_BEFORE_TAX = "discountAppliedBeforeTax"
    DISCOUNT_APPLIED_BEFORE_TAX_DESC = "discountAppliedBeforeTax desc"
    DISCOUNT_PERCENT = "discountPercent"
    DISCOUNT_PERCENT_DESC = "discountPercent desc"
    DOCUMENT_ID = "documentId"
    DOCUMENT_ID_DESC = "documentId desc"
    INVOICE_DISCOUNT_ALLOCATION = "invoiceDiscountAllocation"
    INVOICE_DISCOUNT_ALLOCATION_DESC = "invoiceDiscountAllocation desc"
    ITEM_ID = "itemId"
    ITEM_ID_DESC = "itemId desc"
    LINE_TYPE = "lineType"
    LINE_TYPE_DESC = "lineType desc"
    NET_AMOUNT = "netAmount"
    NET_AMOUNT_DESC = "netAmount desc"
    NET_AMOUNT_INCLUDING_TAX = "netAmountIncludingTax"
    NET_AMOUNT_INCLUDING_TAX_DESC = "netAmountIncludingTax desc"
    NET_TAX_AMOUNT = "netTaxAmount"
    NET_TAX_AMOUNT_DESC = "netTaxAmount desc"
    QUANTITY = "quantity"
    QUANTITY_DESC = "quantity desc"
    SEQUENCE = "sequence"
    SEQUENCE_DESC = "sequence desc"
    SHIPMENT_DATE = "shipmentDate"
    SHIPMENT_DATE_DESC = "shipmentDate desc"
    TAX_CODE = "taxCode"
    TAX_CODE_DESC = "taxCode desc"
    TAX_PERCENT = "taxPercent"
    TAX_PERCENT_DESC = "taxPercent desc"
    TOTAL_TAX_AMOUNT = "totalTaxAmount"
    TOTAL_TAX_AMOUNT_DESC = "totalTaxAmount desc"
    UNIT_OF_MEASURE_ID = "unitOfMeasureId"
    UNIT_OF_MEASURE_ID_DESC = "unitOfMeasureId desc"
    UNIT_PRICE = "unitPrice"
    UNIT_PRICE_DESC = "unitPrice desc"

class Enum241(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ACCOUNT_ID = "accountId"
    AMOUNT_EXCLUDING_TAX = "amountExcludingTax"
    AMOUNT_INCLUDING_TAX = "amountIncludingTax"
    DESCRIPTION = "description"
    DISCOUNT_AMOUNT = "discountAmount"
    DISCOUNT_APPLIED_BEFORE_TAX = "discountAppliedBeforeTax"
    DISCOUNT_PERCENT = "discountPercent"
    DOCUMENT_ID = "documentId"
    INVOICE_DISCOUNT_ALLOCATION = "invoiceDiscountAllocation"
    ITEM_ID = "itemId"
    LINE_TYPE = "lineType"
    NET_AMOUNT = "netAmount"
    NET_AMOUNT_INCLUDING_TAX = "netAmountIncludingTax"
    NET_TAX_AMOUNT = "netTaxAmount"
    QUANTITY = "quantity"
    SEQUENCE = "sequence"
    SHIPMENT_DATE = "shipmentDate"
    TAX_CODE = "taxCode"
    TAX_PERCENT = "taxPercent"
    TOTAL_TAX_AMOUNT = "totalTaxAmount"
    UNIT_OF_MEASURE_ID = "unitOfMeasureId"
    UNIT_PRICE = "unitPrice"
    ACCOUNT = "account"
    ITEM = "item"

class Enum242(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    ACCOUNT = "account"
    ITEM = "item"

class Enum243(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ACCOUNT_ID = "accountId"
    AMOUNT_EXCLUDING_TAX = "amountExcludingTax"
    AMOUNT_INCLUDING_TAX = "amountIncludingTax"
    DESCRIPTION = "description"
    DISCOUNT_AMOUNT = "discountAmount"
    DISCOUNT_APPLIED_BEFORE_TAX = "discountAppliedBeforeTax"
    DISCOUNT_PERCENT = "discountPercent"
    DOCUMENT_ID = "documentId"
    INVOICE_DISCOUNT_ALLOCATION = "invoiceDiscountAllocation"
    ITEM_ID = "itemId"
    LINE_TYPE = "lineType"
    NET_AMOUNT = "netAmount"
    NET_AMOUNT_INCLUDING_TAX = "netAmountIncludingTax"
    NET_TAX_AMOUNT = "netTaxAmount"
    QUANTITY = "quantity"
    SEQUENCE = "sequence"
    SHIPMENT_DATE = "shipmentDate"
    TAX_CODE = "taxCode"
    TAX_PERCENT = "taxPercent"
    TOTAL_TAX_AMOUNT = "totalTaxAmount"
    UNIT_OF_MEASURE_ID = "unitOfMeasureId"
    UNIT_PRICE = "unitPrice"
    ACCOUNT = "account"
    ITEM = "item"

class Enum244(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    ACCOUNT = "account"
    ITEM = "item"

class Enum245(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    BLOCKED = "blocked"
    CATEGORY = "category"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    NUMBER = "number"
    SUB_CATEGORY = "subCategory"

class Enum246(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    BASE_UNIT_OF_MEASURE_ID = "baseUnitOfMeasureId"
    BLOCKED = "blocked"
    DISPLAY_NAME = "displayName"
    GTIN = "gtin"
    INVENTORY = "inventory"
    ITEM_CATEGORY_CODE = "itemCategoryCode"
    ITEM_CATEGORY_ID = "itemCategoryId"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    NUMBER = "number"
    PRICE_INCLUDES_TAX = "priceIncludesTax"
    TAX_GROUP_CODE = "taxGroupCode"
    TAX_GROUP_ID = "taxGroupId"
    TYPE = "type"
    UNIT_COST = "unitCost"
    UNIT_PRICE = "unitPrice"
    ITEM_CATEGORY = "itemCategory"
    PICTURE = "picture"

class Enum247(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    ITEM_CATEGORY = "itemCategory"
    PICTURE = "picture"

class Enum248(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CODE = "code"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"

class Enum249(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    CONTENT = "content"
    CONTENT_DESC = "content desc"
    CONTENT_TYPE = "contentType"
    CONTENT_TYPE_DESC = "contentType desc"
    HEIGHT = "height"
    HEIGHT_DESC = "height desc"
    WIDTH = "width"
    WIDTH_DESC = "width desc"

class Enum25(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    BALANCING_ACCOUNT_ID = "balancingAccountId"
    BALANCING_ACCOUNT_NUMBER = "balancingAccountNumber"
    CODE = "code"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    ACCOUNT = "account"
    CUSTOMER_PAYMENTS = "customerPayments"

class Enum250(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CONTENT = "content"
    CONTENT_TYPE = "contentType"
    HEIGHT = "height"
    WIDTH = "width"

class Enum251(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CONTENT = "content"
    CONTENT_TYPE = "contentType"
    HEIGHT = "height"
    WIDTH = "width"

class Enum252(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CODE = "code"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"

class Enum253(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    ACCOUNT_ID = "accountId"
    ACCOUNT_ID_DESC = "accountId desc"
    AMOUNT_EXCLUDING_TAX = "amountExcludingTax"
    AMOUNT_EXCLUDING_TAX_DESC = "amountExcludingTax desc"
    AMOUNT_INCLUDING_TAX = "amountIncludingTax"
    AMOUNT_INCLUDING_TAX_DESC = "amountIncludingTax desc"
    DESCRIPTION = "description"
    DESCRIPTION_DESC = "description desc"
    DISCOUNT_AMOUNT = "discountAmount"
    DISCOUNT_AMOUNT_DESC = "discountAmount desc"
    DISCOUNT_APPLIED_BEFORE_TAX = "discountAppliedBeforeTax"
    DISCOUNT_APPLIED_BEFORE_TAX_DESC = "discountAppliedBeforeTax desc"
    DISCOUNT_PERCENT = "discountPercent"
    DISCOUNT_PERCENT_DESC = "discountPercent desc"
    DOCUMENT_ID = "documentId"
    DOCUMENT_ID_DESC = "documentId desc"
    INVOICE_DISCOUNT_ALLOCATION = "invoiceDiscountAllocation"
    INVOICE_DISCOUNT_ALLOCATION_DESC = "invoiceDiscountAllocation desc"
    INVOICED_QUANTITY = "invoicedQuantity"
    INVOICED_QUANTITY_DESC = "invoicedQuantity desc"
    INVOICE_QUANTITY = "invoiceQuantity"
    INVOICE_QUANTITY_DESC = "invoiceQuantity desc"
    ITEM_ID = "itemId"
    ITEM_ID_DESC = "itemId desc"
    LINE_TYPE = "lineType"
    LINE_TYPE_DESC = "lineType desc"
    NET_AMOUNT = "netAmount"
    NET_AMOUNT_DESC = "netAmount desc"
    NET_AMOUNT_INCLUDING_TAX = "netAmountIncludingTax"
    NET_AMOUNT_INCLUDING_TAX_DESC = "netAmountIncludingTax desc"
    NET_TAX_AMOUNT = "netTaxAmount"
    NET_TAX_AMOUNT_DESC = "netTaxAmount desc"
    QUANTITY = "quantity"
    QUANTITY_DESC = "quantity desc"
    SEQUENCE = "sequence"
    SEQUENCE_DESC = "sequence desc"
    SHIPMENT_DATE = "shipmentDate"
    SHIPMENT_DATE_DESC = "shipmentDate desc"
    SHIPPED_QUANTITY = "shippedQuantity"
    SHIPPED_QUANTITY_DESC = "shippedQuantity desc"
    SHIP_QUANTITY = "shipQuantity"
    SHIP_QUANTITY_DESC = "shipQuantity desc"
    TAX_CODE = "taxCode"
    TAX_CODE_DESC = "taxCode desc"
    TAX_PERCENT = "taxPercent"
    TAX_PERCENT_DESC = "taxPercent desc"
    TOTAL_TAX_AMOUNT = "totalTaxAmount"
    TOTAL_TAX_AMOUNT_DESC = "totalTaxAmount desc"
    UNIT_OF_MEASURE_ID = "unitOfMeasureId"
    UNIT_OF_MEASURE_ID_DESC = "unitOfMeasureId desc"
    UNIT_PRICE = "unitPrice"
    UNIT_PRICE_DESC = "unitPrice desc"

class Enum254(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ACCOUNT_ID = "accountId"
    AMOUNT_EXCLUDING_TAX = "amountExcludingTax"
    AMOUNT_INCLUDING_TAX = "amountIncludingTax"
    DESCRIPTION = "description"
    DISCOUNT_AMOUNT = "discountAmount"
    DISCOUNT_APPLIED_BEFORE_TAX = "discountAppliedBeforeTax"
    DISCOUNT_PERCENT = "discountPercent"
    DOCUMENT_ID = "documentId"
    INVOICE_DISCOUNT_ALLOCATION = "invoiceDiscountAllocation"
    INVOICED_QUANTITY = "invoicedQuantity"
    INVOICE_QUANTITY = "invoiceQuantity"
    ITEM_ID = "itemId"
    LINE_TYPE = "lineType"
    NET_AMOUNT = "netAmount"
    NET_AMOUNT_INCLUDING_TAX = "netAmountIncludingTax"
    NET_TAX_AMOUNT = "netTaxAmount"
    QUANTITY = "quantity"
    SEQUENCE = "sequence"
    SHIPMENT_DATE = "shipmentDate"
    SHIPPED_QUANTITY = "shippedQuantity"
    SHIP_QUANTITY = "shipQuantity"
    TAX_CODE = "taxCode"
    TAX_PERCENT = "taxPercent"
    TOTAL_TAX_AMOUNT = "totalTaxAmount"
    UNIT_OF_MEASURE_ID = "unitOfMeasureId"
    UNIT_PRICE = "unitPrice"
    ACCOUNT = "account"
    ITEM = "item"

class Enum255(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    ACCOUNT = "account"
    ITEM = "item"

class Enum256(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ACCOUNT_ID = "accountId"
    AMOUNT_EXCLUDING_TAX = "amountExcludingTax"
    AMOUNT_INCLUDING_TAX = "amountIncludingTax"
    DESCRIPTION = "description"
    DISCOUNT_AMOUNT = "discountAmount"
    DISCOUNT_APPLIED_BEFORE_TAX = "discountAppliedBeforeTax"
    DISCOUNT_PERCENT = "discountPercent"
    DOCUMENT_ID = "documentId"
    INVOICE_DISCOUNT_ALLOCATION = "invoiceDiscountAllocation"
    INVOICED_QUANTITY = "invoicedQuantity"
    INVOICE_QUANTITY = "invoiceQuantity"
    ITEM_ID = "itemId"
    LINE_TYPE = "lineType"
    NET_AMOUNT = "netAmount"
    NET_AMOUNT_INCLUDING_TAX = "netAmountIncludingTax"
    NET_TAX_AMOUNT = "netTaxAmount"
    QUANTITY = "quantity"
    SEQUENCE = "sequence"
    SHIPMENT_DATE = "shipmentDate"
    SHIPPED_QUANTITY = "shippedQuantity"
    SHIP_QUANTITY = "shipQuantity"
    TAX_CODE = "taxCode"
    TAX_PERCENT = "taxPercent"
    TOTAL_TAX_AMOUNT = "totalTaxAmount"
    UNIT_OF_MEASURE_ID = "unitOfMeasureId"
    UNIT_PRICE = "unitPrice"
    ACCOUNT = "account"
    ITEM = "item"

class Enum257(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    ACCOUNT = "account"
    ITEM = "item"

class Enum258(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    BLOCKED = "blocked"
    CATEGORY = "category"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    NUMBER = "number"
    SUB_CATEGORY = "subCategory"

class Enum259(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    BASE_UNIT_OF_MEASURE_ID = "baseUnitOfMeasureId"
    BLOCKED = "blocked"
    DISPLAY_NAME = "displayName"
    GTIN = "gtin"
    INVENTORY = "inventory"
    ITEM_CATEGORY_CODE = "itemCategoryCode"
    ITEM_CATEGORY_ID = "itemCategoryId"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    NUMBER = "number"
    PRICE_INCLUDES_TAX = "priceIncludesTax"
    TAX_GROUP_CODE = "taxGroupCode"
    TAX_GROUP_ID = "taxGroupId"
    TYPE = "type"
    UNIT_COST = "unitCost"
    UNIT_PRICE = "unitPrice"
    ITEM_CATEGORY = "itemCategory"
    PICTURE = "picture"

class Enum26(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    ACCOUNT = "account"
    CUSTOMER_PAYMENTS = "customerPayments"

class Enum260(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    ITEM_CATEGORY = "itemCategory"
    PICTURE = "picture"

class Enum261(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CODE = "code"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"

class Enum262(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    CONTENT = "content"
    CONTENT_DESC = "content desc"
    CONTENT_TYPE = "contentType"
    CONTENT_TYPE_DESC = "contentType desc"
    HEIGHT = "height"
    HEIGHT_DESC = "height desc"
    WIDTH = "width"
    WIDTH_DESC = "width desc"

class Enum263(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CONTENT = "content"
    CONTENT_TYPE = "contentType"
    HEIGHT = "height"
    WIDTH = "width"

class Enum264(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CONTENT = "content"
    CONTENT_TYPE = "contentType"
    HEIGHT = "height"
    WIDTH = "width"

class Enum265(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    BILLING_POSTAL_ADDRESS = "billingPostalAddress"
    BILLING_POSTAL_ADDRESS_DESC = "billingPostalAddress desc"
    BILL_TO_CUSTOMER_ID = "billToCustomerId"
    BILL_TO_CUSTOMER_ID_DESC = "billToCustomerId desc"
    BILL_TO_CUSTOMER_NUMBER = "billToCustomerNumber"
    BILL_TO_CUSTOMER_NUMBER_DESC = "billToCustomerNumber desc"
    BILL_TO_NAME = "billToName"
    BILL_TO_NAME_DESC = "billToName desc"
    CURRENCY_CODE = "currencyCode"
    CURRENCY_CODE_DESC = "currencyCode desc"
    CURRENCY_ID = "currencyId"
    CURRENCY_ID_DESC = "currencyId desc"
    CUSTOMER_ID = "customerId"
    CUSTOMER_ID_DESC = "customerId desc"
    CUSTOMER_NAME = "customerName"
    CUSTOMER_NAME_DESC = "customerName desc"
    CUSTOMER_NUMBER = "customerNumber"
    CUSTOMER_NUMBER_DESC = "customerNumber desc"
    DISCOUNT_AMOUNT = "discountAmount"
    DISCOUNT_AMOUNT_DESC = "discountAmount desc"
    DISCOUNT_APPLIED_BEFORE_TAX = "discountAppliedBeforeTax"
    DISCOUNT_APPLIED_BEFORE_TAX_DESC = "discountAppliedBeforeTax desc"
    EMAIL = "email"
    EMAIL_DESC = "email desc"
    EXTERNAL_DOCUMENT_NUMBER = "externalDocumentNumber"
    EXTERNAL_DOCUMENT_NUMBER_DESC = "externalDocumentNumber desc"
    FULLY_SHIPPED = "fullyShipped"
    FULLY_SHIPPED_DESC = "fullyShipped desc"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    LAST_MODIFIED_DATE_TIME_DESC = "lastModifiedDateTime desc"
    NUMBER = "number"
    NUMBER_DESC = "number desc"
    ORDER_DATE = "orderDate"
    ORDER_DATE_DESC = "orderDate desc"
    PARTIAL_SHIPPING = "partialShipping"
    PARTIAL_SHIPPING_DESC = "partialShipping desc"
    PAYMENT_TERMS_ID = "paymentTermsId"
    PAYMENT_TERMS_ID_DESC = "paymentTermsId desc"
    PHONE_NUMBER = "phoneNumber"
    PHONE_NUMBER_DESC = "phoneNumber desc"
    PRICES_INCLUDE_TAX = "pricesIncludeTax"
    PRICES_INCLUDE_TAX_DESC = "pricesIncludeTax desc"
    REQUESTED_DELIVERY_DATE = "requestedDeliveryDate"
    REQUESTED_DELIVERY_DATE_DESC = "requestedDeliveryDate desc"
    SALESPERSON = "salesperson"
    SALESPERSON_DESC = "salesperson desc"
    SELLING_POSTAL_ADDRESS = "sellingPostalAddress"
    SELLING_POSTAL_ADDRESS_DESC = "sellingPostalAddress desc"
    SHIPPING_POSTAL_ADDRESS = "shippingPostalAddress"
    SHIPPING_POSTAL_ADDRESS_DESC = "shippingPostalAddress desc"
    SHIP_TO_CONTACT = "shipToContact"
    SHIP_TO_CONTACT_DESC = "shipToContact desc"
    SHIP_TO_NAME = "shipToName"
    SHIP_TO_NAME_DESC = "shipToName desc"
    STATUS = "status"
    STATUS_DESC = "status desc"
    TOTAL_AMOUNT_EXCLUDING_TAX = "totalAmountExcludingTax"
    TOTAL_AMOUNT_EXCLUDING_TAX_DESC = "totalAmountExcludingTax desc"
    TOTAL_AMOUNT_INCLUDING_TAX = "totalAmountIncludingTax"
    TOTAL_AMOUNT_INCLUDING_TAX_DESC = "totalAmountIncludingTax desc"
    TOTAL_TAX_AMOUNT = "totalTaxAmount"
    TOTAL_TAX_AMOUNT_DESC = "totalTaxAmount desc"

class Enum266(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    BILLING_POSTAL_ADDRESS = "billingPostalAddress"
    BILL_TO_CUSTOMER_ID = "billToCustomerId"
    BILL_TO_CUSTOMER_NUMBER = "billToCustomerNumber"
    BILL_TO_NAME = "billToName"
    CURRENCY_CODE = "currencyCode"
    CURRENCY_ID = "currencyId"
    CUSTOMER_ID = "customerId"
    CUSTOMER_NAME = "customerName"
    CUSTOMER_NUMBER = "customerNumber"
    DISCOUNT_AMOUNT = "discountAmount"
    DISCOUNT_APPLIED_BEFORE_TAX = "discountAppliedBeforeTax"
    EMAIL = "email"
    EXTERNAL_DOCUMENT_NUMBER = "externalDocumentNumber"
    FULLY_SHIPPED = "fullyShipped"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    NUMBER = "number"
    ORDER_DATE = "orderDate"
    PARTIAL_SHIPPING = "partialShipping"
    PAYMENT_TERMS_ID = "paymentTermsId"
    PHONE_NUMBER = "phoneNumber"
    PRICES_INCLUDE_TAX = "pricesIncludeTax"
    REQUESTED_DELIVERY_DATE = "requestedDeliveryDate"
    SALESPERSON = "salesperson"
    SELLING_POSTAL_ADDRESS = "sellingPostalAddress"
    SHIPPING_POSTAL_ADDRESS = "shippingPostalAddress"
    SHIP_TO_CONTACT = "shipToContact"
    SHIP_TO_NAME = "shipToName"
    STATUS = "status"
    TOTAL_AMOUNT_EXCLUDING_TAX = "totalAmountExcludingTax"
    TOTAL_AMOUNT_INCLUDING_TAX = "totalAmountIncludingTax"
    TOTAL_TAX_AMOUNT = "totalTaxAmount"
    CURRENCY = "currency"
    CUSTOMER = "customer"
    PAYMENT_TERM = "paymentTerm"
    SALES_ORDER_LINES = "salesOrderLines"

class Enum267(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    CURRENCY = "currency"
    CUSTOMER = "customer"
    PAYMENT_TERM = "paymentTerm"
    SALES_ORDER_LINES = "salesOrderLines"

class Enum268(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    BILLING_POSTAL_ADDRESS = "billingPostalAddress"
    BILL_TO_CUSTOMER_ID = "billToCustomerId"
    BILL_TO_CUSTOMER_NUMBER = "billToCustomerNumber"
    BILL_TO_NAME = "billToName"
    CURRENCY_CODE = "currencyCode"
    CURRENCY_ID = "currencyId"
    CUSTOMER_ID = "customerId"
    CUSTOMER_NAME = "customerName"
    CUSTOMER_NUMBER = "customerNumber"
    DISCOUNT_AMOUNT = "discountAmount"
    DISCOUNT_APPLIED_BEFORE_TAX = "discountAppliedBeforeTax"
    EMAIL = "email"
    EXTERNAL_DOCUMENT_NUMBER = "externalDocumentNumber"
    FULLY_SHIPPED = "fullyShipped"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    NUMBER = "number"
    ORDER_DATE = "orderDate"
    PARTIAL_SHIPPING = "partialShipping"
    PAYMENT_TERMS_ID = "paymentTermsId"
    PHONE_NUMBER = "phoneNumber"
    PRICES_INCLUDE_TAX = "pricesIncludeTax"
    REQUESTED_DELIVERY_DATE = "requestedDeliveryDate"
    SALESPERSON = "salesperson"
    SELLING_POSTAL_ADDRESS = "sellingPostalAddress"
    SHIPPING_POSTAL_ADDRESS = "shippingPostalAddress"
    SHIP_TO_CONTACT = "shipToContact"
    SHIP_TO_NAME = "shipToName"
    STATUS = "status"
    TOTAL_AMOUNT_EXCLUDING_TAX = "totalAmountExcludingTax"
    TOTAL_AMOUNT_INCLUDING_TAX = "totalAmountIncludingTax"
    TOTAL_TAX_AMOUNT = "totalTaxAmount"
    CURRENCY = "currency"
    CUSTOMER = "customer"
    PAYMENT_TERM = "paymentTerm"
    SALES_ORDER_LINES = "salesOrderLines"

class Enum269(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    CURRENCY = "currency"
    CUSTOMER = "customer"
    PAYMENT_TERM = "paymentTerm"
    SALES_ORDER_LINES = "salesOrderLines"

class Enum27(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    BALANCING_ACCOUNT_ID = "balancingAccountId"
    BALANCING_ACCOUNT_NUMBER = "balancingAccountNumber"
    CODE = "code"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    ACCOUNT = "account"
    CUSTOMER_PAYMENTS = "customerPayments"

class Enum270(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    AMOUNT_DECIMAL_PLACES = "amountDecimalPlaces"
    AMOUNT_ROUNDING_PRECISION = "amountRoundingPrecision"
    CODE = "code"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    SYMBOL = "symbol"

class Enum271(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ADDRESS = "address"
    BLOCKED = "blocked"
    CURRENCY_CODE = "currencyCode"
    CURRENCY_ID = "currencyId"
    DISPLAY_NAME = "displayName"
    EMAIL = "email"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    NUMBER = "number"
    PAYMENT_METHOD_ID = "paymentMethodId"
    PAYMENT_TERMS_ID = "paymentTermsId"
    PHONE_NUMBER = "phoneNumber"
    SHIPMENT_METHOD_ID = "shipmentMethodId"
    TAX_AREA_DISPLAY_NAME = "taxAreaDisplayName"
    TAX_AREA_ID = "taxAreaId"
    TAX_LIABLE = "taxLiable"
    TAX_REGISTRATION_NUMBER = "taxRegistrationNumber"
    TYPE = "type"
    WEBSITE = "website"
    CURRENCY = "currency"
    PAYMENT_METHOD = "paymentMethod"
    PAYMENT_TERM = "paymentTerm"
    PICTURE = "picture"
    SHIPMENT_METHOD = "shipmentMethod"

class Enum272(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    CURRENCY = "currency"
    PAYMENT_METHOD = "paymentMethod"
    PAYMENT_TERM = "paymentTerm"
    PICTURE = "picture"
    SHIPMENT_METHOD = "shipmentMethod"

class Enum273(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    AMOUNT_DECIMAL_PLACES = "amountDecimalPlaces"
    AMOUNT_ROUNDING_PRECISION = "amountRoundingPrecision"
    CODE = "code"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    SYMBOL = "symbol"

class Enum274(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CODE = "code"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"

class Enum275(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CALCULATE_DISCOUNT_ON_CREDIT_MEMOS = "calculateDiscountOnCreditMemos"
    CODE = "code"
    DISCOUNT_DATE_CALCULATION = "discountDateCalculation"
    DISCOUNT_PERCENT = "discountPercent"
    DISPLAY_NAME = "displayName"
    DUE_DATE_CALCULATION = "dueDateCalculation"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"

class Enum276(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    CONTENT = "content"
    CONTENT_DESC = "content desc"
    CONTENT_TYPE = "contentType"
    CONTENT_TYPE_DESC = "contentType desc"
    HEIGHT = "height"
    HEIGHT_DESC = "height desc"
    WIDTH = "width"
    WIDTH_DESC = "width desc"

class Enum277(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CONTENT = "content"
    CONTENT_TYPE = "contentType"
    HEIGHT = "height"
    WIDTH = "width"

class Enum278(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CONTENT = "content"
    CONTENT_TYPE = "contentType"
    HEIGHT = "height"
    WIDTH = "width"

class Enum279(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CODE = "code"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"

class Enum28(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    ACCOUNT = "account"
    CUSTOMER_PAYMENTS = "customerPayments"

class Enum280(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CALCULATE_DISCOUNT_ON_CREDIT_MEMOS = "calculateDiscountOnCreditMemos"
    CODE = "code"
    DISCOUNT_DATE_CALCULATION = "discountDateCalculation"
    DISCOUNT_PERCENT = "discountPercent"
    DISPLAY_NAME = "displayName"
    DUE_DATE_CALCULATION = "dueDateCalculation"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"

class Enum281(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    ACCOUNT_ID = "accountId"
    ACCOUNT_ID_DESC = "accountId desc"
    AMOUNT_EXCLUDING_TAX = "amountExcludingTax"
    AMOUNT_EXCLUDING_TAX_DESC = "amountExcludingTax desc"
    AMOUNT_INCLUDING_TAX = "amountIncludingTax"
    AMOUNT_INCLUDING_TAX_DESC = "amountIncludingTax desc"
    DESCRIPTION = "description"
    DESCRIPTION_DESC = "description desc"
    DISCOUNT_AMOUNT = "discountAmount"
    DISCOUNT_AMOUNT_DESC = "discountAmount desc"
    DISCOUNT_APPLIED_BEFORE_TAX = "discountAppliedBeforeTax"
    DISCOUNT_APPLIED_BEFORE_TAX_DESC = "discountAppliedBeforeTax desc"
    DISCOUNT_PERCENT = "discountPercent"
    DISCOUNT_PERCENT_DESC = "discountPercent desc"
    DOCUMENT_ID = "documentId"
    DOCUMENT_ID_DESC = "documentId desc"
    INVOICE_DISCOUNT_ALLOCATION = "invoiceDiscountAllocation"
    INVOICE_DISCOUNT_ALLOCATION_DESC = "invoiceDiscountAllocation desc"
    INVOICED_QUANTITY = "invoicedQuantity"
    INVOICED_QUANTITY_DESC = "invoicedQuantity desc"
    INVOICE_QUANTITY = "invoiceQuantity"
    INVOICE_QUANTITY_DESC = "invoiceQuantity desc"
    ITEM_ID = "itemId"
    ITEM_ID_DESC = "itemId desc"
    LINE_TYPE = "lineType"
    LINE_TYPE_DESC = "lineType desc"
    NET_AMOUNT = "netAmount"
    NET_AMOUNT_DESC = "netAmount desc"
    NET_AMOUNT_INCLUDING_TAX = "netAmountIncludingTax"
    NET_AMOUNT_INCLUDING_TAX_DESC = "netAmountIncludingTax desc"
    NET_TAX_AMOUNT = "netTaxAmount"
    NET_TAX_AMOUNT_DESC = "netTaxAmount desc"
    QUANTITY = "quantity"
    QUANTITY_DESC = "quantity desc"
    SEQUENCE = "sequence"
    SEQUENCE_DESC = "sequence desc"
    SHIPMENT_DATE = "shipmentDate"
    SHIPMENT_DATE_DESC = "shipmentDate desc"
    SHIPPED_QUANTITY = "shippedQuantity"
    SHIPPED_QUANTITY_DESC = "shippedQuantity desc"
    SHIP_QUANTITY = "shipQuantity"
    SHIP_QUANTITY_DESC = "shipQuantity desc"
    TAX_CODE = "taxCode"
    TAX_CODE_DESC = "taxCode desc"
    TAX_PERCENT = "taxPercent"
    TAX_PERCENT_DESC = "taxPercent desc"
    TOTAL_TAX_AMOUNT = "totalTaxAmount"
    TOTAL_TAX_AMOUNT_DESC = "totalTaxAmount desc"
    UNIT_OF_MEASURE_ID = "unitOfMeasureId"
    UNIT_OF_MEASURE_ID_DESC = "unitOfMeasureId desc"
    UNIT_PRICE = "unitPrice"
    UNIT_PRICE_DESC = "unitPrice desc"

class Enum282(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ACCOUNT_ID = "accountId"
    AMOUNT_EXCLUDING_TAX = "amountExcludingTax"
    AMOUNT_INCLUDING_TAX = "amountIncludingTax"
    DESCRIPTION = "description"
    DISCOUNT_AMOUNT = "discountAmount"
    DISCOUNT_APPLIED_BEFORE_TAX = "discountAppliedBeforeTax"
    DISCOUNT_PERCENT = "discountPercent"
    DOCUMENT_ID = "documentId"
    INVOICE_DISCOUNT_ALLOCATION = "invoiceDiscountAllocation"
    INVOICED_QUANTITY = "invoicedQuantity"
    INVOICE_QUANTITY = "invoiceQuantity"
    ITEM_ID = "itemId"
    LINE_TYPE = "lineType"
    NET_AMOUNT = "netAmount"
    NET_AMOUNT_INCLUDING_TAX = "netAmountIncludingTax"
    NET_TAX_AMOUNT = "netTaxAmount"
    QUANTITY = "quantity"
    SEQUENCE = "sequence"
    SHIPMENT_DATE = "shipmentDate"
    SHIPPED_QUANTITY = "shippedQuantity"
    SHIP_QUANTITY = "shipQuantity"
    TAX_CODE = "taxCode"
    TAX_PERCENT = "taxPercent"
    TOTAL_TAX_AMOUNT = "totalTaxAmount"
    UNIT_OF_MEASURE_ID = "unitOfMeasureId"
    UNIT_PRICE = "unitPrice"
    ACCOUNT = "account"
    ITEM = "item"

class Enum283(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    ACCOUNT = "account"
    ITEM = "item"

class Enum284(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ACCOUNT_ID = "accountId"
    AMOUNT_EXCLUDING_TAX = "amountExcludingTax"
    AMOUNT_INCLUDING_TAX = "amountIncludingTax"
    DESCRIPTION = "description"
    DISCOUNT_AMOUNT = "discountAmount"
    DISCOUNT_APPLIED_BEFORE_TAX = "discountAppliedBeforeTax"
    DISCOUNT_PERCENT = "discountPercent"
    DOCUMENT_ID = "documentId"
    INVOICE_DISCOUNT_ALLOCATION = "invoiceDiscountAllocation"
    INVOICED_QUANTITY = "invoicedQuantity"
    INVOICE_QUANTITY = "invoiceQuantity"
    ITEM_ID = "itemId"
    LINE_TYPE = "lineType"
    NET_AMOUNT = "netAmount"
    NET_AMOUNT_INCLUDING_TAX = "netAmountIncludingTax"
    NET_TAX_AMOUNT = "netTaxAmount"
    QUANTITY = "quantity"
    SEQUENCE = "sequence"
    SHIPMENT_DATE = "shipmentDate"
    SHIPPED_QUANTITY = "shippedQuantity"
    SHIP_QUANTITY = "shipQuantity"
    TAX_CODE = "taxCode"
    TAX_PERCENT = "taxPercent"
    TOTAL_TAX_AMOUNT = "totalTaxAmount"
    UNIT_OF_MEASURE_ID = "unitOfMeasureId"
    UNIT_PRICE = "unitPrice"
    ACCOUNT = "account"
    ITEM = "item"

class Enum285(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    ACCOUNT = "account"
    ITEM = "item"

class Enum286(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    BLOCKED = "blocked"
    CATEGORY = "category"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    NUMBER = "number"
    SUB_CATEGORY = "subCategory"

class Enum287(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    BASE_UNIT_OF_MEASURE_ID = "baseUnitOfMeasureId"
    BLOCKED = "blocked"
    DISPLAY_NAME = "displayName"
    GTIN = "gtin"
    INVENTORY = "inventory"
    ITEM_CATEGORY_CODE = "itemCategoryCode"
    ITEM_CATEGORY_ID = "itemCategoryId"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    NUMBER = "number"
    PRICE_INCLUDES_TAX = "priceIncludesTax"
    TAX_GROUP_CODE = "taxGroupCode"
    TAX_GROUP_ID = "taxGroupId"
    TYPE = "type"
    UNIT_COST = "unitCost"
    UNIT_PRICE = "unitPrice"
    ITEM_CATEGORY = "itemCategory"
    PICTURE = "picture"

class Enum288(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    ITEM_CATEGORY = "itemCategory"
    PICTURE = "picture"

class Enum289(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CODE = "code"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"

class Enum29(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    BLOCKED = "blocked"
    CATEGORY = "category"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    NUMBER = "number"
    SUB_CATEGORY = "subCategory"

class Enum290(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    CONTENT = "content"
    CONTENT_DESC = "content desc"
    CONTENT_TYPE = "contentType"
    CONTENT_TYPE_DESC = "contentType desc"
    HEIGHT = "height"
    HEIGHT_DESC = "height desc"
    WIDTH = "width"
    WIDTH_DESC = "width desc"

class Enum291(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CONTENT = "content"
    CONTENT_TYPE = "contentType"
    HEIGHT = "height"
    WIDTH = "width"

class Enum292(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CONTENT = "content"
    CONTENT_TYPE = "contentType"
    HEIGHT = "height"
    WIDTH = "width"

class Enum293(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    ACCOUNT_ID = "accountId"
    ACCOUNT_ID_DESC = "accountId desc"
    AMOUNT_EXCLUDING_TAX = "amountExcludingTax"
    AMOUNT_EXCLUDING_TAX_DESC = "amountExcludingTax desc"
    AMOUNT_INCLUDING_TAX = "amountIncludingTax"
    AMOUNT_INCLUDING_TAX_DESC = "amountIncludingTax desc"
    DESCRIPTION = "description"
    DESCRIPTION_DESC = "description desc"
    DISCOUNT_AMOUNT = "discountAmount"
    DISCOUNT_AMOUNT_DESC = "discountAmount desc"
    DISCOUNT_APPLIED_BEFORE_TAX = "discountAppliedBeforeTax"
    DISCOUNT_APPLIED_BEFORE_TAX_DESC = "discountAppliedBeforeTax desc"
    DISCOUNT_PERCENT = "discountPercent"
    DISCOUNT_PERCENT_DESC = "discountPercent desc"
    DOCUMENT_ID = "documentId"
    DOCUMENT_ID_DESC = "documentId desc"
    ITEM_ID = "itemId"
    ITEM_ID_DESC = "itemId desc"
    LINE_TYPE = "lineType"
    LINE_TYPE_DESC = "lineType desc"
    NET_AMOUNT = "netAmount"
    NET_AMOUNT_DESC = "netAmount desc"
    NET_AMOUNT_INCLUDING_TAX = "netAmountIncludingTax"
    NET_AMOUNT_INCLUDING_TAX_DESC = "netAmountIncludingTax desc"
    NET_TAX_AMOUNT = "netTaxAmount"
    NET_TAX_AMOUNT_DESC = "netTaxAmount desc"
    QUANTITY = "quantity"
    QUANTITY_DESC = "quantity desc"
    SEQUENCE = "sequence"
    SEQUENCE_DESC = "sequence desc"
    TAX_CODE = "taxCode"
    TAX_CODE_DESC = "taxCode desc"
    TAX_PERCENT = "taxPercent"
    TAX_PERCENT_DESC = "taxPercent desc"
    TOTAL_TAX_AMOUNT = "totalTaxAmount"
    TOTAL_TAX_AMOUNT_DESC = "totalTaxAmount desc"
    UNIT_OF_MEASURE_ID = "unitOfMeasureId"
    UNIT_OF_MEASURE_ID_DESC = "unitOfMeasureId desc"
    UNIT_PRICE = "unitPrice"
    UNIT_PRICE_DESC = "unitPrice desc"

class Enum294(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ACCOUNT_ID = "accountId"
    AMOUNT_EXCLUDING_TAX = "amountExcludingTax"
    AMOUNT_INCLUDING_TAX = "amountIncludingTax"
    DESCRIPTION = "description"
    DISCOUNT_AMOUNT = "discountAmount"
    DISCOUNT_APPLIED_BEFORE_TAX = "discountAppliedBeforeTax"
    DISCOUNT_PERCENT = "discountPercent"
    DOCUMENT_ID = "documentId"
    ITEM_ID = "itemId"
    LINE_TYPE = "lineType"
    NET_AMOUNT = "netAmount"
    NET_AMOUNT_INCLUDING_TAX = "netAmountIncludingTax"
    NET_TAX_AMOUNT = "netTaxAmount"
    QUANTITY = "quantity"
    SEQUENCE = "sequence"
    TAX_CODE = "taxCode"
    TAX_PERCENT = "taxPercent"
    TOTAL_TAX_AMOUNT = "totalTaxAmount"
    UNIT_OF_MEASURE_ID = "unitOfMeasureId"
    UNIT_PRICE = "unitPrice"
    ACCOUNT = "account"
    ITEM = "item"

class Enum295(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    ACCOUNT = "account"
    ITEM = "item"

class Enum296(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ACCOUNT_ID = "accountId"
    AMOUNT_EXCLUDING_TAX = "amountExcludingTax"
    AMOUNT_INCLUDING_TAX = "amountIncludingTax"
    DESCRIPTION = "description"
    DISCOUNT_AMOUNT = "discountAmount"
    DISCOUNT_APPLIED_BEFORE_TAX = "discountAppliedBeforeTax"
    DISCOUNT_PERCENT = "discountPercent"
    DOCUMENT_ID = "documentId"
    ITEM_ID = "itemId"
    LINE_TYPE = "lineType"
    NET_AMOUNT = "netAmount"
    NET_AMOUNT_INCLUDING_TAX = "netAmountIncludingTax"
    NET_TAX_AMOUNT = "netTaxAmount"
    QUANTITY = "quantity"
    SEQUENCE = "sequence"
    TAX_CODE = "taxCode"
    TAX_PERCENT = "taxPercent"
    TOTAL_TAX_AMOUNT = "totalTaxAmount"
    UNIT_OF_MEASURE_ID = "unitOfMeasureId"
    UNIT_PRICE = "unitPrice"
    ACCOUNT = "account"
    ITEM = "item"

class Enum297(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    ACCOUNT = "account"
    ITEM = "item"

class Enum298(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    BLOCKED = "blocked"
    CATEGORY = "category"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    NUMBER = "number"
    SUB_CATEGORY = "subCategory"

class Enum299(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    BASE_UNIT_OF_MEASURE_ID = "baseUnitOfMeasureId"
    BLOCKED = "blocked"
    DISPLAY_NAME = "displayName"
    GTIN = "gtin"
    INVENTORY = "inventory"
    ITEM_CATEGORY_CODE = "itemCategoryCode"
    ITEM_CATEGORY_ID = "itemCategoryId"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    NUMBER = "number"
    PRICE_INCLUDES_TAX = "priceIncludesTax"
    TAX_GROUP_CODE = "taxGroupCode"
    TAX_GROUP_ID = "taxGroupId"
    TYPE = "type"
    UNIT_COST = "unitCost"
    UNIT_PRICE = "unitPrice"
    ITEM_CATEGORY = "itemCategory"
    PICTURE = "picture"

class Enum30(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    AMOUNT = "amount"
    AMOUNT_DESC = "amount desc"
    APPLIES_TO_INVOICE_ID = "appliesToInvoiceId"
    APPLIES_TO_INVOICE_ID_DESC = "appliesToInvoiceId desc"
    APPLIES_TO_INVOICE_NUMBER = "appliesToInvoiceNumber"
    APPLIES_TO_INVOICE_NUMBER_DESC = "appliesToInvoiceNumber desc"
    COMMENT = "comment"
    COMMENT_DESC = "comment desc"
    CONTACT_ID = "contactId"
    CONTACT_ID_DESC = "contactId desc"
    CUSTOMER_ID = "customerId"
    CUSTOMER_ID_DESC = "customerId desc"
    CUSTOMER_NUMBER = "customerNumber"
    CUSTOMER_NUMBER_DESC = "customerNumber desc"
    DESCRIPTION = "description"
    DESCRIPTION_DESC = "description desc"
    DOCUMENT_NUMBER = "documentNumber"
    DOCUMENT_NUMBER_DESC = "documentNumber desc"
    EXTERNAL_DOCUMENT_NUMBER = "externalDocumentNumber"
    EXTERNAL_DOCUMENT_NUMBER_DESC = "externalDocumentNumber desc"
    JOURNAL_DISPLAY_NAME = "journalDisplayName"
    JOURNAL_DISPLAY_NAME_DESC = "journalDisplayName desc"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    LAST_MODIFIED_DATE_TIME_DESC = "lastModifiedDateTime desc"
    LINE_NUMBER = "lineNumber"
    LINE_NUMBER_DESC = "lineNumber desc"
    POSTING_DATE = "postingDate"
    POSTING_DATE_DESC = "postingDate desc"

class Enum300(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    ITEM_CATEGORY = "itemCategory"
    PICTURE = "picture"

class Enum301(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CODE = "code"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"

class Enum302(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    CONTENT = "content"
    CONTENT_DESC = "content desc"
    CONTENT_TYPE = "contentType"
    CONTENT_TYPE_DESC = "contentType desc"
    HEIGHT = "height"
    HEIGHT_DESC = "height desc"
    WIDTH = "width"
    WIDTH_DESC = "width desc"

class Enum303(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CONTENT = "content"
    CONTENT_TYPE = "contentType"
    HEIGHT = "height"
    WIDTH = "width"

class Enum304(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CONTENT = "content"
    CONTENT_TYPE = "contentType"
    HEIGHT = "height"
    WIDTH = "width"

class Enum305(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    ACCEPTED_DATE = "acceptedDate"
    ACCEPTED_DATE_DESC = "acceptedDate desc"
    BILLING_POSTAL_ADDRESS = "billingPostalAddress"
    BILLING_POSTAL_ADDRESS_DESC = "billingPostalAddress desc"
    BILL_TO_CUSTOMER_ID = "billToCustomerId"
    BILL_TO_CUSTOMER_ID_DESC = "billToCustomerId desc"
    BILL_TO_CUSTOMER_NUMBER = "billToCustomerNumber"
    BILL_TO_CUSTOMER_NUMBER_DESC = "billToCustomerNumber desc"
    BILL_TO_NAME = "billToName"
    BILL_TO_NAME_DESC = "billToName desc"
    CURRENCY_CODE = "currencyCode"
    CURRENCY_CODE_DESC = "currencyCode desc"
    CURRENCY_ID = "currencyId"
    CURRENCY_ID_DESC = "currencyId desc"
    CUSTOMER_ID = "customerId"
    CUSTOMER_ID_DESC = "customerId desc"
    CUSTOMER_NAME = "customerName"
    CUSTOMER_NAME_DESC = "customerName desc"
    CUSTOMER_NUMBER = "customerNumber"
    CUSTOMER_NUMBER_DESC = "customerNumber desc"
    DISCOUNT_AMOUNT = "discountAmount"
    DISCOUNT_AMOUNT_DESC = "discountAmount desc"
    DOCUMENT_DATE = "documentDate"
    DOCUMENT_DATE_DESC = "documentDate desc"
    DUE_DATE = "dueDate"
    DUE_DATE_DESC = "dueDate desc"
    EMAIL = "email"
    EMAIL_DESC = "email desc"
    EXTERNAL_DOCUMENT_NUMBER = "externalDocumentNumber"
    EXTERNAL_DOCUMENT_NUMBER_DESC = "externalDocumentNumber desc"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    LAST_MODIFIED_DATE_TIME_DESC = "lastModifiedDateTime desc"
    NUMBER = "number"
    NUMBER_DESC = "number desc"
    PAYMENT_TERMS_ID = "paymentTermsId"
    PAYMENT_TERMS_ID_DESC = "paymentTermsId desc"
    PHONE_NUMBER = "phoneNumber"
    PHONE_NUMBER_DESC = "phoneNumber desc"
    SALESPERSON = "salesperson"
    SALESPERSON_DESC = "salesperson desc"
    SELLING_POSTAL_ADDRESS = "sellingPostalAddress"
    SELLING_POSTAL_ADDRESS_DESC = "sellingPostalAddress desc"
    SENT_DATE = "sentDate"
    SENT_DATE_DESC = "sentDate desc"
    SHIPMENT_METHOD_ID = "shipmentMethodId"
    SHIPMENT_METHOD_ID_DESC = "shipmentMethodId desc"
    SHIPPING_POSTAL_ADDRESS = "shippingPostalAddress"
    SHIPPING_POSTAL_ADDRESS_DESC = "shippingPostalAddress desc"
    SHIP_TO_CONTACT = "shipToContact"
    SHIP_TO_CONTACT_DESC = "shipToContact desc"
    SHIP_TO_NAME = "shipToName"
    SHIP_TO_NAME_DESC = "shipToName desc"
    STATUS = "status"
    STATUS_DESC = "status desc"
    TOTAL_AMOUNT_EXCLUDING_TAX = "totalAmountExcludingTax"
    TOTAL_AMOUNT_EXCLUDING_TAX_DESC = "totalAmountExcludingTax desc"
    TOTAL_AMOUNT_INCLUDING_TAX = "totalAmountIncludingTax"
    TOTAL_AMOUNT_INCLUDING_TAX_DESC = "totalAmountIncludingTax desc"
    TOTAL_TAX_AMOUNT = "totalTaxAmount"
    TOTAL_TAX_AMOUNT_DESC = "totalTaxAmount desc"
    VALID_UNTIL_DATE = "validUntilDate"
    VALID_UNTIL_DATE_DESC = "validUntilDate desc"

class Enum306(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ACCEPTED_DATE = "acceptedDate"
    BILLING_POSTAL_ADDRESS = "billingPostalAddress"
    BILL_TO_CUSTOMER_ID = "billToCustomerId"
    BILL_TO_CUSTOMER_NUMBER = "billToCustomerNumber"
    BILL_TO_NAME = "billToName"
    CURRENCY_CODE = "currencyCode"
    CURRENCY_ID = "currencyId"
    CUSTOMER_ID = "customerId"
    CUSTOMER_NAME = "customerName"
    CUSTOMER_NUMBER = "customerNumber"
    DISCOUNT_AMOUNT = "discountAmount"
    DOCUMENT_DATE = "documentDate"
    DUE_DATE = "dueDate"
    EMAIL = "email"
    EXTERNAL_DOCUMENT_NUMBER = "externalDocumentNumber"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    NUMBER = "number"
    PAYMENT_TERMS_ID = "paymentTermsId"
    PHONE_NUMBER = "phoneNumber"
    SALESPERSON = "salesperson"
    SELLING_POSTAL_ADDRESS = "sellingPostalAddress"
    SENT_DATE = "sentDate"
    SHIPMENT_METHOD_ID = "shipmentMethodId"
    SHIPPING_POSTAL_ADDRESS = "shippingPostalAddress"
    SHIP_TO_CONTACT = "shipToContact"
    SHIP_TO_NAME = "shipToName"
    STATUS = "status"
    TOTAL_AMOUNT_EXCLUDING_TAX = "totalAmountExcludingTax"
    TOTAL_AMOUNT_INCLUDING_TAX = "totalAmountIncludingTax"
    TOTAL_TAX_AMOUNT = "totalTaxAmount"
    VALID_UNTIL_DATE = "validUntilDate"
    CURRENCY = "currency"
    CUSTOMER = "customer"
    PAYMENT_TERM = "paymentTerm"
    SALES_QUOTE_LINES = "salesQuoteLines"
    SHIPMENT_METHOD = "shipmentMethod"

class Enum307(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    CURRENCY = "currency"
    CUSTOMER = "customer"
    PAYMENT_TERM = "paymentTerm"
    SALES_QUOTE_LINES = "salesQuoteLines"
    SHIPMENT_METHOD = "shipmentMethod"

class Enum308(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ACCEPTED_DATE = "acceptedDate"
    BILLING_POSTAL_ADDRESS = "billingPostalAddress"
    BILL_TO_CUSTOMER_ID = "billToCustomerId"
    BILL_TO_CUSTOMER_NUMBER = "billToCustomerNumber"
    BILL_TO_NAME = "billToName"
    CURRENCY_CODE = "currencyCode"
    CURRENCY_ID = "currencyId"
    CUSTOMER_ID = "customerId"
    CUSTOMER_NAME = "customerName"
    CUSTOMER_NUMBER = "customerNumber"
    DISCOUNT_AMOUNT = "discountAmount"
    DOCUMENT_DATE = "documentDate"
    DUE_DATE = "dueDate"
    EMAIL = "email"
    EXTERNAL_DOCUMENT_NUMBER = "externalDocumentNumber"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    NUMBER = "number"
    PAYMENT_TERMS_ID = "paymentTermsId"
    PHONE_NUMBER = "phoneNumber"
    SALESPERSON = "salesperson"
    SELLING_POSTAL_ADDRESS = "sellingPostalAddress"
    SENT_DATE = "sentDate"
    SHIPMENT_METHOD_ID = "shipmentMethodId"
    SHIPPING_POSTAL_ADDRESS = "shippingPostalAddress"
    SHIP_TO_CONTACT = "shipToContact"
    SHIP_TO_NAME = "shipToName"
    STATUS = "status"
    TOTAL_AMOUNT_EXCLUDING_TAX = "totalAmountExcludingTax"
    TOTAL_AMOUNT_INCLUDING_TAX = "totalAmountIncludingTax"
    TOTAL_TAX_AMOUNT = "totalTaxAmount"
    VALID_UNTIL_DATE = "validUntilDate"
    CURRENCY = "currency"
    CUSTOMER = "customer"
    PAYMENT_TERM = "paymentTerm"
    SALES_QUOTE_LINES = "salesQuoteLines"
    SHIPMENT_METHOD = "shipmentMethod"

class Enum309(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    CURRENCY = "currency"
    CUSTOMER = "customer"
    PAYMENT_TERM = "paymentTerm"
    SALES_QUOTE_LINES = "salesQuoteLines"
    SHIPMENT_METHOD = "shipmentMethod"

class Enum31(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    AMOUNT = "amount"
    APPLIES_TO_INVOICE_ID = "appliesToInvoiceId"
    APPLIES_TO_INVOICE_NUMBER = "appliesToInvoiceNumber"
    COMMENT = "comment"
    CONTACT_ID = "contactId"
    CUSTOMER_ID = "customerId"
    CUSTOMER_NUMBER = "customerNumber"
    DESCRIPTION = "description"
    DOCUMENT_NUMBER = "documentNumber"
    EXTERNAL_DOCUMENT_NUMBER = "externalDocumentNumber"
    JOURNAL_DISPLAY_NAME = "journalDisplayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    LINE_NUMBER = "lineNumber"
    POSTING_DATE = "postingDate"
    CUSTOMER = "customer"

class Enum310(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    AMOUNT_DECIMAL_PLACES = "amountDecimalPlaces"
    AMOUNT_ROUNDING_PRECISION = "amountRoundingPrecision"
    CODE = "code"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    SYMBOL = "symbol"

class Enum311(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ADDRESS = "address"
    BLOCKED = "blocked"
    CURRENCY_CODE = "currencyCode"
    CURRENCY_ID = "currencyId"
    DISPLAY_NAME = "displayName"
    EMAIL = "email"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    NUMBER = "number"
    PAYMENT_METHOD_ID = "paymentMethodId"
    PAYMENT_TERMS_ID = "paymentTermsId"
    PHONE_NUMBER = "phoneNumber"
    SHIPMENT_METHOD_ID = "shipmentMethodId"
    TAX_AREA_DISPLAY_NAME = "taxAreaDisplayName"
    TAX_AREA_ID = "taxAreaId"
    TAX_LIABLE = "taxLiable"
    TAX_REGISTRATION_NUMBER = "taxRegistrationNumber"
    TYPE = "type"
    WEBSITE = "website"
    CURRENCY = "currency"
    PAYMENT_METHOD = "paymentMethod"
    PAYMENT_TERM = "paymentTerm"
    PICTURE = "picture"
    SHIPMENT_METHOD = "shipmentMethod"

class Enum312(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    CURRENCY = "currency"
    PAYMENT_METHOD = "paymentMethod"
    PAYMENT_TERM = "paymentTerm"
    PICTURE = "picture"
    SHIPMENT_METHOD = "shipmentMethod"

class Enum313(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    AMOUNT_DECIMAL_PLACES = "amountDecimalPlaces"
    AMOUNT_ROUNDING_PRECISION = "amountRoundingPrecision"
    CODE = "code"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    SYMBOL = "symbol"

class Enum314(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CODE = "code"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"

class Enum315(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CALCULATE_DISCOUNT_ON_CREDIT_MEMOS = "calculateDiscountOnCreditMemos"
    CODE = "code"
    DISCOUNT_DATE_CALCULATION = "discountDateCalculation"
    DISCOUNT_PERCENT = "discountPercent"
    DISPLAY_NAME = "displayName"
    DUE_DATE_CALCULATION = "dueDateCalculation"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"

class Enum316(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    CONTENT = "content"
    CONTENT_DESC = "content desc"
    CONTENT_TYPE = "contentType"
    CONTENT_TYPE_DESC = "contentType desc"
    HEIGHT = "height"
    HEIGHT_DESC = "height desc"
    WIDTH = "width"
    WIDTH_DESC = "width desc"

class Enum317(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CONTENT = "content"
    CONTENT_TYPE = "contentType"
    HEIGHT = "height"
    WIDTH = "width"

class Enum318(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CONTENT = "content"
    CONTENT_TYPE = "contentType"
    HEIGHT = "height"
    WIDTH = "width"

class Enum319(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CODE = "code"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"

class Enum320(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CALCULATE_DISCOUNT_ON_CREDIT_MEMOS = "calculateDiscountOnCreditMemos"
    CODE = "code"
    DISCOUNT_DATE_CALCULATION = "discountDateCalculation"
    DISCOUNT_PERCENT = "discountPercent"
    DISPLAY_NAME = "displayName"
    DUE_DATE_CALCULATION = "dueDateCalculation"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"

class Enum321(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    ACCOUNT_ID = "accountId"
    ACCOUNT_ID_DESC = "accountId desc"
    AMOUNT_EXCLUDING_TAX = "amountExcludingTax"
    AMOUNT_EXCLUDING_TAX_DESC = "amountExcludingTax desc"
    AMOUNT_INCLUDING_TAX = "amountIncludingTax"
    AMOUNT_INCLUDING_TAX_DESC = "amountIncludingTax desc"
    DESCRIPTION = "description"
    DESCRIPTION_DESC = "description desc"
    DISCOUNT_AMOUNT = "discountAmount"
    DISCOUNT_AMOUNT_DESC = "discountAmount desc"
    DISCOUNT_APPLIED_BEFORE_TAX = "discountAppliedBeforeTax"
    DISCOUNT_APPLIED_BEFORE_TAX_DESC = "discountAppliedBeforeTax desc"
    DISCOUNT_PERCENT = "discountPercent"
    DISCOUNT_PERCENT_DESC = "discountPercent desc"
    DOCUMENT_ID = "documentId"
    DOCUMENT_ID_DESC = "documentId desc"
    ITEM_ID = "itemId"
    ITEM_ID_DESC = "itemId desc"
    LINE_TYPE = "lineType"
    LINE_TYPE_DESC = "lineType desc"
    NET_AMOUNT = "netAmount"
    NET_AMOUNT_DESC = "netAmount desc"
    NET_AMOUNT_INCLUDING_TAX = "netAmountIncludingTax"
    NET_AMOUNT_INCLUDING_TAX_DESC = "netAmountIncludingTax desc"
    NET_TAX_AMOUNT = "netTaxAmount"
    NET_TAX_AMOUNT_DESC = "netTaxAmount desc"
    QUANTITY = "quantity"
    QUANTITY_DESC = "quantity desc"
    SEQUENCE = "sequence"
    SEQUENCE_DESC = "sequence desc"
    TAX_CODE = "taxCode"
    TAX_CODE_DESC = "taxCode desc"
    TAX_PERCENT = "taxPercent"
    TAX_PERCENT_DESC = "taxPercent desc"
    TOTAL_TAX_AMOUNT = "totalTaxAmount"
    TOTAL_TAX_AMOUNT_DESC = "totalTaxAmount desc"
    UNIT_OF_MEASURE_ID = "unitOfMeasureId"
    UNIT_OF_MEASURE_ID_DESC = "unitOfMeasureId desc"
    UNIT_PRICE = "unitPrice"
    UNIT_PRICE_DESC = "unitPrice desc"

class Enum322(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ACCOUNT_ID = "accountId"
    AMOUNT_EXCLUDING_TAX = "amountExcludingTax"
    AMOUNT_INCLUDING_TAX = "amountIncludingTax"
    DESCRIPTION = "description"
    DISCOUNT_AMOUNT = "discountAmount"
    DISCOUNT_APPLIED_BEFORE_TAX = "discountAppliedBeforeTax"
    DISCOUNT_PERCENT = "discountPercent"
    DOCUMENT_ID = "documentId"
    ITEM_ID = "itemId"
    LINE_TYPE = "lineType"
    NET_AMOUNT = "netAmount"
    NET_AMOUNT_INCLUDING_TAX = "netAmountIncludingTax"
    NET_TAX_AMOUNT = "netTaxAmount"
    QUANTITY = "quantity"
    SEQUENCE = "sequence"
    TAX_CODE = "taxCode"
    TAX_PERCENT = "taxPercent"
    TOTAL_TAX_AMOUNT = "totalTaxAmount"
    UNIT_OF_MEASURE_ID = "unitOfMeasureId"
    UNIT_PRICE = "unitPrice"
    ACCOUNT = "account"
    ITEM = "item"

class Enum323(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    ACCOUNT = "account"
    ITEM = "item"

class Enum324(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ACCOUNT_ID = "accountId"
    AMOUNT_EXCLUDING_TAX = "amountExcludingTax"
    AMOUNT_INCLUDING_TAX = "amountIncludingTax"
    DESCRIPTION = "description"
    DISCOUNT_AMOUNT = "discountAmount"
    DISCOUNT_APPLIED_BEFORE_TAX = "discountAppliedBeforeTax"
    DISCOUNT_PERCENT = "discountPercent"
    DOCUMENT_ID = "documentId"
    ITEM_ID = "itemId"
    LINE_TYPE = "lineType"
    NET_AMOUNT = "netAmount"
    NET_AMOUNT_INCLUDING_TAX = "netAmountIncludingTax"
    NET_TAX_AMOUNT = "netTaxAmount"
    QUANTITY = "quantity"
    SEQUENCE = "sequence"
    TAX_CODE = "taxCode"
    TAX_PERCENT = "taxPercent"
    TOTAL_TAX_AMOUNT = "totalTaxAmount"
    UNIT_OF_MEASURE_ID = "unitOfMeasureId"
    UNIT_PRICE = "unitPrice"
    ACCOUNT = "account"
    ITEM = "item"

class Enum325(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    ACCOUNT = "account"
    ITEM = "item"

class Enum326(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    BLOCKED = "blocked"
    CATEGORY = "category"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    NUMBER = "number"
    SUB_CATEGORY = "subCategory"

class Enum327(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    BASE_UNIT_OF_MEASURE_ID = "baseUnitOfMeasureId"
    BLOCKED = "blocked"
    DISPLAY_NAME = "displayName"
    GTIN = "gtin"
    INVENTORY = "inventory"
    ITEM_CATEGORY_CODE = "itemCategoryCode"
    ITEM_CATEGORY_ID = "itemCategoryId"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    NUMBER = "number"
    PRICE_INCLUDES_TAX = "priceIncludesTax"
    TAX_GROUP_CODE = "taxGroupCode"
    TAX_GROUP_ID = "taxGroupId"
    TYPE = "type"
    UNIT_COST = "unitCost"
    UNIT_PRICE = "unitPrice"
    ITEM_CATEGORY = "itemCategory"
    PICTURE = "picture"

class Enum328(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    ITEM_CATEGORY = "itemCategory"
    PICTURE = "picture"

class Enum329(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CODE = "code"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"

class Enum33(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    AMOUNT = "amount"
    APPLIES_TO_INVOICE_ID = "appliesToInvoiceId"
    APPLIES_TO_INVOICE_NUMBER = "appliesToInvoiceNumber"
    COMMENT = "comment"
    CONTACT_ID = "contactId"
    CUSTOMER_ID = "customerId"
    CUSTOMER_NUMBER = "customerNumber"
    DESCRIPTION = "description"
    DOCUMENT_NUMBER = "documentNumber"
    EXTERNAL_DOCUMENT_NUMBER = "externalDocumentNumber"
    JOURNAL_DISPLAY_NAME = "journalDisplayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    LINE_NUMBER = "lineNumber"
    POSTING_DATE = "postingDate"
    CUSTOMER = "customer"

class Enum330(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    CONTENT = "content"
    CONTENT_DESC = "content desc"
    CONTENT_TYPE = "contentType"
    CONTENT_TYPE_DESC = "contentType desc"
    HEIGHT = "height"
    HEIGHT_DESC = "height desc"
    WIDTH = "width"
    WIDTH_DESC = "width desc"

class Enum331(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CONTENT = "content"
    CONTENT_TYPE = "contentType"
    HEIGHT = "height"
    WIDTH = "width"

class Enum332(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CONTENT = "content"
    CONTENT_TYPE = "contentType"
    HEIGHT = "height"
    WIDTH = "width"

class Enum333(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CODE = "code"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"

class Enum334(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    CODE = "code"
    CODE_DESC = "code desc"
    DISPLAY_NAME = "displayName"
    DISPLAY_NAME_DESC = "displayName desc"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    LAST_MODIFIED_DATE_TIME_DESC = "lastModifiedDateTime desc"

class Enum335(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CODE = "code"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"

class Enum336(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CODE = "code"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"

class Enum337(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    CODE = "code"
    CODE_DESC = "code desc"
    DISPLAY_NAME = "displayName"
    DISPLAY_NAME_DESC = "displayName desc"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    LAST_MODIFIED_DATE_TIME_DESC = "lastModifiedDateTime desc"
    TAX_TYPE = "taxType"
    TAX_TYPE_DESC = "taxType desc"

class Enum338(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CODE = "code"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    TAX_TYPE = "taxType"

class Enum339(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CODE = "code"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    TAX_TYPE = "taxType"

class Enum340(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    CODE = "code"
    CODE_DESC = "code desc"
    DISPLAY_NAME = "displayName"
    DISPLAY_NAME_DESC = "displayName desc"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    LAST_MODIFIED_DATE_TIME_DESC = "lastModifiedDateTime desc"
    TAX_TYPE = "taxType"
    TAX_TYPE_DESC = "taxType desc"

class Enum341(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CODE = "code"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    TAX_TYPE = "taxType"

class Enum342(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CODE = "code"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    TAX_TYPE = "taxType"

class Enum343(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    CODE = "code"
    CODE_DESC = "code desc"
    DISPLAY_NAME = "displayName"
    DISPLAY_NAME_DESC = "displayName desc"
    INTERNATIONAL_STANDARD_CODE = "internationalStandardCode"
    INTERNATIONAL_STANDARD_CODE_DESC = "internationalStandardCode desc"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    LAST_MODIFIED_DATE_TIME_DESC = "lastModifiedDateTime desc"

class Enum344(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CODE = "code"
    DISPLAY_NAME = "displayName"
    INTERNATIONAL_STANDARD_CODE = "internationalStandardCode"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"

class Enum345(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CODE = "code"
    DISPLAY_NAME = "displayName"
    INTERNATIONAL_STANDARD_CODE = "internationalStandardCode"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"

class Enum346(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    ADDRESS = "address"
    ADDRESS_DESC = "address desc"
    BALANCE = "balance"
    BALANCE_DESC = "balance desc"
    BLOCKED = "blocked"
    BLOCKED_DESC = "blocked desc"
    CURRENCY_CODE = "currencyCode"
    CURRENCY_CODE_DESC = "currencyCode desc"
    CURRENCY_ID = "currencyId"
    CURRENCY_ID_DESC = "currencyId desc"
    DISPLAY_NAME = "displayName"
    DISPLAY_NAME_DESC = "displayName desc"
    EMAIL = "email"
    EMAIL_DESC = "email desc"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    LAST_MODIFIED_DATE_TIME_DESC = "lastModifiedDateTime desc"
    NUMBER = "number"
    NUMBER_DESC = "number desc"
    PAYMENT_METHOD_ID = "paymentMethodId"
    PAYMENT_METHOD_ID_DESC = "paymentMethodId desc"
    PAYMENT_TERMS_ID = "paymentTermsId"
    PAYMENT_TERMS_ID_DESC = "paymentTermsId desc"
    PHONE_NUMBER = "phoneNumber"
    PHONE_NUMBER_DESC = "phoneNumber desc"
    TAX_LIABLE = "taxLiable"
    TAX_LIABLE_DESC = "taxLiable desc"
    TAX_REGISTRATION_NUMBER = "taxRegistrationNumber"
    TAX_REGISTRATION_NUMBER_DESC = "taxRegistrationNumber desc"
    WEBSITE = "website"
    WEBSITE_DESC = "website desc"

class Enum347(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ADDRESS = "address"
    BALANCE = "balance"
    BLOCKED = "blocked"
    CURRENCY_CODE = "currencyCode"
    CURRENCY_ID = "currencyId"
    DISPLAY_NAME = "displayName"
    EMAIL = "email"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    NUMBER = "number"
    PAYMENT_METHOD_ID = "paymentMethodId"
    PAYMENT_TERMS_ID = "paymentTermsId"
    PHONE_NUMBER = "phoneNumber"
    TAX_LIABLE = "taxLiable"
    TAX_REGISTRATION_NUMBER = "taxRegistrationNumber"
    WEBSITE = "website"
    CURRENCY = "currency"
    PAYMENT_METHOD = "paymentMethod"
    PAYMENT_TERM = "paymentTerm"
    PICTURE = "picture"

class Enum348(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    CURRENCY = "currency"
    PAYMENT_METHOD = "paymentMethod"
    PAYMENT_TERM = "paymentTerm"
    PICTURE = "picture"

class Enum349(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ADDRESS = "address"
    BALANCE = "balance"
    BLOCKED = "blocked"
    CURRENCY_CODE = "currencyCode"
    CURRENCY_ID = "currencyId"
    DISPLAY_NAME = "displayName"
    EMAIL = "email"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    NUMBER = "number"
    PAYMENT_METHOD_ID = "paymentMethodId"
    PAYMENT_TERMS_ID = "paymentTermsId"
    PHONE_NUMBER = "phoneNumber"
    TAX_LIABLE = "taxLiable"
    TAX_REGISTRATION_NUMBER = "taxRegistrationNumber"
    WEBSITE = "website"
    CURRENCY = "currency"
    PAYMENT_METHOD = "paymentMethod"
    PAYMENT_TERM = "paymentTerm"
    PICTURE = "picture"

class Enum35(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ADDRESS = "address"
    BLOCKED = "blocked"
    CURRENCY_CODE = "currencyCode"
    CURRENCY_ID = "currencyId"
    DISPLAY_NAME = "displayName"
    EMAIL = "email"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    NUMBER = "number"
    PAYMENT_METHOD_ID = "paymentMethodId"
    PAYMENT_TERMS_ID = "paymentTermsId"
    PHONE_NUMBER = "phoneNumber"
    SHIPMENT_METHOD_ID = "shipmentMethodId"
    TAX_AREA_DISPLAY_NAME = "taxAreaDisplayName"
    TAX_AREA_ID = "taxAreaId"
    TAX_LIABLE = "taxLiable"
    TAX_REGISTRATION_NUMBER = "taxRegistrationNumber"
    TYPE = "type"
    WEBSITE = "website"
    CURRENCY = "currency"
    PAYMENT_METHOD = "paymentMethod"
    PAYMENT_TERM = "paymentTerm"
    PICTURE = "picture"
    SHIPMENT_METHOD = "shipmentMethod"

class Enum350(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    CURRENCY = "currency"
    PAYMENT_METHOD = "paymentMethod"
    PAYMENT_TERM = "paymentTerm"
    PICTURE = "picture"

class Enum351(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    AMOUNT_DECIMAL_PLACES = "amountDecimalPlaces"
    AMOUNT_ROUNDING_PRECISION = "amountRoundingPrecision"
    CODE = "code"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    SYMBOL = "symbol"

class Enum352(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CODE = "code"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"

class Enum353(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CALCULATE_DISCOUNT_ON_CREDIT_MEMOS = "calculateDiscountOnCreditMemos"
    CODE = "code"
    DISCOUNT_DATE_CALCULATION = "discountDateCalculation"
    DISCOUNT_PERCENT = "discountPercent"
    DISPLAY_NAME = "displayName"
    DUE_DATE_CALCULATION = "dueDateCalculation"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"

class Enum354(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    CONTENT = "content"
    CONTENT_DESC = "content desc"
    CONTENT_TYPE = "contentType"
    CONTENT_TYPE_DESC = "contentType desc"
    HEIGHT = "height"
    HEIGHT_DESC = "height desc"
    WIDTH = "width"
    WIDTH_DESC = "width desc"

class Enum355(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CONTENT = "content"
    CONTENT_TYPE = "contentType"
    HEIGHT = "height"
    WIDTH = "width"

class Enum356(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CONTENT = "content"
    CONTENT_TYPE = "contentType"
    HEIGHT = "height"
    WIDTH = "width"

class Enum36(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    CURRENCY = "currency"
    PAYMENT_METHOD = "paymentMethod"
    PAYMENT_TERM = "paymentTerm"
    PICTURE = "picture"
    SHIPMENT_METHOD = "shipmentMethod"

class Enum37(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    AMOUNT_DECIMAL_PLACES = "amountDecimalPlaces"
    AMOUNT_ROUNDING_PRECISION = "amountRoundingPrecision"
    CODE = "code"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    SYMBOL = "symbol"

class Enum38(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CODE = "code"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"

class Enum39(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CALCULATE_DISCOUNT_ON_CREDIT_MEMOS = "calculateDiscountOnCreditMemos"
    CODE = "code"
    DISCOUNT_DATE_CALCULATION = "discountDateCalculation"
    DISCOUNT_PERCENT = "discountPercent"
    DISPLAY_NAME = "displayName"
    DUE_DATE_CALCULATION = "dueDateCalculation"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"

class Enum4(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    BUSINESS_PROFILE_ID = "businessProfileId"
    DISPLAY_NAME = "displayName"
    NAME = "name"
    SYSTEM_VERSION = "systemVersion"
    ACCOUNTS = "accounts"
    AGED_ACCOUNTS_PAYABLE = "agedAccountsPayable"
    AGED_ACCOUNTS_RECEIVABLE = "agedAccountsReceivable"
    COMPANY_INFORMATION = "companyInformation"
    COUNTRIES_REGIONS = "countriesRegions"
    CURRENCIES = "currencies"
    CUSTOMER_PAYMENT_JOURNALS = "customerPaymentJournals"
    CUSTOMER_PAYMENTS = "customerPayments"
    CUSTOMERS = "customers"
    DIMENSIONS = "dimensions"
    DIMENSION_VALUES = "dimensionValues"
    EMPLOYEES = "employees"
    GENERAL_LEDGER_ENTRIES = "generalLedgerEntries"
    ITEM_CATEGORIES = "itemCategories"
    ITEMS = "items"
    JOURNAL_LINES = "journalLines"
    JOURNALS = "journals"
    PAYMENT_METHODS = "paymentMethods"
    PAYMENT_TERMS = "paymentTerms"
    PICTURE = "picture"
    PURCHASE_INVOICE_LINES = "purchaseInvoiceLines"
    PURCHASE_INVOICES = "purchaseInvoices"
    SALES_CREDIT_MEMO_LINES = "salesCreditMemoLines"
    SALES_CREDIT_MEMOS = "salesCreditMemos"
    SALES_INVOICE_LINES = "salesInvoiceLines"
    SALES_INVOICES = "salesInvoices"
    SALES_ORDER_LINES = "salesOrderLines"
    SALES_ORDERS = "salesOrders"
    SALES_QUOTE_LINES = "salesQuoteLines"
    SALES_QUOTES = "salesQuotes"
    SHIPMENT_METHODS = "shipmentMethods"
    TAX_AREAS = "taxAreas"
    TAX_GROUPS = "taxGroups"
    UNITS_OF_MEASURE = "unitsOfMeasure"
    VENDORS = "vendors"

class Enum40(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    CONTENT = "content"
    CONTENT_DESC = "content desc"
    CONTENT_TYPE = "contentType"
    CONTENT_TYPE_DESC = "contentType desc"
    HEIGHT = "height"
    HEIGHT_DESC = "height desc"
    WIDTH = "width"
    WIDTH_DESC = "width desc"

class Enum41(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CONTENT = "content"
    CONTENT_TYPE = "contentType"
    HEIGHT = "height"
    WIDTH = "width"

class Enum42(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CONTENT = "content"
    CONTENT_TYPE = "contentType"
    HEIGHT = "height"
    WIDTH = "width"

class Enum43(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CODE = "code"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"

class Enum44(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    AMOUNT = "amount"
    AMOUNT_DESC = "amount desc"
    APPLIES_TO_INVOICE_ID = "appliesToInvoiceId"
    APPLIES_TO_INVOICE_ID_DESC = "appliesToInvoiceId desc"
    APPLIES_TO_INVOICE_NUMBER = "appliesToInvoiceNumber"
    APPLIES_TO_INVOICE_NUMBER_DESC = "appliesToInvoiceNumber desc"
    COMMENT = "comment"
    COMMENT_DESC = "comment desc"
    CONTACT_ID = "contactId"
    CONTACT_ID_DESC = "contactId desc"
    CUSTOMER_ID = "customerId"
    CUSTOMER_ID_DESC = "customerId desc"
    CUSTOMER_NUMBER = "customerNumber"
    CUSTOMER_NUMBER_DESC = "customerNumber desc"
    DESCRIPTION = "description"
    DESCRIPTION_DESC = "description desc"
    DOCUMENT_NUMBER = "documentNumber"
    DOCUMENT_NUMBER_DESC = "documentNumber desc"
    EXTERNAL_DOCUMENT_NUMBER = "externalDocumentNumber"
    EXTERNAL_DOCUMENT_NUMBER_DESC = "externalDocumentNumber desc"
    JOURNAL_DISPLAY_NAME = "journalDisplayName"
    JOURNAL_DISPLAY_NAME_DESC = "journalDisplayName desc"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    LAST_MODIFIED_DATE_TIME_DESC = "lastModifiedDateTime desc"
    LINE_NUMBER = "lineNumber"
    LINE_NUMBER_DESC = "lineNumber desc"
    POSTING_DATE = "postingDate"
    POSTING_DATE_DESC = "postingDate desc"

class Enum45(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    AMOUNT = "amount"
    APPLIES_TO_INVOICE_ID = "appliesToInvoiceId"
    APPLIES_TO_INVOICE_NUMBER = "appliesToInvoiceNumber"
    COMMENT = "comment"
    CONTACT_ID = "contactId"
    CUSTOMER_ID = "customerId"
    CUSTOMER_NUMBER = "customerNumber"
    DESCRIPTION = "description"
    DOCUMENT_NUMBER = "documentNumber"
    EXTERNAL_DOCUMENT_NUMBER = "externalDocumentNumber"
    JOURNAL_DISPLAY_NAME = "journalDisplayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    LINE_NUMBER = "lineNumber"
    POSTING_DATE = "postingDate"
    CUSTOMER = "customer"

class Enum46(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    CUSTOMER = "customer"

class Enum47(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    AMOUNT = "amount"
    APPLIES_TO_INVOICE_ID = "appliesToInvoiceId"
    APPLIES_TO_INVOICE_NUMBER = "appliesToInvoiceNumber"
    COMMENT = "comment"
    CONTACT_ID = "contactId"
    CUSTOMER_ID = "customerId"
    CUSTOMER_NUMBER = "customerNumber"
    DESCRIPTION = "description"
    DOCUMENT_NUMBER = "documentNumber"
    EXTERNAL_DOCUMENT_NUMBER = "externalDocumentNumber"
    JOURNAL_DISPLAY_NAME = "journalDisplayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    LINE_NUMBER = "lineNumber"
    POSTING_DATE = "postingDate"
    CUSTOMER = "customer"

class Enum48(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    CUSTOMER = "customer"

class Enum49(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ADDRESS = "address"
    BLOCKED = "blocked"
    CURRENCY_CODE = "currencyCode"
    CURRENCY_ID = "currencyId"
    DISPLAY_NAME = "displayName"
    EMAIL = "email"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    NUMBER = "number"
    PAYMENT_METHOD_ID = "paymentMethodId"
    PAYMENT_TERMS_ID = "paymentTermsId"
    PHONE_NUMBER = "phoneNumber"
    SHIPMENT_METHOD_ID = "shipmentMethodId"
    TAX_AREA_DISPLAY_NAME = "taxAreaDisplayName"
    TAX_AREA_ID = "taxAreaId"
    TAX_LIABLE = "taxLiable"
    TAX_REGISTRATION_NUMBER = "taxRegistrationNumber"
    TYPE = "type"
    WEBSITE = "website"
    CURRENCY = "currency"
    PAYMENT_METHOD = "paymentMethod"
    PAYMENT_TERM = "paymentTerm"
    PICTURE = "picture"
    SHIPMENT_METHOD = "shipmentMethod"

class Enum50(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    CURRENCY = "currency"
    PAYMENT_METHOD = "paymentMethod"
    PAYMENT_TERM = "paymentTerm"
    PICTURE = "picture"
    SHIPMENT_METHOD = "shipmentMethod"

class Enum51(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    AMOUNT_DECIMAL_PLACES = "amountDecimalPlaces"
    AMOUNT_ROUNDING_PRECISION = "amountRoundingPrecision"
    CODE = "code"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    SYMBOL = "symbol"

class Enum52(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CODE = "code"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"

class Enum53(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CALCULATE_DISCOUNT_ON_CREDIT_MEMOS = "calculateDiscountOnCreditMemos"
    CODE = "code"
    DISCOUNT_DATE_CALCULATION = "discountDateCalculation"
    DISCOUNT_PERCENT = "discountPercent"
    DISPLAY_NAME = "displayName"
    DUE_DATE_CALCULATION = "dueDateCalculation"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"

class Enum54(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    CONTENT = "content"
    CONTENT_DESC = "content desc"
    CONTENT_TYPE = "contentType"
    CONTENT_TYPE_DESC = "contentType desc"
    HEIGHT = "height"
    HEIGHT_DESC = "height desc"
    WIDTH = "width"
    WIDTH_DESC = "width desc"

class Enum55(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CONTENT = "content"
    CONTENT_TYPE = "contentType"
    HEIGHT = "height"
    WIDTH = "width"

class Enum56(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CONTENT = "content"
    CONTENT_TYPE = "contentType"
    HEIGHT = "height"
    WIDTH = "width"

class Enum57(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CODE = "code"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"

class Enum58(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    ADDRESS = "address"
    ADDRESS_DESC = "address desc"
    BLOCKED = "blocked"
    BLOCKED_DESC = "blocked desc"
    CURRENCY_CODE = "currencyCode"
    CURRENCY_CODE_DESC = "currencyCode desc"
    CURRENCY_ID = "currencyId"
    CURRENCY_ID_DESC = "currencyId desc"
    DISPLAY_NAME = "displayName"
    DISPLAY_NAME_DESC = "displayName desc"
    EMAIL = "email"
    EMAIL_DESC = "email desc"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    LAST_MODIFIED_DATE_TIME_DESC = "lastModifiedDateTime desc"
    NUMBER = "number"
    NUMBER_DESC = "number desc"
    PAYMENT_METHOD_ID = "paymentMethodId"
    PAYMENT_METHOD_ID_DESC = "paymentMethodId desc"
    PAYMENT_TERMS_ID = "paymentTermsId"
    PAYMENT_TERMS_ID_DESC = "paymentTermsId desc"
    PHONE_NUMBER = "phoneNumber"
    PHONE_NUMBER_DESC = "phoneNumber desc"
    SHIPMENT_METHOD_ID = "shipmentMethodId"
    SHIPMENT_METHOD_ID_DESC = "shipmentMethodId desc"
    TAX_AREA_DISPLAY_NAME = "taxAreaDisplayName"
    TAX_AREA_DISPLAY_NAME_DESC = "taxAreaDisplayName desc"
    TAX_AREA_ID = "taxAreaId"
    TAX_AREA_ID_DESC = "taxAreaId desc"
    TAX_LIABLE = "taxLiable"
    TAX_LIABLE_DESC = "taxLiable desc"
    TAX_REGISTRATION_NUMBER = "taxRegistrationNumber"
    TAX_REGISTRATION_NUMBER_DESC = "taxRegistrationNumber desc"
    TYPE = "type"
    TYPE_DESC = "type desc"
    WEBSITE = "website"
    WEBSITE_DESC = "website desc"

class Enum59(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ADDRESS = "address"
    BLOCKED = "blocked"
    CURRENCY_CODE = "currencyCode"
    CURRENCY_ID = "currencyId"
    DISPLAY_NAME = "displayName"
    EMAIL = "email"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    NUMBER = "number"
    PAYMENT_METHOD_ID = "paymentMethodId"
    PAYMENT_TERMS_ID = "paymentTermsId"
    PHONE_NUMBER = "phoneNumber"
    SHIPMENT_METHOD_ID = "shipmentMethodId"
    TAX_AREA_DISPLAY_NAME = "taxAreaDisplayName"
    TAX_AREA_ID = "taxAreaId"
    TAX_LIABLE = "taxLiable"
    TAX_REGISTRATION_NUMBER = "taxRegistrationNumber"
    TYPE = "type"
    WEBSITE = "website"
    CURRENCY = "currency"
    PAYMENT_METHOD = "paymentMethod"
    PAYMENT_TERM = "paymentTerm"
    PICTURE = "picture"
    SHIPMENT_METHOD = "shipmentMethod"

class Enum6(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    BLOCKED = "blocked"
    BLOCKED_DESC = "blocked desc"
    CATEGORY = "category"
    CATEGORY_DESC = "category desc"
    DISPLAY_NAME = "displayName"
    DISPLAY_NAME_DESC = "displayName desc"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    LAST_MODIFIED_DATE_TIME_DESC = "lastModifiedDateTime desc"
    NUMBER = "number"
    NUMBER_DESC = "number desc"
    SUB_CATEGORY = "subCategory"
    SUB_CATEGORY_DESC = "subCategory desc"

class Enum60(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    CURRENCY = "currency"
    PAYMENT_METHOD = "paymentMethod"
    PAYMENT_TERM = "paymentTerm"
    PICTURE = "picture"
    SHIPMENT_METHOD = "shipmentMethod"

class Enum61(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ADDRESS = "address"
    BLOCKED = "blocked"
    CURRENCY_CODE = "currencyCode"
    CURRENCY_ID = "currencyId"
    DISPLAY_NAME = "displayName"
    EMAIL = "email"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    NUMBER = "number"
    PAYMENT_METHOD_ID = "paymentMethodId"
    PAYMENT_TERMS_ID = "paymentTermsId"
    PHONE_NUMBER = "phoneNumber"
    SHIPMENT_METHOD_ID = "shipmentMethodId"
    TAX_AREA_DISPLAY_NAME = "taxAreaDisplayName"
    TAX_AREA_ID = "taxAreaId"
    TAX_LIABLE = "taxLiable"
    TAX_REGISTRATION_NUMBER = "taxRegistrationNumber"
    TYPE = "type"
    WEBSITE = "website"
    CURRENCY = "currency"
    PAYMENT_METHOD = "paymentMethod"
    PAYMENT_TERM = "paymentTerm"
    PICTURE = "picture"
    SHIPMENT_METHOD = "shipmentMethod"

class Enum62(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    CURRENCY = "currency"
    PAYMENT_METHOD = "paymentMethod"
    PAYMENT_TERM = "paymentTerm"
    PICTURE = "picture"
    SHIPMENT_METHOD = "shipmentMethod"

class Enum63(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    AMOUNT_DECIMAL_PLACES = "amountDecimalPlaces"
    AMOUNT_ROUNDING_PRECISION = "amountRoundingPrecision"
    CODE = "code"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    SYMBOL = "symbol"

class Enum64(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CODE = "code"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"

class Enum65(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CALCULATE_DISCOUNT_ON_CREDIT_MEMOS = "calculateDiscountOnCreditMemos"
    CODE = "code"
    DISCOUNT_DATE_CALCULATION = "discountDateCalculation"
    DISCOUNT_PERCENT = "discountPercent"
    DISPLAY_NAME = "displayName"
    DUE_DATE_CALCULATION = "dueDateCalculation"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"

class Enum66(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    CONTENT = "content"
    CONTENT_DESC = "content desc"
    CONTENT_TYPE = "contentType"
    CONTENT_TYPE_DESC = "contentType desc"
    HEIGHT = "height"
    HEIGHT_DESC = "height desc"
    WIDTH = "width"
    WIDTH_DESC = "width desc"

class Enum67(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CONTENT = "content"
    CONTENT_TYPE = "contentType"
    HEIGHT = "height"
    WIDTH = "width"

class Enum68(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CONTENT = "content"
    CONTENT_TYPE = "contentType"
    HEIGHT = "height"
    WIDTH = "width"

class Enum69(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CODE = "code"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"

class Enum7(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    BLOCKED = "blocked"
    CATEGORY = "category"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    NUMBER = "number"
    SUB_CATEGORY = "subCategory"

class Enum70(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    CODE = "code"
    CODE_DESC = "code desc"
    DISPLAY_NAME = "displayName"
    DISPLAY_NAME_DESC = "displayName desc"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    LAST_MODIFIED_DATE_TIME_DESC = "lastModifiedDateTime desc"

class Enum71(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CODE = "code"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    DIMENSION_VALUES = "dimensionValues"

class Enum72(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    DIMENSION_VALUES = "dimensionValues"

class Enum73(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CODE = "code"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    DIMENSION_VALUES = "dimensionValues"

class Enum74(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    DIMENSION_VALUES = "dimensionValues"

class Enum75(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    CODE = "code"
    CODE_DESC = "code desc"
    DISPLAY_NAME = "displayName"
    DISPLAY_NAME_DESC = "displayName desc"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    LAST_MODIFIED_DATE_TIME_DESC = "lastModifiedDateTime desc"

class Enum76(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CODE = "code"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"

class Enum77(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CODE = "code"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"

class Enum78(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    CODE = "code"
    CODE_DESC = "code desc"
    DISPLAY_NAME = "displayName"
    DISPLAY_NAME_DESC = "displayName desc"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    LAST_MODIFIED_DATE_TIME_DESC = "lastModifiedDateTime desc"

class Enum79(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CODE = "code"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"

class Enum8(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    BLOCKED = "blocked"
    CATEGORY = "category"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    NUMBER = "number"
    SUB_CATEGORY = "subCategory"

class Enum80(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CODE = "code"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"

class Enum81(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    ADDRESS = "address"
    ADDRESS_DESC = "address desc"
    BIRTH_DATE = "birthDate"
    BIRTH_DATE_DESC = "birthDate desc"
    DISPLAY_NAME = "displayName"
    DISPLAY_NAME_DESC = "displayName desc"
    EMAIL = "email"
    EMAIL_DESC = "email desc"
    EMPLOYMENT_DATE = "employmentDate"
    EMPLOYMENT_DATE_DESC = "employmentDate desc"
    GIVEN_NAME = "givenName"
    GIVEN_NAME_DESC = "givenName desc"
    JOB_TITLE = "jobTitle"
    JOB_TITLE_DESC = "jobTitle desc"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    LAST_MODIFIED_DATE_TIME_DESC = "lastModifiedDateTime desc"
    MIDDLE_NAME = "middleName"
    MIDDLE_NAME_DESC = "middleName desc"
    MOBILE_PHONE = "mobilePhone"
    MOBILE_PHONE_DESC = "mobilePhone desc"
    NUMBER = "number"
    NUMBER_DESC = "number desc"
    PERSONAL_EMAIL = "personalEmail"
    PERSONAL_EMAIL_DESC = "personalEmail desc"
    PHONE_NUMBER = "phoneNumber"
    PHONE_NUMBER_DESC = "phoneNumber desc"
    STATISTICS_GROUP_CODE = "statisticsGroupCode"
    STATISTICS_GROUP_CODE_DESC = "statisticsGroupCode desc"
    STATUS = "status"
    STATUS_DESC = "status desc"
    SURNAME = "surname"
    SURNAME_DESC = "surname desc"
    TERMINATION_DATE = "terminationDate"
    TERMINATION_DATE_DESC = "terminationDate desc"

class Enum82(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ADDRESS = "address"
    BIRTH_DATE = "birthDate"
    DISPLAY_NAME = "displayName"
    EMAIL = "email"
    EMPLOYMENT_DATE = "employmentDate"
    GIVEN_NAME = "givenName"
    JOB_TITLE = "jobTitle"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    MIDDLE_NAME = "middleName"
    MOBILE_PHONE = "mobilePhone"
    NUMBER = "number"
    PERSONAL_EMAIL = "personalEmail"
    PHONE_NUMBER = "phoneNumber"
    STATISTICS_GROUP_CODE = "statisticsGroupCode"
    STATUS = "status"
    SURNAME = "surname"
    TERMINATION_DATE = "terminationDate"
    PICTURE = "picture"

class Enum83(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    PICTURE = "picture"

class Enum84(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ADDRESS = "address"
    BIRTH_DATE = "birthDate"
    DISPLAY_NAME = "displayName"
    EMAIL = "email"
    EMPLOYMENT_DATE = "employmentDate"
    GIVEN_NAME = "givenName"
    JOB_TITLE = "jobTitle"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    MIDDLE_NAME = "middleName"
    MOBILE_PHONE = "mobilePhone"
    NUMBER = "number"
    PERSONAL_EMAIL = "personalEmail"
    PHONE_NUMBER = "phoneNumber"
    STATISTICS_GROUP_CODE = "statisticsGroupCode"
    STATUS = "status"
    SURNAME = "surname"
    TERMINATION_DATE = "terminationDate"
    PICTURE = "picture"

class Enum85(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    PICTURE = "picture"

class Enum86(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    CONTENT = "content"
    CONTENT_DESC = "content desc"
    CONTENT_TYPE = "contentType"
    CONTENT_TYPE_DESC = "contentType desc"
    HEIGHT = "height"
    HEIGHT_DESC = "height desc"
    WIDTH = "width"
    WIDTH_DESC = "width desc"

class Enum87(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CONTENT = "content"
    CONTENT_TYPE = "contentType"
    HEIGHT = "height"
    WIDTH = "width"

class Enum88(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CONTENT = "content"
    CONTENT_TYPE = "contentType"
    HEIGHT = "height"
    WIDTH = "width"

class Enum89(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    ACCOUNT_ID = "accountId"
    ACCOUNT_ID_DESC = "accountId desc"
    ACCOUNT_NUMBER = "accountNumber"
    ACCOUNT_NUMBER_DESC = "accountNumber desc"
    CREDIT_AMOUNT = "creditAmount"
    CREDIT_AMOUNT_DESC = "creditAmount desc"
    DEBIT_AMOUNT = "debitAmount"
    DEBIT_AMOUNT_DESC = "debitAmount desc"
    DESCRIPTION = "description"
    DESCRIPTION_DESC = "description desc"
    DOCUMENT_NUMBER = "documentNumber"
    DOCUMENT_NUMBER_DESC = "documentNumber desc"
    DOCUMENT_TYPE = "documentType"
    DOCUMENT_TYPE_DESC = "documentType desc"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    LAST_MODIFIED_DATE_TIME_DESC = "lastModifiedDateTime desc"
    POSTING_DATE = "postingDate"
    POSTING_DATE_DESC = "postingDate desc"

class Enum9(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    AGED_AS_OF_DATE = "agedAsOfDate"
    AGED_AS_OF_DATE_DESC = "agedAsOfDate desc"
    BALANCE_DUE = "balanceDue"
    BALANCE_DUE_DESC = "balanceDue desc"
    CURRENCY_CODE = "currencyCode"
    CURRENCY_CODE_DESC = "currencyCode desc"
    CURRENT_AMOUNT = "currentAmount"
    CURRENT_AMOUNT_DESC = "currentAmount desc"
    NAME = "name"
    NAME_DESC = "name desc"
    PERIOD1_AMOUNT = "period1Amount"
    PERIOD1_AMOUNT_DESC = "period1Amount desc"
    PERIOD2_AMOUNT = "period2Amount"
    PERIOD2_AMOUNT_DESC = "period2Amount desc"
    PERIOD3_AMOUNT = "period3Amount"
    PERIOD3_AMOUNT_DESC = "period3Amount desc"
    PERIOD_LENGTH_FILTER = "periodLengthFilter"
    PERIOD_LENGTH_FILTER_DESC = "periodLengthFilter desc"
    VENDOR_NUMBER = "vendorNumber"
    VENDOR_NUMBER_DESC = "vendorNumber desc"

class Enum90(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ACCOUNT_ID = "accountId"
    ACCOUNT_NUMBER = "accountNumber"
    CREDIT_AMOUNT = "creditAmount"
    DEBIT_AMOUNT = "debitAmount"
    DESCRIPTION = "description"
    DOCUMENT_NUMBER = "documentNumber"
    DOCUMENT_TYPE = "documentType"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    POSTING_DATE = "postingDate"
    ACCOUNT = "account"

class Enum91(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    ACCOUNT = "account"

class Enum92(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ACCOUNT_ID = "accountId"
    ACCOUNT_NUMBER = "accountNumber"
    CREDIT_AMOUNT = "creditAmount"
    DEBIT_AMOUNT = "debitAmount"
    DESCRIPTION = "description"
    DOCUMENT_NUMBER = "documentNumber"
    DOCUMENT_TYPE = "documentType"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    POSTING_DATE = "postingDate"
    ACCOUNT = "account"

class Enum93(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    ACCOUNT = "account"

class Enum94(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    BLOCKED = "blocked"
    CATEGORY = "category"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    NUMBER = "number"
    SUB_CATEGORY = "subCategory"

class Enum95(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    CODE = "code"
    CODE_DESC = "code desc"
    DISPLAY_NAME = "displayName"
    DISPLAY_NAME_DESC = "displayName desc"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    LAST_MODIFIED_DATE_TIME_DESC = "lastModifiedDateTime desc"

class Enum96(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CODE = "code"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"

class Enum97(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CODE = "code"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"

class Enum98(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    BASE_UNIT_OF_MEASURE_ID = "baseUnitOfMeasureId"
    BASE_UNIT_OF_MEASURE_ID_DESC = "baseUnitOfMeasureId desc"
    BLOCKED = "blocked"
    BLOCKED_DESC = "blocked desc"
    DISPLAY_NAME = "displayName"
    DISPLAY_NAME_DESC = "displayName desc"
    GTIN = "gtin"
    GTIN_DESC = "gtin desc"
    INVENTORY = "inventory"
    INVENTORY_DESC = "inventory desc"
    ITEM_CATEGORY_CODE = "itemCategoryCode"
    ITEM_CATEGORY_CODE_DESC = "itemCategoryCode desc"
    ITEM_CATEGORY_ID = "itemCategoryId"
    ITEM_CATEGORY_ID_DESC = "itemCategoryId desc"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    LAST_MODIFIED_DATE_TIME_DESC = "lastModifiedDateTime desc"
    NUMBER = "number"
    NUMBER_DESC = "number desc"
    PRICE_INCLUDES_TAX = "priceIncludesTax"
    PRICE_INCLUDES_TAX_DESC = "priceIncludesTax desc"
    TAX_GROUP_CODE = "taxGroupCode"
    TAX_GROUP_CODE_DESC = "taxGroupCode desc"
    TAX_GROUP_ID = "taxGroupId"
    TAX_GROUP_ID_DESC = "taxGroupId desc"
    TYPE = "type"
    TYPE_DESC = "type desc"
    UNIT_COST = "unitCost"
    UNIT_COST_DESC = "unitCost desc"
    UNIT_PRICE = "unitPrice"
    UNIT_PRICE_DESC = "unitPrice desc"

class Enum99(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    BASE_UNIT_OF_MEASURE_ID = "baseUnitOfMeasureId"
    BLOCKED = "blocked"
    DISPLAY_NAME = "displayName"
    GTIN = "gtin"
    INVENTORY = "inventory"
    ITEM_CATEGORY_CODE = "itemCategoryCode"
    ITEM_CATEGORY_ID = "itemCategoryId"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    NUMBER = "number"
    PRICE_INCLUDES_TAX = "priceIncludesTax"
    TAX_GROUP_CODE = "taxGroupCode"
    TAX_GROUP_ID = "taxGroupId"
    TYPE = "type"
    UNIT_COST = "unitCost"
    UNIT_PRICE = "unitPrice"
    ITEM_CATEGORY = "itemCategory"
    PICTURE = "picture"

class Get1ItemsItem(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    COMPANIES = "companies"

class Get2ItemsItem(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    ACCOUNTS = "accounts"
    AGED_ACCOUNTS_PAYABLE = "agedAccountsPayable"
    AGED_ACCOUNTS_RECEIVABLE = "agedAccountsReceivable"
    COMPANY_INFORMATION = "companyInformation"
    COUNTRIES_REGIONS = "countriesRegions"
    CURRENCIES = "currencies"
    CUSTOMER_PAYMENT_JOURNALS = "customerPaymentJournals"
    CUSTOMER_PAYMENTS = "customerPayments"
    CUSTOMERS = "customers"
    DIMENSIONS = "dimensions"
    DIMENSION_VALUES = "dimensionValues"
    EMPLOYEES = "employees"
    GENERAL_LEDGER_ENTRIES = "generalLedgerEntries"
    ITEM_CATEGORIES = "itemCategories"
    ITEMS = "items"
    JOURNAL_LINES = "journalLines"
    JOURNALS = "journals"
    PAYMENT_METHODS = "paymentMethods"
    PAYMENT_TERMS = "paymentTerms"
    PICTURE = "picture"
    PURCHASE_INVOICE_LINES = "purchaseInvoiceLines"
    PURCHASE_INVOICES = "purchaseInvoices"
    SALES_CREDIT_MEMO_LINES = "salesCreditMemoLines"
    SALES_CREDIT_MEMOS = "salesCreditMemos"
    SALES_INVOICE_LINES = "salesInvoiceLines"
    SALES_INVOICES = "salesInvoices"
    SALES_ORDER_LINES = "salesOrderLines"
    SALES_ORDERS = "salesOrders"
    SALES_QUOTE_LINES = "salesQuoteLines"
    SALES_QUOTES = "salesQuotes"
    SHIPMENT_METHODS = "shipmentMethods"
    TAX_AREAS = "taxAreas"
    TAX_GROUPS = "taxGroups"
    UNITS_OF_MEASURE = "unitsOfMeasure"
    VENDORS = "vendors"

class Get4ItemsItem(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    CUSTOMER = "customer"

class Get5ItemsItem(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    BUSINESS_PROFILE_ID = "businessProfileId"
    BUSINESS_PROFILE_ID_DESC = "businessProfileId desc"
    DISPLAY_NAME = "displayName"
    DISPLAY_NAME_DESC = "displayName desc"
    NAME = "name"
    NAME_DESC = "name desc"
    SYSTEM_VERSION = "systemVersion"
    SYSTEM_VERSION_DESC = "systemVersion desc"

class Get6ItemsItem(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    BUSINESS_PROFILE_ID = "businessProfileId"
    DISPLAY_NAME = "displayName"
    NAME = "name"
    SYSTEM_VERSION = "systemVersion"
    ACCOUNTS = "accounts"
    AGED_ACCOUNTS_PAYABLE = "agedAccountsPayable"
    AGED_ACCOUNTS_RECEIVABLE = "agedAccountsReceivable"
    COMPANY_INFORMATION = "companyInformation"
    COUNTRIES_REGIONS = "countriesRegions"
    CURRENCIES = "currencies"
    CUSTOMER_PAYMENT_JOURNALS = "customerPaymentJournals"
    CUSTOMER_PAYMENTS = "customerPayments"
    CUSTOMERS = "customers"
    DIMENSIONS = "dimensions"
    DIMENSION_VALUES = "dimensionValues"
    EMPLOYEES = "employees"
    GENERAL_LEDGER_ENTRIES = "generalLedgerEntries"
    ITEM_CATEGORIES = "itemCategories"
    ITEMS = "items"
    JOURNAL_LINES = "journalLines"
    JOURNALS = "journals"
    PAYMENT_METHODS = "paymentMethods"
    PAYMENT_TERMS = "paymentTerms"
    PICTURE = "picture"
    PURCHASE_INVOICE_LINES = "purchaseInvoiceLines"
    PURCHASE_INVOICES = "purchaseInvoices"
    SALES_CREDIT_MEMO_LINES = "salesCreditMemoLines"
    SALES_CREDIT_MEMOS = "salesCreditMemos"
    SALES_INVOICE_LINES = "salesInvoiceLines"
    SALES_INVOICES = "salesInvoices"
    SALES_ORDER_LINES = "salesOrderLines"
    SALES_ORDERS = "salesOrders"
    SALES_QUOTE_LINES = "salesQuoteLines"
    SALES_QUOTES = "salesQuotes"
    SHIPMENT_METHODS = "shipmentMethods"
    TAX_AREAS = "taxAreas"
    TAX_GROUPS = "taxGroups"
    UNITS_OF_MEASURE = "unitsOfMeasure"
    VENDORS = "vendors"

class Get7ItemsItem(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    ACCOUNTS = "accounts"
    AGED_ACCOUNTS_PAYABLE = "agedAccountsPayable"
    AGED_ACCOUNTS_RECEIVABLE = "agedAccountsReceivable"
    COMPANY_INFORMATION = "companyInformation"
    COUNTRIES_REGIONS = "countriesRegions"
    CURRENCIES = "currencies"
    CUSTOMER_PAYMENT_JOURNALS = "customerPaymentJournals"
    CUSTOMER_PAYMENTS = "customerPayments"
    CUSTOMERS = "customers"
    DIMENSIONS = "dimensions"
    DIMENSION_VALUES = "dimensionValues"
    EMPLOYEES = "employees"
    GENERAL_LEDGER_ENTRIES = "generalLedgerEntries"
    ITEM_CATEGORIES = "itemCategories"
    ITEMS = "items"
    JOURNAL_LINES = "journalLines"
    JOURNALS = "journals"
    PAYMENT_METHODS = "paymentMethods"
    PAYMENT_TERMS = "paymentTerms"
    PICTURE = "picture"
    PURCHASE_INVOICE_LINES = "purchaseInvoiceLines"
    PURCHASE_INVOICES = "purchaseInvoices"
    SALES_CREDIT_MEMO_LINES = "salesCreditMemoLines"
    SALES_CREDIT_MEMOS = "salesCreditMemos"
    SALES_INVOICE_LINES = "salesInvoiceLines"
    SALES_INVOICES = "salesInvoices"
    SALES_ORDER_LINES = "salesOrderLines"
    SALES_ORDERS = "salesOrders"
    SALES_QUOTE_LINES = "salesQuoteLines"
    SALES_QUOTES = "salesQuotes"
    SHIPMENT_METHODS = "shipmentMethods"
    TAX_AREAS = "taxAreas"
    TAX_GROUPS = "taxGroups"
    UNITS_OF_MEASURE = "unitsOfMeasure"
    VENDORS = "vendors"

class Get9ItemsItem(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    CUSTOMER = "customer"
