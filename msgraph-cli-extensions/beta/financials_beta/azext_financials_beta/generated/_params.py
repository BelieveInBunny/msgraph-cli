# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=line-too-long
# pylint: disable=too-many-lines
# pylint: disable=too-many-statements

from msgraph.cli.core.commands.parameters import get_three_state_flag
from msgraph.cli.core.commands.validators import validate_file_or_dict
from azext_financials_beta.action import (
    AddAddress,
    AddCurrency,
    AddPaymentMethod,
    AddPaymentTerm,
    AddFinancialsFinancialscompanyCreateCustomerPaymentPicture,
    AddShipmentMethod,
    AddAccount,
    AddDimensionValues,
    AddFinancialsFinancialscompanyCreateEmployeePicture,
    AddItemCategory,
    AddFinancialsFinancialscompanyCreateItemPicture,
    AddFinancialsFinancialscompanyCreatePurchaseInvoicePicture
)


def load_arguments(self, _):

    with self.argument_context('financials financialsfinancial show-financial') as c:
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialsfinancial update-financial') as c:
        c.argument('companies', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')

    with self.argument_context('financials financial create-company') as c:
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('financials financial delete-company') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financial list-company') as c:
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financial show-company') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financial update-company') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('financials financialscompany create-account') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('blocked', arg_type=get_three_state_flag(), help='')
        c.argument('category', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')
        c.argument('number', type=str, help='')
        c.argument('sub_category', type=str, help='')

    with self.argument_context('financials financialscompany create-aged-account-payable') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('aged_as_of_date', help='')
        c.argument('balance_due', type=float, help='')
        c.argument('currency_code', type=str, help='')
        c.argument('current_amount', type=float, help='')
        c.argument('name', type=str, help='')
        c.argument('period1_amount', type=float, help='')
        c.argument('period2_amount', type=float, help='')
        c.argument('period3_amount', type=float, help='')
        c.argument('period_length_filter', type=str, help='')
        c.argument('vendor_number', type=str, help='')

    with self.argument_context('financials financialscompany create-aged-account-receivable') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('aged_as_of_date', help='')
        c.argument('balance_due', type=float, help='')
        c.argument('currency_code', type=str, help='')
        c.argument('current_amount', type=float, help='')
        c.argument('customer_number', type=str, help='')
        c.argument('name', type=str, help='')
        c.argument('period1_amount', type=float, help='')
        c.argument('period2_amount', type=float, help='')
        c.argument('period3_amount', type=float, help='')
        c.argument('period_length_filter', type=str, help='')

    with self.argument_context('financials financialscompany create-company-information') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('address', action=AddAddress, nargs='+', help='postalAddressType')
        c.argument('currency_code', type=str, help='')
        c.argument('current_fiscal_year_start_date', help='')
        c.argument('display_name', type=str, help='')
        c.argument('email', type=str, help='')
        c.argument('fax_number', type=str, help='')
        c.argument('industry', type=str, help='')
        c.argument('last_modified_date_time', help='')
        c.argument('phone_number', type=str, help='')
        c.argument('picture', help='')
        c.argument('tax_registration_number', type=str, help='')
        c.argument('website', type=str, help='')

    with self.argument_context('financials financialscompany create-country-region') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('address_format', type=str, help='')
        c.argument('code', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')

    with self.argument_context('financials financialscompany create-currency') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('amount_decimal_places', type=str, help='')
        c.argument('amount_rounding_precision', type=float, help='')
        c.argument('code', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')
        c.argument('symbol', type=str, help='')

    with self.argument_context('financials financialscompany create-customer') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('address', action=AddAddress, nargs='+', help='postalAddressType')
        c.argument('blocked', type=str, help='')
        c.argument('currency_code', type=str, help='')
        c.argument('currency_id', help='')
        c.argument('display_name', type=str, help='')
        c.argument('email', type=str, help='')
        c.argument('last_modified_date_time', help='')
        c.argument('number', type=str, help='')
        c.argument('payment_method_id', help='')
        c.argument('payment_terms_id', help='')
        c.argument('phone_number', type=str, help='')
        c.argument('shipment_method_id', help='')
        c.argument('tax_area_display_name', type=str, help='')
        c.argument('tax_area_id', help='')
        c.argument('tax_liable', arg_type=get_three_state_flag(), help='')
        c.argument('tax_registration_number', type=str, help='')
        c.argument('type_', options_list=['--type'], type=str, help='')
        c.argument('website', type=str, help='')
        c.argument('currency', action=AddCurrency, nargs='+', help='currency')
        c.argument('payment_method', action=AddPaymentMethod, nargs='+', help='paymentMethod')
        c.argument('payment_term', action=AddPaymentTerm, nargs='+', help='paymentTerm')
        c.argument('picture', action=AddFinancialsFinancialscompanyCreateCustomerPaymentPicture, nargs='+', help='')
        c.argument('shipment_method', action=AddShipmentMethod, nargs='+', help='shipmentMethod')

    with self.argument_context('financials financialscompany create-customer-payment') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('amount', type=float, help='')
        c.argument('applies_to_invoice_id', help='')
        c.argument('applies_to_invoice_number', type=str, help='')
        c.argument('comment', type=str, help='')
        c.argument('contact_id', type=str, help='')
        c.argument('customer_id', help='')
        c.argument('customer_number', type=str, help='')
        c.argument('description', type=str, help='')
        c.argument('document_number', type=str, help='')
        c.argument('external_document_number', type=str, help='')
        c.argument('journal_display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')
        c.argument('line_number', type=int, help='')
        c.argument('posting_date', help='')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Customer')
        c.argument('address', action=AddAddress, nargs='+', help='postalAddressType', arg_group='Customer')
        c.argument('blocked', type=str, help='', arg_group='Customer')
        c.argument('currency_code', type=str, help='', arg_group='Customer')
        c.argument('currency_id', help='', arg_group='Customer')
        c.argument('display_name', type=str, help='', arg_group='Customer')
        c.argument('email', type=str, help='', arg_group='Customer')
        c.argument('microsoft_graph_customer_last_modified_date_time_last_modified_date_time', help='',
                   arg_group='Customer')
        c.argument('number', type=str, help='', arg_group='Customer')
        c.argument('payment_method_id', help='', arg_group='Customer')
        c.argument('payment_terms_id', help='', arg_group='Customer')
        c.argument('phone_number', type=str, help='', arg_group='Customer')
        c.argument('shipment_method_id', help='', arg_group='Customer')
        c.argument('tax_area_display_name', type=str, help='', arg_group='Customer')
        c.argument('tax_area_id', help='', arg_group='Customer')
        c.argument('tax_liable', arg_type=get_three_state_flag(), help='', arg_group='Customer')
        c.argument('tax_registration_number', type=str, help='', arg_group='Customer')
        c.argument('type_', options_list=['--type'], type=str, help='', arg_group='Customer')
        c.argument('website', type=str, help='', arg_group='Customer')
        c.argument('currency', action=AddCurrency, nargs='+', help='currency', arg_group='Customer')
        c.argument('payment_method', action=AddPaymentMethod, nargs='+', help='paymentMethod', arg_group='Customer')
        c.argument('payment_term', action=AddPaymentTerm, nargs='+', help='paymentTerm', arg_group='Customer')
        c.argument('picture', action=AddFinancialsFinancialscompanyCreateCustomerPaymentPicture, nargs='+', help='',
                   arg_group='Customer')
        c.argument('shipment_method', action=AddShipmentMethod, nargs='+', help='shipmentMethod',
                   arg_group='Customer')

    with self.argument_context('financials financialscompany create-customer-payment-journal') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('balancing_account_id', help='')
        c.argument('balancing_account_number', type=str, help='')
        c.argument('code', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')
        c.argument('account', action=AddAccount, nargs='+', help='account')
        c.argument('customer_payments', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')

    with self.argument_context('financials financialscompany create-dimension') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('code', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')
        c.argument('dimension_values', action=AddDimensionValues, nargs='+', help='')

    with self.argument_context('financials financialscompany create-dimension-value') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('code', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')

    with self.argument_context('financials financialscompany create-employee') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('address', action=AddAddress, nargs='+', help='postalAddressType')
        c.argument('birth_date', help='')
        c.argument('display_name', type=str, help='')
        c.argument('email', type=str, help='')
        c.argument('employment_date', help='')
        c.argument('given_name', type=str, help='')
        c.argument('job_title', type=str, help='')
        c.argument('last_modified_date_time', help='')
        c.argument('middle_name', type=str, help='')
        c.argument('mobile_phone', type=str, help='')
        c.argument('number', type=str, help='')
        c.argument('personal_email', type=str, help='')
        c.argument('phone_number', type=str, help='')
        c.argument('statistics_group_code', type=str, help='')
        c.argument('status', type=str, help='')
        c.argument('surname', type=str, help='')
        c.argument('termination_date', help='')
        c.argument('picture', action=AddFinancialsFinancialscompanyCreateEmployeePicture, nargs='+', help='')

    with self.argument_context('financials financialscompany create-general-ledger-entry') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('account_id', help='')
        c.argument('account_number', type=str, help='')
        c.argument('credit_amount', type=float, help='')
        c.argument('debit_amount', type=float, help='')
        c.argument('description', type=str, help='')
        c.argument('document_number', type=str, help='')
        c.argument('document_type', type=str, help='')
        c.argument('last_modified_date_time', help='')
        c.argument('posting_date', help='')
        c.argument('account', action=AddAccount, nargs='+', help='account')

    with self.argument_context('financials financialscompany create-item') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('base_unit_of_measure_id', help='')
        c.argument('blocked', arg_type=get_three_state_flag(), help='')
        c.argument('display_name', type=str, help='')
        c.argument('gtin', type=str, help='')
        c.argument('inventory', type=float, help='')
        c.argument('item_category_code', type=str, help='')
        c.argument('item_category_id', help='')
        c.argument('last_modified_date_time', help='')
        c.argument('number', type=str, help='')
        c.argument('price_includes_tax', arg_type=get_three_state_flag(), help='')
        c.argument('tax_group_code', type=str, help='')
        c.argument('tax_group_id', help='')
        c.argument('type_', options_list=['--type'], type=str, help='')
        c.argument('unit_cost', type=float, help='')
        c.argument('unit_price', type=float, help='')
        c.argument('item_category', action=AddItemCategory, nargs='+', help='itemCategory')
        c.argument('picture', action=AddFinancialsFinancialscompanyCreateItemPicture, nargs='+', help='')

    with self.argument_context('financials financialscompany create-item-category') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('code', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')

    with self.argument_context('financials financialscompany create-journal') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('balancing_account_id', help='')
        c.argument('balancing_account_number', type=str, help='')
        c.argument('code', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')
        c.argument('account', action=AddAccount, nargs='+', help='account')
        c.argument('journal_lines', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')

    with self.argument_context('financials financialscompany create-journal-line') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('account_id', help='')
        c.argument('account_number', type=str, help='')
        c.argument('amount', type=float, help='')
        c.argument('comment', type=str, help='')
        c.argument('description', type=str, help='')
        c.argument('document_number', type=str, help='')
        c.argument('external_document_number', type=str, help='')
        c.argument('journal_display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')
        c.argument('line_number', type=int, help='')
        c.argument('posting_date', help='')
        c.argument('account', action=AddAccount, nargs='+', help='account')

    with self.argument_context('financials financialscompany create-payment-method') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('code', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')

    with self.argument_context('financials financialscompany create-payment-term') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('calculate_discount_on_credit_memos', arg_type=get_three_state_flag(), help='')
        c.argument('code', type=str, help='')
        c.argument('discount_date_calculation', type=str, help='')
        c.argument('discount_percent', type=float, help='')
        c.argument('display_name', type=str, help='')
        c.argument('due_date_calculation', type=str, help='')
        c.argument('last_modified_date_time', help='')

    with self.argument_context('financials financialscompany create-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('content', help='')
        c.argument('content_type', type=str, help='')
        c.argument('height', type=int, help='')
        c.argument('width', type=int, help='')

    with self.argument_context('financials financialscompany create-purchase-invoice') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('buy_from_address', action=AddAddress, nargs='+', help='postalAddressType')
        c.argument('currency_code', type=str, help='')
        c.argument('currency_id', help='')
        c.argument('discount_amount', type=float, help='')
        c.argument('discount_applied_before_tax', arg_type=get_three_state_flag(), help='')
        c.argument('due_date', help='')
        c.argument('invoice_date', help='')
        c.argument('last_modified_date_time', help='')
        c.argument('number', type=str, help='')
        c.argument('pay_to_address', action=AddAddress, nargs='+', help='postalAddressType')
        c.argument('pay_to_contact', type=str, help='')
        c.argument('pay_to_name', type=str, help='')
        c.argument('pay_to_vendor_id', help='')
        c.argument('pay_to_vendor_number', type=str, help='')
        c.argument('prices_include_tax', arg_type=get_three_state_flag(), help='')
        c.argument('ship_to_address', action=AddAddress, nargs='+', help='postalAddressType')
        c.argument('ship_to_contact', type=str, help='')
        c.argument('ship_to_name', type=str, help='')
        c.argument('status', type=str, help='')
        c.argument('total_amount_excluding_tax', type=float, help='')
        c.argument('total_amount_including_tax', type=float, help='')
        c.argument('total_tax_amount', type=float, help='')
        c.argument('vendor_id', help='')
        c.argument('vendor_invoice_number', type=str, help='')
        c.argument('vendor_name', type=str, help='')
        c.argument('vendor_number', type=str, help='')
        c.argument('currency', action=AddCurrency, nargs='+', help='currency')
        c.argument('purchase_invoice_lines', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Vendor')
        c.argument('address', action=AddAddress, nargs='+', help='postalAddressType', arg_group='Vendor')
        c.argument('balance', type=float, help='', arg_group='Vendor')
        c.argument('blocked', type=str, help='', arg_group='Vendor')
        c.argument('microsoft_graph_vendor_currency_code', type=str, help='', arg_group='Vendor')
        c.argument('microsoft_graph_vendor_currency_id', help='', arg_group='Vendor')
        c.argument('display_name', type=str, help='', arg_group='Vendor')
        c.argument('email', type=str, help='', arg_group='Vendor')
        c.argument('microsoft_graph_vendor_last_modified_date_time_last_modified_date_time', help='',
                   arg_group='Vendor')
        c.argument('microsoft_graph_vendor_number', type=str, help='', arg_group='Vendor')
        c.argument('payment_method_id', help='', arg_group='Vendor')
        c.argument('payment_terms_id', help='', arg_group='Vendor')
        c.argument('phone_number', type=str, help='', arg_group='Vendor')
        c.argument('tax_liable', arg_type=get_three_state_flag(), help='', arg_group='Vendor')
        c.argument('tax_registration_number', type=str, help='', arg_group='Vendor')
        c.argument('website', type=str, help='', arg_group='Vendor')
        c.argument('microsoft_graph_currency', action=AddCurrency, nargs='+', help='currency', arg_group='Vendor')
        c.argument('payment_method', action=AddPaymentMethod, nargs='+', help='paymentMethod', arg_group='Vendor')
        c.argument('payment_term', action=AddPaymentTerm, nargs='+', help='paymentTerm', arg_group='Vendor')
        c.argument('picture', action=AddFinancialsFinancialscompanyCreatePurchaseInvoicePicture, nargs='+', help='',
                   arg_group='Vendor')

    with self.argument_context('financials financialscompany create-purchase-invoice-line') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('account_id', help='')
        c.argument('amount_excluding_tax', type=float, help='')
        c.argument('amount_including_tax', type=float, help='')
        c.argument('description', type=str, help='')
        c.argument('discount_amount', type=float, help='')
        c.argument('discount_applied_before_tax', arg_type=get_three_state_flag(), help='')
        c.argument('discount_percent', type=float, help='')
        c.argument('document_id', help='')
        c.argument('expected_receipt_date', help='')
        c.argument('invoice_discount_allocation', type=float, help='')
        c.argument('item_id', help='')
        c.argument('line_type', type=str, help='')
        c.argument('net_amount', type=float, help='')
        c.argument('net_amount_including_tax', type=float, help='')
        c.argument('net_tax_amount', type=float, help='')
        c.argument('quantity', type=float, help='')
        c.argument('sequence', type=int, help='')
        c.argument('tax_code', type=str, help='')
        c.argument('tax_percent', type=float, help='')
        c.argument('total_tax_amount', type=float, help='')
        c.argument('unit_cost', type=float, help='')
        c.argument('account', action=AddAccount, nargs='+', help='account')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Item')
        c.argument('base_unit_of_measure_id', help='', arg_group='Item')
        c.argument('blocked', arg_type=get_three_state_flag(), help='', arg_group='Item')
        c.argument('display_name', type=str, help='', arg_group='Item')
        c.argument('gtin', type=str, help='', arg_group='Item')
        c.argument('inventory', type=float, help='', arg_group='Item')
        c.argument('item_category_code', type=str, help='', arg_group='Item')
        c.argument('item_category_id', help='', arg_group='Item')
        c.argument('last_modified_date_time', help='', arg_group='Item')
        c.argument('number', type=str, help='', arg_group='Item')
        c.argument('price_includes_tax', arg_type=get_three_state_flag(), help='', arg_group='Item')
        c.argument('tax_group_code', type=str, help='', arg_group='Item')
        c.argument('tax_group_id', help='', arg_group='Item')
        c.argument('type_', options_list=['--type'], type=str, help='', arg_group='Item')
        c.argument('number_unit_cost', type=float, help='', arg_group='Item')
        c.argument('unit_price', type=float, help='', arg_group='Item')
        c.argument('item_category', action=AddItemCategory, nargs='+', help='itemCategory', arg_group='Item')
        c.argument('picture', action=AddFinancialsFinancialscompanyCreateItemPicture, nargs='+', help='',
                   arg_group='Item')

    with self.argument_context('financials financialscompany create-sale-credit-memo') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('financials financialscompany create-sale-credit-memo-line') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('account_id', help='')
        c.argument('amount_excluding_tax', type=float, help='')
        c.argument('amount_including_tax', type=float, help='')
        c.argument('description', type=str, help='')
        c.argument('discount_amount', type=float, help='')
        c.argument('discount_applied_before_tax', arg_type=get_three_state_flag(), help='')
        c.argument('discount_percent', type=float, help='')
        c.argument('document_id', help='')
        c.argument('invoice_discount_allocation', type=float, help='')
        c.argument('item_id', help='')
        c.argument('line_type', type=str, help='')
        c.argument('net_amount', type=float, help='')
        c.argument('net_amount_including_tax', type=float, help='')
        c.argument('net_tax_amount', type=float, help='')
        c.argument('quantity', type=float, help='')
        c.argument('sequence', type=int, help='')
        c.argument('shipment_date', help='')
        c.argument('tax_code', type=str, help='')
        c.argument('tax_percent', type=float, help='')
        c.argument('total_tax_amount', type=float, help='')
        c.argument('unit_of_measure_id', help='')
        c.argument('unit_price', type=float, help='')
        c.argument('account', action=AddAccount, nargs='+', help='account')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Item')
        c.argument('base_unit_of_measure_id', help='', arg_group='Item')
        c.argument('blocked', arg_type=get_three_state_flag(), help='', arg_group='Item')
        c.argument('display_name', type=str, help='', arg_group='Item')
        c.argument('gtin', type=str, help='', arg_group='Item')
        c.argument('inventory', type=float, help='', arg_group='Item')
        c.argument('item_category_code', type=str, help='', arg_group='Item')
        c.argument('item_category_id', help='', arg_group='Item')
        c.argument('last_modified_date_time', help='', arg_group='Item')
        c.argument('number', type=str, help='', arg_group='Item')
        c.argument('price_includes_tax', arg_type=get_three_state_flag(), help='', arg_group='Item')
        c.argument('tax_group_code', type=str, help='', arg_group='Item')
        c.argument('tax_group_id', help='', arg_group='Item')
        c.argument('type_', options_list=['--type'], type=str, help='', arg_group='Item')
        c.argument('unit_cost', type=float, help='', arg_group='Item')
        c.argument('number_unit_price', type=float, help='', arg_group='Item')
        c.argument('item_category', action=AddItemCategory, nargs='+', help='itemCategory', arg_group='Item')
        c.argument('picture', action=AddFinancialsFinancialscompanyCreateItemPicture, nargs='+', help='',
                   arg_group='Item')

    with self.argument_context('financials financialscompany create-sale-invoice') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('financials financialscompany create-sale-invoice-line') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('account_id', help='')
        c.argument('amount_excluding_tax', type=float, help='')
        c.argument('amount_including_tax', type=float, help='')
        c.argument('description', type=str, help='')
        c.argument('discount_amount', type=float, help='')
        c.argument('discount_applied_before_tax', arg_type=get_three_state_flag(), help='')
        c.argument('discount_percent', type=float, help='')
        c.argument('document_id', help='')
        c.argument('invoice_discount_allocation', type=float, help='')
        c.argument('item_id', help='')
        c.argument('line_type', type=str, help='')
        c.argument('net_amount', type=float, help='')
        c.argument('net_amount_including_tax', type=float, help='')
        c.argument('net_tax_amount', type=float, help='')
        c.argument('quantity', type=float, help='')
        c.argument('sequence', type=int, help='')
        c.argument('shipment_date', help='')
        c.argument('tax_code', type=str, help='')
        c.argument('tax_percent', type=float, help='')
        c.argument('total_tax_amount', type=float, help='')
        c.argument('unit_of_measure_id', help='')
        c.argument('unit_price', type=float, help='')
        c.argument('account', action=AddAccount, nargs='+', help='account')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Item')
        c.argument('base_unit_of_measure_id', help='', arg_group='Item')
        c.argument('blocked', arg_type=get_three_state_flag(), help='', arg_group='Item')
        c.argument('display_name', type=str, help='', arg_group='Item')
        c.argument('gtin', type=str, help='', arg_group='Item')
        c.argument('inventory', type=float, help='', arg_group='Item')
        c.argument('item_category_code', type=str, help='', arg_group='Item')
        c.argument('item_category_id', help='', arg_group='Item')
        c.argument('last_modified_date_time', help='', arg_group='Item')
        c.argument('number', type=str, help='', arg_group='Item')
        c.argument('price_includes_tax', arg_type=get_three_state_flag(), help='', arg_group='Item')
        c.argument('tax_group_code', type=str, help='', arg_group='Item')
        c.argument('tax_group_id', help='', arg_group='Item')
        c.argument('type_', options_list=['--type'], type=str, help='', arg_group='Item')
        c.argument('unit_cost', type=float, help='', arg_group='Item')
        c.argument('number_unit_price', type=float, help='', arg_group='Item')
        c.argument('item_category', action=AddItemCategory, nargs='+', help='itemCategory', arg_group='Item')
        c.argument('picture', action=AddFinancialsFinancialscompanyCreateItemPicture, nargs='+', help='',
                   arg_group='Item')

    with self.argument_context('financials financialscompany create-sale-order') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('financials financialscompany create-sale-order-line') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('account_id', help='')
        c.argument('amount_excluding_tax', type=float, help='')
        c.argument('amount_including_tax', type=float, help='')
        c.argument('description', type=str, help='')
        c.argument('discount_amount', type=float, help='')
        c.argument('discount_applied_before_tax', arg_type=get_three_state_flag(), help='')
        c.argument('discount_percent', type=float, help='')
        c.argument('document_id', help='')
        c.argument('invoice_discount_allocation', type=float, help='')
        c.argument('invoiced_quantity', type=float, help='')
        c.argument('invoice_quantity', type=float, help='')
        c.argument('item_id', help='')
        c.argument('line_type', type=str, help='')
        c.argument('net_amount', type=float, help='')
        c.argument('net_amount_including_tax', type=float, help='')
        c.argument('net_tax_amount', type=float, help='')
        c.argument('quantity', type=float, help='')
        c.argument('sequence', type=int, help='')
        c.argument('shipment_date', help='')
        c.argument('shipped_quantity', type=float, help='')
        c.argument('ship_quantity', type=float, help='')
        c.argument('tax_code', type=str, help='')
        c.argument('tax_percent', type=float, help='')
        c.argument('total_tax_amount', type=float, help='')
        c.argument('unit_of_measure_id', help='')
        c.argument('unit_price', type=float, help='')
        c.argument('account', action=AddAccount, nargs='+', help='account')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Item')
        c.argument('base_unit_of_measure_id', help='', arg_group='Item')
        c.argument('blocked', arg_type=get_three_state_flag(), help='', arg_group='Item')
        c.argument('display_name', type=str, help='', arg_group='Item')
        c.argument('gtin', type=str, help='', arg_group='Item')
        c.argument('inventory', type=float, help='', arg_group='Item')
        c.argument('item_category_code', type=str, help='', arg_group='Item')
        c.argument('item_category_id', help='', arg_group='Item')
        c.argument('last_modified_date_time', help='', arg_group='Item')
        c.argument('number', type=str, help='', arg_group='Item')
        c.argument('price_includes_tax', arg_type=get_three_state_flag(), help='', arg_group='Item')
        c.argument('tax_group_code', type=str, help='', arg_group='Item')
        c.argument('tax_group_id', help='', arg_group='Item')
        c.argument('type_', options_list=['--type'], type=str, help='', arg_group='Item')
        c.argument('unit_cost', type=float, help='', arg_group='Item')
        c.argument('number_unit_price', type=float, help='', arg_group='Item')
        c.argument('item_category', action=AddItemCategory, nargs='+', help='itemCategory', arg_group='Item')
        c.argument('picture', action=AddFinancialsFinancialscompanyCreateItemPicture, nargs='+', help='',
                   arg_group='Item')

    with self.argument_context('financials financialscompany create-sale-quote') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('body', type=validate_file_or_dict, help='New navigation property Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('financials financialscompany create-sale-quote-line') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('account_id', help='')
        c.argument('amount_excluding_tax', type=float, help='')
        c.argument('amount_including_tax', type=float, help='')
        c.argument('description', type=str, help='')
        c.argument('discount_amount', type=float, help='')
        c.argument('discount_applied_before_tax', arg_type=get_three_state_flag(), help='')
        c.argument('discount_percent', type=float, help='')
        c.argument('document_id', help='')
        c.argument('item_id', help='')
        c.argument('line_type', type=str, help='')
        c.argument('net_amount', type=float, help='')
        c.argument('net_amount_including_tax', type=float, help='')
        c.argument('net_tax_amount', type=float, help='')
        c.argument('quantity', type=float, help='')
        c.argument('sequence', type=int, help='')
        c.argument('tax_code', type=str, help='')
        c.argument('tax_percent', type=float, help='')
        c.argument('total_tax_amount', type=float, help='')
        c.argument('unit_of_measure_id', help='')
        c.argument('unit_price', type=float, help='')
        c.argument('account', action=AddAccount, nargs='+', help='account')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Item')
        c.argument('base_unit_of_measure_id', help='', arg_group='Item')
        c.argument('blocked', arg_type=get_three_state_flag(), help='', arg_group='Item')
        c.argument('display_name', type=str, help='', arg_group='Item')
        c.argument('gtin', type=str, help='', arg_group='Item')
        c.argument('inventory', type=float, help='', arg_group='Item')
        c.argument('item_category_code', type=str, help='', arg_group='Item')
        c.argument('item_category_id', help='', arg_group='Item')
        c.argument('last_modified_date_time', help='', arg_group='Item')
        c.argument('number', type=str, help='', arg_group='Item')
        c.argument('price_includes_tax', arg_type=get_three_state_flag(), help='', arg_group='Item')
        c.argument('tax_group_code', type=str, help='', arg_group='Item')
        c.argument('tax_group_id', help='', arg_group='Item')
        c.argument('type_', options_list=['--type'], type=str, help='', arg_group='Item')
        c.argument('unit_cost', type=float, help='', arg_group='Item')
        c.argument('number_unit_price', type=float, help='', arg_group='Item')
        c.argument('item_category', action=AddItemCategory, nargs='+', help='itemCategory', arg_group='Item')
        c.argument('picture', action=AddFinancialsFinancialscompanyCreateItemPicture, nargs='+', help='',
                   arg_group='Item')

    with self.argument_context('financials financialscompany create-shipment-method') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('code', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')

    with self.argument_context('financials financialscompany create-tax-area') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('code', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')
        c.argument('tax_type', type=str, help='')

    with self.argument_context('financials financialscompany create-tax-group') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('code', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')
        c.argument('tax_type', type=str, help='')

    with self.argument_context('financials financialscompany create-unit-of-measure') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('code', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('international_standard_code', type=str, help='')
        c.argument('last_modified_date_time', help='')

    with self.argument_context('financials financialscompany create-vendor') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('address', action=AddAddress, nargs='+', help='postalAddressType')
        c.argument('balance', type=float, help='')
        c.argument('blocked', type=str, help='')
        c.argument('currency_code', type=str, help='')
        c.argument('currency_id', help='')
        c.argument('display_name', type=str, help='')
        c.argument('email', type=str, help='')
        c.argument('last_modified_date_time', help='')
        c.argument('number', type=str, help='')
        c.argument('payment_method_id', help='')
        c.argument('payment_terms_id', help='')
        c.argument('phone_number', type=str, help='')
        c.argument('tax_liable', arg_type=get_three_state_flag(), help='')
        c.argument('tax_registration_number', type=str, help='')
        c.argument('website', type=str, help='')
        c.argument('currency', action=AddCurrency, nargs='+', help='currency')
        c.argument('payment_method', action=AddPaymentMethod, nargs='+', help='paymentMethod')
        c.argument('payment_term', action=AddPaymentTerm, nargs='+', help='paymentTerm')
        c.argument('picture', action=AddFinancialsFinancialscompanyCreatePurchaseInvoicePicture, nargs='+', help='')

    with self.argument_context('financials financialscompany delete-account') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('account_id', type=str, help='key: id of account')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompany delete-aged-account-payable') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('aged_accounts_payable_id', type=str, help='key: id of agedAccountsPayable')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompany delete-aged-account-receivable') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('aged_accounts_receivable_id', type=str, help='key: id of agedAccountsReceivable')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompany delete-company-information') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('company_information_id', type=str, help='key: id of companyInformation')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompany delete-country-region') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('country_region_id', type=str, help='key: id of countryRegion')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompany delete-currency') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('currency_id', type=str, help='key: id of currency')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompany delete-customer') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('customer_id', type=str, help='key: id of customer')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompany delete-customer-payment') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('customer_payment_id', type=str, help='key: id of customerPayment')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompany delete-customer-payment-journal') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('customer_payment_journal_id', type=str, help='key: id of customerPaymentJournal')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompany delete-dimension') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('dimension_id', type=str, help='key: id of dimension')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompany delete-dimension-value') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('dimension_value_id', type=str, help='key: id of dimensionValue')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompany delete-employee') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('employee_id', type=str, help='key: id of employee')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompany delete-general-ledger-entry') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('general_ledger_entry_id', type=str, help='key: id of generalLedgerEntry')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompany delete-item') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('item_id', type=str, help='key: id of item')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompany delete-item-category') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('item_category_id', type=str, help='key: id of itemCategory')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompany delete-journal') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('journal_id', type=str, help='key: id of journal')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompany delete-journal-line') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('journal_line_id', type=str, help='key: id of journalLine')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompany delete-payment-method') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('payment_method_id', type=str, help='key: id of paymentMethod')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompany delete-payment-term') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('payment_term_id', type=str, help='key: id of paymentTerm')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompany delete-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('picture_id', type=str, help='key: id of picture')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompany delete-purchase-invoice') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('purchase_invoice_id', type=str, help='key: id of purchaseInvoice')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompany delete-purchase-invoice-line') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('purchase_invoice_line_id', type=str, help='key: id of purchaseInvoiceLine')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompany delete-sale-credit-memo') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_credit_memo_id', type=str, help='key: id of salesCreditMemo')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompany delete-sale-credit-memo-line') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_credit_memo_line_id', type=str, help='key: id of salesCreditMemoLine')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompany delete-sale-invoice') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_invoice_id', type=str, help='key: id of salesInvoice')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompany delete-sale-invoice-line') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_invoice_line_id', type=str, help='key: id of salesInvoiceLine')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompany delete-sale-order') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_order_id', type=str, help='key: id of salesOrder')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompany delete-sale-order-line') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_order_line_id', type=str, help='key: id of salesOrderLine')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompany delete-sale-quote') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_quote_id', type=str, help='key: id of salesQuote')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompany delete-sale-quote-line') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_quote_line_id', type=str, help='key: id of salesQuoteLine')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompany delete-shipment-method') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('shipment_method_id', type=str, help='key: id of shipmentMethod')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompany delete-tax-area') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('tax_area_id', type=str, help='key: id of taxArea')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompany delete-tax-group') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('tax_group_id', type=str, help='key: id of taxGroup')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompany delete-unit-of-measure') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('unit_of_measure_id', type=str, help='key: id of unitOfMeasure')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompany delete-vendor') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('vendor_id', type=str, help='key: id of vendor')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompany list-account') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompany list-aged-account-payable') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompany list-aged-account-receivable') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompany list-company-information') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompany list-country-region') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompany list-currency') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompany list-customer') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompany list-customer-payment') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompany list-customer-payment-journal') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompany list-dimension') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompany list-dimension-value') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompany list-employee') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompany list-general-ledger-entry') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompany list-item') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompany list-item-category') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompany list-journal') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompany list-journal-line') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompany list-payment-method') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompany list-payment-term') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompany list-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompany list-purchase-invoice') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompany list-purchase-invoice-line') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompany list-sale-credit-memo') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompany list-sale-credit-memo-line') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompany list-sale-invoice') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompany list-sale-invoice-line') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompany list-sale-order') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompany list-sale-order-line') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompany list-sale-quote') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompany list-sale-quote-line') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompany list-shipment-method') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompany list-tax-area') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompany list-tax-group') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompany list-unit-of-measure') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompany list-vendor') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompany set-company-information-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('company_information_id', type=str, help='key: id of companyInformation')
        c.argument('data', help='New media content.')

    with self.argument_context('financials financialscompany set-picture-content') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('picture_id', type=str, help='key: id of picture')
        c.argument('data', help='New media content.')

    with self.argument_context('financials financialscompany show-account') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('account_id', type=str, help='key: id of account')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompany show-aged-account-payable') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('aged_accounts_payable_id', type=str, help='key: id of agedAccountsPayable')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompany show-aged-account-receivable') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('aged_accounts_receivable_id', type=str, help='key: id of agedAccountsReceivable')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompany show-company-information') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('company_information_id', type=str, help='key: id of companyInformation')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompany show-company-information-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('company_information_id', type=str, help='key: id of companyInformation')

    with self.argument_context('financials financialscompany show-country-region') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('country_region_id', type=str, help='key: id of countryRegion')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompany show-currency') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('currency_id', type=str, help='key: id of currency')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompany show-customer') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('customer_id', type=str, help='key: id of customer')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompany show-customer-payment') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('customer_payment_id', type=str, help='key: id of customerPayment')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompany show-customer-payment-journal') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('customer_payment_journal_id', type=str, help='key: id of customerPaymentJournal')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompany show-dimension') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('dimension_id', type=str, help='key: id of dimension')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompany show-dimension-value') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('dimension_value_id', type=str, help='key: id of dimensionValue')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompany show-employee') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('employee_id', type=str, help='key: id of employee')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompany show-general-ledger-entry') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('general_ledger_entry_id', type=str, help='key: id of generalLedgerEntry')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompany show-item') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('item_id', type=str, help='key: id of item')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompany show-item-category') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('item_category_id', type=str, help='key: id of itemCategory')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompany show-journal') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('journal_id', type=str, help='key: id of journal')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompany show-journal-line') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('journal_line_id', type=str, help='key: id of journalLine')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompany show-payment-method') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('payment_method_id', type=str, help='key: id of paymentMethod')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompany show-payment-term') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('payment_term_id', type=str, help='key: id of paymentTerm')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompany show-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('picture_id', type=str, help='key: id of picture')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompany show-picture-content') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('picture_id', type=str, help='key: id of picture')

    with self.argument_context('financials financialscompany show-purchase-invoice') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('purchase_invoice_id', type=str, help='key: id of purchaseInvoice')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompany show-purchase-invoice-line') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('purchase_invoice_line_id', type=str, help='key: id of purchaseInvoiceLine')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompany show-sale-credit-memo') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_credit_memo_id', type=str, help='key: id of salesCreditMemo')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompany show-sale-credit-memo-line') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_credit_memo_line_id', type=str, help='key: id of salesCreditMemoLine')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompany show-sale-invoice') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_invoice_id', type=str, help='key: id of salesInvoice')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompany show-sale-invoice-line') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_invoice_line_id', type=str, help='key: id of salesInvoiceLine')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompany show-sale-order') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_order_id', type=str, help='key: id of salesOrder')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompany show-sale-order-line') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_order_line_id', type=str, help='key: id of salesOrderLine')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompany show-sale-quote') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_quote_id', type=str, help='key: id of salesQuote')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompany show-sale-quote-line') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_quote_line_id', type=str, help='key: id of salesQuoteLine')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompany show-shipment-method') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('shipment_method_id', type=str, help='key: id of shipmentMethod')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompany show-tax-area') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('tax_area_id', type=str, help='key: id of taxArea')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompany show-tax-group') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('tax_group_id', type=str, help='key: id of taxGroup')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompany show-unit-of-measure') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('unit_of_measure_id', type=str, help='key: id of unitOfMeasure')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompany show-vendor') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('vendor_id', type=str, help='key: id of vendor')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompany update-account') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('account_id', type=str, help='key: id of account')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('blocked', arg_type=get_three_state_flag(), help='')
        c.argument('category', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')
        c.argument('number', type=str, help='')
        c.argument('sub_category', type=str, help='')

    with self.argument_context('financials financialscompany update-aged-account-payable') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('aged_accounts_payable_id', type=str, help='key: id of agedAccountsPayable')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('aged_as_of_date', help='')
        c.argument('balance_due', type=float, help='')
        c.argument('currency_code', type=str, help='')
        c.argument('current_amount', type=float, help='')
        c.argument('name', type=str, help='')
        c.argument('period1_amount', type=float, help='')
        c.argument('period2_amount', type=float, help='')
        c.argument('period3_amount', type=float, help='')
        c.argument('period_length_filter', type=str, help='')
        c.argument('vendor_number', type=str, help='')

    with self.argument_context('financials financialscompany update-aged-account-receivable') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('aged_accounts_receivable_id', type=str, help='key: id of agedAccountsReceivable')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('aged_as_of_date', help='')
        c.argument('balance_due', type=float, help='')
        c.argument('currency_code', type=str, help='')
        c.argument('current_amount', type=float, help='')
        c.argument('customer_number', type=str, help='')
        c.argument('name', type=str, help='')
        c.argument('period1_amount', type=float, help='')
        c.argument('period2_amount', type=float, help='')
        c.argument('period3_amount', type=float, help='')
        c.argument('period_length_filter', type=str, help='')

    with self.argument_context('financials financialscompany update-company-information') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('company_information_id', type=str, help='key: id of companyInformation')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('address', action=AddAddress, nargs='+', help='postalAddressType')
        c.argument('currency_code', type=str, help='')
        c.argument('current_fiscal_year_start_date', help='')
        c.argument('display_name', type=str, help='')
        c.argument('email', type=str, help='')
        c.argument('fax_number', type=str, help='')
        c.argument('industry', type=str, help='')
        c.argument('last_modified_date_time', help='')
        c.argument('phone_number', type=str, help='')
        c.argument('picture', help='')
        c.argument('tax_registration_number', type=str, help='')
        c.argument('website', type=str, help='')

    with self.argument_context('financials financialscompany update-country-region') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('country_region_id', type=str, help='key: id of countryRegion')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('address_format', type=str, help='')
        c.argument('code', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')

    with self.argument_context('financials financialscompany update-currency') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('currency_id', type=str, help='key: id of currency')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('amount_decimal_places', type=str, help='')
        c.argument('amount_rounding_precision', type=float, help='')
        c.argument('code', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')
        c.argument('symbol', type=str, help='')

    with self.argument_context('financials financialscompany update-customer') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('customer_id', type=str, help='key: id of customer')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('address', action=AddAddress, nargs='+', help='postalAddressType')
        c.argument('blocked', type=str, help='')
        c.argument('currency_code', type=str, help='')
        c.argument('currency_id', help='')
        c.argument('display_name', type=str, help='')
        c.argument('email', type=str, help='')
        c.argument('last_modified_date_time', help='')
        c.argument('number', type=str, help='')
        c.argument('payment_method_id', help='')
        c.argument('payment_terms_id', help='')
        c.argument('phone_number', type=str, help='')
        c.argument('shipment_method_id', help='')
        c.argument('tax_area_display_name', type=str, help='')
        c.argument('tax_area_id', help='')
        c.argument('tax_liable', arg_type=get_three_state_flag(), help='')
        c.argument('tax_registration_number', type=str, help='')
        c.argument('type_', options_list=['--type'], type=str, help='')
        c.argument('website', type=str, help='')
        c.argument('currency', action=AddCurrency, nargs='+', help='currency')
        c.argument('payment_method', action=AddPaymentMethod, nargs='+', help='paymentMethod')
        c.argument('payment_term', action=AddPaymentTerm, nargs='+', help='paymentTerm')
        c.argument('picture', action=AddFinancialsFinancialscompanyCreateCustomerPaymentPicture, nargs='+', help='')
        c.argument('shipment_method', action=AddShipmentMethod, nargs='+', help='shipmentMethod')

    with self.argument_context('financials financialscompany update-customer-payment') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('customer_payment_id', type=str, help='key: id of customerPayment')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('amount', type=float, help='')
        c.argument('applies_to_invoice_id', help='')
        c.argument('applies_to_invoice_number', type=str, help='')
        c.argument('comment', type=str, help='')
        c.argument('contact_id', type=str, help='')
        c.argument('customer_id', help='')
        c.argument('customer_number', type=str, help='')
        c.argument('description', type=str, help='')
        c.argument('document_number', type=str, help='')
        c.argument('external_document_number', type=str, help='')
        c.argument('journal_display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')
        c.argument('line_number', type=int, help='')
        c.argument('posting_date', help='')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Customer')
        c.argument('address', action=AddAddress, nargs='+', help='postalAddressType', arg_group='Customer')
        c.argument('blocked', type=str, help='', arg_group='Customer')
        c.argument('currency_code', type=str, help='', arg_group='Customer')
        c.argument('currency_id', help='', arg_group='Customer')
        c.argument('display_name', type=str, help='', arg_group='Customer')
        c.argument('email', type=str, help='', arg_group='Customer')
        c.argument('microsoft_graph_customer_last_modified_date_time_last_modified_date_time', help='',
                   arg_group='Customer')
        c.argument('number', type=str, help='', arg_group='Customer')
        c.argument('payment_method_id', help='', arg_group='Customer')
        c.argument('payment_terms_id', help='', arg_group='Customer')
        c.argument('phone_number', type=str, help='', arg_group='Customer')
        c.argument('shipment_method_id', help='', arg_group='Customer')
        c.argument('tax_area_display_name', type=str, help='', arg_group='Customer')
        c.argument('tax_area_id', help='', arg_group='Customer')
        c.argument('tax_liable', arg_type=get_three_state_flag(), help='', arg_group='Customer')
        c.argument('tax_registration_number', type=str, help='', arg_group='Customer')
        c.argument('type_', options_list=['--type'], type=str, help='', arg_group='Customer')
        c.argument('website', type=str, help='', arg_group='Customer')
        c.argument('currency', action=AddCurrency, nargs='+', help='currency', arg_group='Customer')
        c.argument('payment_method', action=AddPaymentMethod, nargs='+', help='paymentMethod', arg_group='Customer')
        c.argument('payment_term', action=AddPaymentTerm, nargs='+', help='paymentTerm', arg_group='Customer')
        c.argument('picture', action=AddFinancialsFinancialscompanyCreateCustomerPaymentPicture, nargs='+', help='',
                   arg_group='Customer')
        c.argument('shipment_method', action=AddShipmentMethod, nargs='+', help='shipmentMethod',
                   arg_group='Customer')

    with self.argument_context('financials financialscompany update-customer-payment-journal') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('customer_payment_journal_id', type=str, help='key: id of customerPaymentJournal')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('balancing_account_id', help='')
        c.argument('balancing_account_number', type=str, help='')
        c.argument('code', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')
        c.argument('account', action=AddAccount, nargs='+', help='account')
        c.argument('customer_payments', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')

    with self.argument_context('financials financialscompany update-dimension') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('dimension_id', type=str, help='key: id of dimension')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('code', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')
        c.argument('dimension_values', action=AddDimensionValues, nargs='+', help='')

    with self.argument_context('financials financialscompany update-dimension-value') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('dimension_value_id', type=str, help='key: id of dimensionValue')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('code', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')

    with self.argument_context('financials financialscompany update-employee') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('employee_id', type=str, help='key: id of employee')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('address', action=AddAddress, nargs='+', help='postalAddressType')
        c.argument('birth_date', help='')
        c.argument('display_name', type=str, help='')
        c.argument('email', type=str, help='')
        c.argument('employment_date', help='')
        c.argument('given_name', type=str, help='')
        c.argument('job_title', type=str, help='')
        c.argument('last_modified_date_time', help='')
        c.argument('middle_name', type=str, help='')
        c.argument('mobile_phone', type=str, help='')
        c.argument('number', type=str, help='')
        c.argument('personal_email', type=str, help='')
        c.argument('phone_number', type=str, help='')
        c.argument('statistics_group_code', type=str, help='')
        c.argument('status', type=str, help='')
        c.argument('surname', type=str, help='')
        c.argument('termination_date', help='')
        c.argument('picture', action=AddFinancialsFinancialscompanyCreateEmployeePicture, nargs='+', help='')

    with self.argument_context('financials financialscompany update-general-ledger-entry') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('general_ledger_entry_id', type=str, help='key: id of generalLedgerEntry')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('account_id', help='')
        c.argument('account_number', type=str, help='')
        c.argument('credit_amount', type=float, help='')
        c.argument('debit_amount', type=float, help='')
        c.argument('description', type=str, help='')
        c.argument('document_number', type=str, help='')
        c.argument('document_type', type=str, help='')
        c.argument('last_modified_date_time', help='')
        c.argument('posting_date', help='')
        c.argument('account', action=AddAccount, nargs='+', help='account')

    with self.argument_context('financials financialscompany update-item') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('item_id', type=str, help='key: id of item')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('base_unit_of_measure_id', help='')
        c.argument('blocked', arg_type=get_three_state_flag(), help='')
        c.argument('display_name', type=str, help='')
        c.argument('gtin', type=str, help='')
        c.argument('inventory', type=float, help='')
        c.argument('item_category_code', type=str, help='')
        c.argument('item_category_id', help='')
        c.argument('last_modified_date_time', help='')
        c.argument('number', type=str, help='')
        c.argument('price_includes_tax', arg_type=get_three_state_flag(), help='')
        c.argument('tax_group_code', type=str, help='')
        c.argument('tax_group_id', help='')
        c.argument('type_', options_list=['--type'], type=str, help='')
        c.argument('unit_cost', type=float, help='')
        c.argument('unit_price', type=float, help='')
        c.argument('item_category', action=AddItemCategory, nargs='+', help='itemCategory')
        c.argument('picture', action=AddFinancialsFinancialscompanyCreateItemPicture, nargs='+', help='')

    with self.argument_context('financials financialscompany update-item-category') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('item_category_id', type=str, help='key: id of itemCategory')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('code', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')

    with self.argument_context('financials financialscompany update-journal') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('journal_id', type=str, help='key: id of journal')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('balancing_account_id', help='')
        c.argument('balancing_account_number', type=str, help='')
        c.argument('code', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')
        c.argument('account', action=AddAccount, nargs='+', help='account')
        c.argument('journal_lines', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')

    with self.argument_context('financials financialscompany update-journal-line') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('journal_line_id', type=str, help='key: id of journalLine')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('account_id', help='')
        c.argument('account_number', type=str, help='')
        c.argument('amount', type=float, help='')
        c.argument('comment', type=str, help='')
        c.argument('description', type=str, help='')
        c.argument('document_number', type=str, help='')
        c.argument('external_document_number', type=str, help='')
        c.argument('journal_display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')
        c.argument('line_number', type=int, help='')
        c.argument('posting_date', help='')
        c.argument('account', action=AddAccount, nargs='+', help='account')

    with self.argument_context('financials financialscompany update-payment-method') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('payment_method_id', type=str, help='key: id of paymentMethod')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('code', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')

    with self.argument_context('financials financialscompany update-payment-term') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('payment_term_id', type=str, help='key: id of paymentTerm')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('calculate_discount_on_credit_memos', arg_type=get_three_state_flag(), help='')
        c.argument('code', type=str, help='')
        c.argument('discount_date_calculation', type=str, help='')
        c.argument('discount_percent', type=float, help='')
        c.argument('display_name', type=str, help='')
        c.argument('due_date_calculation', type=str, help='')
        c.argument('last_modified_date_time', help='')

    with self.argument_context('financials financialscompany update-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('picture_id', type=str, help='key: id of picture')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('content', help='')
        c.argument('content_type', type=str, help='')
        c.argument('height', type=int, help='')
        c.argument('width', type=int, help='')

    with self.argument_context('financials financialscompany update-purchase-invoice') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('purchase_invoice_id', type=str, help='key: id of purchaseInvoice')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('buy_from_address', action=AddAddress, nargs='+', help='postalAddressType')
        c.argument('currency_code', type=str, help='')
        c.argument('currency_id', help='')
        c.argument('discount_amount', type=float, help='')
        c.argument('discount_applied_before_tax', arg_type=get_three_state_flag(), help='')
        c.argument('due_date', help='')
        c.argument('invoice_date', help='')
        c.argument('last_modified_date_time', help='')
        c.argument('number', type=str, help='')
        c.argument('pay_to_address', action=AddAddress, nargs='+', help='postalAddressType')
        c.argument('pay_to_contact', type=str, help='')
        c.argument('pay_to_name', type=str, help='')
        c.argument('pay_to_vendor_id', help='')
        c.argument('pay_to_vendor_number', type=str, help='')
        c.argument('prices_include_tax', arg_type=get_three_state_flag(), help='')
        c.argument('ship_to_address', action=AddAddress, nargs='+', help='postalAddressType')
        c.argument('ship_to_contact', type=str, help='')
        c.argument('ship_to_name', type=str, help='')
        c.argument('status', type=str, help='')
        c.argument('total_amount_excluding_tax', type=float, help='')
        c.argument('total_amount_including_tax', type=float, help='')
        c.argument('total_tax_amount', type=float, help='')
        c.argument('vendor_id', help='')
        c.argument('vendor_invoice_number', type=str, help='')
        c.argument('vendor_name', type=str, help='')
        c.argument('vendor_number', type=str, help='')
        c.argument('currency', action=AddCurrency, nargs='+', help='currency')
        c.argument('purchase_invoice_lines', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Vendor')
        c.argument('address', action=AddAddress, nargs='+', help='postalAddressType', arg_group='Vendor')
        c.argument('balance', type=float, help='', arg_group='Vendor')
        c.argument('blocked', type=str, help='', arg_group='Vendor')
        c.argument('microsoft_graph_vendor_currency_code', type=str, help='', arg_group='Vendor')
        c.argument('microsoft_graph_vendor_currency_id', help='', arg_group='Vendor')
        c.argument('display_name', type=str, help='', arg_group='Vendor')
        c.argument('email', type=str, help='', arg_group='Vendor')
        c.argument('microsoft_graph_vendor_last_modified_date_time_last_modified_date_time', help='',
                   arg_group='Vendor')
        c.argument('microsoft_graph_vendor_number', type=str, help='', arg_group='Vendor')
        c.argument('payment_method_id', help='', arg_group='Vendor')
        c.argument('payment_terms_id', help='', arg_group='Vendor')
        c.argument('phone_number', type=str, help='', arg_group='Vendor')
        c.argument('tax_liable', arg_type=get_three_state_flag(), help='', arg_group='Vendor')
        c.argument('tax_registration_number', type=str, help='', arg_group='Vendor')
        c.argument('website', type=str, help='', arg_group='Vendor')
        c.argument('microsoft_graph_currency', action=AddCurrency, nargs='+', help='currency', arg_group='Vendor')
        c.argument('payment_method', action=AddPaymentMethod, nargs='+', help='paymentMethod', arg_group='Vendor')
        c.argument('payment_term', action=AddPaymentTerm, nargs='+', help='paymentTerm', arg_group='Vendor')
        c.argument('picture', action=AddFinancialsFinancialscompanyCreatePurchaseInvoicePicture, nargs='+', help='',
                   arg_group='Vendor')

    with self.argument_context('financials financialscompany update-purchase-invoice-line') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('purchase_invoice_line_id', type=str, help='key: id of purchaseInvoiceLine')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('account_id', help='')
        c.argument('amount_excluding_tax', type=float, help='')
        c.argument('amount_including_tax', type=float, help='')
        c.argument('description', type=str, help='')
        c.argument('discount_amount', type=float, help='')
        c.argument('discount_applied_before_tax', arg_type=get_three_state_flag(), help='')
        c.argument('discount_percent', type=float, help='')
        c.argument('document_id', help='')
        c.argument('expected_receipt_date', help='')
        c.argument('invoice_discount_allocation', type=float, help='')
        c.argument('item_id', help='')
        c.argument('line_type', type=str, help='')
        c.argument('net_amount', type=float, help='')
        c.argument('net_amount_including_tax', type=float, help='')
        c.argument('net_tax_amount', type=float, help='')
        c.argument('quantity', type=float, help='')
        c.argument('sequence', type=int, help='')
        c.argument('tax_code', type=str, help='')
        c.argument('tax_percent', type=float, help='')
        c.argument('total_tax_amount', type=float, help='')
        c.argument('unit_cost', type=float, help='')
        c.argument('account', action=AddAccount, nargs='+', help='account')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Item')
        c.argument('base_unit_of_measure_id', help='', arg_group='Item')
        c.argument('blocked', arg_type=get_three_state_flag(), help='', arg_group='Item')
        c.argument('display_name', type=str, help='', arg_group='Item')
        c.argument('gtin', type=str, help='', arg_group='Item')
        c.argument('inventory', type=float, help='', arg_group='Item')
        c.argument('item_category_code', type=str, help='', arg_group='Item')
        c.argument('item_category_id', help='', arg_group='Item')
        c.argument('last_modified_date_time', help='', arg_group='Item')
        c.argument('number', type=str, help='', arg_group='Item')
        c.argument('price_includes_tax', arg_type=get_three_state_flag(), help='', arg_group='Item')
        c.argument('tax_group_code', type=str, help='', arg_group='Item')
        c.argument('tax_group_id', help='', arg_group='Item')
        c.argument('type_', options_list=['--type'], type=str, help='', arg_group='Item')
        c.argument('number_unit_cost', type=float, help='', arg_group='Item')
        c.argument('unit_price', type=float, help='', arg_group='Item')
        c.argument('item_category', action=AddItemCategory, nargs='+', help='itemCategory', arg_group='Item')
        c.argument('picture', action=AddFinancialsFinancialscompanyCreateItemPicture, nargs='+', help='',
                   arg_group='Item')

    with self.argument_context('financials financialscompany update-sale-credit-memo') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_credit_memo_id', type=str, help='key: id of salesCreditMemo')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('financials financialscompany update-sale-credit-memo-line') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_credit_memo_line_id', type=str, help='key: id of salesCreditMemoLine')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('account_id', help='')
        c.argument('amount_excluding_tax', type=float, help='')
        c.argument('amount_including_tax', type=float, help='')
        c.argument('description', type=str, help='')
        c.argument('discount_amount', type=float, help='')
        c.argument('discount_applied_before_tax', arg_type=get_three_state_flag(), help='')
        c.argument('discount_percent', type=float, help='')
        c.argument('document_id', help='')
        c.argument('invoice_discount_allocation', type=float, help='')
        c.argument('item_id', help='')
        c.argument('line_type', type=str, help='')
        c.argument('net_amount', type=float, help='')
        c.argument('net_amount_including_tax', type=float, help='')
        c.argument('net_tax_amount', type=float, help='')
        c.argument('quantity', type=float, help='')
        c.argument('sequence', type=int, help='')
        c.argument('shipment_date', help='')
        c.argument('tax_code', type=str, help='')
        c.argument('tax_percent', type=float, help='')
        c.argument('total_tax_amount', type=float, help='')
        c.argument('unit_of_measure_id', help='')
        c.argument('unit_price', type=float, help='')
        c.argument('account', action=AddAccount, nargs='+', help='account')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Item')
        c.argument('base_unit_of_measure_id', help='', arg_group='Item')
        c.argument('blocked', arg_type=get_three_state_flag(), help='', arg_group='Item')
        c.argument('display_name', type=str, help='', arg_group='Item')
        c.argument('gtin', type=str, help='', arg_group='Item')
        c.argument('inventory', type=float, help='', arg_group='Item')
        c.argument('item_category_code', type=str, help='', arg_group='Item')
        c.argument('item_category_id', help='', arg_group='Item')
        c.argument('last_modified_date_time', help='', arg_group='Item')
        c.argument('number', type=str, help='', arg_group='Item')
        c.argument('price_includes_tax', arg_type=get_three_state_flag(), help='', arg_group='Item')
        c.argument('tax_group_code', type=str, help='', arg_group='Item')
        c.argument('tax_group_id', help='', arg_group='Item')
        c.argument('type_', options_list=['--type'], type=str, help='', arg_group='Item')
        c.argument('unit_cost', type=float, help='', arg_group='Item')
        c.argument('number_unit_price', type=float, help='', arg_group='Item')
        c.argument('item_category', action=AddItemCategory, nargs='+', help='itemCategory', arg_group='Item')
        c.argument('picture', action=AddFinancialsFinancialscompanyCreateItemPicture, nargs='+', help='',
                   arg_group='Item')

    with self.argument_context('financials financialscompany update-sale-invoice') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_invoice_id', type=str, help='key: id of salesInvoice')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('financials financialscompany update-sale-invoice-line') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_invoice_line_id', type=str, help='key: id of salesInvoiceLine')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('account_id', help='')
        c.argument('amount_excluding_tax', type=float, help='')
        c.argument('amount_including_tax', type=float, help='')
        c.argument('description', type=str, help='')
        c.argument('discount_amount', type=float, help='')
        c.argument('discount_applied_before_tax', arg_type=get_three_state_flag(), help='')
        c.argument('discount_percent', type=float, help='')
        c.argument('document_id', help='')
        c.argument('invoice_discount_allocation', type=float, help='')
        c.argument('item_id', help='')
        c.argument('line_type', type=str, help='')
        c.argument('net_amount', type=float, help='')
        c.argument('net_amount_including_tax', type=float, help='')
        c.argument('net_tax_amount', type=float, help='')
        c.argument('quantity', type=float, help='')
        c.argument('sequence', type=int, help='')
        c.argument('shipment_date', help='')
        c.argument('tax_code', type=str, help='')
        c.argument('tax_percent', type=float, help='')
        c.argument('total_tax_amount', type=float, help='')
        c.argument('unit_of_measure_id', help='')
        c.argument('unit_price', type=float, help='')
        c.argument('account', action=AddAccount, nargs='+', help='account')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Item')
        c.argument('base_unit_of_measure_id', help='', arg_group='Item')
        c.argument('blocked', arg_type=get_three_state_flag(), help='', arg_group='Item')
        c.argument('display_name', type=str, help='', arg_group='Item')
        c.argument('gtin', type=str, help='', arg_group='Item')
        c.argument('inventory', type=float, help='', arg_group='Item')
        c.argument('item_category_code', type=str, help='', arg_group='Item')
        c.argument('item_category_id', help='', arg_group='Item')
        c.argument('last_modified_date_time', help='', arg_group='Item')
        c.argument('number', type=str, help='', arg_group='Item')
        c.argument('price_includes_tax', arg_type=get_three_state_flag(), help='', arg_group='Item')
        c.argument('tax_group_code', type=str, help='', arg_group='Item')
        c.argument('tax_group_id', help='', arg_group='Item')
        c.argument('type_', options_list=['--type'], type=str, help='', arg_group='Item')
        c.argument('unit_cost', type=float, help='', arg_group='Item')
        c.argument('number_unit_price', type=float, help='', arg_group='Item')
        c.argument('item_category', action=AddItemCategory, nargs='+', help='itemCategory', arg_group='Item')
        c.argument('picture', action=AddFinancialsFinancialscompanyCreateItemPicture, nargs='+', help='',
                   arg_group='Item')

    with self.argument_context('financials financialscompany update-sale-order') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_order_id', type=str, help='key: id of salesOrder')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('financials financialscompany update-sale-order-line') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_order_line_id', type=str, help='key: id of salesOrderLine')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('account_id', help='')
        c.argument('amount_excluding_tax', type=float, help='')
        c.argument('amount_including_tax', type=float, help='')
        c.argument('description', type=str, help='')
        c.argument('discount_amount', type=float, help='')
        c.argument('discount_applied_before_tax', arg_type=get_three_state_flag(), help='')
        c.argument('discount_percent', type=float, help='')
        c.argument('document_id', help='')
        c.argument('invoice_discount_allocation', type=float, help='')
        c.argument('invoiced_quantity', type=float, help='')
        c.argument('invoice_quantity', type=float, help='')
        c.argument('item_id', help='')
        c.argument('line_type', type=str, help='')
        c.argument('net_amount', type=float, help='')
        c.argument('net_amount_including_tax', type=float, help='')
        c.argument('net_tax_amount', type=float, help='')
        c.argument('quantity', type=float, help='')
        c.argument('sequence', type=int, help='')
        c.argument('shipment_date', help='')
        c.argument('shipped_quantity', type=float, help='')
        c.argument('ship_quantity', type=float, help='')
        c.argument('tax_code', type=str, help='')
        c.argument('tax_percent', type=float, help='')
        c.argument('total_tax_amount', type=float, help='')
        c.argument('unit_of_measure_id', help='')
        c.argument('unit_price', type=float, help='')
        c.argument('account', action=AddAccount, nargs='+', help='account')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Item')
        c.argument('base_unit_of_measure_id', help='', arg_group='Item')
        c.argument('blocked', arg_type=get_three_state_flag(), help='', arg_group='Item')
        c.argument('display_name', type=str, help='', arg_group='Item')
        c.argument('gtin', type=str, help='', arg_group='Item')
        c.argument('inventory', type=float, help='', arg_group='Item')
        c.argument('item_category_code', type=str, help='', arg_group='Item')
        c.argument('item_category_id', help='', arg_group='Item')
        c.argument('last_modified_date_time', help='', arg_group='Item')
        c.argument('number', type=str, help='', arg_group='Item')
        c.argument('price_includes_tax', arg_type=get_three_state_flag(), help='', arg_group='Item')
        c.argument('tax_group_code', type=str, help='', arg_group='Item')
        c.argument('tax_group_id', help='', arg_group='Item')
        c.argument('type_', options_list=['--type'], type=str, help='', arg_group='Item')
        c.argument('unit_cost', type=float, help='', arg_group='Item')
        c.argument('number_unit_price', type=float, help='', arg_group='Item')
        c.argument('item_category', action=AddItemCategory, nargs='+', help='itemCategory', arg_group='Item')
        c.argument('picture', action=AddFinancialsFinancialscompanyCreateItemPicture, nargs='+', help='',
                   arg_group='Item')

    with self.argument_context('financials financialscompany update-sale-quote') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_quote_id', type=str, help='key: id of salesQuote')
        c.argument('body', type=validate_file_or_dict, help='New navigation property values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('financials financialscompany update-sale-quote-line') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_quote_line_id', type=str, help='key: id of salesQuoteLine')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('account_id', help='')
        c.argument('amount_excluding_tax', type=float, help='')
        c.argument('amount_including_tax', type=float, help='')
        c.argument('description', type=str, help='')
        c.argument('discount_amount', type=float, help='')
        c.argument('discount_applied_before_tax', arg_type=get_three_state_flag(), help='')
        c.argument('discount_percent', type=float, help='')
        c.argument('document_id', help='')
        c.argument('item_id', help='')
        c.argument('line_type', type=str, help='')
        c.argument('net_amount', type=float, help='')
        c.argument('net_amount_including_tax', type=float, help='')
        c.argument('net_tax_amount', type=float, help='')
        c.argument('quantity', type=float, help='')
        c.argument('sequence', type=int, help='')
        c.argument('tax_code', type=str, help='')
        c.argument('tax_percent', type=float, help='')
        c.argument('total_tax_amount', type=float, help='')
        c.argument('unit_of_measure_id', help='')
        c.argument('unit_price', type=float, help='')
        c.argument('account', action=AddAccount, nargs='+', help='account')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Item')
        c.argument('base_unit_of_measure_id', help='', arg_group='Item')
        c.argument('blocked', arg_type=get_three_state_flag(), help='', arg_group='Item')
        c.argument('display_name', type=str, help='', arg_group='Item')
        c.argument('gtin', type=str, help='', arg_group='Item')
        c.argument('inventory', type=float, help='', arg_group='Item')
        c.argument('item_category_code', type=str, help='', arg_group='Item')
        c.argument('item_category_id', help='', arg_group='Item')
        c.argument('last_modified_date_time', help='', arg_group='Item')
        c.argument('number', type=str, help='', arg_group='Item')
        c.argument('price_includes_tax', arg_type=get_three_state_flag(), help='', arg_group='Item')
        c.argument('tax_group_code', type=str, help='', arg_group='Item')
        c.argument('tax_group_id', help='', arg_group='Item')
        c.argument('type_', options_list=['--type'], type=str, help='', arg_group='Item')
        c.argument('unit_cost', type=float, help='', arg_group='Item')
        c.argument('number_unit_price', type=float, help='', arg_group='Item')
        c.argument('item_category', action=AddItemCategory, nargs='+', help='itemCategory', arg_group='Item')
        c.argument('picture', action=AddFinancialsFinancialscompanyCreateItemPicture, nargs='+', help='',
                   arg_group='Item')

    with self.argument_context('financials financialscompany update-shipment-method') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('shipment_method_id', type=str, help='key: id of shipmentMethod')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('code', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')

    with self.argument_context('financials financialscompany update-tax-area') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('tax_area_id', type=str, help='key: id of taxArea')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('code', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')
        c.argument('tax_type', type=str, help='')

    with self.argument_context('financials financialscompany update-tax-group') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('tax_group_id', type=str, help='key: id of taxGroup')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('code', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')
        c.argument('tax_type', type=str, help='')

    with self.argument_context('financials financialscompany update-unit-of-measure') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('unit_of_measure_id', type=str, help='key: id of unitOfMeasure')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('code', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('international_standard_code', type=str, help='')
        c.argument('last_modified_date_time', help='')

    with self.argument_context('financials financialscompany update-vendor') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('vendor_id', type=str, help='key: id of vendor')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('address', action=AddAddress, nargs='+', help='postalAddressType')
        c.argument('balance', type=float, help='')
        c.argument('blocked', type=str, help='')
        c.argument('currency_code', type=str, help='')
        c.argument('currency_id', help='')
        c.argument('display_name', type=str, help='')
        c.argument('email', type=str, help='')
        c.argument('last_modified_date_time', help='')
        c.argument('number', type=str, help='')
        c.argument('payment_method_id', help='')
        c.argument('payment_terms_id', help='')
        c.argument('phone_number', type=str, help='')
        c.argument('tax_liable', arg_type=get_three_state_flag(), help='')
        c.argument('tax_registration_number', type=str, help='')
        c.argument('website', type=str, help='')
        c.argument('currency', action=AddCurrency, nargs='+', help='currency')
        c.argument('payment_method', action=AddPaymentMethod, nargs='+', help='paymentMethod')
        c.argument('payment_term', action=AddPaymentTerm, nargs='+', help='paymentTerm')
        c.argument('picture', action=AddFinancialsFinancialscompanyCreatePurchaseInvoicePicture, nargs='+', help='')

    with self.argument_context('financials financialscompaniescustomerpaymentjournal create-customer-payment') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('customer_payment_journal_id', type=str, help='key: id of customerPaymentJournal')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('amount', type=float, help='')
        c.argument('applies_to_invoice_id', help='')
        c.argument('applies_to_invoice_number', type=str, help='')
        c.argument('comment', type=str, help='')
        c.argument('contact_id', type=str, help='')
        c.argument('customer_id', help='')
        c.argument('customer_number', type=str, help='')
        c.argument('description', type=str, help='')
        c.argument('document_number', type=str, help='')
        c.argument('external_document_number', type=str, help='')
        c.argument('journal_display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')
        c.argument('line_number', type=int, help='')
        c.argument('posting_date', help='')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Customer')
        c.argument('address', action=AddAddress, nargs='+', help='postalAddressType', arg_group='Customer')
        c.argument('blocked', type=str, help='', arg_group='Customer')
        c.argument('currency_code', type=str, help='', arg_group='Customer')
        c.argument('currency_id', help='', arg_group='Customer')
        c.argument('display_name', type=str, help='', arg_group='Customer')
        c.argument('email', type=str, help='', arg_group='Customer')
        c.argument('microsoft_graph_customer_last_modified_date_time_last_modified_date_time', help='',
                   arg_group='Customer')
        c.argument('number', type=str, help='', arg_group='Customer')
        c.argument('payment_method_id', help='', arg_group='Customer')
        c.argument('payment_terms_id', help='', arg_group='Customer')
        c.argument('phone_number', type=str, help='', arg_group='Customer')
        c.argument('shipment_method_id', help='', arg_group='Customer')
        c.argument('tax_area_display_name', type=str, help='', arg_group='Customer')
        c.argument('tax_area_id', help='', arg_group='Customer')
        c.argument('tax_liable', arg_type=get_three_state_flag(), help='', arg_group='Customer')
        c.argument('tax_registration_number', type=str, help='', arg_group='Customer')
        c.argument('type_', options_list=['--type'], type=str, help='', arg_group='Customer')
        c.argument('website', type=str, help='', arg_group='Customer')
        c.argument('currency', action=AddCurrency, nargs='+', help='currency', arg_group='Customer')
        c.argument('payment_method', action=AddPaymentMethod, nargs='+', help='paymentMethod', arg_group='Customer')
        c.argument('payment_term', action=AddPaymentTerm, nargs='+', help='paymentTerm', arg_group='Customer')
        c.argument('picture', action=AddFinancialsFinancialscompanyCreateCustomerPaymentPicture, nargs='+', help='',
                   arg_group='Customer')
        c.argument('shipment_method', action=AddShipmentMethod, nargs='+', help='shipmentMethod',
                   arg_group='Customer')

    with self.argument_context('financials financialscompaniescustomerpaymentjournal delete-account') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('customer_payment_journal_id', type=str, help='key: id of customerPaymentJournal')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniescustomerpaymentjournal delete-customer-payment') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('customer_payment_journal_id', type=str, help='key: id of customerPaymentJournal')
        c.argument('customer_payment_id', type=str, help='key: id of customerPayment')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniescustomerpaymentjournal list-customer-payment') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('customer_payment_journal_id', type=str, help='key: id of customerPaymentJournal')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniescustomerpaymentjournal show-account') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('customer_payment_journal_id', type=str, help='key: id of customerPaymentJournal')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniescustomerpaymentjournal show-customer-payment') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('customer_payment_journal_id', type=str, help='key: id of customerPaymentJournal')
        c.argument('customer_payment_id', type=str, help='key: id of customerPayment')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniescustomerpaymentjournal update-account') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('customer_payment_journal_id', type=str, help='key: id of customerPaymentJournal')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('blocked', arg_type=get_three_state_flag(), help='')
        c.argument('category', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')
        c.argument('number', type=str, help='')
        c.argument('sub_category', type=str, help='')

    with self.argument_context('financials financialscompaniescustomerpaymentjournal update-customer-payment') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('customer_payment_journal_id', type=str, help='key: id of customerPaymentJournal')
        c.argument('customer_payment_id', type=str, help='key: id of customerPayment')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('amount', type=float, help='')
        c.argument('applies_to_invoice_id', help='')
        c.argument('applies_to_invoice_number', type=str, help='')
        c.argument('comment', type=str, help='')
        c.argument('contact_id', type=str, help='')
        c.argument('customer_id', help='')
        c.argument('customer_number', type=str, help='')
        c.argument('description', type=str, help='')
        c.argument('document_number', type=str, help='')
        c.argument('external_document_number', type=str, help='')
        c.argument('journal_display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')
        c.argument('line_number', type=int, help='')
        c.argument('posting_date', help='')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Customer')
        c.argument('address', action=AddAddress, nargs='+', help='postalAddressType', arg_group='Customer')
        c.argument('blocked', type=str, help='', arg_group='Customer')
        c.argument('currency_code', type=str, help='', arg_group='Customer')
        c.argument('currency_id', help='', arg_group='Customer')
        c.argument('display_name', type=str, help='', arg_group='Customer')
        c.argument('email', type=str, help='', arg_group='Customer')
        c.argument('microsoft_graph_customer_last_modified_date_time_last_modified_date_time', help='',
                   arg_group='Customer')
        c.argument('number', type=str, help='', arg_group='Customer')
        c.argument('payment_method_id', help='', arg_group='Customer')
        c.argument('payment_terms_id', help='', arg_group='Customer')
        c.argument('phone_number', type=str, help='', arg_group='Customer')
        c.argument('shipment_method_id', help='', arg_group='Customer')
        c.argument('tax_area_display_name', type=str, help='', arg_group='Customer')
        c.argument('tax_area_id', help='', arg_group='Customer')
        c.argument('tax_liable', arg_type=get_three_state_flag(), help='', arg_group='Customer')
        c.argument('tax_registration_number', type=str, help='', arg_group='Customer')
        c.argument('type_', options_list=['--type'], type=str, help='', arg_group='Customer')
        c.argument('website', type=str, help='', arg_group='Customer')
        c.argument('currency', action=AddCurrency, nargs='+', help='currency', arg_group='Customer')
        c.argument('payment_method', action=AddPaymentMethod, nargs='+', help='paymentMethod', arg_group='Customer')
        c.argument('payment_term', action=AddPaymentTerm, nargs='+', help='paymentTerm', arg_group='Customer')
        c.argument('picture', action=AddFinancialsFinancialscompanyCreateCustomerPaymentPicture, nargs='+', help='',
                   arg_group='Customer')
        c.argument('shipment_method', action=AddShipmentMethod, nargs='+', help='shipmentMethod',
                   arg_group='Customer')

    with self.argument_context('financials financialscompaniescustomerpaymentjournalscustomerpayment delete-customer') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('customer_payment_journal_id', type=str, help='key: id of customerPaymentJournal')
        c.argument('customer_payment_id', type=str, help='key: id of customerPayment')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniescustomerpaymentjournalscustomerpayment show-customer') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('customer_payment_journal_id', type=str, help='key: id of customerPaymentJournal')
        c.argument('customer_payment_id', type=str, help='key: id of customerPayment')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniescustomerpaymentjournalscustomerpayment update-customer') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('customer_payment_journal_id', type=str, help='key: id of customerPaymentJournal')
        c.argument('customer_payment_id', type=str, help='key: id of customerPayment')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('address', action=AddAddress, nargs='+', help='postalAddressType')
        c.argument('blocked', type=str, help='')
        c.argument('currency_code', type=str, help='')
        c.argument('currency_id', help='')
        c.argument('display_name', type=str, help='')
        c.argument('email', type=str, help='')
        c.argument('last_modified_date_time', help='')
        c.argument('number', type=str, help='')
        c.argument('payment_method_id', help='')
        c.argument('payment_terms_id', help='')
        c.argument('phone_number', type=str, help='')
        c.argument('shipment_method_id', help='')
        c.argument('tax_area_display_name', type=str, help='')
        c.argument('tax_area_id', help='')
        c.argument('tax_liable', arg_type=get_three_state_flag(), help='')
        c.argument('tax_registration_number', type=str, help='')
        c.argument('type_', options_list=['--type'], type=str, help='')
        c.argument('website', type=str, help='')
        c.argument('currency', action=AddCurrency, nargs='+', help='currency')
        c.argument('payment_method', action=AddPaymentMethod, nargs='+', help='paymentMethod')
        c.argument('payment_term', action=AddPaymentTerm, nargs='+', help='paymentTerm')
        c.argument('picture', action=AddFinancialsFinancialscompanyCreateCustomerPaymentPicture, nargs='+', help='')
        c.argument('shipment_method', action=AddShipmentMethod, nargs='+', help='shipmentMethod')

    with self.argument_context('financials financialscompaniescustomerpaymentjournalscustomerpaymentscustomer create-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('customer_payment_journal_id', type=str, help='key: id of customerPaymentJournal')
        c.argument('customer_payment_id', type=str, help='key: id of customerPayment')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('content', help='')
        c.argument('content_type', type=str, help='')
        c.argument('height', type=int, help='')
        c.argument('width', type=int, help='')

    with self.argument_context('financials financialscompaniescustomerpaymentjournalscustomerpaymentscustomer delete-currency') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('customer_payment_journal_id', type=str, help='key: id of customerPaymentJournal')
        c.argument('customer_payment_id', type=str, help='key: id of customerPayment')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniescustomerpaymentjournalscustomerpaymentscustomer delete-payment-method') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('customer_payment_journal_id', type=str, help='key: id of customerPaymentJournal')
        c.argument('customer_payment_id', type=str, help='key: id of customerPayment')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniescustomerpaymentjournalscustomerpaymentscustomer delete-payment-term') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('customer_payment_journal_id', type=str, help='key: id of customerPaymentJournal')
        c.argument('customer_payment_id', type=str, help='key: id of customerPayment')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniescustomerpaymentjournalscustomerpaymentscustomer delete-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('customer_payment_journal_id', type=str, help='key: id of customerPaymentJournal')
        c.argument('customer_payment_id', type=str, help='key: id of customerPayment')
        c.argument('picture_id', type=str, help='key: id of picture')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniescustomerpaymentjournalscustomerpaymentscustomer delete-shipment-method') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('customer_payment_journal_id', type=str, help='key: id of customerPaymentJournal')
        c.argument('customer_payment_id', type=str, help='key: id of customerPayment')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniescustomerpaymentjournalscustomerpaymentscustomer list-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('customer_payment_journal_id', type=str, help='key: id of customerPaymentJournal')
        c.argument('customer_payment_id', type=str, help='key: id of customerPayment')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniescustomerpaymentjournalscustomerpaymentscustomer set-picture-content') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('customer_payment_journal_id', type=str, help='key: id of customerPaymentJournal')
        c.argument('customer_payment_id', type=str, help='key: id of customerPayment')
        c.argument('picture_id', type=str, help='key: id of picture')
        c.argument('data', help='New media content.')

    with self.argument_context('financials financialscompaniescustomerpaymentjournalscustomerpaymentscustomer show-currency') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('customer_payment_journal_id', type=str, help='key: id of customerPaymentJournal')
        c.argument('customer_payment_id', type=str, help='key: id of customerPayment')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniescustomerpaymentjournalscustomerpaymentscustomer show-payment-method') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('customer_payment_journal_id', type=str, help='key: id of customerPaymentJournal')
        c.argument('customer_payment_id', type=str, help='key: id of customerPayment')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniescustomerpaymentjournalscustomerpaymentscustomer show-payment-term') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('customer_payment_journal_id', type=str, help='key: id of customerPaymentJournal')
        c.argument('customer_payment_id', type=str, help='key: id of customerPayment')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniescustomerpaymentjournalscustomerpaymentscustomer show-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('customer_payment_journal_id', type=str, help='key: id of customerPaymentJournal')
        c.argument('customer_payment_id', type=str, help='key: id of customerPayment')
        c.argument('picture_id', type=str, help='key: id of picture')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniescustomerpaymentjournalscustomerpaymentscustomer show-picture-content') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('customer_payment_journal_id', type=str, help='key: id of customerPaymentJournal')
        c.argument('customer_payment_id', type=str, help='key: id of customerPayment')
        c.argument('picture_id', type=str, help='key: id of picture')

    with self.argument_context('financials financialscompaniescustomerpaymentjournalscustomerpaymentscustomer show-shipment-method') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('customer_payment_journal_id', type=str, help='key: id of customerPaymentJournal')
        c.argument('customer_payment_id', type=str, help='key: id of customerPayment')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniescustomerpaymentjournalscustomerpaymentscustomer update-currency') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('customer_payment_journal_id', type=str, help='key: id of customerPaymentJournal')
        c.argument('customer_payment_id', type=str, help='key: id of customerPayment')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('amount_decimal_places', type=str, help='')
        c.argument('amount_rounding_precision', type=float, help='')
        c.argument('code', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')
        c.argument('symbol', type=str, help='')

    with self.argument_context('financials financialscompaniescustomerpaymentjournalscustomerpaymentscustomer update-payment-method') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('customer_payment_journal_id', type=str, help='key: id of customerPaymentJournal')
        c.argument('customer_payment_id', type=str, help='key: id of customerPayment')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('code', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')

    with self.argument_context('financials financialscompaniescustomerpaymentjournalscustomerpaymentscustomer update-payment-term') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('customer_payment_journal_id', type=str, help='key: id of customerPaymentJournal')
        c.argument('customer_payment_id', type=str, help='key: id of customerPayment')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('calculate_discount_on_credit_memos', arg_type=get_three_state_flag(), help='')
        c.argument('code', type=str, help='')
        c.argument('discount_date_calculation', type=str, help='')
        c.argument('discount_percent', type=float, help='')
        c.argument('display_name', type=str, help='')
        c.argument('due_date_calculation', type=str, help='')
        c.argument('last_modified_date_time', help='')

    with self.argument_context('financials financialscompaniescustomerpaymentjournalscustomerpaymentscustomer update-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('customer_payment_journal_id', type=str, help='key: id of customerPaymentJournal')
        c.argument('customer_payment_id', type=str, help='key: id of customerPayment')
        c.argument('picture_id', type=str, help='key: id of picture')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('content', help='')
        c.argument('content_type', type=str, help='')
        c.argument('height', type=int, help='')
        c.argument('width', type=int, help='')

    with self.argument_context('financials financialscompaniescustomerpaymentjournalscustomerpaymentscustomer update-shipment-method') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('customer_payment_journal_id', type=str, help='key: id of customerPaymentJournal')
        c.argument('customer_payment_id', type=str, help='key: id of customerPayment')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('code', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')

    with self.argument_context('financials financialscompaniescustomerpayment delete-customer') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('customer_payment_id', type=str, help='key: id of customerPayment')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniescustomerpayment show-customer') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('customer_payment_id', type=str, help='key: id of customerPayment')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniescustomerpayment update-customer') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('customer_payment_id', type=str, help='key: id of customerPayment')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('address', action=AddAddress, nargs='+', help='postalAddressType')
        c.argument('blocked', type=str, help='')
        c.argument('currency_code', type=str, help='')
        c.argument('currency_id', help='')
        c.argument('display_name', type=str, help='')
        c.argument('email', type=str, help='')
        c.argument('last_modified_date_time', help='')
        c.argument('number', type=str, help='')
        c.argument('payment_method_id', help='')
        c.argument('payment_terms_id', help='')
        c.argument('phone_number', type=str, help='')
        c.argument('shipment_method_id', help='')
        c.argument('tax_area_display_name', type=str, help='')
        c.argument('tax_area_id', help='')
        c.argument('tax_liable', arg_type=get_three_state_flag(), help='')
        c.argument('tax_registration_number', type=str, help='')
        c.argument('type_', options_list=['--type'], type=str, help='')
        c.argument('website', type=str, help='')
        c.argument('currency', action=AddCurrency, nargs='+', help='currency')
        c.argument('payment_method', action=AddPaymentMethod, nargs='+', help='paymentMethod')
        c.argument('payment_term', action=AddPaymentTerm, nargs='+', help='paymentTerm')
        c.argument('picture', action=AddFinancialsFinancialscompanyCreateCustomerPaymentPicture, nargs='+', help='')
        c.argument('shipment_method', action=AddShipmentMethod, nargs='+', help='shipmentMethod')

    with self.argument_context('financials financialscompaniescustomerpaymentscustomer create-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('customer_payment_id', type=str, help='key: id of customerPayment')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('content', help='')
        c.argument('content_type', type=str, help='')
        c.argument('height', type=int, help='')
        c.argument('width', type=int, help='')

    with self.argument_context('financials financialscompaniescustomerpaymentscustomer delete-currency') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('customer_payment_id', type=str, help='key: id of customerPayment')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniescustomerpaymentscustomer delete-payment-method') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('customer_payment_id', type=str, help='key: id of customerPayment')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniescustomerpaymentscustomer delete-payment-term') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('customer_payment_id', type=str, help='key: id of customerPayment')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniescustomerpaymentscustomer delete-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('customer_payment_id', type=str, help='key: id of customerPayment')
        c.argument('picture_id', type=str, help='key: id of picture')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniescustomerpaymentscustomer delete-shipment-method') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('customer_payment_id', type=str, help='key: id of customerPayment')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniescustomerpaymentscustomer list-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('customer_payment_id', type=str, help='key: id of customerPayment')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniescustomerpaymentscustomer set-picture-content') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('customer_payment_id', type=str, help='key: id of customerPayment')
        c.argument('picture_id', type=str, help='key: id of picture')
        c.argument('data', help='New media content.')

    with self.argument_context('financials financialscompaniescustomerpaymentscustomer show-currency') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('customer_payment_id', type=str, help='key: id of customerPayment')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniescustomerpaymentscustomer show-payment-method') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('customer_payment_id', type=str, help='key: id of customerPayment')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniescustomerpaymentscustomer show-payment-term') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('customer_payment_id', type=str, help='key: id of customerPayment')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniescustomerpaymentscustomer show-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('customer_payment_id', type=str, help='key: id of customerPayment')
        c.argument('picture_id', type=str, help='key: id of picture')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniescustomerpaymentscustomer show-picture-content') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('customer_payment_id', type=str, help='key: id of customerPayment')
        c.argument('picture_id', type=str, help='key: id of picture')

    with self.argument_context('financials financialscompaniescustomerpaymentscustomer show-shipment-method') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('customer_payment_id', type=str, help='key: id of customerPayment')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniescustomerpaymentscustomer update-currency') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('customer_payment_id', type=str, help='key: id of customerPayment')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('amount_decimal_places', type=str, help='')
        c.argument('amount_rounding_precision', type=float, help='')
        c.argument('code', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')
        c.argument('symbol', type=str, help='')

    with self.argument_context('financials financialscompaniescustomerpaymentscustomer update-payment-method') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('customer_payment_id', type=str, help='key: id of customerPayment')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('code', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')

    with self.argument_context('financials financialscompaniescustomerpaymentscustomer update-payment-term') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('customer_payment_id', type=str, help='key: id of customerPayment')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('calculate_discount_on_credit_memos', arg_type=get_three_state_flag(), help='')
        c.argument('code', type=str, help='')
        c.argument('discount_date_calculation', type=str, help='')
        c.argument('discount_percent', type=float, help='')
        c.argument('display_name', type=str, help='')
        c.argument('due_date_calculation', type=str, help='')
        c.argument('last_modified_date_time', help='')

    with self.argument_context('financials financialscompaniescustomerpaymentscustomer update-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('customer_payment_id', type=str, help='key: id of customerPayment')
        c.argument('picture_id', type=str, help='key: id of picture')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('content', help='')
        c.argument('content_type', type=str, help='')
        c.argument('height', type=int, help='')
        c.argument('width', type=int, help='')

    with self.argument_context('financials financialscompaniescustomerpaymentscustomer update-shipment-method') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('customer_payment_id', type=str, help='key: id of customerPayment')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('code', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')

    with self.argument_context('financials financialscompaniescustomer create-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('customer_id', type=str, help='key: id of customer')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('content', help='')
        c.argument('content_type', type=str, help='')
        c.argument('height', type=int, help='')
        c.argument('width', type=int, help='')

    with self.argument_context('financials financialscompaniescustomer delete-currency') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('customer_id', type=str, help='key: id of customer')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniescustomer delete-payment-method') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('customer_id', type=str, help='key: id of customer')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniescustomer delete-payment-term') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('customer_id', type=str, help='key: id of customer')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniescustomer delete-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('customer_id', type=str, help='key: id of customer')
        c.argument('picture_id', type=str, help='key: id of picture')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniescustomer delete-shipment-method') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('customer_id', type=str, help='key: id of customer')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniescustomer list-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('customer_id', type=str, help='key: id of customer')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniescustomer set-picture-content') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('customer_id', type=str, help='key: id of customer')
        c.argument('picture_id', type=str, help='key: id of picture')
        c.argument('data', help='New media content.')

    with self.argument_context('financials financialscompaniescustomer show-currency') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('customer_id', type=str, help='key: id of customer')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniescustomer show-payment-method') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('customer_id', type=str, help='key: id of customer')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniescustomer show-payment-term') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('customer_id', type=str, help='key: id of customer')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniescustomer show-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('customer_id', type=str, help='key: id of customer')
        c.argument('picture_id', type=str, help='key: id of picture')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniescustomer show-picture-content') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('customer_id', type=str, help='key: id of customer')
        c.argument('picture_id', type=str, help='key: id of picture')

    with self.argument_context('financials financialscompaniescustomer show-shipment-method') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('customer_id', type=str, help='key: id of customer')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniescustomer update-currency') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('customer_id', type=str, help='key: id of customer')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('amount_decimal_places', type=str, help='')
        c.argument('amount_rounding_precision', type=float, help='')
        c.argument('code', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')
        c.argument('symbol', type=str, help='')

    with self.argument_context('financials financialscompaniescustomer update-payment-method') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('customer_id', type=str, help='key: id of customer')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('code', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')

    with self.argument_context('financials financialscompaniescustomer update-payment-term') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('customer_id', type=str, help='key: id of customer')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('calculate_discount_on_credit_memos', arg_type=get_three_state_flag(), help='')
        c.argument('code', type=str, help='')
        c.argument('discount_date_calculation', type=str, help='')
        c.argument('discount_percent', type=float, help='')
        c.argument('display_name', type=str, help='')
        c.argument('due_date_calculation', type=str, help='')
        c.argument('last_modified_date_time', help='')

    with self.argument_context('financials financialscompaniescustomer update-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('customer_id', type=str, help='key: id of customer')
        c.argument('picture_id', type=str, help='key: id of picture')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('content', help='')
        c.argument('content_type', type=str, help='')
        c.argument('height', type=int, help='')
        c.argument('width', type=int, help='')

    with self.argument_context('financials financialscompaniescustomer update-shipment-method') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('customer_id', type=str, help='key: id of customer')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('code', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')

    with self.argument_context('financials financialscompaniesdimension create-dimension-value') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('dimension_id', type=str, help='key: id of dimension')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('code', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')

    with self.argument_context('financials financialscompaniesdimension delete-dimension-value') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('dimension_id', type=str, help='key: id of dimension')
        c.argument('dimension_value_id', type=str, help='key: id of dimensionValue')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniesdimension list-dimension-value') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('dimension_id', type=str, help='key: id of dimension')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniesdimension show-dimension-value') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('dimension_id', type=str, help='key: id of dimension')
        c.argument('dimension_value_id', type=str, help='key: id of dimensionValue')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniesdimension update-dimension-value') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('dimension_id', type=str, help='key: id of dimension')
        c.argument('dimension_value_id', type=str, help='key: id of dimensionValue')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('code', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')

    with self.argument_context('financials financialscompaniesemployee create-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('employee_id', type=str, help='key: id of employee')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('content', help='')
        c.argument('content_type', type=str, help='')
        c.argument('height', type=int, help='')
        c.argument('width', type=int, help='')

    with self.argument_context('financials financialscompaniesemployee delete-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('employee_id', type=str, help='key: id of employee')
        c.argument('picture_id', type=str, help='key: id of picture')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniesemployee list-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('employee_id', type=str, help='key: id of employee')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniesemployee set-picture-content') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('employee_id', type=str, help='key: id of employee')
        c.argument('picture_id', type=str, help='key: id of picture')
        c.argument('data', help='New media content.')

    with self.argument_context('financials financialscompaniesemployee show-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('employee_id', type=str, help='key: id of employee')
        c.argument('picture_id', type=str, help='key: id of picture')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniesemployee show-picture-content') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('employee_id', type=str, help='key: id of employee')
        c.argument('picture_id', type=str, help='key: id of picture')

    with self.argument_context('financials financialscompaniesemployee update-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('employee_id', type=str, help='key: id of employee')
        c.argument('picture_id', type=str, help='key: id of picture')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('content', help='')
        c.argument('content_type', type=str, help='')
        c.argument('height', type=int, help='')
        c.argument('width', type=int, help='')

    with self.argument_context('financials financialscompaniesgeneralledgerentry delete-account') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('general_ledger_entry_id', type=str, help='key: id of generalLedgerEntry')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniesgeneralledgerentry show-account') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('general_ledger_entry_id', type=str, help='key: id of generalLedgerEntry')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniesgeneralledgerentry update-account') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('general_ledger_entry_id', type=str, help='key: id of generalLedgerEntry')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('blocked', arg_type=get_three_state_flag(), help='')
        c.argument('category', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')
        c.argument('number', type=str, help='')
        c.argument('sub_category', type=str, help='')

    with self.argument_context('financials financialscompaniesitem create-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('item_id', type=str, help='key: id of item')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('content', help='')
        c.argument('content_type', type=str, help='')
        c.argument('height', type=int, help='')
        c.argument('width', type=int, help='')

    with self.argument_context('financials financialscompaniesitem delete-item-category') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('item_id', type=str, help='key: id of item')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniesitem delete-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('item_id', type=str, help='key: id of item')
        c.argument('picture_id', type=str, help='key: id of picture')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniesitem list-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('item_id', type=str, help='key: id of item')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniesitem set-picture-content') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('item_id', type=str, help='key: id of item')
        c.argument('picture_id', type=str, help='key: id of picture')
        c.argument('data', help='New media content.')

    with self.argument_context('financials financialscompaniesitem show-item-category') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('item_id', type=str, help='key: id of item')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniesitem show-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('item_id', type=str, help='key: id of item')
        c.argument('picture_id', type=str, help='key: id of picture')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniesitem show-picture-content') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('item_id', type=str, help='key: id of item')
        c.argument('picture_id', type=str, help='key: id of picture')

    with self.argument_context('financials financialscompaniesitem update-item-category') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('item_id', type=str, help='key: id of item')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('code', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')

    with self.argument_context('financials financialscompaniesitem update-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('item_id', type=str, help='key: id of item')
        c.argument('picture_id', type=str, help='key: id of picture')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('content', help='')
        c.argument('content_type', type=str, help='')
        c.argument('height', type=int, help='')
        c.argument('width', type=int, help='')

    with self.argument_context('financials financialscompaniesjournalline delete-account') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('journal_line_id', type=str, help='key: id of journalLine')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniesjournalline show-account') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('journal_line_id', type=str, help='key: id of journalLine')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniesjournalline update-account') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('journal_line_id', type=str, help='key: id of journalLine')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('blocked', arg_type=get_three_state_flag(), help='')
        c.argument('category', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')
        c.argument('number', type=str, help='')
        c.argument('sub_category', type=str, help='')

    with self.argument_context('financials financialscompaniesjournal create-journal-line') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('journal_id', type=str, help='key: id of journal')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('account_id', help='')
        c.argument('account_number', type=str, help='')
        c.argument('amount', type=float, help='')
        c.argument('comment', type=str, help='')
        c.argument('description', type=str, help='')
        c.argument('document_number', type=str, help='')
        c.argument('external_document_number', type=str, help='')
        c.argument('journal_display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')
        c.argument('line_number', type=int, help='')
        c.argument('posting_date', help='')
        c.argument('account', action=AddAccount, nargs='+', help='account')

    with self.argument_context('financials financialscompaniesjournal delete-account') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('journal_id', type=str, help='key: id of journal')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniesjournal delete-journal-line') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('journal_id', type=str, help='key: id of journal')
        c.argument('journal_line_id', type=str, help='key: id of journalLine')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniesjournal list-journal-line') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('journal_id', type=str, help='key: id of journal')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniesjournal post') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('journal_id', type=str, help='key: id of journal')

    with self.argument_context('financials financialscompaniesjournal show-account') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('journal_id', type=str, help='key: id of journal')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniesjournal show-journal-line') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('journal_id', type=str, help='key: id of journal')
        c.argument('journal_line_id', type=str, help='key: id of journalLine')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniesjournal update-account') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('journal_id', type=str, help='key: id of journal')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('blocked', arg_type=get_three_state_flag(), help='')
        c.argument('category', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')
        c.argument('number', type=str, help='')
        c.argument('sub_category', type=str, help='')

    with self.argument_context('financials financialscompaniesjournal update-journal-line') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('journal_id', type=str, help='key: id of journal')
        c.argument('journal_line_id', type=str, help='key: id of journalLine')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('account_id', help='')
        c.argument('account_number', type=str, help='')
        c.argument('amount', type=float, help='')
        c.argument('comment', type=str, help='')
        c.argument('description', type=str, help='')
        c.argument('document_number', type=str, help='')
        c.argument('external_document_number', type=str, help='')
        c.argument('journal_display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')
        c.argument('line_number', type=int, help='')
        c.argument('posting_date', help='')
        c.argument('account', action=AddAccount, nargs='+', help='account')

    with self.argument_context('financials financialscompaniesjournalsjournalline delete-account') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('journal_id', type=str, help='key: id of journal')
        c.argument('journal_line_id', type=str, help='key: id of journalLine')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniesjournalsjournalline show-account') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('journal_id', type=str, help='key: id of journal')
        c.argument('journal_line_id', type=str, help='key: id of journalLine')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniesjournalsjournalline update-account') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('journal_id', type=str, help='key: id of journal')
        c.argument('journal_line_id', type=str, help='key: id of journalLine')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('blocked', arg_type=get_three_state_flag(), help='')
        c.argument('category', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')
        c.argument('number', type=str, help='')
        c.argument('sub_category', type=str, help='')

    with self.argument_context('financials financialscompaniespurchaseinvoiceline delete-account') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('purchase_invoice_line_id', type=str, help='key: id of purchaseInvoiceLine')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniespurchaseinvoiceline delete-item') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('purchase_invoice_line_id', type=str, help='key: id of purchaseInvoiceLine')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniespurchaseinvoiceline show-account') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('purchase_invoice_line_id', type=str, help='key: id of purchaseInvoiceLine')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniespurchaseinvoiceline show-item') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('purchase_invoice_line_id', type=str, help='key: id of purchaseInvoiceLine')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniespurchaseinvoiceline update-account') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('purchase_invoice_line_id', type=str, help='key: id of purchaseInvoiceLine')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('blocked', arg_type=get_three_state_flag(), help='')
        c.argument('category', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')
        c.argument('number', type=str, help='')
        c.argument('sub_category', type=str, help='')

    with self.argument_context('financials financialscompaniespurchaseinvoiceline update-item') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('purchase_invoice_line_id', type=str, help='key: id of purchaseInvoiceLine')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('base_unit_of_measure_id', help='')
        c.argument('blocked', arg_type=get_three_state_flag(), help='')
        c.argument('display_name', type=str, help='')
        c.argument('gtin', type=str, help='')
        c.argument('inventory', type=float, help='')
        c.argument('item_category_code', type=str, help='')
        c.argument('item_category_id', help='')
        c.argument('last_modified_date_time', help='')
        c.argument('number', type=str, help='')
        c.argument('price_includes_tax', arg_type=get_three_state_flag(), help='')
        c.argument('tax_group_code', type=str, help='')
        c.argument('tax_group_id', help='')
        c.argument('type_', options_list=['--type'], type=str, help='')
        c.argument('unit_cost', type=float, help='')
        c.argument('unit_price', type=float, help='')
        c.argument('item_category', action=AddItemCategory, nargs='+', help='itemCategory')
        c.argument('picture', action=AddFinancialsFinancialscompanyCreateItemPicture, nargs='+', help='')

    with self.argument_context('financials financialscompaniespurchaseinvoicelinesitem create-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('purchase_invoice_line_id', type=str, help='key: id of purchaseInvoiceLine')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('content', help='')
        c.argument('content_type', type=str, help='')
        c.argument('height', type=int, help='')
        c.argument('width', type=int, help='')

    with self.argument_context('financials financialscompaniespurchaseinvoicelinesitem delete-item-category') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('purchase_invoice_line_id', type=str, help='key: id of purchaseInvoiceLine')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniespurchaseinvoicelinesitem delete-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('purchase_invoice_line_id', type=str, help='key: id of purchaseInvoiceLine')
        c.argument('picture_id', type=str, help='key: id of picture')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniespurchaseinvoicelinesitem list-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('purchase_invoice_line_id', type=str, help='key: id of purchaseInvoiceLine')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniespurchaseinvoicelinesitem set-picture-content') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('purchase_invoice_line_id', type=str, help='key: id of purchaseInvoiceLine')
        c.argument('picture_id', type=str, help='key: id of picture')
        c.argument('data', help='New media content.')

    with self.argument_context('financials financialscompaniespurchaseinvoicelinesitem show-item-category') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('purchase_invoice_line_id', type=str, help='key: id of purchaseInvoiceLine')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniespurchaseinvoicelinesitem show-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('purchase_invoice_line_id', type=str, help='key: id of purchaseInvoiceLine')
        c.argument('picture_id', type=str, help='key: id of picture')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniespurchaseinvoicelinesitem show-picture-content') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('purchase_invoice_line_id', type=str, help='key: id of purchaseInvoiceLine')
        c.argument('picture_id', type=str, help='key: id of picture')

    with self.argument_context('financials financialscompaniespurchaseinvoicelinesitem update-item-category') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('purchase_invoice_line_id', type=str, help='key: id of purchaseInvoiceLine')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('code', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')

    with self.argument_context('financials financialscompaniespurchaseinvoicelinesitem update-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('purchase_invoice_line_id', type=str, help='key: id of purchaseInvoiceLine')
        c.argument('picture_id', type=str, help='key: id of picture')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('content', help='')
        c.argument('content_type', type=str, help='')
        c.argument('height', type=int, help='')
        c.argument('width', type=int, help='')

    with self.argument_context('financials financialscompaniespurchaseinvoice create-purchase-invoice-line') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('purchase_invoice_id', type=str, help='key: id of purchaseInvoice')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('account_id', help='')
        c.argument('amount_excluding_tax', type=float, help='')
        c.argument('amount_including_tax', type=float, help='')
        c.argument('description', type=str, help='')
        c.argument('discount_amount', type=float, help='')
        c.argument('discount_applied_before_tax', arg_type=get_three_state_flag(), help='')
        c.argument('discount_percent', type=float, help='')
        c.argument('document_id', help='')
        c.argument('expected_receipt_date', help='')
        c.argument('invoice_discount_allocation', type=float, help='')
        c.argument('item_id', help='')
        c.argument('line_type', type=str, help='')
        c.argument('net_amount', type=float, help='')
        c.argument('net_amount_including_tax', type=float, help='')
        c.argument('net_tax_amount', type=float, help='')
        c.argument('quantity', type=float, help='')
        c.argument('sequence', type=int, help='')
        c.argument('tax_code', type=str, help='')
        c.argument('tax_percent', type=float, help='')
        c.argument('total_tax_amount', type=float, help='')
        c.argument('unit_cost', type=float, help='')
        c.argument('account', action=AddAccount, nargs='+', help='account')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Item')
        c.argument('base_unit_of_measure_id', help='', arg_group='Item')
        c.argument('blocked', arg_type=get_three_state_flag(), help='', arg_group='Item')
        c.argument('display_name', type=str, help='', arg_group='Item')
        c.argument('gtin', type=str, help='', arg_group='Item')
        c.argument('inventory', type=float, help='', arg_group='Item')
        c.argument('item_category_code', type=str, help='', arg_group='Item')
        c.argument('item_category_id', help='', arg_group='Item')
        c.argument('last_modified_date_time', help='', arg_group='Item')
        c.argument('number', type=str, help='', arg_group='Item')
        c.argument('price_includes_tax', arg_type=get_three_state_flag(), help='', arg_group='Item')
        c.argument('tax_group_code', type=str, help='', arg_group='Item')
        c.argument('tax_group_id', help='', arg_group='Item')
        c.argument('type_', options_list=['--type'], type=str, help='', arg_group='Item')
        c.argument('number_unit_cost', type=float, help='', arg_group='Item')
        c.argument('unit_price', type=float, help='', arg_group='Item')
        c.argument('item_category', action=AddItemCategory, nargs='+', help='itemCategory', arg_group='Item')
        c.argument('picture', action=AddFinancialsFinancialscompanyCreateItemPicture, nargs='+', help='',
                   arg_group='Item')

    with self.argument_context('financials financialscompaniespurchaseinvoice delete-currency') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('purchase_invoice_id', type=str, help='key: id of purchaseInvoice')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniespurchaseinvoice delete-purchase-invoice-line') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('purchase_invoice_id', type=str, help='key: id of purchaseInvoice')
        c.argument('purchase_invoice_line_id', type=str, help='key: id of purchaseInvoiceLine')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniespurchaseinvoice delete-vendor') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('purchase_invoice_id', type=str, help='key: id of purchaseInvoice')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniespurchaseinvoice list-purchase-invoice-line') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('purchase_invoice_id', type=str, help='key: id of purchaseInvoice')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniespurchaseinvoice post') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('purchase_invoice_id', type=str, help='key: id of purchaseInvoice')

    with self.argument_context('financials financialscompaniespurchaseinvoice show-currency') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('purchase_invoice_id', type=str, help='key: id of purchaseInvoice')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniespurchaseinvoice show-purchase-invoice-line') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('purchase_invoice_id', type=str, help='key: id of purchaseInvoice')
        c.argument('purchase_invoice_line_id', type=str, help='key: id of purchaseInvoiceLine')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniespurchaseinvoice show-vendor') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('purchase_invoice_id', type=str, help='key: id of purchaseInvoice')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniespurchaseinvoice update-currency') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('purchase_invoice_id', type=str, help='key: id of purchaseInvoice')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('amount_decimal_places', type=str, help='')
        c.argument('amount_rounding_precision', type=float, help='')
        c.argument('code', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')
        c.argument('symbol', type=str, help='')

    with self.argument_context('financials financialscompaniespurchaseinvoice update-purchase-invoice-line') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('purchase_invoice_id', type=str, help='key: id of purchaseInvoice')
        c.argument('purchase_invoice_line_id', type=str, help='key: id of purchaseInvoiceLine')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('account_id', help='')
        c.argument('amount_excluding_tax', type=float, help='')
        c.argument('amount_including_tax', type=float, help='')
        c.argument('description', type=str, help='')
        c.argument('discount_amount', type=float, help='')
        c.argument('discount_applied_before_tax', arg_type=get_three_state_flag(), help='')
        c.argument('discount_percent', type=float, help='')
        c.argument('document_id', help='')
        c.argument('expected_receipt_date', help='')
        c.argument('invoice_discount_allocation', type=float, help='')
        c.argument('item_id', help='')
        c.argument('line_type', type=str, help='')
        c.argument('net_amount', type=float, help='')
        c.argument('net_amount_including_tax', type=float, help='')
        c.argument('net_tax_amount', type=float, help='')
        c.argument('quantity', type=float, help='')
        c.argument('sequence', type=int, help='')
        c.argument('tax_code', type=str, help='')
        c.argument('tax_percent', type=float, help='')
        c.argument('total_tax_amount', type=float, help='')
        c.argument('unit_cost', type=float, help='')
        c.argument('account', action=AddAccount, nargs='+', help='account')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Item')
        c.argument('base_unit_of_measure_id', help='', arg_group='Item')
        c.argument('blocked', arg_type=get_three_state_flag(), help='', arg_group='Item')
        c.argument('display_name', type=str, help='', arg_group='Item')
        c.argument('gtin', type=str, help='', arg_group='Item')
        c.argument('inventory', type=float, help='', arg_group='Item')
        c.argument('item_category_code', type=str, help='', arg_group='Item')
        c.argument('item_category_id', help='', arg_group='Item')
        c.argument('last_modified_date_time', help='', arg_group='Item')
        c.argument('number', type=str, help='', arg_group='Item')
        c.argument('price_includes_tax', arg_type=get_three_state_flag(), help='', arg_group='Item')
        c.argument('tax_group_code', type=str, help='', arg_group='Item')
        c.argument('tax_group_id', help='', arg_group='Item')
        c.argument('type_', options_list=['--type'], type=str, help='', arg_group='Item')
        c.argument('number_unit_cost', type=float, help='', arg_group='Item')
        c.argument('unit_price', type=float, help='', arg_group='Item')
        c.argument('item_category', action=AddItemCategory, nargs='+', help='itemCategory', arg_group='Item')
        c.argument('picture', action=AddFinancialsFinancialscompanyCreateItemPicture, nargs='+', help='',
                   arg_group='Item')

    with self.argument_context('financials financialscompaniespurchaseinvoice update-vendor') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('purchase_invoice_id', type=str, help='key: id of purchaseInvoice')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('address', action=AddAddress, nargs='+', help='postalAddressType')
        c.argument('balance', type=float, help='')
        c.argument('blocked', type=str, help='')
        c.argument('currency_code', type=str, help='')
        c.argument('currency_id', help='')
        c.argument('display_name', type=str, help='')
        c.argument('email', type=str, help='')
        c.argument('last_modified_date_time', help='')
        c.argument('number', type=str, help='')
        c.argument('payment_method_id', help='')
        c.argument('payment_terms_id', help='')
        c.argument('phone_number', type=str, help='')
        c.argument('tax_liable', arg_type=get_three_state_flag(), help='')
        c.argument('tax_registration_number', type=str, help='')
        c.argument('website', type=str, help='')
        c.argument('currency', action=AddCurrency, nargs='+', help='currency')
        c.argument('payment_method', action=AddPaymentMethod, nargs='+', help='paymentMethod')
        c.argument('payment_term', action=AddPaymentTerm, nargs='+', help='paymentTerm')
        c.argument('picture', action=AddFinancialsFinancialscompanyCreatePurchaseInvoicePicture, nargs='+', help='')

    with self.argument_context('financials financialscompaniespurchaseinvoicespurchaseinvoiceline delete-account') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('purchase_invoice_id', type=str, help='key: id of purchaseInvoice')
        c.argument('purchase_invoice_line_id', type=str, help='key: id of purchaseInvoiceLine')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniespurchaseinvoicespurchaseinvoiceline delete-item') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('purchase_invoice_id', type=str, help='key: id of purchaseInvoice')
        c.argument('purchase_invoice_line_id', type=str, help='key: id of purchaseInvoiceLine')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniespurchaseinvoicespurchaseinvoiceline show-account') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('purchase_invoice_id', type=str, help='key: id of purchaseInvoice')
        c.argument('purchase_invoice_line_id', type=str, help='key: id of purchaseInvoiceLine')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniespurchaseinvoicespurchaseinvoiceline show-item') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('purchase_invoice_id', type=str, help='key: id of purchaseInvoice')
        c.argument('purchase_invoice_line_id', type=str, help='key: id of purchaseInvoiceLine')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniespurchaseinvoicespurchaseinvoiceline update-account') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('purchase_invoice_id', type=str, help='key: id of purchaseInvoice')
        c.argument('purchase_invoice_line_id', type=str, help='key: id of purchaseInvoiceLine')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('blocked', arg_type=get_three_state_flag(), help='')
        c.argument('category', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')
        c.argument('number', type=str, help='')
        c.argument('sub_category', type=str, help='')

    with self.argument_context('financials financialscompaniespurchaseinvoicespurchaseinvoiceline update-item') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('purchase_invoice_id', type=str, help='key: id of purchaseInvoice')
        c.argument('purchase_invoice_line_id', type=str, help='key: id of purchaseInvoiceLine')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('base_unit_of_measure_id', help='')
        c.argument('blocked', arg_type=get_three_state_flag(), help='')
        c.argument('display_name', type=str, help='')
        c.argument('gtin', type=str, help='')
        c.argument('inventory', type=float, help='')
        c.argument('item_category_code', type=str, help='')
        c.argument('item_category_id', help='')
        c.argument('last_modified_date_time', help='')
        c.argument('number', type=str, help='')
        c.argument('price_includes_tax', arg_type=get_three_state_flag(), help='')
        c.argument('tax_group_code', type=str, help='')
        c.argument('tax_group_id', help='')
        c.argument('type_', options_list=['--type'], type=str, help='')
        c.argument('unit_cost', type=float, help='')
        c.argument('unit_price', type=float, help='')
        c.argument('item_category', action=AddItemCategory, nargs='+', help='itemCategory')
        c.argument('picture', action=AddFinancialsFinancialscompanyCreateItemPicture, nargs='+', help='')

    with self.argument_context('financials financialscompaniespurchaseinvoicespurchaseinvoicelinesitem create-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('purchase_invoice_id', type=str, help='key: id of purchaseInvoice')
        c.argument('purchase_invoice_line_id', type=str, help='key: id of purchaseInvoiceLine')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('content', help='')
        c.argument('content_type', type=str, help='')
        c.argument('height', type=int, help='')
        c.argument('width', type=int, help='')

    with self.argument_context('financials financialscompaniespurchaseinvoicespurchaseinvoicelinesitem delete-item-category') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('purchase_invoice_id', type=str, help='key: id of purchaseInvoice')
        c.argument('purchase_invoice_line_id', type=str, help='key: id of purchaseInvoiceLine')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniespurchaseinvoicespurchaseinvoicelinesitem delete-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('purchase_invoice_id', type=str, help='key: id of purchaseInvoice')
        c.argument('purchase_invoice_line_id', type=str, help='key: id of purchaseInvoiceLine')
        c.argument('picture_id', type=str, help='key: id of picture')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniespurchaseinvoicespurchaseinvoicelinesitem list-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('purchase_invoice_id', type=str, help='key: id of purchaseInvoice')
        c.argument('purchase_invoice_line_id', type=str, help='key: id of purchaseInvoiceLine')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniespurchaseinvoicespurchaseinvoicelinesitem set-picture-content') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('purchase_invoice_id', type=str, help='key: id of purchaseInvoice')
        c.argument('purchase_invoice_line_id', type=str, help='key: id of purchaseInvoiceLine')
        c.argument('picture_id', type=str, help='key: id of picture')
        c.argument('data', help='New media content.')

    with self.argument_context('financials financialscompaniespurchaseinvoicespurchaseinvoicelinesitem show-item-category') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('purchase_invoice_id', type=str, help='key: id of purchaseInvoice')
        c.argument('purchase_invoice_line_id', type=str, help='key: id of purchaseInvoiceLine')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniespurchaseinvoicespurchaseinvoicelinesitem show-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('purchase_invoice_id', type=str, help='key: id of purchaseInvoice')
        c.argument('purchase_invoice_line_id', type=str, help='key: id of purchaseInvoiceLine')
        c.argument('picture_id', type=str, help='key: id of picture')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniespurchaseinvoicespurchaseinvoicelinesitem show-picture-content') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('purchase_invoice_id', type=str, help='key: id of purchaseInvoice')
        c.argument('purchase_invoice_line_id', type=str, help='key: id of purchaseInvoiceLine')
        c.argument('picture_id', type=str, help='key: id of picture')

    with self.argument_context('financials financialscompaniespurchaseinvoicespurchaseinvoicelinesitem update-item-category') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('purchase_invoice_id', type=str, help='key: id of purchaseInvoice')
        c.argument('purchase_invoice_line_id', type=str, help='key: id of purchaseInvoiceLine')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('code', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')

    with self.argument_context('financials financialscompaniespurchaseinvoicespurchaseinvoicelinesitem update-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('purchase_invoice_id', type=str, help='key: id of purchaseInvoice')
        c.argument('purchase_invoice_line_id', type=str, help='key: id of purchaseInvoiceLine')
        c.argument('picture_id', type=str, help='key: id of picture')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('content', help='')
        c.argument('content_type', type=str, help='')
        c.argument('height', type=int, help='')
        c.argument('width', type=int, help='')

    with self.argument_context('financials financialscompaniespurchaseinvoicesvendor create-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('purchase_invoice_id', type=str, help='key: id of purchaseInvoice')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('content', help='')
        c.argument('content_type', type=str, help='')
        c.argument('height', type=int, help='')
        c.argument('width', type=int, help='')

    with self.argument_context('financials financialscompaniespurchaseinvoicesvendor delete-currency') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('purchase_invoice_id', type=str, help='key: id of purchaseInvoice')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniespurchaseinvoicesvendor delete-payment-method') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('purchase_invoice_id', type=str, help='key: id of purchaseInvoice')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniespurchaseinvoicesvendor delete-payment-term') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('purchase_invoice_id', type=str, help='key: id of purchaseInvoice')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniespurchaseinvoicesvendor delete-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('purchase_invoice_id', type=str, help='key: id of purchaseInvoice')
        c.argument('picture_id', type=str, help='key: id of picture')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniespurchaseinvoicesvendor list-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('purchase_invoice_id', type=str, help='key: id of purchaseInvoice')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniespurchaseinvoicesvendor set-picture-content') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('purchase_invoice_id', type=str, help='key: id of purchaseInvoice')
        c.argument('picture_id', type=str, help='key: id of picture')
        c.argument('data', help='New media content.')

    with self.argument_context('financials financialscompaniespurchaseinvoicesvendor show-currency') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('purchase_invoice_id', type=str, help='key: id of purchaseInvoice')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniespurchaseinvoicesvendor show-payment-method') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('purchase_invoice_id', type=str, help='key: id of purchaseInvoice')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniespurchaseinvoicesvendor show-payment-term') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('purchase_invoice_id', type=str, help='key: id of purchaseInvoice')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniespurchaseinvoicesvendor show-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('purchase_invoice_id', type=str, help='key: id of purchaseInvoice')
        c.argument('picture_id', type=str, help='key: id of picture')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniespurchaseinvoicesvendor show-picture-content') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('purchase_invoice_id', type=str, help='key: id of purchaseInvoice')
        c.argument('picture_id', type=str, help='key: id of picture')

    with self.argument_context('financials financialscompaniespurchaseinvoicesvendor update-currency') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('purchase_invoice_id', type=str, help='key: id of purchaseInvoice')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('amount_decimal_places', type=str, help='')
        c.argument('amount_rounding_precision', type=float, help='')
        c.argument('code', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')
        c.argument('symbol', type=str, help='')

    with self.argument_context('financials financialscompaniespurchaseinvoicesvendor update-payment-method') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('purchase_invoice_id', type=str, help='key: id of purchaseInvoice')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('code', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')

    with self.argument_context('financials financialscompaniespurchaseinvoicesvendor update-payment-term') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('purchase_invoice_id', type=str, help='key: id of purchaseInvoice')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('calculate_discount_on_credit_memos', arg_type=get_three_state_flag(), help='')
        c.argument('code', type=str, help='')
        c.argument('discount_date_calculation', type=str, help='')
        c.argument('discount_percent', type=float, help='')
        c.argument('display_name', type=str, help='')
        c.argument('due_date_calculation', type=str, help='')
        c.argument('last_modified_date_time', help='')

    with self.argument_context('financials financialscompaniespurchaseinvoicesvendor update-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('purchase_invoice_id', type=str, help='key: id of purchaseInvoice')
        c.argument('picture_id', type=str, help='key: id of picture')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('content', help='')
        c.argument('content_type', type=str, help='')
        c.argument('height', type=int, help='')
        c.argument('width', type=int, help='')

    with self.argument_context('financials financialscompaniessalescreditmemoline delete-account') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_credit_memo_line_id', type=str, help='key: id of salesCreditMemoLine')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniessalescreditmemoline delete-item') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_credit_memo_line_id', type=str, help='key: id of salesCreditMemoLine')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniessalescreditmemoline show-account') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_credit_memo_line_id', type=str, help='key: id of salesCreditMemoLine')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniessalescreditmemoline show-item') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_credit_memo_line_id', type=str, help='key: id of salesCreditMemoLine')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniessalescreditmemoline update-account') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_credit_memo_line_id', type=str, help='key: id of salesCreditMemoLine')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('blocked', arg_type=get_three_state_flag(), help='')
        c.argument('category', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')
        c.argument('number', type=str, help='')
        c.argument('sub_category', type=str, help='')

    with self.argument_context('financials financialscompaniessalescreditmemoline update-item') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_credit_memo_line_id', type=str, help='key: id of salesCreditMemoLine')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('base_unit_of_measure_id', help='')
        c.argument('blocked', arg_type=get_three_state_flag(), help='')
        c.argument('display_name', type=str, help='')
        c.argument('gtin', type=str, help='')
        c.argument('inventory', type=float, help='')
        c.argument('item_category_code', type=str, help='')
        c.argument('item_category_id', help='')
        c.argument('last_modified_date_time', help='')
        c.argument('number', type=str, help='')
        c.argument('price_includes_tax', arg_type=get_three_state_flag(), help='')
        c.argument('tax_group_code', type=str, help='')
        c.argument('tax_group_id', help='')
        c.argument('type_', options_list=['--type'], type=str, help='')
        c.argument('unit_cost', type=float, help='')
        c.argument('unit_price', type=float, help='')
        c.argument('item_category', action=AddItemCategory, nargs='+', help='itemCategory')
        c.argument('picture', action=AddFinancialsFinancialscompanyCreateItemPicture, nargs='+', help='')

    with self.argument_context('financials financialscompaniessalescreditmemolinesitem create-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_credit_memo_line_id', type=str, help='key: id of salesCreditMemoLine')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('content', help='')
        c.argument('content_type', type=str, help='')
        c.argument('height', type=int, help='')
        c.argument('width', type=int, help='')

    with self.argument_context('financials financialscompaniessalescreditmemolinesitem delete-item-category') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_credit_memo_line_id', type=str, help='key: id of salesCreditMemoLine')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniessalescreditmemolinesitem delete-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_credit_memo_line_id', type=str, help='key: id of salesCreditMemoLine')
        c.argument('picture_id', type=str, help='key: id of picture')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniessalescreditmemolinesitem list-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_credit_memo_line_id', type=str, help='key: id of salesCreditMemoLine')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniessalescreditmemolinesitem set-picture-content') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_credit_memo_line_id', type=str, help='key: id of salesCreditMemoLine')
        c.argument('picture_id', type=str, help='key: id of picture')
        c.argument('data', help='New media content.')

    with self.argument_context('financials financialscompaniessalescreditmemolinesitem show-item-category') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_credit_memo_line_id', type=str, help='key: id of salesCreditMemoLine')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniessalescreditmemolinesitem show-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_credit_memo_line_id', type=str, help='key: id of salesCreditMemoLine')
        c.argument('picture_id', type=str, help='key: id of picture')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniessalescreditmemolinesitem show-picture-content') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_credit_memo_line_id', type=str, help='key: id of salesCreditMemoLine')
        c.argument('picture_id', type=str, help='key: id of picture')

    with self.argument_context('financials financialscompaniessalescreditmemolinesitem update-item-category') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_credit_memo_line_id', type=str, help='key: id of salesCreditMemoLine')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('code', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')

    with self.argument_context('financials financialscompaniessalescreditmemolinesitem update-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_credit_memo_line_id', type=str, help='key: id of salesCreditMemoLine')
        c.argument('picture_id', type=str, help='key: id of picture')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('content', help='')
        c.argument('content_type', type=str, help='')
        c.argument('height', type=int, help='')
        c.argument('width', type=int, help='')

    with self.argument_context('financials financialscompaniessalescreditmemo create-sale-credit-memo-line') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_credit_memo_id', type=str, help='key: id of salesCreditMemo')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('account_id', help='')
        c.argument('amount_excluding_tax', type=float, help='')
        c.argument('amount_including_tax', type=float, help='')
        c.argument('description', type=str, help='')
        c.argument('discount_amount', type=float, help='')
        c.argument('discount_applied_before_tax', arg_type=get_three_state_flag(), help='')
        c.argument('discount_percent', type=float, help='')
        c.argument('document_id', help='')
        c.argument('invoice_discount_allocation', type=float, help='')
        c.argument('item_id', help='')
        c.argument('line_type', type=str, help='')
        c.argument('net_amount', type=float, help='')
        c.argument('net_amount_including_tax', type=float, help='')
        c.argument('net_tax_amount', type=float, help='')
        c.argument('quantity', type=float, help='')
        c.argument('sequence', type=int, help='')
        c.argument('shipment_date', help='')
        c.argument('tax_code', type=str, help='')
        c.argument('tax_percent', type=float, help='')
        c.argument('total_tax_amount', type=float, help='')
        c.argument('unit_of_measure_id', help='')
        c.argument('unit_price', type=float, help='')
        c.argument('account', action=AddAccount, nargs='+', help='account')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Item')
        c.argument('base_unit_of_measure_id', help='', arg_group='Item')
        c.argument('blocked', arg_type=get_three_state_flag(), help='', arg_group='Item')
        c.argument('display_name', type=str, help='', arg_group='Item')
        c.argument('gtin', type=str, help='', arg_group='Item')
        c.argument('inventory', type=float, help='', arg_group='Item')
        c.argument('item_category_code', type=str, help='', arg_group='Item')
        c.argument('item_category_id', help='', arg_group='Item')
        c.argument('last_modified_date_time', help='', arg_group='Item')
        c.argument('number', type=str, help='', arg_group='Item')
        c.argument('price_includes_tax', arg_type=get_three_state_flag(), help='', arg_group='Item')
        c.argument('tax_group_code', type=str, help='', arg_group='Item')
        c.argument('tax_group_id', help='', arg_group='Item')
        c.argument('type_', options_list=['--type'], type=str, help='', arg_group='Item')
        c.argument('unit_cost', type=float, help='', arg_group='Item')
        c.argument('number_unit_price', type=float, help='', arg_group='Item')
        c.argument('item_category', action=AddItemCategory, nargs='+', help='itemCategory', arg_group='Item')
        c.argument('picture', action=AddFinancialsFinancialscompanyCreateItemPicture, nargs='+', help='',
                   arg_group='Item')

    with self.argument_context('financials financialscompaniessalescreditmemo delete-currency') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_credit_memo_id', type=str, help='key: id of salesCreditMemo')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniessalescreditmemo delete-customer') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_credit_memo_id', type=str, help='key: id of salesCreditMemo')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniessalescreditmemo delete-payment-term') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_credit_memo_id', type=str, help='key: id of salesCreditMemo')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniessalescreditmemo delete-sale-credit-memo-line') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_credit_memo_id', type=str, help='key: id of salesCreditMemo')
        c.argument('sales_credit_memo_line_id', type=str, help='key: id of salesCreditMemoLine')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniessalescreditmemo list-sale-credit-memo-line') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_credit_memo_id', type=str, help='key: id of salesCreditMemo')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniessalescreditmemo show-currency') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_credit_memo_id', type=str, help='key: id of salesCreditMemo')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniessalescreditmemo show-customer') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_credit_memo_id', type=str, help='key: id of salesCreditMemo')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniessalescreditmemo show-payment-term') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_credit_memo_id', type=str, help='key: id of salesCreditMemo')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniessalescreditmemo show-sale-credit-memo-line') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_credit_memo_id', type=str, help='key: id of salesCreditMemo')
        c.argument('sales_credit_memo_line_id', type=str, help='key: id of salesCreditMemoLine')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniessalescreditmemo update-currency') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_credit_memo_id', type=str, help='key: id of salesCreditMemo')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('amount_decimal_places', type=str, help='')
        c.argument('amount_rounding_precision', type=float, help='')
        c.argument('code', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')
        c.argument('symbol', type=str, help='')

    with self.argument_context('financials financialscompaniessalescreditmemo update-customer') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_credit_memo_id', type=str, help='key: id of salesCreditMemo')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('address', action=AddAddress, nargs='+', help='postalAddressType')
        c.argument('blocked', type=str, help='')
        c.argument('currency_code', type=str, help='')
        c.argument('currency_id', help='')
        c.argument('display_name', type=str, help='')
        c.argument('email', type=str, help='')
        c.argument('last_modified_date_time', help='')
        c.argument('number', type=str, help='')
        c.argument('payment_method_id', help='')
        c.argument('payment_terms_id', help='')
        c.argument('phone_number', type=str, help='')
        c.argument('shipment_method_id', help='')
        c.argument('tax_area_display_name', type=str, help='')
        c.argument('tax_area_id', help='')
        c.argument('tax_liable', arg_type=get_three_state_flag(), help='')
        c.argument('tax_registration_number', type=str, help='')
        c.argument('type_', options_list=['--type'], type=str, help='')
        c.argument('website', type=str, help='')
        c.argument('currency', action=AddCurrency, nargs='+', help='currency')
        c.argument('payment_method', action=AddPaymentMethod, nargs='+', help='paymentMethod')
        c.argument('payment_term', action=AddPaymentTerm, nargs='+', help='paymentTerm')
        c.argument('picture', action=AddFinancialsFinancialscompanyCreateCustomerPaymentPicture, nargs='+', help='')
        c.argument('shipment_method', action=AddShipmentMethod, nargs='+', help='shipmentMethod')

    with self.argument_context('financials financialscompaniessalescreditmemo update-payment-term') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_credit_memo_id', type=str, help='key: id of salesCreditMemo')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('calculate_discount_on_credit_memos', arg_type=get_three_state_flag(), help='')
        c.argument('code', type=str, help='')
        c.argument('discount_date_calculation', type=str, help='')
        c.argument('discount_percent', type=float, help='')
        c.argument('display_name', type=str, help='')
        c.argument('due_date_calculation', type=str, help='')
        c.argument('last_modified_date_time', help='')

    with self.argument_context('financials financialscompaniessalescreditmemo update-sale-credit-memo-line') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_credit_memo_id', type=str, help='key: id of salesCreditMemo')
        c.argument('sales_credit_memo_line_id', type=str, help='key: id of salesCreditMemoLine')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('account_id', help='')
        c.argument('amount_excluding_tax', type=float, help='')
        c.argument('amount_including_tax', type=float, help='')
        c.argument('description', type=str, help='')
        c.argument('discount_amount', type=float, help='')
        c.argument('discount_applied_before_tax', arg_type=get_three_state_flag(), help='')
        c.argument('discount_percent', type=float, help='')
        c.argument('document_id', help='')
        c.argument('invoice_discount_allocation', type=float, help='')
        c.argument('item_id', help='')
        c.argument('line_type', type=str, help='')
        c.argument('net_amount', type=float, help='')
        c.argument('net_amount_including_tax', type=float, help='')
        c.argument('net_tax_amount', type=float, help='')
        c.argument('quantity', type=float, help='')
        c.argument('sequence', type=int, help='')
        c.argument('shipment_date', help='')
        c.argument('tax_code', type=str, help='')
        c.argument('tax_percent', type=float, help='')
        c.argument('total_tax_amount', type=float, help='')
        c.argument('unit_of_measure_id', help='')
        c.argument('unit_price', type=float, help='')
        c.argument('account', action=AddAccount, nargs='+', help='account')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Item')
        c.argument('base_unit_of_measure_id', help='', arg_group='Item')
        c.argument('blocked', arg_type=get_three_state_flag(), help='', arg_group='Item')
        c.argument('display_name', type=str, help='', arg_group='Item')
        c.argument('gtin', type=str, help='', arg_group='Item')
        c.argument('inventory', type=float, help='', arg_group='Item')
        c.argument('item_category_code', type=str, help='', arg_group='Item')
        c.argument('item_category_id', help='', arg_group='Item')
        c.argument('last_modified_date_time', help='', arg_group='Item')
        c.argument('number', type=str, help='', arg_group='Item')
        c.argument('price_includes_tax', arg_type=get_three_state_flag(), help='', arg_group='Item')
        c.argument('tax_group_code', type=str, help='', arg_group='Item')
        c.argument('tax_group_id', help='', arg_group='Item')
        c.argument('type_', options_list=['--type'], type=str, help='', arg_group='Item')
        c.argument('unit_cost', type=float, help='', arg_group='Item')
        c.argument('number_unit_price', type=float, help='', arg_group='Item')
        c.argument('item_category', action=AddItemCategory, nargs='+', help='itemCategory', arg_group='Item')
        c.argument('picture', action=AddFinancialsFinancialscompanyCreateItemPicture, nargs='+', help='',
                   arg_group='Item')

    with self.argument_context('financials financialscompaniessalescreditmemoscustomer create-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_credit_memo_id', type=str, help='key: id of salesCreditMemo')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('content', help='')
        c.argument('content_type', type=str, help='')
        c.argument('height', type=int, help='')
        c.argument('width', type=int, help='')

    with self.argument_context('financials financialscompaniessalescreditmemoscustomer delete-currency') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_credit_memo_id', type=str, help='key: id of salesCreditMemo')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniessalescreditmemoscustomer delete-payment-method') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_credit_memo_id', type=str, help='key: id of salesCreditMemo')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniessalescreditmemoscustomer delete-payment-term') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_credit_memo_id', type=str, help='key: id of salesCreditMemo')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniessalescreditmemoscustomer delete-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_credit_memo_id', type=str, help='key: id of salesCreditMemo')
        c.argument('picture_id', type=str, help='key: id of picture')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniessalescreditmemoscustomer delete-shipment-method') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_credit_memo_id', type=str, help='key: id of salesCreditMemo')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniessalescreditmemoscustomer list-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_credit_memo_id', type=str, help='key: id of salesCreditMemo')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniessalescreditmemoscustomer set-picture-content') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_credit_memo_id', type=str, help='key: id of salesCreditMemo')
        c.argument('picture_id', type=str, help='key: id of picture')
        c.argument('data', help='New media content.')

    with self.argument_context('financials financialscompaniessalescreditmemoscustomer show-currency') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_credit_memo_id', type=str, help='key: id of salesCreditMemo')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniessalescreditmemoscustomer show-payment-method') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_credit_memo_id', type=str, help='key: id of salesCreditMemo')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniessalescreditmemoscustomer show-payment-term') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_credit_memo_id', type=str, help='key: id of salesCreditMemo')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniessalescreditmemoscustomer show-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_credit_memo_id', type=str, help='key: id of salesCreditMemo')
        c.argument('picture_id', type=str, help='key: id of picture')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniessalescreditmemoscustomer show-picture-content') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_credit_memo_id', type=str, help='key: id of salesCreditMemo')
        c.argument('picture_id', type=str, help='key: id of picture')

    with self.argument_context('financials financialscompaniessalescreditmemoscustomer show-shipment-method') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_credit_memo_id', type=str, help='key: id of salesCreditMemo')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniessalescreditmemoscustomer update-currency') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_credit_memo_id', type=str, help='key: id of salesCreditMemo')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('amount_decimal_places', type=str, help='')
        c.argument('amount_rounding_precision', type=float, help='')
        c.argument('code', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')
        c.argument('symbol', type=str, help='')

    with self.argument_context('financials financialscompaniessalescreditmemoscustomer update-payment-method') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_credit_memo_id', type=str, help='key: id of salesCreditMemo')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('code', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')

    with self.argument_context('financials financialscompaniessalescreditmemoscustomer update-payment-term') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_credit_memo_id', type=str, help='key: id of salesCreditMemo')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('calculate_discount_on_credit_memos', arg_type=get_three_state_flag(), help='')
        c.argument('code', type=str, help='')
        c.argument('discount_date_calculation', type=str, help='')
        c.argument('discount_percent', type=float, help='')
        c.argument('display_name', type=str, help='')
        c.argument('due_date_calculation', type=str, help='')
        c.argument('last_modified_date_time', help='')

    with self.argument_context('financials financialscompaniessalescreditmemoscustomer update-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_credit_memo_id', type=str, help='key: id of salesCreditMemo')
        c.argument('picture_id', type=str, help='key: id of picture')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('content', help='')
        c.argument('content_type', type=str, help='')
        c.argument('height', type=int, help='')
        c.argument('width', type=int, help='')

    with self.argument_context('financials financialscompaniessalescreditmemoscustomer update-shipment-method') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_credit_memo_id', type=str, help='key: id of salesCreditMemo')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('code', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')

    with self.argument_context('financials financialscompaniessalescreditmemossalescreditmemoline delete-account') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_credit_memo_id', type=str, help='key: id of salesCreditMemo')
        c.argument('sales_credit_memo_line_id', type=str, help='key: id of salesCreditMemoLine')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniessalescreditmemossalescreditmemoline delete-item') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_credit_memo_id', type=str, help='key: id of salesCreditMemo')
        c.argument('sales_credit_memo_line_id', type=str, help='key: id of salesCreditMemoLine')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniessalescreditmemossalescreditmemoline show-account') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_credit_memo_id', type=str, help='key: id of salesCreditMemo')
        c.argument('sales_credit_memo_line_id', type=str, help='key: id of salesCreditMemoLine')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniessalescreditmemossalescreditmemoline show-item') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_credit_memo_id', type=str, help='key: id of salesCreditMemo')
        c.argument('sales_credit_memo_line_id', type=str, help='key: id of salesCreditMemoLine')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniessalescreditmemossalescreditmemoline update-account') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_credit_memo_id', type=str, help='key: id of salesCreditMemo')
        c.argument('sales_credit_memo_line_id', type=str, help='key: id of salesCreditMemoLine')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('blocked', arg_type=get_three_state_flag(), help='')
        c.argument('category', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')
        c.argument('number', type=str, help='')
        c.argument('sub_category', type=str, help='')

    with self.argument_context('financials financialscompaniessalescreditmemossalescreditmemoline update-item') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_credit_memo_id', type=str, help='key: id of salesCreditMemo')
        c.argument('sales_credit_memo_line_id', type=str, help='key: id of salesCreditMemoLine')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('base_unit_of_measure_id', help='')
        c.argument('blocked', arg_type=get_three_state_flag(), help='')
        c.argument('display_name', type=str, help='')
        c.argument('gtin', type=str, help='')
        c.argument('inventory', type=float, help='')
        c.argument('item_category_code', type=str, help='')
        c.argument('item_category_id', help='')
        c.argument('last_modified_date_time', help='')
        c.argument('number', type=str, help='')
        c.argument('price_includes_tax', arg_type=get_three_state_flag(), help='')
        c.argument('tax_group_code', type=str, help='')
        c.argument('tax_group_id', help='')
        c.argument('type_', options_list=['--type'], type=str, help='')
        c.argument('unit_cost', type=float, help='')
        c.argument('unit_price', type=float, help='')
        c.argument('item_category', action=AddItemCategory, nargs='+', help='itemCategory')
        c.argument('picture', action=AddFinancialsFinancialscompanyCreateItemPicture, nargs='+', help='')

    with self.argument_context('financials financialscompaniessalescreditmemossalescreditmemolinesitem create-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_credit_memo_id', type=str, help='key: id of salesCreditMemo')
        c.argument('sales_credit_memo_line_id', type=str, help='key: id of salesCreditMemoLine')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('content', help='')
        c.argument('content_type', type=str, help='')
        c.argument('height', type=int, help='')
        c.argument('width', type=int, help='')

    with self.argument_context('financials financialscompaniessalescreditmemossalescreditmemolinesitem delete-item-category') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_credit_memo_id', type=str, help='key: id of salesCreditMemo')
        c.argument('sales_credit_memo_line_id', type=str, help='key: id of salesCreditMemoLine')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniessalescreditmemossalescreditmemolinesitem delete-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_credit_memo_id', type=str, help='key: id of salesCreditMemo')
        c.argument('sales_credit_memo_line_id', type=str, help='key: id of salesCreditMemoLine')
        c.argument('picture_id', type=str, help='key: id of picture')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniessalescreditmemossalescreditmemolinesitem list-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_credit_memo_id', type=str, help='key: id of salesCreditMemo')
        c.argument('sales_credit_memo_line_id', type=str, help='key: id of salesCreditMemoLine')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniessalescreditmemossalescreditmemolinesitem set-picture-content') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_credit_memo_id', type=str, help='key: id of salesCreditMemo')
        c.argument('sales_credit_memo_line_id', type=str, help='key: id of salesCreditMemoLine')
        c.argument('picture_id', type=str, help='key: id of picture')
        c.argument('data', help='New media content.')

    with self.argument_context('financials financialscompaniessalescreditmemossalescreditmemolinesitem show-item-category') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_credit_memo_id', type=str, help='key: id of salesCreditMemo')
        c.argument('sales_credit_memo_line_id', type=str, help='key: id of salesCreditMemoLine')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniessalescreditmemossalescreditmemolinesitem show-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_credit_memo_id', type=str, help='key: id of salesCreditMemo')
        c.argument('sales_credit_memo_line_id', type=str, help='key: id of salesCreditMemoLine')
        c.argument('picture_id', type=str, help='key: id of picture')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniessalescreditmemossalescreditmemolinesitem show-picture-content') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_credit_memo_id', type=str, help='key: id of salesCreditMemo')
        c.argument('sales_credit_memo_line_id', type=str, help='key: id of salesCreditMemoLine')
        c.argument('picture_id', type=str, help='key: id of picture')

    with self.argument_context('financials financialscompaniessalescreditmemossalescreditmemolinesitem update-item-category') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_credit_memo_id', type=str, help='key: id of salesCreditMemo')
        c.argument('sales_credit_memo_line_id', type=str, help='key: id of salesCreditMemoLine')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('code', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')

    with self.argument_context('financials financialscompaniessalescreditmemossalescreditmemolinesitem update-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_credit_memo_id', type=str, help='key: id of salesCreditMemo')
        c.argument('sales_credit_memo_line_id', type=str, help='key: id of salesCreditMemoLine')
        c.argument('picture_id', type=str, help='key: id of picture')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('content', help='')
        c.argument('content_type', type=str, help='')
        c.argument('height', type=int, help='')
        c.argument('width', type=int, help='')

    with self.argument_context('financials financialscompaniessalesinvoiceline delete-account') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_invoice_line_id', type=str, help='key: id of salesInvoiceLine')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniessalesinvoiceline delete-item') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_invoice_line_id', type=str, help='key: id of salesInvoiceLine')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniessalesinvoiceline show-account') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_invoice_line_id', type=str, help='key: id of salesInvoiceLine')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniessalesinvoiceline show-item') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_invoice_line_id', type=str, help='key: id of salesInvoiceLine')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniessalesinvoiceline update-account') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_invoice_line_id', type=str, help='key: id of salesInvoiceLine')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('blocked', arg_type=get_three_state_flag(), help='')
        c.argument('category', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')
        c.argument('number', type=str, help='')
        c.argument('sub_category', type=str, help='')

    with self.argument_context('financials financialscompaniessalesinvoiceline update-item') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_invoice_line_id', type=str, help='key: id of salesInvoiceLine')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('base_unit_of_measure_id', help='')
        c.argument('blocked', arg_type=get_three_state_flag(), help='')
        c.argument('display_name', type=str, help='')
        c.argument('gtin', type=str, help='')
        c.argument('inventory', type=float, help='')
        c.argument('item_category_code', type=str, help='')
        c.argument('item_category_id', help='')
        c.argument('last_modified_date_time', help='')
        c.argument('number', type=str, help='')
        c.argument('price_includes_tax', arg_type=get_three_state_flag(), help='')
        c.argument('tax_group_code', type=str, help='')
        c.argument('tax_group_id', help='')
        c.argument('type_', options_list=['--type'], type=str, help='')
        c.argument('unit_cost', type=float, help='')
        c.argument('unit_price', type=float, help='')
        c.argument('item_category', action=AddItemCategory, nargs='+', help='itemCategory')
        c.argument('picture', action=AddFinancialsFinancialscompanyCreateItemPicture, nargs='+', help='')

    with self.argument_context('financials financialscompaniessalesinvoicelinesitem create-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_invoice_line_id', type=str, help='key: id of salesInvoiceLine')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('content', help='')
        c.argument('content_type', type=str, help='')
        c.argument('height', type=int, help='')
        c.argument('width', type=int, help='')

    with self.argument_context('financials financialscompaniessalesinvoicelinesitem delete-item-category') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_invoice_line_id', type=str, help='key: id of salesInvoiceLine')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniessalesinvoicelinesitem delete-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_invoice_line_id', type=str, help='key: id of salesInvoiceLine')
        c.argument('picture_id', type=str, help='key: id of picture')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniessalesinvoicelinesitem list-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_invoice_line_id', type=str, help='key: id of salesInvoiceLine')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniessalesinvoicelinesitem set-picture-content') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_invoice_line_id', type=str, help='key: id of salesInvoiceLine')
        c.argument('picture_id', type=str, help='key: id of picture')
        c.argument('data', help='New media content.')

    with self.argument_context('financials financialscompaniessalesinvoicelinesitem show-item-category') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_invoice_line_id', type=str, help='key: id of salesInvoiceLine')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniessalesinvoicelinesitem show-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_invoice_line_id', type=str, help='key: id of salesInvoiceLine')
        c.argument('picture_id', type=str, help='key: id of picture')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniessalesinvoicelinesitem show-picture-content') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_invoice_line_id', type=str, help='key: id of salesInvoiceLine')
        c.argument('picture_id', type=str, help='key: id of picture')

    with self.argument_context('financials financialscompaniessalesinvoicelinesitem update-item-category') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_invoice_line_id', type=str, help='key: id of salesInvoiceLine')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('code', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')

    with self.argument_context('financials financialscompaniessalesinvoicelinesitem update-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_invoice_line_id', type=str, help='key: id of salesInvoiceLine')
        c.argument('picture_id', type=str, help='key: id of picture')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('content', help='')
        c.argument('content_type', type=str, help='')
        c.argument('height', type=int, help='')
        c.argument('width', type=int, help='')

    with self.argument_context('financials financialscompaniessalesinvoice cancel') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_invoice_id', type=str, help='key: id of salesInvoice')

    with self.argument_context('financials financialscompaniessalesinvoice cancel-and-send') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_invoice_id', type=str, help='key: id of salesInvoice')

    with self.argument_context('financials financialscompaniessalesinvoice create-sale-invoice-line') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_invoice_id', type=str, help='key: id of salesInvoice')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('account_id', help='')
        c.argument('amount_excluding_tax', type=float, help='')
        c.argument('amount_including_tax', type=float, help='')
        c.argument('description', type=str, help='')
        c.argument('discount_amount', type=float, help='')
        c.argument('discount_applied_before_tax', arg_type=get_three_state_flag(), help='')
        c.argument('discount_percent', type=float, help='')
        c.argument('document_id', help='')
        c.argument('invoice_discount_allocation', type=float, help='')
        c.argument('item_id', help='')
        c.argument('line_type', type=str, help='')
        c.argument('net_amount', type=float, help='')
        c.argument('net_amount_including_tax', type=float, help='')
        c.argument('net_tax_amount', type=float, help='')
        c.argument('quantity', type=float, help='')
        c.argument('sequence', type=int, help='')
        c.argument('shipment_date', help='')
        c.argument('tax_code', type=str, help='')
        c.argument('tax_percent', type=float, help='')
        c.argument('total_tax_amount', type=float, help='')
        c.argument('unit_of_measure_id', help='')
        c.argument('unit_price', type=float, help='')
        c.argument('account', action=AddAccount, nargs='+', help='account')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Item')
        c.argument('base_unit_of_measure_id', help='', arg_group='Item')
        c.argument('blocked', arg_type=get_three_state_flag(), help='', arg_group='Item')
        c.argument('display_name', type=str, help='', arg_group='Item')
        c.argument('gtin', type=str, help='', arg_group='Item')
        c.argument('inventory', type=float, help='', arg_group='Item')
        c.argument('item_category_code', type=str, help='', arg_group='Item')
        c.argument('item_category_id', help='', arg_group='Item')
        c.argument('last_modified_date_time', help='', arg_group='Item')
        c.argument('number', type=str, help='', arg_group='Item')
        c.argument('price_includes_tax', arg_type=get_three_state_flag(), help='', arg_group='Item')
        c.argument('tax_group_code', type=str, help='', arg_group='Item')
        c.argument('tax_group_id', help='', arg_group='Item')
        c.argument('type_', options_list=['--type'], type=str, help='', arg_group='Item')
        c.argument('unit_cost', type=float, help='', arg_group='Item')
        c.argument('number_unit_price', type=float, help='', arg_group='Item')
        c.argument('item_category', action=AddItemCategory, nargs='+', help='itemCategory', arg_group='Item')
        c.argument('picture', action=AddFinancialsFinancialscompanyCreateItemPicture, nargs='+', help='',
                   arg_group='Item')

    with self.argument_context('financials financialscompaniessalesinvoice delete-currency') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_invoice_id', type=str, help='key: id of salesInvoice')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniessalesinvoice delete-customer') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_invoice_id', type=str, help='key: id of salesInvoice')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniessalesinvoice delete-payment-term') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_invoice_id', type=str, help='key: id of salesInvoice')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniessalesinvoice delete-sale-invoice-line') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_invoice_id', type=str, help='key: id of salesInvoice')
        c.argument('sales_invoice_line_id', type=str, help='key: id of salesInvoiceLine')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniessalesinvoice delete-shipment-method') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_invoice_id', type=str, help='key: id of salesInvoice')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniessalesinvoice list-sale-invoice-line') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_invoice_id', type=str, help='key: id of salesInvoice')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniessalesinvoice post') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_invoice_id', type=str, help='key: id of salesInvoice')

    with self.argument_context('financials financialscompaniessalesinvoice post-and-send') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_invoice_id', type=str, help='key: id of salesInvoice')

    with self.argument_context('financials financialscompaniessalesinvoice send') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_invoice_id', type=str, help='key: id of salesInvoice')

    with self.argument_context('financials financialscompaniessalesinvoice show-currency') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_invoice_id', type=str, help='key: id of salesInvoice')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniessalesinvoice show-customer') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_invoice_id', type=str, help='key: id of salesInvoice')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniessalesinvoice show-payment-term') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_invoice_id', type=str, help='key: id of salesInvoice')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniessalesinvoice show-sale-invoice-line') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_invoice_id', type=str, help='key: id of salesInvoice')
        c.argument('sales_invoice_line_id', type=str, help='key: id of salesInvoiceLine')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniessalesinvoice show-shipment-method') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_invoice_id', type=str, help='key: id of salesInvoice')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniessalesinvoice update-currency') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_invoice_id', type=str, help='key: id of salesInvoice')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('amount_decimal_places', type=str, help='')
        c.argument('amount_rounding_precision', type=float, help='')
        c.argument('code', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')
        c.argument('symbol', type=str, help='')

    with self.argument_context('financials financialscompaniessalesinvoice update-customer') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_invoice_id', type=str, help='key: id of salesInvoice')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('address', action=AddAddress, nargs='+', help='postalAddressType')
        c.argument('blocked', type=str, help='')
        c.argument('currency_code', type=str, help='')
        c.argument('currency_id', help='')
        c.argument('display_name', type=str, help='')
        c.argument('email', type=str, help='')
        c.argument('last_modified_date_time', help='')
        c.argument('number', type=str, help='')
        c.argument('payment_method_id', help='')
        c.argument('payment_terms_id', help='')
        c.argument('phone_number', type=str, help='')
        c.argument('shipment_method_id', help='')
        c.argument('tax_area_display_name', type=str, help='')
        c.argument('tax_area_id', help='')
        c.argument('tax_liable', arg_type=get_three_state_flag(), help='')
        c.argument('tax_registration_number', type=str, help='')
        c.argument('type_', options_list=['--type'], type=str, help='')
        c.argument('website', type=str, help='')
        c.argument('currency', action=AddCurrency, nargs='+', help='currency')
        c.argument('payment_method', action=AddPaymentMethod, nargs='+', help='paymentMethod')
        c.argument('payment_term', action=AddPaymentTerm, nargs='+', help='paymentTerm')
        c.argument('picture', action=AddFinancialsFinancialscompanyCreateCustomerPaymentPicture, nargs='+', help='')
        c.argument('shipment_method', action=AddShipmentMethod, nargs='+', help='shipmentMethod')

    with self.argument_context('financials financialscompaniessalesinvoice update-payment-term') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_invoice_id', type=str, help='key: id of salesInvoice')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('calculate_discount_on_credit_memos', arg_type=get_three_state_flag(), help='')
        c.argument('code', type=str, help='')
        c.argument('discount_date_calculation', type=str, help='')
        c.argument('discount_percent', type=float, help='')
        c.argument('display_name', type=str, help='')
        c.argument('due_date_calculation', type=str, help='')
        c.argument('last_modified_date_time', help='')

    with self.argument_context('financials financialscompaniessalesinvoice update-sale-invoice-line') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_invoice_id', type=str, help='key: id of salesInvoice')
        c.argument('sales_invoice_line_id', type=str, help='key: id of salesInvoiceLine')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('account_id', help='')
        c.argument('amount_excluding_tax', type=float, help='')
        c.argument('amount_including_tax', type=float, help='')
        c.argument('description', type=str, help='')
        c.argument('discount_amount', type=float, help='')
        c.argument('discount_applied_before_tax', arg_type=get_three_state_flag(), help='')
        c.argument('discount_percent', type=float, help='')
        c.argument('document_id', help='')
        c.argument('invoice_discount_allocation', type=float, help='')
        c.argument('item_id', help='')
        c.argument('line_type', type=str, help='')
        c.argument('net_amount', type=float, help='')
        c.argument('net_amount_including_tax', type=float, help='')
        c.argument('net_tax_amount', type=float, help='')
        c.argument('quantity', type=float, help='')
        c.argument('sequence', type=int, help='')
        c.argument('shipment_date', help='')
        c.argument('tax_code', type=str, help='')
        c.argument('tax_percent', type=float, help='')
        c.argument('total_tax_amount', type=float, help='')
        c.argument('unit_of_measure_id', help='')
        c.argument('unit_price', type=float, help='')
        c.argument('account', action=AddAccount, nargs='+', help='account')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Item')
        c.argument('base_unit_of_measure_id', help='', arg_group='Item')
        c.argument('blocked', arg_type=get_three_state_flag(), help='', arg_group='Item')
        c.argument('display_name', type=str, help='', arg_group='Item')
        c.argument('gtin', type=str, help='', arg_group='Item')
        c.argument('inventory', type=float, help='', arg_group='Item')
        c.argument('item_category_code', type=str, help='', arg_group='Item')
        c.argument('item_category_id', help='', arg_group='Item')
        c.argument('last_modified_date_time', help='', arg_group='Item')
        c.argument('number', type=str, help='', arg_group='Item')
        c.argument('price_includes_tax', arg_type=get_three_state_flag(), help='', arg_group='Item')
        c.argument('tax_group_code', type=str, help='', arg_group='Item')
        c.argument('tax_group_id', help='', arg_group='Item')
        c.argument('type_', options_list=['--type'], type=str, help='', arg_group='Item')
        c.argument('unit_cost', type=float, help='', arg_group='Item')
        c.argument('number_unit_price', type=float, help='', arg_group='Item')
        c.argument('item_category', action=AddItemCategory, nargs='+', help='itemCategory', arg_group='Item')
        c.argument('picture', action=AddFinancialsFinancialscompanyCreateItemPicture, nargs='+', help='',
                   arg_group='Item')

    with self.argument_context('financials financialscompaniessalesinvoice update-shipment-method') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_invoice_id', type=str, help='key: id of salesInvoice')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('code', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')

    with self.argument_context('financials financialscompaniessalesinvoicescustomer create-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_invoice_id', type=str, help='key: id of salesInvoice')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('content', help='')
        c.argument('content_type', type=str, help='')
        c.argument('height', type=int, help='')
        c.argument('width', type=int, help='')

    with self.argument_context('financials financialscompaniessalesinvoicescustomer delete-currency') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_invoice_id', type=str, help='key: id of salesInvoice')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniessalesinvoicescustomer delete-payment-method') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_invoice_id', type=str, help='key: id of salesInvoice')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniessalesinvoicescustomer delete-payment-term') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_invoice_id', type=str, help='key: id of salesInvoice')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniessalesinvoicescustomer delete-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_invoice_id', type=str, help='key: id of salesInvoice')
        c.argument('picture_id', type=str, help='key: id of picture')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniessalesinvoicescustomer delete-shipment-method') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_invoice_id', type=str, help='key: id of salesInvoice')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniessalesinvoicescustomer list-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_invoice_id', type=str, help='key: id of salesInvoice')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniessalesinvoicescustomer set-picture-content') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_invoice_id', type=str, help='key: id of salesInvoice')
        c.argument('picture_id', type=str, help='key: id of picture')
        c.argument('data', help='New media content.')

    with self.argument_context('financials financialscompaniessalesinvoicescustomer show-currency') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_invoice_id', type=str, help='key: id of salesInvoice')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniessalesinvoicescustomer show-payment-method') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_invoice_id', type=str, help='key: id of salesInvoice')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniessalesinvoicescustomer show-payment-term') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_invoice_id', type=str, help='key: id of salesInvoice')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniessalesinvoicescustomer show-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_invoice_id', type=str, help='key: id of salesInvoice')
        c.argument('picture_id', type=str, help='key: id of picture')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniessalesinvoicescustomer show-picture-content') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_invoice_id', type=str, help='key: id of salesInvoice')
        c.argument('picture_id', type=str, help='key: id of picture')

    with self.argument_context('financials financialscompaniessalesinvoicescustomer show-shipment-method') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_invoice_id', type=str, help='key: id of salesInvoice')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniessalesinvoicescustomer update-currency') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_invoice_id', type=str, help='key: id of salesInvoice')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('amount_decimal_places', type=str, help='')
        c.argument('amount_rounding_precision', type=float, help='')
        c.argument('code', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')
        c.argument('symbol', type=str, help='')

    with self.argument_context('financials financialscompaniessalesinvoicescustomer update-payment-method') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_invoice_id', type=str, help='key: id of salesInvoice')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('code', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')

    with self.argument_context('financials financialscompaniessalesinvoicescustomer update-payment-term') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_invoice_id', type=str, help='key: id of salesInvoice')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('calculate_discount_on_credit_memos', arg_type=get_three_state_flag(), help='')
        c.argument('code', type=str, help='')
        c.argument('discount_date_calculation', type=str, help='')
        c.argument('discount_percent', type=float, help='')
        c.argument('display_name', type=str, help='')
        c.argument('due_date_calculation', type=str, help='')
        c.argument('last_modified_date_time', help='')

    with self.argument_context('financials financialscompaniessalesinvoicescustomer update-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_invoice_id', type=str, help='key: id of salesInvoice')
        c.argument('picture_id', type=str, help='key: id of picture')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('content', help='')
        c.argument('content_type', type=str, help='')
        c.argument('height', type=int, help='')
        c.argument('width', type=int, help='')

    with self.argument_context('financials financialscompaniessalesinvoicescustomer update-shipment-method') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_invoice_id', type=str, help='key: id of salesInvoice')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('code', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')

    with self.argument_context('financials financialscompaniessalesinvoicessalesinvoiceline delete-account') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_invoice_id', type=str, help='key: id of salesInvoice')
        c.argument('sales_invoice_line_id', type=str, help='key: id of salesInvoiceLine')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniessalesinvoicessalesinvoiceline delete-item') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_invoice_id', type=str, help='key: id of salesInvoice')
        c.argument('sales_invoice_line_id', type=str, help='key: id of salesInvoiceLine')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniessalesinvoicessalesinvoiceline show-account') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_invoice_id', type=str, help='key: id of salesInvoice')
        c.argument('sales_invoice_line_id', type=str, help='key: id of salesInvoiceLine')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniessalesinvoicessalesinvoiceline show-item') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_invoice_id', type=str, help='key: id of salesInvoice')
        c.argument('sales_invoice_line_id', type=str, help='key: id of salesInvoiceLine')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniessalesinvoicessalesinvoiceline update-account') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_invoice_id', type=str, help='key: id of salesInvoice')
        c.argument('sales_invoice_line_id', type=str, help='key: id of salesInvoiceLine')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('blocked', arg_type=get_three_state_flag(), help='')
        c.argument('category', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')
        c.argument('number', type=str, help='')
        c.argument('sub_category', type=str, help='')

    with self.argument_context('financials financialscompaniessalesinvoicessalesinvoiceline update-item') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_invoice_id', type=str, help='key: id of salesInvoice')
        c.argument('sales_invoice_line_id', type=str, help='key: id of salesInvoiceLine')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('base_unit_of_measure_id', help='')
        c.argument('blocked', arg_type=get_three_state_flag(), help='')
        c.argument('display_name', type=str, help='')
        c.argument('gtin', type=str, help='')
        c.argument('inventory', type=float, help='')
        c.argument('item_category_code', type=str, help='')
        c.argument('item_category_id', help='')
        c.argument('last_modified_date_time', help='')
        c.argument('number', type=str, help='')
        c.argument('price_includes_tax', arg_type=get_three_state_flag(), help='')
        c.argument('tax_group_code', type=str, help='')
        c.argument('tax_group_id', help='')
        c.argument('type_', options_list=['--type'], type=str, help='')
        c.argument('unit_cost', type=float, help='')
        c.argument('unit_price', type=float, help='')
        c.argument('item_category', action=AddItemCategory, nargs='+', help='itemCategory')
        c.argument('picture', action=AddFinancialsFinancialscompanyCreateItemPicture, nargs='+', help='')

    with self.argument_context('financials financialscompaniessalesinvoicessalesinvoicelinesitem create-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_invoice_id', type=str, help='key: id of salesInvoice')
        c.argument('sales_invoice_line_id', type=str, help='key: id of salesInvoiceLine')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('content', help='')
        c.argument('content_type', type=str, help='')
        c.argument('height', type=int, help='')
        c.argument('width', type=int, help='')

    with self.argument_context('financials financialscompaniessalesinvoicessalesinvoicelinesitem delete-item-category') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_invoice_id', type=str, help='key: id of salesInvoice')
        c.argument('sales_invoice_line_id', type=str, help='key: id of salesInvoiceLine')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniessalesinvoicessalesinvoicelinesitem delete-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_invoice_id', type=str, help='key: id of salesInvoice')
        c.argument('sales_invoice_line_id', type=str, help='key: id of salesInvoiceLine')
        c.argument('picture_id', type=str, help='key: id of picture')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniessalesinvoicessalesinvoicelinesitem list-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_invoice_id', type=str, help='key: id of salesInvoice')
        c.argument('sales_invoice_line_id', type=str, help='key: id of salesInvoiceLine')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniessalesinvoicessalesinvoicelinesitem set-picture-content') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_invoice_id', type=str, help='key: id of salesInvoice')
        c.argument('sales_invoice_line_id', type=str, help='key: id of salesInvoiceLine')
        c.argument('picture_id', type=str, help='key: id of picture')
        c.argument('data', help='New media content.')

    with self.argument_context('financials financialscompaniessalesinvoicessalesinvoicelinesitem show-item-category') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_invoice_id', type=str, help='key: id of salesInvoice')
        c.argument('sales_invoice_line_id', type=str, help='key: id of salesInvoiceLine')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniessalesinvoicessalesinvoicelinesitem show-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_invoice_id', type=str, help='key: id of salesInvoice')
        c.argument('sales_invoice_line_id', type=str, help='key: id of salesInvoiceLine')
        c.argument('picture_id', type=str, help='key: id of picture')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniessalesinvoicessalesinvoicelinesitem show-picture-content') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_invoice_id', type=str, help='key: id of salesInvoice')
        c.argument('sales_invoice_line_id', type=str, help='key: id of salesInvoiceLine')
        c.argument('picture_id', type=str, help='key: id of picture')

    with self.argument_context('financials financialscompaniessalesinvoicessalesinvoicelinesitem update-item-category') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_invoice_id', type=str, help='key: id of salesInvoice')
        c.argument('sales_invoice_line_id', type=str, help='key: id of salesInvoiceLine')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('code', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')

    with self.argument_context('financials financialscompaniessalesinvoicessalesinvoicelinesitem update-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_invoice_id', type=str, help='key: id of salesInvoice')
        c.argument('sales_invoice_line_id', type=str, help='key: id of salesInvoiceLine')
        c.argument('picture_id', type=str, help='key: id of picture')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('content', help='')
        c.argument('content_type', type=str, help='')
        c.argument('height', type=int, help='')
        c.argument('width', type=int, help='')

    with self.argument_context('financials financialscompaniessalesorderline delete-account') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_order_line_id', type=str, help='key: id of salesOrderLine')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniessalesorderline delete-item') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_order_line_id', type=str, help='key: id of salesOrderLine')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniessalesorderline show-account') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_order_line_id', type=str, help='key: id of salesOrderLine')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniessalesorderline show-item') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_order_line_id', type=str, help='key: id of salesOrderLine')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniessalesorderline update-account') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_order_line_id', type=str, help='key: id of salesOrderLine')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('blocked', arg_type=get_three_state_flag(), help='')
        c.argument('category', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')
        c.argument('number', type=str, help='')
        c.argument('sub_category', type=str, help='')

    with self.argument_context('financials financialscompaniessalesorderline update-item') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_order_line_id', type=str, help='key: id of salesOrderLine')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('base_unit_of_measure_id', help='')
        c.argument('blocked', arg_type=get_three_state_flag(), help='')
        c.argument('display_name', type=str, help='')
        c.argument('gtin', type=str, help='')
        c.argument('inventory', type=float, help='')
        c.argument('item_category_code', type=str, help='')
        c.argument('item_category_id', help='')
        c.argument('last_modified_date_time', help='')
        c.argument('number', type=str, help='')
        c.argument('price_includes_tax', arg_type=get_three_state_flag(), help='')
        c.argument('tax_group_code', type=str, help='')
        c.argument('tax_group_id', help='')
        c.argument('type_', options_list=['--type'], type=str, help='')
        c.argument('unit_cost', type=float, help='')
        c.argument('unit_price', type=float, help='')
        c.argument('item_category', action=AddItemCategory, nargs='+', help='itemCategory')
        c.argument('picture', action=AddFinancialsFinancialscompanyCreateItemPicture, nargs='+', help='')

    with self.argument_context('financials financialscompaniessalesorderlinesitem create-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_order_line_id', type=str, help='key: id of salesOrderLine')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('content', help='')
        c.argument('content_type', type=str, help='')
        c.argument('height', type=int, help='')
        c.argument('width', type=int, help='')

    with self.argument_context('financials financialscompaniessalesorderlinesitem delete-item-category') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_order_line_id', type=str, help='key: id of salesOrderLine')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniessalesorderlinesitem delete-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_order_line_id', type=str, help='key: id of salesOrderLine')
        c.argument('picture_id', type=str, help='key: id of picture')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniessalesorderlinesitem list-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_order_line_id', type=str, help='key: id of salesOrderLine')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniessalesorderlinesitem set-picture-content') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_order_line_id', type=str, help='key: id of salesOrderLine')
        c.argument('picture_id', type=str, help='key: id of picture')
        c.argument('data', help='New media content.')

    with self.argument_context('financials financialscompaniessalesorderlinesitem show-item-category') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_order_line_id', type=str, help='key: id of salesOrderLine')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniessalesorderlinesitem show-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_order_line_id', type=str, help='key: id of salesOrderLine')
        c.argument('picture_id', type=str, help='key: id of picture')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniessalesorderlinesitem show-picture-content') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_order_line_id', type=str, help='key: id of salesOrderLine')
        c.argument('picture_id', type=str, help='key: id of picture')

    with self.argument_context('financials financialscompaniessalesorderlinesitem update-item-category') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_order_line_id', type=str, help='key: id of salesOrderLine')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('code', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')

    with self.argument_context('financials financialscompaniessalesorderlinesitem update-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_order_line_id', type=str, help='key: id of salesOrderLine')
        c.argument('picture_id', type=str, help='key: id of picture')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('content', help='')
        c.argument('content_type', type=str, help='')
        c.argument('height', type=int, help='')
        c.argument('width', type=int, help='')

    with self.argument_context('financials financialscompaniessalesorder create-sale-order-line') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_order_id', type=str, help='key: id of salesOrder')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('account_id', help='')
        c.argument('amount_excluding_tax', type=float, help='')
        c.argument('amount_including_tax', type=float, help='')
        c.argument('description', type=str, help='')
        c.argument('discount_amount', type=float, help='')
        c.argument('discount_applied_before_tax', arg_type=get_three_state_flag(), help='')
        c.argument('discount_percent', type=float, help='')
        c.argument('document_id', help='')
        c.argument('invoice_discount_allocation', type=float, help='')
        c.argument('invoiced_quantity', type=float, help='')
        c.argument('invoice_quantity', type=float, help='')
        c.argument('item_id', help='')
        c.argument('line_type', type=str, help='')
        c.argument('net_amount', type=float, help='')
        c.argument('net_amount_including_tax', type=float, help='')
        c.argument('net_tax_amount', type=float, help='')
        c.argument('quantity', type=float, help='')
        c.argument('sequence', type=int, help='')
        c.argument('shipment_date', help='')
        c.argument('shipped_quantity', type=float, help='')
        c.argument('ship_quantity', type=float, help='')
        c.argument('tax_code', type=str, help='')
        c.argument('tax_percent', type=float, help='')
        c.argument('total_tax_amount', type=float, help='')
        c.argument('unit_of_measure_id', help='')
        c.argument('unit_price', type=float, help='')
        c.argument('account', action=AddAccount, nargs='+', help='account')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Item')
        c.argument('base_unit_of_measure_id', help='', arg_group='Item')
        c.argument('blocked', arg_type=get_three_state_flag(), help='', arg_group='Item')
        c.argument('display_name', type=str, help='', arg_group='Item')
        c.argument('gtin', type=str, help='', arg_group='Item')
        c.argument('inventory', type=float, help='', arg_group='Item')
        c.argument('item_category_code', type=str, help='', arg_group='Item')
        c.argument('item_category_id', help='', arg_group='Item')
        c.argument('last_modified_date_time', help='', arg_group='Item')
        c.argument('number', type=str, help='', arg_group='Item')
        c.argument('price_includes_tax', arg_type=get_three_state_flag(), help='', arg_group='Item')
        c.argument('tax_group_code', type=str, help='', arg_group='Item')
        c.argument('tax_group_id', help='', arg_group='Item')
        c.argument('type_', options_list=['--type'], type=str, help='', arg_group='Item')
        c.argument('unit_cost', type=float, help='', arg_group='Item')
        c.argument('number_unit_price', type=float, help='', arg_group='Item')
        c.argument('item_category', action=AddItemCategory, nargs='+', help='itemCategory', arg_group='Item')
        c.argument('picture', action=AddFinancialsFinancialscompanyCreateItemPicture, nargs='+', help='',
                   arg_group='Item')

    with self.argument_context('financials financialscompaniessalesorder delete-currency') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_order_id', type=str, help='key: id of salesOrder')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniessalesorder delete-customer') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_order_id', type=str, help='key: id of salesOrder')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniessalesorder delete-payment-term') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_order_id', type=str, help='key: id of salesOrder')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniessalesorder delete-sale-order-line') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_order_id', type=str, help='key: id of salesOrder')
        c.argument('sales_order_line_id', type=str, help='key: id of salesOrderLine')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniessalesorder list-sale-order-line') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_order_id', type=str, help='key: id of salesOrder')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniessalesorder show-currency') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_order_id', type=str, help='key: id of salesOrder')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniessalesorder show-customer') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_order_id', type=str, help='key: id of salesOrder')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniessalesorder show-payment-term') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_order_id', type=str, help='key: id of salesOrder')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniessalesorder show-sale-order-line') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_order_id', type=str, help='key: id of salesOrder')
        c.argument('sales_order_line_id', type=str, help='key: id of salesOrderLine')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniessalesorder update-currency') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_order_id', type=str, help='key: id of salesOrder')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('amount_decimal_places', type=str, help='')
        c.argument('amount_rounding_precision', type=float, help='')
        c.argument('code', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')
        c.argument('symbol', type=str, help='')

    with self.argument_context('financials financialscompaniessalesorder update-customer') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_order_id', type=str, help='key: id of salesOrder')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('address', action=AddAddress, nargs='+', help='postalAddressType')
        c.argument('blocked', type=str, help='')
        c.argument('currency_code', type=str, help='')
        c.argument('currency_id', help='')
        c.argument('display_name', type=str, help='')
        c.argument('email', type=str, help='')
        c.argument('last_modified_date_time', help='')
        c.argument('number', type=str, help='')
        c.argument('payment_method_id', help='')
        c.argument('payment_terms_id', help='')
        c.argument('phone_number', type=str, help='')
        c.argument('shipment_method_id', help='')
        c.argument('tax_area_display_name', type=str, help='')
        c.argument('tax_area_id', help='')
        c.argument('tax_liable', arg_type=get_three_state_flag(), help='')
        c.argument('tax_registration_number', type=str, help='')
        c.argument('type_', options_list=['--type'], type=str, help='')
        c.argument('website', type=str, help='')
        c.argument('currency', action=AddCurrency, nargs='+', help='currency')
        c.argument('payment_method', action=AddPaymentMethod, nargs='+', help='paymentMethod')
        c.argument('payment_term', action=AddPaymentTerm, nargs='+', help='paymentTerm')
        c.argument('picture', action=AddFinancialsFinancialscompanyCreateCustomerPaymentPicture, nargs='+', help='')
        c.argument('shipment_method', action=AddShipmentMethod, nargs='+', help='shipmentMethod')

    with self.argument_context('financials financialscompaniessalesorder update-payment-term') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_order_id', type=str, help='key: id of salesOrder')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('calculate_discount_on_credit_memos', arg_type=get_three_state_flag(), help='')
        c.argument('code', type=str, help='')
        c.argument('discount_date_calculation', type=str, help='')
        c.argument('discount_percent', type=float, help='')
        c.argument('display_name', type=str, help='')
        c.argument('due_date_calculation', type=str, help='')
        c.argument('last_modified_date_time', help='')

    with self.argument_context('financials financialscompaniessalesorder update-sale-order-line') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_order_id', type=str, help='key: id of salesOrder')
        c.argument('sales_order_line_id', type=str, help='key: id of salesOrderLine')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('account_id', help='')
        c.argument('amount_excluding_tax', type=float, help='')
        c.argument('amount_including_tax', type=float, help='')
        c.argument('description', type=str, help='')
        c.argument('discount_amount', type=float, help='')
        c.argument('discount_applied_before_tax', arg_type=get_three_state_flag(), help='')
        c.argument('discount_percent', type=float, help='')
        c.argument('document_id', help='')
        c.argument('invoice_discount_allocation', type=float, help='')
        c.argument('invoiced_quantity', type=float, help='')
        c.argument('invoice_quantity', type=float, help='')
        c.argument('item_id', help='')
        c.argument('line_type', type=str, help='')
        c.argument('net_amount', type=float, help='')
        c.argument('net_amount_including_tax', type=float, help='')
        c.argument('net_tax_amount', type=float, help='')
        c.argument('quantity', type=float, help='')
        c.argument('sequence', type=int, help='')
        c.argument('shipment_date', help='')
        c.argument('shipped_quantity', type=float, help='')
        c.argument('ship_quantity', type=float, help='')
        c.argument('tax_code', type=str, help='')
        c.argument('tax_percent', type=float, help='')
        c.argument('total_tax_amount', type=float, help='')
        c.argument('unit_of_measure_id', help='')
        c.argument('unit_price', type=float, help='')
        c.argument('account', action=AddAccount, nargs='+', help='account')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Item')
        c.argument('base_unit_of_measure_id', help='', arg_group='Item')
        c.argument('blocked', arg_type=get_three_state_flag(), help='', arg_group='Item')
        c.argument('display_name', type=str, help='', arg_group='Item')
        c.argument('gtin', type=str, help='', arg_group='Item')
        c.argument('inventory', type=float, help='', arg_group='Item')
        c.argument('item_category_code', type=str, help='', arg_group='Item')
        c.argument('item_category_id', help='', arg_group='Item')
        c.argument('last_modified_date_time', help='', arg_group='Item')
        c.argument('number', type=str, help='', arg_group='Item')
        c.argument('price_includes_tax', arg_type=get_three_state_flag(), help='', arg_group='Item')
        c.argument('tax_group_code', type=str, help='', arg_group='Item')
        c.argument('tax_group_id', help='', arg_group='Item')
        c.argument('type_', options_list=['--type'], type=str, help='', arg_group='Item')
        c.argument('unit_cost', type=float, help='', arg_group='Item')
        c.argument('number_unit_price', type=float, help='', arg_group='Item')
        c.argument('item_category', action=AddItemCategory, nargs='+', help='itemCategory', arg_group='Item')
        c.argument('picture', action=AddFinancialsFinancialscompanyCreateItemPicture, nargs='+', help='',
                   arg_group='Item')

    with self.argument_context('financials financialscompaniessalesorderscustomer create-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_order_id', type=str, help='key: id of salesOrder')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('content', help='')
        c.argument('content_type', type=str, help='')
        c.argument('height', type=int, help='')
        c.argument('width', type=int, help='')

    with self.argument_context('financials financialscompaniessalesorderscustomer delete-currency') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_order_id', type=str, help='key: id of salesOrder')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniessalesorderscustomer delete-payment-method') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_order_id', type=str, help='key: id of salesOrder')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniessalesorderscustomer delete-payment-term') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_order_id', type=str, help='key: id of salesOrder')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniessalesorderscustomer delete-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_order_id', type=str, help='key: id of salesOrder')
        c.argument('picture_id', type=str, help='key: id of picture')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniessalesorderscustomer delete-shipment-method') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_order_id', type=str, help='key: id of salesOrder')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniessalesorderscustomer list-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_order_id', type=str, help='key: id of salesOrder')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniessalesorderscustomer set-picture-content') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_order_id', type=str, help='key: id of salesOrder')
        c.argument('picture_id', type=str, help='key: id of picture')
        c.argument('data', help='New media content.')

    with self.argument_context('financials financialscompaniessalesorderscustomer show-currency') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_order_id', type=str, help='key: id of salesOrder')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniessalesorderscustomer show-payment-method') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_order_id', type=str, help='key: id of salesOrder')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniessalesorderscustomer show-payment-term') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_order_id', type=str, help='key: id of salesOrder')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniessalesorderscustomer show-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_order_id', type=str, help='key: id of salesOrder')
        c.argument('picture_id', type=str, help='key: id of picture')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniessalesorderscustomer show-picture-content') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_order_id', type=str, help='key: id of salesOrder')
        c.argument('picture_id', type=str, help='key: id of picture')

    with self.argument_context('financials financialscompaniessalesorderscustomer show-shipment-method') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_order_id', type=str, help='key: id of salesOrder')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniessalesorderscustomer update-currency') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_order_id', type=str, help='key: id of salesOrder')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('amount_decimal_places', type=str, help='')
        c.argument('amount_rounding_precision', type=float, help='')
        c.argument('code', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')
        c.argument('symbol', type=str, help='')

    with self.argument_context('financials financialscompaniessalesorderscustomer update-payment-method') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_order_id', type=str, help='key: id of salesOrder')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('code', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')

    with self.argument_context('financials financialscompaniessalesorderscustomer update-payment-term') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_order_id', type=str, help='key: id of salesOrder')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('calculate_discount_on_credit_memos', arg_type=get_three_state_flag(), help='')
        c.argument('code', type=str, help='')
        c.argument('discount_date_calculation', type=str, help='')
        c.argument('discount_percent', type=float, help='')
        c.argument('display_name', type=str, help='')
        c.argument('due_date_calculation', type=str, help='')
        c.argument('last_modified_date_time', help='')

    with self.argument_context('financials financialscompaniessalesorderscustomer update-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_order_id', type=str, help='key: id of salesOrder')
        c.argument('picture_id', type=str, help='key: id of picture')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('content', help='')
        c.argument('content_type', type=str, help='')
        c.argument('height', type=int, help='')
        c.argument('width', type=int, help='')

    with self.argument_context('financials financialscompaniessalesorderscustomer update-shipment-method') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_order_id', type=str, help='key: id of salesOrder')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('code', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')

    with self.argument_context('financials financialscompaniessalesorderssalesorderline delete-account') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_order_id', type=str, help='key: id of salesOrder')
        c.argument('sales_order_line_id', type=str, help='key: id of salesOrderLine')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniessalesorderssalesorderline delete-item') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_order_id', type=str, help='key: id of salesOrder')
        c.argument('sales_order_line_id', type=str, help='key: id of salesOrderLine')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniessalesorderssalesorderline show-account') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_order_id', type=str, help='key: id of salesOrder')
        c.argument('sales_order_line_id', type=str, help='key: id of salesOrderLine')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniessalesorderssalesorderline show-item') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_order_id', type=str, help='key: id of salesOrder')
        c.argument('sales_order_line_id', type=str, help='key: id of salesOrderLine')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniessalesorderssalesorderline update-account') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_order_id', type=str, help='key: id of salesOrder')
        c.argument('sales_order_line_id', type=str, help='key: id of salesOrderLine')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('blocked', arg_type=get_three_state_flag(), help='')
        c.argument('category', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')
        c.argument('number', type=str, help='')
        c.argument('sub_category', type=str, help='')

    with self.argument_context('financials financialscompaniessalesorderssalesorderline update-item') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_order_id', type=str, help='key: id of salesOrder')
        c.argument('sales_order_line_id', type=str, help='key: id of salesOrderLine')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('base_unit_of_measure_id', help='')
        c.argument('blocked', arg_type=get_three_state_flag(), help='')
        c.argument('display_name', type=str, help='')
        c.argument('gtin', type=str, help='')
        c.argument('inventory', type=float, help='')
        c.argument('item_category_code', type=str, help='')
        c.argument('item_category_id', help='')
        c.argument('last_modified_date_time', help='')
        c.argument('number', type=str, help='')
        c.argument('price_includes_tax', arg_type=get_three_state_flag(), help='')
        c.argument('tax_group_code', type=str, help='')
        c.argument('tax_group_id', help='')
        c.argument('type_', options_list=['--type'], type=str, help='')
        c.argument('unit_cost', type=float, help='')
        c.argument('unit_price', type=float, help='')
        c.argument('item_category', action=AddItemCategory, nargs='+', help='itemCategory')
        c.argument('picture', action=AddFinancialsFinancialscompanyCreateItemPicture, nargs='+', help='')

    with self.argument_context('financials financialscompaniessalesorderssalesorderlinesitem create-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_order_id', type=str, help='key: id of salesOrder')
        c.argument('sales_order_line_id', type=str, help='key: id of salesOrderLine')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('content', help='')
        c.argument('content_type', type=str, help='')
        c.argument('height', type=int, help='')
        c.argument('width', type=int, help='')

    with self.argument_context('financials financialscompaniessalesorderssalesorderlinesitem delete-item-category') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_order_id', type=str, help='key: id of salesOrder')
        c.argument('sales_order_line_id', type=str, help='key: id of salesOrderLine')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniessalesorderssalesorderlinesitem delete-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_order_id', type=str, help='key: id of salesOrder')
        c.argument('sales_order_line_id', type=str, help='key: id of salesOrderLine')
        c.argument('picture_id', type=str, help='key: id of picture')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniessalesorderssalesorderlinesitem list-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_order_id', type=str, help='key: id of salesOrder')
        c.argument('sales_order_line_id', type=str, help='key: id of salesOrderLine')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniessalesorderssalesorderlinesitem set-picture-content') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_order_id', type=str, help='key: id of salesOrder')
        c.argument('sales_order_line_id', type=str, help='key: id of salesOrderLine')
        c.argument('picture_id', type=str, help='key: id of picture')
        c.argument('data', help='New media content.')

    with self.argument_context('financials financialscompaniessalesorderssalesorderlinesitem show-item-category') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_order_id', type=str, help='key: id of salesOrder')
        c.argument('sales_order_line_id', type=str, help='key: id of salesOrderLine')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniessalesorderssalesorderlinesitem show-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_order_id', type=str, help='key: id of salesOrder')
        c.argument('sales_order_line_id', type=str, help='key: id of salesOrderLine')
        c.argument('picture_id', type=str, help='key: id of picture')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniessalesorderssalesorderlinesitem show-picture-content') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_order_id', type=str, help='key: id of salesOrder')
        c.argument('sales_order_line_id', type=str, help='key: id of salesOrderLine')
        c.argument('picture_id', type=str, help='key: id of picture')

    with self.argument_context('financials financialscompaniessalesorderssalesorderlinesitem update-item-category') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_order_id', type=str, help='key: id of salesOrder')
        c.argument('sales_order_line_id', type=str, help='key: id of salesOrderLine')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('code', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')

    with self.argument_context('financials financialscompaniessalesorderssalesorderlinesitem update-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_order_id', type=str, help='key: id of salesOrder')
        c.argument('sales_order_line_id', type=str, help='key: id of salesOrderLine')
        c.argument('picture_id', type=str, help='key: id of picture')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('content', help='')
        c.argument('content_type', type=str, help='')
        c.argument('height', type=int, help='')
        c.argument('width', type=int, help='')

    with self.argument_context('financials financialscompaniessalesquoteline delete-account') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_quote_line_id', type=str, help='key: id of salesQuoteLine')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniessalesquoteline delete-item') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_quote_line_id', type=str, help='key: id of salesQuoteLine')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniessalesquoteline show-account') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_quote_line_id', type=str, help='key: id of salesQuoteLine')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniessalesquoteline show-item') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_quote_line_id', type=str, help='key: id of salesQuoteLine')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniessalesquoteline update-account') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_quote_line_id', type=str, help='key: id of salesQuoteLine')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('blocked', arg_type=get_three_state_flag(), help='')
        c.argument('category', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')
        c.argument('number', type=str, help='')
        c.argument('sub_category', type=str, help='')

    with self.argument_context('financials financialscompaniessalesquoteline update-item') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_quote_line_id', type=str, help='key: id of salesQuoteLine')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('base_unit_of_measure_id', help='')
        c.argument('blocked', arg_type=get_three_state_flag(), help='')
        c.argument('display_name', type=str, help='')
        c.argument('gtin', type=str, help='')
        c.argument('inventory', type=float, help='')
        c.argument('item_category_code', type=str, help='')
        c.argument('item_category_id', help='')
        c.argument('last_modified_date_time', help='')
        c.argument('number', type=str, help='')
        c.argument('price_includes_tax', arg_type=get_three_state_flag(), help='')
        c.argument('tax_group_code', type=str, help='')
        c.argument('tax_group_id', help='')
        c.argument('type_', options_list=['--type'], type=str, help='')
        c.argument('unit_cost', type=float, help='')
        c.argument('unit_price', type=float, help='')
        c.argument('item_category', action=AddItemCategory, nargs='+', help='itemCategory')
        c.argument('picture', action=AddFinancialsFinancialscompanyCreateItemPicture, nargs='+', help='')

    with self.argument_context('financials financialscompaniessalesquotelinesitem create-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_quote_line_id', type=str, help='key: id of salesQuoteLine')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('content', help='')
        c.argument('content_type', type=str, help='')
        c.argument('height', type=int, help='')
        c.argument('width', type=int, help='')

    with self.argument_context('financials financialscompaniessalesquotelinesitem delete-item-category') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_quote_line_id', type=str, help='key: id of salesQuoteLine')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniessalesquotelinesitem delete-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_quote_line_id', type=str, help='key: id of salesQuoteLine')
        c.argument('picture_id', type=str, help='key: id of picture')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniessalesquotelinesitem list-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_quote_line_id', type=str, help='key: id of salesQuoteLine')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniessalesquotelinesitem set-picture-content') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_quote_line_id', type=str, help='key: id of salesQuoteLine')
        c.argument('picture_id', type=str, help='key: id of picture')
        c.argument('data', help='New media content.')

    with self.argument_context('financials financialscompaniessalesquotelinesitem show-item-category') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_quote_line_id', type=str, help='key: id of salesQuoteLine')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniessalesquotelinesitem show-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_quote_line_id', type=str, help='key: id of salesQuoteLine')
        c.argument('picture_id', type=str, help='key: id of picture')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniessalesquotelinesitem show-picture-content') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_quote_line_id', type=str, help='key: id of salesQuoteLine')
        c.argument('picture_id', type=str, help='key: id of picture')

    with self.argument_context('financials financialscompaniessalesquotelinesitem update-item-category') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_quote_line_id', type=str, help='key: id of salesQuoteLine')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('code', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')

    with self.argument_context('financials financialscompaniessalesquotelinesitem update-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_quote_line_id', type=str, help='key: id of salesQuoteLine')
        c.argument('picture_id', type=str, help='key: id of picture')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('content', help='')
        c.argument('content_type', type=str, help='')
        c.argument('height', type=int, help='')
        c.argument('width', type=int, help='')

    with self.argument_context('financials financialscompaniessalesquote create-sale-quote-line') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_quote_id', type=str, help='key: id of salesQuote')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('account_id', help='')
        c.argument('amount_excluding_tax', type=float, help='')
        c.argument('amount_including_tax', type=float, help='')
        c.argument('description', type=str, help='')
        c.argument('discount_amount', type=float, help='')
        c.argument('discount_applied_before_tax', arg_type=get_three_state_flag(), help='')
        c.argument('discount_percent', type=float, help='')
        c.argument('document_id', help='')
        c.argument('item_id', help='')
        c.argument('line_type', type=str, help='')
        c.argument('net_amount', type=float, help='')
        c.argument('net_amount_including_tax', type=float, help='')
        c.argument('net_tax_amount', type=float, help='')
        c.argument('quantity', type=float, help='')
        c.argument('sequence', type=int, help='')
        c.argument('tax_code', type=str, help='')
        c.argument('tax_percent', type=float, help='')
        c.argument('total_tax_amount', type=float, help='')
        c.argument('unit_of_measure_id', help='')
        c.argument('unit_price', type=float, help='')
        c.argument('account', action=AddAccount, nargs='+', help='account')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Item')
        c.argument('base_unit_of_measure_id', help='', arg_group='Item')
        c.argument('blocked', arg_type=get_three_state_flag(), help='', arg_group='Item')
        c.argument('display_name', type=str, help='', arg_group='Item')
        c.argument('gtin', type=str, help='', arg_group='Item')
        c.argument('inventory', type=float, help='', arg_group='Item')
        c.argument('item_category_code', type=str, help='', arg_group='Item')
        c.argument('item_category_id', help='', arg_group='Item')
        c.argument('last_modified_date_time', help='', arg_group='Item')
        c.argument('number', type=str, help='', arg_group='Item')
        c.argument('price_includes_tax', arg_type=get_three_state_flag(), help='', arg_group='Item')
        c.argument('tax_group_code', type=str, help='', arg_group='Item')
        c.argument('tax_group_id', help='', arg_group='Item')
        c.argument('type_', options_list=['--type'], type=str, help='', arg_group='Item')
        c.argument('unit_cost', type=float, help='', arg_group='Item')
        c.argument('number_unit_price', type=float, help='', arg_group='Item')
        c.argument('item_category', action=AddItemCategory, nargs='+', help='itemCategory', arg_group='Item')
        c.argument('picture', action=AddFinancialsFinancialscompanyCreateItemPicture, nargs='+', help='',
                   arg_group='Item')

    with self.argument_context('financials financialscompaniessalesquote delete-currency') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_quote_id', type=str, help='key: id of salesQuote')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniessalesquote delete-customer') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_quote_id', type=str, help='key: id of salesQuote')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniessalesquote delete-payment-term') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_quote_id', type=str, help='key: id of salesQuote')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniessalesquote delete-sale-quote-line') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_quote_id', type=str, help='key: id of salesQuote')
        c.argument('sales_quote_line_id', type=str, help='key: id of salesQuoteLine')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniessalesquote delete-shipment-method') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_quote_id', type=str, help='key: id of salesQuote')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniessalesquote list-sale-quote-line') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_quote_id', type=str, help='key: id of salesQuote')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniessalesquote make-invoice') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_quote_id', type=str, help='key: id of salesQuote')

    with self.argument_context('financials financialscompaniessalesquote send') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_quote_id', type=str, help='key: id of salesQuote')

    with self.argument_context('financials financialscompaniessalesquote show-currency') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_quote_id', type=str, help='key: id of salesQuote')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniessalesquote show-customer') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_quote_id', type=str, help='key: id of salesQuote')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniessalesquote show-payment-term') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_quote_id', type=str, help='key: id of salesQuote')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniessalesquote show-sale-quote-line') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_quote_id', type=str, help='key: id of salesQuote')
        c.argument('sales_quote_line_id', type=str, help='key: id of salesQuoteLine')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniessalesquote show-shipment-method') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_quote_id', type=str, help='key: id of salesQuote')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniessalesquote update-currency') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_quote_id', type=str, help='key: id of salesQuote')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('amount_decimal_places', type=str, help='')
        c.argument('amount_rounding_precision', type=float, help='')
        c.argument('code', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')
        c.argument('symbol', type=str, help='')

    with self.argument_context('financials financialscompaniessalesquote update-customer') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_quote_id', type=str, help='key: id of salesQuote')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('address', action=AddAddress, nargs='+', help='postalAddressType')
        c.argument('blocked', type=str, help='')
        c.argument('currency_code', type=str, help='')
        c.argument('currency_id', help='')
        c.argument('display_name', type=str, help='')
        c.argument('email', type=str, help='')
        c.argument('last_modified_date_time', help='')
        c.argument('number', type=str, help='')
        c.argument('payment_method_id', help='')
        c.argument('payment_terms_id', help='')
        c.argument('phone_number', type=str, help='')
        c.argument('shipment_method_id', help='')
        c.argument('tax_area_display_name', type=str, help='')
        c.argument('tax_area_id', help='')
        c.argument('tax_liable', arg_type=get_three_state_flag(), help='')
        c.argument('tax_registration_number', type=str, help='')
        c.argument('type_', options_list=['--type'], type=str, help='')
        c.argument('website', type=str, help='')
        c.argument('currency', action=AddCurrency, nargs='+', help='currency')
        c.argument('payment_method', action=AddPaymentMethod, nargs='+', help='paymentMethod')
        c.argument('payment_term', action=AddPaymentTerm, nargs='+', help='paymentTerm')
        c.argument('picture', action=AddFinancialsFinancialscompanyCreateCustomerPaymentPicture, nargs='+', help='')
        c.argument('shipment_method', action=AddShipmentMethod, nargs='+', help='shipmentMethod')

    with self.argument_context('financials financialscompaniessalesquote update-payment-term') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_quote_id', type=str, help='key: id of salesQuote')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('calculate_discount_on_credit_memos', arg_type=get_three_state_flag(), help='')
        c.argument('code', type=str, help='')
        c.argument('discount_date_calculation', type=str, help='')
        c.argument('discount_percent', type=float, help='')
        c.argument('display_name', type=str, help='')
        c.argument('due_date_calculation', type=str, help='')
        c.argument('last_modified_date_time', help='')

    with self.argument_context('financials financialscompaniessalesquote update-sale-quote-line') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_quote_id', type=str, help='key: id of salesQuote')
        c.argument('sales_quote_line_id', type=str, help='key: id of salesQuoteLine')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('account_id', help='')
        c.argument('amount_excluding_tax', type=float, help='')
        c.argument('amount_including_tax', type=float, help='')
        c.argument('description', type=str, help='')
        c.argument('discount_amount', type=float, help='')
        c.argument('discount_applied_before_tax', arg_type=get_three_state_flag(), help='')
        c.argument('discount_percent', type=float, help='')
        c.argument('document_id', help='')
        c.argument('item_id', help='')
        c.argument('line_type', type=str, help='')
        c.argument('net_amount', type=float, help='')
        c.argument('net_amount_including_tax', type=float, help='')
        c.argument('net_tax_amount', type=float, help='')
        c.argument('quantity', type=float, help='')
        c.argument('sequence', type=int, help='')
        c.argument('tax_code', type=str, help='')
        c.argument('tax_percent', type=float, help='')
        c.argument('total_tax_amount', type=float, help='')
        c.argument('unit_of_measure_id', help='')
        c.argument('unit_price', type=float, help='')
        c.argument('account', action=AddAccount, nargs='+', help='account')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Item')
        c.argument('base_unit_of_measure_id', help='', arg_group='Item')
        c.argument('blocked', arg_type=get_three_state_flag(), help='', arg_group='Item')
        c.argument('display_name', type=str, help='', arg_group='Item')
        c.argument('gtin', type=str, help='', arg_group='Item')
        c.argument('inventory', type=float, help='', arg_group='Item')
        c.argument('item_category_code', type=str, help='', arg_group='Item')
        c.argument('item_category_id', help='', arg_group='Item')
        c.argument('last_modified_date_time', help='', arg_group='Item')
        c.argument('number', type=str, help='', arg_group='Item')
        c.argument('price_includes_tax', arg_type=get_three_state_flag(), help='', arg_group='Item')
        c.argument('tax_group_code', type=str, help='', arg_group='Item')
        c.argument('tax_group_id', help='', arg_group='Item')
        c.argument('type_', options_list=['--type'], type=str, help='', arg_group='Item')
        c.argument('unit_cost', type=float, help='', arg_group='Item')
        c.argument('number_unit_price', type=float, help='', arg_group='Item')
        c.argument('item_category', action=AddItemCategory, nargs='+', help='itemCategory', arg_group='Item')
        c.argument('picture', action=AddFinancialsFinancialscompanyCreateItemPicture, nargs='+', help='',
                   arg_group='Item')

    with self.argument_context('financials financialscompaniessalesquote update-shipment-method') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_quote_id', type=str, help='key: id of salesQuote')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('code', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')

    with self.argument_context('financials financialscompaniessalesquotescustomer create-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_quote_id', type=str, help='key: id of salesQuote')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('content', help='')
        c.argument('content_type', type=str, help='')
        c.argument('height', type=int, help='')
        c.argument('width', type=int, help='')

    with self.argument_context('financials financialscompaniessalesquotescustomer delete-currency') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_quote_id', type=str, help='key: id of salesQuote')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniessalesquotescustomer delete-payment-method') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_quote_id', type=str, help='key: id of salesQuote')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniessalesquotescustomer delete-payment-term') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_quote_id', type=str, help='key: id of salesQuote')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniessalesquotescustomer delete-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_quote_id', type=str, help='key: id of salesQuote')
        c.argument('picture_id', type=str, help='key: id of picture')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniessalesquotescustomer delete-shipment-method') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_quote_id', type=str, help='key: id of salesQuote')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniessalesquotescustomer list-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_quote_id', type=str, help='key: id of salesQuote')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniessalesquotescustomer set-picture-content') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_quote_id', type=str, help='key: id of salesQuote')
        c.argument('picture_id', type=str, help='key: id of picture')
        c.argument('data', help='New media content.')

    with self.argument_context('financials financialscompaniessalesquotescustomer show-currency') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_quote_id', type=str, help='key: id of salesQuote')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniessalesquotescustomer show-payment-method') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_quote_id', type=str, help='key: id of salesQuote')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniessalesquotescustomer show-payment-term') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_quote_id', type=str, help='key: id of salesQuote')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniessalesquotescustomer show-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_quote_id', type=str, help='key: id of salesQuote')
        c.argument('picture_id', type=str, help='key: id of picture')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniessalesquotescustomer show-picture-content') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_quote_id', type=str, help='key: id of salesQuote')
        c.argument('picture_id', type=str, help='key: id of picture')

    with self.argument_context('financials financialscompaniessalesquotescustomer show-shipment-method') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_quote_id', type=str, help='key: id of salesQuote')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniessalesquotescustomer update-currency') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_quote_id', type=str, help='key: id of salesQuote')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('amount_decimal_places', type=str, help='')
        c.argument('amount_rounding_precision', type=float, help='')
        c.argument('code', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')
        c.argument('symbol', type=str, help='')

    with self.argument_context('financials financialscompaniessalesquotescustomer update-payment-method') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_quote_id', type=str, help='key: id of salesQuote')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('code', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')

    with self.argument_context('financials financialscompaniessalesquotescustomer update-payment-term') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_quote_id', type=str, help='key: id of salesQuote')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('calculate_discount_on_credit_memos', arg_type=get_three_state_flag(), help='')
        c.argument('code', type=str, help='')
        c.argument('discount_date_calculation', type=str, help='')
        c.argument('discount_percent', type=float, help='')
        c.argument('display_name', type=str, help='')
        c.argument('due_date_calculation', type=str, help='')
        c.argument('last_modified_date_time', help='')

    with self.argument_context('financials financialscompaniessalesquotescustomer update-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_quote_id', type=str, help='key: id of salesQuote')
        c.argument('picture_id', type=str, help='key: id of picture')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('content', help='')
        c.argument('content_type', type=str, help='')
        c.argument('height', type=int, help='')
        c.argument('width', type=int, help='')

    with self.argument_context('financials financialscompaniessalesquotescustomer update-shipment-method') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_quote_id', type=str, help='key: id of salesQuote')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('code', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')

    with self.argument_context('financials financialscompaniessalesquotessalesquoteline delete-account') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_quote_id', type=str, help='key: id of salesQuote')
        c.argument('sales_quote_line_id', type=str, help='key: id of salesQuoteLine')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniessalesquotessalesquoteline delete-item') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_quote_id', type=str, help='key: id of salesQuote')
        c.argument('sales_quote_line_id', type=str, help='key: id of salesQuoteLine')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniessalesquotessalesquoteline show-account') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_quote_id', type=str, help='key: id of salesQuote')
        c.argument('sales_quote_line_id', type=str, help='key: id of salesQuoteLine')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniessalesquotessalesquoteline show-item') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_quote_id', type=str, help='key: id of salesQuote')
        c.argument('sales_quote_line_id', type=str, help='key: id of salesQuoteLine')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniessalesquotessalesquoteline update-account') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_quote_id', type=str, help='key: id of salesQuote')
        c.argument('sales_quote_line_id', type=str, help='key: id of salesQuoteLine')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('blocked', arg_type=get_three_state_flag(), help='')
        c.argument('category', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')
        c.argument('number', type=str, help='')
        c.argument('sub_category', type=str, help='')

    with self.argument_context('financials financialscompaniessalesquotessalesquoteline update-item') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_quote_id', type=str, help='key: id of salesQuote')
        c.argument('sales_quote_line_id', type=str, help='key: id of salesQuoteLine')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('base_unit_of_measure_id', help='')
        c.argument('blocked', arg_type=get_three_state_flag(), help='')
        c.argument('display_name', type=str, help='')
        c.argument('gtin', type=str, help='')
        c.argument('inventory', type=float, help='')
        c.argument('item_category_code', type=str, help='')
        c.argument('item_category_id', help='')
        c.argument('last_modified_date_time', help='')
        c.argument('number', type=str, help='')
        c.argument('price_includes_tax', arg_type=get_three_state_flag(), help='')
        c.argument('tax_group_code', type=str, help='')
        c.argument('tax_group_id', help='')
        c.argument('type_', options_list=['--type'], type=str, help='')
        c.argument('unit_cost', type=float, help='')
        c.argument('unit_price', type=float, help='')
        c.argument('item_category', action=AddItemCategory, nargs='+', help='itemCategory')
        c.argument('picture', action=AddFinancialsFinancialscompanyCreateItemPicture, nargs='+', help='')

    with self.argument_context('financials financialscompaniessalesquotessalesquotelinesitem create-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_quote_id', type=str, help='key: id of salesQuote')
        c.argument('sales_quote_line_id', type=str, help='key: id of salesQuoteLine')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('content', help='')
        c.argument('content_type', type=str, help='')
        c.argument('height', type=int, help='')
        c.argument('width', type=int, help='')

    with self.argument_context('financials financialscompaniessalesquotessalesquotelinesitem delete-item-category') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_quote_id', type=str, help='key: id of salesQuote')
        c.argument('sales_quote_line_id', type=str, help='key: id of salesQuoteLine')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniessalesquotessalesquotelinesitem delete-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_quote_id', type=str, help='key: id of salesQuote')
        c.argument('sales_quote_line_id', type=str, help='key: id of salesQuoteLine')
        c.argument('picture_id', type=str, help='key: id of picture')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniessalesquotessalesquotelinesitem list-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_quote_id', type=str, help='key: id of salesQuote')
        c.argument('sales_quote_line_id', type=str, help='key: id of salesQuoteLine')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniessalesquotessalesquotelinesitem set-picture-content') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_quote_id', type=str, help='key: id of salesQuote')
        c.argument('sales_quote_line_id', type=str, help='key: id of salesQuoteLine')
        c.argument('picture_id', type=str, help='key: id of picture')
        c.argument('data', help='New media content.')

    with self.argument_context('financials financialscompaniessalesquotessalesquotelinesitem show-item-category') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_quote_id', type=str, help='key: id of salesQuote')
        c.argument('sales_quote_line_id', type=str, help='key: id of salesQuoteLine')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniessalesquotessalesquotelinesitem show-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_quote_id', type=str, help='key: id of salesQuote')
        c.argument('sales_quote_line_id', type=str, help='key: id of salesQuoteLine')
        c.argument('picture_id', type=str, help='key: id of picture')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniessalesquotessalesquotelinesitem show-picture-content') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_quote_id', type=str, help='key: id of salesQuote')
        c.argument('sales_quote_line_id', type=str, help='key: id of salesQuoteLine')
        c.argument('picture_id', type=str, help='key: id of picture')

    with self.argument_context('financials financialscompaniessalesquotessalesquotelinesitem update-item-category') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_quote_id', type=str, help='key: id of salesQuote')
        c.argument('sales_quote_line_id', type=str, help='key: id of salesQuoteLine')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('code', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')

    with self.argument_context('financials financialscompaniessalesquotessalesquotelinesitem update-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('sales_quote_id', type=str, help='key: id of salesQuote')
        c.argument('sales_quote_line_id', type=str, help='key: id of salesQuoteLine')
        c.argument('picture_id', type=str, help='key: id of picture')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('content', help='')
        c.argument('content_type', type=str, help='')
        c.argument('height', type=int, help='')
        c.argument('width', type=int, help='')

    with self.argument_context('financials financialscompaniesvendor create-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('vendor_id', type=str, help='key: id of vendor')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('content', help='')
        c.argument('content_type', type=str, help='')
        c.argument('height', type=int, help='')
        c.argument('width', type=int, help='')

    with self.argument_context('financials financialscompaniesvendor delete-currency') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('vendor_id', type=str, help='key: id of vendor')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniesvendor delete-payment-method') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('vendor_id', type=str, help='key: id of vendor')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniesvendor delete-payment-term') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('vendor_id', type=str, help='key: id of vendor')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniesvendor delete-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('vendor_id', type=str, help='key: id of vendor')
        c.argument('picture_id', type=str, help='key: id of picture')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('financials financialscompaniesvendor list-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('vendor_id', type=str, help='key: id of vendor')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniesvendor set-picture-content') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('vendor_id', type=str, help='key: id of vendor')
        c.argument('picture_id', type=str, help='key: id of picture')
        c.argument('data', help='New media content.')

    with self.argument_context('financials financialscompaniesvendor show-currency') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('vendor_id', type=str, help='key: id of vendor')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniesvendor show-payment-method') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('vendor_id', type=str, help='key: id of vendor')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniesvendor show-payment-term') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('vendor_id', type=str, help='key: id of vendor')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniesvendor show-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('vendor_id', type=str, help='key: id of vendor')
        c.argument('picture_id', type=str, help='key: id of picture')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('financials financialscompaniesvendor show-picture-content') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('vendor_id', type=str, help='key: id of vendor')
        c.argument('picture_id', type=str, help='key: id of picture')

    with self.argument_context('financials financialscompaniesvendor update-currency') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('vendor_id', type=str, help='key: id of vendor')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('amount_decimal_places', type=str, help='')
        c.argument('amount_rounding_precision', type=float, help='')
        c.argument('code', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')
        c.argument('symbol', type=str, help='')

    with self.argument_context('financials financialscompaniesvendor update-payment-method') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('vendor_id', type=str, help='key: id of vendor')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('code', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('last_modified_date_time', help='')

    with self.argument_context('financials financialscompaniesvendor update-payment-term') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('vendor_id', type=str, help='key: id of vendor')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('calculate_discount_on_credit_memos', arg_type=get_three_state_flag(), help='')
        c.argument('code', type=str, help='')
        c.argument('discount_date_calculation', type=str, help='')
        c.argument('discount_percent', type=float, help='')
        c.argument('display_name', type=str, help='')
        c.argument('due_date_calculation', type=str, help='')
        c.argument('last_modified_date_time', help='')

    with self.argument_context('financials financialscompaniesvendor update-picture') as c:
        c.argument('company_id', type=str, help='key: id of company')
        c.argument('vendor_id', type=str, help='key: id of vendor')
        c.argument('picture_id', type=str, help='key: id of picture')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('content', help='')
        c.argument('content_type', type=str, help='')
        c.argument('height', type=int, help='')
        c.argument('width', type=int, help='')
