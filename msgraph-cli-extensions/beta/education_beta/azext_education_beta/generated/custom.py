# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=line-too-long
# pylint: disable=too-many-lines


def education_education_root_show_education_root(client,
                                                 select=None,
                                                 expand=None):
    return client.get_education_root(select=select,
                                     expand=expand)


def education_education_root_update_education_root(client,
                                                   id_=None,
                                                   synchronization_profiles=None,
                                                   classes=None,
                                                   me=None,
                                                   schools=None,
                                                   users=None):
    body = {}
    body['id'] = id_
    body['synchronization_profiles'] = synchronization_profiles
    body['classes'] = classes
    body['me'] = me
    body['schools'] = schools
    body['users'] = users
    return client.update_education_root(body=body)


def education_education_create_class(client,
                                     id_=None,
                                     class_code=None,
                                     course=None,
                                     description=None,
                                     display_name=None,
                                     external_id=None,
                                     external_name=None,
                                     external_source=None,
                                     external_source_detail=None,
                                     grade=None,
                                     mail_nickname=None,
                                     term=None,
                                     assignment_categories=None,
                                     assignments=None,
                                     group=None,
                                     members=None,
                                     schools=None,
                                     teachers=None,
                                     application=None,
                                     device=None,
                                     user=None):
    body = {}
    body['id'] = id_
    body['class_code'] = class_code
    body['course'] = course
    body['description'] = description
    body['display_name'] = display_name
    body['external_id'] = external_id
    body['external_name'] = external_name
    body['external_source'] = external_source
    body['external_source_detail'] = external_source_detail
    body['grade'] = grade
    body['mail_nickname'] = mail_nickname
    body['term'] = term
    body['assignment_categories'] = assignment_categories
    body['assignments'] = assignments
    body['group'] = group
    body['members'] = members
    body['schools'] = schools
    body['teachers'] = teachers
    body['created_by'] = {}
    body['created_by']['application'] = application
    body['created_by']['device'] = device
    body['created_by']['user'] = user
    return client.create_classes(body=body)


def education_education_create_school(client,
                                      id_=None,
                                      description=None,
                                      display_name=None,
                                      external_source=None,
                                      external_source_detail=None,
                                      address=None,
                                      external_id=None,
                                      external_principal_id=None,
                                      fax=None,
                                      highest_grade=None,
                                      lowest_grade=None,
                                      phone=None,
                                      principal_email=None,
                                      principal_name=None,
                                      school_number=None,
                                      classes=None,
                                      users=None,
                                      microsoft_graph_entity_id=None,
                                      deleted_date_time=None,
                                      microsoft_graph_administrative_unit_description=None,
                                      microsoft_graph_administrative_unit_display_name=None,
                                      visibility=None,
                                      members=None,
                                      scoped_role_members=None,
                                      extensions=None,
                                      application=None,
                                      device=None,
                                      user=None):
    body = {}
    body['id'] = id_
    body['description'] = description
    body['display_name'] = display_name
    body['external_source'] = external_source
    body['external_source_detail'] = external_source_detail
    body['address'] = address
    body['external_id'] = external_id
    body['external_principal_id'] = external_principal_id
    body['fax'] = fax
    body['highest_grade'] = highest_grade
    body['lowest_grade'] = lowest_grade
    body['phone'] = phone
    body['principal_email'] = principal_email
    body['principal_name'] = principal_name
    body['school_number'] = school_number
    body['classes'] = classes
    body['users'] = users
    body['administrative_unit'] = {}
    body['administrative_unit']['id'] = microsoft_graph_entity_id
    body['administrative_unit']['deleted_date_time'] = deleted_date_time
    body['administrative_unit']['description'] = microsoft_graph_administrative_unit_description
    body['administrative_unit']['display_name'] = microsoft_graph_administrative_unit_display_name
    body['administrative_unit']['visibility'] = visibility
    body['administrative_unit']['members'] = members
    body['administrative_unit']['scoped_role_members'] = scoped_role_members
    body['administrative_unit']['extensions'] = extensions
    body['created_by'] = {}
    body['created_by']['application'] = application
    body['created_by']['device'] = device
    body['created_by']['user'] = user
    return client.create_schools(body=body)


def education_education_create_synchronization_profile(client,
                                                       id_=None,
                                                       data_provider=None,
                                                       display_name=None,
                                                       expiration_date=None,
                                                       handle_special_character_constraint=None,
                                                       identity_synchronization_configuration=None,
                                                       licenses_to_assign=None,
                                                       state=None,
                                                       errors=None,
                                                       profile_status=None):
    body = {}
    body['id'] = id_
    body['data_provider'] = data_provider
    body['display_name'] = display_name
    body['expiration_date'] = expiration_date
    body['handle_special_character_constraint'] = handle_special_character_constraint
    body['identity_synchronization_configuration'] = identity_synchronization_configuration
    body['licenses_to_assign'] = licenses_to_assign
    body['state'] = state
    body['errors'] = errors
    body['profile_status'] = profile_status
    return client.create_synchronization_profiles(body=body)


def education_education_create_user(client,
                                    id_=None,
                                    related_contacts=None,
                                    account_enabled=None,
                                    assigned_licenses=None,
                                    assigned_plans=None,
                                    business_phones=None,
                                    department=None,
                                    display_name=None,
                                    external_source=None,
                                    external_source_detail=None,
                                    given_name=None,
                                    mail=None,
                                    mailing_address=None,
                                    mail_nickname=None,
                                    middle_name=None,
                                    mobile_phone=None,
                                    office_location=None,
                                    password_policies=None,
                                    password_profile=None,
                                    preferred_language=None,
                                    primary_role=None,
                                    provisioned_plans=None,
                                    refresh_tokens_valid_from_date_time=None,
                                    residence_address=None,
                                    show_in_address_list=None,
                                    student=None,
                                    surname=None,
                                    teacher=None,
                                    usage_location=None,
                                    user_principal_name=None,
                                    user_type=None,
                                    assignments=None,
                                    rubrics=None,
                                    classes=None,
                                    schools=None,
                                    taught_classes=None,
                                    user=None,
                                    immutable_id=None,
                                    application=None,
                                    device=None,
                                    microsoft_graph_identity_user=None):
    body = {}
    body['id'] = id_
    body['related_contacts'] = related_contacts
    body['account_enabled'] = account_enabled
    body['assigned_licenses'] = assigned_licenses
    body['assigned_plans'] = assigned_plans
    body['business_phones'] = business_phones
    body['department'] = department
    body['display_name'] = display_name
    body['external_source'] = external_source
    body['external_source_detail'] = external_source_detail
    body['given_name'] = given_name
    body['mail'] = mail
    body['mailing_address'] = mailing_address
    body['mail_nickname'] = mail_nickname
    body['middle_name'] = middle_name
    body['mobile_phone'] = mobile_phone
    body['office_location'] = office_location
    body['password_policies'] = password_policies
    body['password_profile'] = password_profile
    body['preferred_language'] = preferred_language
    body['primary_role'] = primary_role
    body['provisioned_plans'] = provisioned_plans
    body['refresh_tokens_valid_from_date_time'] = refresh_tokens_valid_from_date_time
    body['residence_address'] = residence_address
    body['show_in_address_list'] = show_in_address_list
    body['student'] = student
    body['surname'] = surname
    body['teacher'] = teacher
    body['usage_location'] = usage_location
    body['user_principal_name'] = user_principal_name
    body['user_type'] = user_type
    body['assignments'] = assignments
    body['rubrics'] = rubrics
    body['classes'] = classes
    body['schools'] = schools
    body['taught_classes'] = taught_classes
    body['user'] = user
    body['on_premises_info'] = {}
    body['on_premises_info']['immutable_id'] = immutable_id
    body['created_by'] = {}
    body['created_by']['application'] = application
    body['created_by']['device'] = device
    body['created_by']['user'] = microsoft_graph_identity_user
    return client.create_users(body=body)


def education_education_delete_class(client,
                                     education_class_id,
                                     if_match=None):
    return client.delete_classes(education_class_id=education_class_id,
                                 if_match=if_match)


def education_education_delete_me(client,
                                  if_match=None):
    return client.delete_me(if_match=if_match)


def education_education_delete_school(client,
                                      education_school_id,
                                      if_match=None):
    return client.delete_schools(education_school_id=education_school_id,
                                 if_match=if_match)


def education_education_delete_synchronization_profile(client,
                                                       education_synchronization_profile_id,
                                                       if_match=None):
    return client.delete_synchronization_profiles(education_synchronization_profile_id=education_synchronization_profile_id,
                                                  if_match=if_match)


def education_education_delete_user(client,
                                    education_user_id,
                                    if_match=None):
    return client.delete_users(education_user_id=education_user_id,
                               if_match=if_match)


def education_education_list_class(client,
                                   orderby=None,
                                   select=None,
                                   expand=None):
    return client.list_classes(orderby=orderby,
                               select=select,
                               expand=expand)


def education_education_list_school(client,
                                    orderby=None,
                                    select=None,
                                    expand=None):
    return client.list_schools(orderby=orderby,
                               select=select,
                               expand=expand)


def education_education_list_synchronization_profile(client,
                                                     orderby=None,
                                                     select=None,
                                                     expand=None):
    return client.list_synchronization_profiles(orderby=orderby,
                                                select=select,
                                                expand=expand)


def education_education_list_user(client,
                                  orderby=None,
                                  select=None,
                                  expand=None):
    return client.list_users(orderby=orderby,
                             select=select,
                             expand=expand)


def education_education_show_class(client,
                                   education_class_id,
                                   select=None,
                                   expand=None):
    return client.get_classes(education_class_id=education_class_id,
                              select=select,
                              expand=expand)


def education_education_show_me(client,
                                select=None,
                                expand=None):
    return client.get_me(select=select,
                         expand=expand)


def education_education_show_school(client,
                                    education_school_id,
                                    select=None,
                                    expand=None):
    return client.get_schools(education_school_id=education_school_id,
                              select=select,
                              expand=expand)


def education_education_show_synchronization_profile(client,
                                                     education_synchronization_profile_id,
                                                     select=None,
                                                     expand=None):
    return client.get_synchronization_profiles(education_synchronization_profile_id=education_synchronization_profile_id,
                                               select=select,
                                               expand=expand)


def education_education_show_user(client,
                                  education_user_id,
                                  select=None,
                                  expand=None):
    return client.get_users(education_user_id=education_user_id,
                            select=select,
                            expand=expand)


def education_education_update_class(client,
                                     education_class_id,
                                     id_=None,
                                     class_code=None,
                                     course=None,
                                     description=None,
                                     display_name=None,
                                     external_id=None,
                                     external_name=None,
                                     external_source=None,
                                     external_source_detail=None,
                                     grade=None,
                                     mail_nickname=None,
                                     term=None,
                                     assignment_categories=None,
                                     assignments=None,
                                     group=None,
                                     members=None,
                                     schools=None,
                                     teachers=None,
                                     application=None,
                                     device=None,
                                     user=None):
    body = {}
    body['id'] = id_
    body['class_code'] = class_code
    body['course'] = course
    body['description'] = description
    body['display_name'] = display_name
    body['external_id'] = external_id
    body['external_name'] = external_name
    body['external_source'] = external_source
    body['external_source_detail'] = external_source_detail
    body['grade'] = grade
    body['mail_nickname'] = mail_nickname
    body['term'] = term
    body['assignment_categories'] = assignment_categories
    body['assignments'] = assignments
    body['group'] = group
    body['members'] = members
    body['schools'] = schools
    body['teachers'] = teachers
    body['created_by'] = {}
    body['created_by']['application'] = application
    body['created_by']['device'] = device
    body['created_by']['user'] = user
    return client.update_classes(education_class_id=education_class_id,
                                 body=body)


def education_education_update_me(client,
                                  id_=None,
                                  related_contacts=None,
                                  account_enabled=None,
                                  assigned_licenses=None,
                                  assigned_plans=None,
                                  business_phones=None,
                                  department=None,
                                  display_name=None,
                                  external_source=None,
                                  external_source_detail=None,
                                  given_name=None,
                                  mail=None,
                                  mailing_address=None,
                                  mail_nickname=None,
                                  middle_name=None,
                                  mobile_phone=None,
                                  office_location=None,
                                  password_policies=None,
                                  password_profile=None,
                                  preferred_language=None,
                                  primary_role=None,
                                  provisioned_plans=None,
                                  refresh_tokens_valid_from_date_time=None,
                                  residence_address=None,
                                  show_in_address_list=None,
                                  student=None,
                                  surname=None,
                                  teacher=None,
                                  usage_location=None,
                                  user_principal_name=None,
                                  user_type=None,
                                  assignments=None,
                                  rubrics=None,
                                  classes=None,
                                  schools=None,
                                  taught_classes=None,
                                  user=None,
                                  immutable_id=None,
                                  application=None,
                                  device=None,
                                  microsoft_graph_identity_user=None):
    body = {}
    body['id'] = id_
    body['related_contacts'] = related_contacts
    body['account_enabled'] = account_enabled
    body['assigned_licenses'] = assigned_licenses
    body['assigned_plans'] = assigned_plans
    body['business_phones'] = business_phones
    body['department'] = department
    body['display_name'] = display_name
    body['external_source'] = external_source
    body['external_source_detail'] = external_source_detail
    body['given_name'] = given_name
    body['mail'] = mail
    body['mailing_address'] = mailing_address
    body['mail_nickname'] = mail_nickname
    body['middle_name'] = middle_name
    body['mobile_phone'] = mobile_phone
    body['office_location'] = office_location
    body['password_policies'] = password_policies
    body['password_profile'] = password_profile
    body['preferred_language'] = preferred_language
    body['primary_role'] = primary_role
    body['provisioned_plans'] = provisioned_plans
    body['refresh_tokens_valid_from_date_time'] = refresh_tokens_valid_from_date_time
    body['residence_address'] = residence_address
    body['show_in_address_list'] = show_in_address_list
    body['student'] = student
    body['surname'] = surname
    body['teacher'] = teacher
    body['usage_location'] = usage_location
    body['user_principal_name'] = user_principal_name
    body['user_type'] = user_type
    body['assignments'] = assignments
    body['rubrics'] = rubrics
    body['classes'] = classes
    body['schools'] = schools
    body['taught_classes'] = taught_classes
    body['user'] = user
    body['on_premises_info'] = {}
    body['on_premises_info']['immutable_id'] = immutable_id
    body['created_by'] = {}
    body['created_by']['application'] = application
    body['created_by']['device'] = device
    body['created_by']['user'] = microsoft_graph_identity_user
    return client.update_me(body=body)


def education_education_update_school(client,
                                      education_school_id,
                                      id_=None,
                                      description=None,
                                      display_name=None,
                                      external_source=None,
                                      external_source_detail=None,
                                      address=None,
                                      external_id=None,
                                      external_principal_id=None,
                                      fax=None,
                                      highest_grade=None,
                                      lowest_grade=None,
                                      phone=None,
                                      principal_email=None,
                                      principal_name=None,
                                      school_number=None,
                                      classes=None,
                                      users=None,
                                      microsoft_graph_entity_id=None,
                                      deleted_date_time=None,
                                      microsoft_graph_administrative_unit_description=None,
                                      microsoft_graph_administrative_unit_display_name=None,
                                      visibility=None,
                                      members=None,
                                      scoped_role_members=None,
                                      extensions=None,
                                      application=None,
                                      device=None,
                                      user=None):
    body = {}
    body['id'] = id_
    body['description'] = description
    body['display_name'] = display_name
    body['external_source'] = external_source
    body['external_source_detail'] = external_source_detail
    body['address'] = address
    body['external_id'] = external_id
    body['external_principal_id'] = external_principal_id
    body['fax'] = fax
    body['highest_grade'] = highest_grade
    body['lowest_grade'] = lowest_grade
    body['phone'] = phone
    body['principal_email'] = principal_email
    body['principal_name'] = principal_name
    body['school_number'] = school_number
    body['classes'] = classes
    body['users'] = users
    body['administrative_unit'] = {}
    body['administrative_unit']['id'] = microsoft_graph_entity_id
    body['administrative_unit']['deleted_date_time'] = deleted_date_time
    body['administrative_unit']['description'] = microsoft_graph_administrative_unit_description
    body['administrative_unit']['display_name'] = microsoft_graph_administrative_unit_display_name
    body['administrative_unit']['visibility'] = visibility
    body['administrative_unit']['members'] = members
    body['administrative_unit']['scoped_role_members'] = scoped_role_members
    body['administrative_unit']['extensions'] = extensions
    body['created_by'] = {}
    body['created_by']['application'] = application
    body['created_by']['device'] = device
    body['created_by']['user'] = user
    return client.update_schools(education_school_id=education_school_id,
                                 body=body)


def education_education_update_synchronization_profile(client,
                                                       education_synchronization_profile_id,
                                                       id_=None,
                                                       data_provider=None,
                                                       display_name=None,
                                                       expiration_date=None,
                                                       handle_special_character_constraint=None,
                                                       identity_synchronization_configuration=None,
                                                       licenses_to_assign=None,
                                                       state=None,
                                                       errors=None,
                                                       profile_status=None):
    body = {}
    body['id'] = id_
    body['data_provider'] = data_provider
    body['display_name'] = display_name
    body['expiration_date'] = expiration_date
    body['handle_special_character_constraint'] = handle_special_character_constraint
    body['identity_synchronization_configuration'] = identity_synchronization_configuration
    body['licenses_to_assign'] = licenses_to_assign
    body['state'] = state
    body['errors'] = errors
    body['profile_status'] = profile_status
    return client.update_synchronization_profiles(education_synchronization_profile_id=education_synchronization_profile_id,
                                                  body=body)


def education_education_update_user(client,
                                    education_user_id,
                                    id_=None,
                                    related_contacts=None,
                                    account_enabled=None,
                                    assigned_licenses=None,
                                    assigned_plans=None,
                                    business_phones=None,
                                    department=None,
                                    display_name=None,
                                    external_source=None,
                                    external_source_detail=None,
                                    given_name=None,
                                    mail=None,
                                    mailing_address=None,
                                    mail_nickname=None,
                                    middle_name=None,
                                    mobile_phone=None,
                                    office_location=None,
                                    password_policies=None,
                                    password_profile=None,
                                    preferred_language=None,
                                    primary_role=None,
                                    provisioned_plans=None,
                                    refresh_tokens_valid_from_date_time=None,
                                    residence_address=None,
                                    show_in_address_list=None,
                                    student=None,
                                    surname=None,
                                    teacher=None,
                                    usage_location=None,
                                    user_principal_name=None,
                                    user_type=None,
                                    assignments=None,
                                    rubrics=None,
                                    classes=None,
                                    schools=None,
                                    taught_classes=None,
                                    user=None,
                                    immutable_id=None,
                                    application=None,
                                    device=None,
                                    microsoft_graph_identity_user=None):
    body = {}
    body['id'] = id_
    body['related_contacts'] = related_contacts
    body['account_enabled'] = account_enabled
    body['assigned_licenses'] = assigned_licenses
    body['assigned_plans'] = assigned_plans
    body['business_phones'] = business_phones
    body['department'] = department
    body['display_name'] = display_name
    body['external_source'] = external_source
    body['external_source_detail'] = external_source_detail
    body['given_name'] = given_name
    body['mail'] = mail
    body['mailing_address'] = mailing_address
    body['mail_nickname'] = mail_nickname
    body['middle_name'] = middle_name
    body['mobile_phone'] = mobile_phone
    body['office_location'] = office_location
    body['password_policies'] = password_policies
    body['password_profile'] = password_profile
    body['preferred_language'] = preferred_language
    body['primary_role'] = primary_role
    body['provisioned_plans'] = provisioned_plans
    body['refresh_tokens_valid_from_date_time'] = refresh_tokens_valid_from_date_time
    body['residence_address'] = residence_address
    body['show_in_address_list'] = show_in_address_list
    body['student'] = student
    body['surname'] = surname
    body['teacher'] = teacher
    body['usage_location'] = usage_location
    body['user_principal_name'] = user_principal_name
    body['user_type'] = user_type
    body['assignments'] = assignments
    body['rubrics'] = rubrics
    body['classes'] = classes
    body['schools'] = schools
    body['taught_classes'] = taught_classes
    body['user'] = user
    body['on_premises_info'] = {}
    body['on_premises_info']['immutable_id'] = immutable_id
    body['created_by'] = {}
    body['created_by']['application'] = application
    body['created_by']['device'] = device
    body['created_by']['user'] = microsoft_graph_identity_user
    return client.update_users(education_user_id=education_user_id,
                               body=body)


def education_education_class_create_assignment(client,
                                                education_class_id,
                                                id_=None,
                                                allow_late_submissions=None,
                                                allow_students_to_add_resources_to_submission=None,
                                                assign_date_time=None,
                                                assigned_date_time=None,
                                                assign_to=None,
                                                class_id=None,
                                                close_date_time=None,
                                                created_date_time=None,
                                                display_name=None,
                                                due_date_time=None,
                                                grading=None,
                                                instructions=None,
                                                last_modified_date_time=None,
                                                status=None,
                                                categories=None,
                                                resources=None,
                                                submissions=None,
                                                microsoft_graph_entity_id=None,
                                                microsoft_graph_education_rubric_created_date_time_created_date_time=None,
                                                description=None,
                                                microsoft_graph_education_rubric_display_name=None,
                                                microsoft_graph_education_assignment_grade_type_grading=None,
                                                microsoft_graph_education_rubric_last_modified_date_time_last_modified_date_time=None,
                                                levels=None,
                                                qualities=None,
                                                application=None,
                                                device=None,
                                                user=None,
                                                microsoft_graph_identity_application=None,
                                                microsoft_graph_identity_device=None,
                                                microsoft_graph_identity_user=None,
                                                application1=None,
                                                device1=None,
                                                user1=None,
                                                application2=None,
                                                device2=None,
                                                user2=None):
    body = {}
    body['id'] = id_
    body['allow_late_submissions'] = allow_late_submissions
    body['allow_students_to_add_resources_to_submission'] = allow_students_to_add_resources_to_submission
    body['assign_date_time'] = assign_date_time
    body['assigned_date_time'] = assigned_date_time
    body['assign_to'] = assign_to
    body['class_id'] = class_id
    body['close_date_time'] = close_date_time
    body['created_date_time'] = created_date_time
    body['display_name'] = display_name
    body['due_date_time'] = due_date_time
    body['grading'] = grading
    body['instructions'] = instructions
    body['last_modified_date_time'] = last_modified_date_time
    body['status'] = status
    body['categories'] = categories
    body['resources'] = resources
    body['submissions'] = submissions
    body['rubric'] = {}
    body['rubric']['id'] = microsoft_graph_entity_id
    body['rubric']['created_date_time'] = microsoft_graph_education_rubric_created_date_time_created_date_time
    body['rubric']['description'] = description
    body['rubric']['display_name'] = microsoft_graph_education_rubric_display_name
    body['rubric']['grading'] = microsoft_graph_education_assignment_grade_type_grading
    body['rubric']['last_modified_date_time'] = microsoft_graph_education_rubric_last_modified_date_time_last_modified_date_time
    body['rubric']['levels'] = levels
    body['rubric']['qualities'] = qualities
    body['rubric']['last_modified_by'] = {}
    body['rubric']['last_modified_by']['application'] = application
    body['rubric']['last_modified_by']['device'] = device
    body['rubric']['last_modified_by']['user'] = user
    body['rubric']['created_by'] = {}
    body['rubric']['created_by']['application'] = microsoft_graph_identity_application
    body['rubric']['created_by']['device'] = microsoft_graph_identity_device
    body['rubric']['created_by']['user'] = microsoft_graph_identity_user
    body['last_modified_by'] = {}
    body['last_modified_by']['application'] = application1
    body['last_modified_by']['device'] = device1
    body['last_modified_by']['user'] = user1
    body['created_by'] = {}
    body['created_by']['application'] = application2
    body['created_by']['device'] = device2
    body['created_by']['user'] = user2
    return client.create_assignments(education_class_id=education_class_id,
                                     body=body)


def education_education_class_create_assignment_category(client,
                                                         education_class_id,
                                                         id_=None,
                                                         display_name=None):
    body = {}
    body['id'] = id_
    body['display_name'] = display_name
    return client.create_assignment_categories(education_class_id=education_class_id,
                                               body=body)


def education_education_class_create_ref_member(client,
                                                education_class_id,
                                                body):
    return client.create_ref_members(education_class_id=education_class_id,
                                     body=body)


def education_education_class_create_ref_school(client,
                                                education_class_id,
                                                body):
    return client.create_ref_schools(education_class_id=education_class_id,
                                     body=body)


def education_education_class_create_ref_teacher(client,
                                                 education_class_id,
                                                 body):
    return client.create_ref_teachers(education_class_id=education_class_id,
                                      body=body)


def education_education_class_delete_assignment(client,
                                                education_class_id,
                                                education_assignment_id,
                                                if_match=None):
    return client.delete_assignments(education_class_id=education_class_id,
                                     education_assignment_id=education_assignment_id,
                                     if_match=if_match)


def education_education_class_delete_assignment_category(client,
                                                         education_class_id,
                                                         education_category_id,
                                                         if_match=None):
    return client.delete_assignment_categories(education_class_id=education_class_id,
                                               education_category_id=education_category_id,
                                               if_match=if_match)


def education_education_class_delete_ref_group(client,
                                               education_class_id,
                                               if_match=None):
    return client.delete_ref_group(education_class_id=education_class_id,
                                   if_match=if_match)


def education_education_class_delta(client):
    return client.delta()


def education_education_class_list_assignment(client,
                                              education_class_id,
                                              orderby=None,
                                              select=None,
                                              expand=None):
    return client.list_assignments(education_class_id=education_class_id,
                                   orderby=orderby,
                                   select=select,
                                   expand=expand)


def education_education_class_list_assignment_category(client,
                                                       education_class_id,
                                                       orderby=None,
                                                       select=None,
                                                       expand=None):
    return client.list_assignment_categories(education_class_id=education_class_id,
                                             orderby=orderby,
                                             select=select,
                                             expand=expand)


def education_education_class_list_member(client,
                                          education_class_id,
                                          orderby=None,
                                          select=None,
                                          expand=None):
    return client.list_members(education_class_id=education_class_id,
                               orderby=orderby,
                               select=select,
                               expand=expand)


def education_education_class_list_ref_member(client,
                                              education_class_id,
                                              orderby=None):
    return client.list_ref_members(education_class_id=education_class_id,
                                   orderby=orderby)


def education_education_class_list_ref_school(client,
                                              education_class_id,
                                              orderby=None):
    return client.list_ref_schools(education_class_id=education_class_id,
                                   orderby=orderby)


def education_education_class_list_ref_teacher(client,
                                               education_class_id,
                                               orderby=None):
    return client.list_ref_teachers(education_class_id=education_class_id,
                                    orderby=orderby)


def education_education_class_list_school(client,
                                          education_class_id,
                                          orderby=None,
                                          select=None,
                                          expand=None):
    return client.list_schools(education_class_id=education_class_id,
                               orderby=orderby,
                               select=select,
                               expand=expand)


def education_education_class_list_teacher(client,
                                           education_class_id,
                                           orderby=None,
                                           select=None,
                                           expand=None):
    return client.list_teachers(education_class_id=education_class_id,
                                orderby=orderby,
                                select=select,
                                expand=expand)


def education_education_class_set_ref_group(client,
                                            education_class_id,
                                            body):
    return client.set_ref_group(education_class_id=education_class_id,
                                body=body)


def education_education_class_show_assignment(client,
                                              education_class_id,
                                              education_assignment_id,
                                              select=None,
                                              expand=None):
    return client.get_assignments(education_class_id=education_class_id,
                                  education_assignment_id=education_assignment_id,
                                  select=select,
                                  expand=expand)


def education_education_class_show_assignment_category(client,
                                                       education_class_id,
                                                       education_category_id,
                                                       select=None,
                                                       expand=None):
    return client.get_assignment_categories(education_class_id=education_class_id,
                                            education_category_id=education_category_id,
                                            select=select,
                                            expand=expand)


def education_education_class_show_group(client,
                                         education_class_id,
                                         select=None,
                                         expand=None):
    return client.get_group(education_class_id=education_class_id,
                            select=select,
                            expand=expand)


def education_education_class_show_ref_group(client,
                                             education_class_id):
    return client.get_ref_group(education_class_id=education_class_id)


def education_education_class_update_assignment(client,
                                                education_class_id,
                                                education_assignment_id,
                                                id_=None,
                                                allow_late_submissions=None,
                                                allow_students_to_add_resources_to_submission=None,
                                                assign_date_time=None,
                                                assigned_date_time=None,
                                                assign_to=None,
                                                class_id=None,
                                                close_date_time=None,
                                                created_date_time=None,
                                                display_name=None,
                                                due_date_time=None,
                                                grading=None,
                                                instructions=None,
                                                last_modified_date_time=None,
                                                status=None,
                                                categories=None,
                                                resources=None,
                                                submissions=None,
                                                microsoft_graph_entity_id=None,
                                                microsoft_graph_education_rubric_created_date_time_created_date_time=None,
                                                description=None,
                                                microsoft_graph_education_rubric_display_name=None,
                                                microsoft_graph_education_assignment_grade_type_grading=None,
                                                microsoft_graph_education_rubric_last_modified_date_time_last_modified_date_time=None,
                                                levels=None,
                                                qualities=None,
                                                application=None,
                                                device=None,
                                                user=None,
                                                microsoft_graph_identity_application=None,
                                                microsoft_graph_identity_device=None,
                                                microsoft_graph_identity_user=None,
                                                application1=None,
                                                device1=None,
                                                user1=None,
                                                application2=None,
                                                device2=None,
                                                user2=None):
    body = {}
    body['id'] = id_
    body['allow_late_submissions'] = allow_late_submissions
    body['allow_students_to_add_resources_to_submission'] = allow_students_to_add_resources_to_submission
    body['assign_date_time'] = assign_date_time
    body['assigned_date_time'] = assigned_date_time
    body['assign_to'] = assign_to
    body['class_id'] = class_id
    body['close_date_time'] = close_date_time
    body['created_date_time'] = created_date_time
    body['display_name'] = display_name
    body['due_date_time'] = due_date_time
    body['grading'] = grading
    body['instructions'] = instructions
    body['last_modified_date_time'] = last_modified_date_time
    body['status'] = status
    body['categories'] = categories
    body['resources'] = resources
    body['submissions'] = submissions
    body['rubric'] = {}
    body['rubric']['id'] = microsoft_graph_entity_id
    body['rubric']['created_date_time'] = microsoft_graph_education_rubric_created_date_time_created_date_time
    body['rubric']['description'] = description
    body['rubric']['display_name'] = microsoft_graph_education_rubric_display_name
    body['rubric']['grading'] = microsoft_graph_education_assignment_grade_type_grading
    body['rubric']['last_modified_date_time'] = microsoft_graph_education_rubric_last_modified_date_time_last_modified_date_time
    body['rubric']['levels'] = levels
    body['rubric']['qualities'] = qualities
    body['rubric']['last_modified_by'] = {}
    body['rubric']['last_modified_by']['application'] = application
    body['rubric']['last_modified_by']['device'] = device
    body['rubric']['last_modified_by']['user'] = user
    body['rubric']['created_by'] = {}
    body['rubric']['created_by']['application'] = microsoft_graph_identity_application
    body['rubric']['created_by']['device'] = microsoft_graph_identity_device
    body['rubric']['created_by']['user'] = microsoft_graph_identity_user
    body['last_modified_by'] = {}
    body['last_modified_by']['application'] = application1
    body['last_modified_by']['device'] = device1
    body['last_modified_by']['user'] = user1
    body['created_by'] = {}
    body['created_by']['application'] = application2
    body['created_by']['device'] = device2
    body['created_by']['user'] = user2
    return client.update_assignments(education_class_id=education_class_id,
                                     education_assignment_id=education_assignment_id,
                                     body=body)


def education_education_class_update_assignment_category(client,
                                                         education_class_id,
                                                         education_category_id,
                                                         id_=None,
                                                         display_name=None):
    body = {}
    body['id'] = id_
    body['display_name'] = display_name
    return client.update_assignment_categories(education_class_id=education_class_id,
                                               education_category_id=education_category_id,
                                               body=body)


def education_education_class_assignment_create_category(client,
                                                         education_class_id,
                                                         education_assignment_id,
                                                         id_=None,
                                                         display_name=None):
    body = {}
    body['id'] = id_
    body['display_name'] = display_name
    return client.create_categories(education_class_id=education_class_id,
                                    education_assignment_id=education_assignment_id,
                                    body=body)


def education_education_class_assignment_create_resource(client,
                                                         education_class_id,
                                                         education_assignment_id,
                                                         id_=None,
                                                         distribute_for_student_work=None,
                                                         created_by=None,
                                                         created_date_time=None,
                                                         display_name=None,
                                                         last_modified_by=None,
                                                         last_modified_date_time=None):
    body = {}
    body['id'] = id_
    body['distribute_for_student_work'] = distribute_for_student_work
    body['resource'] = {}
    body['resource']['created_by'] = created_by
    body['resource']['created_date_time'] = created_date_time
    body['resource']['display_name'] = display_name
    body['resource']['last_modified_by'] = last_modified_by
    body['resource']['last_modified_date_time'] = last_modified_date_time
    return client.create_resources(education_class_id=education_class_id,
                                   education_assignment_id=education_assignment_id,
                                   body=body)


def education_education_class_assignment_create_submission(client,
                                                           education_class_id,
                                                           education_assignment_id,
                                                           id_=None,
                                                           recipient=None,
                                                           released_date_time=None,
                                                           resources_folder_url=None,
                                                           returned_date_time=None,
                                                           status=None,
                                                           submitted_date_time=None,
                                                           unsubmitted_date_time=None,
                                                           outcomes=None,
                                                           resources=None,
                                                           submitted_resources=None,
                                                           application=None,
                                                           device=None,
                                                           user=None,
                                                           microsoft_graph_identity_application=None,
                                                           microsoft_graph_identity_device=None,
                                                           microsoft_graph_identity_user=None,
                                                           application1=None,
                                                           device1=None,
                                                           user1=None,
                                                           application2=None,
                                                           device2=None,
                                                           user2=None):
    body = {}
    body['id'] = id_
    body['recipient'] = recipient
    body['released_date_time'] = released_date_time
    body['resources_folder_url'] = resources_folder_url
    body['returned_date_time'] = returned_date_time
    body['status'] = status
    body['submitted_date_time'] = submitted_date_time
    body['unsubmitted_date_time'] = unsubmitted_date_time
    body['outcomes'] = outcomes
    body['resources'] = resources
    body['submitted_resources'] = submitted_resources
    body['unsubmitted_by'] = {}
    body['unsubmitted_by']['application'] = application
    body['unsubmitted_by']['device'] = device
    body['unsubmitted_by']['user'] = user
    body['submitted_by'] = {}
    body['submitted_by']['application'] = microsoft_graph_identity_application
    body['submitted_by']['device'] = microsoft_graph_identity_device
    body['submitted_by']['user'] = microsoft_graph_identity_user
    body['returned_by'] = {}
    body['returned_by']['application'] = application1
    body['returned_by']['device'] = device1
    body['returned_by']['user'] = user1
    body['released_by'] = {}
    body['released_by']['application'] = application2
    body['released_by']['device'] = device2
    body['released_by']['user'] = user2
    return client.create_submissions(education_class_id=education_class_id,
                                     education_assignment_id=education_assignment_id,
                                     body=body)


def education_education_class_assignment_delete_category(client,
                                                         education_class_id,
                                                         education_assignment_id,
                                                         education_category_id,
                                                         if_match=None):
    return client.delete_categories(education_class_id=education_class_id,
                                    education_assignment_id=education_assignment_id,
                                    education_category_id=education_category_id,
                                    if_match=if_match)


def education_education_class_assignment_delete_resource(client,
                                                         education_class_id,
                                                         education_assignment_id,
                                                         education_assignment_resource_id,
                                                         if_match=None):
    return client.delete_resources(education_class_id=education_class_id,
                                   education_assignment_id=education_assignment_id,
                                   education_assignment_resource_id=education_assignment_resource_id,
                                   if_match=if_match)


def education_education_class_assignment_delete_rubric(client,
                                                       education_class_id,
                                                       education_assignment_id,
                                                       if_match=None):
    return client.delete_rubric(education_class_id=education_class_id,
                                education_assignment_id=education_assignment_id,
                                if_match=if_match)


def education_education_class_assignment_delete_submission(client,
                                                           education_class_id,
                                                           education_assignment_id,
                                                           education_submission_id,
                                                           if_match=None):
    return client.delete_submissions(education_class_id=education_class_id,
                                     education_assignment_id=education_assignment_id,
                                     education_submission_id=education_submission_id,
                                     if_match=if_match)


def education_education_class_assignment_list_category(client,
                                                       education_class_id,
                                                       education_assignment_id,
                                                       orderby=None,
                                                       select=None,
                                                       expand=None):
    return client.list_categories(education_class_id=education_class_id,
                                  education_assignment_id=education_assignment_id,
                                  orderby=orderby,
                                  select=select,
                                  expand=expand)


def education_education_class_assignment_list_resource(client,
                                                       education_class_id,
                                                       education_assignment_id,
                                                       orderby=None,
                                                       select=None,
                                                       expand=None):
    return client.list_resources(education_class_id=education_class_id,
                                 education_assignment_id=education_assignment_id,
                                 orderby=orderby,
                                 select=select,
                                 expand=expand)


def education_education_class_assignment_list_submission(client,
                                                         education_class_id,
                                                         education_assignment_id,
                                                         orderby=None,
                                                         select=None,
                                                         expand=None):
    return client.list_submissions(education_class_id=education_class_id,
                                   education_assignment_id=education_assignment_id,
                                   orderby=orderby,
                                   select=select,
                                   expand=expand)


def education_education_class_assignment_publish(client,
                                                 education_class_id,
                                                 education_assignment_id):
    return client.publish(education_class_id=education_class_id,
                          education_assignment_id=education_assignment_id)


def education_education_class_assignment_show_category(client,
                                                       education_class_id,
                                                       education_assignment_id,
                                                       education_category_id,
                                                       select=None,
                                                       expand=None):
    return client.get_categories(education_class_id=education_class_id,
                                 education_assignment_id=education_assignment_id,
                                 education_category_id=education_category_id,
                                 select=select,
                                 expand=expand)


def education_education_class_assignment_show_resource(client,
                                                       education_class_id,
                                                       education_assignment_id,
                                                       education_assignment_resource_id,
                                                       select=None,
                                                       expand=None):
    return client.get_resources(education_class_id=education_class_id,
                                education_assignment_id=education_assignment_id,
                                education_assignment_resource_id=education_assignment_resource_id,
                                select=select,
                                expand=expand)


def education_education_class_assignment_show_resource_folder_url(client,
                                                                  education_class_id,
                                                                  education_assignment_id):
    return client.get_resources_folder_url(education_class_id=education_class_id,
                                           education_assignment_id=education_assignment_id)


def education_education_class_assignment_show_rubric(client,
                                                     education_class_id,
                                                     education_assignment_id,
                                                     select=None,
                                                     expand=None):
    return client.get_rubric(education_class_id=education_class_id,
                             education_assignment_id=education_assignment_id,
                             select=select,
                             expand=expand)


def education_education_class_assignment_show_submission(client,
                                                         education_class_id,
                                                         education_assignment_id,
                                                         education_submission_id,
                                                         select=None,
                                                         expand=None):
    return client.get_submissions(education_class_id=education_class_id,
                                  education_assignment_id=education_assignment_id,
                                  education_submission_id=education_submission_id,
                                  select=select,
                                  expand=expand)


def education_education_class_assignment_update_category(client,
                                                         education_class_id,
                                                         education_assignment_id,
                                                         education_category_id,
                                                         id_=None,
                                                         display_name=None):
    body = {}
    body['id'] = id_
    body['display_name'] = display_name
    return client.update_categories(education_class_id=education_class_id,
                                    education_assignment_id=education_assignment_id,
                                    education_category_id=education_category_id,
                                    body=body)


def education_education_class_assignment_update_resource(client,
                                                         education_class_id,
                                                         education_assignment_id,
                                                         education_assignment_resource_id,
                                                         id_=None,
                                                         distribute_for_student_work=None,
                                                         created_by=None,
                                                         created_date_time=None,
                                                         display_name=None,
                                                         last_modified_by=None,
                                                         last_modified_date_time=None):
    body = {}
    body['id'] = id_
    body['distribute_for_student_work'] = distribute_for_student_work
    body['resource'] = {}
    body['resource']['created_by'] = created_by
    body['resource']['created_date_time'] = created_date_time
    body['resource']['display_name'] = display_name
    body['resource']['last_modified_by'] = last_modified_by
    body['resource']['last_modified_date_time'] = last_modified_date_time
    return client.update_resources(education_class_id=education_class_id,
                                   education_assignment_id=education_assignment_id,
                                   education_assignment_resource_id=education_assignment_resource_id,
                                   body=body)


def education_education_class_assignment_update_rubric(client,
                                                       education_class_id,
                                                       education_assignment_id,
                                                       id_=None,
                                                       created_date_time=None,
                                                       description=None,
                                                       display_name=None,
                                                       grading=None,
                                                       last_modified_date_time=None,
                                                       levels=None,
                                                       qualities=None,
                                                       application=None,
                                                       device=None,
                                                       user=None,
                                                       microsoft_graph_identity_application=None,
                                                       microsoft_graph_identity_device=None,
                                                       microsoft_graph_identity_user=None):
    body = {}
    body['id'] = id_
    body['created_date_time'] = created_date_time
    body['description'] = description
    body['display_name'] = display_name
    body['grading'] = grading
    body['last_modified_date_time'] = last_modified_date_time
    body['levels'] = levels
    body['qualities'] = qualities
    body['last_modified_by'] = {}
    body['last_modified_by']['application'] = application
    body['last_modified_by']['device'] = device
    body['last_modified_by']['user'] = user
    body['created_by'] = {}
    body['created_by']['application'] = microsoft_graph_identity_application
    body['created_by']['device'] = microsoft_graph_identity_device
    body['created_by']['user'] = microsoft_graph_identity_user
    return client.update_rubric(education_class_id=education_class_id,
                                education_assignment_id=education_assignment_id,
                                body=body)


def education_education_class_assignment_update_submission(client,
                                                           education_class_id,
                                                           education_assignment_id,
                                                           education_submission_id,
                                                           id_=None,
                                                           recipient=None,
                                                           released_date_time=None,
                                                           resources_folder_url=None,
                                                           returned_date_time=None,
                                                           status=None,
                                                           submitted_date_time=None,
                                                           unsubmitted_date_time=None,
                                                           outcomes=None,
                                                           resources=None,
                                                           submitted_resources=None,
                                                           application=None,
                                                           device=None,
                                                           user=None,
                                                           microsoft_graph_identity_application=None,
                                                           microsoft_graph_identity_device=None,
                                                           microsoft_graph_identity_user=None,
                                                           application1=None,
                                                           device1=None,
                                                           user1=None,
                                                           application2=None,
                                                           device2=None,
                                                           user2=None):
    body = {}
    body['id'] = id_
    body['recipient'] = recipient
    body['released_date_time'] = released_date_time
    body['resources_folder_url'] = resources_folder_url
    body['returned_date_time'] = returned_date_time
    body['status'] = status
    body['submitted_date_time'] = submitted_date_time
    body['unsubmitted_date_time'] = unsubmitted_date_time
    body['outcomes'] = outcomes
    body['resources'] = resources
    body['submitted_resources'] = submitted_resources
    body['unsubmitted_by'] = {}
    body['unsubmitted_by']['application'] = application
    body['unsubmitted_by']['device'] = device
    body['unsubmitted_by']['user'] = user
    body['submitted_by'] = {}
    body['submitted_by']['application'] = microsoft_graph_identity_application
    body['submitted_by']['device'] = microsoft_graph_identity_device
    body['submitted_by']['user'] = microsoft_graph_identity_user
    body['returned_by'] = {}
    body['returned_by']['application'] = application1
    body['returned_by']['device'] = device1
    body['returned_by']['user'] = user1
    body['released_by'] = {}
    body['released_by']['application'] = application2
    body['released_by']['device'] = device2
    body['released_by']['user'] = user2
    return client.update_submissions(education_class_id=education_class_id,
                                     education_assignment_id=education_assignment_id,
                                     education_submission_id=education_submission_id,
                                     body=body)


def education_education_class_assignment_submission_create_outcome(client,
                                                                   education_class_id,
                                                                   education_assignment_id,
                                                                   education_submission_id,
                                                                   id_=None,
                                                                   last_modified_date_time=None,
                                                                   application=None,
                                                                   device=None,
                                                                   user=None):
    body = {}
    body['id'] = id_
    body['last_modified_date_time'] = last_modified_date_time
    body['last_modified_by'] = {}
    body['last_modified_by']['application'] = application
    body['last_modified_by']['device'] = device
    body['last_modified_by']['user'] = user
    return client.create_outcomes(education_class_id=education_class_id,
                                  education_assignment_id=education_assignment_id,
                                  education_submission_id=education_submission_id,
                                  body=body)


def education_education_class_assignment_submission_create_resource(client,
                                                                    education_class_id,
                                                                    education_assignment_id,
                                                                    education_submission_id,
                                                                    id_=None,
                                                                    assignment_resource_url=None,
                                                                    created_by=None,
                                                                    created_date_time=None,
                                                                    display_name=None,
                                                                    last_modified_by=None,
                                                                    last_modified_date_time=None):
    body = {}
    body['id'] = id_
    body['assignment_resource_url'] = assignment_resource_url
    body['resource'] = {}
    body['resource']['created_by'] = created_by
    body['resource']['created_date_time'] = created_date_time
    body['resource']['display_name'] = display_name
    body['resource']['last_modified_by'] = last_modified_by
    body['resource']['last_modified_date_time'] = last_modified_date_time
    return client.create_resources(education_class_id=education_class_id,
                                   education_assignment_id=education_assignment_id,
                                   education_submission_id=education_submission_id,
                                   body=body)


def education_education_class_assignment_submission_create_submitted_resource(client,
                                                                              education_class_id,
                                                                              education_assignment_id,
                                                                              education_submission_id,
                                                                              id_=None,
                                                                              assignment_resource_url=None,
                                                                              created_by=None,
                                                                              created_date_time=None,
                                                                              display_name=None,
                                                                              last_modified_by=None,
                                                                              last_modified_date_time=None):
    body = {}
    body['id'] = id_
    body['assignment_resource_url'] = assignment_resource_url
    body['resource'] = {}
    body['resource']['created_by'] = created_by
    body['resource']['created_date_time'] = created_date_time
    body['resource']['display_name'] = display_name
    body['resource']['last_modified_by'] = last_modified_by
    body['resource']['last_modified_date_time'] = last_modified_date_time
    return client.create_submitted_resources(education_class_id=education_class_id,
                                             education_assignment_id=education_assignment_id,
                                             education_submission_id=education_submission_id,
                                             body=body)


def education_education_class_assignment_submission_delete_outcome(client,
                                                                   education_class_id,
                                                                   education_assignment_id,
                                                                   education_submission_id,
                                                                   education_outcome_id,
                                                                   if_match=None):
    return client.delete_outcomes(education_class_id=education_class_id,
                                  education_assignment_id=education_assignment_id,
                                  education_submission_id=education_submission_id,
                                  education_outcome_id=education_outcome_id,
                                  if_match=if_match)


def education_education_class_assignment_submission_delete_resource(client,
                                                                    education_class_id,
                                                                    education_assignment_id,
                                                                    education_submission_id,
                                                                    education_submission_resource_id,
                                                                    if_match=None):
    return client.delete_resources(education_class_id=education_class_id,
                                   education_assignment_id=education_assignment_id,
                                   education_submission_id=education_submission_id,
                                   education_submission_resource_id=education_submission_resource_id,
                                   if_match=if_match)


def education_education_class_assignment_submission_delete_submitted_resource(client,
                                                                              education_class_id,
                                                                              education_assignment_id,
                                                                              education_submission_id,
                                                                              education_submission_resource_id,
                                                                              if_match=None):
    return client.delete_submitted_resources(education_class_id=education_class_id,
                                             education_assignment_id=education_assignment_id,
                                             education_submission_id=education_submission_id,
                                             education_submission_resource_id=education_submission_resource_id,
                                             if_match=if_match)


def education_education_class_assignment_submission_list_outcome(client,
                                                                 education_class_id,
                                                                 education_assignment_id,
                                                                 education_submission_id,
                                                                 orderby=None,
                                                                 select=None,
                                                                 expand=None):
    return client.list_outcomes(education_class_id=education_class_id,
                                education_assignment_id=education_assignment_id,
                                education_submission_id=education_submission_id,
                                orderby=orderby,
                                select=select,
                                expand=expand)


def education_education_class_assignment_submission_list_resource(client,
                                                                  education_class_id,
                                                                  education_assignment_id,
                                                                  education_submission_id,
                                                                  orderby=None,
                                                                  select=None,
                                                                  expand=None):
    return client.list_resources(education_class_id=education_class_id,
                                 education_assignment_id=education_assignment_id,
                                 education_submission_id=education_submission_id,
                                 orderby=orderby,
                                 select=select,
                                 expand=expand)


def education_education_class_assignment_submission_list_submitted_resource(client,
                                                                            education_class_id,
                                                                            education_assignment_id,
                                                                            education_submission_id,
                                                                            orderby=None,
                                                                            select=None,
                                                                            expand=None):
    return client.list_submitted_resources(education_class_id=education_class_id,
                                           education_assignment_id=education_assignment_id,
                                           education_submission_id=education_submission_id,
                                           orderby=orderby,
                                           select=select,
                                           expand=expand)


def education_education_class_assignment_submission_return(client,
                                                           education_class_id,
                                                           education_assignment_id,
                                                           education_submission_id):
    return client.return_method(education_class_id=education_class_id,
                                education_assignment_id=education_assignment_id,
                                education_submission_id=education_submission_id)


def education_education_class_assignment_submission_show_outcome(client,
                                                                 education_class_id,
                                                                 education_assignment_id,
                                                                 education_submission_id,
                                                                 education_outcome_id,
                                                                 select=None,
                                                                 expand=None):
    return client.get_outcomes(education_class_id=education_class_id,
                               education_assignment_id=education_assignment_id,
                               education_submission_id=education_submission_id,
                               education_outcome_id=education_outcome_id,
                               select=select,
                               expand=expand)


def education_education_class_assignment_submission_show_resource(client,
                                                                  education_class_id,
                                                                  education_assignment_id,
                                                                  education_submission_id,
                                                                  education_submission_resource_id,
                                                                  select=None,
                                                                  expand=None):
    return client.get_resources(education_class_id=education_class_id,
                                education_assignment_id=education_assignment_id,
                                education_submission_id=education_submission_id,
                                education_submission_resource_id=education_submission_resource_id,
                                select=select,
                                expand=expand)


def education_education_class_assignment_submission_show_submitted_resource(client,
                                                                            education_class_id,
                                                                            education_assignment_id,
                                                                            education_submission_id,
                                                                            education_submission_resource_id,
                                                                            select=None,
                                                                            expand=None):
    return client.get_submitted_resources(education_class_id=education_class_id,
                                          education_assignment_id=education_assignment_id,
                                          education_submission_id=education_submission_id,
                                          education_submission_resource_id=education_submission_resource_id,
                                          select=select,
                                          expand=expand)


def education_education_class_assignment_submission_submit(client,
                                                           education_class_id,
                                                           education_assignment_id,
                                                           education_submission_id):
    return client.submit(education_class_id=education_class_id,
                         education_assignment_id=education_assignment_id,
                         education_submission_id=education_submission_id)


def education_education_class_assignment_submission_unsubmit(client,
                                                             education_class_id,
                                                             education_assignment_id,
                                                             education_submission_id):
    return client.unsubmit(education_class_id=education_class_id,
                           education_assignment_id=education_assignment_id,
                           education_submission_id=education_submission_id)


def education_education_class_assignment_submission_update_outcome(client,
                                                                   education_class_id,
                                                                   education_assignment_id,
                                                                   education_submission_id,
                                                                   education_outcome_id,
                                                                   id_=None,
                                                                   last_modified_date_time=None,
                                                                   application=None,
                                                                   device=None,
                                                                   user=None):
    body = {}
    body['id'] = id_
    body['last_modified_date_time'] = last_modified_date_time
    body['last_modified_by'] = {}
    body['last_modified_by']['application'] = application
    body['last_modified_by']['device'] = device
    body['last_modified_by']['user'] = user
    return client.update_outcomes(education_class_id=education_class_id,
                                  education_assignment_id=education_assignment_id,
                                  education_submission_id=education_submission_id,
                                  education_outcome_id=education_outcome_id,
                                  body=body)


def education_education_class_assignment_submission_update_resource(client,
                                                                    education_class_id,
                                                                    education_assignment_id,
                                                                    education_submission_id,
                                                                    education_submission_resource_id,
                                                                    id_=None,
                                                                    assignment_resource_url=None,
                                                                    created_by=None,
                                                                    created_date_time=None,
                                                                    display_name=None,
                                                                    last_modified_by=None,
                                                                    last_modified_date_time=None):
    body = {}
    body['id'] = id_
    body['assignment_resource_url'] = assignment_resource_url
    body['resource'] = {}
    body['resource']['created_by'] = created_by
    body['resource']['created_date_time'] = created_date_time
    body['resource']['display_name'] = display_name
    body['resource']['last_modified_by'] = last_modified_by
    body['resource']['last_modified_date_time'] = last_modified_date_time
    return client.update_resources(education_class_id=education_class_id,
                                   education_assignment_id=education_assignment_id,
                                   education_submission_id=education_submission_id,
                                   education_submission_resource_id=education_submission_resource_id,
                                   body=body)


def education_education_class_assignment_submission_update_submitted_resource(client,
                                                                              education_class_id,
                                                                              education_assignment_id,
                                                                              education_submission_id,
                                                                              education_submission_resource_id,
                                                                              id_=None,
                                                                              assignment_resource_url=None,
                                                                              created_by=None,
                                                                              created_date_time=None,
                                                                              display_name=None,
                                                                              last_modified_by=None,
                                                                              last_modified_date_time=None):
    body = {}
    body['id'] = id_
    body['assignment_resource_url'] = assignment_resource_url
    body['resource'] = {}
    body['resource']['created_by'] = created_by
    body['resource']['created_date_time'] = created_date_time
    body['resource']['display_name'] = display_name
    body['resource']['last_modified_by'] = last_modified_by
    body['resource']['last_modified_date_time'] = last_modified_date_time
    return client.update_submitted_resources(education_class_id=education_class_id,
                                             education_assignment_id=education_assignment_id,
                                             education_submission_id=education_submission_id,
                                             education_submission_resource_id=education_submission_resource_id,
                                             body=body)


def education_education_class_member_delta(client,
                                           education_class_id):
    return client.delta(education_class_id=education_class_id)


def education_education_class_school_delta(client,
                                           education_class_id):
    return client.delta(education_class_id=education_class_id)


def education_education_class_teacher_delta(client,
                                            education_class_id):
    return client.delta(education_class_id=education_class_id)


def education_education_me_create_assignment(client,
                                             id_=None,
                                             allow_late_submissions=None,
                                             allow_students_to_add_resources_to_submission=None,
                                             assign_date_time=None,
                                             assigned_date_time=None,
                                             assign_to=None,
                                             class_id=None,
                                             close_date_time=None,
                                             created_date_time=None,
                                             display_name=None,
                                             due_date_time=None,
                                             grading=None,
                                             instructions=None,
                                             last_modified_date_time=None,
                                             status=None,
                                             categories=None,
                                             resources=None,
                                             submissions=None,
                                             microsoft_graph_entity_id=None,
                                             microsoft_graph_education_rubric_created_date_time_created_date_time=None,
                                             description=None,
                                             microsoft_graph_education_rubric_display_name=None,
                                             microsoft_graph_education_assignment_grade_type_grading=None,
                                             microsoft_graph_education_rubric_last_modified_date_time_last_modified_date_time=None,
                                             levels=None,
                                             qualities=None,
                                             application=None,
                                             device=None,
                                             user=None,
                                             microsoft_graph_identity_application=None,
                                             microsoft_graph_identity_device=None,
                                             microsoft_graph_identity_user=None,
                                             application1=None,
                                             device1=None,
                                             user1=None,
                                             application2=None,
                                             device2=None,
                                             user2=None):
    body = {}
    body['id'] = id_
    body['allow_late_submissions'] = allow_late_submissions
    body['allow_students_to_add_resources_to_submission'] = allow_students_to_add_resources_to_submission
    body['assign_date_time'] = assign_date_time
    body['assigned_date_time'] = assigned_date_time
    body['assign_to'] = assign_to
    body['class_id'] = class_id
    body['close_date_time'] = close_date_time
    body['created_date_time'] = created_date_time
    body['display_name'] = display_name
    body['due_date_time'] = due_date_time
    body['grading'] = grading
    body['instructions'] = instructions
    body['last_modified_date_time'] = last_modified_date_time
    body['status'] = status
    body['categories'] = categories
    body['resources'] = resources
    body['submissions'] = submissions
    body['rubric'] = {}
    body['rubric']['id'] = microsoft_graph_entity_id
    body['rubric']['created_date_time'] = microsoft_graph_education_rubric_created_date_time_created_date_time
    body['rubric']['description'] = description
    body['rubric']['display_name'] = microsoft_graph_education_rubric_display_name
    body['rubric']['grading'] = microsoft_graph_education_assignment_grade_type_grading
    body['rubric']['last_modified_date_time'] = microsoft_graph_education_rubric_last_modified_date_time_last_modified_date_time
    body['rubric']['levels'] = levels
    body['rubric']['qualities'] = qualities
    body['rubric']['last_modified_by'] = {}
    body['rubric']['last_modified_by']['application'] = application
    body['rubric']['last_modified_by']['device'] = device
    body['rubric']['last_modified_by']['user'] = user
    body['rubric']['created_by'] = {}
    body['rubric']['created_by']['application'] = microsoft_graph_identity_application
    body['rubric']['created_by']['device'] = microsoft_graph_identity_device
    body['rubric']['created_by']['user'] = microsoft_graph_identity_user
    body['last_modified_by'] = {}
    body['last_modified_by']['application'] = application1
    body['last_modified_by']['device'] = device1
    body['last_modified_by']['user'] = user1
    body['created_by'] = {}
    body['created_by']['application'] = application2
    body['created_by']['device'] = device2
    body['created_by']['user'] = user2
    return client.create_assignments(body=body)


def education_education_me_create_ref_class(client,
                                            body):
    return client.create_ref_classes(body=body)


def education_education_me_create_ref_school(client,
                                             body):
    return client.create_ref_schools(body=body)


def education_education_me_create_ref_taught_class(client,
                                                   body):
    return client.create_ref_taught_classes(body=body)


def education_education_me_create_rubric(client,
                                         id_=None,
                                         created_date_time=None,
                                         description=None,
                                         display_name=None,
                                         grading=None,
                                         last_modified_date_time=None,
                                         levels=None,
                                         qualities=None,
                                         application=None,
                                         device=None,
                                         user=None,
                                         microsoft_graph_identity_application=None,
                                         microsoft_graph_identity_device=None,
                                         microsoft_graph_identity_user=None):
    body = {}
    body['id'] = id_
    body['created_date_time'] = created_date_time
    body['description'] = description
    body['display_name'] = display_name
    body['grading'] = grading
    body['last_modified_date_time'] = last_modified_date_time
    body['levels'] = levels
    body['qualities'] = qualities
    body['last_modified_by'] = {}
    body['last_modified_by']['application'] = application
    body['last_modified_by']['device'] = device
    body['last_modified_by']['user'] = user
    body['created_by'] = {}
    body['created_by']['application'] = microsoft_graph_identity_application
    body['created_by']['device'] = microsoft_graph_identity_device
    body['created_by']['user'] = microsoft_graph_identity_user
    return client.create_rubrics(body=body)


def education_education_me_delete_assignment(client,
                                             education_assignment_id,
                                             if_match=None):
    return client.delete_assignments(education_assignment_id=education_assignment_id,
                                     if_match=if_match)


def education_education_me_delete_ref_user(client,
                                           if_match=None):
    return client.delete_ref_user(if_match=if_match)


def education_education_me_delete_rubric(client,
                                         education_rubric_id,
                                         if_match=None):
    return client.delete_rubrics(education_rubric_id=education_rubric_id,
                                 if_match=if_match)


def education_education_me_list_assignment(client,
                                           orderby=None,
                                           select=None,
                                           expand=None):
    return client.list_assignments(orderby=orderby,
                                   select=select,
                                   expand=expand)


def education_education_me_list_class(client,
                                      orderby=None,
                                      select=None,
                                      expand=None):
    return client.list_classes(orderby=orderby,
                               select=select,
                               expand=expand)


def education_education_me_list_ref_class(client,
                                          orderby=None):
    return client.list_ref_classes(orderby=orderby)


def education_education_me_list_ref_school(client,
                                           orderby=None):
    return client.list_ref_schools(orderby=orderby)


def education_education_me_list_ref_taught_class(client,
                                                 orderby=None):
    return client.list_ref_taught_classes(orderby=orderby)


def education_education_me_list_rubric(client,
                                       orderby=None,
                                       select=None,
                                       expand=None):
    return client.list_rubrics(orderby=orderby,
                               select=select,
                               expand=expand)


def education_education_me_list_school(client,
                                       orderby=None,
                                       select=None,
                                       expand=None):
    return client.list_schools(orderby=orderby,
                               select=select,
                               expand=expand)


def education_education_me_list_taught_class(client,
                                             orderby=None,
                                             select=None,
                                             expand=None):
    return client.list_taught_classes(orderby=orderby,
                                      select=select,
                                      expand=expand)


def education_education_me_set_ref_user(client,
                                        body):
    return client.set_ref_user(body=body)


def education_education_me_show_assignment(client,
                                           education_assignment_id,
                                           select=None,
                                           expand=None):
    return client.get_assignments(education_assignment_id=education_assignment_id,
                                  select=select,
                                  expand=expand)


def education_education_me_show_ref_user(client):
    return client.get_ref_user()


def education_education_me_show_rubric(client,
                                       education_rubric_id,
                                       select=None,
                                       expand=None):
    return client.get_rubrics(education_rubric_id=education_rubric_id,
                              select=select,
                              expand=expand)


def education_education_me_show_user(client,
                                     select=None,
                                     expand=None):
    return client.get_user(select=select,
                           expand=expand)


def education_education_me_update_assignment(client,
                                             education_assignment_id,
                                             id_=None,
                                             allow_late_submissions=None,
                                             allow_students_to_add_resources_to_submission=None,
                                             assign_date_time=None,
                                             assigned_date_time=None,
                                             assign_to=None,
                                             class_id=None,
                                             close_date_time=None,
                                             created_date_time=None,
                                             display_name=None,
                                             due_date_time=None,
                                             grading=None,
                                             instructions=None,
                                             last_modified_date_time=None,
                                             status=None,
                                             categories=None,
                                             resources=None,
                                             submissions=None,
                                             microsoft_graph_entity_id=None,
                                             microsoft_graph_education_rubric_created_date_time_created_date_time=None,
                                             description=None,
                                             microsoft_graph_education_rubric_display_name=None,
                                             microsoft_graph_education_assignment_grade_type_grading=None,
                                             microsoft_graph_education_rubric_last_modified_date_time_last_modified_date_time=None,
                                             levels=None,
                                             qualities=None,
                                             application=None,
                                             device=None,
                                             user=None,
                                             microsoft_graph_identity_application=None,
                                             microsoft_graph_identity_device=None,
                                             microsoft_graph_identity_user=None,
                                             application1=None,
                                             device1=None,
                                             user1=None,
                                             application2=None,
                                             device2=None,
                                             user2=None):
    body = {}
    body['id'] = id_
    body['allow_late_submissions'] = allow_late_submissions
    body['allow_students_to_add_resources_to_submission'] = allow_students_to_add_resources_to_submission
    body['assign_date_time'] = assign_date_time
    body['assigned_date_time'] = assigned_date_time
    body['assign_to'] = assign_to
    body['class_id'] = class_id
    body['close_date_time'] = close_date_time
    body['created_date_time'] = created_date_time
    body['display_name'] = display_name
    body['due_date_time'] = due_date_time
    body['grading'] = grading
    body['instructions'] = instructions
    body['last_modified_date_time'] = last_modified_date_time
    body['status'] = status
    body['categories'] = categories
    body['resources'] = resources
    body['submissions'] = submissions
    body['rubric'] = {}
    body['rubric']['id'] = microsoft_graph_entity_id
    body['rubric']['created_date_time'] = microsoft_graph_education_rubric_created_date_time_created_date_time
    body['rubric']['description'] = description
    body['rubric']['display_name'] = microsoft_graph_education_rubric_display_name
    body['rubric']['grading'] = microsoft_graph_education_assignment_grade_type_grading
    body['rubric']['last_modified_date_time'] = microsoft_graph_education_rubric_last_modified_date_time_last_modified_date_time
    body['rubric']['levels'] = levels
    body['rubric']['qualities'] = qualities
    body['rubric']['last_modified_by'] = {}
    body['rubric']['last_modified_by']['application'] = application
    body['rubric']['last_modified_by']['device'] = device
    body['rubric']['last_modified_by']['user'] = user
    body['rubric']['created_by'] = {}
    body['rubric']['created_by']['application'] = microsoft_graph_identity_application
    body['rubric']['created_by']['device'] = microsoft_graph_identity_device
    body['rubric']['created_by']['user'] = microsoft_graph_identity_user
    body['last_modified_by'] = {}
    body['last_modified_by']['application'] = application1
    body['last_modified_by']['device'] = device1
    body['last_modified_by']['user'] = user1
    body['created_by'] = {}
    body['created_by']['application'] = application2
    body['created_by']['device'] = device2
    body['created_by']['user'] = user2
    return client.update_assignments(education_assignment_id=education_assignment_id,
                                     body=body)


def education_education_me_update_rubric(client,
                                         education_rubric_id,
                                         id_=None,
                                         created_date_time=None,
                                         description=None,
                                         display_name=None,
                                         grading=None,
                                         last_modified_date_time=None,
                                         levels=None,
                                         qualities=None,
                                         application=None,
                                         device=None,
                                         user=None,
                                         microsoft_graph_identity_application=None,
                                         microsoft_graph_identity_device=None,
                                         microsoft_graph_identity_user=None):
    body = {}
    body['id'] = id_
    body['created_date_time'] = created_date_time
    body['description'] = description
    body['display_name'] = display_name
    body['grading'] = grading
    body['last_modified_date_time'] = last_modified_date_time
    body['levels'] = levels
    body['qualities'] = qualities
    body['last_modified_by'] = {}
    body['last_modified_by']['application'] = application
    body['last_modified_by']['device'] = device
    body['last_modified_by']['user'] = user
    body['created_by'] = {}
    body['created_by']['application'] = microsoft_graph_identity_application
    body['created_by']['device'] = microsoft_graph_identity_device
    body['created_by']['user'] = microsoft_graph_identity_user
    return client.update_rubrics(education_rubric_id=education_rubric_id,
                                 body=body)


def education_education_me_assignment_create_category(client,
                                                      education_assignment_id,
                                                      id_=None,
                                                      display_name=None):
    body = {}
    body['id'] = id_
    body['display_name'] = display_name
    return client.create_categories(education_assignment_id=education_assignment_id,
                                    body=body)


def education_education_me_assignment_create_resource(client,
                                                      education_assignment_id,
                                                      id_=None,
                                                      distribute_for_student_work=None,
                                                      created_by=None,
                                                      created_date_time=None,
                                                      display_name=None,
                                                      last_modified_by=None,
                                                      last_modified_date_time=None):
    body = {}
    body['id'] = id_
    body['distribute_for_student_work'] = distribute_for_student_work
    body['resource'] = {}
    body['resource']['created_by'] = created_by
    body['resource']['created_date_time'] = created_date_time
    body['resource']['display_name'] = display_name
    body['resource']['last_modified_by'] = last_modified_by
    body['resource']['last_modified_date_time'] = last_modified_date_time
    return client.create_resources(education_assignment_id=education_assignment_id,
                                   body=body)


def education_education_me_assignment_create_submission(client,
                                                        education_assignment_id,
                                                        id_=None,
                                                        recipient=None,
                                                        released_date_time=None,
                                                        resources_folder_url=None,
                                                        returned_date_time=None,
                                                        status=None,
                                                        submitted_date_time=None,
                                                        unsubmitted_date_time=None,
                                                        outcomes=None,
                                                        resources=None,
                                                        submitted_resources=None,
                                                        application=None,
                                                        device=None,
                                                        user=None,
                                                        microsoft_graph_identity_application=None,
                                                        microsoft_graph_identity_device=None,
                                                        microsoft_graph_identity_user=None,
                                                        application1=None,
                                                        device1=None,
                                                        user1=None,
                                                        application2=None,
                                                        device2=None,
                                                        user2=None):
    body = {}
    body['id'] = id_
    body['recipient'] = recipient
    body['released_date_time'] = released_date_time
    body['resources_folder_url'] = resources_folder_url
    body['returned_date_time'] = returned_date_time
    body['status'] = status
    body['submitted_date_time'] = submitted_date_time
    body['unsubmitted_date_time'] = unsubmitted_date_time
    body['outcomes'] = outcomes
    body['resources'] = resources
    body['submitted_resources'] = submitted_resources
    body['unsubmitted_by'] = {}
    body['unsubmitted_by']['application'] = application
    body['unsubmitted_by']['device'] = device
    body['unsubmitted_by']['user'] = user
    body['submitted_by'] = {}
    body['submitted_by']['application'] = microsoft_graph_identity_application
    body['submitted_by']['device'] = microsoft_graph_identity_device
    body['submitted_by']['user'] = microsoft_graph_identity_user
    body['returned_by'] = {}
    body['returned_by']['application'] = application1
    body['returned_by']['device'] = device1
    body['returned_by']['user'] = user1
    body['released_by'] = {}
    body['released_by']['application'] = application2
    body['released_by']['device'] = device2
    body['released_by']['user'] = user2
    return client.create_submissions(education_assignment_id=education_assignment_id,
                                     body=body)


def education_education_me_assignment_delete_category(client,
                                                      education_assignment_id,
                                                      education_category_id,
                                                      if_match=None):
    return client.delete_categories(education_assignment_id=education_assignment_id,
                                    education_category_id=education_category_id,
                                    if_match=if_match)


def education_education_me_assignment_delete_resource(client,
                                                      education_assignment_id,
                                                      education_assignment_resource_id,
                                                      if_match=None):
    return client.delete_resources(education_assignment_id=education_assignment_id,
                                   education_assignment_resource_id=education_assignment_resource_id,
                                   if_match=if_match)


def education_education_me_assignment_delete_rubric(client,
                                                    education_assignment_id,
                                                    if_match=None):
    return client.delete_rubric(education_assignment_id=education_assignment_id,
                                if_match=if_match)


def education_education_me_assignment_delete_submission(client,
                                                        education_assignment_id,
                                                        education_submission_id,
                                                        if_match=None):
    return client.delete_submissions(education_assignment_id=education_assignment_id,
                                     education_submission_id=education_submission_id,
                                     if_match=if_match)


def education_education_me_assignment_list_category(client,
                                                    education_assignment_id,
                                                    orderby=None,
                                                    select=None,
                                                    expand=None):
    return client.list_categories(education_assignment_id=education_assignment_id,
                                  orderby=orderby,
                                  select=select,
                                  expand=expand)


def education_education_me_assignment_list_resource(client,
                                                    education_assignment_id,
                                                    orderby=None,
                                                    select=None,
                                                    expand=None):
    return client.list_resources(education_assignment_id=education_assignment_id,
                                 orderby=orderby,
                                 select=select,
                                 expand=expand)


def education_education_me_assignment_list_submission(client,
                                                      education_assignment_id,
                                                      orderby=None,
                                                      select=None,
                                                      expand=None):
    return client.list_submissions(education_assignment_id=education_assignment_id,
                                   orderby=orderby,
                                   select=select,
                                   expand=expand)


def education_education_me_assignment_publish(client,
                                              education_assignment_id):
    return client.publish(education_assignment_id=education_assignment_id)


def education_education_me_assignment_show_category(client,
                                                    education_assignment_id,
                                                    education_category_id,
                                                    select=None,
                                                    expand=None):
    return client.get_categories(education_assignment_id=education_assignment_id,
                                 education_category_id=education_category_id,
                                 select=select,
                                 expand=expand)


def education_education_me_assignment_show_resource(client,
                                                    education_assignment_id,
                                                    education_assignment_resource_id,
                                                    select=None,
                                                    expand=None):
    return client.get_resources(education_assignment_id=education_assignment_id,
                                education_assignment_resource_id=education_assignment_resource_id,
                                select=select,
                                expand=expand)


def education_education_me_assignment_show_resource_folder_url(client,
                                                               education_assignment_id):
    return client.get_resources_folder_url(education_assignment_id=education_assignment_id)


def education_education_me_assignment_show_rubric(client,
                                                  education_assignment_id,
                                                  select=None,
                                                  expand=None):
    return client.get_rubric(education_assignment_id=education_assignment_id,
                             select=select,
                             expand=expand)


def education_education_me_assignment_show_submission(client,
                                                      education_assignment_id,
                                                      education_submission_id,
                                                      select=None,
                                                      expand=None):
    return client.get_submissions(education_assignment_id=education_assignment_id,
                                  education_submission_id=education_submission_id,
                                  select=select,
                                  expand=expand)


def education_education_me_assignment_update_category(client,
                                                      education_assignment_id,
                                                      education_category_id,
                                                      id_=None,
                                                      display_name=None):
    body = {}
    body['id'] = id_
    body['display_name'] = display_name
    return client.update_categories(education_assignment_id=education_assignment_id,
                                    education_category_id=education_category_id,
                                    body=body)


def education_education_me_assignment_update_resource(client,
                                                      education_assignment_id,
                                                      education_assignment_resource_id,
                                                      id_=None,
                                                      distribute_for_student_work=None,
                                                      created_by=None,
                                                      created_date_time=None,
                                                      display_name=None,
                                                      last_modified_by=None,
                                                      last_modified_date_time=None):
    body = {}
    body['id'] = id_
    body['distribute_for_student_work'] = distribute_for_student_work
    body['resource'] = {}
    body['resource']['created_by'] = created_by
    body['resource']['created_date_time'] = created_date_time
    body['resource']['display_name'] = display_name
    body['resource']['last_modified_by'] = last_modified_by
    body['resource']['last_modified_date_time'] = last_modified_date_time
    return client.update_resources(education_assignment_id=education_assignment_id,
                                   education_assignment_resource_id=education_assignment_resource_id,
                                   body=body)


def education_education_me_assignment_update_rubric(client,
                                                    education_assignment_id,
                                                    id_=None,
                                                    created_date_time=None,
                                                    description=None,
                                                    display_name=None,
                                                    grading=None,
                                                    last_modified_date_time=None,
                                                    levels=None,
                                                    qualities=None,
                                                    application=None,
                                                    device=None,
                                                    user=None,
                                                    microsoft_graph_identity_application=None,
                                                    microsoft_graph_identity_device=None,
                                                    microsoft_graph_identity_user=None):
    body = {}
    body['id'] = id_
    body['created_date_time'] = created_date_time
    body['description'] = description
    body['display_name'] = display_name
    body['grading'] = grading
    body['last_modified_date_time'] = last_modified_date_time
    body['levels'] = levels
    body['qualities'] = qualities
    body['last_modified_by'] = {}
    body['last_modified_by']['application'] = application
    body['last_modified_by']['device'] = device
    body['last_modified_by']['user'] = user
    body['created_by'] = {}
    body['created_by']['application'] = microsoft_graph_identity_application
    body['created_by']['device'] = microsoft_graph_identity_device
    body['created_by']['user'] = microsoft_graph_identity_user
    return client.update_rubric(education_assignment_id=education_assignment_id,
                                body=body)


def education_education_me_assignment_update_submission(client,
                                                        education_assignment_id,
                                                        education_submission_id,
                                                        id_=None,
                                                        recipient=None,
                                                        released_date_time=None,
                                                        resources_folder_url=None,
                                                        returned_date_time=None,
                                                        status=None,
                                                        submitted_date_time=None,
                                                        unsubmitted_date_time=None,
                                                        outcomes=None,
                                                        resources=None,
                                                        submitted_resources=None,
                                                        application=None,
                                                        device=None,
                                                        user=None,
                                                        microsoft_graph_identity_application=None,
                                                        microsoft_graph_identity_device=None,
                                                        microsoft_graph_identity_user=None,
                                                        application1=None,
                                                        device1=None,
                                                        user1=None,
                                                        application2=None,
                                                        device2=None,
                                                        user2=None):
    body = {}
    body['id'] = id_
    body['recipient'] = recipient
    body['released_date_time'] = released_date_time
    body['resources_folder_url'] = resources_folder_url
    body['returned_date_time'] = returned_date_time
    body['status'] = status
    body['submitted_date_time'] = submitted_date_time
    body['unsubmitted_date_time'] = unsubmitted_date_time
    body['outcomes'] = outcomes
    body['resources'] = resources
    body['submitted_resources'] = submitted_resources
    body['unsubmitted_by'] = {}
    body['unsubmitted_by']['application'] = application
    body['unsubmitted_by']['device'] = device
    body['unsubmitted_by']['user'] = user
    body['submitted_by'] = {}
    body['submitted_by']['application'] = microsoft_graph_identity_application
    body['submitted_by']['device'] = microsoft_graph_identity_device
    body['submitted_by']['user'] = microsoft_graph_identity_user
    body['returned_by'] = {}
    body['returned_by']['application'] = application1
    body['returned_by']['device'] = device1
    body['returned_by']['user'] = user1
    body['released_by'] = {}
    body['released_by']['application'] = application2
    body['released_by']['device'] = device2
    body['released_by']['user'] = user2
    return client.update_submissions(education_assignment_id=education_assignment_id,
                                     education_submission_id=education_submission_id,
                                     body=body)


def education_education_me_assignment_submission_create_outcome(client,
                                                                education_assignment_id,
                                                                education_submission_id,
                                                                id_=None,
                                                                last_modified_date_time=None,
                                                                application=None,
                                                                device=None,
                                                                user=None):
    body = {}
    body['id'] = id_
    body['last_modified_date_time'] = last_modified_date_time
    body['last_modified_by'] = {}
    body['last_modified_by']['application'] = application
    body['last_modified_by']['device'] = device
    body['last_modified_by']['user'] = user
    return client.create_outcomes(education_assignment_id=education_assignment_id,
                                  education_submission_id=education_submission_id,
                                  body=body)


def education_education_me_assignment_submission_create_resource(client,
                                                                 education_assignment_id,
                                                                 education_submission_id,
                                                                 id_=None,
                                                                 assignment_resource_url=None,
                                                                 created_by=None,
                                                                 created_date_time=None,
                                                                 display_name=None,
                                                                 last_modified_by=None,
                                                                 last_modified_date_time=None):
    body = {}
    body['id'] = id_
    body['assignment_resource_url'] = assignment_resource_url
    body['resource'] = {}
    body['resource']['created_by'] = created_by
    body['resource']['created_date_time'] = created_date_time
    body['resource']['display_name'] = display_name
    body['resource']['last_modified_by'] = last_modified_by
    body['resource']['last_modified_date_time'] = last_modified_date_time
    return client.create_resources(education_assignment_id=education_assignment_id,
                                   education_submission_id=education_submission_id,
                                   body=body)


def education_education_me_assignment_submission_create_submitted_resource(client,
                                                                           education_assignment_id,
                                                                           education_submission_id,
                                                                           id_=None,
                                                                           assignment_resource_url=None,
                                                                           created_by=None,
                                                                           created_date_time=None,
                                                                           display_name=None,
                                                                           last_modified_by=None,
                                                                           last_modified_date_time=None):
    body = {}
    body['id'] = id_
    body['assignment_resource_url'] = assignment_resource_url
    body['resource'] = {}
    body['resource']['created_by'] = created_by
    body['resource']['created_date_time'] = created_date_time
    body['resource']['display_name'] = display_name
    body['resource']['last_modified_by'] = last_modified_by
    body['resource']['last_modified_date_time'] = last_modified_date_time
    return client.create_submitted_resources(education_assignment_id=education_assignment_id,
                                             education_submission_id=education_submission_id,
                                             body=body)


def education_education_me_assignment_submission_delete_outcome(client,
                                                                education_assignment_id,
                                                                education_submission_id,
                                                                education_outcome_id,
                                                                if_match=None):
    return client.delete_outcomes(education_assignment_id=education_assignment_id,
                                  education_submission_id=education_submission_id,
                                  education_outcome_id=education_outcome_id,
                                  if_match=if_match)


def education_education_me_assignment_submission_delete_resource(client,
                                                                 education_assignment_id,
                                                                 education_submission_id,
                                                                 education_submission_resource_id,
                                                                 if_match=None):
    return client.delete_resources(education_assignment_id=education_assignment_id,
                                   education_submission_id=education_submission_id,
                                   education_submission_resource_id=education_submission_resource_id,
                                   if_match=if_match)


def education_education_me_assignment_submission_delete_submitted_resource(client,
                                                                           education_assignment_id,
                                                                           education_submission_id,
                                                                           education_submission_resource_id,
                                                                           if_match=None):
    return client.delete_submitted_resources(education_assignment_id=education_assignment_id,
                                             education_submission_id=education_submission_id,
                                             education_submission_resource_id=education_submission_resource_id,
                                             if_match=if_match)


def education_education_me_assignment_submission_list_outcome(client,
                                                              education_assignment_id,
                                                              education_submission_id,
                                                              orderby=None,
                                                              select=None,
                                                              expand=None):
    return client.list_outcomes(education_assignment_id=education_assignment_id,
                                education_submission_id=education_submission_id,
                                orderby=orderby,
                                select=select,
                                expand=expand)


def education_education_me_assignment_submission_list_resource(client,
                                                               education_assignment_id,
                                                               education_submission_id,
                                                               orderby=None,
                                                               select=None,
                                                               expand=None):
    return client.list_resources(education_assignment_id=education_assignment_id,
                                 education_submission_id=education_submission_id,
                                 orderby=orderby,
                                 select=select,
                                 expand=expand)


def education_education_me_assignment_submission_list_submitted_resource(client,
                                                                         education_assignment_id,
                                                                         education_submission_id,
                                                                         orderby=None,
                                                                         select=None,
                                                                         expand=None):
    return client.list_submitted_resources(education_assignment_id=education_assignment_id,
                                           education_submission_id=education_submission_id,
                                           orderby=orderby,
                                           select=select,
                                           expand=expand)


def education_education_me_assignment_submission_return(client,
                                                        education_assignment_id,
                                                        education_submission_id):
    return client.return_method(education_assignment_id=education_assignment_id,
                                education_submission_id=education_submission_id)


def education_education_me_assignment_submission_show_outcome(client,
                                                              education_assignment_id,
                                                              education_submission_id,
                                                              education_outcome_id,
                                                              select=None,
                                                              expand=None):
    return client.get_outcomes(education_assignment_id=education_assignment_id,
                               education_submission_id=education_submission_id,
                               education_outcome_id=education_outcome_id,
                               select=select,
                               expand=expand)


def education_education_me_assignment_submission_show_resource(client,
                                                               education_assignment_id,
                                                               education_submission_id,
                                                               education_submission_resource_id,
                                                               select=None,
                                                               expand=None):
    return client.get_resources(education_assignment_id=education_assignment_id,
                                education_submission_id=education_submission_id,
                                education_submission_resource_id=education_submission_resource_id,
                                select=select,
                                expand=expand)


def education_education_me_assignment_submission_show_submitted_resource(client,
                                                                         education_assignment_id,
                                                                         education_submission_id,
                                                                         education_submission_resource_id,
                                                                         select=None,
                                                                         expand=None):
    return client.get_submitted_resources(education_assignment_id=education_assignment_id,
                                          education_submission_id=education_submission_id,
                                          education_submission_resource_id=education_submission_resource_id,
                                          select=select,
                                          expand=expand)


def education_education_me_assignment_submission_submit(client,
                                                        education_assignment_id,
                                                        education_submission_id):
    return client.submit(education_assignment_id=education_assignment_id,
                         education_submission_id=education_submission_id)


def education_education_me_assignment_submission_unsubmit(client,
                                                          education_assignment_id,
                                                          education_submission_id):
    return client.unsubmit(education_assignment_id=education_assignment_id,
                           education_submission_id=education_submission_id)


def education_education_me_assignment_submission_update_outcome(client,
                                                                education_assignment_id,
                                                                education_submission_id,
                                                                education_outcome_id,
                                                                id_=None,
                                                                last_modified_date_time=None,
                                                                application=None,
                                                                device=None,
                                                                user=None):
    body = {}
    body['id'] = id_
    body['last_modified_date_time'] = last_modified_date_time
    body['last_modified_by'] = {}
    body['last_modified_by']['application'] = application
    body['last_modified_by']['device'] = device
    body['last_modified_by']['user'] = user
    return client.update_outcomes(education_assignment_id=education_assignment_id,
                                  education_submission_id=education_submission_id,
                                  education_outcome_id=education_outcome_id,
                                  body=body)


def education_education_me_assignment_submission_update_resource(client,
                                                                 education_assignment_id,
                                                                 education_submission_id,
                                                                 education_submission_resource_id,
                                                                 id_=None,
                                                                 assignment_resource_url=None,
                                                                 created_by=None,
                                                                 created_date_time=None,
                                                                 display_name=None,
                                                                 last_modified_by=None,
                                                                 last_modified_date_time=None):
    body = {}
    body['id'] = id_
    body['assignment_resource_url'] = assignment_resource_url
    body['resource'] = {}
    body['resource']['created_by'] = created_by
    body['resource']['created_date_time'] = created_date_time
    body['resource']['display_name'] = display_name
    body['resource']['last_modified_by'] = last_modified_by
    body['resource']['last_modified_date_time'] = last_modified_date_time
    return client.update_resources(education_assignment_id=education_assignment_id,
                                   education_submission_id=education_submission_id,
                                   education_submission_resource_id=education_submission_resource_id,
                                   body=body)


def education_education_me_assignment_submission_update_submitted_resource(client,
                                                                           education_assignment_id,
                                                                           education_submission_id,
                                                                           education_submission_resource_id,
                                                                           id_=None,
                                                                           assignment_resource_url=None,
                                                                           created_by=None,
                                                                           created_date_time=None,
                                                                           display_name=None,
                                                                           last_modified_by=None,
                                                                           last_modified_date_time=None):
    body = {}
    body['id'] = id_
    body['assignment_resource_url'] = assignment_resource_url
    body['resource'] = {}
    body['resource']['created_by'] = created_by
    body['resource']['created_date_time'] = created_date_time
    body['resource']['display_name'] = display_name
    body['resource']['last_modified_by'] = last_modified_by
    body['resource']['last_modified_date_time'] = last_modified_date_time
    return client.update_submitted_resources(education_assignment_id=education_assignment_id,
                                             education_submission_id=education_submission_id,
                                             education_submission_resource_id=education_submission_resource_id,
                                             body=body)


def education_education_me_class_delta(client):
    return client.delta()


def education_education_me_school_delta(client):
    return client.delta()


def education_education_me_taught_class_delta(client):
    return client.delta()


def education_education_school_create_ref_class(client,
                                                education_school_id,
                                                body):
    return client.create_ref_classes(education_school_id=education_school_id,
                                     body=body)


def education_education_school_create_ref_user(client,
                                               education_school_id,
                                               body):
    return client.create_ref_users(education_school_id=education_school_id,
                                   body=body)


def education_education_school_delete_ref_administrative_unit(client,
                                                              education_school_id,
                                                              if_match=None):
    return client.delete_ref_administrative_unit(education_school_id=education_school_id,
                                                 if_match=if_match)


def education_education_school_delta(client):
    return client.delta()


def education_education_school_list_class(client,
                                          education_school_id,
                                          orderby=None,
                                          select=None,
                                          expand=None):
    return client.list_classes(education_school_id=education_school_id,
                               orderby=orderby,
                               select=select,
                               expand=expand)


def education_education_school_list_ref_class(client,
                                              education_school_id,
                                              orderby=None):
    return client.list_ref_classes(education_school_id=education_school_id,
                                   orderby=orderby)


def education_education_school_list_ref_user(client,
                                             education_school_id,
                                             orderby=None):
    return client.list_ref_users(education_school_id=education_school_id,
                                 orderby=orderby)


def education_education_school_list_user(client,
                                         education_school_id,
                                         orderby=None,
                                         select=None,
                                         expand=None):
    return client.list_users(education_school_id=education_school_id,
                             orderby=orderby,
                             select=select,
                             expand=expand)


def education_education_school_set_ref_administrative_unit(client,
                                                           education_school_id,
                                                           body):
    return client.set_ref_administrative_unit(education_school_id=education_school_id,
                                              body=body)


def education_education_school_show_administrative_unit(client,
                                                        education_school_id,
                                                        select=None,
                                                        expand=None):
    return client.get_administrative_unit(education_school_id=education_school_id,
                                          select=select,
                                          expand=expand)


def education_education_school_show_ref_administrative_unit(client,
                                                            education_school_id):
    return client.get_ref_administrative_unit(education_school_id=education_school_id)


def education_education_school_class_delta(client,
                                           education_school_id):
    return client.delta(education_school_id=education_school_id)


def education_education_school_user_delta(client,
                                          education_school_id):
    return client.delta(education_school_id=education_school_id)


def education_education_synchronization_profile_create_error(client,
                                                             education_synchronization_profile_id,
                                                             id_=None,
                                                             entry_type=None,
                                                             error_code=None,
                                                             error_message=None,
                                                             joining_value=None,
                                                             recorded_date_time=None,
                                                             reportable_identifier=None):
    body = {}
    body['id'] = id_
    body['entry_type'] = entry_type
    body['error_code'] = error_code
    body['error_message'] = error_message
    body['joining_value'] = joining_value
    body['recorded_date_time'] = recorded_date_time
    body['reportable_identifier'] = reportable_identifier
    return client.create_errors(education_synchronization_profile_id=education_synchronization_profile_id,
                                body=body)


def education_education_synchronization_profile_delete_error(client,
                                                             education_synchronization_profile_id,
                                                             education_synchronization_error_id,
                                                             if_match=None):
    return client.delete_errors(education_synchronization_profile_id=education_synchronization_profile_id,
                                education_synchronization_error_id=education_synchronization_error_id,
                                if_match=if_match)


def education_education_synchronization_profile_delete_profile_status(client,
                                                                      education_synchronization_profile_id,
                                                                      if_match=None):
    return client.delete_profile_status(education_synchronization_profile_id=education_synchronization_profile_id,
                                        if_match=if_match)


def education_education_synchronization_profile_list_error(client,
                                                           education_synchronization_profile_id,
                                                           orderby=None,
                                                           select=None,
                                                           expand=None):
    return client.list_errors(education_synchronization_profile_id=education_synchronization_profile_id,
                              orderby=orderby,
                              select=select,
                              expand=expand)


def education_education_synchronization_profile_pause(client,
                                                      education_synchronization_profile_id):
    return client.pause(education_synchronization_profile_id=education_synchronization_profile_id)


def education_education_synchronization_profile_reset(client,
                                                      education_synchronization_profile_id):
    return client.reset(education_synchronization_profile_id=education_synchronization_profile_id)


def education_education_synchronization_profile_resume(client,
                                                       education_synchronization_profile_id):
    return client.resume(education_synchronization_profile_id=education_synchronization_profile_id)


def education_education_synchronization_profile_show_error(client,
                                                           education_synchronization_profile_id,
                                                           education_synchronization_error_id,
                                                           select=None,
                                                           expand=None):
    return client.get_errors(education_synchronization_profile_id=education_synchronization_profile_id,
                             education_synchronization_error_id=education_synchronization_error_id,
                             select=select,
                             expand=expand)


def education_education_synchronization_profile_show_profile_status(client,
                                                                    education_synchronization_profile_id,
                                                                    select=None,
                                                                    expand=None):
    return client.get_profile_status(education_synchronization_profile_id=education_synchronization_profile_id,
                                     select=select,
                                     expand=expand)


def education_education_synchronization_profile_start(client,
                                                      education_synchronization_profile_id):
    return client.start(education_synchronization_profile_id=education_synchronization_profile_id)


def education_education_synchronization_profile_update_error(client,
                                                             education_synchronization_profile_id,
                                                             education_synchronization_error_id,
                                                             id_=None,
                                                             entry_type=None,
                                                             error_code=None,
                                                             error_message=None,
                                                             joining_value=None,
                                                             recorded_date_time=None,
                                                             reportable_identifier=None):
    body = {}
    body['id'] = id_
    body['entry_type'] = entry_type
    body['error_code'] = error_code
    body['error_message'] = error_message
    body['joining_value'] = joining_value
    body['recorded_date_time'] = recorded_date_time
    body['reportable_identifier'] = reportable_identifier
    return client.update_errors(education_synchronization_profile_id=education_synchronization_profile_id,
                                education_synchronization_error_id=education_synchronization_error_id,
                                body=body)


def education_education_synchronization_profile_update_profile_status(client,
                                                                      education_synchronization_profile_id,
                                                                      id_=None,
                                                                      last_synchronization_date_time=None,
                                                                      status=None):
    body = {}
    body['id'] = id_
    body['last_synchronization_date_time'] = last_synchronization_date_time
    body['status'] = status
    return client.update_profile_status(education_synchronization_profile_id=education_synchronization_profile_id,
                                        body=body)


def education_education_synchronization_profile_upload_url(client,
                                                           education_synchronization_profile_id):
    return client.upload_url(education_synchronization_profile_id=education_synchronization_profile_id)


def education_education_user_create_assignment(client,
                                               education_user_id,
                                               id_=None,
                                               allow_late_submissions=None,
                                               allow_students_to_add_resources_to_submission=None,
                                               assign_date_time=None,
                                               assigned_date_time=None,
                                               assign_to=None,
                                               class_id=None,
                                               close_date_time=None,
                                               created_date_time=None,
                                               display_name=None,
                                               due_date_time=None,
                                               grading=None,
                                               instructions=None,
                                               last_modified_date_time=None,
                                               status=None,
                                               categories=None,
                                               resources=None,
                                               submissions=None,
                                               microsoft_graph_entity_id=None,
                                               microsoft_graph_education_rubric_created_date_time_created_date_time=None,
                                               description=None,
                                               microsoft_graph_education_rubric_display_name=None,
                                               microsoft_graph_education_assignment_grade_type_grading=None,
                                               microsoft_graph_education_rubric_last_modified_date_time_last_modified_date_time=None,
                                               levels=None,
                                               qualities=None,
                                               application=None,
                                               device=None,
                                               user=None,
                                               microsoft_graph_identity_application=None,
                                               microsoft_graph_identity_device=None,
                                               microsoft_graph_identity_user=None,
                                               application1=None,
                                               device1=None,
                                               user1=None,
                                               application2=None,
                                               device2=None,
                                               user2=None):
    body = {}
    body['id'] = id_
    body['allow_late_submissions'] = allow_late_submissions
    body['allow_students_to_add_resources_to_submission'] = allow_students_to_add_resources_to_submission
    body['assign_date_time'] = assign_date_time
    body['assigned_date_time'] = assigned_date_time
    body['assign_to'] = assign_to
    body['class_id'] = class_id
    body['close_date_time'] = close_date_time
    body['created_date_time'] = created_date_time
    body['display_name'] = display_name
    body['due_date_time'] = due_date_time
    body['grading'] = grading
    body['instructions'] = instructions
    body['last_modified_date_time'] = last_modified_date_time
    body['status'] = status
    body['categories'] = categories
    body['resources'] = resources
    body['submissions'] = submissions
    body['rubric'] = {}
    body['rubric']['id'] = microsoft_graph_entity_id
    body['rubric']['created_date_time'] = microsoft_graph_education_rubric_created_date_time_created_date_time
    body['rubric']['description'] = description
    body['rubric']['display_name'] = microsoft_graph_education_rubric_display_name
    body['rubric']['grading'] = microsoft_graph_education_assignment_grade_type_grading
    body['rubric']['last_modified_date_time'] = microsoft_graph_education_rubric_last_modified_date_time_last_modified_date_time
    body['rubric']['levels'] = levels
    body['rubric']['qualities'] = qualities
    body['rubric']['last_modified_by'] = {}
    body['rubric']['last_modified_by']['application'] = application
    body['rubric']['last_modified_by']['device'] = device
    body['rubric']['last_modified_by']['user'] = user
    body['rubric']['created_by'] = {}
    body['rubric']['created_by']['application'] = microsoft_graph_identity_application
    body['rubric']['created_by']['device'] = microsoft_graph_identity_device
    body['rubric']['created_by']['user'] = microsoft_graph_identity_user
    body['last_modified_by'] = {}
    body['last_modified_by']['application'] = application1
    body['last_modified_by']['device'] = device1
    body['last_modified_by']['user'] = user1
    body['created_by'] = {}
    body['created_by']['application'] = application2
    body['created_by']['device'] = device2
    body['created_by']['user'] = user2
    return client.create_assignments(education_user_id=education_user_id,
                                     body=body)


def education_education_user_create_ref_class(client,
                                              education_user_id,
                                              body):
    return client.create_ref_classes(education_user_id=education_user_id,
                                     body=body)


def education_education_user_create_ref_school(client,
                                               education_user_id,
                                               body):
    return client.create_ref_schools(education_user_id=education_user_id,
                                     body=body)


def education_education_user_create_ref_taught_class(client,
                                                     education_user_id,
                                                     body):
    return client.create_ref_taught_classes(education_user_id=education_user_id,
                                            body=body)


def education_education_user_create_rubric(client,
                                           education_user_id,
                                           id_=None,
                                           created_date_time=None,
                                           description=None,
                                           display_name=None,
                                           grading=None,
                                           last_modified_date_time=None,
                                           levels=None,
                                           qualities=None,
                                           application=None,
                                           device=None,
                                           user=None,
                                           microsoft_graph_identity_application=None,
                                           microsoft_graph_identity_device=None,
                                           microsoft_graph_identity_user=None):
    body = {}
    body['id'] = id_
    body['created_date_time'] = created_date_time
    body['description'] = description
    body['display_name'] = display_name
    body['grading'] = grading
    body['last_modified_date_time'] = last_modified_date_time
    body['levels'] = levels
    body['qualities'] = qualities
    body['last_modified_by'] = {}
    body['last_modified_by']['application'] = application
    body['last_modified_by']['device'] = device
    body['last_modified_by']['user'] = user
    body['created_by'] = {}
    body['created_by']['application'] = microsoft_graph_identity_application
    body['created_by']['device'] = microsoft_graph_identity_device
    body['created_by']['user'] = microsoft_graph_identity_user
    return client.create_rubrics(education_user_id=education_user_id,
                                 body=body)


def education_education_user_delete_assignment(client,
                                               education_user_id,
                                               education_assignment_id,
                                               if_match=None):
    return client.delete_assignments(education_user_id=education_user_id,
                                     education_assignment_id=education_assignment_id,
                                     if_match=if_match)


def education_education_user_delete_ref_user(client,
                                             education_user_id,
                                             if_match=None):
    return client.delete_ref_user(education_user_id=education_user_id,
                                  if_match=if_match)


def education_education_user_delete_rubric(client,
                                           education_user_id,
                                           education_rubric_id,
                                           if_match=None):
    return client.delete_rubrics(education_user_id=education_user_id,
                                 education_rubric_id=education_rubric_id,
                                 if_match=if_match)


def education_education_user_delta(client):
    return client.delta()


def education_education_user_list_assignment(client,
                                             education_user_id,
                                             orderby=None,
                                             select=None,
                                             expand=None):
    return client.list_assignments(education_user_id=education_user_id,
                                   orderby=orderby,
                                   select=select,
                                   expand=expand)


def education_education_user_list_class(client,
                                        education_user_id,
                                        orderby=None,
                                        select=None,
                                        expand=None):
    return client.list_classes(education_user_id=education_user_id,
                               orderby=orderby,
                               select=select,
                               expand=expand)


def education_education_user_list_ref_class(client,
                                            education_user_id,
                                            orderby=None):
    return client.list_ref_classes(education_user_id=education_user_id,
                                   orderby=orderby)


def education_education_user_list_ref_school(client,
                                             education_user_id,
                                             orderby=None):
    return client.list_ref_schools(education_user_id=education_user_id,
                                   orderby=orderby)


def education_education_user_list_ref_taught_class(client,
                                                   education_user_id,
                                                   orderby=None):
    return client.list_ref_taught_classes(education_user_id=education_user_id,
                                          orderby=orderby)


def education_education_user_list_rubric(client,
                                         education_user_id,
                                         orderby=None,
                                         select=None,
                                         expand=None):
    return client.list_rubrics(education_user_id=education_user_id,
                               orderby=orderby,
                               select=select,
                               expand=expand)


def education_education_user_list_school(client,
                                         education_user_id,
                                         orderby=None,
                                         select=None,
                                         expand=None):
    return client.list_schools(education_user_id=education_user_id,
                               orderby=orderby,
                               select=select,
                               expand=expand)


def education_education_user_list_taught_class(client,
                                               education_user_id,
                                               orderby=None,
                                               select=None,
                                               expand=None):
    return client.list_taught_classes(education_user_id=education_user_id,
                                      orderby=orderby,
                                      select=select,
                                      expand=expand)


def education_education_user_set_ref_user(client,
                                          education_user_id,
                                          body):
    return client.set_ref_user(education_user_id=education_user_id,
                               body=body)


def education_education_user_show_assignment(client,
                                             education_user_id,
                                             education_assignment_id,
                                             select=None,
                                             expand=None):
    return client.get_assignments(education_user_id=education_user_id,
                                  education_assignment_id=education_assignment_id,
                                  select=select,
                                  expand=expand)


def education_education_user_show_ref_user(client,
                                           education_user_id):
    return client.get_ref_user(education_user_id=education_user_id)


def education_education_user_show_rubric(client,
                                         education_user_id,
                                         education_rubric_id,
                                         select=None,
                                         expand=None):
    return client.get_rubrics(education_user_id=education_user_id,
                              education_rubric_id=education_rubric_id,
                              select=select,
                              expand=expand)


def education_education_user_show_user(client,
                                       education_user_id,
                                       select=None,
                                       expand=None):
    return client.get_user(education_user_id=education_user_id,
                           select=select,
                           expand=expand)


def education_education_user_update_assignment(client,
                                               education_user_id,
                                               education_assignment_id,
                                               id_=None,
                                               allow_late_submissions=None,
                                               allow_students_to_add_resources_to_submission=None,
                                               assign_date_time=None,
                                               assigned_date_time=None,
                                               assign_to=None,
                                               class_id=None,
                                               close_date_time=None,
                                               created_date_time=None,
                                               display_name=None,
                                               due_date_time=None,
                                               grading=None,
                                               instructions=None,
                                               last_modified_date_time=None,
                                               status=None,
                                               categories=None,
                                               resources=None,
                                               submissions=None,
                                               microsoft_graph_entity_id=None,
                                               microsoft_graph_education_rubric_created_date_time_created_date_time=None,
                                               description=None,
                                               microsoft_graph_education_rubric_display_name=None,
                                               microsoft_graph_education_assignment_grade_type_grading=None,
                                               microsoft_graph_education_rubric_last_modified_date_time_last_modified_date_time=None,
                                               levels=None,
                                               qualities=None,
                                               application=None,
                                               device=None,
                                               user=None,
                                               microsoft_graph_identity_application=None,
                                               microsoft_graph_identity_device=None,
                                               microsoft_graph_identity_user=None,
                                               application1=None,
                                               device1=None,
                                               user1=None,
                                               application2=None,
                                               device2=None,
                                               user2=None):
    body = {}
    body['id'] = id_
    body['allow_late_submissions'] = allow_late_submissions
    body['allow_students_to_add_resources_to_submission'] = allow_students_to_add_resources_to_submission
    body['assign_date_time'] = assign_date_time
    body['assigned_date_time'] = assigned_date_time
    body['assign_to'] = assign_to
    body['class_id'] = class_id
    body['close_date_time'] = close_date_time
    body['created_date_time'] = created_date_time
    body['display_name'] = display_name
    body['due_date_time'] = due_date_time
    body['grading'] = grading
    body['instructions'] = instructions
    body['last_modified_date_time'] = last_modified_date_time
    body['status'] = status
    body['categories'] = categories
    body['resources'] = resources
    body['submissions'] = submissions
    body['rubric'] = {}
    body['rubric']['id'] = microsoft_graph_entity_id
    body['rubric']['created_date_time'] = microsoft_graph_education_rubric_created_date_time_created_date_time
    body['rubric']['description'] = description
    body['rubric']['display_name'] = microsoft_graph_education_rubric_display_name
    body['rubric']['grading'] = microsoft_graph_education_assignment_grade_type_grading
    body['rubric']['last_modified_date_time'] = microsoft_graph_education_rubric_last_modified_date_time_last_modified_date_time
    body['rubric']['levels'] = levels
    body['rubric']['qualities'] = qualities
    body['rubric']['last_modified_by'] = {}
    body['rubric']['last_modified_by']['application'] = application
    body['rubric']['last_modified_by']['device'] = device
    body['rubric']['last_modified_by']['user'] = user
    body['rubric']['created_by'] = {}
    body['rubric']['created_by']['application'] = microsoft_graph_identity_application
    body['rubric']['created_by']['device'] = microsoft_graph_identity_device
    body['rubric']['created_by']['user'] = microsoft_graph_identity_user
    body['last_modified_by'] = {}
    body['last_modified_by']['application'] = application1
    body['last_modified_by']['device'] = device1
    body['last_modified_by']['user'] = user1
    body['created_by'] = {}
    body['created_by']['application'] = application2
    body['created_by']['device'] = device2
    body['created_by']['user'] = user2
    return client.update_assignments(education_user_id=education_user_id,
                                     education_assignment_id=education_assignment_id,
                                     body=body)


def education_education_user_update_rubric(client,
                                           education_user_id,
                                           education_rubric_id,
                                           id_=None,
                                           created_date_time=None,
                                           description=None,
                                           display_name=None,
                                           grading=None,
                                           last_modified_date_time=None,
                                           levels=None,
                                           qualities=None,
                                           application=None,
                                           device=None,
                                           user=None,
                                           microsoft_graph_identity_application=None,
                                           microsoft_graph_identity_device=None,
                                           microsoft_graph_identity_user=None):
    body = {}
    body['id'] = id_
    body['created_date_time'] = created_date_time
    body['description'] = description
    body['display_name'] = display_name
    body['grading'] = grading
    body['last_modified_date_time'] = last_modified_date_time
    body['levels'] = levels
    body['qualities'] = qualities
    body['last_modified_by'] = {}
    body['last_modified_by']['application'] = application
    body['last_modified_by']['device'] = device
    body['last_modified_by']['user'] = user
    body['created_by'] = {}
    body['created_by']['application'] = microsoft_graph_identity_application
    body['created_by']['device'] = microsoft_graph_identity_device
    body['created_by']['user'] = microsoft_graph_identity_user
    return client.update_rubrics(education_user_id=education_user_id,
                                 education_rubric_id=education_rubric_id,
                                 body=body)


def education_education_user_assignment_create_category(client,
                                                        education_user_id,
                                                        education_assignment_id,
                                                        id_=None,
                                                        display_name=None):
    body = {}
    body['id'] = id_
    body['display_name'] = display_name
    return client.create_categories(education_user_id=education_user_id,
                                    education_assignment_id=education_assignment_id,
                                    body=body)


def education_education_user_assignment_create_resource(client,
                                                        education_user_id,
                                                        education_assignment_id,
                                                        id_=None,
                                                        distribute_for_student_work=None,
                                                        created_by=None,
                                                        created_date_time=None,
                                                        display_name=None,
                                                        last_modified_by=None,
                                                        last_modified_date_time=None):
    body = {}
    body['id'] = id_
    body['distribute_for_student_work'] = distribute_for_student_work
    body['resource'] = {}
    body['resource']['created_by'] = created_by
    body['resource']['created_date_time'] = created_date_time
    body['resource']['display_name'] = display_name
    body['resource']['last_modified_by'] = last_modified_by
    body['resource']['last_modified_date_time'] = last_modified_date_time
    return client.create_resources(education_user_id=education_user_id,
                                   education_assignment_id=education_assignment_id,
                                   body=body)


def education_education_user_assignment_create_submission(client,
                                                          education_user_id,
                                                          education_assignment_id,
                                                          id_=None,
                                                          recipient=None,
                                                          released_date_time=None,
                                                          resources_folder_url=None,
                                                          returned_date_time=None,
                                                          status=None,
                                                          submitted_date_time=None,
                                                          unsubmitted_date_time=None,
                                                          outcomes=None,
                                                          resources=None,
                                                          submitted_resources=None,
                                                          application=None,
                                                          device=None,
                                                          user=None,
                                                          microsoft_graph_identity_application=None,
                                                          microsoft_graph_identity_device=None,
                                                          microsoft_graph_identity_user=None,
                                                          application1=None,
                                                          device1=None,
                                                          user1=None,
                                                          application2=None,
                                                          device2=None,
                                                          user2=None):
    body = {}
    body['id'] = id_
    body['recipient'] = recipient
    body['released_date_time'] = released_date_time
    body['resources_folder_url'] = resources_folder_url
    body['returned_date_time'] = returned_date_time
    body['status'] = status
    body['submitted_date_time'] = submitted_date_time
    body['unsubmitted_date_time'] = unsubmitted_date_time
    body['outcomes'] = outcomes
    body['resources'] = resources
    body['submitted_resources'] = submitted_resources
    body['unsubmitted_by'] = {}
    body['unsubmitted_by']['application'] = application
    body['unsubmitted_by']['device'] = device
    body['unsubmitted_by']['user'] = user
    body['submitted_by'] = {}
    body['submitted_by']['application'] = microsoft_graph_identity_application
    body['submitted_by']['device'] = microsoft_graph_identity_device
    body['submitted_by']['user'] = microsoft_graph_identity_user
    body['returned_by'] = {}
    body['returned_by']['application'] = application1
    body['returned_by']['device'] = device1
    body['returned_by']['user'] = user1
    body['released_by'] = {}
    body['released_by']['application'] = application2
    body['released_by']['device'] = device2
    body['released_by']['user'] = user2
    return client.create_submissions(education_user_id=education_user_id,
                                     education_assignment_id=education_assignment_id,
                                     body=body)


def education_education_user_assignment_delete_category(client,
                                                        education_user_id,
                                                        education_assignment_id,
                                                        education_category_id,
                                                        if_match=None):
    return client.delete_categories(education_user_id=education_user_id,
                                    education_assignment_id=education_assignment_id,
                                    education_category_id=education_category_id,
                                    if_match=if_match)


def education_education_user_assignment_delete_resource(client,
                                                        education_user_id,
                                                        education_assignment_id,
                                                        education_assignment_resource_id,
                                                        if_match=None):
    return client.delete_resources(education_user_id=education_user_id,
                                   education_assignment_id=education_assignment_id,
                                   education_assignment_resource_id=education_assignment_resource_id,
                                   if_match=if_match)


def education_education_user_assignment_delete_rubric(client,
                                                      education_user_id,
                                                      education_assignment_id,
                                                      if_match=None):
    return client.delete_rubric(education_user_id=education_user_id,
                                education_assignment_id=education_assignment_id,
                                if_match=if_match)


def education_education_user_assignment_delete_submission(client,
                                                          education_user_id,
                                                          education_assignment_id,
                                                          education_submission_id,
                                                          if_match=None):
    return client.delete_submissions(education_user_id=education_user_id,
                                     education_assignment_id=education_assignment_id,
                                     education_submission_id=education_submission_id,
                                     if_match=if_match)


def education_education_user_assignment_list_category(client,
                                                      education_user_id,
                                                      education_assignment_id,
                                                      orderby=None,
                                                      select=None,
                                                      expand=None):
    return client.list_categories(education_user_id=education_user_id,
                                  education_assignment_id=education_assignment_id,
                                  orderby=orderby,
                                  select=select,
                                  expand=expand)


def education_education_user_assignment_list_resource(client,
                                                      education_user_id,
                                                      education_assignment_id,
                                                      orderby=None,
                                                      select=None,
                                                      expand=None):
    return client.list_resources(education_user_id=education_user_id,
                                 education_assignment_id=education_assignment_id,
                                 orderby=orderby,
                                 select=select,
                                 expand=expand)


def education_education_user_assignment_list_submission(client,
                                                        education_user_id,
                                                        education_assignment_id,
                                                        orderby=None,
                                                        select=None,
                                                        expand=None):
    return client.list_submissions(education_user_id=education_user_id,
                                   education_assignment_id=education_assignment_id,
                                   orderby=orderby,
                                   select=select,
                                   expand=expand)


def education_education_user_assignment_publish(client,
                                                education_user_id,
                                                education_assignment_id):
    return client.publish(education_user_id=education_user_id,
                          education_assignment_id=education_assignment_id)


def education_education_user_assignment_show_category(client,
                                                      education_user_id,
                                                      education_assignment_id,
                                                      education_category_id,
                                                      select=None,
                                                      expand=None):
    return client.get_categories(education_user_id=education_user_id,
                                 education_assignment_id=education_assignment_id,
                                 education_category_id=education_category_id,
                                 select=select,
                                 expand=expand)


def education_education_user_assignment_show_resource(client,
                                                      education_user_id,
                                                      education_assignment_id,
                                                      education_assignment_resource_id,
                                                      select=None,
                                                      expand=None):
    return client.get_resources(education_user_id=education_user_id,
                                education_assignment_id=education_assignment_id,
                                education_assignment_resource_id=education_assignment_resource_id,
                                select=select,
                                expand=expand)


def education_education_user_assignment_show_resource_folder_url(client,
                                                                 education_user_id,
                                                                 education_assignment_id):
    return client.get_resources_folder_url(education_user_id=education_user_id,
                                           education_assignment_id=education_assignment_id)


def education_education_user_assignment_show_rubric(client,
                                                    education_user_id,
                                                    education_assignment_id,
                                                    select=None,
                                                    expand=None):
    return client.get_rubric(education_user_id=education_user_id,
                             education_assignment_id=education_assignment_id,
                             select=select,
                             expand=expand)


def education_education_user_assignment_show_submission(client,
                                                        education_user_id,
                                                        education_assignment_id,
                                                        education_submission_id,
                                                        select=None,
                                                        expand=None):
    return client.get_submissions(education_user_id=education_user_id,
                                  education_assignment_id=education_assignment_id,
                                  education_submission_id=education_submission_id,
                                  select=select,
                                  expand=expand)


def education_education_user_assignment_update_category(client,
                                                        education_user_id,
                                                        education_assignment_id,
                                                        education_category_id,
                                                        id_=None,
                                                        display_name=None):
    body = {}
    body['id'] = id_
    body['display_name'] = display_name
    return client.update_categories(education_user_id=education_user_id,
                                    education_assignment_id=education_assignment_id,
                                    education_category_id=education_category_id,
                                    body=body)


def education_education_user_assignment_update_resource(client,
                                                        education_user_id,
                                                        education_assignment_id,
                                                        education_assignment_resource_id,
                                                        id_=None,
                                                        distribute_for_student_work=None,
                                                        created_by=None,
                                                        created_date_time=None,
                                                        display_name=None,
                                                        last_modified_by=None,
                                                        last_modified_date_time=None):
    body = {}
    body['id'] = id_
    body['distribute_for_student_work'] = distribute_for_student_work
    body['resource'] = {}
    body['resource']['created_by'] = created_by
    body['resource']['created_date_time'] = created_date_time
    body['resource']['display_name'] = display_name
    body['resource']['last_modified_by'] = last_modified_by
    body['resource']['last_modified_date_time'] = last_modified_date_time
    return client.update_resources(education_user_id=education_user_id,
                                   education_assignment_id=education_assignment_id,
                                   education_assignment_resource_id=education_assignment_resource_id,
                                   body=body)


def education_education_user_assignment_update_rubric(client,
                                                      education_user_id,
                                                      education_assignment_id,
                                                      id_=None,
                                                      created_date_time=None,
                                                      description=None,
                                                      display_name=None,
                                                      grading=None,
                                                      last_modified_date_time=None,
                                                      levels=None,
                                                      qualities=None,
                                                      application=None,
                                                      device=None,
                                                      user=None,
                                                      microsoft_graph_identity_application=None,
                                                      microsoft_graph_identity_device=None,
                                                      microsoft_graph_identity_user=None):
    body = {}
    body['id'] = id_
    body['created_date_time'] = created_date_time
    body['description'] = description
    body['display_name'] = display_name
    body['grading'] = grading
    body['last_modified_date_time'] = last_modified_date_time
    body['levels'] = levels
    body['qualities'] = qualities
    body['last_modified_by'] = {}
    body['last_modified_by']['application'] = application
    body['last_modified_by']['device'] = device
    body['last_modified_by']['user'] = user
    body['created_by'] = {}
    body['created_by']['application'] = microsoft_graph_identity_application
    body['created_by']['device'] = microsoft_graph_identity_device
    body['created_by']['user'] = microsoft_graph_identity_user
    return client.update_rubric(education_user_id=education_user_id,
                                education_assignment_id=education_assignment_id,
                                body=body)


def education_education_user_assignment_update_submission(client,
                                                          education_user_id,
                                                          education_assignment_id,
                                                          education_submission_id,
                                                          id_=None,
                                                          recipient=None,
                                                          released_date_time=None,
                                                          resources_folder_url=None,
                                                          returned_date_time=None,
                                                          status=None,
                                                          submitted_date_time=None,
                                                          unsubmitted_date_time=None,
                                                          outcomes=None,
                                                          resources=None,
                                                          submitted_resources=None,
                                                          application=None,
                                                          device=None,
                                                          user=None,
                                                          microsoft_graph_identity_application=None,
                                                          microsoft_graph_identity_device=None,
                                                          microsoft_graph_identity_user=None,
                                                          application1=None,
                                                          device1=None,
                                                          user1=None,
                                                          application2=None,
                                                          device2=None,
                                                          user2=None):
    body = {}
    body['id'] = id_
    body['recipient'] = recipient
    body['released_date_time'] = released_date_time
    body['resources_folder_url'] = resources_folder_url
    body['returned_date_time'] = returned_date_time
    body['status'] = status
    body['submitted_date_time'] = submitted_date_time
    body['unsubmitted_date_time'] = unsubmitted_date_time
    body['outcomes'] = outcomes
    body['resources'] = resources
    body['submitted_resources'] = submitted_resources
    body['unsubmitted_by'] = {}
    body['unsubmitted_by']['application'] = application
    body['unsubmitted_by']['device'] = device
    body['unsubmitted_by']['user'] = user
    body['submitted_by'] = {}
    body['submitted_by']['application'] = microsoft_graph_identity_application
    body['submitted_by']['device'] = microsoft_graph_identity_device
    body['submitted_by']['user'] = microsoft_graph_identity_user
    body['returned_by'] = {}
    body['returned_by']['application'] = application1
    body['returned_by']['device'] = device1
    body['returned_by']['user'] = user1
    body['released_by'] = {}
    body['released_by']['application'] = application2
    body['released_by']['device'] = device2
    body['released_by']['user'] = user2
    return client.update_submissions(education_user_id=education_user_id,
                                     education_assignment_id=education_assignment_id,
                                     education_submission_id=education_submission_id,
                                     body=body)


def education_education_user_assignment_submission_create_outcome(client,
                                                                  education_user_id,
                                                                  education_assignment_id,
                                                                  education_submission_id,
                                                                  id_=None,
                                                                  last_modified_date_time=None,
                                                                  application=None,
                                                                  device=None,
                                                                  user=None):
    body = {}
    body['id'] = id_
    body['last_modified_date_time'] = last_modified_date_time
    body['last_modified_by'] = {}
    body['last_modified_by']['application'] = application
    body['last_modified_by']['device'] = device
    body['last_modified_by']['user'] = user
    return client.create_outcomes(education_user_id=education_user_id,
                                  education_assignment_id=education_assignment_id,
                                  education_submission_id=education_submission_id,
                                  body=body)


def education_education_user_assignment_submission_create_resource(client,
                                                                   education_user_id,
                                                                   education_assignment_id,
                                                                   education_submission_id,
                                                                   id_=None,
                                                                   assignment_resource_url=None,
                                                                   created_by=None,
                                                                   created_date_time=None,
                                                                   display_name=None,
                                                                   last_modified_by=None,
                                                                   last_modified_date_time=None):
    body = {}
    body['id'] = id_
    body['assignment_resource_url'] = assignment_resource_url
    body['resource'] = {}
    body['resource']['created_by'] = created_by
    body['resource']['created_date_time'] = created_date_time
    body['resource']['display_name'] = display_name
    body['resource']['last_modified_by'] = last_modified_by
    body['resource']['last_modified_date_time'] = last_modified_date_time
    return client.create_resources(education_user_id=education_user_id,
                                   education_assignment_id=education_assignment_id,
                                   education_submission_id=education_submission_id,
                                   body=body)


def education_education_user_assignment_submission_create_submitted_resource(client,
                                                                             education_user_id,
                                                                             education_assignment_id,
                                                                             education_submission_id,
                                                                             id_=None,
                                                                             assignment_resource_url=None,
                                                                             created_by=None,
                                                                             created_date_time=None,
                                                                             display_name=None,
                                                                             last_modified_by=None,
                                                                             last_modified_date_time=None):
    body = {}
    body['id'] = id_
    body['assignment_resource_url'] = assignment_resource_url
    body['resource'] = {}
    body['resource']['created_by'] = created_by
    body['resource']['created_date_time'] = created_date_time
    body['resource']['display_name'] = display_name
    body['resource']['last_modified_by'] = last_modified_by
    body['resource']['last_modified_date_time'] = last_modified_date_time
    return client.create_submitted_resources(education_user_id=education_user_id,
                                             education_assignment_id=education_assignment_id,
                                             education_submission_id=education_submission_id,
                                             body=body)


def education_education_user_assignment_submission_delete_outcome(client,
                                                                  education_user_id,
                                                                  education_assignment_id,
                                                                  education_submission_id,
                                                                  education_outcome_id,
                                                                  if_match=None):
    return client.delete_outcomes(education_user_id=education_user_id,
                                  education_assignment_id=education_assignment_id,
                                  education_submission_id=education_submission_id,
                                  education_outcome_id=education_outcome_id,
                                  if_match=if_match)


def education_education_user_assignment_submission_delete_resource(client,
                                                                   education_user_id,
                                                                   education_assignment_id,
                                                                   education_submission_id,
                                                                   education_submission_resource_id,
                                                                   if_match=None):
    return client.delete_resources(education_user_id=education_user_id,
                                   education_assignment_id=education_assignment_id,
                                   education_submission_id=education_submission_id,
                                   education_submission_resource_id=education_submission_resource_id,
                                   if_match=if_match)


def education_education_user_assignment_submission_delete_submitted_resource(client,
                                                                             education_user_id,
                                                                             education_assignment_id,
                                                                             education_submission_id,
                                                                             education_submission_resource_id,
                                                                             if_match=None):
    return client.delete_submitted_resources(education_user_id=education_user_id,
                                             education_assignment_id=education_assignment_id,
                                             education_submission_id=education_submission_id,
                                             education_submission_resource_id=education_submission_resource_id,
                                             if_match=if_match)


def education_education_user_assignment_submission_list_outcome(client,
                                                                education_user_id,
                                                                education_assignment_id,
                                                                education_submission_id,
                                                                orderby=None,
                                                                select=None,
                                                                expand=None):
    return client.list_outcomes(education_user_id=education_user_id,
                                education_assignment_id=education_assignment_id,
                                education_submission_id=education_submission_id,
                                orderby=orderby,
                                select=select,
                                expand=expand)


def education_education_user_assignment_submission_list_resource(client,
                                                                 education_user_id,
                                                                 education_assignment_id,
                                                                 education_submission_id,
                                                                 orderby=None,
                                                                 select=None,
                                                                 expand=None):
    return client.list_resources(education_user_id=education_user_id,
                                 education_assignment_id=education_assignment_id,
                                 education_submission_id=education_submission_id,
                                 orderby=orderby,
                                 select=select,
                                 expand=expand)


def education_education_user_assignment_submission_list_submitted_resource(client,
                                                                           education_user_id,
                                                                           education_assignment_id,
                                                                           education_submission_id,
                                                                           orderby=None,
                                                                           select=None,
                                                                           expand=None):
    return client.list_submitted_resources(education_user_id=education_user_id,
                                           education_assignment_id=education_assignment_id,
                                           education_submission_id=education_submission_id,
                                           orderby=orderby,
                                           select=select,
                                           expand=expand)


def education_education_user_assignment_submission_return(client,
                                                          education_user_id,
                                                          education_assignment_id,
                                                          education_submission_id):
    return client.return_method(education_user_id=education_user_id,
                                education_assignment_id=education_assignment_id,
                                education_submission_id=education_submission_id)


def education_education_user_assignment_submission_show_outcome(client,
                                                                education_user_id,
                                                                education_assignment_id,
                                                                education_submission_id,
                                                                education_outcome_id,
                                                                select=None,
                                                                expand=None):
    return client.get_outcomes(education_user_id=education_user_id,
                               education_assignment_id=education_assignment_id,
                               education_submission_id=education_submission_id,
                               education_outcome_id=education_outcome_id,
                               select=select,
                               expand=expand)


def education_education_user_assignment_submission_show_resource(client,
                                                                 education_user_id,
                                                                 education_assignment_id,
                                                                 education_submission_id,
                                                                 education_submission_resource_id,
                                                                 select=None,
                                                                 expand=None):
    return client.get_resources(education_user_id=education_user_id,
                                education_assignment_id=education_assignment_id,
                                education_submission_id=education_submission_id,
                                education_submission_resource_id=education_submission_resource_id,
                                select=select,
                                expand=expand)


def education_education_user_assignment_submission_show_submitted_resource(client,
                                                                           education_user_id,
                                                                           education_assignment_id,
                                                                           education_submission_id,
                                                                           education_submission_resource_id,
                                                                           select=None,
                                                                           expand=None):
    return client.get_submitted_resources(education_user_id=education_user_id,
                                          education_assignment_id=education_assignment_id,
                                          education_submission_id=education_submission_id,
                                          education_submission_resource_id=education_submission_resource_id,
                                          select=select,
                                          expand=expand)


def education_education_user_assignment_submission_submit(client,
                                                          education_user_id,
                                                          education_assignment_id,
                                                          education_submission_id):
    return client.submit(education_user_id=education_user_id,
                         education_assignment_id=education_assignment_id,
                         education_submission_id=education_submission_id)


def education_education_user_assignment_submission_unsubmit(client,
                                                            education_user_id,
                                                            education_assignment_id,
                                                            education_submission_id):
    return client.unsubmit(education_user_id=education_user_id,
                           education_assignment_id=education_assignment_id,
                           education_submission_id=education_submission_id)


def education_education_user_assignment_submission_update_outcome(client,
                                                                  education_user_id,
                                                                  education_assignment_id,
                                                                  education_submission_id,
                                                                  education_outcome_id,
                                                                  id_=None,
                                                                  last_modified_date_time=None,
                                                                  application=None,
                                                                  device=None,
                                                                  user=None):
    body = {}
    body['id'] = id_
    body['last_modified_date_time'] = last_modified_date_time
    body['last_modified_by'] = {}
    body['last_modified_by']['application'] = application
    body['last_modified_by']['device'] = device
    body['last_modified_by']['user'] = user
    return client.update_outcomes(education_user_id=education_user_id,
                                  education_assignment_id=education_assignment_id,
                                  education_submission_id=education_submission_id,
                                  education_outcome_id=education_outcome_id,
                                  body=body)


def education_education_user_assignment_submission_update_resource(client,
                                                                   education_user_id,
                                                                   education_assignment_id,
                                                                   education_submission_id,
                                                                   education_submission_resource_id,
                                                                   id_=None,
                                                                   assignment_resource_url=None,
                                                                   created_by=None,
                                                                   created_date_time=None,
                                                                   display_name=None,
                                                                   last_modified_by=None,
                                                                   last_modified_date_time=None):
    body = {}
    body['id'] = id_
    body['assignment_resource_url'] = assignment_resource_url
    body['resource'] = {}
    body['resource']['created_by'] = created_by
    body['resource']['created_date_time'] = created_date_time
    body['resource']['display_name'] = display_name
    body['resource']['last_modified_by'] = last_modified_by
    body['resource']['last_modified_date_time'] = last_modified_date_time
    return client.update_resources(education_user_id=education_user_id,
                                   education_assignment_id=education_assignment_id,
                                   education_submission_id=education_submission_id,
                                   education_submission_resource_id=education_submission_resource_id,
                                   body=body)


def education_education_user_assignment_submission_update_submitted_resource(client,
                                                                             education_user_id,
                                                                             education_assignment_id,
                                                                             education_submission_id,
                                                                             education_submission_resource_id,
                                                                             id_=None,
                                                                             assignment_resource_url=None,
                                                                             created_by=None,
                                                                             created_date_time=None,
                                                                             display_name=None,
                                                                             last_modified_by=None,
                                                                             last_modified_date_time=None):
    body = {}
    body['id'] = id_
    body['assignment_resource_url'] = assignment_resource_url
    body['resource'] = {}
    body['resource']['created_by'] = created_by
    body['resource']['created_date_time'] = created_date_time
    body['resource']['display_name'] = display_name
    body['resource']['last_modified_by'] = last_modified_by
    body['resource']['last_modified_date_time'] = last_modified_date_time
    return client.update_submitted_resources(education_user_id=education_user_id,
                                             education_assignment_id=education_assignment_id,
                                             education_submission_id=education_submission_id,
                                             education_submission_resource_id=education_submission_resource_id,
                                             body=body)


def education_education_user_class_delta(client,
                                         education_user_id):
    return client.delta(education_user_id=education_user_id)


def education_education_user_school_delta(client,
                                          education_user_id):
    return client.delta(education_user_id=education_user_id)


def education_education_user_taught_class_delta(client,
                                                education_user_id):
    return client.delta(education_user_id=education_user_id)
