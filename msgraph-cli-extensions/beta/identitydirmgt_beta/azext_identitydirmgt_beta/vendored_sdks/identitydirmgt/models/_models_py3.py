# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

import datetime
from typing import Dict, List, Optional, Union

from azure.core.exceptions import HttpResponseError
import msrest.serialization

from ._identity_directory_management_enums import *


class CollectionOfAdministrativeUnit(msrest.serialization.Model):
    """Collection of administrativeUnit.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_directory_management.models.MicrosoftGraphAdministrativeUnit]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAdministrativeUnit]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["MicrosoftGraphAdministrativeUnit"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfAdministrativeUnit, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfAdministrativeUnit0(msrest.serialization.Model):
    """Collection of administrativeUnit.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_directory_management.models.MicrosoftGraphAdministrativeUnit]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphAdministrativeUnit]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["MicrosoftGraphAdministrativeUnit"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfAdministrativeUnit0, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfCommand(msrest.serialization.Model):
    """Collection of command.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_directory_management.models.MicrosoftGraphCommand]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphCommand]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["MicrosoftGraphCommand"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfCommand, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfContract(msrest.serialization.Model):
    """Collection of contract.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_directory_management.models.MicrosoftGraphContract]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphContract]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["MicrosoftGraphContract"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfContract, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfDevice(msrest.serialization.Model):
    """Collection of device.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_directory_management.models.MicrosoftGraphDevice]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphDevice]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["MicrosoftGraphDevice"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfDevice, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfDirectoryObject(msrest.serialization.Model):
    """Collection of directoryObject.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_directory_management.models.MicrosoftGraphDirectoryObject]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphDirectoryObject]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["MicrosoftGraphDirectoryObject"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfDirectoryObject, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfDirectoryObject0(msrest.serialization.Model):
    """Collection of directoryObject.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_directory_management.models.MicrosoftGraphDirectoryObject]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphDirectoryObject]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["MicrosoftGraphDirectoryObject"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfDirectoryObject0, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfDirectoryObject1(msrest.serialization.Model):
    """Collection of directoryObject.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_directory_management.models.MicrosoftGraphDirectoryObject]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphDirectoryObject]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["MicrosoftGraphDirectoryObject"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfDirectoryObject1, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfDirectoryObject10(msrest.serialization.Model):
    """Collection of directoryObject.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_directory_management.models.MicrosoftGraphDirectoryObject]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphDirectoryObject]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["MicrosoftGraphDirectoryObject"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfDirectoryObject10, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfDirectoryObject2(msrest.serialization.Model):
    """Collection of directoryObject.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_directory_management.models.MicrosoftGraphDirectoryObject]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphDirectoryObject]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["MicrosoftGraphDirectoryObject"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfDirectoryObject2, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfDirectoryObject3(msrest.serialization.Model):
    """Collection of directoryObject.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_directory_management.models.MicrosoftGraphDirectoryObject]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphDirectoryObject]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["MicrosoftGraphDirectoryObject"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfDirectoryObject3, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfDirectoryObject4(msrest.serialization.Model):
    """Collection of directoryObject.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_directory_management.models.MicrosoftGraphDirectoryObject]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphDirectoryObject]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["MicrosoftGraphDirectoryObject"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfDirectoryObject4, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfDirectoryObject5(msrest.serialization.Model):
    """Collection of directoryObject.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_directory_management.models.MicrosoftGraphDirectoryObject]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphDirectoryObject]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["MicrosoftGraphDirectoryObject"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfDirectoryObject5, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfDirectoryObject6(msrest.serialization.Model):
    """Collection of directoryObject.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_directory_management.models.MicrosoftGraphDirectoryObject]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphDirectoryObject]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["MicrosoftGraphDirectoryObject"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfDirectoryObject6, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfDirectoryObject7(msrest.serialization.Model):
    """Collection of directoryObject.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_directory_management.models.MicrosoftGraphDirectoryObject]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphDirectoryObject]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["MicrosoftGraphDirectoryObject"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfDirectoryObject7, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfDirectoryObject8(msrest.serialization.Model):
    """Collection of directoryObject.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_directory_management.models.MicrosoftGraphDirectoryObject]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphDirectoryObject]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["MicrosoftGraphDirectoryObject"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfDirectoryObject8, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfDirectoryObject9(msrest.serialization.Model):
    """Collection of directoryObject.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_directory_management.models.MicrosoftGraphDirectoryObject]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphDirectoryObject]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["MicrosoftGraphDirectoryObject"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfDirectoryObject9, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfDirectoryRole(msrest.serialization.Model):
    """Collection of directoryRole.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_directory_management.models.MicrosoftGraphDirectoryRole]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphDirectoryRole]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["MicrosoftGraphDirectoryRole"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfDirectoryRole, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfDirectoryRoleTemplate(msrest.serialization.Model):
    """Collection of directoryRoleTemplate.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_directory_management.models.MicrosoftGraphDirectoryRoleTemplate]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphDirectoryRoleTemplate]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["MicrosoftGraphDirectoryRoleTemplate"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfDirectoryRoleTemplate, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfDirectorySetting(msrest.serialization.Model):
    """Collection of directorySetting.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_directory_management.models.MicrosoftGraphDirectorySetting]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphDirectorySetting]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["MicrosoftGraphDirectorySetting"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfDirectorySetting, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfDirectorySettingTemplate(msrest.serialization.Model):
    """Collection of directorySettingTemplate.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_directory_management.models.MicrosoftGraphDirectorySettingTemplate]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphDirectorySettingTemplate]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["MicrosoftGraphDirectorySettingTemplate"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfDirectorySettingTemplate, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfDomain(msrest.serialization.Model):
    """Collection of domain.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_directory_management.models.MicrosoftGraphDomain]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphDomain]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["MicrosoftGraphDomain"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfDomain, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfDomainDnsRecord(msrest.serialization.Model):
    """Collection of domainDnsRecord.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_directory_management.models.MicrosoftGraphDomainDnsRecord]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphDomainDnsRecord]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["MicrosoftGraphDomainDnsRecord"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfDomainDnsRecord, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfDomainDnsRecord0(msrest.serialization.Model):
    """Collection of domainDnsRecord.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_directory_management.models.MicrosoftGraphDomainDnsRecord]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphDomainDnsRecord]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["MicrosoftGraphDomainDnsRecord"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfDomainDnsRecord0, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfExtension(msrest.serialization.Model):
    """Collection of extension.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_directory_management.models.MicrosoftGraphExtension]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphExtension]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["MicrosoftGraphExtension"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfExtension, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfExtension0(msrest.serialization.Model):
    """Collection of extension.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_directory_management.models.MicrosoftGraphExtension]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphExtension]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["MicrosoftGraphExtension"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfExtension0, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfExtension1(msrest.serialization.Model):
    """Collection of extension.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_directory_management.models.MicrosoftGraphExtension]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphExtension]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["MicrosoftGraphExtension"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfExtension1, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfFeatureRolloutPolicy(msrest.serialization.Model):
    """Collection of featureRolloutPolicy.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_directory_management.models.MicrosoftGraphFeatureRolloutPolicy]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphFeatureRolloutPolicy]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["MicrosoftGraphFeatureRolloutPolicy"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfFeatureRolloutPolicy, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfLinksOfDirectoryObject(msrest.serialization.Model):
    """Collection of links of directoryObject.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[str]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[str]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List[str]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfLinksOfDirectoryObject, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfLinksOfDirectoryObject0(msrest.serialization.Model):
    """Collection of links of directoryObject.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[str]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[str]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List[str]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfLinksOfDirectoryObject0, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfLinksOfDirectoryObject1(msrest.serialization.Model):
    """Collection of links of directoryObject.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[str]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[str]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List[str]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfLinksOfDirectoryObject1, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfLinksOfDirectoryObject2(msrest.serialization.Model):
    """Collection of links of directoryObject.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[str]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[str]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List[str]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfLinksOfDirectoryObject2, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfLinksOfDirectoryObject3(msrest.serialization.Model):
    """Collection of links of directoryObject.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[str]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[str]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List[str]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfLinksOfDirectoryObject3, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfLinksOfDirectoryObject4(msrest.serialization.Model):
    """Collection of links of directoryObject.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[str]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[str]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List[str]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfLinksOfDirectoryObject4, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfLinksOfDirectoryObject5(msrest.serialization.Model):
    """Collection of links of directoryObject.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[str]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[str]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List[str]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfLinksOfDirectoryObject5, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfLinksOfDirectoryObject6(msrest.serialization.Model):
    """Collection of links of directoryObject.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[str]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[str]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List[str]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfLinksOfDirectoryObject6, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfLinksOfDirectoryObject7(msrest.serialization.Model):
    """Collection of links of directoryObject.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[str]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[str]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List[str]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfLinksOfDirectoryObject7, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfLinksOfDirectoryObject8(msrest.serialization.Model):
    """Collection of links of directoryObject.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[str]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[str]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List[str]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfLinksOfDirectoryObject8, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfOrganization(msrest.serialization.Model):
    """Collection of organization.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_directory_management.models.MicrosoftGraphOrganization]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphOrganization]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["MicrosoftGraphOrganization"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfOrganization, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfOrgContact(msrest.serialization.Model):
    """Collection of orgContact.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_directory_management.models.MicrosoftGraphOrgContact]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphOrgContact]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["MicrosoftGraphOrgContact"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfOrgContact, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfProfileCardProperty(msrest.serialization.Model):
    """Collection of profileCardProperty.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_directory_management.models.MicrosoftGraphProfileCardProperty]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphProfileCardProperty]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["MicrosoftGraphProfileCardProperty"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfProfileCardProperty, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfScopedRoleMembership(msrest.serialization.Model):
    """Collection of scopedRoleMembership.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_directory_management.models.MicrosoftGraphScopedRoleMembership]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphScopedRoleMembership]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["MicrosoftGraphScopedRoleMembership"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfScopedRoleMembership, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfScopedRoleMembership0(msrest.serialization.Model):
    """Collection of scopedRoleMembership.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_directory_management.models.MicrosoftGraphScopedRoleMembership]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphScopedRoleMembership]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["MicrosoftGraphScopedRoleMembership"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfScopedRoleMembership0, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfScopedRoleMembership1(msrest.serialization.Model):
    """Collection of scopedRoleMembership.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_directory_management.models.MicrosoftGraphScopedRoleMembership]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphScopedRoleMembership]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["MicrosoftGraphScopedRoleMembership"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfScopedRoleMembership1, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class CollectionOfSubscribedSku(msrest.serialization.Model):
    """Collection of subscribedSku.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~identity_directory_management.models.MicrosoftGraphSubscribedSku]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphSubscribedSku]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        value: Optional[List["MicrosoftGraphSubscribedSku"]] = None,
        odata_next_link: Optional[str] = None,
        **kwargs
    ):
        super(CollectionOfSubscribedSku, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.value = value
        self.odata_next_link = odata_next_link


class MicrosoftGraphEntity(msrest.serialization.Model):
    """entity.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param id: Read-only.
    :type id: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'id': {'key': 'id', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        id: Optional[str] = None,
        **kwargs
    ):
        super(MicrosoftGraphEntity, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.id = id


class MicrosoftGraphDirectoryObject(MicrosoftGraphEntity):
    """Represents an Azure Active Directory object. The directoryObject type is the base type for many other directory entity types.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param deleted_date_time:
    :type deleted_date_time: ~datetime.datetime
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'deleted_date_time': {'key': 'deletedDateTime', 'type': 'iso-8601'},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,
        additional_properties: Optional[Dict[str, object]] = None,
        deleted_date_time: Optional[datetime.datetime] = None,
        **kwargs
    ):
        super(MicrosoftGraphDirectoryObject, self).__init__(id=id, **kwargs)
        self.additional_properties = additional_properties
        self.deleted_date_time = deleted_date_time


class MicrosoftGraphAdministrativeUnit(MicrosoftGraphDirectoryObject):
    """Represents an Azure Active Directory object. The directoryObject type is the base type for many other directory entity types.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param id: Read-only.
    :type id: str
    :param deleted_date_time:
    :type deleted_date_time: ~datetime.datetime
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param description: An optional description for the administrative unit.
    :type description: str
    :param display_name: Display name for the administrative unit.
    :type display_name: str
    :param visibility: Controls whether the administrative unit and its members are hidden or
     public. Can be set to HiddenMembership or Public. If not set, default behavior is Public. When
     set to HiddenMembership, only members of the administrative unit can list other members of the
     adminstrative unit.
    :type visibility: str
    :param members: Users and groups that are members of this Adminsitrative Unit. HTTP Methods:
     GET (list members), POST (add members), DELETE (remove members).
    :type members: list[~identity_directory_management.models.MicrosoftGraphDirectoryObject]
    :param scoped_role_members: Scoped-role members of this Administrative Unit.  HTTP Methods: GET
     (list scopedRoleMemberships), POST (add scopedRoleMembership), DELETE (remove
     scopedRoleMembership).
    :type scoped_role_members:
     list[~identity_directory_management.models.MicrosoftGraphScopedRoleMembership]
    :param extensions:
    :type extensions: list[~identity_directory_management.models.MicrosoftGraphExtension]
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'id': {'key': 'id', 'type': 'str'},
        'deleted_date_time': {'key': 'deletedDateTime', 'type': 'iso-8601'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'description': {'key': 'description', 'type': 'str'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'visibility': {'key': 'visibility', 'type': 'str'},
        'members': {'key': 'members', 'type': '[MicrosoftGraphDirectoryObject]'},
        'scoped_role_members': {'key': 'scopedRoleMembers', 'type': '[MicrosoftGraphScopedRoleMembership]'},
        'extensions': {'key': 'extensions', 'type': '[MicrosoftGraphExtension]'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        id: Optional[str] = None,
        deleted_date_time: Optional[datetime.datetime] = None,
        additional_properties: Optional[Dict[str, object]] = None,
        description: Optional[str] = None,
        display_name: Optional[str] = None,
        visibility: Optional[str] = None,
        members: Optional[List["MicrosoftGraphDirectoryObject"]] = None,
        scoped_role_members: Optional[List["MicrosoftGraphScopedRoleMembership"]] = None,
        extensions: Optional[List["MicrosoftGraphExtension"]] = None,
        **kwargs
    ):
        super(MicrosoftGraphAdministrativeUnit, self).__init__(id=id, deleted_date_time=deleted_date_time, **kwargs)
        self.additional_properties = additional_properties
        self.additional_properties = additional_properties
        self.description = description
        self.display_name = display_name
        self.visibility = visibility
        self.members = members
        self.scoped_role_members = scoped_role_members
        self.extensions = extensions


class MicrosoftGraphAlternativeSecurityId(msrest.serialization.Model):
    """alternativeSecurityId.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param identity_provider: For internal use only.
    :type identity_provider: str
    :param key: For internal use only.
    :type key: bytes
    :param type: For internal use only.
    :type type: int
    """

    _validation = {
        'type': {'maximum': 2147483647, 'minimum': -2147483648},
    }

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'identity_provider': {'key': 'identityProvider', 'type': 'str'},
        'key': {'key': 'key', 'type': 'base64'},
        'type': {'key': 'type', 'type': 'int'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        identity_provider: Optional[str] = None,
        key: Optional[bytes] = None,
        type: Optional[int] = None,
        **kwargs
    ):
        super(MicrosoftGraphAlternativeSecurityId, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.identity_provider = identity_provider
        self.key = key
        self.type = type


class MicrosoftGraphAssignedPlan(msrest.serialization.Model):
    """assignedPlan.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param assigned_date_time: The date and time at which the plan was assigned; for example:
     2013-01-02T19:32:30Z. The Timestamp type represents date and time information using ISO 8601
     format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like
     this: '2014-01-01T00:00:00Z'.
    :type assigned_date_time: ~datetime.datetime
    :param capability_status: For example, 'Enabled'.
    :type capability_status: str
    :param service: The name of the service; for example, 'Exchange'.
    :type service: str
    :param service_plan_id: A GUID that identifies the service plan.
    :type service_plan_id: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'assigned_date_time': {'key': 'assignedDateTime', 'type': 'iso-8601'},
        'capability_status': {'key': 'capabilityStatus', 'type': 'str'},
        'service': {'key': 'service', 'type': 'str'},
        'service_plan_id': {'key': 'servicePlanId', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        assigned_date_time: Optional[datetime.datetime] = None,
        capability_status: Optional[str] = None,
        service: Optional[str] = None,
        service_plan_id: Optional[str] = None,
        **kwargs
    ):
        super(MicrosoftGraphAssignedPlan, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.assigned_date_time = assigned_date_time
        self.capability_status = capability_status
        self.service = service
        self.service_plan_id = service_plan_id


class MicrosoftGraphCertificateAuthority(msrest.serialization.Model):
    """certificateAuthority.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param certificate: Required. The base64 encoded string representing the public certificate.
    :type certificate: bytes
    :param certificate_revocation_list_url: The URL of the certificate revocation list.
    :type certificate_revocation_list_url: str
    :param delta_certificate_revocation_list_url: The URL contains the list of all revoked
     certificates since the last time a full certificate revocaton list was created.
    :type delta_certificate_revocation_list_url: str
    :param is_root_authority: Required. true if the trusted certificate is a root authority, false
     if the trusted certificate is an intermediate authority.
    :type is_root_authority: bool
    :param issuer: The issuer of the certificate, calculated from the certificate value. Read-only.
    :type issuer: str
    :param issuer_ski: The subject key identifier of the certificate, calculated from the
     certificate value. Read-only.
    :type issuer_ski: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'certificate': {'key': 'certificate', 'type': 'base64'},
        'certificate_revocation_list_url': {'key': 'certificateRevocationListUrl', 'type': 'str'},
        'delta_certificate_revocation_list_url': {'key': 'deltaCertificateRevocationListUrl', 'type': 'str'},
        'is_root_authority': {'key': 'isRootAuthority', 'type': 'bool'},
        'issuer': {'key': 'issuer', 'type': 'str'},
        'issuer_ski': {'key': 'issuerSki', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        certificate: Optional[bytes] = None,
        certificate_revocation_list_url: Optional[str] = None,
        delta_certificate_revocation_list_url: Optional[str] = None,
        is_root_authority: Optional[bool] = None,
        issuer: Optional[str] = None,
        issuer_ski: Optional[str] = None,
        **kwargs
    ):
        super(MicrosoftGraphCertificateAuthority, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.certificate = certificate
        self.certificate_revocation_list_url = certificate_revocation_list_url
        self.delta_certificate_revocation_list_url = delta_certificate_revocation_list_url
        self.is_root_authority = is_root_authority
        self.issuer = issuer
        self.issuer_ski = issuer_ski


class MicrosoftGraphCertificateBasedAuthConfiguration(MicrosoftGraphEntity):
    """certificateBasedAuthConfiguration.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param certificate_authorities: Collection of certificate authorities which creates a trusted
     certificate chain.
    :type certificate_authorities:
     list[~identity_directory_management.models.MicrosoftGraphCertificateAuthority]
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'certificate_authorities': {'key': 'certificateAuthorities', 'type': '[MicrosoftGraphCertificateAuthority]'},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,
        additional_properties: Optional[Dict[str, object]] = None,
        certificate_authorities: Optional[List["MicrosoftGraphCertificateAuthority"]] = None,
        **kwargs
    ):
        super(MicrosoftGraphCertificateBasedAuthConfiguration, self).__init__(id=id, **kwargs)
        self.additional_properties = additional_properties
        self.certificate_authorities = certificate_authorities


class MicrosoftGraphCertificateConnectorSetting(msrest.serialization.Model):
    """Certificate connector settings.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param cert_expiry_time: Certificate expire time.
    :type cert_expiry_time: ~datetime.datetime
    :param connector_version: Version of certificate connector.
    :type connector_version: str
    :param enrollment_error: Certificate connector enrollment error.
    :type enrollment_error: str
    :param last_connector_connection_time: Last time certificate connector connected.
    :type last_connector_connection_time: ~datetime.datetime
    :param last_upload_version: Version of last uploaded certificate connector.
    :type last_upload_version: long
    :param status: Certificate connector status.
    :type status: int
    """

    _validation = {
        'status': {'maximum': 2147483647, 'minimum': -2147483648},
    }

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'cert_expiry_time': {'key': 'certExpiryTime', 'type': 'iso-8601'},
        'connector_version': {'key': 'connectorVersion', 'type': 'str'},
        'enrollment_error': {'key': 'enrollmentError', 'type': 'str'},
        'last_connector_connection_time': {'key': 'lastConnectorConnectionTime', 'type': 'iso-8601'},
        'last_upload_version': {'key': 'lastUploadVersion', 'type': 'long'},
        'status': {'key': 'status', 'type': 'int'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        cert_expiry_time: Optional[datetime.datetime] = None,
        connector_version: Optional[str] = None,
        enrollment_error: Optional[str] = None,
        last_connector_connection_time: Optional[datetime.datetime] = None,
        last_upload_version: Optional[int] = None,
        status: Optional[int] = None,
        **kwargs
    ):
        super(MicrosoftGraphCertificateConnectorSetting, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.cert_expiry_time = cert_expiry_time
        self.connector_version = connector_version
        self.enrollment_error = enrollment_error
        self.last_connector_connection_time = last_connector_connection_time
        self.last_upload_version = last_upload_version
        self.status = status


class MicrosoftGraphCommand(MicrosoftGraphEntity):
    """command.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param app_service_name:
    :type app_service_name: str
    :param error:
    :type error: str
    :param package_family_name:
    :type package_family_name: str
    :param payload: payloadRequest.
    :type payload: dict[str, object]
    :param permission_ticket:
    :type permission_ticket: str
    :param post_back_uri:
    :type post_back_uri: str
    :param status:
    :type status: str
    :param type:
    :type type: str
    :param id_responsepayload_id: Read-only.
    :type id_responsepayload_id: str
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'app_service_name': {'key': 'appServiceName', 'type': 'str'},
        'error': {'key': 'error', 'type': 'str'},
        'package_family_name': {'key': 'packageFamilyName', 'type': 'str'},
        'payload': {'key': 'payload', 'type': '{object}'},
        'permission_ticket': {'key': 'permissionTicket', 'type': 'str'},
        'post_back_uri': {'key': 'postBackUri', 'type': 'str'},
        'status': {'key': 'status', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'id_responsepayload_id': {'key': 'responsepayload.id', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,
        additional_properties: Optional[Dict[str, object]] = None,
        app_service_name: Optional[str] = None,
        error: Optional[str] = None,
        package_family_name: Optional[str] = None,
        payload: Optional[Dict[str, object]] = None,
        permission_ticket: Optional[str] = None,
        post_back_uri: Optional[str] = None,
        status: Optional[str] = None,
        type: Optional[str] = None,
        id_responsepayload_id: Optional[str] = None,
        **kwargs
    ):
        super(MicrosoftGraphCommand, self).__init__(id=id, **kwargs)
        self.additional_properties = additional_properties
        self.app_service_name = app_service_name
        self.error = error
        self.package_family_name = package_family_name
        self.payload = payload
        self.permission_ticket = permission_ticket
        self.post_back_uri = post_back_uri
        self.status = status
        self.type = type
        self.id_responsepayload_id = id_responsepayload_id


class MicrosoftGraphContract(MicrosoftGraphDirectoryObject):
    """Represents an Azure Active Directory object. The directoryObject type is the base type for many other directory entity types.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param id: Read-only.
    :type id: str
    :param deleted_date_time:
    :type deleted_date_time: ~datetime.datetime
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param contract_type: Type of contract.Possible values are: SyndicationPartner - Partner that
     exclusively resells and manages O365 and Intune for this customer. They resell and support
     their customers. BreadthPartner - Partner has the ability to provide administrative support for
     this customer. However, the partner is not allowed to resell to the customer.ResellerPartner -
     Partner that is similar to a syndication partner, except that the partner doesn’t have
     exclusive access to a tenant. In the syndication case, the customer cannot buy additional
     direct subscriptions from Microsoft or from other partners.
    :type contract_type: str
    :param customer_id: The unique identifier for the customer tenant referenced by this
     partnership. Corresponds to the id property of the customer tenant's organization resource.
    :type customer_id: str
    :param default_domain_name: A copy of the customer tenant's default domain name. The copy is
     made when the partnership with the customer is established. It is not automatically updated if
     the customer tenant's default domain name changes.
    :type default_domain_name: str
    :param display_name: A copy of the customer tenant's display name. The copy is made when the
     partnership with the customer is established. It is not automatically updated if the customer
     tenant's display name changes.
    :type display_name: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'id': {'key': 'id', 'type': 'str'},
        'deleted_date_time': {'key': 'deletedDateTime', 'type': 'iso-8601'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'contract_type': {'key': 'contractType', 'type': 'str'},
        'customer_id': {'key': 'customerId', 'type': 'str'},
        'default_domain_name': {'key': 'defaultDomainName', 'type': 'str'},
        'display_name': {'key': 'displayName', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        id: Optional[str] = None,
        deleted_date_time: Optional[datetime.datetime] = None,
        additional_properties: Optional[Dict[str, object]] = None,
        contract_type: Optional[str] = None,
        customer_id: Optional[str] = None,
        default_domain_name: Optional[str] = None,
        display_name: Optional[str] = None,
        **kwargs
    ):
        super(MicrosoftGraphContract, self).__init__(id=id, deleted_date_time=deleted_date_time, **kwargs)
        self.additional_properties = additional_properties
        self.additional_properties = additional_properties
        self.contract_type = contract_type
        self.customer_id = customer_id
        self.default_domain_name = default_domain_name
        self.display_name = display_name


class MicrosoftGraphDevice(MicrosoftGraphDirectoryObject):
    """Represents an Azure Active Directory object. The directoryObject type is the base type for many other directory entity types.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param id: Read-only.
    :type id: str
    :param deleted_date_time:
    :type deleted_date_time: ~datetime.datetime
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param account_enabled: true if the account is enabled; otherwise, false. Required.
    :type account_enabled: bool
    :param alternative_security_ids: For internal use only. Not nullable.
    :type alternative_security_ids:
     list[~identity_directory_management.models.MicrosoftGraphAlternativeSecurityId]
    :param approximate_last_sign_in_date_time: The timestamp type represents date and time
     information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan
     1, 2014 would look like this: '2014-01-01T00:00:00Z'. Read-only.
    :type approximate_last_sign_in_date_time: ~datetime.datetime
    :param compliance_expiration_date_time: The timestamp when the device is no longer deemed
     compliant. The timestamp type represents date and time information using ISO 8601 format and is
     always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this:
     '2014-01-01T00:00:00Z'. Read-only.
    :type compliance_expiration_date_time: ~datetime.datetime
    :param device_category:
    :type device_category: str
    :param device_id: Unique identifier set by Azure Device Registration Service at the time of
     registration.
    :type device_id: str
    :param device_metadata: For internal use only. Set to null.
    :type device_metadata: str
    :param device_ownership:
    :type device_ownership: str
    :param device_version: For internal use only.
    :type device_version: int
    :param display_name: The display name for the device. Required.
    :type display_name: str
    :param domain_name:
    :type domain_name: str
    :param enrollment_profile_name:
    :type enrollment_profile_name: str
    :param enrollment_type:
    :type enrollment_type: str
    :param extension_attributes: onPremisesExtensionAttributes.
    :type extension_attributes:
     ~identity_directory_management.models.MicrosoftGraphOnPremisesExtensionAttributes
    :param is_compliant: true if the device complies with Mobile Device Management (MDM) policies;
     otherwise, false. Read-only. This can only be updated by Intune for any device OS type or by an
     approved MDM app for Windows OS devices.
    :type is_compliant: bool
    :param is_managed: true if the device is managed by a Mobile Device Management (MDM) app;
     otherwise, false. This can only be updated by Intune for any device OS type or by an approved
     MDM app for Windows OS devices.
    :type is_managed: bool
    :param is_rooted:
    :type is_rooted: bool
    :param management_type:
    :type management_type: str
    :param on_premises_last_sync_date_time: The last time at which the object was synced with the
     on-premises directory. The Timestamp type represents date and time information using ISO 8601
     format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like
     this: '2014-01-01T00:00:00Z' Read-only.
    :type on_premises_last_sync_date_time: ~datetime.datetime
    :param on_premises_sync_enabled: true if this object is synced from an on-premises directory;
     false if this object was originally synced from an on-premises directory but is no longer
     synced; null if this object has never been synced from an on-premises directory (default).
     Read-only.
    :type on_premises_sync_enabled: bool
    :param operating_system: The type of operating system on the device. Required.
    :type operating_system: str
    :param operating_system_version: The version of the operating system on the device. Required.
    :type operating_system_version: str
    :param physical_ids: For internal use only. Not nullable.
    :type physical_ids: list[str]
    :param profile_type: The profile type of the device. Possible values:RegisteredDevice
     (default)SecureVMPrinterSharedIoT.
    :type profile_type: str
    :param registration_date_time:
    :type registration_date_time: ~datetime.datetime
    :param system_labels: List of labels applied to the device by the system.
    :type system_labels: list[str]
    :param trust_type: Type of trust for the joined device. Read-only. Possible values: Workplace -
     indicates bring your own personal devicesAzureAd - Cloud only joined devicesServerAd - on-
     premises domain joined devices joined to Azure AD. For more details, see Introduction to device
     management in Azure Active Directory.
    :type trust_type: str
    :param kind:
    :type kind: str
    :param manufacturer: Manufacturer of the device. Read-only.
    :type manufacturer: str
    :param model: Model of the device. Read-only.
    :type model: str
    :param name:
    :type name: str
    :param platform:
    :type platform: str
    :param status:
    :type status: str
    :param member_of: Groups that this group is a member of. HTTP Methods: GET (supported for all
     groups). Read-only. Nullable.
    :type member_of: list[~identity_directory_management.models.MicrosoftGraphDirectoryObject]
    :param registered_owners: The user that cloud joined the device or registered their personal
     device. The registered owner is set at the time of registration. Currently, there can be only
     one owner. Read-only. Nullable.
    :type registered_owners:
     list[~identity_directory_management.models.MicrosoftGraphDirectoryObject]
    :param registered_users: Collection of registered users of the device. For cloud joined devices
     and registered personal devices, registered users are set to the same value as registered
     owners at the time of registration. Read-only. Nullable.
    :type registered_users:
     list[~identity_directory_management.models.MicrosoftGraphDirectoryObject]
    :param transitive_member_of:
    :type transitive_member_of:
     list[~identity_directory_management.models.MicrosoftGraphDirectoryObject]
    :param extensions: The collection of open extensions defined for the device. Read-only.
     Nullable.
    :type extensions: list[~identity_directory_management.models.MicrosoftGraphExtension]
    :param commands:
    :type commands: list[~identity_directory_management.models.MicrosoftGraphCommand]
    """

    _validation = {
        'device_version': {'maximum': 2147483647, 'minimum': -2147483648},
    }

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'id': {'key': 'id', 'type': 'str'},
        'deleted_date_time': {'key': 'deletedDateTime', 'type': 'iso-8601'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'account_enabled': {'key': 'accountEnabled', 'type': 'bool'},
        'alternative_security_ids': {'key': 'alternativeSecurityIds', 'type': '[MicrosoftGraphAlternativeSecurityId]'},
        'approximate_last_sign_in_date_time': {'key': 'approximateLastSignInDateTime', 'type': 'iso-8601'},
        'compliance_expiration_date_time': {'key': 'complianceExpirationDateTime', 'type': 'iso-8601'},
        'device_category': {'key': 'deviceCategory', 'type': 'str'},
        'device_id': {'key': 'deviceId', 'type': 'str'},
        'device_metadata': {'key': 'deviceMetadata', 'type': 'str'},
        'device_ownership': {'key': 'deviceOwnership', 'type': 'str'},
        'device_version': {'key': 'deviceVersion', 'type': 'int'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'domain_name': {'key': 'domainName', 'type': 'str'},
        'enrollment_profile_name': {'key': 'enrollmentProfileName', 'type': 'str'},
        'enrollment_type': {'key': 'enrollmentType', 'type': 'str'},
        'extension_attributes': {'key': 'extensionAttributes', 'type': 'MicrosoftGraphOnPremisesExtensionAttributes'},
        'is_compliant': {'key': 'isCompliant', 'type': 'bool'},
        'is_managed': {'key': 'isManaged', 'type': 'bool'},
        'is_rooted': {'key': 'isRooted', 'type': 'bool'},
        'management_type': {'key': 'managementType', 'type': 'str'},
        'on_premises_last_sync_date_time': {'key': 'onPremisesLastSyncDateTime', 'type': 'iso-8601'},
        'on_premises_sync_enabled': {'key': 'onPremisesSyncEnabled', 'type': 'bool'},
        'operating_system': {'key': 'operatingSystem', 'type': 'str'},
        'operating_system_version': {'key': 'operatingSystemVersion', 'type': 'str'},
        'physical_ids': {'key': 'physicalIds', 'type': '[str]'},
        'profile_type': {'key': 'profileType', 'type': 'str'},
        'registration_date_time': {'key': 'registrationDateTime', 'type': 'iso-8601'},
        'system_labels': {'key': 'systemLabels', 'type': '[str]'},
        'trust_type': {'key': 'trustType', 'type': 'str'},
        'kind': {'key': 'kind', 'type': 'str'},
        'manufacturer': {'key': 'manufacturer', 'type': 'str'},
        'model': {'key': 'model', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'platform': {'key': 'platform', 'type': 'str'},
        'status': {'key': 'status', 'type': 'str'},
        'member_of': {'key': 'memberOf', 'type': '[MicrosoftGraphDirectoryObject]'},
        'registered_owners': {'key': 'registeredOwners', 'type': '[MicrosoftGraphDirectoryObject]'},
        'registered_users': {'key': 'registeredUsers', 'type': '[MicrosoftGraphDirectoryObject]'},
        'transitive_member_of': {'key': 'transitiveMemberOf', 'type': '[MicrosoftGraphDirectoryObject]'},
        'extensions': {'key': 'extensions', 'type': '[MicrosoftGraphExtension]'},
        'commands': {'key': 'commands', 'type': '[MicrosoftGraphCommand]'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        id: Optional[str] = None,
        deleted_date_time: Optional[datetime.datetime] = None,
        additional_properties: Optional[Dict[str, object]] = None,
        account_enabled: Optional[bool] = None,
        alternative_security_ids: Optional[List["MicrosoftGraphAlternativeSecurityId"]] = None,
        approximate_last_sign_in_date_time: Optional[datetime.datetime] = None,
        compliance_expiration_date_time: Optional[datetime.datetime] = None,
        device_category: Optional[str] = None,
        device_id: Optional[str] = None,
        device_metadata: Optional[str] = None,
        device_ownership: Optional[str] = None,
        device_version: Optional[int] = None,
        display_name: Optional[str] = None,
        domain_name: Optional[str] = None,
        enrollment_profile_name: Optional[str] = None,
        enrollment_type: Optional[str] = None,
        extension_attributes: Optional["MicrosoftGraphOnPremisesExtensionAttributes"] = None,
        is_compliant: Optional[bool] = None,
        is_managed: Optional[bool] = None,
        is_rooted: Optional[bool] = None,
        management_type: Optional[str] = None,
        on_premises_last_sync_date_time: Optional[datetime.datetime] = None,
        on_premises_sync_enabled: Optional[bool] = None,
        operating_system: Optional[str] = None,
        operating_system_version: Optional[str] = None,
        physical_ids: Optional[List[str]] = None,
        profile_type: Optional[str] = None,
        registration_date_time: Optional[datetime.datetime] = None,
        system_labels: Optional[List[str]] = None,
        trust_type: Optional[str] = None,
        kind: Optional[str] = None,
        manufacturer: Optional[str] = None,
        model: Optional[str] = None,
        name: Optional[str] = None,
        platform: Optional[str] = None,
        status: Optional[str] = None,
        member_of: Optional[List["MicrosoftGraphDirectoryObject"]] = None,
        registered_owners: Optional[List["MicrosoftGraphDirectoryObject"]] = None,
        registered_users: Optional[List["MicrosoftGraphDirectoryObject"]] = None,
        transitive_member_of: Optional[List["MicrosoftGraphDirectoryObject"]] = None,
        extensions: Optional[List["MicrosoftGraphExtension"]] = None,
        commands: Optional[List["MicrosoftGraphCommand"]] = None,
        **kwargs
    ):
        super(MicrosoftGraphDevice, self).__init__(id=id, deleted_date_time=deleted_date_time, **kwargs)
        self.additional_properties = additional_properties
        self.additional_properties = additional_properties
        self.account_enabled = account_enabled
        self.alternative_security_ids = alternative_security_ids
        self.approximate_last_sign_in_date_time = approximate_last_sign_in_date_time
        self.compliance_expiration_date_time = compliance_expiration_date_time
        self.device_category = device_category
        self.device_id = device_id
        self.device_metadata = device_metadata
        self.device_ownership = device_ownership
        self.device_version = device_version
        self.display_name = display_name
        self.domain_name = domain_name
        self.enrollment_profile_name = enrollment_profile_name
        self.enrollment_type = enrollment_type
        self.extension_attributes = extension_attributes
        self.is_compliant = is_compliant
        self.is_managed = is_managed
        self.is_rooted = is_rooted
        self.management_type = management_type
        self.on_premises_last_sync_date_time = on_premises_last_sync_date_time
        self.on_premises_sync_enabled = on_premises_sync_enabled
        self.operating_system = operating_system
        self.operating_system_version = operating_system_version
        self.physical_ids = physical_ids
        self.profile_type = profile_type
        self.registration_date_time = registration_date_time
        self.system_labels = system_labels
        self.trust_type = trust_type
        self.kind = kind
        self.manufacturer = manufacturer
        self.model = model
        self.name = name
        self.platform = platform
        self.status = status
        self.member_of = member_of
        self.registered_owners = registered_owners
        self.registered_users = registered_users
        self.transitive_member_of = transitive_member_of
        self.extensions = extensions
        self.commands = commands


class MicrosoftGraphDirectory(MicrosoftGraphEntity):
    """directory.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param administrative_units:
    :type administrative_units:
     list[~identity_directory_management.models.MicrosoftGraphAdministrativeUnit]
    :param deleted_items: Recently deleted items. Read-only. Nullable.
    :type deleted_items: list[~identity_directory_management.models.MicrosoftGraphDirectoryObject]
    :param feature_rollout_policies:
    :type feature_rollout_policies:
     list[~identity_directory_management.models.MicrosoftGraphFeatureRolloutPolicy]
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'administrative_units': {'key': 'administrativeUnits', 'type': '[MicrosoftGraphAdministrativeUnit]'},
        'deleted_items': {'key': 'deletedItems', 'type': '[MicrosoftGraphDirectoryObject]'},
        'feature_rollout_policies': {'key': 'featureRolloutPolicies', 'type': '[MicrosoftGraphFeatureRolloutPolicy]'},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,
        additional_properties: Optional[Dict[str, object]] = None,
        administrative_units: Optional[List["MicrosoftGraphAdministrativeUnit"]] = None,
        deleted_items: Optional[List["MicrosoftGraphDirectoryObject"]] = None,
        feature_rollout_policies: Optional[List["MicrosoftGraphFeatureRolloutPolicy"]] = None,
        **kwargs
    ):
        super(MicrosoftGraphDirectory, self).__init__(id=id, **kwargs)
        self.additional_properties = additional_properties
        self.administrative_units = administrative_units
        self.deleted_items = deleted_items
        self.feature_rollout_policies = feature_rollout_policies


class MicrosoftGraphDirectoryRole(MicrosoftGraphDirectoryObject):
    """Represents an Azure Active Directory object. The directoryObject type is the base type for many other directory entity types.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param id: Read-only.
    :type id: str
    :param deleted_date_time:
    :type deleted_date_time: ~datetime.datetime
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param description: The description for the directory role. Read-only.
    :type description: str
    :param display_name: The display name for the directory role. Read-only.
    :type display_name: str
    :param role_template_id: The id of the directoryRoleTemplate that this role is based on. The
     property must be specified when activating a directory role in a tenant with a POST operation.
     After the directory role has been activated, the property is read only.
    :type role_template_id: str
    :param members: Users that are members of this directory role. HTTP Methods: GET, POST, DELETE.
     Read-only. Nullable.
    :type members: list[~identity_directory_management.models.MicrosoftGraphDirectoryObject]
    :param scoped_members:
    :type scoped_members:
     list[~identity_directory_management.models.MicrosoftGraphScopedRoleMembership]
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'id': {'key': 'id', 'type': 'str'},
        'deleted_date_time': {'key': 'deletedDateTime', 'type': 'iso-8601'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'description': {'key': 'description', 'type': 'str'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'role_template_id': {'key': 'roleTemplateId', 'type': 'str'},
        'members': {'key': 'members', 'type': '[MicrosoftGraphDirectoryObject]'},
        'scoped_members': {'key': 'scopedMembers', 'type': '[MicrosoftGraphScopedRoleMembership]'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        id: Optional[str] = None,
        deleted_date_time: Optional[datetime.datetime] = None,
        additional_properties: Optional[Dict[str, object]] = None,
        description: Optional[str] = None,
        display_name: Optional[str] = None,
        role_template_id: Optional[str] = None,
        members: Optional[List["MicrosoftGraphDirectoryObject"]] = None,
        scoped_members: Optional[List["MicrosoftGraphScopedRoleMembership"]] = None,
        **kwargs
    ):
        super(MicrosoftGraphDirectoryRole, self).__init__(id=id, deleted_date_time=deleted_date_time, **kwargs)
        self.additional_properties = additional_properties
        self.additional_properties = additional_properties
        self.description = description
        self.display_name = display_name
        self.role_template_id = role_template_id
        self.members = members
        self.scoped_members = scoped_members


class MicrosoftGraphDirectoryRoleTemplate(MicrosoftGraphDirectoryObject):
    """Represents an Azure Active Directory object. The directoryObject type is the base type for many other directory entity types.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param id: Read-only.
    :type id: str
    :param deleted_date_time:
    :type deleted_date_time: ~datetime.datetime
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param description: The description to set for the directory role. Read-only.
    :type description: str
    :param display_name: The display name to set for the directory role. Read-only.
    :type display_name: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'id': {'key': 'id', 'type': 'str'},
        'deleted_date_time': {'key': 'deletedDateTime', 'type': 'iso-8601'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'description': {'key': 'description', 'type': 'str'},
        'display_name': {'key': 'displayName', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        id: Optional[str] = None,
        deleted_date_time: Optional[datetime.datetime] = None,
        additional_properties: Optional[Dict[str, object]] = None,
        description: Optional[str] = None,
        display_name: Optional[str] = None,
        **kwargs
    ):
        super(MicrosoftGraphDirectoryRoleTemplate, self).__init__(id=id, deleted_date_time=deleted_date_time, **kwargs)
        self.additional_properties = additional_properties
        self.additional_properties = additional_properties
        self.description = description
        self.display_name = display_name


class MicrosoftGraphDirectorySetting(MicrosoftGraphEntity):
    """directorySetting.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param display_name:
    :type display_name: str
    :param template_id:
    :type template_id: str
    :param values:
    :type values: list[~identity_directory_management.models.MicrosoftGraphSettingValue]
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'template_id': {'key': 'templateId', 'type': 'str'},
        'values': {'key': 'values', 'type': '[MicrosoftGraphSettingValue]'},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,
        additional_properties: Optional[Dict[str, object]] = None,
        display_name: Optional[str] = None,
        template_id: Optional[str] = None,
        values: Optional[List["MicrosoftGraphSettingValue"]] = None,
        **kwargs
    ):
        super(MicrosoftGraphDirectorySetting, self).__init__(id=id, **kwargs)
        self.additional_properties = additional_properties
        self.display_name = display_name
        self.template_id = template_id
        self.values = values


class MicrosoftGraphDirectorySettingTemplate(MicrosoftGraphDirectoryObject):
    """Represents an Azure Active Directory object. The directoryObject type is the base type for many other directory entity types.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param id: Read-only.
    :type id: str
    :param deleted_date_time:
    :type deleted_date_time: ~datetime.datetime
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param description:
    :type description: str
    :param display_name:
    :type display_name: str
    :param values:
    :type values: list[~identity_directory_management.models.MicrosoftGraphSettingTemplateValue]
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'id': {'key': 'id', 'type': 'str'},
        'deleted_date_time': {'key': 'deletedDateTime', 'type': 'iso-8601'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'description': {'key': 'description', 'type': 'str'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'values': {'key': 'values', 'type': '[MicrosoftGraphSettingTemplateValue]'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        id: Optional[str] = None,
        deleted_date_time: Optional[datetime.datetime] = None,
        additional_properties: Optional[Dict[str, object]] = None,
        description: Optional[str] = None,
        display_name: Optional[str] = None,
        values: Optional[List["MicrosoftGraphSettingTemplateValue"]] = None,
        **kwargs
    ):
        super(MicrosoftGraphDirectorySettingTemplate, self).__init__(id=id, deleted_date_time=deleted_date_time, **kwargs)
        self.additional_properties = additional_properties
        self.additional_properties = additional_properties
        self.description = description
        self.display_name = display_name
        self.values = values


class MicrosoftGraphDirectorySizeQuota(msrest.serialization.Model):
    """directorySizeQuota.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param total:
    :type total: int
    :param used:
    :type used: int
    """

    _validation = {
        'total': {'maximum': 2147483647, 'minimum': -2147483648},
        'used': {'maximum': 2147483647, 'minimum': -2147483648},
    }

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'total': {'key': 'total', 'type': 'int'},
        'used': {'key': 'used', 'type': 'int'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        total: Optional[int] = None,
        used: Optional[int] = None,
        **kwargs
    ):
        super(MicrosoftGraphDirectorySizeQuota, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.total = total
        self.used = used


class MicrosoftGraphDisplayNameLocalization(msrest.serialization.Model):
    """displayNameLocalization.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param display_name:
    :type display_name: str
    :param language_tag:
    :type language_tag: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'language_tag': {'key': 'languageTag', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        display_name: Optional[str] = None,
        language_tag: Optional[str] = None,
        **kwargs
    ):
        super(MicrosoftGraphDisplayNameLocalization, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.display_name = display_name
        self.language_tag = language_tag


class MicrosoftGraphDomain(MicrosoftGraphEntity):
    """domain.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param authentication_type: Indicates the configured authentication type for the domain. The
     value is either Managed or Federated. Managed indicates a cloud managed domain where Azure AD
     performs user authentication.Federated indicates authentication is federated with an identity
     provider such as the tenant's on-premises Active Directory via Active Directory Federation
     Services. This property is read-only and is not nullable.
    :type authentication_type: str
    :param availability_status: This property is always null except when the verify action is used.
     When the verify action is used, a domain entity is returned in the response. The
     availabilityStatus property of the domain entity in the response is either AvailableImmediately
     or EmailVerifiedDomainTakeoverScheduled.
    :type availability_status: str
    :param is_admin_managed: The value of the property is false if the DNS record management of the
     domain has been delegated to Microsoft 365. Otherwise, the value is true. Not nullable.
    :type is_admin_managed: bool
    :param is_default: True if this is the default domain that is used for user creation. There is
     only one default domain per company. Not nullable.
    :type is_default: bool
    :param is_initial: True if this is the initial domain created by Microsoft Online Services
     (companyname.onmicrosoft.com). There is only one initial domain per company. Not nullable.
    :type is_initial: bool
    :param is_root: True if the domain is a verified root domain. Otherwise, false if the domain is
     a subdomain or unverified. Not nullable.
    :type is_root: bool
    :param is_verified: True if the domain has completed domain ownership verification. Not
     nullable.
    :type is_verified: bool
    :param password_notification_window_in_days: Specifies the number of days before a user
     receives notification that their password will expire. If the property is not set, a default
     value of 14 days will be used.
    :type password_notification_window_in_days: int
    :param password_validity_period_in_days: Specifies the length of time that a password is valid
     before it must be changed. If the property is not set, a default value of 90 days will be used.
    :type password_validity_period_in_days: int
    :param state: domainState.
    :type state: ~identity_directory_management.models.MicrosoftGraphDomainState
    :param supported_services: The capabilities assigned to the domain.Can include 0, 1 or more of
     following values: Email, Sharepoint, EmailInternalRelayOnly, OfficeCommunicationsOnline,
     SharePointDefaultDomain, FullRedelegation, SharePointPublic, OrgIdAuthentication, Yammer,
     Intune The values which you can add/remove using Graph API include: Email,
     OfficeCommunicationsOnline, YammerNot nullable.
    :type supported_services: list[str]
    :param domain_name_references: Read-only, Nullable.
    :type domain_name_references:
     list[~identity_directory_management.models.MicrosoftGraphDirectoryObject]
    :param service_configuration_records: DNS records the customer adds to the DNS zone file of the
     domain before the domain can be used by Microsoft Online services.Read-only, Nullable.
    :type service_configuration_records:
     list[~identity_directory_management.models.MicrosoftGraphDomainDnsRecord]
    :param verification_dns_records: DNS records that the customer adds to the DNS zone file of the
     domain before the customer can complete domain ownership verification with Azure AD.Read-only,
     Nullable.
    :type verification_dns_records:
     list[~identity_directory_management.models.MicrosoftGraphDomainDnsRecord]
    """

    _validation = {
        'password_notification_window_in_days': {'maximum': 2147483647, 'minimum': -2147483648},
        'password_validity_period_in_days': {'maximum': 2147483647, 'minimum': -2147483648},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'authentication_type': {'key': 'authenticationType', 'type': 'str'},
        'availability_status': {'key': 'availabilityStatus', 'type': 'str'},
        'is_admin_managed': {'key': 'isAdminManaged', 'type': 'bool'},
        'is_default': {'key': 'isDefault', 'type': 'bool'},
        'is_initial': {'key': 'isInitial', 'type': 'bool'},
        'is_root': {'key': 'isRoot', 'type': 'bool'},
        'is_verified': {'key': 'isVerified', 'type': 'bool'},
        'password_notification_window_in_days': {'key': 'passwordNotificationWindowInDays', 'type': 'int'},
        'password_validity_period_in_days': {'key': 'passwordValidityPeriodInDays', 'type': 'int'},
        'state': {'key': 'state', 'type': 'MicrosoftGraphDomainState'},
        'supported_services': {'key': 'supportedServices', 'type': '[str]'},
        'domain_name_references': {'key': 'domainNameReferences', 'type': '[MicrosoftGraphDirectoryObject]'},
        'service_configuration_records': {'key': 'serviceConfigurationRecords', 'type': '[MicrosoftGraphDomainDnsRecord]'},
        'verification_dns_records': {'key': 'verificationDnsRecords', 'type': '[MicrosoftGraphDomainDnsRecord]'},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,
        additional_properties: Optional[Dict[str, object]] = None,
        authentication_type: Optional[str] = None,
        availability_status: Optional[str] = None,
        is_admin_managed: Optional[bool] = None,
        is_default: Optional[bool] = None,
        is_initial: Optional[bool] = None,
        is_root: Optional[bool] = None,
        is_verified: Optional[bool] = None,
        password_notification_window_in_days: Optional[int] = None,
        password_validity_period_in_days: Optional[int] = None,
        state: Optional["MicrosoftGraphDomainState"] = None,
        supported_services: Optional[List[str]] = None,
        domain_name_references: Optional[List["MicrosoftGraphDirectoryObject"]] = None,
        service_configuration_records: Optional[List["MicrosoftGraphDomainDnsRecord"]] = None,
        verification_dns_records: Optional[List["MicrosoftGraphDomainDnsRecord"]] = None,
        **kwargs
    ):
        super(MicrosoftGraphDomain, self).__init__(id=id, **kwargs)
        self.additional_properties = additional_properties
        self.authentication_type = authentication_type
        self.availability_status = availability_status
        self.is_admin_managed = is_admin_managed
        self.is_default = is_default
        self.is_initial = is_initial
        self.is_root = is_root
        self.is_verified = is_verified
        self.password_notification_window_in_days = password_notification_window_in_days
        self.password_validity_period_in_days = password_validity_period_in_days
        self.state = state
        self.supported_services = supported_services
        self.domain_name_references = domain_name_references
        self.service_configuration_records = service_configuration_records
        self.verification_dns_records = verification_dns_records


class MicrosoftGraphDomainDnsRecord(MicrosoftGraphEntity):
    """domainDnsRecord.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param is_optional: If false, this record must be configured by the customer at the DNS host
     for Microsoft Online Services to operate correctly with the domain.
    :type is_optional: bool
    :param label: Value used when configuring the name of the DNS record at the DNS host.
    :type label: str
    :param record_type: Indicates what type of DNS record this entity represents.The value can be
     one of the following: CName, Mx, Srv, TxtKey.
    :type record_type: str
    :param supported_service: Microsoft Online Service or feature that has a dependency on this DNS
     record.Can be one of the following values: null, Email, Sharepoint, EmailInternalRelayOnly,
     OfficeCommunicationsOnline, SharePointDefaultDomain, FullRedelegation, SharePointPublic,
     OrgIdAuthentication, Yammer, Intune.
    :type supported_service: str
    :param ttl: Value to use when configuring the time-to-live (ttl) property of the DNS record at
     the DNS host. Not nullable.
    :type ttl: int
    """

    _validation = {
        'ttl': {'maximum': 2147483647, 'minimum': -2147483648},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'is_optional': {'key': 'isOptional', 'type': 'bool'},
        'label': {'key': 'label', 'type': 'str'},
        'record_type': {'key': 'recordType', 'type': 'str'},
        'supported_service': {'key': 'supportedService', 'type': 'str'},
        'ttl': {'key': 'ttl', 'type': 'int'},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,
        additional_properties: Optional[Dict[str, object]] = None,
        is_optional: Optional[bool] = None,
        label: Optional[str] = None,
        record_type: Optional[str] = None,
        supported_service: Optional[str] = None,
        ttl: Optional[int] = None,
        **kwargs
    ):
        super(MicrosoftGraphDomainDnsRecord, self).__init__(id=id, **kwargs)
        self.additional_properties = additional_properties
        self.is_optional = is_optional
        self.label = label
        self.record_type = record_type
        self.supported_service = supported_service
        self.ttl = ttl


class MicrosoftGraphDomainState(msrest.serialization.Model):
    """domainState.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param last_action_date_time: Timestamp for when the last activity occurred. The value is
     updated when an operation is scheduled, the asynchronous task starts, and when the operation
     completes.
    :type last_action_date_time: ~datetime.datetime
    :param operation: Type of asynchronous operation. The values can be ForceDelete or
     Verification.
    :type operation: str
    :param status: Current status of the operation.  Scheduled - Operation has been scheduled but
     has not started.  InProgress - Task has started and is in progress.  Failed - Operation has
     failed.
    :type status: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'last_action_date_time': {'key': 'lastActionDateTime', 'type': 'iso-8601'},
        'operation': {'key': 'operation', 'type': 'str'},
        'status': {'key': 'status', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        last_action_date_time: Optional[datetime.datetime] = None,
        operation: Optional[str] = None,
        status: Optional[str] = None,
        **kwargs
    ):
        super(MicrosoftGraphDomainState, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.last_action_date_time = last_action_date_time
        self.operation = operation
        self.status = status


class MicrosoftGraphExtension(MicrosoftGraphEntity):
    """extension.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,
        additional_properties: Optional[Dict[str, object]] = None,
        **kwargs
    ):
        super(MicrosoftGraphExtension, self).__init__(id=id, **kwargs)
        self.additional_properties = additional_properties


class MicrosoftGraphFeatureRolloutPolicy(MicrosoftGraphEntity):
    """featureRolloutPolicy.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param description:
    :type description: str
    :param display_name:
    :type display_name: str
    :param feature:  Possible values include: "passthroughAuthentication", "seamlessSso",
     "passwordHashSync", "unknownFutureValue", "emailAsAlternateId".
    :type feature: str or ~identity_directory_management.models.MicrosoftGraphStagedFeatureName
    :param is_applied_to_organization:
    :type is_applied_to_organization: bool
    :param is_enabled:
    :type is_enabled: bool
    :param applies_to:
    :type applies_to: list[~identity_directory_management.models.MicrosoftGraphDirectoryObject]
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'description': {'key': 'description', 'type': 'str'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'feature': {'key': 'feature', 'type': 'str'},
        'is_applied_to_organization': {'key': 'isAppliedToOrganization', 'type': 'bool'},
        'is_enabled': {'key': 'isEnabled', 'type': 'bool'},
        'applies_to': {'key': 'appliesTo', 'type': '[MicrosoftGraphDirectoryObject]'},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,
        additional_properties: Optional[Dict[str, object]] = None,
        description: Optional[str] = None,
        display_name: Optional[str] = None,
        feature: Optional[Union[str, "MicrosoftGraphStagedFeatureName"]] = None,
        is_applied_to_organization: Optional[bool] = None,
        is_enabled: Optional[bool] = None,
        applies_to: Optional[List["MicrosoftGraphDirectoryObject"]] = None,
        **kwargs
    ):
        super(MicrosoftGraphFeatureRolloutPolicy, self).__init__(id=id, **kwargs)
        self.additional_properties = additional_properties
        self.description = description
        self.display_name = display_name
        self.feature = feature
        self.is_applied_to_organization = is_applied_to_organization
        self.is_enabled = is_enabled
        self.applies_to = applies_to


class MicrosoftGraphIdentity(msrest.serialization.Model):
    """identity.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param display_name: The identity's display name. Note that this may not always be available or
     up to date. For example, if a user changes their display name, the API may show the new value
     in a future response, but the items associated with the user won't show up as having changed
     when using delta.
    :type display_name: str
    :param id: Unique identifier for the identity.
    :type id: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'id': {'key': 'id', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        display_name: Optional[str] = None,
        id: Optional[str] = None,
        **kwargs
    ):
        super(MicrosoftGraphIdentity, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.display_name = display_name
        self.id = id


class MicrosoftGraphItemInsightsSettings(MicrosoftGraphEntity):
    """itemInsightsSettings.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param disabled_for_group:
    :type disabled_for_group: str
    :param is_enabled_in_organization:
    :type is_enabled_in_organization: bool
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'disabled_for_group': {'key': 'disabledForGroup', 'type': 'str'},
        'is_enabled_in_organization': {'key': 'isEnabledInOrganization', 'type': 'bool'},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,
        additional_properties: Optional[Dict[str, object]] = None,
        disabled_for_group: Optional[str] = None,
        is_enabled_in_organization: Optional[bool] = None,
        **kwargs
    ):
        super(MicrosoftGraphItemInsightsSettings, self).__init__(id=id, **kwargs)
        self.additional_properties = additional_properties
        self.disabled_for_group = disabled_for_group
        self.is_enabled_in_organization = is_enabled_in_organization


class MicrosoftGraphLicenseUnitsDetail(msrest.serialization.Model):
    """licenseUnitsDetail.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param enabled: The number of units that are enabled.
    :type enabled: int
    :param suspended: The number of units that are suspended.
    :type suspended: int
    :param warning: The number of units that are in warning status.
    :type warning: int
    """

    _validation = {
        'enabled': {'maximum': 2147483647, 'minimum': -2147483648},
        'suspended': {'maximum': 2147483647, 'minimum': -2147483648},
        'warning': {'maximum': 2147483647, 'minimum': -2147483648},
    }

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'enabled': {'key': 'enabled', 'type': 'int'},
        'suspended': {'key': 'suspended', 'type': 'int'},
        'warning': {'key': 'warning', 'type': 'int'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        enabled: Optional[int] = None,
        suspended: Optional[int] = None,
        warning: Optional[int] = None,
        **kwargs
    ):
        super(MicrosoftGraphLicenseUnitsDetail, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.enabled = enabled
        self.suspended = suspended
        self.warning = warning


class MicrosoftGraphOnPremisesExtensionAttributes(msrest.serialization.Model):
    """onPremisesExtensionAttributes.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param extension_attribute1: First customizable extension attribute.
    :type extension_attribute1: str
    :param extension_attribute10: Tenth customizable extension attribute.
    :type extension_attribute10: str
    :param extension_attribute11: Eleventh customizable extension attribute.
    :type extension_attribute11: str
    :param extension_attribute12: Twelfth customizable extension attribute.
    :type extension_attribute12: str
    :param extension_attribute13: Thirteenth customizable extension attribute.
    :type extension_attribute13: str
    :param extension_attribute14: Fourteenth customizable extension attribute.
    :type extension_attribute14: str
    :param extension_attribute15: Fifteenth customizable extension attribute.
    :type extension_attribute15: str
    :param extension_attribute2: Second customizable extension attribute.
    :type extension_attribute2: str
    :param extension_attribute3: Third customizable extension attribute.
    :type extension_attribute3: str
    :param extension_attribute4: Fourth customizable extension attribute.
    :type extension_attribute4: str
    :param extension_attribute5: Fifth customizable extension attribute.
    :type extension_attribute5: str
    :param extension_attribute6: Sixth customizable extension attribute.
    :type extension_attribute6: str
    :param extension_attribute7: Seventh customizable extension attribute.
    :type extension_attribute7: str
    :param extension_attribute8: Eighth customizable extension attribute.
    :type extension_attribute8: str
    :param extension_attribute9: Ninth customizable extension attribute.
    :type extension_attribute9: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'extension_attribute1': {'key': 'extensionAttribute1', 'type': 'str'},
        'extension_attribute10': {'key': 'extensionAttribute10', 'type': 'str'},
        'extension_attribute11': {'key': 'extensionAttribute11', 'type': 'str'},
        'extension_attribute12': {'key': 'extensionAttribute12', 'type': 'str'},
        'extension_attribute13': {'key': 'extensionAttribute13', 'type': 'str'},
        'extension_attribute14': {'key': 'extensionAttribute14', 'type': 'str'},
        'extension_attribute15': {'key': 'extensionAttribute15', 'type': 'str'},
        'extension_attribute2': {'key': 'extensionAttribute2', 'type': 'str'},
        'extension_attribute3': {'key': 'extensionAttribute3', 'type': 'str'},
        'extension_attribute4': {'key': 'extensionAttribute4', 'type': 'str'},
        'extension_attribute5': {'key': 'extensionAttribute5', 'type': 'str'},
        'extension_attribute6': {'key': 'extensionAttribute6', 'type': 'str'},
        'extension_attribute7': {'key': 'extensionAttribute7', 'type': 'str'},
        'extension_attribute8': {'key': 'extensionAttribute8', 'type': 'str'},
        'extension_attribute9': {'key': 'extensionAttribute9', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        extension_attribute1: Optional[str] = None,
        extension_attribute10: Optional[str] = None,
        extension_attribute11: Optional[str] = None,
        extension_attribute12: Optional[str] = None,
        extension_attribute13: Optional[str] = None,
        extension_attribute14: Optional[str] = None,
        extension_attribute15: Optional[str] = None,
        extension_attribute2: Optional[str] = None,
        extension_attribute3: Optional[str] = None,
        extension_attribute4: Optional[str] = None,
        extension_attribute5: Optional[str] = None,
        extension_attribute6: Optional[str] = None,
        extension_attribute7: Optional[str] = None,
        extension_attribute8: Optional[str] = None,
        extension_attribute9: Optional[str] = None,
        **kwargs
    ):
        super(MicrosoftGraphOnPremisesExtensionAttributes, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.extension_attribute1 = extension_attribute1
        self.extension_attribute10 = extension_attribute10
        self.extension_attribute11 = extension_attribute11
        self.extension_attribute12 = extension_attribute12
        self.extension_attribute13 = extension_attribute13
        self.extension_attribute14 = extension_attribute14
        self.extension_attribute15 = extension_attribute15
        self.extension_attribute2 = extension_attribute2
        self.extension_attribute3 = extension_attribute3
        self.extension_attribute4 = extension_attribute4
        self.extension_attribute5 = extension_attribute5
        self.extension_attribute6 = extension_attribute6
        self.extension_attribute7 = extension_attribute7
        self.extension_attribute8 = extension_attribute8
        self.extension_attribute9 = extension_attribute9


class MicrosoftGraphOnPremisesProvisioningError(msrest.serialization.Model):
    """onPremisesProvisioningError.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param category: Category of the provisioning error. Note: Currently, there is only one
     possible value. Possible value: PropertyConflict - indicates a property value is not unique.
     Other objects contain the same value for the property.
    :type category: str
    :param occurred_date_time: The date and time at which the error occurred.
    :type occurred_date_time: ~datetime.datetime
    :param property_causing_error: Name of the directory property causing the error. Current
     possible values: UserPrincipalName or ProxyAddress.
    :type property_causing_error: str
    :param value: Value of the property causing the error.
    :type value: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'category': {'key': 'category', 'type': 'str'},
        'occurred_date_time': {'key': 'occurredDateTime', 'type': 'iso-8601'},
        'property_causing_error': {'key': 'propertyCausingError', 'type': 'str'},
        'value': {'key': 'value', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        category: Optional[str] = None,
        occurred_date_time: Optional[datetime.datetime] = None,
        property_causing_error: Optional[str] = None,
        value: Optional[str] = None,
        **kwargs
    ):
        super(MicrosoftGraphOnPremisesProvisioningError, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.category = category
        self.occurred_date_time = occurred_date_time
        self.property_causing_error = property_causing_error
        self.value = value


class MicrosoftGraphOrganization(MicrosoftGraphDirectoryObject):
    """The organization resource represents an instance of global settings and resources which operate and are provisioned at the tenant-level.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param id: Read-only.
    :type id: str
    :param deleted_date_time:
    :type deleted_date_time: ~datetime.datetime
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param assigned_plans: The collection of service plans associated with the tenant. Not
     nullable.
    :type assigned_plans: list[~identity_directory_management.models.MicrosoftGraphAssignedPlan]
    :param business_phones: Telephone number for the organization. NOTE: Although this is a string
     collection, only one number can be set for this property.
    :type business_phones: list[str]
    :param city: City name of the address for the organization.
    :type city: str
    :param country: Country/region name of the address for the organization.
    :type country: str
    :param country_letter_code: Country/region abbreviation for the organization.
    :type country_letter_code: str
    :param created_date_time: Timestamp of when the organization was created. The value cannot be
     modified and is automatically populated when the organization is created. The Timestamp type
     represents date and time information using ISO 8601 format and is always in UTC time. For
     example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'. Read-only.
    :type created_date_time: ~datetime.datetime
    :param directory_size_quota: directorySizeQuota.
    :type directory_size_quota:
     ~identity_directory_management.models.MicrosoftGraphDirectorySizeQuota
    :param display_name: The display name for the tenant.
    :type display_name: str
    :param is_multiple_data_locations_for_services_enabled: true if organization is Multi-Geo
     enabled; false if organization is not Multi-Geo enabled; null (default). Read-only. For more
     information, see OneDrive Online Multi-Geo.
    :type is_multiple_data_locations_for_services_enabled: bool
    :param marketing_notification_emails: Not nullable.
    :type marketing_notification_emails: list[str]
    :param on_premises_last_sync_date_time: The time and date at which the tenant was last synced
     with the on-premise directory. The Timestamp type represents date and time information using
     ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look
     like this: '2014-01-01T00:00:00Z'. Read-only.
    :type on_premises_last_sync_date_time: ~datetime.datetime
    :param on_premises_sync_enabled: true if this object is synced from an on-premises directory;
     false if this object was originally synced from an on-premises directory but is no longer
     synced; null if this object has never been synced from an on-premises directory (default).
    :type on_premises_sync_enabled: bool
    :param postal_code: Postal code of the address for the organization.
    :type postal_code: str
    :param preferred_language: The preferred language for the organization. Should follow ISO 639-1
     Code; for example 'en'.
    :type preferred_language: str
    :param privacy_profile: privacyProfile.
    :type privacy_profile: ~identity_directory_management.models.MicrosoftGraphPrivacyProfile
    :param provisioned_plans: Not nullable.
    :type provisioned_plans:
     list[~identity_directory_management.models.MicrosoftGraphProvisionedPlan]
    :param security_compliance_notification_mails:
    :type security_compliance_notification_mails: list[str]
    :param security_compliance_notification_phones:
    :type security_compliance_notification_phones: list[str]
    :param state: State name of the address for the organization.
    :type state: str
    :param street: Street name of the address for organization.
    :type street: str
    :param technical_notification_mails: Not nullable.
    :type technical_notification_mails: list[str]
    :param verified_domains: The collection of domains associated with this tenant. Not nullable.
    :type verified_domains:
     list[~identity_directory_management.models.MicrosoftGraphVerifiedDomain]
    :param certificate_connector_setting: Certificate connector settings.
    :type certificate_connector_setting:
     ~identity_directory_management.models.MicrosoftGraphCertificateConnectorSetting
    :param mobile_device_management_authority:  Possible values include: "unknown", "intune",
     "sccm", "office365".
    :type mobile_device_management_authority: str or
     ~identity_directory_management.models.MicrosoftGraphMdmAuthority
    :param certificate_based_auth_configuration: Navigation property to manage certificate-based
     authentication configuration. Only a single instance of certificateBasedAuthConfiguration can
     be created in the collection.
    :type certificate_based_auth_configuration:
     list[~identity_directory_management.models.MicrosoftGraphCertificateBasedAuthConfiguration]
    :param extensions: The collection of open extensions defined for the organization. Read-only.
     Nullable.
    :type extensions: list[~identity_directory_management.models.MicrosoftGraphExtension]
    :param id_settings_id: Read-only.
    :type id_settings_id: str
    :param item_insights: itemInsightsSettings.
    :type item_insights: ~identity_directory_management.models.MicrosoftGraphItemInsightsSettings
    :param profile_card_properties:
    :type profile_card_properties:
     list[~identity_directory_management.models.MicrosoftGraphProfileCardProperty]
    :param id_branding_id: Read-only.
    :type id_branding_id: str
    :param background_color:
    :type background_color: str
    :param background_image:
    :type background_image: bytes
    :param banner_logo:
    :type banner_logo: bytes
    :param sign_in_page_text:
    :type sign_in_page_text: str
    :param square_logo:
    :type square_logo: bytes
    :param username_hint_text:
    :type username_hint_text: str
    :param localizations:
    :type localizations:
     list[~identity_directory_management.models.MicrosoftGraphOrganizationalBrandingLocalization]
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'id': {'key': 'id', 'type': 'str'},
        'deleted_date_time': {'key': 'deletedDateTime', 'type': 'iso-8601'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'assigned_plans': {'key': 'assignedPlans', 'type': '[MicrosoftGraphAssignedPlan]'},
        'business_phones': {'key': 'businessPhones', 'type': '[str]'},
        'city': {'key': 'city', 'type': 'str'},
        'country': {'key': 'country', 'type': 'str'},
        'country_letter_code': {'key': 'countryLetterCode', 'type': 'str'},
        'created_date_time': {'key': 'createdDateTime', 'type': 'iso-8601'},
        'directory_size_quota': {'key': 'directorySizeQuota', 'type': 'MicrosoftGraphDirectorySizeQuota'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'is_multiple_data_locations_for_services_enabled': {'key': 'isMultipleDataLocationsForServicesEnabled', 'type': 'bool'},
        'marketing_notification_emails': {'key': 'marketingNotificationEmails', 'type': '[str]'},
        'on_premises_last_sync_date_time': {'key': 'onPremisesLastSyncDateTime', 'type': 'iso-8601'},
        'on_premises_sync_enabled': {'key': 'onPremisesSyncEnabled', 'type': 'bool'},
        'postal_code': {'key': 'postalCode', 'type': 'str'},
        'preferred_language': {'key': 'preferredLanguage', 'type': 'str'},
        'privacy_profile': {'key': 'privacyProfile', 'type': 'MicrosoftGraphPrivacyProfile'},
        'provisioned_plans': {'key': 'provisionedPlans', 'type': '[MicrosoftGraphProvisionedPlan]'},
        'security_compliance_notification_mails': {'key': 'securityComplianceNotificationMails', 'type': '[str]'},
        'security_compliance_notification_phones': {'key': 'securityComplianceNotificationPhones', 'type': '[str]'},
        'state': {'key': 'state', 'type': 'str'},
        'street': {'key': 'street', 'type': 'str'},
        'technical_notification_mails': {'key': 'technicalNotificationMails', 'type': '[str]'},
        'verified_domains': {'key': 'verifiedDomains', 'type': '[MicrosoftGraphVerifiedDomain]'},
        'certificate_connector_setting': {'key': 'certificateConnectorSetting', 'type': 'MicrosoftGraphCertificateConnectorSetting'},
        'mobile_device_management_authority': {'key': 'mobileDeviceManagementAuthority', 'type': 'str'},
        'certificate_based_auth_configuration': {'key': 'certificateBasedAuthConfiguration', 'type': '[MicrosoftGraphCertificateBasedAuthConfiguration]'},
        'extensions': {'key': 'extensions', 'type': '[MicrosoftGraphExtension]'},
        'id_settings_id': {'key': 'settings.id', 'type': 'str'},
        'item_insights': {'key': 'settings.itemInsights', 'type': 'MicrosoftGraphItemInsightsSettings'},
        'profile_card_properties': {'key': 'settings.profileCardProperties', 'type': '[MicrosoftGraphProfileCardProperty]'},
        'id_branding_id': {'key': 'branding.id', 'type': 'str'},
        'background_color': {'key': 'branding.backgroundColor', 'type': 'str'},
        'background_image': {'key': 'branding.backgroundImage', 'type': 'base64'},
        'banner_logo': {'key': 'branding.bannerLogo', 'type': 'base64'},
        'sign_in_page_text': {'key': 'branding.signInPageText', 'type': 'str'},
        'square_logo': {'key': 'branding.squareLogo', 'type': 'base64'},
        'username_hint_text': {'key': 'branding.usernameHintText', 'type': 'str'},
        'localizations': {'key': 'branding.localizations', 'type': '[MicrosoftGraphOrganizationalBrandingLocalization]'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        id: Optional[str] = None,
        deleted_date_time: Optional[datetime.datetime] = None,
        additional_properties: Optional[Dict[str, object]] = None,
        assigned_plans: Optional[List["MicrosoftGraphAssignedPlan"]] = None,
        business_phones: Optional[List[str]] = None,
        city: Optional[str] = None,
        country: Optional[str] = None,
        country_letter_code: Optional[str] = None,
        created_date_time: Optional[datetime.datetime] = None,
        directory_size_quota: Optional["MicrosoftGraphDirectorySizeQuota"] = None,
        display_name: Optional[str] = None,
        is_multiple_data_locations_for_services_enabled: Optional[bool] = None,
        marketing_notification_emails: Optional[List[str]] = None,
        on_premises_last_sync_date_time: Optional[datetime.datetime] = None,
        on_premises_sync_enabled: Optional[bool] = None,
        postal_code: Optional[str] = None,
        preferred_language: Optional[str] = None,
        privacy_profile: Optional["MicrosoftGraphPrivacyProfile"] = None,
        provisioned_plans: Optional[List["MicrosoftGraphProvisionedPlan"]] = None,
        security_compliance_notification_mails: Optional[List[str]] = None,
        security_compliance_notification_phones: Optional[List[str]] = None,
        state: Optional[str] = None,
        street: Optional[str] = None,
        technical_notification_mails: Optional[List[str]] = None,
        verified_domains: Optional[List["MicrosoftGraphVerifiedDomain"]] = None,
        certificate_connector_setting: Optional["MicrosoftGraphCertificateConnectorSetting"] = None,
        mobile_device_management_authority: Optional[Union[str, "MicrosoftGraphMdmAuthority"]] = None,
        certificate_based_auth_configuration: Optional[List["MicrosoftGraphCertificateBasedAuthConfiguration"]] = None,
        extensions: Optional[List["MicrosoftGraphExtension"]] = None,
        id_settings_id: Optional[str] = None,
        item_insights: Optional["MicrosoftGraphItemInsightsSettings"] = None,
        profile_card_properties: Optional[List["MicrosoftGraphProfileCardProperty"]] = None,
        id_branding_id: Optional[str] = None,
        background_color: Optional[str] = None,
        background_image: Optional[bytes] = None,
        banner_logo: Optional[bytes] = None,
        sign_in_page_text: Optional[str] = None,
        square_logo: Optional[bytes] = None,
        username_hint_text: Optional[str] = None,
        localizations: Optional[List["MicrosoftGraphOrganizationalBrandingLocalization"]] = None,
        **kwargs
    ):
        super(MicrosoftGraphOrganization, self).__init__(id=id, deleted_date_time=deleted_date_time, **kwargs)
        self.additional_properties = additional_properties
        self.additional_properties = additional_properties
        self.assigned_plans = assigned_plans
        self.business_phones = business_phones
        self.city = city
        self.country = country
        self.country_letter_code = country_letter_code
        self.created_date_time = created_date_time
        self.directory_size_quota = directory_size_quota
        self.display_name = display_name
        self.is_multiple_data_locations_for_services_enabled = is_multiple_data_locations_for_services_enabled
        self.marketing_notification_emails = marketing_notification_emails
        self.on_premises_last_sync_date_time = on_premises_last_sync_date_time
        self.on_premises_sync_enabled = on_premises_sync_enabled
        self.postal_code = postal_code
        self.preferred_language = preferred_language
        self.privacy_profile = privacy_profile
        self.provisioned_plans = provisioned_plans
        self.security_compliance_notification_mails = security_compliance_notification_mails
        self.security_compliance_notification_phones = security_compliance_notification_phones
        self.state = state
        self.street = street
        self.technical_notification_mails = technical_notification_mails
        self.verified_domains = verified_domains
        self.certificate_connector_setting = certificate_connector_setting
        self.mobile_device_management_authority = mobile_device_management_authority
        self.certificate_based_auth_configuration = certificate_based_auth_configuration
        self.extensions = extensions
        self.id_settings_id = id_settings_id
        self.item_insights = item_insights
        self.profile_card_properties = profile_card_properties
        self.id_branding_id = id_branding_id
        self.background_color = background_color
        self.background_image = background_image
        self.banner_logo = banner_logo
        self.sign_in_page_text = sign_in_page_text
        self.square_logo = square_logo
        self.username_hint_text = username_hint_text
        self.localizations = localizations


class MicrosoftGraphOrganizationalBrandingProperties(MicrosoftGraphEntity):
    """organizationalBrandingProperties.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param background_color:
    :type background_color: str
    :param background_image:
    :type background_image: bytes
    :param banner_logo:
    :type banner_logo: bytes
    :param sign_in_page_text:
    :type sign_in_page_text: str
    :param square_logo:
    :type square_logo: bytes
    :param username_hint_text:
    :type username_hint_text: str
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'background_color': {'key': 'backgroundColor', 'type': 'str'},
        'background_image': {'key': 'backgroundImage', 'type': 'base64'},
        'banner_logo': {'key': 'bannerLogo', 'type': 'base64'},
        'sign_in_page_text': {'key': 'signInPageText', 'type': 'str'},
        'square_logo': {'key': 'squareLogo', 'type': 'base64'},
        'username_hint_text': {'key': 'usernameHintText', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,
        additional_properties: Optional[Dict[str, object]] = None,
        background_color: Optional[str] = None,
        background_image: Optional[bytes] = None,
        banner_logo: Optional[bytes] = None,
        sign_in_page_text: Optional[str] = None,
        square_logo: Optional[bytes] = None,
        username_hint_text: Optional[str] = None,
        **kwargs
    ):
        super(MicrosoftGraphOrganizationalBrandingProperties, self).__init__(id=id, **kwargs)
        self.additional_properties = additional_properties
        self.background_color = background_color
        self.background_image = background_image
        self.banner_logo = banner_logo
        self.sign_in_page_text = sign_in_page_text
        self.square_logo = square_logo
        self.username_hint_text = username_hint_text


class MicrosoftGraphOrganizationalBranding(MicrosoftGraphOrganizationalBrandingProperties):
    """organizationalBranding.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param id: Read-only.
    :type id: str
    :param background_color:
    :type background_color: str
    :param background_image:
    :type background_image: bytes
    :param banner_logo:
    :type banner_logo: bytes
    :param sign_in_page_text:
    :type sign_in_page_text: str
    :param square_logo:
    :type square_logo: bytes
    :param username_hint_text:
    :type username_hint_text: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param localizations:
    :type localizations:
     list[~identity_directory_management.models.MicrosoftGraphOrganizationalBrandingLocalization]
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'id': {'key': 'id', 'type': 'str'},
        'background_color': {'key': 'backgroundColor', 'type': 'str'},
        'background_image': {'key': 'backgroundImage', 'type': 'base64'},
        'banner_logo': {'key': 'bannerLogo', 'type': 'base64'},
        'sign_in_page_text': {'key': 'signInPageText', 'type': 'str'},
        'square_logo': {'key': 'squareLogo', 'type': 'base64'},
        'username_hint_text': {'key': 'usernameHintText', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'localizations': {'key': 'localizations', 'type': '[MicrosoftGraphOrganizationalBrandingLocalization]'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        id: Optional[str] = None,
        background_color: Optional[str] = None,
        background_image: Optional[bytes] = None,
        banner_logo: Optional[bytes] = None,
        sign_in_page_text: Optional[str] = None,
        square_logo: Optional[bytes] = None,
        username_hint_text: Optional[str] = None,
        additional_properties: Optional[Dict[str, object]] = None,
        localizations: Optional[List["MicrosoftGraphOrganizationalBrandingLocalization"]] = None,
        **kwargs
    ):
        super(MicrosoftGraphOrganizationalBranding, self).__init__(id=id, background_color=background_color, background_image=background_image, banner_logo=banner_logo, sign_in_page_text=sign_in_page_text, square_logo=square_logo, username_hint_text=username_hint_text, **kwargs)
        self.additional_properties = additional_properties
        self.additional_properties = additional_properties
        self.localizations = localizations


class MicrosoftGraphOrganizationalBrandingLocalization(MicrosoftGraphOrganizationalBrandingProperties):
    """organizationalBrandingLocalization.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param id: Read-only.
    :type id: str
    :param background_color:
    :type background_color: str
    :param background_image:
    :type background_image: bytes
    :param banner_logo:
    :type banner_logo: bytes
    :param sign_in_page_text:
    :type sign_in_page_text: str
    :param square_logo:
    :type square_logo: bytes
    :param username_hint_text:
    :type username_hint_text: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'id': {'key': 'id', 'type': 'str'},
        'background_color': {'key': 'backgroundColor', 'type': 'str'},
        'background_image': {'key': 'backgroundImage', 'type': 'base64'},
        'banner_logo': {'key': 'bannerLogo', 'type': 'base64'},
        'sign_in_page_text': {'key': 'signInPageText', 'type': 'str'},
        'square_logo': {'key': 'squareLogo', 'type': 'base64'},
        'username_hint_text': {'key': 'usernameHintText', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        id: Optional[str] = None,
        background_color: Optional[str] = None,
        background_image: Optional[bytes] = None,
        banner_logo: Optional[bytes] = None,
        sign_in_page_text: Optional[str] = None,
        square_logo: Optional[bytes] = None,
        username_hint_text: Optional[str] = None,
        additional_properties: Optional[Dict[str, object]] = None,
        **kwargs
    ):
        super(MicrosoftGraphOrganizationalBrandingLocalization, self).__init__(id=id, background_color=background_color, background_image=background_image, banner_logo=banner_logo, sign_in_page_text=sign_in_page_text, square_logo=square_logo, username_hint_text=username_hint_text, **kwargs)
        self.additional_properties = additional_properties
        self.additional_properties = additional_properties


class MicrosoftGraphOrganizationSettings(MicrosoftGraphEntity):
    """organizationSettings.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param item_insights: itemInsightsSettings.
    :type item_insights: ~identity_directory_management.models.MicrosoftGraphItemInsightsSettings
    :param profile_card_properties:
    :type profile_card_properties:
     list[~identity_directory_management.models.MicrosoftGraphProfileCardProperty]
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'item_insights': {'key': 'itemInsights', 'type': 'MicrosoftGraphItemInsightsSettings'},
        'profile_card_properties': {'key': 'profileCardProperties', 'type': '[MicrosoftGraphProfileCardProperty]'},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,
        additional_properties: Optional[Dict[str, object]] = None,
        item_insights: Optional["MicrosoftGraphItemInsightsSettings"] = None,
        profile_card_properties: Optional[List["MicrosoftGraphProfileCardProperty"]] = None,
        **kwargs
    ):
        super(MicrosoftGraphOrganizationSettings, self).__init__(id=id, **kwargs)
        self.additional_properties = additional_properties
        self.item_insights = item_insights
        self.profile_card_properties = profile_card_properties


class MicrosoftGraphOrgContact(MicrosoftGraphDirectoryObject):
    """Represents an Azure Active Directory object. The directoryObject type is the base type for many other directory entity types.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param id: Read-only.
    :type id: str
    :param deleted_date_time:
    :type deleted_date_time: ~datetime.datetime
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param addresses:
    :type addresses:
     list[~identity_directory_management.models.MicrosoftGraphPhysicalOfficeAddress]
    :param company_name:
    :type company_name: str
    :param department:
    :type department: str
    :param display_name:
    :type display_name: str
    :param given_name:
    :type given_name: str
    :param job_title:
    :type job_title: str
    :param mail:
    :type mail: str
    :param mail_nickname:
    :type mail_nickname: str
    :param on_premises_last_sync_date_time:
    :type on_premises_last_sync_date_time: ~datetime.datetime
    :param on_premises_provisioning_errors:
    :type on_premises_provisioning_errors:
     list[~identity_directory_management.models.MicrosoftGraphOnPremisesProvisioningError]
    :param on_premises_sync_enabled:
    :type on_premises_sync_enabled: bool
    :param phones:
    :type phones: list[~identity_directory_management.models.MicrosoftGraphPhone]
    :param proxy_addresses:
    :type proxy_addresses: list[str]
    :param surname:
    :type surname: str
    :param direct_reports:
    :type direct_reports: list[~identity_directory_management.models.MicrosoftGraphDirectoryObject]
    :param manager: Represents an Azure Active Directory object. The directoryObject type is the
     base type for many other directory entity types.
    :type manager: ~identity_directory_management.models.MicrosoftGraphDirectoryObject
    :param member_of:
    :type member_of: list[~identity_directory_management.models.MicrosoftGraphDirectoryObject]
    :param transitive_member_of:
    :type transitive_member_of:
     list[~identity_directory_management.models.MicrosoftGraphDirectoryObject]
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'id': {'key': 'id', 'type': 'str'},
        'deleted_date_time': {'key': 'deletedDateTime', 'type': 'iso-8601'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'addresses': {'key': 'addresses', 'type': '[MicrosoftGraphPhysicalOfficeAddress]'},
        'company_name': {'key': 'companyName', 'type': 'str'},
        'department': {'key': 'department', 'type': 'str'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'given_name': {'key': 'givenName', 'type': 'str'},
        'job_title': {'key': 'jobTitle', 'type': 'str'},
        'mail': {'key': 'mail', 'type': 'str'},
        'mail_nickname': {'key': 'mailNickname', 'type': 'str'},
        'on_premises_last_sync_date_time': {'key': 'onPremisesLastSyncDateTime', 'type': 'iso-8601'},
        'on_premises_provisioning_errors': {'key': 'onPremisesProvisioningErrors', 'type': '[MicrosoftGraphOnPremisesProvisioningError]'},
        'on_premises_sync_enabled': {'key': 'onPremisesSyncEnabled', 'type': 'bool'},
        'phones': {'key': 'phones', 'type': '[MicrosoftGraphPhone]'},
        'proxy_addresses': {'key': 'proxyAddresses', 'type': '[str]'},
        'surname': {'key': 'surname', 'type': 'str'},
        'direct_reports': {'key': 'directReports', 'type': '[MicrosoftGraphDirectoryObject]'},
        'manager': {'key': 'manager', 'type': 'MicrosoftGraphDirectoryObject'},
        'member_of': {'key': 'memberOf', 'type': '[MicrosoftGraphDirectoryObject]'},
        'transitive_member_of': {'key': 'transitiveMemberOf', 'type': '[MicrosoftGraphDirectoryObject]'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        id: Optional[str] = None,
        deleted_date_time: Optional[datetime.datetime] = None,
        additional_properties: Optional[Dict[str, object]] = None,
        addresses: Optional[List["MicrosoftGraphPhysicalOfficeAddress"]] = None,
        company_name: Optional[str] = None,
        department: Optional[str] = None,
        display_name: Optional[str] = None,
        given_name: Optional[str] = None,
        job_title: Optional[str] = None,
        mail: Optional[str] = None,
        mail_nickname: Optional[str] = None,
        on_premises_last_sync_date_time: Optional[datetime.datetime] = None,
        on_premises_provisioning_errors: Optional[List["MicrosoftGraphOnPremisesProvisioningError"]] = None,
        on_premises_sync_enabled: Optional[bool] = None,
        phones: Optional[List["MicrosoftGraphPhone"]] = None,
        proxy_addresses: Optional[List[str]] = None,
        surname: Optional[str] = None,
        direct_reports: Optional[List["MicrosoftGraphDirectoryObject"]] = None,
        manager: Optional["MicrosoftGraphDirectoryObject"] = None,
        member_of: Optional[List["MicrosoftGraphDirectoryObject"]] = None,
        transitive_member_of: Optional[List["MicrosoftGraphDirectoryObject"]] = None,
        **kwargs
    ):
        super(MicrosoftGraphOrgContact, self).__init__(id=id, deleted_date_time=deleted_date_time, **kwargs)
        self.additional_properties = additional_properties
        self.additional_properties = additional_properties
        self.addresses = addresses
        self.company_name = company_name
        self.department = department
        self.display_name = display_name
        self.given_name = given_name
        self.job_title = job_title
        self.mail = mail
        self.mail_nickname = mail_nickname
        self.on_premises_last_sync_date_time = on_premises_last_sync_date_time
        self.on_premises_provisioning_errors = on_premises_provisioning_errors
        self.on_premises_sync_enabled = on_premises_sync_enabled
        self.phones = phones
        self.proxy_addresses = proxy_addresses
        self.surname = surname
        self.direct_reports = direct_reports
        self.manager = manager
        self.member_of = member_of
        self.transitive_member_of = transitive_member_of


class MicrosoftGraphPayloadResponse(MicrosoftGraphEntity):
    """payloadResponse.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,
        additional_properties: Optional[Dict[str, object]] = None,
        **kwargs
    ):
        super(MicrosoftGraphPayloadResponse, self).__init__(id=id, **kwargs)
        self.additional_properties = additional_properties


class MicrosoftGraphPhone(msrest.serialization.Model):
    """phone.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param number: The phone number.
    :type number: str
    :param type:  Possible values include: "home", "business", "mobile", "other", "assistant",
     "homeFax", "businessFax", "otherFax", "pager", "radio".
    :type type: str or ~identity_directory_management.models.MicrosoftGraphPhoneType
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'number': {'key': 'number', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        number: Optional[str] = None,
        type: Optional[Union[str, "MicrosoftGraphPhoneType"]] = None,
        **kwargs
    ):
        super(MicrosoftGraphPhone, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.number = number
        self.type = type


class MicrosoftGraphPhysicalOfficeAddress(msrest.serialization.Model):
    """physicalOfficeAddress.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param city: The city.
    :type city: str
    :param country_or_region: The country or region. It's a free-format string value, for example,
     'United States'.
    :type country_or_region: str
    :param office_location: Office location such as building and office number for an
     organizational contact.
    :type office_location: str
    :param postal_code: The postal code.
    :type postal_code: str
    :param state: The state.
    :type state: str
    :param street: The street.
    :type street: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'city': {'key': 'city', 'type': 'str'},
        'country_or_region': {'key': 'countryOrRegion', 'type': 'str'},
        'office_location': {'key': 'officeLocation', 'type': 'str'},
        'postal_code': {'key': 'postalCode', 'type': 'str'},
        'state': {'key': 'state', 'type': 'str'},
        'street': {'key': 'street', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        city: Optional[str] = None,
        country_or_region: Optional[str] = None,
        office_location: Optional[str] = None,
        postal_code: Optional[str] = None,
        state: Optional[str] = None,
        street: Optional[str] = None,
        **kwargs
    ):
        super(MicrosoftGraphPhysicalOfficeAddress, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.city = city
        self.country_or_region = country_or_region
        self.office_location = office_location
        self.postal_code = postal_code
        self.state = state
        self.street = street


class MicrosoftGraphPrivacyProfile(msrest.serialization.Model):
    """privacyProfile.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param contact_email: A valid smtp email address for the privacy statement contact. Not
     required.
    :type contact_email: str
    :param statement_url: A valid URL format that begins with http:// or https://. Maximum length
     is 255 characters. The URL that directs to the company's privacy statement. Not required.
    :type statement_url: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'contact_email': {'key': 'contactEmail', 'type': 'str'},
        'statement_url': {'key': 'statementUrl', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        contact_email: Optional[str] = None,
        statement_url: Optional[str] = None,
        **kwargs
    ):
        super(MicrosoftGraphPrivacyProfile, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.contact_email = contact_email
        self.statement_url = statement_url


class MicrosoftGraphProfileCardAnnotation(msrest.serialization.Model):
    """profileCardAnnotation.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param display_name:
    :type display_name: str
    :param localizations:
    :type localizations:
     list[~identity_directory_management.models.MicrosoftGraphDisplayNameLocalization]
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'localizations': {'key': 'localizations', 'type': '[MicrosoftGraphDisplayNameLocalization]'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        display_name: Optional[str] = None,
        localizations: Optional[List["MicrosoftGraphDisplayNameLocalization"]] = None,
        **kwargs
    ):
        super(MicrosoftGraphProfileCardAnnotation, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.display_name = display_name
        self.localizations = localizations


class MicrosoftGraphProfileCardProperty(MicrosoftGraphEntity):
    """profileCardProperty.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param annotations:
    :type annotations:
     list[~identity_directory_management.models.MicrosoftGraphProfileCardAnnotation]
    :param directory_property_name:
    :type directory_property_name: str
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'annotations': {'key': 'annotations', 'type': '[MicrosoftGraphProfileCardAnnotation]'},
        'directory_property_name': {'key': 'directoryPropertyName', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,
        additional_properties: Optional[Dict[str, object]] = None,
        annotations: Optional[List["MicrosoftGraphProfileCardAnnotation"]] = None,
        directory_property_name: Optional[str] = None,
        **kwargs
    ):
        super(MicrosoftGraphProfileCardProperty, self).__init__(id=id, **kwargs)
        self.additional_properties = additional_properties
        self.annotations = annotations
        self.directory_property_name = directory_property_name


class MicrosoftGraphProvisionedPlan(msrest.serialization.Model):
    """provisionedPlan.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param capability_status: For example, 'Enabled'.
    :type capability_status: str
    :param provisioning_status: For example, 'Success'.
    :type provisioning_status: str
    :param service: The name of the service; for example, 'AccessControlS2S'.
    :type service: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'capability_status': {'key': 'capabilityStatus', 'type': 'str'},
        'provisioning_status': {'key': 'provisioningStatus', 'type': 'str'},
        'service': {'key': 'service', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        capability_status: Optional[str] = None,
        provisioning_status: Optional[str] = None,
        service: Optional[str] = None,
        **kwargs
    ):
        super(MicrosoftGraphProvisionedPlan, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.capability_status = capability_status
        self.provisioning_status = provisioning_status
        self.service = service


class MicrosoftGraphScopedRoleMembership(MicrosoftGraphEntity):
    """scopedRoleMembership.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param administrative_unit_id: Unique identifier for the administrative unit that the directory
     role is scoped to.
    :type administrative_unit_id: str
    :param role_id: Unique identifier for the directory role that the member is in.
    :type role_id: str
    :param display_name: The identity's display name. Note that this may not always be available or
     up to date. For example, if a user changes their display name, the API may show the new value
     in a future response, but the items associated with the user won't show up as having changed
     when using delta.
    :type display_name: str
    :param id_role_member_info_id: Unique identifier for the identity.
    :type id_role_member_info_id: str
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'administrative_unit_id': {'key': 'administrativeUnitId', 'type': 'str'},
        'role_id': {'key': 'roleId', 'type': 'str'},
        'display_name': {'key': 'roleMemberInfo.displayName', 'type': 'str'},
        'id_role_member_info_id': {'key': 'roleMemberInfo.id', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,
        additional_properties: Optional[Dict[str, object]] = None,
        administrative_unit_id: Optional[str] = None,
        role_id: Optional[str] = None,
        display_name: Optional[str] = None,
        id_role_member_info_id: Optional[str] = None,
        **kwargs
    ):
        super(MicrosoftGraphScopedRoleMembership, self).__init__(id=id, **kwargs)
        self.additional_properties = additional_properties
        self.administrative_unit_id = administrative_unit_id
        self.role_id = role_id
        self.display_name = display_name
        self.id_role_member_info_id = id_role_member_info_id


class MicrosoftGraphServicePlanInfo(msrest.serialization.Model):
    """servicePlanInfo.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param applies_to: The object the service plan can be assigned to. Possible values:'User' -
     service plan can be assigned to individual users.'Company' - service plan can be assigned to
     the entire tenant.
    :type applies_to: str
    :param provisioning_status: The provisioning status of the service plan. Possible
     values:'Success' - Service is fully provisioned.'Disabled' - Service has been
     disabled.'PendingInput' - Service is not yet provisioned; awaiting service
     confirmation.'PendingActivation' - Service is provisioned but requires explicit activation by
     administrator (for example, Intune_O365 service plan)'PendingProvisioning' - Microsoft has
     added a new service to the product SKU and it has not been activated in the tenant, yet.
    :type provisioning_status: str
    :param service_plan_id: The unique identifier of the service plan.
    :type service_plan_id: str
    :param service_plan_name: The name of the service plan.
    :type service_plan_name: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'applies_to': {'key': 'appliesTo', 'type': 'str'},
        'provisioning_status': {'key': 'provisioningStatus', 'type': 'str'},
        'service_plan_id': {'key': 'servicePlanId', 'type': 'str'},
        'service_plan_name': {'key': 'servicePlanName', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        applies_to: Optional[str] = None,
        provisioning_status: Optional[str] = None,
        service_plan_id: Optional[str] = None,
        service_plan_name: Optional[str] = None,
        **kwargs
    ):
        super(MicrosoftGraphServicePlanInfo, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.applies_to = applies_to
        self.provisioning_status = provisioning_status
        self.service_plan_id = service_plan_id
        self.service_plan_name = service_plan_name


class MicrosoftGraphSettingTemplateValue(msrest.serialization.Model):
    """settingTemplateValue.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param default_value: Default value for the setting.
    :type default_value: str
    :param description: Description of the setting.
    :type description: str
    :param name: Name of the setting.
    :type name: str
    :param type: Type of the setting.
    :type type: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'default_value': {'key': 'defaultValue', 'type': 'str'},
        'description': {'key': 'description', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        default_value: Optional[str] = None,
        description: Optional[str] = None,
        name: Optional[str] = None,
        type: Optional[str] = None,
        **kwargs
    ):
        super(MicrosoftGraphSettingTemplateValue, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.default_value = default_value
        self.description = description
        self.name = name
        self.type = type


class MicrosoftGraphSettingValue(msrest.serialization.Model):
    """settingValue.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param name: Name of the setting (as defined by the groupSettingTemplate).
    :type name: str
    :param value: Value of the setting.
    :type value: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'name': {'key': 'name', 'type': 'str'},
        'value': {'key': 'value', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        name: Optional[str] = None,
        value: Optional[str] = None,
        **kwargs
    ):
        super(MicrosoftGraphSettingValue, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.name = name
        self.value = value


class MicrosoftGraphSubscribedSku(MicrosoftGraphEntity):
    """subscribedSku.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param applies_to: For example, 'User' or 'Company'.
    :type applies_to: str
    :param capability_status: Possible values are: Enabled, Warning, Suspended, Deleted, LockedOut.
    :type capability_status: str
    :param consumed_units: The number of licenses that have been assigned.
    :type consumed_units: int
    :param prepaid_units: licenseUnitsDetail.
    :type prepaid_units: ~identity_directory_management.models.MicrosoftGraphLicenseUnitsDetail
    :param service_plans: Information about the service plans that are available with the SKU. Not
     nullable.
    :type service_plans: list[~identity_directory_management.models.MicrosoftGraphServicePlanInfo]
    :param sku_id: The unique identifier (GUID) for the service SKU.
    :type sku_id: str
    :param sku_part_number: The SKU part number; for example: 'AAD_PREMIUM' or 'RMSBASIC'. To get a
     list of commercial subscriptions that an organization has acquired, see List subscribedSkus.
    :type sku_part_number: str
    """

    _validation = {
        'consumed_units': {'maximum': 2147483647, 'minimum': -2147483648},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'applies_to': {'key': 'appliesTo', 'type': 'str'},
        'capability_status': {'key': 'capabilityStatus', 'type': 'str'},
        'consumed_units': {'key': 'consumedUnits', 'type': 'int'},
        'prepaid_units': {'key': 'prepaidUnits', 'type': 'MicrosoftGraphLicenseUnitsDetail'},
        'service_plans': {'key': 'servicePlans', 'type': '[MicrosoftGraphServicePlanInfo]'},
        'sku_id': {'key': 'skuId', 'type': 'str'},
        'sku_part_number': {'key': 'skuPartNumber', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,
        additional_properties: Optional[Dict[str, object]] = None,
        applies_to: Optional[str] = None,
        capability_status: Optional[str] = None,
        consumed_units: Optional[int] = None,
        prepaid_units: Optional["MicrosoftGraphLicenseUnitsDetail"] = None,
        service_plans: Optional[List["MicrosoftGraphServicePlanInfo"]] = None,
        sku_id: Optional[str] = None,
        sku_part_number: Optional[str] = None,
        **kwargs
    ):
        super(MicrosoftGraphSubscribedSku, self).__init__(id=id, **kwargs)
        self.additional_properties = additional_properties
        self.applies_to = applies_to
        self.capability_status = capability_status
        self.consumed_units = consumed_units
        self.prepaid_units = prepaid_units
        self.service_plans = service_plans
        self.sku_id = sku_id
        self.sku_part_number = sku_part_number


class MicrosoftGraphVerifiedDomain(msrest.serialization.Model):
    """verifiedDomain.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param capabilities: For example, 'Email', 'OfficeCommunicationsOnline'.
    :type capabilities: str
    :param is_default: true if this is the default domain associated with the tenant; otherwise,
     false.
    :type is_default: bool
    :param is_initial: true if this is the initial domain associated with the tenant; otherwise,
     false.
    :type is_initial: bool
    :param name: The domain name; for example, 'contoso.onmicrosoft.com'.
    :type name: str
    :param type: For example, 'Managed'.
    :type type: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'capabilities': {'key': 'capabilities', 'type': 'str'},
        'is_default': {'key': 'isDefault', 'type': 'bool'},
        'is_initial': {'key': 'isInitial', 'type': 'bool'},
        'name': {'key': 'name', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        capabilities: Optional[str] = None,
        is_default: Optional[bool] = None,
        is_initial: Optional[bool] = None,
        name: Optional[str] = None,
        type: Optional[str] = None,
        **kwargs
    ):
        super(MicrosoftGraphVerifiedDomain, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.capabilities = capabilities
        self.is_default = is_default
        self.is_initial = is_initial
        self.name = name
        self.type = type


class OdataError(msrest.serialization.Model):
    """OdataError.

    All required parameters must be populated in order to send to Azure.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param error: Required.
    :type error: ~identity_directory_management.models.OdataErrorMain
    """

    _validation = {
        'error': {'required': True},
    }

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'error': {'key': 'error', 'type': 'OdataErrorMain'},
    }

    def __init__(
        self,
        *,
        error: "OdataErrorMain",
        additional_properties: Optional[Dict[str, object]] = None,
        **kwargs
    ):
        super(OdataError, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.error = error


class OdataErrorDetail(msrest.serialization.Model):
    """OdataErrorDetail.

    All required parameters must be populated in order to send to Azure.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param code: Required.
    :type code: str
    :param message: Required.
    :type message: str
    :param target:
    :type target: str
    """

    _validation = {
        'code': {'required': True},
        'message': {'required': True},
    }

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'code': {'key': 'code', 'type': 'str'},
        'message': {'key': 'message', 'type': 'str'},
        'target': {'key': 'target', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        code: str,
        message: str,
        additional_properties: Optional[Dict[str, object]] = None,
        target: Optional[str] = None,
        **kwargs
    ):
        super(OdataErrorDetail, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.code = code
        self.message = message
        self.target = target


class OdataErrorMain(msrest.serialization.Model):
    """OdataErrorMain.

    All required parameters must be populated in order to send to Azure.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param code: Required.
    :type code: str
    :param message: Required.
    :type message: str
    :param target:
    :type target: str
    :param details:
    :type details: list[~identity_directory_management.models.OdataErrorDetail]
    :param innererror: The structure of this object is service-specific.
    :type innererror: dict[str, object]
    """

    _validation = {
        'code': {'required': True},
        'message': {'required': True},
    }

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'code': {'key': 'code', 'type': 'str'},
        'message': {'key': 'message', 'type': 'str'},
        'target': {'key': 'target', 'type': 'str'},
        'details': {'key': 'details', 'type': '[OdataErrorDetail]'},
        'innererror': {'key': 'innererror', 'type': '{object}'},
    }

    def __init__(
        self,
        *,
        code: str,
        message: str,
        additional_properties: Optional[Dict[str, object]] = None,
        target: Optional[str] = None,
        details: Optional[List["OdataErrorDetail"]] = None,
        innererror: Optional[Dict[str, object]] = None,
        **kwargs
    ):
        super(OdataErrorMain, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.code = code
        self.message = message
        self.target = target
        self.details = details
        self.innererror = innererror


class Paths116Bv3CDirectoryroletemplatesDirectoryroletemplateIdMicrosoftGraphGetmemberobjectsPostRequestbodyContentApplicationJsonSchema(msrest.serialization.Model):
    """Paths116Bv3CDirectoryroletemplatesDirectoryroletemplateIdMicrosoftGraphGetmemberobjectsPostRequestbodyContentApplicationJsonSchema.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param security_enabled_only:
    :type security_enabled_only: bool
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'security_enabled_only': {'key': 'securityEnabledOnly', 'type': 'bool'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        security_enabled_only: Optional[bool] = False,
        **kwargs
    ):
        super(Paths116Bv3CDirectoryroletemplatesDirectoryroletemplateIdMicrosoftGraphGetmemberobjectsPostRequestbodyContentApplicationJsonSchema, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.security_enabled_only = security_enabled_only


class Paths11G1VgqOrganizationMicrosoftGraphGetbyidsPostRequestbodyContentApplicationJsonSchema(msrest.serialization.Model):
    """Paths11G1VgqOrganizationMicrosoftGraphGetbyidsPostRequestbodyContentApplicationJsonSchema.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param ids:
    :type ids: list[str]
    :param types:
    :type types: list[str]
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'ids': {'key': 'ids', 'type': '[str]'},
        'types': {'key': 'types', 'type': '[str]'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        ids: Optional[List[str]] = None,
        types: Optional[List[str]] = None,
        **kwargs
    ):
        super(Paths11G1VgqOrganizationMicrosoftGraphGetbyidsPostRequestbodyContentApplicationJsonSchema, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.ids = ids
        self.types = types


class Paths12Azg33ContactsMicrosoftGraphGetbyidsPostRequestbodyContentApplicationJsonSchema(msrest.serialization.Model):
    """Paths12Azg33ContactsMicrosoftGraphGetbyidsPostRequestbodyContentApplicationJsonSchema.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param ids:
    :type ids: list[str]
    :param types:
    :type types: list[str]
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'ids': {'key': 'ids', 'type': '[str]'},
        'types': {'key': 'types', 'type': '[str]'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        ids: Optional[List[str]] = None,
        types: Optional[List[str]] = None,
        **kwargs
    ):
        super(Paths12Azg33ContactsMicrosoftGraphGetbyidsPostRequestbodyContentApplicationJsonSchema, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.ids = ids
        self.types = types


class Paths14VnqnuDirectoryrolesDirectoryroleIdMicrosoftGraphCheckmemberobjectsPostRequestbodyContentApplicationJsonSchema(msrest.serialization.Model):
    """Paths14VnqnuDirectoryrolesDirectoryroleIdMicrosoftGraphCheckmemberobjectsPostRequestbodyContentApplicationJsonSchema.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param ids:
    :type ids: list[str]
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'ids': {'key': 'ids', 'type': '[str]'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        ids: Optional[List[str]] = None,
        **kwargs
    ):
        super(Paths14VnqnuDirectoryrolesDirectoryroleIdMicrosoftGraphCheckmemberobjectsPostRequestbodyContentApplicationJsonSchema, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.ids = ids


class Paths1545W8NDevicesMicrosoftGraphGetbyidsPostRequestbodyContentApplicationJsonSchema(msrest.serialization.Model):
    """Paths1545W8NDevicesMicrosoftGraphGetbyidsPostRequestbodyContentApplicationJsonSchema.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param ids:
    :type ids: list[str]
    :param types:
    :type types: list[str]
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'ids': {'key': 'ids', 'type': '[str]'},
        'types': {'key': 'types', 'type': '[str]'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        ids: Optional[List[str]] = None,
        types: Optional[List[str]] = None,
        **kwargs
    ):
        super(Paths1545W8NDevicesMicrosoftGraphGetbyidsPostRequestbodyContentApplicationJsonSchema, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.ids = ids
        self.types = types


class Paths175Njh2ContactsOrgcontactIdMicrosoftGraphCheckmembergroupsPostRequestbodyContentApplicationJsonSchema(msrest.serialization.Model):
    """Paths175Njh2ContactsOrgcontactIdMicrosoftGraphCheckmembergroupsPostRequestbodyContentApplicationJsonSchema.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param group_ids:
    :type group_ids: list[str]
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'group_ids': {'key': 'groupIds', 'type': '[str]'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        group_ids: Optional[List[str]] = None,
        **kwargs
    ):
        super(Paths175Njh2ContactsOrgcontactIdMicrosoftGraphCheckmembergroupsPostRequestbodyContentApplicationJsonSchema, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.group_ids = group_ids


class Paths17Hg0B5DirectorysettingtemplatesDirectorysettingtemplateIdMicrosoftGraphGetmemberobjectsPostRequestbodyContentApplicationJsonSchema(msrest.serialization.Model):
    """Paths17Hg0B5DirectorysettingtemplatesDirectorysettingtemplateIdMicrosoftGraphGetmemberobjectsPostRequestbodyContentApplicationJsonSchema.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param security_enabled_only:
    :type security_enabled_only: bool
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'security_enabled_only': {'key': 'securityEnabledOnly', 'type': 'bool'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        security_enabled_only: Optional[bool] = False,
        **kwargs
    ):
        super(Paths17Hg0B5DirectorysettingtemplatesDirectorysettingtemplateIdMicrosoftGraphGetmemberobjectsPostRequestbodyContentApplicationJsonSchema, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.security_enabled_only = security_enabled_only


class Paths17JleimDevicesDeviceIdMicrosoftGraphCheckmemberobjectsPostRequestbodyContentApplicationJsonSchema(msrest.serialization.Model):
    """Paths17JleimDevicesDeviceIdMicrosoftGraphCheckmemberobjectsPostRequestbodyContentApplicationJsonSchema.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param ids:
    :type ids: list[str]
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'ids': {'key': 'ids', 'type': '[str]'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        ids: Optional[List[str]] = None,
        **kwargs
    ):
        super(Paths17JleimDevicesDeviceIdMicrosoftGraphCheckmemberobjectsPostRequestbodyContentApplicationJsonSchema, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.ids = ids


class Paths1B6V5BxAdministrativeunitsMicrosoftGraphValidatepropertiesPostRequestbodyContentApplicationJsonSchema(msrest.serialization.Model):
    """Paths1B6V5BxAdministrativeunitsMicrosoftGraphValidatepropertiesPostRequestbodyContentApplicationJsonSchema.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param entity_type:
    :type entity_type: str
    :param display_name:
    :type display_name: str
    :param mail_nickname:
    :type mail_nickname: str
    :param on_behalf_of_user_id:
    :type on_behalf_of_user_id: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'entity_type': {'key': 'entityType', 'type': 'str'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'mail_nickname': {'key': 'mailNickname', 'type': 'str'},
        'on_behalf_of_user_id': {'key': 'onBehalfOfUserId', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        entity_type: Optional[str] = None,
        display_name: Optional[str] = None,
        mail_nickname: Optional[str] = None,
        on_behalf_of_user_id: Optional[str] = None,
        **kwargs
    ):
        super(Paths1B6V5BxAdministrativeunitsMicrosoftGraphValidatepropertiesPostRequestbodyContentApplicationJsonSchema, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.entity_type = entity_type
        self.display_name = display_name
        self.mail_nickname = mail_nickname
        self.on_behalf_of_user_id = on_behalf_of_user_id


class Paths1Binbx4DirectoryroletemplatesMicrosoftGraphValidatepropertiesPostRequestbodyContentApplicationJsonSchema(msrest.serialization.Model):
    """Paths1Binbx4DirectoryroletemplatesMicrosoftGraphValidatepropertiesPostRequestbodyContentApplicationJsonSchema.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param entity_type:
    :type entity_type: str
    :param display_name:
    :type display_name: str
    :param mail_nickname:
    :type mail_nickname: str
    :param on_behalf_of_user_id:
    :type on_behalf_of_user_id: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'entity_type': {'key': 'entityType', 'type': 'str'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'mail_nickname': {'key': 'mailNickname', 'type': 'str'},
        'on_behalf_of_user_id': {'key': 'onBehalfOfUserId', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        entity_type: Optional[str] = None,
        display_name: Optional[str] = None,
        mail_nickname: Optional[str] = None,
        on_behalf_of_user_id: Optional[str] = None,
        **kwargs
    ):
        super(Paths1Binbx4DirectoryroletemplatesMicrosoftGraphValidatepropertiesPostRequestbodyContentApplicationJsonSchema, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.entity_type = entity_type
        self.display_name = display_name
        self.mail_nickname = mail_nickname
        self.on_behalf_of_user_id = on_behalf_of_user_id


class Paths1Bsgnp0ContactsMicrosoftGraphGetuserownedobjectsPostRequestbodyContentApplicationJsonSchema(msrest.serialization.Model):
    """Paths1Bsgnp0ContactsMicrosoftGraphGetuserownedobjectsPostRequestbodyContentApplicationJsonSchema.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param user_id:
    :type user_id: str
    :param type:
    :type type: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'user_id': {'key': 'userId', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        user_id: Optional[str] = None,
        type: Optional[str] = None,
        **kwargs
    ):
        super(Paths1Bsgnp0ContactsMicrosoftGraphGetuserownedobjectsPostRequestbodyContentApplicationJsonSchema, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.user_id = user_id
        self.type = type


class Paths1G440InOrganizationMicrosoftGraphValidatepropertiesPostRequestbodyContentApplicationJsonSchema(msrest.serialization.Model):
    """Paths1G440InOrganizationMicrosoftGraphValidatepropertiesPostRequestbodyContentApplicationJsonSchema.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param entity_type:
    :type entity_type: str
    :param display_name:
    :type display_name: str
    :param mail_nickname:
    :type mail_nickname: str
    :param on_behalf_of_user_id:
    :type on_behalf_of_user_id: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'entity_type': {'key': 'entityType', 'type': 'str'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'mail_nickname': {'key': 'mailNickname', 'type': 'str'},
        'on_behalf_of_user_id': {'key': 'onBehalfOfUserId', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        entity_type: Optional[str] = None,
        display_name: Optional[str] = None,
        mail_nickname: Optional[str] = None,
        on_behalf_of_user_id: Optional[str] = None,
        **kwargs
    ):
        super(Paths1G440InOrganizationMicrosoftGraphValidatepropertiesPostRequestbodyContentApplicationJsonSchema, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.entity_type = entity_type
        self.display_name = display_name
        self.mail_nickname = mail_nickname
        self.on_behalf_of_user_id = on_behalf_of_user_id


class Paths1Hzls82OrganizationIdMicrosoftGraphGetmemberobjectsPostRequestbodyContentApplicationJsonSchema(msrest.serialization.Model):
    """Paths1Hzls82OrganizationIdMicrosoftGraphGetmemberobjectsPostRequestbodyContentApplicationJsonSchema.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param security_enabled_only:
    :type security_enabled_only: bool
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'security_enabled_only': {'key': 'securityEnabledOnly', 'type': 'bool'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        security_enabled_only: Optional[bool] = False,
        **kwargs
    ):
        super(Paths1Hzls82OrganizationIdMicrosoftGraphGetmemberobjectsPostRequestbodyContentApplicationJsonSchema, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.security_enabled_only = security_enabled_only


class Paths1I0TqyfDirectoryrolesMicrosoftGraphValidatepropertiesPostRequestbodyContentApplicationJsonSchema(msrest.serialization.Model):
    """Paths1I0TqyfDirectoryrolesMicrosoftGraphValidatepropertiesPostRequestbodyContentApplicationJsonSchema.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param entity_type:
    :type entity_type: str
    :param display_name:
    :type display_name: str
    :param mail_nickname:
    :type mail_nickname: str
    :param on_behalf_of_user_id:
    :type on_behalf_of_user_id: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'entity_type': {'key': 'entityType', 'type': 'str'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'mail_nickname': {'key': 'mailNickname', 'type': 'str'},
        'on_behalf_of_user_id': {'key': 'onBehalfOfUserId', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        entity_type: Optional[str] = None,
        display_name: Optional[str] = None,
        mail_nickname: Optional[str] = None,
        on_behalf_of_user_id: Optional[str] = None,
        **kwargs
    ):
        super(Paths1I0TqyfDirectoryrolesMicrosoftGraphValidatepropertiesPostRequestbodyContentApplicationJsonSchema, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.entity_type = entity_type
        self.display_name = display_name
        self.mail_nickname = mail_nickname
        self.on_behalf_of_user_id = on_behalf_of_user_id


class Paths1Ig9RahDirectoryrolesMicrosoftGraphGetbyidsPostRequestbodyContentApplicationJsonSchema(msrest.serialization.Model):
    """Paths1Ig9RahDirectoryrolesMicrosoftGraphGetbyidsPostRequestbodyContentApplicationJsonSchema.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param ids:
    :type ids: list[str]
    :param types:
    :type types: list[str]
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'ids': {'key': 'ids', 'type': '[str]'},
        'types': {'key': 'types', 'type': '[str]'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        ids: Optional[List[str]] = None,
        types: Optional[List[str]] = None,
        **kwargs
    ):
        super(Paths1Ig9RahDirectoryrolesMicrosoftGraphGetbyidsPostRequestbodyContentApplicationJsonSchema, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.ids = ids
        self.types = types


class Paths1M18OhpContactsOrgcontactIdMicrosoftGraphGetmemberobjectsPostRequestbodyContentApplicationJsonSchema(msrest.serialization.Model):
    """Paths1M18OhpContactsOrgcontactIdMicrosoftGraphGetmemberobjectsPostRequestbodyContentApplicationJsonSchema.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param security_enabled_only:
    :type security_enabled_only: bool
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'security_enabled_only': {'key': 'securityEnabledOnly', 'type': 'bool'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        security_enabled_only: Optional[bool] = False,
        **kwargs
    ):
        super(Paths1M18OhpContactsOrgcontactIdMicrosoftGraphGetmemberobjectsPostRequestbodyContentApplicationJsonSchema, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.security_enabled_only = security_enabled_only


class Paths1P1U1G2DirectorysettingtemplatesDirectorysettingtemplateIdMicrosoftGraphCheckmemberobjectsPostRequestbodyContentApplicationJsonSchema(msrest.serialization.Model):
    """Paths1P1U1G2DirectorysettingtemplatesDirectorysettingtemplateIdMicrosoftGraphCheckmemberobjectsPostRequestbodyContentApplicationJsonSchema.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param ids:
    :type ids: list[str]
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'ids': {'key': 'ids', 'type': '[str]'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        ids: Optional[List[str]] = None,
        **kwargs
    ):
        super(Paths1P1U1G2DirectorysettingtemplatesDirectorysettingtemplateIdMicrosoftGraphCheckmemberobjectsPostRequestbodyContentApplicationJsonSchema, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.ids = ids


class Paths1Q1Zk0IAdministrativeunitsMicrosoftGraphGetbyidsPostRequestbodyContentApplicationJsonSchema(msrest.serialization.Model):
    """Paths1Q1Zk0IAdministrativeunitsMicrosoftGraphGetbyidsPostRequestbodyContentApplicationJsonSchema.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param ids:
    :type ids: list[str]
    :param types:
    :type types: list[str]
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'ids': {'key': 'ids', 'type': '[str]'},
        'types': {'key': 'types', 'type': '[str]'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        ids: Optional[List[str]] = None,
        types: Optional[List[str]] = None,
        **kwargs
    ):
        super(Paths1Q1Zk0IAdministrativeunitsMicrosoftGraphGetbyidsPostRequestbodyContentApplicationJsonSchema, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.ids = ids
        self.types = types


class Paths1QbmtipDevicesDeviceIdMicrosoftGraphGetmemberobjectsPostRequestbodyContentApplicationJsonSchema(msrest.serialization.Model):
    """Paths1QbmtipDevicesDeviceIdMicrosoftGraphGetmemberobjectsPostRequestbodyContentApplicationJsonSchema.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param security_enabled_only:
    :type security_enabled_only: bool
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'security_enabled_only': {'key': 'securityEnabledOnly', 'type': 'bool'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        security_enabled_only: Optional[bool] = False,
        **kwargs
    ):
        super(Paths1QbmtipDevicesDeviceIdMicrosoftGraphGetmemberobjectsPostRequestbodyContentApplicationJsonSchema, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.security_enabled_only = security_enabled_only


class Paths1T6Lra6ContractsMicrosoftGraphGetbyidsPostRequestbodyContentApplicationJsonSchema(msrest.serialization.Model):
    """Paths1T6Lra6ContractsMicrosoftGraphGetbyidsPostRequestbodyContentApplicationJsonSchema.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param ids:
    :type ids: list[str]
    :param types:
    :type types: list[str]
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'ids': {'key': 'ids', 'type': '[str]'},
        'types': {'key': 'types', 'type': '[str]'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        ids: Optional[List[str]] = None,
        types: Optional[List[str]] = None,
        **kwargs
    ):
        super(Paths1T6Lra6ContractsMicrosoftGraphGetbyidsPostRequestbodyContentApplicationJsonSchema, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.ids = ids
        self.types = types


class Paths1UpdmwwAdministrativeunitsAdministrativeunitIdMicrosoftGraphCheckmembergroupsPostRequestbodyContentApplicationJsonSchema(msrest.serialization.Model):
    """Paths1UpdmwwAdministrativeunitsAdministrativeunitIdMicrosoftGraphCheckmembergroupsPostRequestbodyContentApplicationJsonSchema.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param group_ids:
    :type group_ids: list[str]
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'group_ids': {'key': 'groupIds', 'type': '[str]'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        group_ids: Optional[List[str]] = None,
        **kwargs
    ):
        super(Paths1UpdmwwAdministrativeunitsAdministrativeunitIdMicrosoftGraphCheckmembergroupsPostRequestbodyContentApplicationJsonSchema, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.group_ids = group_ids


class Paths1Vfts8RAdministrativeunitsAdministrativeunitIdMicrosoftGraphCheckmemberobjectsPostRequestbodyContentApplicationJsonSchema(msrest.serialization.Model):
    """Paths1Vfts8RAdministrativeunitsAdministrativeunitIdMicrosoftGraphCheckmemberobjectsPostRequestbodyContentApplicationJsonSchema.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param ids:
    :type ids: list[str]
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'ids': {'key': 'ids', 'type': '[str]'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        ids: Optional[List[str]] = None,
        **kwargs
    ):
        super(Paths1Vfts8RAdministrativeunitsAdministrativeunitIdMicrosoftGraphCheckmemberobjectsPostRequestbodyContentApplicationJsonSchema, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.ids = ids


class Paths1Win9C3AdministrativeunitsAdministrativeunitIdMicrosoftGraphGetmembergroupsPostRequestbodyContentApplicationJsonSchema(msrest.serialization.Model):
    """Paths1Win9C3AdministrativeunitsAdministrativeunitIdMicrosoftGraphGetmembergroupsPostRequestbodyContentApplicationJsonSchema.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param security_enabled_only:
    :type security_enabled_only: bool
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'security_enabled_only': {'key': 'securityEnabledOnly', 'type': 'bool'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        security_enabled_only: Optional[bool] = False,
        **kwargs
    ):
        super(Paths1Win9C3AdministrativeunitsAdministrativeunitIdMicrosoftGraphGetmembergroupsPostRequestbodyContentApplicationJsonSchema, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.security_enabled_only = security_enabled_only


class Paths1Yxqrp7OrganizationIdMicrosoftGraphCheckmemberobjectsPostRequestbodyContentApplicationJsonSchema(msrest.serialization.Model):
    """Paths1Yxqrp7OrganizationIdMicrosoftGraphCheckmemberobjectsPostRequestbodyContentApplicationJsonSchema.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param ids:
    :type ids: list[str]
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'ids': {'key': 'ids', 'type': '[str]'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        ids: Optional[List[str]] = None,
        **kwargs
    ):
        super(Paths1Yxqrp7OrganizationIdMicrosoftGraphCheckmemberobjectsPostRequestbodyContentApplicationJsonSchema, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.ids = ids


class Paths2Iq6I3DirectoryroletemplatesMicrosoftGraphGetuserownedobjectsPostRequestbodyContentApplicationJsonSchema(msrest.serialization.Model):
    """Paths2Iq6I3DirectoryroletemplatesMicrosoftGraphGetuserownedobjectsPostRequestbodyContentApplicationJsonSchema.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param user_id:
    :type user_id: str
    :param type:
    :type type: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'user_id': {'key': 'userId', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        user_id: Optional[str] = None,
        type: Optional[str] = None,
        **kwargs
    ):
        super(Paths2Iq6I3DirectoryroletemplatesMicrosoftGraphGetuserownedobjectsPostRequestbodyContentApplicationJsonSchema, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.user_id = user_id
        self.type = type


class Paths30M7S8ContractsContractIdMicrosoftGraphCheckmembergroupsPostRequestbodyContentApplicationJsonSchema(msrest.serialization.Model):
    """Paths30M7S8ContractsContractIdMicrosoftGraphCheckmembergroupsPostRequestbodyContentApplicationJsonSchema.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param group_ids:
    :type group_ids: list[str]
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'group_ids': {'key': 'groupIds', 'type': '[str]'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        group_ids: Optional[List[str]] = None,
        **kwargs
    ):
        super(Paths30M7S8ContractsContractIdMicrosoftGraphCheckmembergroupsPostRequestbodyContentApplicationJsonSchema, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.group_ids = group_ids


class Paths3Y2P0KContactsOrgcontactIdMicrosoftGraphGetmembergroupsPostRequestbodyContentApplicationJsonSchema(msrest.serialization.Model):
    """Paths3Y2P0KContactsOrgcontactIdMicrosoftGraphGetmembergroupsPostRequestbodyContentApplicationJsonSchema.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param security_enabled_only:
    :type security_enabled_only: bool
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'security_enabled_only': {'key': 'securityEnabledOnly', 'type': 'bool'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        security_enabled_only: Optional[bool] = False,
        **kwargs
    ):
        super(Paths3Y2P0KContactsOrgcontactIdMicrosoftGraphGetmembergroupsPostRequestbodyContentApplicationJsonSchema, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.security_enabled_only = security_enabled_only


class Paths51Hjg8DevicesMicrosoftGraphGetuserownedobjectsPostRequestbodyContentApplicationJsonSchema(msrest.serialization.Model):
    """Paths51Hjg8DevicesMicrosoftGraphGetuserownedobjectsPostRequestbodyContentApplicationJsonSchema.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param user_id:
    :type user_id: str
    :param type:
    :type type: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'user_id': {'key': 'userId', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        user_id: Optional[str] = None,
        type: Optional[str] = None,
        **kwargs
    ):
        super(Paths51Hjg8DevicesMicrosoftGraphGetuserownedobjectsPostRequestbodyContentApplicationJsonSchema, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.user_id = user_id
        self.type = type


class Paths53Kc5ADirectorysettingtemplatesMicrosoftGraphGetbyidsPostRequestbodyContentApplicationJsonSchema(msrest.serialization.Model):
    """Paths53Kc5ADirectorysettingtemplatesMicrosoftGraphGetbyidsPostRequestbodyContentApplicationJsonSchema.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param ids:
    :type ids: list[str]
    :param types:
    :type types: list[str]
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'ids': {'key': 'ids', 'type': '[str]'},
        'types': {'key': 'types', 'type': '[str]'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        ids: Optional[List[str]] = None,
        types: Optional[List[str]] = None,
        **kwargs
    ):
        super(Paths53Kc5ADirectorysettingtemplatesMicrosoftGraphGetbyidsPostRequestbodyContentApplicationJsonSchema, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.ids = ids
        self.types = types


class Paths6Crxp6ContractsContractIdMicrosoftGraphGetmemberobjectsPostRequestbodyContentApplicationJsonSchema(msrest.serialization.Model):
    """Paths6Crxp6ContractsContractIdMicrosoftGraphGetmemberobjectsPostRequestbodyContentApplicationJsonSchema.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param security_enabled_only:
    :type security_enabled_only: bool
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'security_enabled_only': {'key': 'securityEnabledOnly', 'type': 'bool'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        security_enabled_only: Optional[bool] = False,
        **kwargs
    ):
        super(Paths6Crxp6ContractsContractIdMicrosoftGraphGetmemberobjectsPostRequestbodyContentApplicationJsonSchema, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.security_enabled_only = security_enabled_only


class Paths6Ovq2LDirectoryroletemplatesMicrosoftGraphGetbyidsPostRequestbodyContentApplicationJsonSchema(msrest.serialization.Model):
    """Paths6Ovq2LDirectoryroletemplatesMicrosoftGraphGetbyidsPostRequestbodyContentApplicationJsonSchema.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param ids:
    :type ids: list[str]
    :param types:
    :type types: list[str]
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'ids': {'key': 'ids', 'type': '[str]'},
        'types': {'key': 'types', 'type': '[str]'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        ids: Optional[List[str]] = None,
        types: Optional[List[str]] = None,
        **kwargs
    ):
        super(Paths6Ovq2LDirectoryroletemplatesMicrosoftGraphGetbyidsPostRequestbodyContentApplicationJsonSchema, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.ids = ids
        self.types = types


class Paths6Pdj1BDirectorysettingtemplatesMicrosoftGraphGetuserownedobjectsPostRequestbodyContentApplicationJsonSchema(msrest.serialization.Model):
    """Paths6Pdj1BDirectorysettingtemplatesMicrosoftGraphGetuserownedobjectsPostRequestbodyContentApplicationJsonSchema.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param user_id:
    :type user_id: str
    :param type:
    :type type: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'user_id': {'key': 'userId', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        user_id: Optional[str] = None,
        type: Optional[str] = None,
        **kwargs
    ):
        super(Paths6Pdj1BDirectorysettingtemplatesMicrosoftGraphGetuserownedobjectsPostRequestbodyContentApplicationJsonSchema, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.user_id = user_id
        self.type = type


class Paths7Cg04SContactsMicrosoftGraphValidatepropertiesPostRequestbodyContentApplicationJsonSchema(msrest.serialization.Model):
    """Paths7Cg04SContactsMicrosoftGraphValidatepropertiesPostRequestbodyContentApplicationJsonSchema.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param entity_type:
    :type entity_type: str
    :param display_name:
    :type display_name: str
    :param mail_nickname:
    :type mail_nickname: str
    :param on_behalf_of_user_id:
    :type on_behalf_of_user_id: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'entity_type': {'key': 'entityType', 'type': 'str'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'mail_nickname': {'key': 'mailNickname', 'type': 'str'},
        'on_behalf_of_user_id': {'key': 'onBehalfOfUserId', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        entity_type: Optional[str] = None,
        display_name: Optional[str] = None,
        mail_nickname: Optional[str] = None,
        on_behalf_of_user_id: Optional[str] = None,
        **kwargs
    ):
        super(Paths7Cg04SContactsMicrosoftGraphValidatepropertiesPostRequestbodyContentApplicationJsonSchema, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.entity_type = entity_type
        self.display_name = display_name
        self.mail_nickname = mail_nickname
        self.on_behalf_of_user_id = on_behalf_of_user_id


class Paths7X6XkrDevicesMicrosoftGraphValidatepropertiesPostRequestbodyContentApplicationJsonSchema(msrest.serialization.Model):
    """Paths7X6XkrDevicesMicrosoftGraphValidatepropertiesPostRequestbodyContentApplicationJsonSchema.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param entity_type:
    :type entity_type: str
    :param display_name:
    :type display_name: str
    :param mail_nickname:
    :type mail_nickname: str
    :param on_behalf_of_user_id:
    :type on_behalf_of_user_id: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'entity_type': {'key': 'entityType', 'type': 'str'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'mail_nickname': {'key': 'mailNickname', 'type': 'str'},
        'on_behalf_of_user_id': {'key': 'onBehalfOfUserId', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        entity_type: Optional[str] = None,
        display_name: Optional[str] = None,
        mail_nickname: Optional[str] = None,
        on_behalf_of_user_id: Optional[str] = None,
        **kwargs
    ):
        super(Paths7X6XkrDevicesMicrosoftGraphValidatepropertiesPostRequestbodyContentApplicationJsonSchema, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.entity_type = entity_type
        self.display_name = display_name
        self.mail_nickname = mail_nickname
        self.on_behalf_of_user_id = on_behalf_of_user_id


class Paths7Xm0QcAdministrativeunitsAdministrativeunitIdMicrosoftGraphGetmemberobjectsPostRequestbodyContentApplicationJsonSchema(msrest.serialization.Model):
    """Paths7Xm0QcAdministrativeunitsAdministrativeunitIdMicrosoftGraphGetmemberobjectsPostRequestbodyContentApplicationJsonSchema.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param security_enabled_only:
    :type security_enabled_only: bool
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'security_enabled_only': {'key': 'securityEnabledOnly', 'type': 'bool'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        security_enabled_only: Optional[bool] = False,
        **kwargs
    ):
        super(Paths7Xm0QcAdministrativeunitsAdministrativeunitIdMicrosoftGraphGetmemberobjectsPostRequestbodyContentApplicationJsonSchema, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.security_enabled_only = security_enabled_only


class Paths8Ke2VbContactsOrgcontactIdMicrosoftGraphCheckmemberobjectsPostRequestbodyContentApplicationJsonSchema(msrest.serialization.Model):
    """Paths8Ke2VbContactsOrgcontactIdMicrosoftGraphCheckmemberobjectsPostRequestbodyContentApplicationJsonSchema.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param ids:
    :type ids: list[str]
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'ids': {'key': 'ids', 'type': '[str]'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        ids: Optional[List[str]] = None,
        **kwargs
    ):
        super(Paths8Ke2VbContactsOrgcontactIdMicrosoftGraphCheckmemberobjectsPostRequestbodyContentApplicationJsonSchema, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.ids = ids


class Paths9Kz3QjDirectoryrolesDirectoryroleIdMicrosoftGraphGetmembergroupsPostRequestbodyContentApplicationJsonSchema(msrest.serialization.Model):
    """Paths9Kz3QjDirectoryrolesDirectoryroleIdMicrosoftGraphGetmembergroupsPostRequestbodyContentApplicationJsonSchema.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param security_enabled_only:
    :type security_enabled_only: bool
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'security_enabled_only': {'key': 'securityEnabledOnly', 'type': 'bool'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        security_enabled_only: Optional[bool] = False,
        **kwargs
    ):
        super(Paths9Kz3QjDirectoryrolesDirectoryroleIdMicrosoftGraphGetmembergroupsPostRequestbodyContentApplicationJsonSchema, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.security_enabled_only = security_enabled_only


class Paths9PdmsbContractsContractIdMicrosoftGraphGetmembergroupsPostRequestbodyContentApplicationJsonSchema(msrest.serialization.Model):
    """Paths9PdmsbContractsContractIdMicrosoftGraphGetmembergroupsPostRequestbodyContentApplicationJsonSchema.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param security_enabled_only:
    :type security_enabled_only: bool
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'security_enabled_only': {'key': 'securityEnabledOnly', 'type': 'bool'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        security_enabled_only: Optional[bool] = False,
        **kwargs
    ):
        super(Paths9PdmsbContractsContractIdMicrosoftGraphGetmembergroupsPostRequestbodyContentApplicationJsonSchema, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.security_enabled_only = security_enabled_only


class PathsBwhfj9DirectoryrolesDirectoryroleIdMicrosoftGraphCheckmembergroupsPostRequestbodyContentApplicationJsonSchema(msrest.serialization.Model):
    """PathsBwhfj9DirectoryrolesDirectoryroleIdMicrosoftGraphCheckmembergroupsPostRequestbodyContentApplicationJsonSchema.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param group_ids:
    :type group_ids: list[str]
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'group_ids': {'key': 'groupIds', 'type': '[str]'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        group_ids: Optional[List[str]] = None,
        **kwargs
    ):
        super(PathsBwhfj9DirectoryrolesDirectoryroleIdMicrosoftGraphCheckmembergroupsPostRequestbodyContentApplicationJsonSchema, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.group_ids = group_ids


class PathsMf08MlOrganizationIdMicrosoftGraphCheckmembergroupsPostRequestbodyContentApplicationJsonSchema(msrest.serialization.Model):
    """PathsMf08MlOrganizationIdMicrosoftGraphCheckmembergroupsPostRequestbodyContentApplicationJsonSchema.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param group_ids:
    :type group_ids: list[str]
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'group_ids': {'key': 'groupIds', 'type': '[str]'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        group_ids: Optional[List[str]] = None,
        **kwargs
    ):
        super(PathsMf08MlOrganizationIdMicrosoftGraphCheckmembergroupsPostRequestbodyContentApplicationJsonSchema, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.group_ids = group_ids


class PathsMsgcxjOrganizationMicrosoftGraphGetuserownedobjectsPostRequestbodyContentApplicationJsonSchema(msrest.serialization.Model):
    """PathsMsgcxjOrganizationMicrosoftGraphGetuserownedobjectsPostRequestbodyContentApplicationJsonSchema.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param user_id:
    :type user_id: str
    :param type:
    :type type: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'user_id': {'key': 'userId', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        user_id: Optional[str] = None,
        type: Optional[str] = None,
        **kwargs
    ):
        super(PathsMsgcxjOrganizationMicrosoftGraphGetuserownedobjectsPostRequestbodyContentApplicationJsonSchema, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.user_id = user_id
        self.type = type


class PathsMtp8GiDirectorysettingtemplatesDirectorysettingtemplateIdMicrosoftGraphCheckmembergroupsPostRequestbodyContentApplicationJsonSchema(msrest.serialization.Model):
    """PathsMtp8GiDirectorysettingtemplatesDirectorysettingtemplateIdMicrosoftGraphCheckmembergroupsPostRequestbodyContentApplicationJsonSchema.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param group_ids:
    :type group_ids: list[str]
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'group_ids': {'key': 'groupIds', 'type': '[str]'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        group_ids: Optional[List[str]] = None,
        **kwargs
    ):
        super(PathsMtp8GiDirectorysettingtemplatesDirectorysettingtemplateIdMicrosoftGraphCheckmembergroupsPostRequestbodyContentApplicationJsonSchema, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.group_ids = group_ids


class PathsMwgbeoDirectoryroletemplatesDirectoryroletemplateIdMicrosoftGraphCheckmembergroupsPostRequestbodyContentApplicationJsonSchema(msrest.serialization.Model):
    """PathsMwgbeoDirectoryroletemplatesDirectoryroletemplateIdMicrosoftGraphCheckmembergroupsPostRequestbodyContentApplicationJsonSchema.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param group_ids:
    :type group_ids: list[str]
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'group_ids': {'key': 'groupIds', 'type': '[str]'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        group_ids: Optional[List[str]] = None,
        **kwargs
    ):
        super(PathsMwgbeoDirectoryroletemplatesDirectoryroletemplateIdMicrosoftGraphCheckmembergroupsPostRequestbodyContentApplicationJsonSchema, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.group_ids = group_ids


class PathsNtst38DevicesDeviceIdMicrosoftGraphCheckmembergroupsPostRequestbodyContentApplicationJsonSchema(msrest.serialization.Model):
    """PathsNtst38DevicesDeviceIdMicrosoftGraphCheckmembergroupsPostRequestbodyContentApplicationJsonSchema.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param group_ids:
    :type group_ids: list[str]
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'group_ids': {'key': 'groupIds', 'type': '[str]'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        group_ids: Optional[List[str]] = None,
        **kwargs
    ):
        super(PathsNtst38DevicesDeviceIdMicrosoftGraphCheckmembergroupsPostRequestbodyContentApplicationJsonSchema, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.group_ids = group_ids


class PathsO8B6ApDirectorysettingtemplatesMicrosoftGraphValidatepropertiesPostRequestbodyContentApplicationJsonSchema(msrest.serialization.Model):
    """PathsO8B6ApDirectorysettingtemplatesMicrosoftGraphValidatepropertiesPostRequestbodyContentApplicationJsonSchema.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param entity_type:
    :type entity_type: str
    :param display_name:
    :type display_name: str
    :param mail_nickname:
    :type mail_nickname: str
    :param on_behalf_of_user_id:
    :type on_behalf_of_user_id: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'entity_type': {'key': 'entityType', 'type': 'str'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'mail_nickname': {'key': 'mailNickname', 'type': 'str'},
        'on_behalf_of_user_id': {'key': 'onBehalfOfUserId', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        entity_type: Optional[str] = None,
        display_name: Optional[str] = None,
        mail_nickname: Optional[str] = None,
        on_behalf_of_user_id: Optional[str] = None,
        **kwargs
    ):
        super(PathsO8B6ApDirectorysettingtemplatesMicrosoftGraphValidatepropertiesPostRequestbodyContentApplicationJsonSchema, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.entity_type = entity_type
        self.display_name = display_name
        self.mail_nickname = mail_nickname
        self.on_behalf_of_user_id = on_behalf_of_user_id


class PathsOikz69DevicesDeviceIdMicrosoftGraphGetmembergroupsPostRequestbodyContentApplicationJsonSchema(msrest.serialization.Model):
    """PathsOikz69DevicesDeviceIdMicrosoftGraphGetmembergroupsPostRequestbodyContentApplicationJsonSchema.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param security_enabled_only:
    :type security_enabled_only: bool
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'security_enabled_only': {'key': 'securityEnabledOnly', 'type': 'bool'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        security_enabled_only: Optional[bool] = False,
        **kwargs
    ):
        super(PathsOikz69DevicesDeviceIdMicrosoftGraphGetmembergroupsPostRequestbodyContentApplicationJsonSchema, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.security_enabled_only = security_enabled_only


class PathsOliirpDirectorysettingtemplatesDirectorysettingtemplateIdMicrosoftGraphGetmembergroupsPostRequestbodyContentApplicationJsonSchema(msrest.serialization.Model):
    """PathsOliirpDirectorysettingtemplatesDirectorysettingtemplateIdMicrosoftGraphGetmembergroupsPostRequestbodyContentApplicationJsonSchema.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param security_enabled_only:
    :type security_enabled_only: bool
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'security_enabled_only': {'key': 'securityEnabledOnly', 'type': 'bool'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        security_enabled_only: Optional[bool] = False,
        **kwargs
    ):
        super(PathsOliirpDirectorysettingtemplatesDirectorysettingtemplateIdMicrosoftGraphGetmembergroupsPostRequestbodyContentApplicationJsonSchema, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.security_enabled_only = security_enabled_only


class PathsOpnxc9ContractsMicrosoftGraphGetuserownedobjectsPostRequestbodyContentApplicationJsonSchema(msrest.serialization.Model):
    """PathsOpnxc9ContractsMicrosoftGraphGetuserownedobjectsPostRequestbodyContentApplicationJsonSchema.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param user_id:
    :type user_id: str
    :param type:
    :type type: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'user_id': {'key': 'userId', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        user_id: Optional[str] = None,
        type: Optional[str] = None,
        **kwargs
    ):
        super(PathsOpnxc9ContractsMicrosoftGraphGetuserownedobjectsPostRequestbodyContentApplicationJsonSchema, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.user_id = user_id
        self.type = type


class PathsPlvqruOrganizationIdMicrosoftGraphGetmembergroupsPostRequestbodyContentApplicationJsonSchema(msrest.serialization.Model):
    """PathsPlvqruOrganizationIdMicrosoftGraphGetmembergroupsPostRequestbodyContentApplicationJsonSchema.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param security_enabled_only:
    :type security_enabled_only: bool
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'security_enabled_only': {'key': 'securityEnabledOnly', 'type': 'bool'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        security_enabled_only: Optional[bool] = False,
        **kwargs
    ):
        super(PathsPlvqruOrganizationIdMicrosoftGraphGetmembergroupsPostRequestbodyContentApplicationJsonSchema, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.security_enabled_only = security_enabled_only


class PathsQ8R6UDirectoryrolesDirectoryroleIdMicrosoftGraphGetmemberobjectsPostRequestbodyContentApplicationJsonSchema(msrest.serialization.Model):
    """PathsQ8R6UDirectoryrolesDirectoryroleIdMicrosoftGraphGetmemberobjectsPostRequestbodyContentApplicationJsonSchema.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param security_enabled_only:
    :type security_enabled_only: bool
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'security_enabled_only': {'key': 'securityEnabledOnly', 'type': 'bool'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        security_enabled_only: Optional[bool] = False,
        **kwargs
    ):
        super(PathsQ8R6UDirectoryrolesDirectoryroleIdMicrosoftGraphGetmemberobjectsPostRequestbodyContentApplicationJsonSchema, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.security_enabled_only = security_enabled_only


class PathsRx7DjhDirectoryrolesMicrosoftGraphGetuserownedobjectsPostRequestbodyContentApplicationJsonSchema(msrest.serialization.Model):
    """PathsRx7DjhDirectoryrolesMicrosoftGraphGetuserownedobjectsPostRequestbodyContentApplicationJsonSchema.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param user_id:
    :type user_id: str
    :param type:
    :type type: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'user_id': {'key': 'userId', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        user_id: Optional[str] = None,
        type: Optional[str] = None,
        **kwargs
    ):
        super(PathsRx7DjhDirectoryrolesMicrosoftGraphGetuserownedobjectsPostRequestbodyContentApplicationJsonSchema, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.user_id = user_id
        self.type = type


class PathsU5PhcgDirectoryroletemplatesDirectoryroletemplateIdMicrosoftGraphGetmembergroupsPostRequestbodyContentApplicationJsonSchema(msrest.serialization.Model):
    """PathsU5PhcgDirectoryroletemplatesDirectoryroletemplateIdMicrosoftGraphGetmembergroupsPostRequestbodyContentApplicationJsonSchema.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param security_enabled_only:
    :type security_enabled_only: bool
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'security_enabled_only': {'key': 'securityEnabledOnly', 'type': 'bool'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        security_enabled_only: Optional[bool] = False,
        **kwargs
    ):
        super(PathsU5PhcgDirectoryroletemplatesDirectoryroletemplateIdMicrosoftGraphGetmembergroupsPostRequestbodyContentApplicationJsonSchema, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.security_enabled_only = security_enabled_only


class PathsUasdopDomainsDomainIdMicrosoftGraphForcedeletePostRequestbodyContentApplicationJsonSchema(msrest.serialization.Model):
    """PathsUasdopDomainsDomainIdMicrosoftGraphForcedeletePostRequestbodyContentApplicationJsonSchema.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param disable_user_accounts:
    :type disable_user_accounts: bool
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'disable_user_accounts': {'key': 'disableUserAccounts', 'type': 'bool'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        disable_user_accounts: Optional[bool] = False,
        **kwargs
    ):
        super(PathsUasdopDomainsDomainIdMicrosoftGraphForcedeletePostRequestbodyContentApplicationJsonSchema, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.disable_user_accounts = disable_user_accounts


class PathsXq94UjContractsContractIdMicrosoftGraphCheckmemberobjectsPostRequestbodyContentApplicationJsonSchema(msrest.serialization.Model):
    """PathsXq94UjContractsContractIdMicrosoftGraphCheckmemberobjectsPostRequestbodyContentApplicationJsonSchema.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param ids:
    :type ids: list[str]
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'ids': {'key': 'ids', 'type': '[str]'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        ids: Optional[List[str]] = None,
        **kwargs
    ):
        super(PathsXq94UjContractsContractIdMicrosoftGraphCheckmemberobjectsPostRequestbodyContentApplicationJsonSchema, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.ids = ids


class PathsYkfgk1DirectoryroletemplatesDirectoryroletemplateIdMicrosoftGraphCheckmemberobjectsPostRequestbodyContentApplicationJsonSchema(msrest.serialization.Model):
    """PathsYkfgk1DirectoryroletemplatesDirectoryroletemplateIdMicrosoftGraphCheckmemberobjectsPostRequestbodyContentApplicationJsonSchema.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param ids:
    :type ids: list[str]
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'ids': {'key': 'ids', 'type': '[str]'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        ids: Optional[List[str]] = None,
        **kwargs
    ):
        super(PathsYkfgk1DirectoryroletemplatesDirectoryroletemplateIdMicrosoftGraphCheckmemberobjectsPostRequestbodyContentApplicationJsonSchema, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.ids = ids


class PathsZahmwmContractsMicrosoftGraphValidatepropertiesPostRequestbodyContentApplicationJsonSchema(msrest.serialization.Model):
    """PathsZahmwmContractsMicrosoftGraphValidatepropertiesPostRequestbodyContentApplicationJsonSchema.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param entity_type:
    :type entity_type: str
    :param display_name:
    :type display_name: str
    :param mail_nickname:
    :type mail_nickname: str
    :param on_behalf_of_user_id:
    :type on_behalf_of_user_id: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'entity_type': {'key': 'entityType', 'type': 'str'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'mail_nickname': {'key': 'mailNickname', 'type': 'str'},
        'on_behalf_of_user_id': {'key': 'onBehalfOfUserId', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        entity_type: Optional[str] = None,
        display_name: Optional[str] = None,
        mail_nickname: Optional[str] = None,
        on_behalf_of_user_id: Optional[str] = None,
        **kwargs
    ):
        super(PathsZahmwmContractsMicrosoftGraphValidatepropertiesPostRequestbodyContentApplicationJsonSchema, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.entity_type = entity_type
        self.display_name = display_name
        self.mail_nickname = mail_nickname
        self.on_behalf_of_user_id = on_behalf_of_user_id


class PathsZu9Si3AdministrativeunitsMicrosoftGraphGetuserownedobjectsPostRequestbodyContentApplicationJsonSchema(msrest.serialization.Model):
    """PathsZu9Si3AdministrativeunitsMicrosoftGraphGetuserownedobjectsPostRequestbodyContentApplicationJsonSchema.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param user_id:
    :type user_id: str
    :param type:
    :type type: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'user_id': {'key': 'userId', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        additional_properties: Optional[Dict[str, object]] = None,
        user_id: Optional[str] = None,
        type: Optional[str] = None,
        **kwargs
    ):
        super(PathsZu9Si3AdministrativeunitsMicrosoftGraphGetuserownedobjectsPostRequestbodyContentApplicationJsonSchema, self).__init__(**kwargs)
        self.additional_properties = additional_properties
        self.user_id = user_id
        self.type = type
