# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from enum import Enum, EnumMeta
from six import with_metaclass

class _CaseInsensitiveEnumMeta(EnumMeta):
    def __getitem__(self, name):
        return super().__getitem__(name.upper())

    def __getattr__(cls, name):
        """Return the enum member matching `name`
        We use __getattr__ instead of descriptors or inserting into the enum
        class' __dict__ in order to support `name` and `value` being both
        properties for enum members (which live in the class' __dict__) and
        enum members themselves.
        """
        try:
            return cls._member_map_[name.upper()]
        except KeyError:
            raise AttributeError(name)


class Enum13(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    ADDITIONAL_INFORMATION = "additionalInformation"
    ADDITIONAL_INFORMATION_DESC = "additionalInformation desc"
    CUSTOMER_EMAIL_ADDRESS = "customerEmailAddress"
    CUSTOMER_EMAIL_ADDRESS_DESC = "customerEmailAddress desc"
    CUSTOMER_ID = "customerId"
    CUSTOMER_ID_DESC = "customerId desc"
    CUSTOMER_LOCATION = "customerLocation"
    CUSTOMER_LOCATION_DESC = "customerLocation desc"
    CUSTOMER_NAME = "customerName"
    CUSTOMER_NAME_DESC = "customerName desc"
    CUSTOMER_NOTES = "customerNotes"
    CUSTOMER_NOTES_DESC = "customerNotes desc"
    CUSTOMER_PHONE = "customerPhone"
    CUSTOMER_PHONE_DESC = "customerPhone desc"
    DURATION = "duration"
    DURATION_DESC = "duration desc"
    END = "end"
    END_DESC = "end desc"
    INVOICE_AMOUNT = "invoiceAmount"
    INVOICE_AMOUNT_DESC = "invoiceAmount desc"
    INVOICE_DATE = "invoiceDate"
    INVOICE_DATE_DESC = "invoiceDate desc"
    INVOICE_ID = "invoiceId"
    INVOICE_ID_DESC = "invoiceId desc"
    INVOICE_STATUS = "invoiceStatus"
    INVOICE_STATUS_DESC = "invoiceStatus desc"
    INVOICE_URL = "invoiceUrl"
    INVOICE_URL_DESC = "invoiceUrl desc"
    IS_LOCATION_ONLINE = "isLocationOnline"
    IS_LOCATION_ONLINE_DESC = "isLocationOnline desc"
    ONLINE_MEETING_URL = "onlineMeetingUrl"
    ONLINE_MEETING_URL_DESC = "onlineMeetingUrl desc"
    OPT_OUT_OF_CUSTOMER_EMAIL = "optOutOfCustomerEmail"
    OPT_OUT_OF_CUSTOMER_EMAIL_DESC = "optOutOfCustomerEmail desc"
    POST_BUFFER = "postBuffer"
    POST_BUFFER_DESC = "postBuffer desc"
    PRE_BUFFER = "preBuffer"
    PRE_BUFFER_DESC = "preBuffer desc"
    PRICE = "price"
    PRICE_DESC = "price desc"
    PRICE_TYPE = "priceType"
    PRICE_TYPE_DESC = "priceType desc"
    REMINDERS = "reminders"
    REMINDERS_DESC = "reminders desc"
    SELF_SERVICE_APPOINTMENT_ID = "selfServiceAppointmentId"
    SELF_SERVICE_APPOINTMENT_ID_DESC = "selfServiceAppointmentId desc"
    SERVICE_ID = "serviceId"
    SERVICE_ID_DESC = "serviceId desc"
    SERVICE_LOCATION = "serviceLocation"
    SERVICE_LOCATION_DESC = "serviceLocation desc"
    SERVICE_NAME = "serviceName"
    SERVICE_NAME_DESC = "serviceName desc"
    SERVICE_NOTES = "serviceNotes"
    SERVICE_NOTES_DESC = "serviceNotes desc"
    STAFF_MEMBER_IDS = "staffMemberIds"
    STAFF_MEMBER_IDS_DESC = "staffMemberIds desc"
    START = "start"
    START_DESC = "start desc"

class Enum14(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ADDITIONAL_INFORMATION = "additionalInformation"
    CUSTOMER_EMAIL_ADDRESS = "customerEmailAddress"
    CUSTOMER_ID = "customerId"
    CUSTOMER_LOCATION = "customerLocation"
    CUSTOMER_NAME = "customerName"
    CUSTOMER_NOTES = "customerNotes"
    CUSTOMER_PHONE = "customerPhone"
    DURATION = "duration"
    END = "end"
    INVOICE_AMOUNT = "invoiceAmount"
    INVOICE_DATE = "invoiceDate"
    INVOICE_ID = "invoiceId"
    INVOICE_STATUS = "invoiceStatus"
    INVOICE_URL = "invoiceUrl"
    IS_LOCATION_ONLINE = "isLocationOnline"
    ONLINE_MEETING_URL = "onlineMeetingUrl"
    OPT_OUT_OF_CUSTOMER_EMAIL = "optOutOfCustomerEmail"
    POST_BUFFER = "postBuffer"
    PRE_BUFFER = "preBuffer"
    PRICE = "price"
    PRICE_TYPE = "priceType"
    REMINDERS = "reminders"
    SELF_SERVICE_APPOINTMENT_ID = "selfServiceAppointmentId"
    SERVICE_ID = "serviceId"
    SERVICE_LOCATION = "serviceLocation"
    SERVICE_NAME = "serviceName"
    SERVICE_NOTES = "serviceNotes"
    STAFF_MEMBER_IDS = "staffMemberIds"
    START = "start"

class Enum15(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ADDITIONAL_INFORMATION = "additionalInformation"
    CUSTOMER_EMAIL_ADDRESS = "customerEmailAddress"
    CUSTOMER_ID = "customerId"
    CUSTOMER_LOCATION = "customerLocation"
    CUSTOMER_NAME = "customerName"
    CUSTOMER_NOTES = "customerNotes"
    CUSTOMER_PHONE = "customerPhone"
    DURATION = "duration"
    END = "end"
    INVOICE_AMOUNT = "invoiceAmount"
    INVOICE_DATE = "invoiceDate"
    INVOICE_ID = "invoiceId"
    INVOICE_STATUS = "invoiceStatus"
    INVOICE_URL = "invoiceUrl"
    IS_LOCATION_ONLINE = "isLocationOnline"
    ONLINE_MEETING_URL = "onlineMeetingUrl"
    OPT_OUT_OF_CUSTOMER_EMAIL = "optOutOfCustomerEmail"
    POST_BUFFER = "postBuffer"
    PRE_BUFFER = "preBuffer"
    PRICE = "price"
    PRICE_TYPE = "priceType"
    REMINDERS = "reminders"
    SELF_SERVICE_APPOINTMENT_ID = "selfServiceAppointmentId"
    SERVICE_ID = "serviceId"
    SERVICE_LOCATION = "serviceLocation"
    SERVICE_NAME = "serviceName"
    SERVICE_NOTES = "serviceNotes"
    STAFF_MEMBER_IDS = "staffMemberIds"
    START = "start"

class Enum16(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    ADDITIONAL_INFORMATION = "additionalInformation"
    ADDITIONAL_INFORMATION_DESC = "additionalInformation desc"
    CUSTOMER_EMAIL_ADDRESS = "customerEmailAddress"
    CUSTOMER_EMAIL_ADDRESS_DESC = "customerEmailAddress desc"
    CUSTOMER_ID = "customerId"
    CUSTOMER_ID_DESC = "customerId desc"
    CUSTOMER_LOCATION = "customerLocation"
    CUSTOMER_LOCATION_DESC = "customerLocation desc"
    CUSTOMER_NAME = "customerName"
    CUSTOMER_NAME_DESC = "customerName desc"
    CUSTOMER_NOTES = "customerNotes"
    CUSTOMER_NOTES_DESC = "customerNotes desc"
    CUSTOMER_PHONE = "customerPhone"
    CUSTOMER_PHONE_DESC = "customerPhone desc"
    DURATION = "duration"
    DURATION_DESC = "duration desc"
    END = "end"
    END_DESC = "end desc"
    INVOICE_AMOUNT = "invoiceAmount"
    INVOICE_AMOUNT_DESC = "invoiceAmount desc"
    INVOICE_DATE = "invoiceDate"
    INVOICE_DATE_DESC = "invoiceDate desc"
    INVOICE_ID = "invoiceId"
    INVOICE_ID_DESC = "invoiceId desc"
    INVOICE_STATUS = "invoiceStatus"
    INVOICE_STATUS_DESC = "invoiceStatus desc"
    INVOICE_URL = "invoiceUrl"
    INVOICE_URL_DESC = "invoiceUrl desc"
    IS_LOCATION_ONLINE = "isLocationOnline"
    IS_LOCATION_ONLINE_DESC = "isLocationOnline desc"
    ONLINE_MEETING_URL = "onlineMeetingUrl"
    ONLINE_MEETING_URL_DESC = "onlineMeetingUrl desc"
    OPT_OUT_OF_CUSTOMER_EMAIL = "optOutOfCustomerEmail"
    OPT_OUT_OF_CUSTOMER_EMAIL_DESC = "optOutOfCustomerEmail desc"
    POST_BUFFER = "postBuffer"
    POST_BUFFER_DESC = "postBuffer desc"
    PRE_BUFFER = "preBuffer"
    PRE_BUFFER_DESC = "preBuffer desc"
    PRICE = "price"
    PRICE_DESC = "price desc"
    PRICE_TYPE = "priceType"
    PRICE_TYPE_DESC = "priceType desc"
    REMINDERS = "reminders"
    REMINDERS_DESC = "reminders desc"
    SELF_SERVICE_APPOINTMENT_ID = "selfServiceAppointmentId"
    SELF_SERVICE_APPOINTMENT_ID_DESC = "selfServiceAppointmentId desc"
    SERVICE_ID = "serviceId"
    SERVICE_ID_DESC = "serviceId desc"
    SERVICE_LOCATION = "serviceLocation"
    SERVICE_LOCATION_DESC = "serviceLocation desc"
    SERVICE_NAME = "serviceName"
    SERVICE_NAME_DESC = "serviceName desc"
    SERVICE_NOTES = "serviceNotes"
    SERVICE_NOTES_DESC = "serviceNotes desc"
    STAFF_MEMBER_IDS = "staffMemberIds"
    STAFF_MEMBER_IDS_DESC = "staffMemberIds desc"
    START = "start"
    START_DESC = "start desc"

class Enum19(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    DISPLAY_NAME = "displayName"
    DISPLAY_NAME_DESC = "displayName desc"
    EMAIL_ADDRESS = "emailAddress"
    EMAIL_ADDRESS_DESC = "emailAddress desc"

class Enum20(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    DISPLAY_NAME = "displayName"
    EMAIL_ADDRESS = "emailAddress"

class Enum21(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    DISPLAY_NAME = "displayName"
    EMAIL_ADDRESS = "emailAddress"

class Enum22(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    DISPLAY_NAME = "displayName"
    DISPLAY_NAME_DESC = "displayName desc"
    ADDITIONAL_INFORMATION = "additionalInformation"
    ADDITIONAL_INFORMATION_DESC = "additionalInformation desc"
    DEFAULT_DURATION = "defaultDuration"
    DEFAULT_DURATION_DESC = "defaultDuration desc"
    DEFAULT_LOCATION = "defaultLocation"
    DEFAULT_LOCATION_DESC = "defaultLocation desc"
    DEFAULT_PRICE = "defaultPrice"
    DEFAULT_PRICE_DESC = "defaultPrice desc"
    DEFAULT_PRICE_TYPE = "defaultPriceType"
    DEFAULT_PRICE_TYPE_DESC = "defaultPriceType desc"
    DEFAULT_REMINDERS = "defaultReminders"
    DEFAULT_REMINDERS_DESC = "defaultReminders desc"
    DESCRIPTION = "description"
    DESCRIPTION_DESC = "description desc"
    IS_HIDDEN_FROM_CUSTOMERS = "isHiddenFromCustomers"
    IS_HIDDEN_FROM_CUSTOMERS_DESC = "isHiddenFromCustomers desc"
    IS_LOCATION_ONLINE = "isLocationOnline"
    IS_LOCATION_ONLINE_DESC = "isLocationOnline desc"
    NOTES = "notes"
    NOTES_DESC = "notes desc"
    POST_BUFFER = "postBuffer"
    POST_BUFFER_DESC = "postBuffer desc"
    PRE_BUFFER = "preBuffer"
    PRE_BUFFER_DESC = "preBuffer desc"
    SCHEDULING_POLICY = "schedulingPolicy"
    SCHEDULING_POLICY_DESC = "schedulingPolicy desc"
    STAFF_MEMBER_IDS = "staffMemberIds"
    STAFF_MEMBER_IDS_DESC = "staffMemberIds desc"

class Enum23(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    DISPLAY_NAME = "displayName"
    ADDITIONAL_INFORMATION = "additionalInformation"
    DEFAULT_DURATION = "defaultDuration"
    DEFAULT_LOCATION = "defaultLocation"
    DEFAULT_PRICE = "defaultPrice"
    DEFAULT_PRICE_TYPE = "defaultPriceType"
    DEFAULT_REMINDERS = "defaultReminders"
    DESCRIPTION = "description"
    IS_HIDDEN_FROM_CUSTOMERS = "isHiddenFromCustomers"
    IS_LOCATION_ONLINE = "isLocationOnline"
    NOTES = "notes"
    POST_BUFFER = "postBuffer"
    PRE_BUFFER = "preBuffer"
    SCHEDULING_POLICY = "schedulingPolicy"
    STAFF_MEMBER_IDS = "staffMemberIds"

class Enum24(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    DISPLAY_NAME = "displayName"
    ADDITIONAL_INFORMATION = "additionalInformation"
    DEFAULT_DURATION = "defaultDuration"
    DEFAULT_LOCATION = "defaultLocation"
    DEFAULT_PRICE = "defaultPrice"
    DEFAULT_PRICE_TYPE = "defaultPriceType"
    DEFAULT_REMINDERS = "defaultReminders"
    DESCRIPTION = "description"
    IS_HIDDEN_FROM_CUSTOMERS = "isHiddenFromCustomers"
    IS_LOCATION_ONLINE = "isLocationOnline"
    NOTES = "notes"
    POST_BUFFER = "postBuffer"
    PRE_BUFFER = "preBuffer"
    SCHEDULING_POLICY = "schedulingPolicy"
    STAFF_MEMBER_IDS = "staffMemberIds"

class Enum25(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    DISPLAY_NAME = "displayName"
    DISPLAY_NAME_DESC = "displayName desc"
    EMAIL_ADDRESS = "emailAddress"
    EMAIL_ADDRESS_DESC = "emailAddress desc"
    AVAILABILITY_IS_AFFECTED_BY_PERSONAL_CALENDAR = "availabilityIsAffectedByPersonalCalendar"
    AVAILABILITY_IS_AFFECTED_BY_PERSONAL_CALENDAR_DESC = "availabilityIsAffectedByPersonalCalendar desc"
    COLOR_INDEX = "colorIndex"
    COLOR_INDEX_DESC = "colorIndex desc"
    ROLE = "role"
    ROLE_DESC = "role desc"
    USE_BUSINESS_HOURS = "useBusinessHours"
    USE_BUSINESS_HOURS_DESC = "useBusinessHours desc"
    WORKING_HOURS = "workingHours"
    WORKING_HOURS_DESC = "workingHours desc"

class Enum26(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    DISPLAY_NAME = "displayName"
    EMAIL_ADDRESS = "emailAddress"
    AVAILABILITY_IS_AFFECTED_BY_PERSONAL_CALENDAR = "availabilityIsAffectedByPersonalCalendar"
    COLOR_INDEX = "colorIndex"
    ROLE = "role"
    USE_BUSINESS_HOURS = "useBusinessHours"
    WORKING_HOURS = "workingHours"

class Enum27(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    DISPLAY_NAME = "displayName"
    EMAIL_ADDRESS = "emailAddress"
    AVAILABILITY_IS_AFFECTED_BY_PERSONAL_CALENDAR = "availabilityIsAffectedByPersonalCalendar"
    COLOR_INDEX = "colorIndex"
    ROLE = "role"
    USE_BUSINESS_HOURS = "useBusinessHours"
    WORKING_HOURS = "workingHours"

class Enum28(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    SYMBOL = "symbol"
    SYMBOL_DESC = "symbol desc"

class Enum29(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    SYMBOL = "symbol"

class Enum30(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    SYMBOL = "symbol"

class Get1ItemsItem(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    DISPLAY_NAME = "displayName"
    ADDRESS = "address"
    BUSINESS_HOURS = "businessHours"
    BUSINESS_TYPE = "businessType"
    DEFAULT_CURRENCY_ISO = "defaultCurrencyIso"
    EMAIL = "email"
    IS_PUBLISHED = "isPublished"
    PHONE = "phone"
    PUBLIC_URL = "publicUrl"
    SCHEDULING_POLICY = "schedulingPolicy"
    WEB_SITE_URL = "webSiteUrl"
    APPOINTMENTS = "appointments"
    CALENDAR_VIEW = "calendarView"
    CUSTOMERS = "customers"
    SERVICES = "services"
    STAFF_MEMBERS = "staffMembers"

class Get2ItemsItem(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    APPOINTMENTS = "appointments"
    CALENDAR_VIEW = "calendarView"
    CUSTOMERS = "customers"
    SERVICES = "services"
    STAFF_MEMBERS = "staffMembers"

class Get4ItemsItem(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ADDITIONAL_INFORMATION = "additionalInformation"
    CUSTOMER_EMAIL_ADDRESS = "customerEmailAddress"
    CUSTOMER_ID = "customerId"
    CUSTOMER_LOCATION = "customerLocation"
    CUSTOMER_NAME = "customerName"
    CUSTOMER_NOTES = "customerNotes"
    CUSTOMER_PHONE = "customerPhone"
    DURATION = "duration"
    END = "end"
    INVOICE_AMOUNT = "invoiceAmount"
    INVOICE_DATE = "invoiceDate"
    INVOICE_ID = "invoiceId"
    INVOICE_STATUS = "invoiceStatus"
    INVOICE_URL = "invoiceUrl"
    IS_LOCATION_ONLINE = "isLocationOnline"
    ONLINE_MEETING_URL = "onlineMeetingUrl"
    OPT_OUT_OF_CUSTOMER_EMAIL = "optOutOfCustomerEmail"
    POST_BUFFER = "postBuffer"
    PRE_BUFFER = "preBuffer"
    PRICE = "price"
    PRICE_TYPE = "priceType"
    REMINDERS = "reminders"
    SELF_SERVICE_APPOINTMENT_ID = "selfServiceAppointmentId"
    SERVICE_ID = "serviceId"
    SERVICE_LOCATION = "serviceLocation"
    SERVICE_NAME = "serviceName"
    SERVICE_NOTES = "serviceNotes"
    STAFF_MEMBER_IDS = "staffMemberIds"
    START = "start"

class Get5ItemsItem(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    DISPLAY_NAME = "displayName"
    DISPLAY_NAME_DESC = "displayName desc"
    ADDRESS = "address"
    ADDRESS_DESC = "address desc"
    BUSINESS_HOURS = "businessHours"
    BUSINESS_HOURS_DESC = "businessHours desc"
    BUSINESS_TYPE = "businessType"
    BUSINESS_TYPE_DESC = "businessType desc"
    DEFAULT_CURRENCY_ISO = "defaultCurrencyIso"
    DEFAULT_CURRENCY_ISO_DESC = "defaultCurrencyIso desc"
    EMAIL = "email"
    EMAIL_DESC = "email desc"
    IS_PUBLISHED = "isPublished"
    IS_PUBLISHED_DESC = "isPublished desc"
    PHONE = "phone"
    PHONE_DESC = "phone desc"
    PUBLIC_URL = "publicUrl"
    PUBLIC_URL_DESC = "publicUrl desc"
    SCHEDULING_POLICY = "schedulingPolicy"
    SCHEDULING_POLICY_DESC = "schedulingPolicy desc"
    WEB_SITE_URL = "webSiteUrl"
    WEB_SITE_URL_DESC = "webSiteUrl desc"

class Get6ItemsItem(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    DISPLAY_NAME = "displayName"
    ADDRESS = "address"
    BUSINESS_HOURS = "businessHours"
    BUSINESS_TYPE = "businessType"
    DEFAULT_CURRENCY_ISO = "defaultCurrencyIso"
    EMAIL = "email"
    IS_PUBLISHED = "isPublished"
    PHONE = "phone"
    PUBLIC_URL = "publicUrl"
    SCHEDULING_POLICY = "schedulingPolicy"
    WEB_SITE_URL = "webSiteUrl"
    APPOINTMENTS = "appointments"
    CALENDAR_VIEW = "calendarView"
    CUSTOMERS = "customers"
    SERVICES = "services"
    STAFF_MEMBERS = "staffMembers"

class Get7ItemsItem(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    APPOINTMENTS = "appointments"
    CALENDAR_VIEW = "calendarView"
    CUSTOMERS = "customers"
    SERVICES = "services"
    STAFF_MEMBERS = "staffMembers"

class Get9ItemsItem(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ADDITIONAL_INFORMATION = "additionalInformation"
    CUSTOMER_EMAIL_ADDRESS = "customerEmailAddress"
    CUSTOMER_ID = "customerId"
    CUSTOMER_LOCATION = "customerLocation"
    CUSTOMER_NAME = "customerName"
    CUSTOMER_NOTES = "customerNotes"
    CUSTOMER_PHONE = "customerPhone"
    DURATION = "duration"
    END = "end"
    INVOICE_AMOUNT = "invoiceAmount"
    INVOICE_DATE = "invoiceDate"
    INVOICE_ID = "invoiceId"
    INVOICE_STATUS = "invoiceStatus"
    INVOICE_URL = "invoiceUrl"
    IS_LOCATION_ONLINE = "isLocationOnline"
    ONLINE_MEETING_URL = "onlineMeetingUrl"
    OPT_OUT_OF_CUSTOMER_EMAIL = "optOutOfCustomerEmail"
    POST_BUFFER = "postBuffer"
    PRE_BUFFER = "preBuffer"
    PRICE = "price"
    PRICE_TYPE = "priceType"
    REMINDERS = "reminders"
    SELF_SERVICE_APPOINTMENT_ID = "selfServiceAppointmentId"
    SERVICE_ID = "serviceId"
    SERVICE_LOCATION = "serviceLocation"
    SERVICE_NAME = "serviceName"
    SERVICE_NOTES = "serviceNotes"
    STAFF_MEMBER_IDS = "staffMemberIds"
    START = "start"

class MicrosoftGraphBookingInvoiceStatus(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    DRAFT = "draft"
    REVIEWING = "reviewing"
    OPEN = "open"
    CANCELED = "canceled"
    PAID = "paid"
    CORRECTIVE = "corrective"

class MicrosoftGraphBookingPriceType(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    UNDEFINED = "undefined"
    FIXED_PRICE = "fixedPrice"
    STARTING_AT = "startingAt"
    HOURLY = "hourly"
    FREE = "free"
    PRICE_VARIES = "priceVaries"
    CALL_US = "callUs"
    NOT_SET = "notSet"

class MicrosoftGraphBookingReminderRecipients(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ALL_ATTENDEES = "allAttendees"
    STAFF = "staff"
    CUSTOMER = "customer"

class MicrosoftGraphBookingStaffRole(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    GUEST = "guest"
    ADMINISTRATOR = "administrator"
    VIEWER = "viewer"
    EXTERNAL_GUEST = "externalGuest"

class MicrosoftGraphDayOfWeek(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    SUNDAY = "sunday"
    MONDAY = "monday"
    TUESDAY = "tuesday"
    WEDNESDAY = "wednesday"
    THURSDAY = "thursday"
    FRIDAY = "friday"
    SATURDAY = "saturday"

class MicrosoftGraphLocationType(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    DEFAULT = "default"
    CONFERENCE_ROOM = "conferenceRoom"
    HOME_ADDRESS = "homeAddress"
    BUSINESS_ADDRESS = "businessAddress"
    GEO_COORDINATES = "geoCoordinates"
    STREET_ADDRESS = "streetAddress"
    HOTEL = "hotel"
    RESTAURANT = "restaurant"
    LOCAL_BUSINESS = "localBusiness"
    POSTAL_ADDRESS = "postalAddress"

class MicrosoftGraphLocationUniqueIdType(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    UNKNOWN = "unknown"
    LOCATION_STORE = "locationStore"
    DIRECTORY = "directory"
    PRIVATE = "private"
    BING = "bing"

class MicrosoftGraphPhysicalAddressType(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    UNKNOWN = "unknown"
    HOME = "home"
    BUSINESS = "business"
    OTHER = "other"
