# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from enum import Enum, EnumMeta
from six import with_metaclass

class _CaseInsensitiveEnumMeta(EnumMeta):
    def __getitem__(self, name):
        return super().__getitem__(name.upper())

    def __getattr__(cls, name):
        """Return the enum member matching `name`
        We use __getattr__ instead of descriptors or inserting into the enum
        class' __dict__ in order to support `name` and `value` being both
        properties for enum members (which live in the class' __dict__) and
        enum members themselves.
        """
        try:
            return cls._member_map_[name.upper()]
        except KeyError:
            raise AttributeError(name)


class Enum13(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    IDDESC = "id desc"
    ADDITIONALINFORMATION = "additionalInformation"
    ADDITIONALINFORMATIONDESC = "additionalInformation desc"
    CUSTOMEREMAILADDRESS = "customerEmailAddress"
    CUSTOMEREMAILADDRESSDESC = "customerEmailAddress desc"
    CUSTOMERID = "customerId"
    CUSTOMERIDDESC = "customerId desc"
    CUSTOMERLOCATION = "customerLocation"
    CUSTOMERLOCATIONDESC = "customerLocation desc"
    CUSTOMERNAME = "customerName"
    CUSTOMERNAMEDESC = "customerName desc"
    CUSTOMERNOTES = "customerNotes"
    CUSTOMERNOTESDESC = "customerNotes desc"
    CUSTOMERPHONE = "customerPhone"
    CUSTOMERPHONEDESC = "customerPhone desc"
    DURATION = "duration"
    DURATIONDESC = "duration desc"
    END = "end"
    ENDDESC = "end desc"
    INVOICEAMOUNT = "invoiceAmount"
    INVOICEAMOUNTDESC = "invoiceAmount desc"
    INVOICEDATE = "invoiceDate"
    INVOICEDATEDESC = "invoiceDate desc"
    INVOICEID = "invoiceId"
    INVOICEIDDESC = "invoiceId desc"
    INVOICESTATUS = "invoiceStatus"
    INVOICESTATUSDESC = "invoiceStatus desc"
    INVOICEURL = "invoiceUrl"
    INVOICEURLDESC = "invoiceUrl desc"
    ISLOCATIONONLINE = "isLocationOnline"
    ISLOCATIONONLINEDESC = "isLocationOnline desc"
    ONLINEMEETINGURL = "onlineMeetingUrl"
    ONLINEMEETINGURLDESC = "onlineMeetingUrl desc"
    OPTOUTOFCUSTOMEREMAIL = "optOutOfCustomerEmail"
    OPTOUTOFCUSTOMEREMAILDESC = "optOutOfCustomerEmail desc"
    POSTBUFFER = "postBuffer"
    POSTBUFFERDESC = "postBuffer desc"
    PREBUFFER = "preBuffer"
    PREBUFFERDESC = "preBuffer desc"
    PRICE = "price"
    PRICEDESC = "price desc"
    PRICETYPE = "priceType"
    PRICETYPEDESC = "priceType desc"
    REMINDERS = "reminders"
    REMINDERSDESC = "reminders desc"
    SELFSERVICEAPPOINTMENTID = "selfServiceAppointmentId"
    SELFSERVICEAPPOINTMENTIDDESC = "selfServiceAppointmentId desc"
    SERVICEID = "serviceId"
    SERVICEIDDESC = "serviceId desc"
    SERVICELOCATION = "serviceLocation"
    SERVICELOCATIONDESC = "serviceLocation desc"
    SERVICENAME = "serviceName"
    SERVICENAMEDESC = "serviceName desc"
    SERVICENOTES = "serviceNotes"
    SERVICENOTESDESC = "serviceNotes desc"
    STAFFMEMBERIDS = "staffMemberIds"
    STAFFMEMBERIDSDESC = "staffMemberIds desc"
    START = "start"
    STARTDESC = "start desc"

class Enum14(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ADDITIONALINFORMATION = "additionalInformation"
    CUSTOMEREMAILADDRESS = "customerEmailAddress"
    CUSTOMERID = "customerId"
    CUSTOMERLOCATION = "customerLocation"
    CUSTOMERNAME = "customerName"
    CUSTOMERNOTES = "customerNotes"
    CUSTOMERPHONE = "customerPhone"
    DURATION = "duration"
    END = "end"
    INVOICEAMOUNT = "invoiceAmount"
    INVOICEDATE = "invoiceDate"
    INVOICEID = "invoiceId"
    INVOICESTATUS = "invoiceStatus"
    INVOICEURL = "invoiceUrl"
    ISLOCATIONONLINE = "isLocationOnline"
    ONLINEMEETINGURL = "onlineMeetingUrl"
    OPTOUTOFCUSTOMEREMAIL = "optOutOfCustomerEmail"
    POSTBUFFER = "postBuffer"
    PREBUFFER = "preBuffer"
    PRICE = "price"
    PRICETYPE = "priceType"
    REMINDERS = "reminders"
    SELFSERVICEAPPOINTMENTID = "selfServiceAppointmentId"
    SERVICEID = "serviceId"
    SERVICELOCATION = "serviceLocation"
    SERVICENAME = "serviceName"
    SERVICENOTES = "serviceNotes"
    STAFFMEMBERIDS = "staffMemberIds"
    START = "start"

class Enum15(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ADDITIONALINFORMATION = "additionalInformation"
    CUSTOMEREMAILADDRESS = "customerEmailAddress"
    CUSTOMERID = "customerId"
    CUSTOMERLOCATION = "customerLocation"
    CUSTOMERNAME = "customerName"
    CUSTOMERNOTES = "customerNotes"
    CUSTOMERPHONE = "customerPhone"
    DURATION = "duration"
    END = "end"
    INVOICEAMOUNT = "invoiceAmount"
    INVOICEDATE = "invoiceDate"
    INVOICEID = "invoiceId"
    INVOICESTATUS = "invoiceStatus"
    INVOICEURL = "invoiceUrl"
    ISLOCATIONONLINE = "isLocationOnline"
    ONLINEMEETINGURL = "onlineMeetingUrl"
    OPTOUTOFCUSTOMEREMAIL = "optOutOfCustomerEmail"
    POSTBUFFER = "postBuffer"
    PREBUFFER = "preBuffer"
    PRICE = "price"
    PRICETYPE = "priceType"
    REMINDERS = "reminders"
    SELFSERVICEAPPOINTMENTID = "selfServiceAppointmentId"
    SERVICEID = "serviceId"
    SERVICELOCATION = "serviceLocation"
    SERVICENAME = "serviceName"
    SERVICENOTES = "serviceNotes"
    STAFFMEMBERIDS = "staffMemberIds"
    START = "start"

class Enum16(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    IDDESC = "id desc"
    ADDITIONALINFORMATION = "additionalInformation"
    ADDITIONALINFORMATIONDESC = "additionalInformation desc"
    CUSTOMEREMAILADDRESS = "customerEmailAddress"
    CUSTOMEREMAILADDRESSDESC = "customerEmailAddress desc"
    CUSTOMERID = "customerId"
    CUSTOMERIDDESC = "customerId desc"
    CUSTOMERLOCATION = "customerLocation"
    CUSTOMERLOCATIONDESC = "customerLocation desc"
    CUSTOMERNAME = "customerName"
    CUSTOMERNAMEDESC = "customerName desc"
    CUSTOMERNOTES = "customerNotes"
    CUSTOMERNOTESDESC = "customerNotes desc"
    CUSTOMERPHONE = "customerPhone"
    CUSTOMERPHONEDESC = "customerPhone desc"
    DURATION = "duration"
    DURATIONDESC = "duration desc"
    END = "end"
    ENDDESC = "end desc"
    INVOICEAMOUNT = "invoiceAmount"
    INVOICEAMOUNTDESC = "invoiceAmount desc"
    INVOICEDATE = "invoiceDate"
    INVOICEDATEDESC = "invoiceDate desc"
    INVOICEID = "invoiceId"
    INVOICEIDDESC = "invoiceId desc"
    INVOICESTATUS = "invoiceStatus"
    INVOICESTATUSDESC = "invoiceStatus desc"
    INVOICEURL = "invoiceUrl"
    INVOICEURLDESC = "invoiceUrl desc"
    ISLOCATIONONLINE = "isLocationOnline"
    ISLOCATIONONLINEDESC = "isLocationOnline desc"
    ONLINEMEETINGURL = "onlineMeetingUrl"
    ONLINEMEETINGURLDESC = "onlineMeetingUrl desc"
    OPTOUTOFCUSTOMEREMAIL = "optOutOfCustomerEmail"
    OPTOUTOFCUSTOMEREMAILDESC = "optOutOfCustomerEmail desc"
    POSTBUFFER = "postBuffer"
    POSTBUFFERDESC = "postBuffer desc"
    PREBUFFER = "preBuffer"
    PREBUFFERDESC = "preBuffer desc"
    PRICE = "price"
    PRICEDESC = "price desc"
    PRICETYPE = "priceType"
    PRICETYPEDESC = "priceType desc"
    REMINDERS = "reminders"
    REMINDERSDESC = "reminders desc"
    SELFSERVICEAPPOINTMENTID = "selfServiceAppointmentId"
    SELFSERVICEAPPOINTMENTIDDESC = "selfServiceAppointmentId desc"
    SERVICEID = "serviceId"
    SERVICEIDDESC = "serviceId desc"
    SERVICELOCATION = "serviceLocation"
    SERVICELOCATIONDESC = "serviceLocation desc"
    SERVICENAME = "serviceName"
    SERVICENAMEDESC = "serviceName desc"
    SERVICENOTES = "serviceNotes"
    SERVICENOTESDESC = "serviceNotes desc"
    STAFFMEMBERIDS = "staffMemberIds"
    STAFFMEMBERIDSDESC = "staffMemberIds desc"
    START = "start"
    STARTDESC = "start desc"

class Enum19(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    IDDESC = "id desc"
    DISPLAYNAME = "displayName"
    DISPLAYNAMEDESC = "displayName desc"
    EMAILADDRESS = "emailAddress"
    EMAILADDRESSDESC = "emailAddress desc"

class Enum20(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    DISPLAYNAME = "displayName"
    EMAILADDRESS = "emailAddress"

class Enum21(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    DISPLAYNAME = "displayName"
    EMAILADDRESS = "emailAddress"

class Enum22(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    IDDESC = "id desc"
    DISPLAYNAME = "displayName"
    DISPLAYNAMEDESC = "displayName desc"
    ADDITIONALINFORMATION = "additionalInformation"
    ADDITIONALINFORMATIONDESC = "additionalInformation desc"
    DEFAULTDURATION = "defaultDuration"
    DEFAULTDURATIONDESC = "defaultDuration desc"
    DEFAULTLOCATION = "defaultLocation"
    DEFAULTLOCATIONDESC = "defaultLocation desc"
    DEFAULTPRICE = "defaultPrice"
    DEFAULTPRICEDESC = "defaultPrice desc"
    DEFAULTPRICETYPE = "defaultPriceType"
    DEFAULTPRICETYPEDESC = "defaultPriceType desc"
    DEFAULTREMINDERS = "defaultReminders"
    DEFAULTREMINDERSDESC = "defaultReminders desc"
    DESCRIPTION = "description"
    DESCRIPTIONDESC = "description desc"
    ISHIDDENFROMCUSTOMERS = "isHiddenFromCustomers"
    ISHIDDENFROMCUSTOMERSDESC = "isHiddenFromCustomers desc"
    ISLOCATIONONLINE = "isLocationOnline"
    ISLOCATIONONLINEDESC = "isLocationOnline desc"
    NOTES = "notes"
    NOTESDESC = "notes desc"
    POSTBUFFER = "postBuffer"
    POSTBUFFERDESC = "postBuffer desc"
    PREBUFFER = "preBuffer"
    PREBUFFERDESC = "preBuffer desc"
    SCHEDULINGPOLICY = "schedulingPolicy"
    SCHEDULINGPOLICYDESC = "schedulingPolicy desc"
    STAFFMEMBERIDS = "staffMemberIds"
    STAFFMEMBERIDSDESC = "staffMemberIds desc"

class Enum23(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    DISPLAYNAME = "displayName"
    ADDITIONALINFORMATION = "additionalInformation"
    DEFAULTDURATION = "defaultDuration"
    DEFAULTLOCATION = "defaultLocation"
    DEFAULTPRICE = "defaultPrice"
    DEFAULTPRICETYPE = "defaultPriceType"
    DEFAULTREMINDERS = "defaultReminders"
    DESCRIPTION = "description"
    ISHIDDENFROMCUSTOMERS = "isHiddenFromCustomers"
    ISLOCATIONONLINE = "isLocationOnline"
    NOTES = "notes"
    POSTBUFFER = "postBuffer"
    PREBUFFER = "preBuffer"
    SCHEDULINGPOLICY = "schedulingPolicy"
    STAFFMEMBERIDS = "staffMemberIds"

class Enum24(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    DISPLAYNAME = "displayName"
    ADDITIONALINFORMATION = "additionalInformation"
    DEFAULTDURATION = "defaultDuration"
    DEFAULTLOCATION = "defaultLocation"
    DEFAULTPRICE = "defaultPrice"
    DEFAULTPRICETYPE = "defaultPriceType"
    DEFAULTREMINDERS = "defaultReminders"
    DESCRIPTION = "description"
    ISHIDDENFROMCUSTOMERS = "isHiddenFromCustomers"
    ISLOCATIONONLINE = "isLocationOnline"
    NOTES = "notes"
    POSTBUFFER = "postBuffer"
    PREBUFFER = "preBuffer"
    SCHEDULINGPOLICY = "schedulingPolicy"
    STAFFMEMBERIDS = "staffMemberIds"

class Enum25(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    IDDESC = "id desc"
    DISPLAYNAME = "displayName"
    DISPLAYNAMEDESC = "displayName desc"
    EMAILADDRESS = "emailAddress"
    EMAILADDRESSDESC = "emailAddress desc"
    AVAILABILITYISAFFECTEDBYPERSONALCALENDAR = "availabilityIsAffectedByPersonalCalendar"
    AVAILABILITYISAFFECTEDBYPERSONALCALENDARDESC = "availabilityIsAffectedByPersonalCalendar desc"
    COLORINDEX = "colorIndex"
    COLORINDEXDESC = "colorIndex desc"
    ROLE = "role"
    ROLEDESC = "role desc"
    USEBUSINESSHOURS = "useBusinessHours"
    USEBUSINESSHOURSDESC = "useBusinessHours desc"
    WORKINGHOURS = "workingHours"
    WORKINGHOURSDESC = "workingHours desc"

class Enum26(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    DISPLAYNAME = "displayName"
    EMAILADDRESS = "emailAddress"
    AVAILABILITYISAFFECTEDBYPERSONALCALENDAR = "availabilityIsAffectedByPersonalCalendar"
    COLORINDEX = "colorIndex"
    ROLE = "role"
    USEBUSINESSHOURS = "useBusinessHours"
    WORKINGHOURS = "workingHours"

class Enum27(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    DISPLAYNAME = "displayName"
    EMAILADDRESS = "emailAddress"
    AVAILABILITYISAFFECTEDBYPERSONALCALENDAR = "availabilityIsAffectedByPersonalCalendar"
    COLORINDEX = "colorIndex"
    ROLE = "role"
    USEBUSINESSHOURS = "useBusinessHours"
    WORKINGHOURS = "workingHours"

class Enum28(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    IDDESC = "id desc"
    SYMBOL = "symbol"
    SYMBOLDESC = "symbol desc"

class Enum29(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    SYMBOL = "symbol"

class Enum30(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    SYMBOL = "symbol"

class Get1itemsitem(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    DISPLAYNAME = "displayName"
    ADDRESS = "address"
    BUSINESSHOURS = "businessHours"
    BUSINESSTYPE = "businessType"
    DEFAULTCURRENCYISO = "defaultCurrencyIso"
    EMAIL = "email"
    ISPUBLISHED = "isPublished"
    PHONE = "phone"
    PUBLICURL = "publicUrl"
    SCHEDULINGPOLICY = "schedulingPolicy"
    WEBSITEURL = "webSiteUrl"
    APPOINTMENTS = "appointments"
    CALENDARVIEW = "calendarView"
    CUSTOMERS = "customers"
    SERVICES = "services"
    STAFFMEMBERS = "staffMembers"

class Get2itemsitem(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    APPOINTMENTS = "appointments"
    CALENDARVIEW = "calendarView"
    CUSTOMERS = "customers"
    SERVICES = "services"
    STAFFMEMBERS = "staffMembers"

class Get4itemsitem(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ADDITIONALINFORMATION = "additionalInformation"
    CUSTOMEREMAILADDRESS = "customerEmailAddress"
    CUSTOMERID = "customerId"
    CUSTOMERLOCATION = "customerLocation"
    CUSTOMERNAME = "customerName"
    CUSTOMERNOTES = "customerNotes"
    CUSTOMERPHONE = "customerPhone"
    DURATION = "duration"
    END = "end"
    INVOICEAMOUNT = "invoiceAmount"
    INVOICEDATE = "invoiceDate"
    INVOICEID = "invoiceId"
    INVOICESTATUS = "invoiceStatus"
    INVOICEURL = "invoiceUrl"
    ISLOCATIONONLINE = "isLocationOnline"
    ONLINEMEETINGURL = "onlineMeetingUrl"
    OPTOUTOFCUSTOMEREMAIL = "optOutOfCustomerEmail"
    POSTBUFFER = "postBuffer"
    PREBUFFER = "preBuffer"
    PRICE = "price"
    PRICETYPE = "priceType"
    REMINDERS = "reminders"
    SELFSERVICEAPPOINTMENTID = "selfServiceAppointmentId"
    SERVICEID = "serviceId"
    SERVICELOCATION = "serviceLocation"
    SERVICENAME = "serviceName"
    SERVICENOTES = "serviceNotes"
    STAFFMEMBERIDS = "staffMemberIds"
    START = "start"

class Get5itemsitem(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    IDDESC = "id desc"
    DISPLAYNAME = "displayName"
    DISPLAYNAMEDESC = "displayName desc"
    ADDRESS = "address"
    ADDRESSDESC = "address desc"
    BUSINESSHOURS = "businessHours"
    BUSINESSHOURSDESC = "businessHours desc"
    BUSINESSTYPE = "businessType"
    BUSINESSTYPEDESC = "businessType desc"
    DEFAULTCURRENCYISO = "defaultCurrencyIso"
    DEFAULTCURRENCYISODESC = "defaultCurrencyIso desc"
    EMAIL = "email"
    EMAILDESC = "email desc"
    ISPUBLISHED = "isPublished"
    ISPUBLISHEDDESC = "isPublished desc"
    PHONE = "phone"
    PHONEDESC = "phone desc"
    PUBLICURL = "publicUrl"
    PUBLICURLDESC = "publicUrl desc"
    SCHEDULINGPOLICY = "schedulingPolicy"
    SCHEDULINGPOLICYDESC = "schedulingPolicy desc"
    WEBSITEURL = "webSiteUrl"
    WEBSITEURLDESC = "webSiteUrl desc"

class Get6itemsitem(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    DISPLAYNAME = "displayName"
    ADDRESS = "address"
    BUSINESSHOURS = "businessHours"
    BUSINESSTYPE = "businessType"
    DEFAULTCURRENCYISO = "defaultCurrencyIso"
    EMAIL = "email"
    ISPUBLISHED = "isPublished"
    PHONE = "phone"
    PUBLICURL = "publicUrl"
    SCHEDULINGPOLICY = "schedulingPolicy"
    WEBSITEURL = "webSiteUrl"
    APPOINTMENTS = "appointments"
    CALENDARVIEW = "calendarView"
    CUSTOMERS = "customers"
    SERVICES = "services"
    STAFFMEMBERS = "staffMembers"

class Get7itemsitem(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    APPOINTMENTS = "appointments"
    CALENDARVIEW = "calendarView"
    CUSTOMERS = "customers"
    SERVICES = "services"
    STAFFMEMBERS = "staffMembers"

class Get9itemsitem(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ADDITIONALINFORMATION = "additionalInformation"
    CUSTOMEREMAILADDRESS = "customerEmailAddress"
    CUSTOMERID = "customerId"
    CUSTOMERLOCATION = "customerLocation"
    CUSTOMERNAME = "customerName"
    CUSTOMERNOTES = "customerNotes"
    CUSTOMERPHONE = "customerPhone"
    DURATION = "duration"
    END = "end"
    INVOICEAMOUNT = "invoiceAmount"
    INVOICEDATE = "invoiceDate"
    INVOICEID = "invoiceId"
    INVOICESTATUS = "invoiceStatus"
    INVOICEURL = "invoiceUrl"
    ISLOCATIONONLINE = "isLocationOnline"
    ONLINEMEETINGURL = "onlineMeetingUrl"
    OPTOUTOFCUSTOMEREMAIL = "optOutOfCustomerEmail"
    POSTBUFFER = "postBuffer"
    PREBUFFER = "preBuffer"
    PRICE = "price"
    PRICETYPE = "priceType"
    REMINDERS = "reminders"
    SELFSERVICEAPPOINTMENTID = "selfServiceAppointmentId"
    SERVICEID = "serviceId"
    SERVICELOCATION = "serviceLocation"
    SERVICENAME = "serviceName"
    SERVICENOTES = "serviceNotes"
    STAFFMEMBERIDS = "staffMemberIds"
    START = "start"

class Microsoftgraphbookinginvoicestatus(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    DRAFT = "draft"
    REVIEWING = "reviewing"
    OPEN = "open"
    CANCELED = "canceled"
    PAID = "paid"
    CORRECTIVE = "corrective"

class Microsoftgraphbookingpricetype(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    UNDEFINED = "undefined"
    FIXEDPRICE = "fixedPrice"
    STARTINGAT = "startingAt"
    HOURLY = "hourly"
    FREE = "free"
    PRICEVARIES = "priceVaries"
    CALLUS = "callUs"
    NOTSET = "notSet"

class Microsoftgraphbookingreminderrecipients(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ALLATTENDEES = "allAttendees"
    STAFF = "staff"
    CUSTOMER = "customer"

class Microsoftgraphbookingstaffrole(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    GUEST = "guest"
    ADMINISTRATOR = "administrator"
    VIEWER = "viewer"
    EXTERNALGUEST = "externalGuest"

class Microsoftgraphdayofweek(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    SUNDAY = "sunday"
    MONDAY = "monday"
    TUESDAY = "tuesday"
    WEDNESDAY = "wednesday"
    THURSDAY = "thursday"
    FRIDAY = "friday"
    SATURDAY = "saturday"

class Microsoftgraphlocationtype(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    DEFAULT = "default"
    CONFERENCEROOM = "conferenceRoom"
    HOMEADDRESS = "homeAddress"
    BUSINESSADDRESS = "businessAddress"
    GEOCOORDINATES = "geoCoordinates"
    STREETADDRESS = "streetAddress"
    HOTEL = "hotel"
    RESTAURANT = "restaurant"
    LOCALBUSINESS = "localBusiness"
    POSTALADDRESS = "postalAddress"

class Microsoftgraphlocationuniqueidtype(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    UNKNOWN = "unknown"
    LOCATIONSTORE = "locationStore"
    DIRECTORY = "directory"
    PRIVATE = "private"
    BING = "bing"

class Microsoftgraphphysicaladdresstype(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    UNKNOWN = "unknown"
    HOME = "home"
    BUSINESS = "business"
    OTHER = "other"
