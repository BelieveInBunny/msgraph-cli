# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from enum import Enum, EnumMeta
from six import with_metaclass

class _CaseInsensitiveEnumMeta(EnumMeta):
    def __getitem__(self, name):
        return super().__getitem__(name.upper())

    def __getattr__(cls, name):
        """Return the enum member matching `name`
        We use __getattr__ instead of descriptors or inserting into the enum
        class' __dict__ in order to support `name` and `value` being both
        properties for enum members (which live in the class' __dict__) and
        enum members themselves.
        """
        try:
            return cls._member_map_[name.upper()]
        except KeyError:
            raise AttributeError(name)


class Enum25(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ACTIVITYGROUPNAME = "activityGroupName"
    ASSIGNEDTO = "assignedTo"
    AZURESUBSCRIPTIONID = "azureSubscriptionId"
    AZURETENANTID = "azureTenantId"
    CATEGORY = "category"
    CLOSEDDATETIME = "closedDateTime"
    CLOUDAPPSTATES = "cloudAppStates"
    COMMENTS = "comments"
    CONFIDENCE = "confidence"
    CREATEDDATETIME = "createdDateTime"
    DESCRIPTION = "description"
    DETECTIONIDS = "detectionIds"
    EVENTDATETIME = "eventDateTime"
    FEEDBACK = "feedback"
    FILESTATES = "fileStates"
    HISTORYSTATES = "historyStates"
    HOSTSTATES = "hostStates"
    INCIDENTIDS = "incidentIds"
    LASTMODIFIEDDATETIME = "lastModifiedDateTime"
    MALWARESTATES = "malwareStates"
    NETWORKCONNECTIONS = "networkConnections"
    PROCESSES = "processes"
    RECOMMENDEDACTIONS = "recommendedActions"
    REGISTRYKEYSTATES = "registryKeyStates"
    SECURITYRESOURCES = "securityResources"
    SEVERITY = "severity"
    SOURCEMATERIALS = "sourceMaterials"
    STATUS = "status"
    TAGS = "tags"
    TITLE = "title"
    TRIGGERS = "triggers"
    USERSTATES = "userStates"
    VENDORINFORMATION = "vendorInformation"
    VULNERABILITYSTATES = "vulnerabilityStates"

class Enum26(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    IDDESC = "id desc"
    AZURESUBSCRIPTIONID = "azureSubscriptionId"
    AZURESUBSCRIPTIONIDDESC = "azureSubscriptionId desc"
    AZURETENANTID = "azureTenantId"
    AZURETENANTIDDESC = "azureTenantId desc"
    CREATEDDATETIME = "createdDateTime"
    CREATEDDATETIMEDESC = "createdDateTime desc"
    DEPLOYMENTPACKAGEURL = "deploymentPackageUrl"
    DEPLOYMENTPACKAGEURLDESC = "deploymentPackageUrl desc"
    DESTINATIONSERVICENAME = "destinationServiceName"
    DESTINATIONSERVICENAMEDESC = "destinationServiceName desc"
    ISSIGNED = "isSigned"
    ISSIGNEDDESC = "isSigned desc"
    LASTMODIFIEDDATETIME = "lastModifiedDateTime"
    LASTMODIFIEDDATETIMEDESC = "lastModifiedDateTime desc"
    MANIFEST = "manifest"
    MANIFESTDESC = "manifest desc"
    NAME = "name"
    NAMEDESC = "name desc"
    PERMISSIONSREQUIRED = "permissionsRequired"
    PERMISSIONSREQUIREDDESC = "permissionsRequired desc"
    PLATFORM = "platform"
    PLATFORMDESC = "platform desc"
    POLICYNAME = "policyName"
    POLICYNAMEDESC = "policyName desc"
    PUBLISHER = "publisher"
    PUBLISHERDESC = "publisher desc"
    RISKSCORE = "riskScore"
    RISKSCOREDESC = "riskScore desc"
    TAGS = "tags"
    TAGSDESC = "tags desc"
    TYPE = "type"
    TYPEDESC = "type desc"
    VENDORINFORMATION = "vendorInformation"
    VENDORINFORMATIONDESC = "vendorInformation desc"

class Enum27(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    AZURESUBSCRIPTIONID = "azureSubscriptionId"
    AZURETENANTID = "azureTenantId"
    CREATEDDATETIME = "createdDateTime"
    DEPLOYMENTPACKAGEURL = "deploymentPackageUrl"
    DESTINATIONSERVICENAME = "destinationServiceName"
    ISSIGNED = "isSigned"
    LASTMODIFIEDDATETIME = "lastModifiedDateTime"
    MANIFEST = "manifest"
    NAME = "name"
    PERMISSIONSREQUIRED = "permissionsRequired"
    PLATFORM = "platform"
    POLICYNAME = "policyName"
    PUBLISHER = "publisher"
    RISKSCORE = "riskScore"
    TAGS = "tags"
    TYPE = "type"
    VENDORINFORMATION = "vendorInformation"

class Enum28(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    AZURESUBSCRIPTIONID = "azureSubscriptionId"
    AZURETENANTID = "azureTenantId"
    CREATEDDATETIME = "createdDateTime"
    DEPLOYMENTPACKAGEURL = "deploymentPackageUrl"
    DESTINATIONSERVICENAME = "destinationServiceName"
    ISSIGNED = "isSigned"
    LASTMODIFIEDDATETIME = "lastModifiedDateTime"
    MANIFEST = "manifest"
    NAME = "name"
    PERMISSIONSREQUIRED = "permissionsRequired"
    PLATFORM = "platform"
    POLICYNAME = "policyName"
    PUBLISHER = "publisher"
    RISKSCORE = "riskScore"
    TAGS = "tags"
    TYPE = "type"
    VENDORINFORMATION = "vendorInformation"

class Enum29(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    IDDESC = "id desc"
    ACTIVITYGROUPNAMES = "activityGroupNames"
    ACTIVITYGROUPNAMESDESC = "activityGroupNames desc"
    AZURESUBSCRIPTIONID = "azureSubscriptionId"
    AZURESUBSCRIPTIONIDDESC = "azureSubscriptionId desc"
    AZURETENANTID = "azureTenantId"
    AZURETENANTIDDESC = "azureTenantId desc"
    COUNTHITS = "countHits"
    COUNTHITSDESC = "countHits desc"
    COUNTINORG = "countInOrg"
    COUNTINORGDESC = "countInOrg desc"
    DOMAINCATEGORIES = "domainCategories"
    DOMAINCATEGORIESDESC = "domainCategories desc"
    DOMAINREGISTEREDDATETIME = "domainRegisteredDateTime"
    DOMAINREGISTEREDDATETIMEDESC = "domainRegisteredDateTime desc"
    FIRSTSEENDATETIME = "firstSeenDateTime"
    FIRSTSEENDATETIMEDESC = "firstSeenDateTime desc"
    LASTSEENDATETIME = "lastSeenDateTime"
    LASTSEENDATETIMEDESC = "lastSeenDateTime desc"
    NAME = "name"
    NAMEDESC = "name desc"
    REGISTRANT = "registrant"
    REGISTRANTDESC = "registrant desc"
    RISKSCORE = "riskScore"
    RISKSCOREDESC = "riskScore desc"
    TAGS = "tags"
    TAGSDESC = "tags desc"
    VENDORINFORMATION = "vendorInformation"
    VENDORINFORMATIONDESC = "vendorInformation desc"

class Enum30(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ACTIVITYGROUPNAMES = "activityGroupNames"
    AZURESUBSCRIPTIONID = "azureSubscriptionId"
    AZURETENANTID = "azureTenantId"
    COUNTHITS = "countHits"
    COUNTINORG = "countInOrg"
    DOMAINCATEGORIES = "domainCategories"
    DOMAINREGISTEREDDATETIME = "domainRegisteredDateTime"
    FIRSTSEENDATETIME = "firstSeenDateTime"
    LASTSEENDATETIME = "lastSeenDateTime"
    NAME = "name"
    REGISTRANT = "registrant"
    RISKSCORE = "riskScore"
    TAGS = "tags"
    VENDORINFORMATION = "vendorInformation"

class Enum31(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ACTIVITYGROUPNAMES = "activityGroupNames"
    AZURESUBSCRIPTIONID = "azureSubscriptionId"
    AZURETENANTID = "azureTenantId"
    COUNTHITS = "countHits"
    COUNTINORG = "countInOrg"
    DOMAINCATEGORIES = "domainCategories"
    DOMAINREGISTEREDDATETIME = "domainRegisteredDateTime"
    FIRSTSEENDATETIME = "firstSeenDateTime"
    LASTSEENDATETIME = "lastSeenDateTime"
    NAME = "name"
    REGISTRANT = "registrant"
    RISKSCORE = "riskScore"
    TAGS = "tags"
    VENDORINFORMATION = "vendorInformation"

class Enum32(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    IDDESC = "id desc"
    ACTIVITYGROUPNAMES = "activityGroupNames"
    ACTIVITYGROUPNAMESDESC = "activityGroupNames desc"
    AZURESUBSCRIPTIONID = "azureSubscriptionId"
    AZURESUBSCRIPTIONIDDESC = "azureSubscriptionId desc"
    AZURETENANTID = "azureTenantId"
    AZURETENANTIDDESC = "azureTenantId desc"
    CERTIFICATETHUMBPRINT = "certificateThumbprint"
    CERTIFICATETHUMBPRINTDESC = "certificateThumbprint desc"
    EXTENSIONS = "extensions"
    EXTENSIONSDESC = "extensions desc"
    FILETYPE = "fileType"
    FILETYPEDESC = "fileType desc"
    FIRSTSEENDATETIME = "firstSeenDateTime"
    FIRSTSEENDATETIMEDESC = "firstSeenDateTime desc"
    HASHES = "hashes"
    HASHESDESC = "hashes desc"
    LASTSEENDATETIME = "lastSeenDateTime"
    LASTSEENDATETIMEDESC = "lastSeenDateTime desc"
    MALWARESTATES = "malwareStates"
    MALWARESTATESDESC = "malwareStates desc"
    NAMES = "names"
    NAMESDESC = "names desc"
    RISKSCORE = "riskScore"
    RISKSCOREDESC = "riskScore desc"
    SIZE = "size"
    SIZEDESC = "size desc"
    TAGS = "tags"
    TAGSDESC = "tags desc"
    VENDORINFORMATION = "vendorInformation"
    VENDORINFORMATIONDESC = "vendorInformation desc"
    VULNERABILITYSTATES = "vulnerabilityStates"
    VULNERABILITYSTATESDESC = "vulnerabilityStates desc"

class Enum33(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ACTIVITYGROUPNAMES = "activityGroupNames"
    AZURESUBSCRIPTIONID = "azureSubscriptionId"
    AZURETENANTID = "azureTenantId"
    CERTIFICATETHUMBPRINT = "certificateThumbprint"
    EXTENSIONS = "extensions"
    FILETYPE = "fileType"
    FIRSTSEENDATETIME = "firstSeenDateTime"
    HASHES = "hashes"
    LASTSEENDATETIME = "lastSeenDateTime"
    MALWARESTATES = "malwareStates"
    NAMES = "names"
    RISKSCORE = "riskScore"
    SIZE = "size"
    TAGS = "tags"
    VENDORINFORMATION = "vendorInformation"
    VULNERABILITYSTATES = "vulnerabilityStates"

class Enum34(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ACTIVITYGROUPNAMES = "activityGroupNames"
    AZURESUBSCRIPTIONID = "azureSubscriptionId"
    AZURETENANTID = "azureTenantId"
    CERTIFICATETHUMBPRINT = "certificateThumbprint"
    EXTENSIONS = "extensions"
    FILETYPE = "fileType"
    FIRSTSEENDATETIME = "firstSeenDateTime"
    HASHES = "hashes"
    LASTSEENDATETIME = "lastSeenDateTime"
    MALWARESTATES = "malwareStates"
    NAMES = "names"
    RISKSCORE = "riskScore"
    SIZE = "size"
    TAGS = "tags"
    VENDORINFORMATION = "vendorInformation"
    VULNERABILITYSTATES = "vulnerabilityStates"

class Enum35(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    IDDESC = "id desc"
    AZURESUBSCRIPTIONID = "azureSubscriptionId"
    AZURESUBSCRIPTIONIDDESC = "azureSubscriptionId desc"
    AZURETENANTID = "azureTenantId"
    AZURETENANTIDDESC = "azureTenantId desc"
    FIRSTSEENDATETIME = "firstSeenDateTime"
    FIRSTSEENDATETIMEDESC = "firstSeenDateTime desc"
    FQDN = "fqdn"
    FQDNDESC = "fqdn desc"
    ISAZUREADJOINED = "isAzureAdJoined"
    ISAZUREADJOINEDDESC = "isAzureAdJoined desc"
    ISAZUREADREGISTERED = "isAzureAdRegistered"
    ISAZUREADREGISTEREDDESC = "isAzureAdRegistered desc"
    ISHYBRIDAZUREDOMAINJOINED = "isHybridAzureDomainJoined"
    ISHYBRIDAZUREDOMAINJOINEDDESC = "isHybridAzureDomainJoined desc"
    LASTSEENDATETIME = "lastSeenDateTime"
    LASTSEENDATETIMEDESC = "lastSeenDateTime desc"
    LOGONUSERS = "logonUsers"
    LOGONUSERSDESC = "logonUsers desc"
    NETBIOSNAME = "netBiosName"
    NETBIOSNAMEDESC = "netBiosName desc"
    NETWORKINTERFACES = "networkInterfaces"
    NETWORKINTERFACESDESC = "networkInterfaces desc"
    OS = "os"
    OSDESC = "os desc"
    OSVERSION = "osVersion"
    OSVERSIONDESC = "osVersion desc"
    PARENTHOST = "parentHost"
    PARENTHOSTDESC = "parentHost desc"
    RELATEDHOSTIDS = "relatedHostIds"
    RELATEDHOSTIDSDESC = "relatedHostIds desc"
    RISKSCORE = "riskScore"
    RISKSCOREDESC = "riskScore desc"
    TAGS = "tags"
    TAGSDESC = "tags desc"
    VENDORINFORMATION = "vendorInformation"
    VENDORINFORMATIONDESC = "vendorInformation desc"

class Enum36(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    AZURESUBSCRIPTIONID = "azureSubscriptionId"
    AZURETENANTID = "azureTenantId"
    FIRSTSEENDATETIME = "firstSeenDateTime"
    FQDN = "fqdn"
    ISAZUREADJOINED = "isAzureAdJoined"
    ISAZUREADREGISTERED = "isAzureAdRegistered"
    ISHYBRIDAZUREDOMAINJOINED = "isHybridAzureDomainJoined"
    LASTSEENDATETIME = "lastSeenDateTime"
    LOGONUSERS = "logonUsers"
    NETBIOSNAME = "netBiosName"
    NETWORKINTERFACES = "networkInterfaces"
    OS = "os"
    OSVERSION = "osVersion"
    PARENTHOST = "parentHost"
    RELATEDHOSTIDS = "relatedHostIds"
    RISKSCORE = "riskScore"
    TAGS = "tags"
    VENDORINFORMATION = "vendorInformation"

class Enum37(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    AZURESUBSCRIPTIONID = "azureSubscriptionId"
    AZURETENANTID = "azureTenantId"
    FIRSTSEENDATETIME = "firstSeenDateTime"
    FQDN = "fqdn"
    ISAZUREADJOINED = "isAzureAdJoined"
    ISAZUREADREGISTERED = "isAzureAdRegistered"
    ISHYBRIDAZUREDOMAINJOINED = "isHybridAzureDomainJoined"
    LASTSEENDATETIME = "lastSeenDateTime"
    LOGONUSERS = "logonUsers"
    NETBIOSNAME = "netBiosName"
    NETWORKINTERFACES = "networkInterfaces"
    OS = "os"
    OSVERSION = "osVersion"
    PARENTHOST = "parentHost"
    RELATEDHOSTIDS = "relatedHostIds"
    RISKSCORE = "riskScore"
    TAGS = "tags"
    VENDORINFORMATION = "vendorInformation"

class Enum38(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    IDDESC = "id desc"
    ACTIVITYGROUPNAMES = "activityGroupNames"
    ACTIVITYGROUPNAMESDESC = "activityGroupNames desc"
    ADDRESS = "address"
    ADDRESSDESC = "address desc"
    AZURESUBSCRIPTIONID = "azureSubscriptionId"
    AZURESUBSCRIPTIONIDDESC = "azureSubscriptionId desc"
    AZURETENANTID = "azureTenantId"
    AZURETENANTIDDESC = "azureTenantId desc"
    COUNTHITS = "countHits"
    COUNTHITSDESC = "countHits desc"
    COUNTHOSTS = "countHosts"
    COUNTHOSTSDESC = "countHosts desc"
    FIRSTSEENDATETIME = "firstSeenDateTime"
    FIRSTSEENDATETIMEDESC = "firstSeenDateTime desc"
    IPCATEGORIES = "ipCategories"
    IPCATEGORIESDESC = "ipCategories desc"
    IPREFERENCEDATA = "ipReferenceData"
    IPREFERENCEDATADESC = "ipReferenceData desc"
    LASTSEENDATETIME = "lastSeenDateTime"
    LASTSEENDATETIMEDESC = "lastSeenDateTime desc"
    RISKSCORE = "riskScore"
    RISKSCOREDESC = "riskScore desc"
    TAGS = "tags"
    TAGSDESC = "tags desc"
    VENDORINFORMATION = "vendorInformation"
    VENDORINFORMATIONDESC = "vendorInformation desc"

class Enum39(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ACTIVITYGROUPNAMES = "activityGroupNames"
    ADDRESS = "address"
    AZURESUBSCRIPTIONID = "azureSubscriptionId"
    AZURETENANTID = "azureTenantId"
    COUNTHITS = "countHits"
    COUNTHOSTS = "countHosts"
    FIRSTSEENDATETIME = "firstSeenDateTime"
    IPCATEGORIES = "ipCategories"
    IPREFERENCEDATA = "ipReferenceData"
    LASTSEENDATETIME = "lastSeenDateTime"
    RISKSCORE = "riskScore"
    TAGS = "tags"
    VENDORINFORMATION = "vendorInformation"

class Enum40(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ACTIVITYGROUPNAMES = "activityGroupNames"
    ADDRESS = "address"
    AZURESUBSCRIPTIONID = "azureSubscriptionId"
    AZURETENANTID = "azureTenantId"
    COUNTHITS = "countHits"
    COUNTHOSTS = "countHosts"
    FIRSTSEENDATETIME = "firstSeenDateTime"
    IPCATEGORIES = "ipCategories"
    IPREFERENCEDATA = "ipReferenceData"
    LASTSEENDATETIME = "lastSeenDateTime"
    RISKSCORE = "riskScore"
    TAGS = "tags"
    VENDORINFORMATION = "vendorInformation"

class Enum41(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    IDDESC = "id desc"
    AZURETENANTID = "azureTenantId"
    AZURETENANTIDDESC = "azureTenantId desc"
    ENABLED = "enabled"
    ENABLEDDESC = "enabled desc"
    LASTMODIFIEDDATETIME = "lastModifiedDateTime"
    LASTMODIFIEDDATETIMEDESC = "lastModifiedDateTime desc"
    PROVIDER = "provider"
    PROVIDERDESC = "provider desc"
    VENDOR = "vendor"
    VENDORDESC = "vendor desc"

class Enum42(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    AZURETENANTID = "azureTenantId"
    ENABLED = "enabled"
    LASTMODIFIEDDATETIME = "lastModifiedDateTime"
    PROVIDER = "provider"
    VENDOR = "vendor"

class Enum43(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    AZURETENANTID = "azureTenantId"
    ENABLED = "enabled"
    LASTMODIFIEDDATETIME = "lastModifiedDateTime"
    PROVIDER = "provider"
    VENDOR = "vendor"

class Enum44(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    IDDESC = "id desc"
    ACTIONTYPE = "actionType"
    ACTIONTYPEDESC = "actionType desc"
    ACTIONURL = "actionUrl"
    ACTIONURLDESC = "actionUrl desc"
    AZURETENANTID = "azureTenantId"
    AZURETENANTIDDESC = "azureTenantId desc"
    COMPLIANCEINFORMATION = "complianceInformation"
    COMPLIANCEINFORMATIONDESC = "complianceInformation desc"
    CONTROLCATEGORY = "controlCategory"
    CONTROLCATEGORYDESC = "controlCategory desc"
    CONTROLSTATEUPDATES = "controlStateUpdates"
    CONTROLSTATEUPDATESDESC = "controlStateUpdates desc"
    DEPRECATED = "deprecated"
    DEPRECATEDDESC = "deprecated desc"
    IMPLEMENTATIONCOST = "implementationCost"
    IMPLEMENTATIONCOSTDESC = "implementationCost desc"
    LASTMODIFIEDDATETIME = "lastModifiedDateTime"
    LASTMODIFIEDDATETIMEDESC = "lastModifiedDateTime desc"
    MAXSCORE = "maxScore"
    MAXSCOREDESC = "maxScore desc"
    RANK = "rank"
    RANKDESC = "rank desc"
    REMEDIATION = "remediation"
    REMEDIATIONDESC = "remediation desc"
    REMEDIATIONIMPACT = "remediationImpact"
    REMEDIATIONIMPACTDESC = "remediationImpact desc"
    SERVICE = "service"
    SERVICEDESC = "service desc"
    THREATS = "threats"
    THREATSDESC = "threats desc"
    TIER = "tier"
    TIERDESC = "tier desc"
    TITLE = "title"
    TITLEDESC = "title desc"
    USERIMPACT = "userImpact"
    USERIMPACTDESC = "userImpact desc"
    VENDORINFORMATION = "vendorInformation"
    VENDORINFORMATIONDESC = "vendorInformation desc"

class Enum45(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ACTIONTYPE = "actionType"
    ACTIONURL = "actionUrl"
    AZURETENANTID = "azureTenantId"
    COMPLIANCEINFORMATION = "complianceInformation"
    CONTROLCATEGORY = "controlCategory"
    CONTROLSTATEUPDATES = "controlStateUpdates"
    DEPRECATED = "deprecated"
    IMPLEMENTATIONCOST = "implementationCost"
    LASTMODIFIEDDATETIME = "lastModifiedDateTime"
    MAXSCORE = "maxScore"
    RANK = "rank"
    REMEDIATION = "remediation"
    REMEDIATIONIMPACT = "remediationImpact"
    SERVICE = "service"
    THREATS = "threats"
    TIER = "tier"
    TITLE = "title"
    USERIMPACT = "userImpact"
    VENDORINFORMATION = "vendorInformation"

class Enum46(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ACTIONTYPE = "actionType"
    ACTIONURL = "actionUrl"
    AZURETENANTID = "azureTenantId"
    COMPLIANCEINFORMATION = "complianceInformation"
    CONTROLCATEGORY = "controlCategory"
    CONTROLSTATEUPDATES = "controlStateUpdates"
    DEPRECATED = "deprecated"
    IMPLEMENTATIONCOST = "implementationCost"
    LASTMODIFIEDDATETIME = "lastModifiedDateTime"
    MAXSCORE = "maxScore"
    RANK = "rank"
    REMEDIATION = "remediation"
    REMEDIATIONIMPACT = "remediationImpact"
    SERVICE = "service"
    THREATS = "threats"
    TIER = "tier"
    TITLE = "title"
    USERIMPACT = "userImpact"
    VENDORINFORMATION = "vendorInformation"

class Enum47(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    IDDESC = "id desc"
    ACTIVEUSERCOUNT = "activeUserCount"
    ACTIVEUSERCOUNTDESC = "activeUserCount desc"
    AVERAGECOMPARATIVESCORES = "averageComparativeScores"
    AVERAGECOMPARATIVESCORESDESC = "averageComparativeScores desc"
    AZURETENANTID = "azureTenantId"
    AZURETENANTIDDESC = "azureTenantId desc"
    CONTROLSCORES = "controlScores"
    CONTROLSCORESDESC = "controlScores desc"
    CREATEDDATETIME = "createdDateTime"
    CREATEDDATETIMEDESC = "createdDateTime desc"
    CURRENTSCORE = "currentScore"
    CURRENTSCOREDESC = "currentScore desc"
    ENABLEDSERVICES = "enabledServices"
    ENABLEDSERVICESDESC = "enabledServices desc"
    LICENSEDUSERCOUNT = "licensedUserCount"
    LICENSEDUSERCOUNTDESC = "licensedUserCount desc"
    MAXSCORE = "maxScore"
    MAXSCOREDESC = "maxScore desc"
    VENDORINFORMATION = "vendorInformation"
    VENDORINFORMATIONDESC = "vendorInformation desc"

class Enum48(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ACTIVEUSERCOUNT = "activeUserCount"
    AVERAGECOMPARATIVESCORES = "averageComparativeScores"
    AZURETENANTID = "azureTenantId"
    CONTROLSCORES = "controlScores"
    CREATEDDATETIME = "createdDateTime"
    CURRENTSCORE = "currentScore"
    ENABLEDSERVICES = "enabledServices"
    LICENSEDUSERCOUNT = "licensedUserCount"
    MAXSCORE = "maxScore"
    VENDORINFORMATION = "vendorInformation"

class Enum49(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ACTIVEUSERCOUNT = "activeUserCount"
    AVERAGECOMPARATIVESCORES = "averageComparativeScores"
    AZURETENANTID = "azureTenantId"
    CONTROLSCORES = "controlScores"
    CREATEDDATETIME = "createdDateTime"
    CURRENTSCORE = "currentScore"
    ENABLEDSERVICES = "enabledServices"
    LICENSEDUSERCOUNT = "licensedUserCount"
    MAXSCORE = "maxScore"
    VENDORINFORMATION = "vendorInformation"

class Enum50(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    IDDESC = "id desc"
    ACTIONREASON = "actionReason"
    ACTIONREASONDESC = "actionReason desc"
    APPID = "appId"
    APPIDDESC = "appId desc"
    AZURETENANTID = "azureTenantId"
    AZURETENANTIDDESC = "azureTenantId desc"
    CLIENTCONTEXT = "clientContext"
    CLIENTCONTEXTDESC = "clientContext desc"
    COMPLETEDDATETIME = "completedDateTime"
    COMPLETEDDATETIMEDESC = "completedDateTime desc"
    CREATEDDATETIME = "createdDateTime"
    CREATEDDATETIMEDESC = "createdDateTime desc"
    ERRORINFO = "errorInfo"
    ERRORINFODESC = "errorInfo desc"
    LASTACTIONDATETIME = "lastActionDateTime"
    LASTACTIONDATETIMEDESC = "lastActionDateTime desc"
    NAME = "name"
    NAMEDESC = "name desc"
    PARAMETERS = "parameters"
    PARAMETERSDESC = "parameters desc"
    STATES = "states"
    STATESDESC = "states desc"
    STATUS = "status"
    STATUSDESC = "status desc"
    USER = "user"
    USERDESC = "user desc"
    VENDORINFORMATION = "vendorInformation"
    VENDORINFORMATIONDESC = "vendorInformation desc"

class Enum51(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ACTIONREASON = "actionReason"
    APPID = "appId"
    AZURETENANTID = "azureTenantId"
    CLIENTCONTEXT = "clientContext"
    COMPLETEDDATETIME = "completedDateTime"
    CREATEDDATETIME = "createdDateTime"
    ERRORINFO = "errorInfo"
    LASTACTIONDATETIME = "lastActionDateTime"
    NAME = "name"
    PARAMETERS = "parameters"
    STATES = "states"
    STATUS = "status"
    USER = "user"
    VENDORINFORMATION = "vendorInformation"

class Enum52(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ACTIONREASON = "actionReason"
    APPID = "appId"
    AZURETENANTID = "azureTenantId"
    CLIENTCONTEXT = "clientContext"
    COMPLETEDDATETIME = "completedDateTime"
    CREATEDDATETIME = "createdDateTime"
    ERRORINFO = "errorInfo"
    LASTACTIONDATETIME = "lastActionDateTime"
    NAME = "name"
    PARAMETERS = "parameters"
    STATES = "states"
    STATUS = "status"
    USER = "user"
    VENDORINFORMATION = "vendorInformation"

class Enum53(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    IDDESC = "id desc"
    ACTION = "action"
    ACTIONDESC = "action desc"
    ACTIVITYGROUPNAMES = "activityGroupNames"
    ACTIVITYGROUPNAMESDESC = "activityGroupNames desc"
    ADDITIONALINFORMATION = "additionalInformation"
    ADDITIONALINFORMATIONDESC = "additionalInformation desc"
    AZURETENANTID = "azureTenantId"
    AZURETENANTIDDESC = "azureTenantId desc"
    CONFIDENCE = "confidence"
    CONFIDENCEDESC = "confidence desc"
    DESCRIPTION = "description"
    DESCRIPTIONDESC = "description desc"
    DIAMONDMODEL = "diamondModel"
    DIAMONDMODELDESC = "diamondModel desc"
    DOMAINNAME = "domainName"
    DOMAINNAMEDESC = "domainName desc"
    EMAILENCODING = "emailEncoding"
    EMAILENCODINGDESC = "emailEncoding desc"
    EMAILLANGUAGE = "emailLanguage"
    EMAILLANGUAGEDESC = "emailLanguage desc"
    EMAILRECIPIENT = "emailRecipient"
    EMAILRECIPIENTDESC = "emailRecipient desc"
    EMAILSENDERADDRESS = "emailSenderAddress"
    EMAILSENDERADDRESSDESC = "emailSenderAddress desc"
    EMAILSENDERNAME = "emailSenderName"
    EMAILSENDERNAMEDESC = "emailSenderName desc"
    EMAILSOURCEDOMAIN = "emailSourceDomain"
    EMAILSOURCEDOMAINDESC = "emailSourceDomain desc"
    EMAILSOURCEIPADDRESS = "emailSourceIpAddress"
    EMAILSOURCEIPADDRESSDESC = "emailSourceIpAddress desc"
    EMAILSUBJECT = "emailSubject"
    EMAILSUBJECTDESC = "emailSubject desc"
    EMAILXMAILER = "emailXMailer"
    EMAILXMAILERDESC = "emailXMailer desc"
    EXPIRATIONDATETIME = "expirationDateTime"
    EXPIRATIONDATETIMEDESC = "expirationDateTime desc"
    EXTERNALID = "externalId"
    EXTERNALIDDESC = "externalId desc"
    FILECOMPILEDATETIME = "fileCompileDateTime"
    FILECOMPILEDATETIMEDESC = "fileCompileDateTime desc"
    FILECREATEDDATETIME = "fileCreatedDateTime"
    FILECREATEDDATETIMEDESC = "fileCreatedDateTime desc"
    FILEHASHTYPE = "fileHashType"
    FILEHASHTYPEDESC = "fileHashType desc"
    FILEHASHVALUE = "fileHashValue"
    FILEHASHVALUEDESC = "fileHashValue desc"
    FILEMUTEXNAME = "fileMutexName"
    FILEMUTEXNAMEDESC = "fileMutexName desc"
    FILENAME = "fileName"
    FILENAMEDESC = "fileName desc"
    FILEPACKER = "filePacker"
    FILEPACKERDESC = "filePacker desc"
    FILEPATH = "filePath"
    FILEPATHDESC = "filePath desc"
    FILESIZE = "fileSize"
    FILESIZEDESC = "fileSize desc"
    FILETYPE = "fileType"
    FILETYPEDESC = "fileType desc"
    INGESTEDDATETIME = "ingestedDateTime"
    INGESTEDDATETIMEDESC = "ingestedDateTime desc"
    ISACTIVE = "isActive"
    ISACTIVEDESC = "isActive desc"
    KILLCHAIN = "killChain"
    KILLCHAINDESC = "killChain desc"
    KNOWNFALSEPOSITIVES = "knownFalsePositives"
    KNOWNFALSEPOSITIVESDESC = "knownFalsePositives desc"
    LASTREPORTEDDATETIME = "lastReportedDateTime"
    LASTREPORTEDDATETIMEDESC = "lastReportedDateTime desc"
    MALWAREFAMILYNAMES = "malwareFamilyNames"
    MALWAREFAMILYNAMESDESC = "malwareFamilyNames desc"
    NETWORKCIDRBLOCK = "networkCidrBlock"
    NETWORKCIDRBLOCKDESC = "networkCidrBlock desc"
    NETWORKDESTINATIONASN = "networkDestinationAsn"
    NETWORKDESTINATIONASNDESC = "networkDestinationAsn desc"
    NETWORKDESTINATIONCIDRBLOCK = "networkDestinationCidrBlock"
    NETWORKDESTINATIONCIDRBLOCKDESC = "networkDestinationCidrBlock desc"
    NETWORKDESTINATIONIPV4 = "networkDestinationIPv4"
    NETWORKDESTINATIONIPV4DESC = "networkDestinationIPv4 desc"
    NETWORKDESTINATIONIPV6 = "networkDestinationIPv6"
    NETWORKDESTINATIONIPV6DESC = "networkDestinationIPv6 desc"
    NETWORKDESTINATIONPORT = "networkDestinationPort"
    NETWORKDESTINATIONPORTDESC = "networkDestinationPort desc"
    NETWORKIPV4 = "networkIPv4"
    NETWORKIPV4DESC = "networkIPv4 desc"
    NETWORKIPV6 = "networkIPv6"
    NETWORKIPV6DESC = "networkIPv6 desc"
    NETWORKPORT = "networkPort"
    NETWORKPORTDESC = "networkPort desc"
    NETWORKPROTOCOL = "networkProtocol"
    NETWORKPROTOCOLDESC = "networkProtocol desc"
    NETWORKSOURCEASN = "networkSourceAsn"
    NETWORKSOURCEASNDESC = "networkSourceAsn desc"
    NETWORKSOURCECIDRBLOCK = "networkSourceCidrBlock"
    NETWORKSOURCECIDRBLOCKDESC = "networkSourceCidrBlock desc"
    NETWORKSOURCEIPV4 = "networkSourceIPv4"
    NETWORKSOURCEIPV4DESC = "networkSourceIPv4 desc"
    NETWORKSOURCEIPV6 = "networkSourceIPv6"
    NETWORKSOURCEIPV6DESC = "networkSourceIPv6 desc"
    NETWORKSOURCEPORT = "networkSourcePort"
    NETWORKSOURCEPORTDESC = "networkSourcePort desc"
    PASSIVEONLY = "passiveOnly"
    PASSIVEONLYDESC = "passiveOnly desc"
    SEVERITY = "severity"
    SEVERITYDESC = "severity desc"
    TAGS = "tags"
    TAGSDESC = "tags desc"
    TARGETPRODUCT = "targetProduct"
    TARGETPRODUCTDESC = "targetProduct desc"
    THREATTYPE = "threatType"
    THREATTYPEDESC = "threatType desc"
    TLPLEVEL = "tlpLevel"
    TLPLEVELDESC = "tlpLevel desc"
    URL = "url"
    URLDESC = "url desc"
    USERAGENT = "userAgent"
    USERAGENTDESC = "userAgent desc"

class Enum54(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ACTION = "action"
    ACTIVITYGROUPNAMES = "activityGroupNames"
    ADDITIONALINFORMATION = "additionalInformation"
    AZURETENANTID = "azureTenantId"
    CONFIDENCE = "confidence"
    DESCRIPTION = "description"
    DIAMONDMODEL = "diamondModel"
    DOMAINNAME = "domainName"
    EMAILENCODING = "emailEncoding"
    EMAILLANGUAGE = "emailLanguage"
    EMAILRECIPIENT = "emailRecipient"
    EMAILSENDERADDRESS = "emailSenderAddress"
    EMAILSENDERNAME = "emailSenderName"
    EMAILSOURCEDOMAIN = "emailSourceDomain"
    EMAILSOURCEIPADDRESS = "emailSourceIpAddress"
    EMAILSUBJECT = "emailSubject"
    EMAILXMAILER = "emailXMailer"
    EXPIRATIONDATETIME = "expirationDateTime"
    EXTERNALID = "externalId"
    FILECOMPILEDATETIME = "fileCompileDateTime"
    FILECREATEDDATETIME = "fileCreatedDateTime"
    FILEHASHTYPE = "fileHashType"
    FILEHASHVALUE = "fileHashValue"
    FILEMUTEXNAME = "fileMutexName"
    FILENAME = "fileName"
    FILEPACKER = "filePacker"
    FILEPATH = "filePath"
    FILESIZE = "fileSize"
    FILETYPE = "fileType"
    INGESTEDDATETIME = "ingestedDateTime"
    ISACTIVE = "isActive"
    KILLCHAIN = "killChain"
    KNOWNFALSEPOSITIVES = "knownFalsePositives"
    LASTREPORTEDDATETIME = "lastReportedDateTime"
    MALWAREFAMILYNAMES = "malwareFamilyNames"
    NETWORKCIDRBLOCK = "networkCidrBlock"
    NETWORKDESTINATIONASN = "networkDestinationAsn"
    NETWORKDESTINATIONCIDRBLOCK = "networkDestinationCidrBlock"
    NETWORKDESTINATIONIPV4 = "networkDestinationIPv4"
    NETWORKDESTINATIONIPV6 = "networkDestinationIPv6"
    NETWORKDESTINATIONPORT = "networkDestinationPort"
    NETWORKIPV4 = "networkIPv4"
    NETWORKIPV6 = "networkIPv6"
    NETWORKPORT = "networkPort"
    NETWORKPROTOCOL = "networkProtocol"
    NETWORKSOURCEASN = "networkSourceAsn"
    NETWORKSOURCECIDRBLOCK = "networkSourceCidrBlock"
    NETWORKSOURCEIPV4 = "networkSourceIPv4"
    NETWORKSOURCEIPV6 = "networkSourceIPv6"
    NETWORKSOURCEPORT = "networkSourcePort"
    PASSIVEONLY = "passiveOnly"
    SEVERITY = "severity"
    TAGS = "tags"
    TARGETPRODUCT = "targetProduct"
    THREATTYPE = "threatType"
    TLPLEVEL = "tlpLevel"
    URL = "url"
    USERAGENT = "userAgent"

class Enum55(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ACTION = "action"
    ACTIVITYGROUPNAMES = "activityGroupNames"
    ADDITIONALINFORMATION = "additionalInformation"
    AZURETENANTID = "azureTenantId"
    CONFIDENCE = "confidence"
    DESCRIPTION = "description"
    DIAMONDMODEL = "diamondModel"
    DOMAINNAME = "domainName"
    EMAILENCODING = "emailEncoding"
    EMAILLANGUAGE = "emailLanguage"
    EMAILRECIPIENT = "emailRecipient"
    EMAILSENDERADDRESS = "emailSenderAddress"
    EMAILSENDERNAME = "emailSenderName"
    EMAILSOURCEDOMAIN = "emailSourceDomain"
    EMAILSOURCEIPADDRESS = "emailSourceIpAddress"
    EMAILSUBJECT = "emailSubject"
    EMAILXMAILER = "emailXMailer"
    EXPIRATIONDATETIME = "expirationDateTime"
    EXTERNALID = "externalId"
    FILECOMPILEDATETIME = "fileCompileDateTime"
    FILECREATEDDATETIME = "fileCreatedDateTime"
    FILEHASHTYPE = "fileHashType"
    FILEHASHVALUE = "fileHashValue"
    FILEMUTEXNAME = "fileMutexName"
    FILENAME = "fileName"
    FILEPACKER = "filePacker"
    FILEPATH = "filePath"
    FILESIZE = "fileSize"
    FILETYPE = "fileType"
    INGESTEDDATETIME = "ingestedDateTime"
    ISACTIVE = "isActive"
    KILLCHAIN = "killChain"
    KNOWNFALSEPOSITIVES = "knownFalsePositives"
    LASTREPORTEDDATETIME = "lastReportedDateTime"
    MALWAREFAMILYNAMES = "malwareFamilyNames"
    NETWORKCIDRBLOCK = "networkCidrBlock"
    NETWORKDESTINATIONASN = "networkDestinationAsn"
    NETWORKDESTINATIONCIDRBLOCK = "networkDestinationCidrBlock"
    NETWORKDESTINATIONIPV4 = "networkDestinationIPv4"
    NETWORKDESTINATIONIPV6 = "networkDestinationIPv6"
    NETWORKDESTINATIONPORT = "networkDestinationPort"
    NETWORKIPV4 = "networkIPv4"
    NETWORKIPV6 = "networkIPv6"
    NETWORKPORT = "networkPort"
    NETWORKPROTOCOL = "networkProtocol"
    NETWORKSOURCEASN = "networkSourceAsn"
    NETWORKSOURCECIDRBLOCK = "networkSourceCidrBlock"
    NETWORKSOURCEIPV4 = "networkSourceIPv4"
    NETWORKSOURCEIPV6 = "networkSourceIPv6"
    NETWORKSOURCEPORT = "networkSourcePort"
    PASSIVEONLY = "passiveOnly"
    SEVERITY = "severity"
    TAGS = "tags"
    TARGETPRODUCT = "targetProduct"
    THREATTYPE = "threatType"
    TLPLEVEL = "tlpLevel"
    URL = "url"
    USERAGENT = "userAgent"

class Enum56(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    IDDESC = "id desc"
    ACCOUNTS = "accounts"
    ACCOUNTSDESC = "accounts desc"
    AZURESUBSCRIPTIONID = "azureSubscriptionId"
    AZURESUBSCRIPTIONIDDESC = "azureSubscriptionId desc"
    AZURETENANTID = "azureTenantId"
    AZURETENANTIDDESC = "azureTenantId desc"
    CREATEDDATETIME = "createdDateTime"
    CREATEDDATETIMEDESC = "createdDateTime desc"
    DISPLAYNAME = "displayName"
    DISPLAYNAMEDESC = "displayName desc"
    LASTMODIFIEDDATETIME = "lastModifiedDateTime"
    LASTMODIFIEDDATETIMEDESC = "lastModifiedDateTime desc"
    RISKSCORE = "riskScore"
    RISKSCOREDESC = "riskScore desc"
    TAGS = "tags"
    TAGSDESC = "tags desc"
    USERPRINCIPALNAME = "userPrincipalName"
    USERPRINCIPALNAMEDESC = "userPrincipalName desc"
    VENDORINFORMATION = "vendorInformation"
    VENDORINFORMATIONDESC = "vendorInformation desc"

class Enum57(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ACCOUNTS = "accounts"
    AZURESUBSCRIPTIONID = "azureSubscriptionId"
    AZURETENANTID = "azureTenantId"
    CREATEDDATETIME = "createdDateTime"
    DISPLAYNAME = "displayName"
    LASTMODIFIEDDATETIME = "lastModifiedDateTime"
    RISKSCORE = "riskScore"
    TAGS = "tags"
    USERPRINCIPALNAME = "userPrincipalName"
    VENDORINFORMATION = "vendorInformation"

class Enum58(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ACCOUNTS = "accounts"
    AZURESUBSCRIPTIONID = "azureSubscriptionId"
    AZURETENANTID = "azureTenantId"
    CREATEDDATETIME = "createdDateTime"
    DISPLAYNAME = "displayName"
    LASTMODIFIEDDATETIME = "lastModifiedDateTime"
    RISKSCORE = "riskScore"
    TAGS = "tags"
    USERPRINCIPALNAME = "userPrincipalName"
    VENDORINFORMATION = "vendorInformation"

class Get0itemsitem(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    PROVIDERSTATUS = "providerStatus"
    ALERTS = "alerts"
    CLOUDAPPSECURITYPROFILES = "cloudAppSecurityProfiles"
    DOMAINSECURITYPROFILES = "domainSecurityProfiles"
    FILESECURITYPROFILES = "fileSecurityProfiles"
    HOSTSECURITYPROFILES = "hostSecurityProfiles"
    IPSECURITYPROFILES = "ipSecurityProfiles"
    PROVIDERTENANTSETTINGS = "providerTenantSettings"
    SECURESCORECONTROLPROFILES = "secureScoreControlProfiles"
    SECURESCORES = "secureScores"
    SECURITYACTIONS = "securityActions"
    TIINDICATORS = "tiIndicators"
    USERSECURITYPROFILES = "userSecurityProfiles"

class Get1itemsitem(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    ALERTS = "alerts"
    CLOUDAPPSECURITYPROFILES = "cloudAppSecurityProfiles"
    DOMAINSECURITYPROFILES = "domainSecurityProfiles"
    FILESECURITYPROFILES = "fileSecurityProfiles"
    HOSTSECURITYPROFILES = "hostSecurityProfiles"
    IPSECURITYPROFILES = "ipSecurityProfiles"
    PROVIDERTENANTSETTINGS = "providerTenantSettings"
    SECURESCORECONTROLPROFILES = "secureScoreControlProfiles"
    SECURESCORES = "secureScores"
    SECURITYACTIONS = "securityActions"
    TIINDICATORS = "tiIndicators"
    USERSECURITYPROFILES = "userSecurityProfiles"

class Get5itemsitem(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    IDDESC = "id desc"
    ACTIVITYGROUPNAME = "activityGroupName"
    ACTIVITYGROUPNAMEDESC = "activityGroupName desc"
    ASSIGNEDTO = "assignedTo"
    ASSIGNEDTODESC = "assignedTo desc"
    AZURESUBSCRIPTIONID = "azureSubscriptionId"
    AZURESUBSCRIPTIONIDDESC = "azureSubscriptionId desc"
    AZURETENANTID = "azureTenantId"
    AZURETENANTIDDESC = "azureTenantId desc"
    CATEGORY = "category"
    CATEGORYDESC = "category desc"
    CLOSEDDATETIME = "closedDateTime"
    CLOSEDDATETIMEDESC = "closedDateTime desc"
    CLOUDAPPSTATES = "cloudAppStates"
    CLOUDAPPSTATESDESC = "cloudAppStates desc"
    COMMENTS = "comments"
    COMMENTSDESC = "comments desc"
    CONFIDENCE = "confidence"
    CONFIDENCEDESC = "confidence desc"
    CREATEDDATETIME = "createdDateTime"
    CREATEDDATETIMEDESC = "createdDateTime desc"
    DESCRIPTION = "description"
    DESCRIPTIONDESC = "description desc"
    DETECTIONIDS = "detectionIds"
    DETECTIONIDSDESC = "detectionIds desc"
    EVENTDATETIME = "eventDateTime"
    EVENTDATETIMEDESC = "eventDateTime desc"
    FEEDBACK = "feedback"
    FEEDBACKDESC = "feedback desc"
    FILESTATES = "fileStates"
    FILESTATESDESC = "fileStates desc"
    HISTORYSTATES = "historyStates"
    HISTORYSTATESDESC = "historyStates desc"
    HOSTSTATES = "hostStates"
    HOSTSTATESDESC = "hostStates desc"
    INCIDENTIDS = "incidentIds"
    INCIDENTIDSDESC = "incidentIds desc"
    LASTMODIFIEDDATETIME = "lastModifiedDateTime"
    LASTMODIFIEDDATETIMEDESC = "lastModifiedDateTime desc"
    MALWARESTATES = "malwareStates"
    MALWARESTATESDESC = "malwareStates desc"
    NETWORKCONNECTIONS = "networkConnections"
    NETWORKCONNECTIONSDESC = "networkConnections desc"
    PROCESSES = "processes"
    PROCESSESDESC = "processes desc"
    RECOMMENDEDACTIONS = "recommendedActions"
    RECOMMENDEDACTIONSDESC = "recommendedActions desc"
    REGISTRYKEYSTATES = "registryKeyStates"
    REGISTRYKEYSTATESDESC = "registryKeyStates desc"
    SECURITYRESOURCES = "securityResources"
    SECURITYRESOURCESDESC = "securityResources desc"
    SEVERITY = "severity"
    SEVERITYDESC = "severity desc"
    SOURCEMATERIALS = "sourceMaterials"
    SOURCEMATERIALSDESC = "sourceMaterials desc"
    STATUS = "status"
    STATUSDESC = "status desc"
    TAGS = "tags"
    TAGSDESC = "tags desc"
    TITLE = "title"
    TITLEDESC = "title desc"
    TRIGGERS = "triggers"
    TRIGGERSDESC = "triggers desc"
    USERSTATES = "userStates"
    USERSTATESDESC = "userStates desc"
    VENDORINFORMATION = "vendorInformation"
    VENDORINFORMATIONDESC = "vendorInformation desc"
    VULNERABILITYSTATES = "vulnerabilityStates"
    VULNERABILITYSTATESDESC = "vulnerabilityStates desc"

class Get6itemsitem(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ACTIVITYGROUPNAME = "activityGroupName"
    ASSIGNEDTO = "assignedTo"
    AZURESUBSCRIPTIONID = "azureSubscriptionId"
    AZURETENANTID = "azureTenantId"
    CATEGORY = "category"
    CLOSEDDATETIME = "closedDateTime"
    CLOUDAPPSTATES = "cloudAppStates"
    COMMENTS = "comments"
    CONFIDENCE = "confidence"
    CREATEDDATETIME = "createdDateTime"
    DESCRIPTION = "description"
    DETECTIONIDS = "detectionIds"
    EVENTDATETIME = "eventDateTime"
    FEEDBACK = "feedback"
    FILESTATES = "fileStates"
    HISTORYSTATES = "historyStates"
    HOSTSTATES = "hostStates"
    INCIDENTIDS = "incidentIds"
    LASTMODIFIEDDATETIME = "lastModifiedDateTime"
    MALWARESTATES = "malwareStates"
    NETWORKCONNECTIONS = "networkConnections"
    PROCESSES = "processes"
    RECOMMENDEDACTIONS = "recommendedActions"
    REGISTRYKEYSTATES = "registryKeyStates"
    SECURITYRESOURCES = "securityResources"
    SEVERITY = "severity"
    SOURCEMATERIALS = "sourceMaterials"
    STATUS = "status"
    TAGS = "tags"
    TITLE = "title"
    TRIGGERS = "triggers"
    USERSTATES = "userStates"
    VENDORINFORMATION = "vendorInformation"
    VULNERABILITYSTATES = "vulnerabilityStates"

class Microsoftgraphaccountstatus(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    UNKNOWN = "unknown"
    STAGED = "staged"
    ACTIVE = "active"
    SUSPENDED = "suspended"
    DELETED = "deleted"
    UNKNOWNFUTUREVALUE = "unknownFutureValue"

class Microsoftgraphalertfeedback(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    UNKNOWN = "unknown"
    TRUEPOSITIVE = "truePositive"
    FALSEPOSITIVE = "falsePositive"
    BENIGNPOSITIVE = "benignPositive"
    UNKNOWNFUTUREVALUE = "unknownFutureValue"

class Microsoftgraphalertseverity(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    UNKNOWN = "unknown"
    INFORMATIONAL = "informational"
    LOW = "low"
    MEDIUM = "medium"
    HIGH = "high"
    UNKNOWNFUTUREVALUE = "unknownFutureValue"

class Microsoftgraphalertstatus(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    UNKNOWN = "unknown"
    NEWALERT = "newAlert"
    INPROGRESS = "inProgress"
    RESOLVED = "resolved"
    DISMISSED = "dismissed"
    UNKNOWNFUTUREVALUE = "unknownFutureValue"

class Microsoftgraphapplicationpermissionsrequired(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    UNKNOWN = "unknown"
    ANONYMOUS = "anonymous"
    GUEST = "guest"
    USER = "user"
    ADMINISTRATOR = "administrator"
    SYSTEM = "system"
    UNKNOWNFUTUREVALUE = "unknownFutureValue"

class Microsoftgraphconnectiondirection(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    UNKNOWN = "unknown"
    INBOUND = "inbound"
    OUTBOUND = "outbound"
    UNKNOWNFUTUREVALUE = "unknownFutureValue"

class Microsoftgraphconnectionstatus(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    UNKNOWN = "unknown"
    ATTEMPTED = "attempted"
    SUCCEEDED = "succeeded"
    BLOCKED = "blocked"
    FAILED = "failed"
    UNKNOWNFUTUREVALUE = "unknownFutureValue"

class Microsoftgraphdiamondmodel(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    UNKNOWN = "unknown"
    ADVERSARY = "adversary"
    CAPABILITY = "capability"
    INFRASTRUCTURE = "infrastructure"
    VICTIM = "victim"
    UNKNOWNFUTUREVALUE = "unknownFutureValue"

class Microsoftgraphemailrole(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    UNKNOWN = "unknown"
    SENDER = "sender"
    RECIPIENT = "recipient"
    UNKNOWNFUTUREVALUE = "unknownFutureValue"

class Microsoftgraphfilehashtype(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    UNKNOWN = "unknown"
    SHA1 = "sha1"
    SHA256 = "sha256"
    MD5 = "md5"
    AUTHENTICODEHASH256 = "authenticodeHash256"
    LSHASH = "lsHash"
    CTPH = "ctph"
    UNKNOWNFUTUREVALUE = "unknownFutureValue"

class Microsoftgraphlogontype(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    UNKNOWN = "unknown"
    INTERACTIVE = "interactive"
    REMOTEINTERACTIVE = "remoteInteractive"
    NETWORK = "network"
    BATCH = "batch"
    SERVICE = "service"
    UNKNOWNFUTUREVALUE = "unknownFutureValue"

class Microsoftgraphoperationstatus(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    NOTSTARTED = "NotStarted"
    RUNNING = "Running"
    COMPLETED = "Completed"
    FAILED = "Failed"

class Microsoftgraphprocessintegritylevel(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    UNKNOWN = "unknown"
    UNTRUSTED = "untrusted"
    LOW = "low"
    MEDIUM = "medium"
    HIGH = "high"
    SYSTEM = "system"
    UNKNOWNFUTUREVALUE = "unknownFutureValue"

class Microsoftgraphregistryhive(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    UNKNOWN = "unknown"
    CURRENTCONFIG = "currentConfig"
    CURRENTUSER = "currentUser"
    LOCALMACHINESAM = "localMachineSam"
    LOCALMACHINESECURITY = "localMachineSecurity"
    LOCALMACHINESOFTWARE = "localMachineSoftware"
    LOCALMACHINESYSTEM = "localMachineSystem"
    USERSDEFAULT = "usersDefault"
    UNKNOWNFUTUREVALUE = "unknownFutureValue"

class Microsoftgraphregistryoperation(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    UNKNOWN = "unknown"
    CREATE = "create"
    MODIFY = "modify"
    DELETE = "delete"
    UNKNOWNFUTUREVALUE = "unknownFutureValue"

class Microsoftgraphregistryvaluetype(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    UNKNOWN = "unknown"
    BINARY = "binary"
    DWORD = "dword"
    DWORDLITTLEENDIAN = "dwordLittleEndian"
    DWORDBIGENDIAN = "dwordBigEndian"
    EXPANDSZ = "expandSz"
    LINK = "link"
    MULTISZ = "multiSz"
    NONE = "none"
    QWORD = "qword"
    QWORDLITTLEENDIAN = "qwordlittleEndian"
    SZ = "sz"
    UNKNOWNFUTUREVALUE = "unknownFutureValue"

class Microsoftgraphsecuritynetworkprotocol(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    IP = "ip"
    ICMP = "icmp"
    UNKNOWN = "unknown"
    IGMP = "igmp"
    GGP = "ggp"
    IPV4 = "ipv4"
    TCP = "tcp"
    PUP = "pup"
    UDP = "udp"
    IDP = "idp"
    IPV6 = "ipv6"
    IPV6ROUTINGHEADER = "ipv6RoutingHeader"
    IPV6FRAGMENTHEADER = "ipv6FragmentHeader"
    IPSECENCAPSULATINGSECURITYPAYLOAD = "ipSecEncapsulatingSecurityPayload"
    IPSECAUTHENTICATIONHEADER = "ipSecAuthenticationHeader"
    ICMPV6 = "icmpV6"
    IPV6NONEXTHEADER = "ipv6NoNextHeader"
    IPV6DESTINATIONOPTIONS = "ipv6DestinationOptions"
    ND = "nd"
    RAW = "raw"
    IPX = "ipx"
    SPX = "spx"
    SPXII = "spxII"
    UNKNOWNFUTUREVALUE = "unknownFutureValue"

class Microsoftgraphsecurityresourcetype(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    UNKNOWN = "unknown"
    ATTACKED = "attacked"
    RELATED = "related"
    UNKNOWNFUTUREVALUE = "unknownFutureValue"

class Microsoftgraphtiaction(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    UNKNOWN = "unknown"
    ALLOW = "allow"
    BLOCK = "block"
    ALERT = "alert"
    UNKNOWNFUTUREVALUE = "unknownFutureValue"

class Microsoftgraphtlplevel(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    UNKNOWN = "unknown"
    WHITE = "white"
    GREEN = "green"
    AMBER = "amber"
    RED = "red"
    UNKNOWNFUTUREVALUE = "unknownFutureValue"

class Microsoftgraphuseraccountsecuritytype(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    UNKNOWN = "unknown"
    STANDARD = "standard"
    POWER = "power"
    ADMINISTRATOR = "administrator"
    UNKNOWNFUTUREVALUE = "unknownFutureValue"
