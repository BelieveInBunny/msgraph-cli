# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from enum import Enum, EnumMeta
from six import with_metaclass

class _CaseInsensitiveEnumMeta(EnumMeta):
    def __getitem__(self, name):
        return super().__getitem__(name.upper())

    def __getattr__(cls, name):
        """Return the enum member matching `name`
        We use __getattr__ instead of descriptors or inserting into the enum
        class' __dict__ in order to support `name` and `value` being both
        properties for enum members (which live in the class' __dict__) and
        enum members themselves.
        """
        try:
            return cls._member_map_[name.upper()]
        except KeyError:
            raise AttributeError(name)


class Enum25(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ACTIVITY_GROUP_NAME = "activityGroupName"
    ASSIGNED_TO = "assignedTo"
    AZURE_SUBSCRIPTION_ID = "azureSubscriptionId"
    AZURE_TENANT_ID = "azureTenantId"
    CATEGORY = "category"
    CLOSED_DATE_TIME = "closedDateTime"
    CLOUD_APP_STATES = "cloudAppStates"
    COMMENTS = "comments"
    CONFIDENCE = "confidence"
    CREATED_DATE_TIME = "createdDateTime"
    DESCRIPTION = "description"
    DETECTION_IDS = "detectionIds"
    EVENT_DATE_TIME = "eventDateTime"
    FEEDBACK = "feedback"
    FILE_STATES = "fileStates"
    HISTORY_STATES = "historyStates"
    HOST_STATES = "hostStates"
    INCIDENT_IDS = "incidentIds"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    MALWARE_STATES = "malwareStates"
    NETWORK_CONNECTIONS = "networkConnections"
    PROCESSES = "processes"
    RECOMMENDED_ACTIONS = "recommendedActions"
    REGISTRY_KEY_STATES = "registryKeyStates"
    SECURITY_RESOURCES = "securityResources"
    SEVERITY = "severity"
    SOURCE_MATERIALS = "sourceMaterials"
    STATUS = "status"
    TAGS = "tags"
    TITLE = "title"
    TRIGGERS = "triggers"
    USER_STATES = "userStates"
    VENDOR_INFORMATION = "vendorInformation"
    VULNERABILITY_STATES = "vulnerabilityStates"

class Enum26(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    AZURE_SUBSCRIPTION_ID = "azureSubscriptionId"
    AZURE_SUBSCRIPTION_ID_DESC = "azureSubscriptionId desc"
    AZURE_TENANT_ID = "azureTenantId"
    AZURE_TENANT_ID_DESC = "azureTenantId desc"
    CREATED_DATE_TIME = "createdDateTime"
    CREATED_DATE_TIME_DESC = "createdDateTime desc"
    DEPLOYMENT_PACKAGE_URL = "deploymentPackageUrl"
    DEPLOYMENT_PACKAGE_URL_DESC = "deploymentPackageUrl desc"
    DESTINATION_SERVICE_NAME = "destinationServiceName"
    DESTINATION_SERVICE_NAME_DESC = "destinationServiceName desc"
    IS_SIGNED = "isSigned"
    IS_SIGNED_DESC = "isSigned desc"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    LAST_MODIFIED_DATE_TIME_DESC = "lastModifiedDateTime desc"
    MANIFEST = "manifest"
    MANIFEST_DESC = "manifest desc"
    NAME = "name"
    NAME_DESC = "name desc"
    PERMISSIONS_REQUIRED = "permissionsRequired"
    PERMISSIONS_REQUIRED_DESC = "permissionsRequired desc"
    PLATFORM = "platform"
    PLATFORM_DESC = "platform desc"
    POLICY_NAME = "policyName"
    POLICY_NAME_DESC = "policyName desc"
    PUBLISHER = "publisher"
    PUBLISHER_DESC = "publisher desc"
    RISK_SCORE = "riskScore"
    RISK_SCORE_DESC = "riskScore desc"
    TAGS = "tags"
    TAGS_DESC = "tags desc"
    TYPE = "type"
    TYPE_DESC = "type desc"
    VENDOR_INFORMATION = "vendorInformation"
    VENDOR_INFORMATION_DESC = "vendorInformation desc"

class Enum27(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    AZURE_SUBSCRIPTION_ID = "azureSubscriptionId"
    AZURE_TENANT_ID = "azureTenantId"
    CREATED_DATE_TIME = "createdDateTime"
    DEPLOYMENT_PACKAGE_URL = "deploymentPackageUrl"
    DESTINATION_SERVICE_NAME = "destinationServiceName"
    IS_SIGNED = "isSigned"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    MANIFEST = "manifest"
    NAME = "name"
    PERMISSIONS_REQUIRED = "permissionsRequired"
    PLATFORM = "platform"
    POLICY_NAME = "policyName"
    PUBLISHER = "publisher"
    RISK_SCORE = "riskScore"
    TAGS = "tags"
    TYPE = "type"
    VENDOR_INFORMATION = "vendorInformation"

class Enum28(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    AZURE_SUBSCRIPTION_ID = "azureSubscriptionId"
    AZURE_TENANT_ID = "azureTenantId"
    CREATED_DATE_TIME = "createdDateTime"
    DEPLOYMENT_PACKAGE_URL = "deploymentPackageUrl"
    DESTINATION_SERVICE_NAME = "destinationServiceName"
    IS_SIGNED = "isSigned"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    MANIFEST = "manifest"
    NAME = "name"
    PERMISSIONS_REQUIRED = "permissionsRequired"
    PLATFORM = "platform"
    POLICY_NAME = "policyName"
    PUBLISHER = "publisher"
    RISK_SCORE = "riskScore"
    TAGS = "tags"
    TYPE = "type"
    VENDOR_INFORMATION = "vendorInformation"

class Enum29(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    ACTIVITY_GROUP_NAMES = "activityGroupNames"
    ACTIVITY_GROUP_NAMES_DESC = "activityGroupNames desc"
    AZURE_SUBSCRIPTION_ID = "azureSubscriptionId"
    AZURE_SUBSCRIPTION_ID_DESC = "azureSubscriptionId desc"
    AZURE_TENANT_ID = "azureTenantId"
    AZURE_TENANT_ID_DESC = "azureTenantId desc"
    COUNT_HITS = "countHits"
    COUNT_HITS_DESC = "countHits desc"
    COUNT_IN_ORG = "countInOrg"
    COUNT_IN_ORG_DESC = "countInOrg desc"
    DOMAIN_CATEGORIES = "domainCategories"
    DOMAIN_CATEGORIES_DESC = "domainCategories desc"
    DOMAIN_REGISTERED_DATE_TIME = "domainRegisteredDateTime"
    DOMAIN_REGISTERED_DATE_TIME_DESC = "domainRegisteredDateTime desc"
    FIRST_SEEN_DATE_TIME = "firstSeenDateTime"
    FIRST_SEEN_DATE_TIME_DESC = "firstSeenDateTime desc"
    LAST_SEEN_DATE_TIME = "lastSeenDateTime"
    LAST_SEEN_DATE_TIME_DESC = "lastSeenDateTime desc"
    NAME = "name"
    NAME_DESC = "name desc"
    REGISTRANT = "registrant"
    REGISTRANT_DESC = "registrant desc"
    RISK_SCORE = "riskScore"
    RISK_SCORE_DESC = "riskScore desc"
    TAGS = "tags"
    TAGS_DESC = "tags desc"
    VENDOR_INFORMATION = "vendorInformation"
    VENDOR_INFORMATION_DESC = "vendorInformation desc"

class Enum30(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ACTIVITY_GROUP_NAMES = "activityGroupNames"
    AZURE_SUBSCRIPTION_ID = "azureSubscriptionId"
    AZURE_TENANT_ID = "azureTenantId"
    COUNT_HITS = "countHits"
    COUNT_IN_ORG = "countInOrg"
    DOMAIN_CATEGORIES = "domainCategories"
    DOMAIN_REGISTERED_DATE_TIME = "domainRegisteredDateTime"
    FIRST_SEEN_DATE_TIME = "firstSeenDateTime"
    LAST_SEEN_DATE_TIME = "lastSeenDateTime"
    NAME = "name"
    REGISTRANT = "registrant"
    RISK_SCORE = "riskScore"
    TAGS = "tags"
    VENDOR_INFORMATION = "vendorInformation"

class Enum31(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ACTIVITY_GROUP_NAMES = "activityGroupNames"
    AZURE_SUBSCRIPTION_ID = "azureSubscriptionId"
    AZURE_TENANT_ID = "azureTenantId"
    COUNT_HITS = "countHits"
    COUNT_IN_ORG = "countInOrg"
    DOMAIN_CATEGORIES = "domainCategories"
    DOMAIN_REGISTERED_DATE_TIME = "domainRegisteredDateTime"
    FIRST_SEEN_DATE_TIME = "firstSeenDateTime"
    LAST_SEEN_DATE_TIME = "lastSeenDateTime"
    NAME = "name"
    REGISTRANT = "registrant"
    RISK_SCORE = "riskScore"
    TAGS = "tags"
    VENDOR_INFORMATION = "vendorInformation"

class Enum32(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    ACTIVITY_GROUP_NAMES = "activityGroupNames"
    ACTIVITY_GROUP_NAMES_DESC = "activityGroupNames desc"
    AZURE_SUBSCRIPTION_ID = "azureSubscriptionId"
    AZURE_SUBSCRIPTION_ID_DESC = "azureSubscriptionId desc"
    AZURE_TENANT_ID = "azureTenantId"
    AZURE_TENANT_ID_DESC = "azureTenantId desc"
    CERTIFICATE_THUMBPRINT = "certificateThumbprint"
    CERTIFICATE_THUMBPRINT_DESC = "certificateThumbprint desc"
    EXTENSIONS = "extensions"
    EXTENSIONS_DESC = "extensions desc"
    FILE_TYPE = "fileType"
    FILE_TYPE_DESC = "fileType desc"
    FIRST_SEEN_DATE_TIME = "firstSeenDateTime"
    FIRST_SEEN_DATE_TIME_DESC = "firstSeenDateTime desc"
    HASHES = "hashes"
    HASHES_DESC = "hashes desc"
    LAST_SEEN_DATE_TIME = "lastSeenDateTime"
    LAST_SEEN_DATE_TIME_DESC = "lastSeenDateTime desc"
    MALWARE_STATES = "malwareStates"
    MALWARE_STATES_DESC = "malwareStates desc"
    NAMES = "names"
    NAMES_DESC = "names desc"
    RISK_SCORE = "riskScore"
    RISK_SCORE_DESC = "riskScore desc"
    SIZE = "size"
    SIZE_DESC = "size desc"
    TAGS = "tags"
    TAGS_DESC = "tags desc"
    VENDOR_INFORMATION = "vendorInformation"
    VENDOR_INFORMATION_DESC = "vendorInformation desc"
    VULNERABILITY_STATES = "vulnerabilityStates"
    VULNERABILITY_STATES_DESC = "vulnerabilityStates desc"

class Enum33(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ACTIVITY_GROUP_NAMES = "activityGroupNames"
    AZURE_SUBSCRIPTION_ID = "azureSubscriptionId"
    AZURE_TENANT_ID = "azureTenantId"
    CERTIFICATE_THUMBPRINT = "certificateThumbprint"
    EXTENSIONS = "extensions"
    FILE_TYPE = "fileType"
    FIRST_SEEN_DATE_TIME = "firstSeenDateTime"
    HASHES = "hashes"
    LAST_SEEN_DATE_TIME = "lastSeenDateTime"
    MALWARE_STATES = "malwareStates"
    NAMES = "names"
    RISK_SCORE = "riskScore"
    SIZE = "size"
    TAGS = "tags"
    VENDOR_INFORMATION = "vendorInformation"
    VULNERABILITY_STATES = "vulnerabilityStates"

class Enum34(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ACTIVITY_GROUP_NAMES = "activityGroupNames"
    AZURE_SUBSCRIPTION_ID = "azureSubscriptionId"
    AZURE_TENANT_ID = "azureTenantId"
    CERTIFICATE_THUMBPRINT = "certificateThumbprint"
    EXTENSIONS = "extensions"
    FILE_TYPE = "fileType"
    FIRST_SEEN_DATE_TIME = "firstSeenDateTime"
    HASHES = "hashes"
    LAST_SEEN_DATE_TIME = "lastSeenDateTime"
    MALWARE_STATES = "malwareStates"
    NAMES = "names"
    RISK_SCORE = "riskScore"
    SIZE = "size"
    TAGS = "tags"
    VENDOR_INFORMATION = "vendorInformation"
    VULNERABILITY_STATES = "vulnerabilityStates"

class Enum35(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    AZURE_SUBSCRIPTION_ID = "azureSubscriptionId"
    AZURE_SUBSCRIPTION_ID_DESC = "azureSubscriptionId desc"
    AZURE_TENANT_ID = "azureTenantId"
    AZURE_TENANT_ID_DESC = "azureTenantId desc"
    FIRST_SEEN_DATE_TIME = "firstSeenDateTime"
    FIRST_SEEN_DATE_TIME_DESC = "firstSeenDateTime desc"
    FQDN = "fqdn"
    FQDN_DESC = "fqdn desc"
    IS_AZURE_AD_JOINED = "isAzureAdJoined"
    IS_AZURE_AD_JOINED_DESC = "isAzureAdJoined desc"
    IS_AZURE_AD_REGISTERED = "isAzureAdRegistered"
    IS_AZURE_AD_REGISTERED_DESC = "isAzureAdRegistered desc"
    IS_HYBRID_AZURE_DOMAIN_JOINED = "isHybridAzureDomainJoined"
    IS_HYBRID_AZURE_DOMAIN_JOINED_DESC = "isHybridAzureDomainJoined desc"
    LAST_SEEN_DATE_TIME = "lastSeenDateTime"
    LAST_SEEN_DATE_TIME_DESC = "lastSeenDateTime desc"
    LOGON_USERS = "logonUsers"
    LOGON_USERS_DESC = "logonUsers desc"
    NET_BIOS_NAME = "netBiosName"
    NET_BIOS_NAME_DESC = "netBiosName desc"
    NETWORK_INTERFACES = "networkInterfaces"
    NETWORK_INTERFACES_DESC = "networkInterfaces desc"
    OS = "os"
    OS_DESC = "os desc"
    OS_VERSION = "osVersion"
    OS_VERSION_DESC = "osVersion desc"
    PARENT_HOST = "parentHost"
    PARENT_HOST_DESC = "parentHost desc"
    RELATED_HOST_IDS = "relatedHostIds"
    RELATED_HOST_IDS_DESC = "relatedHostIds desc"
    RISK_SCORE = "riskScore"
    RISK_SCORE_DESC = "riskScore desc"
    TAGS = "tags"
    TAGS_DESC = "tags desc"
    VENDOR_INFORMATION = "vendorInformation"
    VENDOR_INFORMATION_DESC = "vendorInformation desc"

class Enum36(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    AZURE_SUBSCRIPTION_ID = "azureSubscriptionId"
    AZURE_TENANT_ID = "azureTenantId"
    FIRST_SEEN_DATE_TIME = "firstSeenDateTime"
    FQDN = "fqdn"
    IS_AZURE_AD_JOINED = "isAzureAdJoined"
    IS_AZURE_AD_REGISTERED = "isAzureAdRegistered"
    IS_HYBRID_AZURE_DOMAIN_JOINED = "isHybridAzureDomainJoined"
    LAST_SEEN_DATE_TIME = "lastSeenDateTime"
    LOGON_USERS = "logonUsers"
    NET_BIOS_NAME = "netBiosName"
    NETWORK_INTERFACES = "networkInterfaces"
    OS = "os"
    OS_VERSION = "osVersion"
    PARENT_HOST = "parentHost"
    RELATED_HOST_IDS = "relatedHostIds"
    RISK_SCORE = "riskScore"
    TAGS = "tags"
    VENDOR_INFORMATION = "vendorInformation"

class Enum37(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    AZURE_SUBSCRIPTION_ID = "azureSubscriptionId"
    AZURE_TENANT_ID = "azureTenantId"
    FIRST_SEEN_DATE_TIME = "firstSeenDateTime"
    FQDN = "fqdn"
    IS_AZURE_AD_JOINED = "isAzureAdJoined"
    IS_AZURE_AD_REGISTERED = "isAzureAdRegistered"
    IS_HYBRID_AZURE_DOMAIN_JOINED = "isHybridAzureDomainJoined"
    LAST_SEEN_DATE_TIME = "lastSeenDateTime"
    LOGON_USERS = "logonUsers"
    NET_BIOS_NAME = "netBiosName"
    NETWORK_INTERFACES = "networkInterfaces"
    OS = "os"
    OS_VERSION = "osVersion"
    PARENT_HOST = "parentHost"
    RELATED_HOST_IDS = "relatedHostIds"
    RISK_SCORE = "riskScore"
    TAGS = "tags"
    VENDOR_INFORMATION = "vendorInformation"

class Enum38(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    ACTIVITY_GROUP_NAMES = "activityGroupNames"
    ACTIVITY_GROUP_NAMES_DESC = "activityGroupNames desc"
    ADDRESS = "address"
    ADDRESS_DESC = "address desc"
    AZURE_SUBSCRIPTION_ID = "azureSubscriptionId"
    AZURE_SUBSCRIPTION_ID_DESC = "azureSubscriptionId desc"
    AZURE_TENANT_ID = "azureTenantId"
    AZURE_TENANT_ID_DESC = "azureTenantId desc"
    COUNT_HITS = "countHits"
    COUNT_HITS_DESC = "countHits desc"
    COUNT_HOSTS = "countHosts"
    COUNT_HOSTS_DESC = "countHosts desc"
    FIRST_SEEN_DATE_TIME = "firstSeenDateTime"
    FIRST_SEEN_DATE_TIME_DESC = "firstSeenDateTime desc"
    IP_CATEGORIES = "ipCategories"
    IP_CATEGORIES_DESC = "ipCategories desc"
    IP_REFERENCE_DATA = "ipReferenceData"
    IP_REFERENCE_DATA_DESC = "ipReferenceData desc"
    LAST_SEEN_DATE_TIME = "lastSeenDateTime"
    LAST_SEEN_DATE_TIME_DESC = "lastSeenDateTime desc"
    RISK_SCORE = "riskScore"
    RISK_SCORE_DESC = "riskScore desc"
    TAGS = "tags"
    TAGS_DESC = "tags desc"
    VENDOR_INFORMATION = "vendorInformation"
    VENDOR_INFORMATION_DESC = "vendorInformation desc"

class Enum39(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ACTIVITY_GROUP_NAMES = "activityGroupNames"
    ADDRESS = "address"
    AZURE_SUBSCRIPTION_ID = "azureSubscriptionId"
    AZURE_TENANT_ID = "azureTenantId"
    COUNT_HITS = "countHits"
    COUNT_HOSTS = "countHosts"
    FIRST_SEEN_DATE_TIME = "firstSeenDateTime"
    IP_CATEGORIES = "ipCategories"
    IP_REFERENCE_DATA = "ipReferenceData"
    LAST_SEEN_DATE_TIME = "lastSeenDateTime"
    RISK_SCORE = "riskScore"
    TAGS = "tags"
    VENDOR_INFORMATION = "vendorInformation"

class Enum40(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ACTIVITY_GROUP_NAMES = "activityGroupNames"
    ADDRESS = "address"
    AZURE_SUBSCRIPTION_ID = "azureSubscriptionId"
    AZURE_TENANT_ID = "azureTenantId"
    COUNT_HITS = "countHits"
    COUNT_HOSTS = "countHosts"
    FIRST_SEEN_DATE_TIME = "firstSeenDateTime"
    IP_CATEGORIES = "ipCategories"
    IP_REFERENCE_DATA = "ipReferenceData"
    LAST_SEEN_DATE_TIME = "lastSeenDateTime"
    RISK_SCORE = "riskScore"
    TAGS = "tags"
    VENDOR_INFORMATION = "vendorInformation"

class Enum41(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    AZURE_TENANT_ID = "azureTenantId"
    AZURE_TENANT_ID_DESC = "azureTenantId desc"
    ENABLED = "enabled"
    ENABLED_DESC = "enabled desc"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    LAST_MODIFIED_DATE_TIME_DESC = "lastModifiedDateTime desc"
    PROVIDER = "provider"
    PROVIDER_DESC = "provider desc"
    VENDOR = "vendor"
    VENDOR_DESC = "vendor desc"

class Enum42(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    AZURE_TENANT_ID = "azureTenantId"
    ENABLED = "enabled"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    PROVIDER = "provider"
    VENDOR = "vendor"

class Enum43(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    AZURE_TENANT_ID = "azureTenantId"
    ENABLED = "enabled"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    PROVIDER = "provider"
    VENDOR = "vendor"

class Enum44(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    ACTION_TYPE = "actionType"
    ACTION_TYPE_DESC = "actionType desc"
    ACTION_URL = "actionUrl"
    ACTION_URL_DESC = "actionUrl desc"
    AZURE_TENANT_ID = "azureTenantId"
    AZURE_TENANT_ID_DESC = "azureTenantId desc"
    COMPLIANCE_INFORMATION = "complianceInformation"
    COMPLIANCE_INFORMATION_DESC = "complianceInformation desc"
    CONTROL_CATEGORY = "controlCategory"
    CONTROL_CATEGORY_DESC = "controlCategory desc"
    CONTROL_STATE_UPDATES = "controlStateUpdates"
    CONTROL_STATE_UPDATES_DESC = "controlStateUpdates desc"
    DEPRECATED = "deprecated"
    DEPRECATED_DESC = "deprecated desc"
    IMPLEMENTATION_COST = "implementationCost"
    IMPLEMENTATION_COST_DESC = "implementationCost desc"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    LAST_MODIFIED_DATE_TIME_DESC = "lastModifiedDateTime desc"
    MAX_SCORE = "maxScore"
    MAX_SCORE_DESC = "maxScore desc"
    RANK = "rank"
    RANK_DESC = "rank desc"
    REMEDIATION = "remediation"
    REMEDIATION_DESC = "remediation desc"
    REMEDIATION_IMPACT = "remediationImpact"
    REMEDIATION_IMPACT_DESC = "remediationImpact desc"
    SERVICE = "service"
    SERVICE_DESC = "service desc"
    THREATS = "threats"
    THREATS_DESC = "threats desc"
    TIER = "tier"
    TIER_DESC = "tier desc"
    TITLE = "title"
    TITLE_DESC = "title desc"
    USER_IMPACT = "userImpact"
    USER_IMPACT_DESC = "userImpact desc"
    VENDOR_INFORMATION = "vendorInformation"
    VENDOR_INFORMATION_DESC = "vendorInformation desc"

class Enum45(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ACTION_TYPE = "actionType"
    ACTION_URL = "actionUrl"
    AZURE_TENANT_ID = "azureTenantId"
    COMPLIANCE_INFORMATION = "complianceInformation"
    CONTROL_CATEGORY = "controlCategory"
    CONTROL_STATE_UPDATES = "controlStateUpdates"
    DEPRECATED = "deprecated"
    IMPLEMENTATION_COST = "implementationCost"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    MAX_SCORE = "maxScore"
    RANK = "rank"
    REMEDIATION = "remediation"
    REMEDIATION_IMPACT = "remediationImpact"
    SERVICE = "service"
    THREATS = "threats"
    TIER = "tier"
    TITLE = "title"
    USER_IMPACT = "userImpact"
    VENDOR_INFORMATION = "vendorInformation"

class Enum46(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ACTION_TYPE = "actionType"
    ACTION_URL = "actionUrl"
    AZURE_TENANT_ID = "azureTenantId"
    COMPLIANCE_INFORMATION = "complianceInformation"
    CONTROL_CATEGORY = "controlCategory"
    CONTROL_STATE_UPDATES = "controlStateUpdates"
    DEPRECATED = "deprecated"
    IMPLEMENTATION_COST = "implementationCost"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    MAX_SCORE = "maxScore"
    RANK = "rank"
    REMEDIATION = "remediation"
    REMEDIATION_IMPACT = "remediationImpact"
    SERVICE = "service"
    THREATS = "threats"
    TIER = "tier"
    TITLE = "title"
    USER_IMPACT = "userImpact"
    VENDOR_INFORMATION = "vendorInformation"

class Enum47(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    ACTIVE_USER_COUNT = "activeUserCount"
    ACTIVE_USER_COUNT_DESC = "activeUserCount desc"
    AVERAGE_COMPARATIVE_SCORES = "averageComparativeScores"
    AVERAGE_COMPARATIVE_SCORES_DESC = "averageComparativeScores desc"
    AZURE_TENANT_ID = "azureTenantId"
    AZURE_TENANT_ID_DESC = "azureTenantId desc"
    CONTROL_SCORES = "controlScores"
    CONTROL_SCORES_DESC = "controlScores desc"
    CREATED_DATE_TIME = "createdDateTime"
    CREATED_DATE_TIME_DESC = "createdDateTime desc"
    CURRENT_SCORE = "currentScore"
    CURRENT_SCORE_DESC = "currentScore desc"
    ENABLED_SERVICES = "enabledServices"
    ENABLED_SERVICES_DESC = "enabledServices desc"
    LICENSED_USER_COUNT = "licensedUserCount"
    LICENSED_USER_COUNT_DESC = "licensedUserCount desc"
    MAX_SCORE = "maxScore"
    MAX_SCORE_DESC = "maxScore desc"
    VENDOR_INFORMATION = "vendorInformation"
    VENDOR_INFORMATION_DESC = "vendorInformation desc"

class Enum48(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ACTIVE_USER_COUNT = "activeUserCount"
    AVERAGE_COMPARATIVE_SCORES = "averageComparativeScores"
    AZURE_TENANT_ID = "azureTenantId"
    CONTROL_SCORES = "controlScores"
    CREATED_DATE_TIME = "createdDateTime"
    CURRENT_SCORE = "currentScore"
    ENABLED_SERVICES = "enabledServices"
    LICENSED_USER_COUNT = "licensedUserCount"
    MAX_SCORE = "maxScore"
    VENDOR_INFORMATION = "vendorInformation"

class Enum49(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ACTIVE_USER_COUNT = "activeUserCount"
    AVERAGE_COMPARATIVE_SCORES = "averageComparativeScores"
    AZURE_TENANT_ID = "azureTenantId"
    CONTROL_SCORES = "controlScores"
    CREATED_DATE_TIME = "createdDateTime"
    CURRENT_SCORE = "currentScore"
    ENABLED_SERVICES = "enabledServices"
    LICENSED_USER_COUNT = "licensedUserCount"
    MAX_SCORE = "maxScore"
    VENDOR_INFORMATION = "vendorInformation"

class Enum50(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    ACTION_REASON = "actionReason"
    ACTION_REASON_DESC = "actionReason desc"
    APP_ID = "appId"
    APP_ID_DESC = "appId desc"
    AZURE_TENANT_ID = "azureTenantId"
    AZURE_TENANT_ID_DESC = "azureTenantId desc"
    CLIENT_CONTEXT = "clientContext"
    CLIENT_CONTEXT_DESC = "clientContext desc"
    COMPLETED_DATE_TIME = "completedDateTime"
    COMPLETED_DATE_TIME_DESC = "completedDateTime desc"
    CREATED_DATE_TIME = "createdDateTime"
    CREATED_DATE_TIME_DESC = "createdDateTime desc"
    ERROR_INFO = "errorInfo"
    ERROR_INFO_DESC = "errorInfo desc"
    LAST_ACTION_DATE_TIME = "lastActionDateTime"
    LAST_ACTION_DATE_TIME_DESC = "lastActionDateTime desc"
    NAME = "name"
    NAME_DESC = "name desc"
    PARAMETERS = "parameters"
    PARAMETERS_DESC = "parameters desc"
    STATES = "states"
    STATES_DESC = "states desc"
    STATUS = "status"
    STATUS_DESC = "status desc"
    USER = "user"
    USER_DESC = "user desc"
    VENDOR_INFORMATION = "vendorInformation"
    VENDOR_INFORMATION_DESC = "vendorInformation desc"

class Enum51(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ACTION_REASON = "actionReason"
    APP_ID = "appId"
    AZURE_TENANT_ID = "azureTenantId"
    CLIENT_CONTEXT = "clientContext"
    COMPLETED_DATE_TIME = "completedDateTime"
    CREATED_DATE_TIME = "createdDateTime"
    ERROR_INFO = "errorInfo"
    LAST_ACTION_DATE_TIME = "lastActionDateTime"
    NAME = "name"
    PARAMETERS = "parameters"
    STATES = "states"
    STATUS = "status"
    USER = "user"
    VENDOR_INFORMATION = "vendorInformation"

class Enum52(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ACTION_REASON = "actionReason"
    APP_ID = "appId"
    AZURE_TENANT_ID = "azureTenantId"
    CLIENT_CONTEXT = "clientContext"
    COMPLETED_DATE_TIME = "completedDateTime"
    CREATED_DATE_TIME = "createdDateTime"
    ERROR_INFO = "errorInfo"
    LAST_ACTION_DATE_TIME = "lastActionDateTime"
    NAME = "name"
    PARAMETERS = "parameters"
    STATES = "states"
    STATUS = "status"
    USER = "user"
    VENDOR_INFORMATION = "vendorInformation"

class Enum53(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    ACTION = "action"
    ACTION_DESC = "action desc"
    ACTIVITY_GROUP_NAMES = "activityGroupNames"
    ACTIVITY_GROUP_NAMES_DESC = "activityGroupNames desc"
    ADDITIONAL_INFORMATION = "additionalInformation"
    ADDITIONAL_INFORMATION_DESC = "additionalInformation desc"
    AZURE_TENANT_ID = "azureTenantId"
    AZURE_TENANT_ID_DESC = "azureTenantId desc"
    CONFIDENCE = "confidence"
    CONFIDENCE_DESC = "confidence desc"
    DESCRIPTION = "description"
    DESCRIPTION_DESC = "description desc"
    DIAMOND_MODEL = "diamondModel"
    DIAMOND_MODEL_DESC = "diamondModel desc"
    DOMAIN_NAME = "domainName"
    DOMAIN_NAME_DESC = "domainName desc"
    EMAIL_ENCODING = "emailEncoding"
    EMAIL_ENCODING_DESC = "emailEncoding desc"
    EMAIL_LANGUAGE = "emailLanguage"
    EMAIL_LANGUAGE_DESC = "emailLanguage desc"
    EMAIL_RECIPIENT = "emailRecipient"
    EMAIL_RECIPIENT_DESC = "emailRecipient desc"
    EMAIL_SENDER_ADDRESS = "emailSenderAddress"
    EMAIL_SENDER_ADDRESS_DESC = "emailSenderAddress desc"
    EMAIL_SENDER_NAME = "emailSenderName"
    EMAIL_SENDER_NAME_DESC = "emailSenderName desc"
    EMAIL_SOURCE_DOMAIN = "emailSourceDomain"
    EMAIL_SOURCE_DOMAIN_DESC = "emailSourceDomain desc"
    EMAIL_SOURCE_IP_ADDRESS = "emailSourceIpAddress"
    EMAIL_SOURCE_IP_ADDRESS_DESC = "emailSourceIpAddress desc"
    EMAIL_SUBJECT = "emailSubject"
    EMAIL_SUBJECT_DESC = "emailSubject desc"
    EMAIL_X_MAILER = "emailXMailer"
    EMAIL_X_MAILER_DESC = "emailXMailer desc"
    EXPIRATION_DATE_TIME = "expirationDateTime"
    EXPIRATION_DATE_TIME_DESC = "expirationDateTime desc"
    EXTERNAL_ID = "externalId"
    EXTERNAL_ID_DESC = "externalId desc"
    FILE_COMPILE_DATE_TIME = "fileCompileDateTime"
    FILE_COMPILE_DATE_TIME_DESC = "fileCompileDateTime desc"
    FILE_CREATED_DATE_TIME = "fileCreatedDateTime"
    FILE_CREATED_DATE_TIME_DESC = "fileCreatedDateTime desc"
    FILE_HASH_TYPE = "fileHashType"
    FILE_HASH_TYPE_DESC = "fileHashType desc"
    FILE_HASH_VALUE = "fileHashValue"
    FILE_HASH_VALUE_DESC = "fileHashValue desc"
    FILE_MUTEX_NAME = "fileMutexName"
    FILE_MUTEX_NAME_DESC = "fileMutexName desc"
    FILE_NAME = "fileName"
    FILE_NAME_DESC = "fileName desc"
    FILE_PACKER = "filePacker"
    FILE_PACKER_DESC = "filePacker desc"
    FILE_PATH = "filePath"
    FILE_PATH_DESC = "filePath desc"
    FILE_SIZE = "fileSize"
    FILE_SIZE_DESC = "fileSize desc"
    FILE_TYPE = "fileType"
    FILE_TYPE_DESC = "fileType desc"
    INGESTED_DATE_TIME = "ingestedDateTime"
    INGESTED_DATE_TIME_DESC = "ingestedDateTime desc"
    IS_ACTIVE = "isActive"
    IS_ACTIVE_DESC = "isActive desc"
    KILL_CHAIN = "killChain"
    KILL_CHAIN_DESC = "killChain desc"
    KNOWN_FALSE_POSITIVES = "knownFalsePositives"
    KNOWN_FALSE_POSITIVES_DESC = "knownFalsePositives desc"
    LAST_REPORTED_DATE_TIME = "lastReportedDateTime"
    LAST_REPORTED_DATE_TIME_DESC = "lastReportedDateTime desc"
    MALWARE_FAMILY_NAMES = "malwareFamilyNames"
    MALWARE_FAMILY_NAMES_DESC = "malwareFamilyNames desc"
    NETWORK_CIDR_BLOCK = "networkCidrBlock"
    NETWORK_CIDR_BLOCK_DESC = "networkCidrBlock desc"
    NETWORK_DESTINATION_ASN = "networkDestinationAsn"
    NETWORK_DESTINATION_ASN_DESC = "networkDestinationAsn desc"
    NETWORK_DESTINATION_CIDR_BLOCK = "networkDestinationCidrBlock"
    NETWORK_DESTINATION_CIDR_BLOCK_DESC = "networkDestinationCidrBlock desc"
    NETWORK_DESTINATION_I_PV4 = "networkDestinationIPv4"
    NETWORK_DESTINATION_I_PV4_DESC = "networkDestinationIPv4 desc"
    NETWORK_DESTINATION_I_PV6 = "networkDestinationIPv6"
    NETWORK_DESTINATION_I_PV6_DESC = "networkDestinationIPv6 desc"
    NETWORK_DESTINATION_PORT = "networkDestinationPort"
    NETWORK_DESTINATION_PORT_DESC = "networkDestinationPort desc"
    NETWORK_I_PV4 = "networkIPv4"
    NETWORK_I_PV4_DESC = "networkIPv4 desc"
    NETWORK_I_PV6 = "networkIPv6"
    NETWORK_I_PV6_DESC = "networkIPv6 desc"
    NETWORK_PORT = "networkPort"
    NETWORK_PORT_DESC = "networkPort desc"
    NETWORK_PROTOCOL = "networkProtocol"
    NETWORK_PROTOCOL_DESC = "networkProtocol desc"
    NETWORK_SOURCE_ASN = "networkSourceAsn"
    NETWORK_SOURCE_ASN_DESC = "networkSourceAsn desc"
    NETWORK_SOURCE_CIDR_BLOCK = "networkSourceCidrBlock"
    NETWORK_SOURCE_CIDR_BLOCK_DESC = "networkSourceCidrBlock desc"
    NETWORK_SOURCE_I_PV4 = "networkSourceIPv4"
    NETWORK_SOURCE_I_PV4_DESC = "networkSourceIPv4 desc"
    NETWORK_SOURCE_I_PV6 = "networkSourceIPv6"
    NETWORK_SOURCE_I_PV6_DESC = "networkSourceIPv6 desc"
    NETWORK_SOURCE_PORT = "networkSourcePort"
    NETWORK_SOURCE_PORT_DESC = "networkSourcePort desc"
    PASSIVE_ONLY = "passiveOnly"
    PASSIVE_ONLY_DESC = "passiveOnly desc"
    SEVERITY = "severity"
    SEVERITY_DESC = "severity desc"
    TAGS = "tags"
    TAGS_DESC = "tags desc"
    TARGET_PRODUCT = "targetProduct"
    TARGET_PRODUCT_DESC = "targetProduct desc"
    THREAT_TYPE = "threatType"
    THREAT_TYPE_DESC = "threatType desc"
    TLP_LEVEL = "tlpLevel"
    TLP_LEVEL_DESC = "tlpLevel desc"
    URL = "url"
    URL_DESC = "url desc"
    USER_AGENT = "userAgent"
    USER_AGENT_DESC = "userAgent desc"

class Enum54(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ACTION = "action"
    ACTIVITY_GROUP_NAMES = "activityGroupNames"
    ADDITIONAL_INFORMATION = "additionalInformation"
    AZURE_TENANT_ID = "azureTenantId"
    CONFIDENCE = "confidence"
    DESCRIPTION = "description"
    DIAMOND_MODEL = "diamondModel"
    DOMAIN_NAME = "domainName"
    EMAIL_ENCODING = "emailEncoding"
    EMAIL_LANGUAGE = "emailLanguage"
    EMAIL_RECIPIENT = "emailRecipient"
    EMAIL_SENDER_ADDRESS = "emailSenderAddress"
    EMAIL_SENDER_NAME = "emailSenderName"
    EMAIL_SOURCE_DOMAIN = "emailSourceDomain"
    EMAIL_SOURCE_IP_ADDRESS = "emailSourceIpAddress"
    EMAIL_SUBJECT = "emailSubject"
    EMAIL_X_MAILER = "emailXMailer"
    EXPIRATION_DATE_TIME = "expirationDateTime"
    EXTERNAL_ID = "externalId"
    FILE_COMPILE_DATE_TIME = "fileCompileDateTime"
    FILE_CREATED_DATE_TIME = "fileCreatedDateTime"
    FILE_HASH_TYPE = "fileHashType"
    FILE_HASH_VALUE = "fileHashValue"
    FILE_MUTEX_NAME = "fileMutexName"
    FILE_NAME = "fileName"
    FILE_PACKER = "filePacker"
    FILE_PATH = "filePath"
    FILE_SIZE = "fileSize"
    FILE_TYPE = "fileType"
    INGESTED_DATE_TIME = "ingestedDateTime"
    IS_ACTIVE = "isActive"
    KILL_CHAIN = "killChain"
    KNOWN_FALSE_POSITIVES = "knownFalsePositives"
    LAST_REPORTED_DATE_TIME = "lastReportedDateTime"
    MALWARE_FAMILY_NAMES = "malwareFamilyNames"
    NETWORK_CIDR_BLOCK = "networkCidrBlock"
    NETWORK_DESTINATION_ASN = "networkDestinationAsn"
    NETWORK_DESTINATION_CIDR_BLOCK = "networkDestinationCidrBlock"
    NETWORK_DESTINATION_I_PV4 = "networkDestinationIPv4"
    NETWORK_DESTINATION_I_PV6 = "networkDestinationIPv6"
    NETWORK_DESTINATION_PORT = "networkDestinationPort"
    NETWORK_I_PV4 = "networkIPv4"
    NETWORK_I_PV6 = "networkIPv6"
    NETWORK_PORT = "networkPort"
    NETWORK_PROTOCOL = "networkProtocol"
    NETWORK_SOURCE_ASN = "networkSourceAsn"
    NETWORK_SOURCE_CIDR_BLOCK = "networkSourceCidrBlock"
    NETWORK_SOURCE_I_PV4 = "networkSourceIPv4"
    NETWORK_SOURCE_I_PV6 = "networkSourceIPv6"
    NETWORK_SOURCE_PORT = "networkSourcePort"
    PASSIVE_ONLY = "passiveOnly"
    SEVERITY = "severity"
    TAGS = "tags"
    TARGET_PRODUCT = "targetProduct"
    THREAT_TYPE = "threatType"
    TLP_LEVEL = "tlpLevel"
    URL = "url"
    USER_AGENT = "userAgent"

class Enum55(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ACTION = "action"
    ACTIVITY_GROUP_NAMES = "activityGroupNames"
    ADDITIONAL_INFORMATION = "additionalInformation"
    AZURE_TENANT_ID = "azureTenantId"
    CONFIDENCE = "confidence"
    DESCRIPTION = "description"
    DIAMOND_MODEL = "diamondModel"
    DOMAIN_NAME = "domainName"
    EMAIL_ENCODING = "emailEncoding"
    EMAIL_LANGUAGE = "emailLanguage"
    EMAIL_RECIPIENT = "emailRecipient"
    EMAIL_SENDER_ADDRESS = "emailSenderAddress"
    EMAIL_SENDER_NAME = "emailSenderName"
    EMAIL_SOURCE_DOMAIN = "emailSourceDomain"
    EMAIL_SOURCE_IP_ADDRESS = "emailSourceIpAddress"
    EMAIL_SUBJECT = "emailSubject"
    EMAIL_X_MAILER = "emailXMailer"
    EXPIRATION_DATE_TIME = "expirationDateTime"
    EXTERNAL_ID = "externalId"
    FILE_COMPILE_DATE_TIME = "fileCompileDateTime"
    FILE_CREATED_DATE_TIME = "fileCreatedDateTime"
    FILE_HASH_TYPE = "fileHashType"
    FILE_HASH_VALUE = "fileHashValue"
    FILE_MUTEX_NAME = "fileMutexName"
    FILE_NAME = "fileName"
    FILE_PACKER = "filePacker"
    FILE_PATH = "filePath"
    FILE_SIZE = "fileSize"
    FILE_TYPE = "fileType"
    INGESTED_DATE_TIME = "ingestedDateTime"
    IS_ACTIVE = "isActive"
    KILL_CHAIN = "killChain"
    KNOWN_FALSE_POSITIVES = "knownFalsePositives"
    LAST_REPORTED_DATE_TIME = "lastReportedDateTime"
    MALWARE_FAMILY_NAMES = "malwareFamilyNames"
    NETWORK_CIDR_BLOCK = "networkCidrBlock"
    NETWORK_DESTINATION_ASN = "networkDestinationAsn"
    NETWORK_DESTINATION_CIDR_BLOCK = "networkDestinationCidrBlock"
    NETWORK_DESTINATION_I_PV4 = "networkDestinationIPv4"
    NETWORK_DESTINATION_I_PV6 = "networkDestinationIPv6"
    NETWORK_DESTINATION_PORT = "networkDestinationPort"
    NETWORK_I_PV4 = "networkIPv4"
    NETWORK_I_PV6 = "networkIPv6"
    NETWORK_PORT = "networkPort"
    NETWORK_PROTOCOL = "networkProtocol"
    NETWORK_SOURCE_ASN = "networkSourceAsn"
    NETWORK_SOURCE_CIDR_BLOCK = "networkSourceCidrBlock"
    NETWORK_SOURCE_I_PV4 = "networkSourceIPv4"
    NETWORK_SOURCE_I_PV6 = "networkSourceIPv6"
    NETWORK_SOURCE_PORT = "networkSourcePort"
    PASSIVE_ONLY = "passiveOnly"
    SEVERITY = "severity"
    TAGS = "tags"
    TARGET_PRODUCT = "targetProduct"
    THREAT_TYPE = "threatType"
    TLP_LEVEL = "tlpLevel"
    URL = "url"
    USER_AGENT = "userAgent"

class Enum56(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    ACCOUNTS = "accounts"
    ACCOUNTS_DESC = "accounts desc"
    AZURE_SUBSCRIPTION_ID = "azureSubscriptionId"
    AZURE_SUBSCRIPTION_ID_DESC = "azureSubscriptionId desc"
    AZURE_TENANT_ID = "azureTenantId"
    AZURE_TENANT_ID_DESC = "azureTenantId desc"
    CREATED_DATE_TIME = "createdDateTime"
    CREATED_DATE_TIME_DESC = "createdDateTime desc"
    DISPLAY_NAME = "displayName"
    DISPLAY_NAME_DESC = "displayName desc"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    LAST_MODIFIED_DATE_TIME_DESC = "lastModifiedDateTime desc"
    RISK_SCORE = "riskScore"
    RISK_SCORE_DESC = "riskScore desc"
    TAGS = "tags"
    TAGS_DESC = "tags desc"
    USER_PRINCIPAL_NAME = "userPrincipalName"
    USER_PRINCIPAL_NAME_DESC = "userPrincipalName desc"
    VENDOR_INFORMATION = "vendorInformation"
    VENDOR_INFORMATION_DESC = "vendorInformation desc"

class Enum57(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ACCOUNTS = "accounts"
    AZURE_SUBSCRIPTION_ID = "azureSubscriptionId"
    AZURE_TENANT_ID = "azureTenantId"
    CREATED_DATE_TIME = "createdDateTime"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    RISK_SCORE = "riskScore"
    TAGS = "tags"
    USER_PRINCIPAL_NAME = "userPrincipalName"
    VENDOR_INFORMATION = "vendorInformation"

class Enum58(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ACCOUNTS = "accounts"
    AZURE_SUBSCRIPTION_ID = "azureSubscriptionId"
    AZURE_TENANT_ID = "azureTenantId"
    CREATED_DATE_TIME = "createdDateTime"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    RISK_SCORE = "riskScore"
    TAGS = "tags"
    USER_PRINCIPAL_NAME = "userPrincipalName"
    VENDOR_INFORMATION = "vendorInformation"

class Get0ItemsItem(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    PROVIDER_STATUS = "providerStatus"
    ALERTS = "alerts"
    CLOUD_APP_SECURITY_PROFILES = "cloudAppSecurityProfiles"
    DOMAIN_SECURITY_PROFILES = "domainSecurityProfiles"
    FILE_SECURITY_PROFILES = "fileSecurityProfiles"
    HOST_SECURITY_PROFILES = "hostSecurityProfiles"
    IP_SECURITY_PROFILES = "ipSecurityProfiles"
    PROVIDER_TENANT_SETTINGS = "providerTenantSettings"
    SECURE_SCORE_CONTROL_PROFILES = "secureScoreControlProfiles"
    SECURE_SCORES = "secureScores"
    SECURITY_ACTIONS = "securityActions"
    TI_INDICATORS = "tiIndicators"
    USER_SECURITY_PROFILES = "userSecurityProfiles"

class Get1ItemsItem(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    ALERTS = "alerts"
    CLOUD_APP_SECURITY_PROFILES = "cloudAppSecurityProfiles"
    DOMAIN_SECURITY_PROFILES = "domainSecurityProfiles"
    FILE_SECURITY_PROFILES = "fileSecurityProfiles"
    HOST_SECURITY_PROFILES = "hostSecurityProfiles"
    IP_SECURITY_PROFILES = "ipSecurityProfiles"
    PROVIDER_TENANT_SETTINGS = "providerTenantSettings"
    SECURE_SCORE_CONTROL_PROFILES = "secureScoreControlProfiles"
    SECURE_SCORES = "secureScores"
    SECURITY_ACTIONS = "securityActions"
    TI_INDICATORS = "tiIndicators"
    USER_SECURITY_PROFILES = "userSecurityProfiles"

class Get5ItemsItem(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    ACTIVITY_GROUP_NAME = "activityGroupName"
    ACTIVITY_GROUP_NAME_DESC = "activityGroupName desc"
    ASSIGNED_TO = "assignedTo"
    ASSIGNED_TO_DESC = "assignedTo desc"
    AZURE_SUBSCRIPTION_ID = "azureSubscriptionId"
    AZURE_SUBSCRIPTION_ID_DESC = "azureSubscriptionId desc"
    AZURE_TENANT_ID = "azureTenantId"
    AZURE_TENANT_ID_DESC = "azureTenantId desc"
    CATEGORY = "category"
    CATEGORY_DESC = "category desc"
    CLOSED_DATE_TIME = "closedDateTime"
    CLOSED_DATE_TIME_DESC = "closedDateTime desc"
    CLOUD_APP_STATES = "cloudAppStates"
    CLOUD_APP_STATES_DESC = "cloudAppStates desc"
    COMMENTS = "comments"
    COMMENTS_DESC = "comments desc"
    CONFIDENCE = "confidence"
    CONFIDENCE_DESC = "confidence desc"
    CREATED_DATE_TIME = "createdDateTime"
    CREATED_DATE_TIME_DESC = "createdDateTime desc"
    DESCRIPTION = "description"
    DESCRIPTION_DESC = "description desc"
    DETECTION_IDS = "detectionIds"
    DETECTION_IDS_DESC = "detectionIds desc"
    EVENT_DATE_TIME = "eventDateTime"
    EVENT_DATE_TIME_DESC = "eventDateTime desc"
    FEEDBACK = "feedback"
    FEEDBACK_DESC = "feedback desc"
    FILE_STATES = "fileStates"
    FILE_STATES_DESC = "fileStates desc"
    HISTORY_STATES = "historyStates"
    HISTORY_STATES_DESC = "historyStates desc"
    HOST_STATES = "hostStates"
    HOST_STATES_DESC = "hostStates desc"
    INCIDENT_IDS = "incidentIds"
    INCIDENT_IDS_DESC = "incidentIds desc"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    LAST_MODIFIED_DATE_TIME_DESC = "lastModifiedDateTime desc"
    MALWARE_STATES = "malwareStates"
    MALWARE_STATES_DESC = "malwareStates desc"
    NETWORK_CONNECTIONS = "networkConnections"
    NETWORK_CONNECTIONS_DESC = "networkConnections desc"
    PROCESSES = "processes"
    PROCESSES_DESC = "processes desc"
    RECOMMENDED_ACTIONS = "recommendedActions"
    RECOMMENDED_ACTIONS_DESC = "recommendedActions desc"
    REGISTRY_KEY_STATES = "registryKeyStates"
    REGISTRY_KEY_STATES_DESC = "registryKeyStates desc"
    SECURITY_RESOURCES = "securityResources"
    SECURITY_RESOURCES_DESC = "securityResources desc"
    SEVERITY = "severity"
    SEVERITY_DESC = "severity desc"
    SOURCE_MATERIALS = "sourceMaterials"
    SOURCE_MATERIALS_DESC = "sourceMaterials desc"
    STATUS = "status"
    STATUS_DESC = "status desc"
    TAGS = "tags"
    TAGS_DESC = "tags desc"
    TITLE = "title"
    TITLE_DESC = "title desc"
    TRIGGERS = "triggers"
    TRIGGERS_DESC = "triggers desc"
    USER_STATES = "userStates"
    USER_STATES_DESC = "userStates desc"
    VENDOR_INFORMATION = "vendorInformation"
    VENDOR_INFORMATION_DESC = "vendorInformation desc"
    VULNERABILITY_STATES = "vulnerabilityStates"
    VULNERABILITY_STATES_DESC = "vulnerabilityStates desc"

class Get6ItemsItem(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ACTIVITY_GROUP_NAME = "activityGroupName"
    ASSIGNED_TO = "assignedTo"
    AZURE_SUBSCRIPTION_ID = "azureSubscriptionId"
    AZURE_TENANT_ID = "azureTenantId"
    CATEGORY = "category"
    CLOSED_DATE_TIME = "closedDateTime"
    CLOUD_APP_STATES = "cloudAppStates"
    COMMENTS = "comments"
    CONFIDENCE = "confidence"
    CREATED_DATE_TIME = "createdDateTime"
    DESCRIPTION = "description"
    DETECTION_IDS = "detectionIds"
    EVENT_DATE_TIME = "eventDateTime"
    FEEDBACK = "feedback"
    FILE_STATES = "fileStates"
    HISTORY_STATES = "historyStates"
    HOST_STATES = "hostStates"
    INCIDENT_IDS = "incidentIds"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    MALWARE_STATES = "malwareStates"
    NETWORK_CONNECTIONS = "networkConnections"
    PROCESSES = "processes"
    RECOMMENDED_ACTIONS = "recommendedActions"
    REGISTRY_KEY_STATES = "registryKeyStates"
    SECURITY_RESOURCES = "securityResources"
    SEVERITY = "severity"
    SOURCE_MATERIALS = "sourceMaterials"
    STATUS = "status"
    TAGS = "tags"
    TITLE = "title"
    TRIGGERS = "triggers"
    USER_STATES = "userStates"
    VENDOR_INFORMATION = "vendorInformation"
    VULNERABILITY_STATES = "vulnerabilityStates"

class MicrosoftGraphAccountStatus(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    UNKNOWN = "unknown"
    STAGED = "staged"
    ACTIVE = "active"
    SUSPENDED = "suspended"
    DELETED = "deleted"
    UNKNOWN_FUTURE_VALUE = "unknownFutureValue"

class MicrosoftGraphAlertFeedback(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    UNKNOWN = "unknown"
    TRUE_POSITIVE = "truePositive"
    FALSE_POSITIVE = "falsePositive"
    BENIGN_POSITIVE = "benignPositive"
    UNKNOWN_FUTURE_VALUE = "unknownFutureValue"

class MicrosoftGraphAlertSeverity(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    UNKNOWN = "unknown"
    INFORMATIONAL = "informational"
    LOW = "low"
    MEDIUM = "medium"
    HIGH = "high"
    UNKNOWN_FUTURE_VALUE = "unknownFutureValue"

class MicrosoftGraphAlertStatus(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    UNKNOWN = "unknown"
    NEW_ALERT = "newAlert"
    IN_PROGRESS = "inProgress"
    RESOLVED = "resolved"
    DISMISSED = "dismissed"
    UNKNOWN_FUTURE_VALUE = "unknownFutureValue"

class MicrosoftGraphApplicationPermissionsRequired(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    UNKNOWN = "unknown"
    ANONYMOUS = "anonymous"
    GUEST = "guest"
    USER = "user"
    ADMINISTRATOR = "administrator"
    SYSTEM = "system"
    UNKNOWN_FUTURE_VALUE = "unknownFutureValue"

class MicrosoftGraphConnectionDirection(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    UNKNOWN = "unknown"
    INBOUND = "inbound"
    OUTBOUND = "outbound"
    UNKNOWN_FUTURE_VALUE = "unknownFutureValue"

class MicrosoftGraphConnectionStatus(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    UNKNOWN = "unknown"
    ATTEMPTED = "attempted"
    SUCCEEDED = "succeeded"
    BLOCKED = "blocked"
    FAILED = "failed"
    UNKNOWN_FUTURE_VALUE = "unknownFutureValue"

class MicrosoftGraphDiamondModel(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    UNKNOWN = "unknown"
    ADVERSARY = "adversary"
    CAPABILITY = "capability"
    INFRASTRUCTURE = "infrastructure"
    VICTIM = "victim"
    UNKNOWN_FUTURE_VALUE = "unknownFutureValue"

class MicrosoftGraphEmailRole(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    UNKNOWN = "unknown"
    SENDER = "sender"
    RECIPIENT = "recipient"
    UNKNOWN_FUTURE_VALUE = "unknownFutureValue"

class MicrosoftGraphFileHashType(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    UNKNOWN = "unknown"
    SHA1 = "sha1"
    SHA256 = "sha256"
    MD5 = "md5"
    AUTHENTICODE_HASH256 = "authenticodeHash256"
    LS_HASH = "lsHash"
    CTPH = "ctph"
    UNKNOWN_FUTURE_VALUE = "unknownFutureValue"

class MicrosoftGraphLogonType(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    UNKNOWN = "unknown"
    INTERACTIVE = "interactive"
    REMOTE_INTERACTIVE = "remoteInteractive"
    NETWORK = "network"
    BATCH = "batch"
    SERVICE = "service"
    UNKNOWN_FUTURE_VALUE = "unknownFutureValue"

class MicrosoftGraphOperationStatus(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    NOT_STARTED = "NotStarted"
    RUNNING = "Running"
    COMPLETED = "Completed"
    FAILED = "Failed"

class MicrosoftGraphProcessIntegrityLevel(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    UNKNOWN = "unknown"
    UNTRUSTED = "untrusted"
    LOW = "low"
    MEDIUM = "medium"
    HIGH = "high"
    SYSTEM = "system"
    UNKNOWN_FUTURE_VALUE = "unknownFutureValue"

class MicrosoftGraphRegistryHive(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    UNKNOWN = "unknown"
    CURRENT_CONFIG = "currentConfig"
    CURRENT_USER = "currentUser"
    LOCAL_MACHINE_SAM = "localMachineSam"
    LOCAL_MACHINE_SECURITY = "localMachineSecurity"
    LOCAL_MACHINE_SOFTWARE = "localMachineSoftware"
    LOCAL_MACHINE_SYSTEM = "localMachineSystem"
    USERS_DEFAULT = "usersDefault"
    UNKNOWN_FUTURE_VALUE = "unknownFutureValue"

class MicrosoftGraphRegistryOperation(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    UNKNOWN = "unknown"
    CREATE = "create"
    MODIFY = "modify"
    DELETE = "delete"
    UNKNOWN_FUTURE_VALUE = "unknownFutureValue"

class MicrosoftGraphRegistryValueType(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    UNKNOWN = "unknown"
    BINARY = "binary"
    DWORD = "dword"
    DWORD_LITTLE_ENDIAN = "dwordLittleEndian"
    DWORD_BIG_ENDIAN = "dwordBigEndian"
    EXPAND_SZ = "expandSz"
    LINK = "link"
    MULTI_SZ = "multiSz"
    NONE = "none"
    QWORD = "qword"
    QWORDLITTLE_ENDIAN = "qwordlittleEndian"
    SZ = "sz"
    UNKNOWN_FUTURE_VALUE = "unknownFutureValue"

class MicrosoftGraphSecurityNetworkProtocol(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    IP = "ip"
    ICMP = "icmp"
    UNKNOWN = "unknown"
    IGMP = "igmp"
    GGP = "ggp"
    IPV4 = "ipv4"
    TCP = "tcp"
    PUP = "pup"
    UDP = "udp"
    IDP = "idp"
    IPV6 = "ipv6"
    IPV6_ROUTING_HEADER = "ipv6RoutingHeader"
    IPV6_FRAGMENT_HEADER = "ipv6FragmentHeader"
    IP_SEC_ENCAPSULATING_SECURITY_PAYLOAD = "ipSecEncapsulatingSecurityPayload"
    IP_SEC_AUTHENTICATION_HEADER = "ipSecAuthenticationHeader"
    ICMP_V6 = "icmpV6"
    IPV6_NO_NEXT_HEADER = "ipv6NoNextHeader"
    IPV6_DESTINATION_OPTIONS = "ipv6DestinationOptions"
    ND = "nd"
    RAW = "raw"
    IPX = "ipx"
    SPX = "spx"
    SPX_II = "spxII"
    UNKNOWN_FUTURE_VALUE = "unknownFutureValue"

class MicrosoftGraphSecurityResourceType(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    UNKNOWN = "unknown"
    ATTACKED = "attacked"
    RELATED = "related"
    UNKNOWN_FUTURE_VALUE = "unknownFutureValue"

class MicrosoftGraphTiAction(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    UNKNOWN = "unknown"
    ALLOW = "allow"
    BLOCK = "block"
    ALERT = "alert"
    UNKNOWN_FUTURE_VALUE = "unknownFutureValue"

class MicrosoftGraphTlpLevel(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    UNKNOWN = "unknown"
    WHITE = "white"
    GREEN = "green"
    AMBER = "amber"
    RED = "red"
    UNKNOWN_FUTURE_VALUE = "unknownFutureValue"

class MicrosoftGraphUserAccountSecurityType(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    UNKNOWN = "unknown"
    STANDARD = "standard"
    POWER = "power"
    ADMINISTRATOR = "administrator"
    UNKNOWN_FUTURE_VALUE = "unknownFutureValue"
