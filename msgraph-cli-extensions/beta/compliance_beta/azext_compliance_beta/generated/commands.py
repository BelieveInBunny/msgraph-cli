# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=line-too-long
# pylint: disable=too-many-statements
# pylint: disable=too-many-locals

from msgraph.cli.core.commands import CliCommandType


def load_command_table(self, _):

    from azext_compliance_beta.generated._client_factory import cf_compliance_compliance
    compliance_beta_compliance_compliance = CliCommandType(
        operations_tmpl='azext_compliance_beta.vendored_sdks.compliance.operations._compliance_compliance_operations#Co'
        'mplianceComplianceOperations.{}',
        client_factory=cf_compliance_compliance)
    with self.command_group('compliance', compliance_beta_compliance_compliance,
                            client_factory=cf_compliance_compliance) as g:
        g.custom_command('get-compliance', 'compliance_get_compliance')
        g.custom_command('update-compliance', 'compliance_update_compliance')

    from azext_compliance_beta.generated._client_factory import cf_compliance
    compliance_beta_compliance = CliCommandType(
        operations_tmpl='azext_compliance_beta.vendored_sdks.compliance.operations._compliance_operations#ComplianceOpe'
        'rations.{}',
        client_factory=cf_compliance)
    with self.command_group('compliance', compliance_beta_compliance, client_factory=cf_compliance) as g:
        g.custom_command('delete', 'compliance_delete', confirmation=True)
        g.custom_command('get-ediscovery', 'compliance_get_ediscovery')
        g.custom_command('update-ediscovery', 'compliance_update_ediscovery')

    from azext_compliance_beta.generated._client_factory import cf_compliance_ediscovery
    compliance_beta_compliance_ediscovery = CliCommandType(
        operations_tmpl='azext_compliance_beta.vendored_sdks.compliance.operations._compliance_ediscovery_operations#Co'
        'mplianceEdiscoveryOperations.{}',
        client_factory=cf_compliance_ediscovery)
    with self.command_group('compliance', compliance_beta_compliance_ediscovery,
                            client_factory=cf_compliance_ediscovery) as g:
        g.custom_command('delete', 'compliance_delete', confirmation=True)
        g.custom_command('create-case', 'compliance_create_case')
        g.custom_command('get-case', 'compliance_get_case')
        g.custom_command('list-case', 'compliance_list_case')
        g.custom_command('update-case', 'compliance_update_case')

    from azext_compliance_beta.generated._client_factory import cf_compliance_ediscovery_case
    compliance_beta_compliance_ediscovery_case = CliCommandType(
        operations_tmpl='azext_compliance_beta.vendored_sdks.compliance.operations._compliance_ediscovery_case_operatio'
        'ns#ComplianceEdiscoveryCaseOperations.{}',
        client_factory=cf_compliance_ediscovery_case)
    with self.command_group('compliance', compliance_beta_compliance_ediscovery_case,
                            client_factory=cf_compliance_ediscovery_case) as g:
        g.custom_command('delete', 'compliance_delete', confirmation=True)
        g.custom_command('close', 'compliance_close')
        g.custom_command('create-custodian', 'compliance_create_custodian')
        g.custom_command('create-review-set', 'compliance_create_review_set')
        g.custom_command('get-custodian', 'compliance_get_custodian')
        g.custom_command('get-review-set', 'compliance_get_review_set')
        g.custom_command('list-custodian', 'compliance_list_custodian')
        g.custom_command('list-review-set', 'compliance_list_review_set')
        g.custom_command('reopen', 'compliance_reopen')
        g.custom_command('update-custodian', 'compliance_update_custodian')
        g.custom_command('update-review-set', 'compliance_update_review_set')

    from azext_compliance_beta.generated._client_factory import cf_compliance_ediscovery_case_custodian
    compliance_beta_compliance_ediscovery_case_custodian = CliCommandType(
        operations_tmpl='azext_compliance_beta.vendored_sdks.compliance.operations._compliance_ediscovery_case_custodia'
        'n_operations#ComplianceEdiscoveryCaseCustodianOperations.{}',
        client_factory=cf_compliance_ediscovery_case_custodian)
    with self.command_group('compliance', compliance_beta_compliance_ediscovery_case_custodian,
                            client_factory=cf_compliance_ediscovery_case_custodian) as g:
        g.custom_command('delete', 'compliance_delete', confirmation=True)
        g.custom_command('activate', 'compliance_activate')
        g.custom_command('create-site-source', 'compliance_create_site_source')
        g.custom_command('create-unified-group-source', 'compliance_create_unified_group_source')
        g.custom_command('create-user-source', 'compliance_create_user_source')
        g.custom_command('get-last-index-operation', 'compliance_get_last_index_operation')
        g.custom_command('get-ref-last-index-operation', 'compliance_get_ref_last_index_operation')
        g.custom_command('get-site-source', 'compliance_get_site_source')
        g.custom_command('get-unified-group-source', 'compliance_get_unified_group_source')
        g.custom_command('get-user-source', 'compliance_get_user_source')
        g.custom_command('list-site-source', 'compliance_list_site_source')
        g.custom_command('list-unified-group-source', 'compliance_list_unified_group_source')
        g.custom_command('list-user-source', 'compliance_list_user_source')
        g.custom_command('release', 'compliance_release')
        g.custom_command('set-ref-last-index-operation', 'compliance_set_ref_last_index_operation')
        g.custom_command('update-index', 'compliance_update_index')
        g.custom_command('update-site-source', 'compliance_update_site_source')
        g.custom_command('update-unified-group-source', 'compliance_update_unified_group_source')
        g.custom_command('update-user-source', 'compliance_update_user_source')

    from azext_compliance_beta.generated._client_factory import cf_compliance_ediscovery_case_custodian_site_source
    compliance_beta_compliance_ediscovery_case_custodian_site_source = CliCommandType(
        operations_tmpl='azext_compliance_beta.vendored_sdks.compliance.operations._compliance_ediscovery_case_custodia'
        'n_site_source_operations#ComplianceEdiscoveryCaseCustodianSiteSourceOperations.{}',
        client_factory=cf_compliance_ediscovery_case_custodian_site_source)
    with self.command_group('compliance', compliance_beta_compliance_ediscovery_case_custodian_site_source,
                            client_factory=cf_compliance_ediscovery_case_custodian_site_source) as g:
        g.custom_command('delete', 'compliance_delete', confirmation=True)
        g.custom_command('get-ref-site', 'compliance_get_ref_site')
        g.custom_command('get-site', 'compliance_get_site')
        g.custom_command('set-ref-site', 'compliance_set_ref_site')

    from azext_compliance_beta.generated._client_factory import cf_compliance_ediscovery_case_custodian_unified_group_source
    compliance_beta_compliance_ediscovery_case_custodian_unified_group_source = CliCommandType(
        operations_tmpl='azext_compliance_beta.vendored_sdks.compliance.operations._compliance_ediscovery_case_custodia'
        'n_unified_group_source_operations#ComplianceEdiscoveryCaseCustodianUnifiedGroupSourceOperations.{}',
        client_factory=cf_compliance_ediscovery_case_custodian_unified_group_source)
    with self.command_group('compliance', compliance_beta_compliance_ediscovery_case_custodian_unified_group_source,
                            client_factory=cf_compliance_ediscovery_case_custodian_unified_group_source) as g:
        g.custom_command('delete', 'compliance_delete', confirmation=True)
        g.custom_command('get-group', 'compliance_get_group')
        g.custom_command('get-ref-group', 'compliance_get_ref_group')
        g.custom_command('set-ref-group', 'compliance_set_ref_group')

    from azext_compliance_beta.generated._client_factory import cf_compliance_ediscovery_case_review_set
    compliance_beta_compliance_ediscovery_case_review_set = CliCommandType(
        operations_tmpl='azext_compliance_beta.vendored_sdks.compliance.operations._compliance_ediscovery_case_review_s'
        'et_operations#ComplianceEdiscoveryCaseReviewSetOperations.{}',
        client_factory=cf_compliance_ediscovery_case_review_set)
    with self.command_group('compliance', compliance_beta_compliance_ediscovery_case_review_set,
                            client_factory=cf_compliance_ediscovery_case_review_set) as g:
        g.custom_command('delete', 'compliance_delete', confirmation=True)
        g.custom_command('create-query', 'compliance_create_query')
        g.custom_command('get-query', 'compliance_get_query')
        g.custom_command('list-query', 'compliance_list_query')
        g.custom_command('update-query', 'compliance_update_query')
