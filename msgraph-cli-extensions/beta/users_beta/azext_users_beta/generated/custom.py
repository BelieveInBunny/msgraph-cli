# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=line-too-long
# pylint: disable=too-many-lines


def users_user_list(client,
                    consistency_level=None,
                    orderby=None,
                    select=None,
                    expand=None):
    return client.list_user(consistency_level=consistency_level,
                            orderby=orderby,
                            select=select,
                            expand=expand)


def users_user_create(client,
                      id_=None,
                      deleted_date_time=None,
                      sign_in_activity=None,
                      account_enabled=None,
                      age_group=None,
                      assigned_licenses=None,
                      assigned_plans=None,
                      business_phones=None,
                      city=None,
                      company_name=None,
                      consent_provided_for_minor=None,
                      country=None,
                      created_date_time=None,
                      creation_type=None,
                      department=None,
                      device_keys=None,
                      display_name=None,
                      employee_hire_date=None,
                      employee_id=None,
                      employee_org_data=None,
                      employee_type=None,
                      external_user_state=None,
                      external_user_state_change_date_time=None,
                      fax_number=None,
                      given_name=None,
                      identities=None,
                      im_addresses=None,
                      info_catalogs=None,
                      is_resource_account=None,
                      job_title=None,
                      last_password_change_date_time=None,
                      legal_age_group_classification=None,
                      license_assignment_states=None,
                      mail=None,
                      mail_nickname=None,
                      mobile_phone=None,
                      office_location=None,
                      on_premises_distinguished_name=None,
                      on_premises_domain_name=None,
                      on_premises_extension_attributes=None,
                      on_premises_immutable_id=None,
                      on_premises_last_sync_date_time=None,
                      on_premises_provisioning_errors=None,
                      on_premises_sam_account_name=None,
                      on_premises_security_identifier=None,
                      on_premises_sync_enabled=None,
                      on_premises_user_principal_name=None,
                      other_mails=None,
                      password_policies=None,
                      password_profile=None,
                      postal_code=None,
                      preferred_data_location=None,
                      preferred_language=None,
                      provisioned_plans=None,
                      proxy_addresses=None,
                      refresh_tokens_valid_from_date_time=None,
                      show_in_address_list=None,
                      sign_in_sessions_valid_from_date_time=None,
                      state=None,
                      street_address=None,
                      surname=None,
                      usage_location=None,
                      user_principal_name=None,
                      user_type=None,
                      device_enrollment_limit=None,
                      about_me=None,
                      birthday=None,
                      hire_date=None,
                      interests=None,
                      my_site=None,
                      past_projects=None,
                      preferred_name=None,
                      responsibilities=None,
                      schools=None,
                      skills=None,
                      app_role_assignments=None,
                      created_objects=None,
                      direct_reports=None,
                      license_details=None,
                      manager=None,
                      member_of=None,
                      owned_devices=None,
                      owned_objects=None,
                      registered_devices=None,
                      scoped_role_member_of=None,
                      transitive_member_of=None,
                      calendar=None,
                      calendar_groups=None,
                      calendars=None,
                      calendar_view=None,
                      contact_folders=None,
                      contacts=None,
                      events=None,
                      joined_groups=None,
                      mail_folders=None,
                      messages=None,
                      people=None,
                      photo=None,
                      photos=None,
                      drive=None,
                      drives=None,
                      followed_sites=None,
                      extensions=None,
                      app_consent_requests_for_approval=None,
                      approvals=None,
                      pending_access_review_instances=None,
                      agreement_acceptances=None,
                      device_enrollment_configurations=None,
                      managed_devices=None,
                      managed_app_registrations=None,
                      windows_information_protection_device_registrations=None,
                      device_management_troubleshooting_events=None,
                      mobile_app_intent_and_states=None,
                      mobile_app_troubleshooting_events=None,
                      notifications=None,
                      insights=None,
                      activities=None,
                      devices=None,
                      online_meetings=None,
                      presence=None,
                      chats=None,
                      joined_teams=None,
                      todo_id=None,
                      todo_lists=None,
                      teamwork_id=None,
                      teamwork_installed_apps=None,
                      authentication_id=None,
                      authentication_email_methods=None,
                      authentication_fido2methods=None,
                      authentication_methods=None,
                      authentication_microsoft_authenticator_methods=None,
                      authentication_oath_methods=None,
                      authentication_operations=None,
                      authentication_passwordless_microsoft_authenticator_methods=None,
                      authentication_password_methods=None,
                      authentication_phone_methods=None,
                      authentication_security_question_methods=None,
                      authentication_temporary_access_pass_methods=None,
                      profile_id=None,
                      profile_account=None,
                      profile_addresses=None,
                      profile_anniversaries=None,
                      profile_awards=None,
                      profile_certifications=None,
                      profile_educational_activities=None,
                      profile_emails=None,
                      profile_interests=None,
                      profile_languages=None,
                      profile_names=None,
                      profile_notes=None,
                      profile_patents=None,
                      profile_phones=None,
                      profile_positions=None,
                      profile_projects=None,
                      profile_publications=None,
                      profile_skills=None,
                      profile_web_accounts=None,
                      profile_websites=None,
                      onenote_id=None,
                      onenote_notebooks=None,
                      onenote_operations=None,
                      onenote_pages=None,
                      onenote_resources=None,
                      onenote_section_groups=None,
                      onenote_sections=None,
                      settings_id=None,
                      settings_contribution_to_content_discovery_as_organization_disabled=None,
                      settings_contribution_to_content_discovery_disabled=None,
                      settings_shift_preferences_id=None,
                      settings_shift_preferences_created_date_time=None,
                      settings_shift_preferences_last_modified_date_time=None,
                      settings_shift_preferences_last_modified_by_application=None,
                      settings_shift_preferences_last_modified_by_device=None,
                      settings_shift_preferences_last_modified_by_user=None,
                      settings_shift_preferences_created_by_application=None,
                      settings_shift_preferences_created_by_device=None,
                      settings_shift_preferences_created_by_user=None,
                      settings_shift_preferences_availability=None,
                      settings_regional_and_language_settings_id=None,
                      settings_regional_and_language_settings_authoring_languages=None,
                      settings_regional_and_language_settings_default_display_language=None,
                      settings_regional_and_language_settings_default_regional_format=None,
                      settings_regional_and_language_settings_default_speech_input_language=None,
                      settings_regional_and_language_settings_default_translation_language=None,
                      settings_regional_and_language_settings_regional_format_overrides=None,
                      planner_id=None,
                      planner_favorite_plan_references=None,
                      planner_recent_plan_references=None,
                      planner_all=None,
                      planner_favorite_plans=None,
                      planner_plans=None,
                      planner_recent_plans=None,
                      planner_tasks=None,
                      outlook_id=None,
                      outlook_master_categories=None,
                      outlook_task_folders=None,
                      outlook_task_groups=None,
                      outlook_tasks=None,
                      inference_classification_id=None,
                      inference_classification_overrides=None,
                      information_protection_id=None,
                      information_protection_policy=None,
                      information_protection_data_loss_prevention_policies=None,
                      information_protection_sensitivity_labels=None,
                      information_protection_sensitivity_policy_settings=None,
                      information_protection_threat_assessment_requests=None,
                      analytics_id=None,
                      analytics_settings=None,
                      analytics_activity_statistics=None,
                      mailbox_settings_archive_folder=None,
                      mailbox_settings_automatic_replies_setting=None,
                      mailbox_settings_date_format=None,
                      mailbox_settings_delegate_meeting_message_delivery_options=None,
                      mailbox_settings_language=None,
                      mailbox_settings_time_format=None,
                      mailbox_settings_time_zone=None,
                      mailbox_settings_user_purpose=None,
                      mailbox_settings_user_purpose_v2=None,
                      mailbox_settings_working_hours=None):
    return client.create_user(id=id_,
                              deleted_date_time=deleted_date_time,
                              sign_in_activity=sign_in_activity,
                              account_enabled=account_enabled,
                              age_group=age_group,
                              assigned_licenses=assigned_licenses,
                              assigned_plans=assigned_plans,
                              business_phones=business_phones,
                              city=city,
                              company_name=company_name,
                              consent_provided_for_minor=consent_provided_for_minor,
                              country=country,
                              created_date_time=created_date_time,
                              creation_type=creation_type,
                              department=department,
                              device_keys=device_keys,
                              display_name=display_name,
                              employee_hire_date=employee_hire_date,
                              employee_id=employee_id,
                              employee_org_data=employee_org_data,
                              employee_type=employee_type,
                              external_user_state=external_user_state,
                              external_user_state_change_date_time=external_user_state_change_date_time,
                              fax_number=fax_number,
                              given_name=given_name,
                              identities=identities,
                              im_addresses=im_addresses,
                              info_catalogs=info_catalogs,
                              is_resource_account=is_resource_account,
                              job_title=job_title,
                              last_password_change_date_time=last_password_change_date_time,
                              legal_age_group_classification=legal_age_group_classification,
                              license_assignment_states=license_assignment_states,
                              mail=mail,
                              mail_nickname=mail_nickname,
                              mobile_phone=mobile_phone,
                              office_location=office_location,
                              on_premises_distinguished_name=on_premises_distinguished_name,
                              on_premises_domain_name=on_premises_domain_name,
                              on_premises_extension_attributes=on_premises_extension_attributes,
                              on_premises_immutable_id=on_premises_immutable_id,
                              on_premises_last_sync_date_time=on_premises_last_sync_date_time,
                              on_premises_provisioning_errors=on_premises_provisioning_errors,
                              on_premises_sam_account_name=on_premises_sam_account_name,
                              on_premises_security_identifier=on_premises_security_identifier,
                              on_premises_sync_enabled=on_premises_sync_enabled,
                              on_premises_user_principal_name=on_premises_user_principal_name,
                              other_mails=other_mails,
                              password_policies=password_policies,
                              password_profile=password_profile,
                              postal_code=postal_code,
                              preferred_data_location=preferred_data_location,
                              preferred_language=preferred_language,
                              provisioned_plans=provisioned_plans,
                              proxy_addresses=proxy_addresses,
                              refresh_tokens_valid_from_date_time=refresh_tokens_valid_from_date_time,
                              show_in_address_list=show_in_address_list,
                              sign_in_sessions_valid_from_date_time=sign_in_sessions_valid_from_date_time,
                              state=state,
                              street_address=street_address,
                              surname=surname,
                              usage_location=usage_location,
                              user_principal_name=user_principal_name,
                              user_type=user_type,
                              device_enrollment_limit=device_enrollment_limit,
                              about_me=about_me,
                              birthday=birthday,
                              hire_date=hire_date,
                              interests=interests,
                              my_site=my_site,
                              past_projects=past_projects,
                              preferred_name=preferred_name,
                              responsibilities=responsibilities,
                              schools=schools,
                              skills=skills,
                              app_role_assignments=app_role_assignments,
                              created_objects=created_objects,
                              direct_reports=direct_reports,
                              license_details=license_details,
                              manager=manager,
                              member_of=member_of,
                              owned_devices=owned_devices,
                              owned_objects=owned_objects,
                              registered_devices=registered_devices,
                              scoped_role_member_of=scoped_role_member_of,
                              transitive_member_of=transitive_member_of,
                              calendar=calendar,
                              calendar_groups=calendar_groups,
                              calendars=calendars,
                              calendar_view=calendar_view,
                              contact_folders=contact_folders,
                              contacts=contacts,
                              events=events,
                              joined_groups=joined_groups,
                              mail_folders=mail_folders,
                              messages=messages,
                              people=people,
                              photo=photo,
                              photos=photos,
                              drive=drive,
                              drives=drives,
                              followed_sites=followed_sites,
                              extensions=extensions,
                              app_consent_requests_for_approval=app_consent_requests_for_approval,
                              approvals=approvals,
                              pending_access_review_instances=pending_access_review_instances,
                              agreement_acceptances=agreement_acceptances,
                              device_enrollment_configurations=device_enrollment_configurations,
                              managed_devices=managed_devices,
                              managed_app_registrations=managed_app_registrations,
                              windows_information_protection_device_registrations=windows_information_protection_device_registrations,
                              device_management_troubleshooting_events=device_management_troubleshooting_events,
                              mobile_app_intent_and_states=mobile_app_intent_and_states,
                              mobile_app_troubleshooting_events=mobile_app_troubleshooting_events,
                              notifications=notifications,
                              insights=insights,
                              activities=activities,
                              devices=devices,
                              online_meetings=online_meetings,
                              presence=presence,
                              chats=chats,
                              joined_teams=joined_teams,
                              microsoft_graph_entity_id=todo_id,
                              lists=todo_lists,
                              id1=teamwork_id,
                              installed_apps=teamwork_installed_apps,
                              id2=authentication_id,
                              email_methods=authentication_email_methods,
                              fido2_methods=authentication_fido2methods,
                              methods=authentication_methods,
                              microsoft_authenticator_methods=authentication_microsoft_authenticator_methods,
                              oath_methods=authentication_oath_methods,
                              operations=authentication_operations,
                              passwordless_microsoft_authenticator_methods=authentication_passwordless_microsoft_authenticator_methods,
                              password_methods=authentication_password_methods,
                              phone_methods=authentication_phone_methods,
                              security_question_methods=authentication_security_question_methods,
                              temporary_access_pass_methods=authentication_temporary_access_pass_methods,
                              id3=profile_id,
                              account=profile_account,
                              addresses=profile_addresses,
                              anniversaries=profile_anniversaries,
                              awards=profile_awards,
                              certifications=profile_certifications,
                              educational_activities=profile_educational_activities,
                              emails=profile_emails,
                              microsoft_graph_profile_interests=profile_interests,
                              languages=profile_languages,
                              names=profile_names,
                              notes=profile_notes,
                              patents=profile_patents,
                              phones=profile_phones,
                              positions=profile_positions,
                              projects=profile_projects,
                              publications=profile_publications,
                              microsoft_graph_profile_skills=profile_skills,
                              web_accounts=profile_web_accounts,
                              websites=profile_websites,
                              id4=onenote_id,
                              notebooks=onenote_notebooks,
                              microsoft_graph_onenote_operations=onenote_operations,
                              pages=onenote_pages,
                              resources=onenote_resources,
                              section_groups=onenote_section_groups,
                              sections=onenote_sections,
                              id5=settings_id,
                              contribution_to_content_discovery_as_organization_disabled=settings_contribution_to_content_discovery_as_organization_disabled,
                              contribution_to_content_discovery_disabled=settings_contribution_to_content_discovery_disabled,
                              id6=settings_shift_preferences_id,
                              microsoft_graph_change_tracked_entity_created_date_time_created_date_time=settings_shift_preferences_created_date_time,
                              last_modified_date_time=settings_shift_preferences_last_modified_date_time,
                              application=settings_shift_preferences_last_modified_by_application,
                              device=settings_shift_preferences_last_modified_by_device,
                              user=settings_shift_preferences_last_modified_by_user,
                              microsoft_graph_identity_application=settings_shift_preferences_created_by_application,
                              microsoft_graph_identity_device=settings_shift_preferences_created_by_device,
                              microsoft_graph_identity_user=settings_shift_preferences_created_by_user,
                              availability=settings_shift_preferences_availability,
                              id7=settings_regional_and_language_settings_id,
                              authoring_languages=settings_regional_and_language_settings_authoring_languages,
                              default_display_language=settings_regional_and_language_settings_default_display_language,
                              default_regional_format=settings_regional_and_language_settings_default_regional_format,
                              default_speech_input_language=settings_regional_and_language_settings_default_speech_input_language,
                              default_translation_language=settings_regional_and_language_settings_default_translation_language,
                              regional_format_overrides=settings_regional_and_language_settings_regional_format_overrides,
                              id8=planner_id,
                              favorite_plan_references=planner_favorite_plan_references,
                              recent_plan_references=planner_recent_plan_references,
                              all=planner_all,
                              favorite_plans=planner_favorite_plans,
                              plans=planner_plans,
                              recent_plans=planner_recent_plans,
                              tasks=planner_tasks,
                              id9=outlook_id,
                              master_categories=outlook_master_categories,
                              task_folders=outlook_task_folders,
                              task_groups=outlook_task_groups,
                              microsoft_graph_outlook_user_tasks=outlook_tasks,
                              id10=inference_classification_id,
                              overrides=inference_classification_overrides,
                              id11=information_protection_id,
                              policy=information_protection_policy,
                              data_loss_prevention_policies=information_protection_data_loss_prevention_policies,
                              sensitivity_labels=information_protection_sensitivity_labels,
                              sensitivity_policy_settings=information_protection_sensitivity_policy_settings,
                              threat_assessment_requests=information_protection_threat_assessment_requests,
                              id12=analytics_id,
                              settings=analytics_settings,
                              activity_statistics=analytics_activity_statistics,
                              archive_folder=mailbox_settings_archive_folder,
                              automatic_replies_setting=mailbox_settings_automatic_replies_setting,
                              date_format=mailbox_settings_date_format,
                              delegate_meeting_message_delivery_options=mailbox_settings_delegate_meeting_message_delivery_options,
                              language=mailbox_settings_language,
                              time_format=mailbox_settings_time_format,
                              time_zone=mailbox_settings_time_zone,
                              user_purpose=mailbox_settings_user_purpose,
                              user_purpose_v2=mailbox_settings_user_purpose_v2,
                              working_hours=mailbox_settings_working_hours)


def users_user_update(client,
                      user_id,
                      id_=None,
                      deleted_date_time=None,
                      sign_in_activity=None,
                      account_enabled=None,
                      age_group=None,
                      assigned_licenses=None,
                      assigned_plans=None,
                      business_phones=None,
                      city=None,
                      company_name=None,
                      consent_provided_for_minor=None,
                      country=None,
                      created_date_time=None,
                      creation_type=None,
                      department=None,
                      device_keys=None,
                      display_name=None,
                      employee_hire_date=None,
                      employee_id=None,
                      employee_org_data=None,
                      employee_type=None,
                      external_user_state=None,
                      external_user_state_change_date_time=None,
                      fax_number=None,
                      given_name=None,
                      identities=None,
                      im_addresses=None,
                      info_catalogs=None,
                      is_resource_account=None,
                      job_title=None,
                      last_password_change_date_time=None,
                      legal_age_group_classification=None,
                      license_assignment_states=None,
                      mail=None,
                      mail_nickname=None,
                      mobile_phone=None,
                      office_location=None,
                      on_premises_distinguished_name=None,
                      on_premises_domain_name=None,
                      on_premises_extension_attributes=None,
                      on_premises_immutable_id=None,
                      on_premises_last_sync_date_time=None,
                      on_premises_provisioning_errors=None,
                      on_premises_sam_account_name=None,
                      on_premises_security_identifier=None,
                      on_premises_sync_enabled=None,
                      on_premises_user_principal_name=None,
                      other_mails=None,
                      password_policies=None,
                      password_profile=None,
                      postal_code=None,
                      preferred_data_location=None,
                      preferred_language=None,
                      provisioned_plans=None,
                      proxy_addresses=None,
                      refresh_tokens_valid_from_date_time=None,
                      show_in_address_list=None,
                      sign_in_sessions_valid_from_date_time=None,
                      state=None,
                      street_address=None,
                      surname=None,
                      usage_location=None,
                      user_principal_name=None,
                      user_type=None,
                      device_enrollment_limit=None,
                      about_me=None,
                      birthday=None,
                      hire_date=None,
                      interests=None,
                      my_site=None,
                      past_projects=None,
                      preferred_name=None,
                      responsibilities=None,
                      schools=None,
                      skills=None,
                      app_role_assignments=None,
                      created_objects=None,
                      direct_reports=None,
                      license_details=None,
                      manager=None,
                      member_of=None,
                      owned_devices=None,
                      owned_objects=None,
                      registered_devices=None,
                      scoped_role_member_of=None,
                      transitive_member_of=None,
                      calendar=None,
                      calendar_groups=None,
                      calendars=None,
                      calendar_view=None,
                      contact_folders=None,
                      contacts=None,
                      events=None,
                      joined_groups=None,
                      mail_folders=None,
                      messages=None,
                      people=None,
                      photo=None,
                      photos=None,
                      drive=None,
                      drives=None,
                      followed_sites=None,
                      extensions=None,
                      app_consent_requests_for_approval=None,
                      approvals=None,
                      pending_access_review_instances=None,
                      agreement_acceptances=None,
                      device_enrollment_configurations=None,
                      managed_devices=None,
                      managed_app_registrations=None,
                      windows_information_protection_device_registrations=None,
                      device_management_troubleshooting_events=None,
                      mobile_app_intent_and_states=None,
                      mobile_app_troubleshooting_events=None,
                      notifications=None,
                      insights=None,
                      activities=None,
                      devices=None,
                      online_meetings=None,
                      presence=None,
                      chats=None,
                      joined_teams=None,
                      todo_id=None,
                      todo_lists=None,
                      teamwork_id=None,
                      teamwork_installed_apps=None,
                      authentication_id=None,
                      authentication_email_methods=None,
                      authentication_fido2methods=None,
                      authentication_methods=None,
                      authentication_microsoft_authenticator_methods=None,
                      authentication_oath_methods=None,
                      authentication_operations=None,
                      authentication_passwordless_microsoft_authenticator_methods=None,
                      authentication_password_methods=None,
                      authentication_phone_methods=None,
                      authentication_security_question_methods=None,
                      authentication_temporary_access_pass_methods=None,
                      profile_id=None,
                      profile_account=None,
                      profile_addresses=None,
                      profile_anniversaries=None,
                      profile_awards=None,
                      profile_certifications=None,
                      profile_educational_activities=None,
                      profile_emails=None,
                      profile_interests=None,
                      profile_languages=None,
                      profile_names=None,
                      profile_notes=None,
                      profile_patents=None,
                      profile_phones=None,
                      profile_positions=None,
                      profile_projects=None,
                      profile_publications=None,
                      profile_skills=None,
                      profile_web_accounts=None,
                      profile_websites=None,
                      onenote_id=None,
                      onenote_notebooks=None,
                      onenote_operations=None,
                      onenote_pages=None,
                      onenote_resources=None,
                      onenote_section_groups=None,
                      onenote_sections=None,
                      settings_id=None,
                      settings_contribution_to_content_discovery_as_organization_disabled=None,
                      settings_contribution_to_content_discovery_disabled=None,
                      settings_shift_preferences_id=None,
                      settings_shift_preferences_created_date_time=None,
                      settings_shift_preferences_last_modified_date_time=None,
                      settings_shift_preferences_last_modified_by_application=None,
                      settings_shift_preferences_last_modified_by_device=None,
                      settings_shift_preferences_last_modified_by_user=None,
                      settings_shift_preferences_created_by_application=None,
                      settings_shift_preferences_created_by_device=None,
                      settings_shift_preferences_created_by_user=None,
                      settings_shift_preferences_availability=None,
                      settings_regional_and_language_settings_id=None,
                      settings_regional_and_language_settings_authoring_languages=None,
                      settings_regional_and_language_settings_default_display_language=None,
                      settings_regional_and_language_settings_default_regional_format=None,
                      settings_regional_and_language_settings_default_speech_input_language=None,
                      settings_regional_and_language_settings_default_translation_language=None,
                      settings_regional_and_language_settings_regional_format_overrides=None,
                      planner_id=None,
                      planner_favorite_plan_references=None,
                      planner_recent_plan_references=None,
                      planner_all=None,
                      planner_favorite_plans=None,
                      planner_plans=None,
                      planner_recent_plans=None,
                      planner_tasks=None,
                      outlook_id=None,
                      outlook_master_categories=None,
                      outlook_task_folders=None,
                      outlook_task_groups=None,
                      outlook_tasks=None,
                      inference_classification_id=None,
                      inference_classification_overrides=None,
                      information_protection_id=None,
                      information_protection_policy=None,
                      information_protection_data_loss_prevention_policies=None,
                      information_protection_sensitivity_labels=None,
                      information_protection_sensitivity_policy_settings=None,
                      information_protection_threat_assessment_requests=None,
                      analytics_id=None,
                      analytics_settings=None,
                      analytics_activity_statistics=None,
                      mailbox_settings_archive_folder=None,
                      mailbox_settings_automatic_replies_setting=None,
                      mailbox_settings_date_format=None,
                      mailbox_settings_delegate_meeting_message_delivery_options=None,
                      mailbox_settings_language=None,
                      mailbox_settings_time_format=None,
                      mailbox_settings_time_zone=None,
                      mailbox_settings_user_purpose=None,
                      mailbox_settings_user_purpose_v2=None,
                      mailbox_settings_working_hours=None):
    return client.update_user(user_id=user_id,
                              id=id_,
                              deleted_date_time=deleted_date_time,
                              sign_in_activity=sign_in_activity,
                              account_enabled=account_enabled,
                              age_group=age_group,
                              assigned_licenses=assigned_licenses,
                              assigned_plans=assigned_plans,
                              business_phones=business_phones,
                              city=city,
                              company_name=company_name,
                              consent_provided_for_minor=consent_provided_for_minor,
                              country=country,
                              created_date_time=created_date_time,
                              creation_type=creation_type,
                              department=department,
                              device_keys=device_keys,
                              display_name=display_name,
                              employee_hire_date=employee_hire_date,
                              employee_id=employee_id,
                              employee_org_data=employee_org_data,
                              employee_type=employee_type,
                              external_user_state=external_user_state,
                              external_user_state_change_date_time=external_user_state_change_date_time,
                              fax_number=fax_number,
                              given_name=given_name,
                              identities=identities,
                              im_addresses=im_addresses,
                              info_catalogs=info_catalogs,
                              is_resource_account=is_resource_account,
                              job_title=job_title,
                              last_password_change_date_time=last_password_change_date_time,
                              legal_age_group_classification=legal_age_group_classification,
                              license_assignment_states=license_assignment_states,
                              mail=mail,
                              mail_nickname=mail_nickname,
                              mobile_phone=mobile_phone,
                              office_location=office_location,
                              on_premises_distinguished_name=on_premises_distinguished_name,
                              on_premises_domain_name=on_premises_domain_name,
                              on_premises_extension_attributes=on_premises_extension_attributes,
                              on_premises_immutable_id=on_premises_immutable_id,
                              on_premises_last_sync_date_time=on_premises_last_sync_date_time,
                              on_premises_provisioning_errors=on_premises_provisioning_errors,
                              on_premises_sam_account_name=on_premises_sam_account_name,
                              on_premises_security_identifier=on_premises_security_identifier,
                              on_premises_sync_enabled=on_premises_sync_enabled,
                              on_premises_user_principal_name=on_premises_user_principal_name,
                              other_mails=other_mails,
                              password_policies=password_policies,
                              password_profile=password_profile,
                              postal_code=postal_code,
                              preferred_data_location=preferred_data_location,
                              preferred_language=preferred_language,
                              provisioned_plans=provisioned_plans,
                              proxy_addresses=proxy_addresses,
                              refresh_tokens_valid_from_date_time=refresh_tokens_valid_from_date_time,
                              show_in_address_list=show_in_address_list,
                              sign_in_sessions_valid_from_date_time=sign_in_sessions_valid_from_date_time,
                              state=state,
                              street_address=street_address,
                              surname=surname,
                              usage_location=usage_location,
                              user_principal_name=user_principal_name,
                              user_type=user_type,
                              device_enrollment_limit=device_enrollment_limit,
                              about_me=about_me,
                              birthday=birthday,
                              hire_date=hire_date,
                              interests=interests,
                              my_site=my_site,
                              past_projects=past_projects,
                              preferred_name=preferred_name,
                              responsibilities=responsibilities,
                              schools=schools,
                              skills=skills,
                              app_role_assignments=app_role_assignments,
                              created_objects=created_objects,
                              direct_reports=direct_reports,
                              license_details=license_details,
                              manager=manager,
                              member_of=member_of,
                              owned_devices=owned_devices,
                              owned_objects=owned_objects,
                              registered_devices=registered_devices,
                              scoped_role_member_of=scoped_role_member_of,
                              transitive_member_of=transitive_member_of,
                              calendar=calendar,
                              calendar_groups=calendar_groups,
                              calendars=calendars,
                              calendar_view=calendar_view,
                              contact_folders=contact_folders,
                              contacts=contacts,
                              events=events,
                              joined_groups=joined_groups,
                              mail_folders=mail_folders,
                              messages=messages,
                              people=people,
                              photo=photo,
                              photos=photos,
                              drive=drive,
                              drives=drives,
                              followed_sites=followed_sites,
                              extensions=extensions,
                              app_consent_requests_for_approval=app_consent_requests_for_approval,
                              approvals=approvals,
                              pending_access_review_instances=pending_access_review_instances,
                              agreement_acceptances=agreement_acceptances,
                              device_enrollment_configurations=device_enrollment_configurations,
                              managed_devices=managed_devices,
                              managed_app_registrations=managed_app_registrations,
                              windows_information_protection_device_registrations=windows_information_protection_device_registrations,
                              device_management_troubleshooting_events=device_management_troubleshooting_events,
                              mobile_app_intent_and_states=mobile_app_intent_and_states,
                              mobile_app_troubleshooting_events=mobile_app_troubleshooting_events,
                              notifications=notifications,
                              insights=insights,
                              activities=activities,
                              devices=devices,
                              online_meetings=online_meetings,
                              presence=presence,
                              chats=chats,
                              joined_teams=joined_teams,
                              microsoft_graph_entity_id=todo_id,
                              lists=todo_lists,
                              id1=teamwork_id,
                              installed_apps=teamwork_installed_apps,
                              id2=authentication_id,
                              email_methods=authentication_email_methods,
                              fido2_methods=authentication_fido2methods,
                              methods=authentication_methods,
                              microsoft_authenticator_methods=authentication_microsoft_authenticator_methods,
                              oath_methods=authentication_oath_methods,
                              operations=authentication_operations,
                              passwordless_microsoft_authenticator_methods=authentication_passwordless_microsoft_authenticator_methods,
                              password_methods=authentication_password_methods,
                              phone_methods=authentication_phone_methods,
                              security_question_methods=authentication_security_question_methods,
                              temporary_access_pass_methods=authentication_temporary_access_pass_methods,
                              id3=profile_id,
                              account=profile_account,
                              addresses=profile_addresses,
                              anniversaries=profile_anniversaries,
                              awards=profile_awards,
                              certifications=profile_certifications,
                              educational_activities=profile_educational_activities,
                              emails=profile_emails,
                              microsoft_graph_profile_interests=profile_interests,
                              languages=profile_languages,
                              names=profile_names,
                              notes=profile_notes,
                              patents=profile_patents,
                              phones=profile_phones,
                              positions=profile_positions,
                              projects=profile_projects,
                              publications=profile_publications,
                              microsoft_graph_profile_skills=profile_skills,
                              web_accounts=profile_web_accounts,
                              websites=profile_websites,
                              id4=onenote_id,
                              notebooks=onenote_notebooks,
                              microsoft_graph_onenote_operations=onenote_operations,
                              pages=onenote_pages,
                              resources=onenote_resources,
                              section_groups=onenote_section_groups,
                              sections=onenote_sections,
                              id5=settings_id,
                              contribution_to_content_discovery_as_organization_disabled=settings_contribution_to_content_discovery_as_organization_disabled,
                              contribution_to_content_discovery_disabled=settings_contribution_to_content_discovery_disabled,
                              id6=settings_shift_preferences_id,
                              microsoft_graph_change_tracked_entity_created_date_time_created_date_time=settings_shift_preferences_created_date_time,
                              last_modified_date_time=settings_shift_preferences_last_modified_date_time,
                              application=settings_shift_preferences_last_modified_by_application,
                              device=settings_shift_preferences_last_modified_by_device,
                              user=settings_shift_preferences_last_modified_by_user,
                              microsoft_graph_identity_application=settings_shift_preferences_created_by_application,
                              microsoft_graph_identity_device=settings_shift_preferences_created_by_device,
                              microsoft_graph_identity_user=settings_shift_preferences_created_by_user,
                              availability=settings_shift_preferences_availability,
                              id7=settings_regional_and_language_settings_id,
                              authoring_languages=settings_regional_and_language_settings_authoring_languages,
                              default_display_language=settings_regional_and_language_settings_default_display_language,
                              default_regional_format=settings_regional_and_language_settings_default_regional_format,
                              default_speech_input_language=settings_regional_and_language_settings_default_speech_input_language,
                              default_translation_language=settings_regional_and_language_settings_default_translation_language,
                              regional_format_overrides=settings_regional_and_language_settings_regional_format_overrides,
                              id8=planner_id,
                              favorite_plan_references=planner_favorite_plan_references,
                              recent_plan_references=planner_recent_plan_references,
                              all=planner_all,
                              favorite_plans=planner_favorite_plans,
                              plans=planner_plans,
                              recent_plans=planner_recent_plans,
                              tasks=planner_tasks,
                              id9=outlook_id,
                              master_categories=outlook_master_categories,
                              task_folders=outlook_task_folders,
                              task_groups=outlook_task_groups,
                              microsoft_graph_outlook_user_tasks=outlook_tasks,
                              id10=inference_classification_id,
                              overrides=inference_classification_overrides,
                              id11=information_protection_id,
                              policy=information_protection_policy,
                              data_loss_prevention_policies=information_protection_data_loss_prevention_policies,
                              sensitivity_labels=information_protection_sensitivity_labels,
                              sensitivity_policy_settings=information_protection_sensitivity_policy_settings,
                              threat_assessment_requests=information_protection_threat_assessment_requests,
                              id12=analytics_id,
                              settings=analytics_settings,
                              activity_statistics=analytics_activity_statistics,
                              archive_folder=mailbox_settings_archive_folder,
                              automatic_replies_setting=mailbox_settings_automatic_replies_setting,
                              date_format=mailbox_settings_date_format,
                              delegate_meeting_message_delivery_options=mailbox_settings_delegate_meeting_message_delivery_options,
                              language=mailbox_settings_language,
                              time_format=mailbox_settings_time_format,
                              time_zone=mailbox_settings_time_zone,
                              user_purpose=mailbox_settings_user_purpose,
                              user_purpose_v2=mailbox_settings_user_purpose_v2,
                              working_hours=mailbox_settings_working_hours)


def users_user_delete(client,
                      user_id,
                      if_match=None):
    return client.delete_user(user_id=user_id,
                              if_match=if_match)


def users_user_get(client,
                   user_id,
                   consistency_level=None,
                   select=None,
                   expand=None):
    return client.get_user(user_id=user_id,
                           consistency_level=consistency_level,
                           select=select,
                           expand=expand)


def users_user_delete(client,
                      user_id,
                      extension_id=None,
                      if_match=None,
                      license_details_id=None,
                      notification_id=None,
                      profile_photo_id=None):
    if user_id is not None and extension_id is not None:
        return client.delete_extension(user_id=user_id,
                                       extension_id=extension_id,
                                       if_match=if_match)
    elif user_id is not None and license_details_id is not None:
        return client.delete_license_detail(user_id=user_id,
                                            license_details_id=license_details_id,
                                            if_match=if_match)
    elif user_id is not None and notification_id is not None:
        return client.delete_notification(user_id=user_id,
                                          notification_id=notification_id,
                                          if_match=if_match)
    elif user_id is not None and profile_photo_id is not None:
        return client.delete_photo(user_id=user_id,
                                   profile_photo_id=profile_photo_id,
                                   if_match=if_match)
    elif user_id is not None:
        return client.delete_ref_manager(user_id=user_id,
                                         if_match=if_match)
    elif user_id is not None:
        return client.delete_outlook(user_id=user_id,
                                     if_match=if_match)
    elif user_id is not None:
        return client.delete_photo(user_id=user_id,
                                   if_match=if_match)
    elif user_id is not None:
        return client.delete_setting(user_id=user_id,
                                     if_match=if_match)
    return client.delete_todo(user_id=user_id,
                              if_match=if_match)


def users_user_create_extension(client,
                                user_id,
                                id_=None):
    return client.create_extension(user_id=user_id,
                                   id=id_)


def users_user_create_license_detail(client,
                                     user_id,
                                     id_=None,
                                     service_plans=None,
                                     sku_id=None,
                                     sku_part_number=None):
    return client.create_license_detail(user_id=user_id,
                                        id=id_,
                                        service_plans=service_plans,
                                        sku_id=sku_id,
                                        sku_part_number=sku_part_number)


def users_user_create_notification(client,
                                   user_id,
                                   id_=None,
                                   display_time_to_live=None,
                                   expiration_date_time=None,
                                   group_name=None,
                                   priority=None,
                                   target_host_name=None,
                                   target_policy=None,
                                   payload_raw_content=None,
                                   payload_visual_content=None):
    return client.create_notification(user_id=user_id,
                                      id=id_,
                                      display_time_to_live=display_time_to_live,
                                      expiration_date_time=expiration_date_time,
                                      group_name=group_name,
                                      priority=priority,
                                      target_host_name=target_host_name,
                                      target_policy=target_policy,
                                      raw_content=payload_raw_content,
                                      visual_content=payload_visual_content)


def users_user_create_photo(client,
                            user_id,
                            id_=None,
                            height=None,
                            width=None):
    return client.create_photo(user_id=user_id,
                               id=id_,
                               height=height,
                               width=width)


def users_user_create_ref_created_object(client,
                                         user_id,
                                         body):
    return client.create_ref_created_object(user_id=user_id,
                                            body=body)


def users_user_create_ref_direct_report(client,
                                        user_id,
                                        body):
    return client.create_ref_direct_report(user_id=user_id,
                                           body=body)


def users_user_create_ref_member_of(client,
                                    user_id,
                                    body):
    return client.create_ref_member_of(user_id=user_id,
                                       body=body)


def users_user_create_ref_owned_device(client,
                                       user_id,
                                       body):
    return client.create_ref_owned_device(user_id=user_id,
                                          body=body)


def users_user_create_ref_owned_object(client,
                                       user_id,
                                       body):
    return client.create_ref_owned_object(user_id=user_id,
                                          body=body)


def users_user_create_ref_registered_device(client,
                                            user_id,
                                            body):
    return client.create_ref_registered_device(user_id=user_id,
                                               body=body)


def users_user_create_ref_transitive_member_of(client,
                                               user_id,
                                               body):
    return client.create_ref_transitive_member_of(user_id=user_id,
                                                  body=body)


def users_user_get_extension(client,
                             user_id,
                             extension_id,
                             select=None,
                             expand=None):
    return client.get_extension(user_id=user_id,
                                extension_id=extension_id,
                                select=select,
                                expand=expand)


def users_user_get_license_detail(client,
                                  user_id,
                                  license_details_id,
                                  select=None,
                                  expand=None):
    return client.get_license_detail(user_id=user_id,
                                     license_details_id=license_details_id,
                                     select=select,
                                     expand=expand)


def users_user_get_manager(client,
                           user_id,
                           select=None,
                           expand=None):
    return client.get_manager(user_id=user_id,
                              select=select,
                              expand=expand)


def users_user_get_notification(client,
                                user_id,
                                notification_id,
                                select=None,
                                expand=None):
    return client.get_notification(user_id=user_id,
                                   notification_id=notification_id,
                                   select=select,
                                   expand=expand)


def users_user_get_outlook(client,
                           user_id,
                           select=None,
                           expand=None):
    return client.get_outlook(user_id=user_id,
                              select=select,
                              expand=expand)


def users_user_get_photo(client,
                         user_id,
                         profile_photo_id=None,
                         select=None,
                         expand=None):
    if user_id is not None and profile_photo_id is not None:
        return client.get_photo(user_id=user_id,
                                profile_photo_id=profile_photo_id,
                                select=select,
                                expand=expand)
    return client.get_photo(user_id=user_id,
                            select=select,
                            expand=expand)


def users_user_get_photo_content(client,
                                 user_id,
                                 profile_photo_id=None):
    if user_id is not None and profile_photo_id is not None:
        return client.get_photo_content(user_id=user_id,
                                        profile_photo_id=profile_photo_id)
    return client.get_photo_content(user_id=user_id)


def users_user_get_ref_manager(client,
                               user_id):
    return client.get_ref_manager(user_id=user_id)


def users_user_get_setting(client,
                           user_id,
                           select=None,
                           expand=None):
    return client.get_setting(user_id=user_id,
                              select=select,
                              expand=expand)


def users_user_get_todo(client,
                        user_id,
                        select=None,
                        expand=None):
    return client.get_todo(user_id=user_id,
                           select=select,
                           expand=expand)


def users_user_list_created_object(client,
                                   user_id,
                                   orderby=None,
                                   select=None,
                                   expand=None):
    return client.list_created_object(user_id=user_id,
                                      orderby=orderby,
                                      select=select,
                                      expand=expand)


def users_user_list_direct_report(client,
                                  user_id,
                                  orderby=None,
                                  select=None,
                                  expand=None):
    return client.list_direct_report(user_id=user_id,
                                     orderby=orderby,
                                     select=select,
                                     expand=expand)


def users_user_list_extension(client,
                              user_id,
                              orderby=None,
                              select=None,
                              expand=None):
    return client.list_extension(user_id=user_id,
                                 orderby=orderby,
                                 select=select,
                                 expand=expand)


def users_user_list_license_detail(client,
                                   user_id,
                                   orderby=None,
                                   select=None,
                                   expand=None):
    return client.list_license_detail(user_id=user_id,
                                      orderby=orderby,
                                      select=select,
                                      expand=expand)


def users_user_list_member_of(client,
                              user_id,
                              orderby=None,
                              select=None,
                              expand=None):
    return client.list_member_of(user_id=user_id,
                                 orderby=orderby,
                                 select=select,
                                 expand=expand)


def users_user_list_notification(client,
                                 user_id,
                                 orderby=None,
                                 select=None,
                                 expand=None):
    return client.list_notification(user_id=user_id,
                                    orderby=orderby,
                                    select=select,
                                    expand=expand)


def users_user_list_owned_device(client,
                                 user_id,
                                 orderby=None,
                                 select=None,
                                 expand=None):
    return client.list_owned_device(user_id=user_id,
                                    orderby=orderby,
                                    select=select,
                                    expand=expand)


def users_user_list_owned_object(client,
                                 user_id,
                                 orderby=None,
                                 select=None,
                                 expand=None):
    return client.list_owned_object(user_id=user_id,
                                    orderby=orderby,
                                    select=select,
                                    expand=expand)


def users_user_list_photo(client,
                          user_id,
                          orderby=None,
                          select=None,
                          expand=None):
    return client.list_photo(user_id=user_id,
                             orderby=orderby,
                             select=select,
                             expand=expand)


def users_user_list_ref_created_object(client,
                                       user_id,
                                       orderby=None):
    return client.list_ref_created_object(user_id=user_id,
                                          orderby=orderby)


def users_user_list_ref_direct_report(client,
                                      user_id,
                                      orderby=None):
    return client.list_ref_direct_report(user_id=user_id,
                                         orderby=orderby)


def users_user_list_ref_member_of(client,
                                  user_id,
                                  orderby=None):
    return client.list_ref_member_of(user_id=user_id,
                                     orderby=orderby)


def users_user_list_ref_owned_device(client,
                                     user_id,
                                     orderby=None):
    return client.list_ref_owned_device(user_id=user_id,
                                        orderby=orderby)


def users_user_list_ref_owned_object(client,
                                     user_id,
                                     orderby=None):
    return client.list_ref_owned_object(user_id=user_id,
                                        orderby=orderby)


def users_user_list_ref_registered_device(client,
                                          user_id,
                                          orderby=None):
    return client.list_ref_registered_device(user_id=user_id,
                                             orderby=orderby)


def users_user_list_ref_transitive_member_of(client,
                                             user_id,
                                             orderby=None):
    return client.list_ref_transitive_member_of(user_id=user_id,
                                                orderby=orderby)


def users_user_list_registered_device(client,
                                      user_id,
                                      orderby=None,
                                      select=None,
                                      expand=None):
    return client.list_registered_device(user_id=user_id,
                                         orderby=orderby,
                                         select=select,
                                         expand=expand)


def users_user_list_transitive_member_of(client,
                                         user_id,
                                         orderby=None,
                                         select=None,
                                         expand=None):
    return client.list_transitive_member_of(user_id=user_id,
                                            orderby=orderby,
                                            select=select,
                                            expand=expand)


def users_user_set_photo_content(client,
                                 user_id,
                                 data,
                                 profile_photo_id=None):
    if user_id is not None and profile_photo_id is not None and data is not None:
        return client.set_photo_content(user_id=user_id,
                                        profile_photo_id=profile_photo_id,
                                        data=data)
    return client.set_photo_content(user_id=user_id,
                                    data=data)


def users_user_set_ref_manager(client,
                               user_id,
                               body):
    return client.set_ref_manager(user_id=user_id,
                                  body=body)


def users_user_update_extension(client,
                                user_id,
                                extension_id,
                                id_=None):
    return client.update_extension(user_id=user_id,
                                   extension_id=extension_id,
                                   id=id_)


def users_user_update_license_detail(client,
                                     user_id,
                                     license_details_id,
                                     id_=None,
                                     service_plans=None,
                                     sku_id=None,
                                     sku_part_number=None):
    return client.update_license_detail(user_id=user_id,
                                        license_details_id=license_details_id,
                                        id=id_,
                                        service_plans=service_plans,
                                        sku_id=sku_id,
                                        sku_part_number=sku_part_number)


def users_user_update_notification(client,
                                   user_id,
                                   notification_id,
                                   id_=None,
                                   display_time_to_live=None,
                                   expiration_date_time=None,
                                   group_name=None,
                                   priority=None,
                                   target_host_name=None,
                                   target_policy=None,
                                   payload_raw_content=None,
                                   payload_visual_content=None):
    return client.update_notification(user_id=user_id,
                                      notification_id=notification_id,
                                      id=id_,
                                      display_time_to_live=display_time_to_live,
                                      expiration_date_time=expiration_date_time,
                                      group_name=group_name,
                                      priority=priority,
                                      target_host_name=target_host_name,
                                      target_policy=target_policy,
                                      raw_content=payload_raw_content,
                                      visual_content=payload_visual_content)


def users_user_update_outlook(client,
                              user_id,
                              id_=None,
                              master_categories=None,
                              task_folders=None,
                              task_groups=None,
                              tasks=None):
    return client.update_outlook(user_id=user_id,
                                 id=id_,
                                 master_categories=master_categories,
                                 task_folders=task_folders,
                                 task_groups=task_groups,
                                 tasks=tasks)


def users_user_update_photo(client,
                            user_id,
                            profile_photo_id=None,
                            id_=None,
                            height=None,
                            width=None):
    if user_id is not None and profile_photo_id is not None:
        return client.update_photo(user_id=user_id,
                                   profile_photo_id=profile_photo_id,
                                   id=id_,
                                   height=height,
                                   width=width)
    return client.update_photo(user_id=user_id,
                               id=id_,
                               height=height,
                               width=width)


def users_user_update_setting(client,
                              user_id,
                              id_=None,
                              contribution_to_content_discovery_as_organization_disabled=None,
                              contribution_to_content_discovery_disabled=None,
                              shift_preferences_id=None,
                              shift_preferences_created_date_time=None,
                              shift_preferences_last_modified_date_time=None,
                              shift_preferences_last_modified_by_application=None,
                              shift_preferences_last_modified_by_device=None,
                              shift_preferences_last_modified_by_user=None,
                              shift_preferences_created_by_application=None,
                              shift_preferences_created_by_device=None,
                              shift_preferences_created_by_user=None,
                              shift_preferences_availability=None,
                              regional_and_language_settings_id=None,
                              regional_and_language_settings_authoring_languages=None,
                              regional_and_language_settings_default_display_language=None,
                              regional_and_language_settings_default_regional_format=None,
                              regional_and_language_settings_default_speech_input_language=None,
                              regional_and_language_settings_default_translation_language=None,
                              regional_and_language_settings_regional_format_overrides=None):
    return client.update_setting(user_id=user_id,
                                 id=id_,
                                 contribution_to_content_discovery_as_organization_disabled=contribution_to_content_discovery_as_organization_disabled,
                                 contribution_to_content_discovery_disabled=contribution_to_content_discovery_disabled,
                                 microsoft_graph_entity_id=shift_preferences_id,
                                 created_date_time=shift_preferences_created_date_time,
                                 last_modified_date_time=shift_preferences_last_modified_date_time,
                                 application=shift_preferences_last_modified_by_application,
                                 device=shift_preferences_last_modified_by_device,
                                 user=shift_preferences_last_modified_by_user,
                                 microsoft_graph_identity_application=shift_preferences_created_by_application,
                                 microsoft_graph_identity_device=shift_preferences_created_by_device,
                                 microsoft_graph_identity_user=shift_preferences_created_by_user,
                                 availability=shift_preferences_availability,
                                 id1=regional_and_language_settings_id,
                                 authoring_languages=regional_and_language_settings_authoring_languages,
                                 default_display_language=regional_and_language_settings_default_display_language,
                                 default_regional_format=regional_and_language_settings_default_regional_format,
                                 default_speech_input_language=regional_and_language_settings_default_speech_input_language,
                                 default_translation_language=regional_and_language_settings_default_translation_language,
                                 regional_format_overrides=regional_and_language_settings_regional_format_overrides)


def users_user_update_todo(client,
                           user_id,
                           id_=None,
                           lists=None):
    return client.update_todo(user_id=user_id,
                              id=id_,
                              lists=lists)


def users_user_outlook_delete(client,
                              user_id,
                              outlook_category_id=None,
                              if_match=None,
                              outlook_task_folder_id=None,
                              outlook_task_group_id=None,
                              outlook_task_id=None):
    if user_id is not None and outlook_category_id is not None:
        return client.delete_master_category(user_id=user_id,
                                             outlook_category_id=outlook_category_id,
                                             if_match=if_match)
    elif user_id is not None and outlook_task_folder_id is not None:
        return client.delete_task_folder(user_id=user_id,
                                         outlook_task_folder_id=outlook_task_folder_id,
                                         if_match=if_match)
    elif user_id is not None and outlook_task_group_id is not None:
        return client.delete_task_group(user_id=user_id,
                                        outlook_task_group_id=outlook_task_group_id,
                                        if_match=if_match)
    return client.delete_task(user_id=user_id,
                              outlook_task_id=outlook_task_id,
                              if_match=if_match)


def users_user_outlook_create_master_category(client,
                                              user_id,
                                              id_=None,
                                              color=None,
                                              display_name=None):
    return client.create_master_category(user_id=user_id,
                                         id=id_,
                                         color=color,
                                         display_name=display_name)


def users_user_outlook_create_task(client,
                                   user_id,
                                   id_=None,
                                   categories=None,
                                   change_key=None,
                                   created_date_time=None,
                                   last_modified_date_time=None,
                                   assigned_to=None,
                                   body=None,
                                   completed_date_time=None,
                                   due_date_time=None,
                                   has_attachments=None,
                                   importance=None,
                                   is_reminder_on=None,
                                   owner=None,
                                   parent_folder_id=None,
                                   reminder_date_time=None,
                                   sensitivity=None,
                                   start_date_time=None,
                                   status=None,
                                   subject=None,
                                   attachments=None,
                                   multi_value_extended_properties=None,
                                   single_value_extended_properties=None,
                                   recurrence_pattern=None,
                                   recurrence_range=None):
    return client.create_task(user_id=user_id,
                              id=id_,
                              categories=categories,
                              change_key=change_key,
                              created_date_time=created_date_time,
                              last_modified_date_time=last_modified_date_time,
                              assigned_to=assigned_to,
                              body=body,
                              completed_date_time=completed_date_time,
                              due_date_time=due_date_time,
                              has_attachments=has_attachments,
                              importance=importance,
                              is_reminder_on=is_reminder_on,
                              owner=owner,
                              parent_folder_id=parent_folder_id,
                              reminder_date_time=reminder_date_time,
                              sensitivity=sensitivity,
                              start_date_time=start_date_time,
                              status=status,
                              subject=subject,
                              attachments=attachments,
                              multi_value_extended_properties=multi_value_extended_properties,
                              single_value_extended_properties=single_value_extended_properties,
                              pattern=recurrence_pattern,
                              range=recurrence_range)


def users_user_outlook_create_task_folder(client,
                                          user_id,
                                          id_=None,
                                          change_key=None,
                                          is_default_folder=None,
                                          name=None,
                                          parent_group_key=None,
                                          multi_value_extended_properties=None,
                                          single_value_extended_properties=None,
                                          tasks=None):
    return client.create_task_folder(user_id=user_id,
                                     id=id_,
                                     change_key=change_key,
                                     is_default_folder=is_default_folder,
                                     name=name,
                                     parent_group_key=parent_group_key,
                                     multi_value_extended_properties=multi_value_extended_properties,
                                     single_value_extended_properties=single_value_extended_properties,
                                     tasks=tasks)


def users_user_outlook_create_task_group(client,
                                         user_id,
                                         id_=None,
                                         change_key=None,
                                         group_key=None,
                                         is_default_group=None,
                                         name=None,
                                         task_folders=None):
    return client.create_task_group(user_id=user_id,
                                    id=id_,
                                    change_key=change_key,
                                    group_key=group_key,
                                    is_default_group=is_default_group,
                                    name=name,
                                    task_folders=task_folders)


def users_user_outlook_get_master_category(client,
                                           user_id,
                                           outlook_category_id,
                                           select=None,
                                           expand=None):
    return client.get_master_category(user_id=user_id,
                                      outlook_category_id=outlook_category_id,
                                      select=select,
                                      expand=expand)


def users_user_outlook_get_task(client,
                                user_id,
                                outlook_task_id,
                                select=None,
                                expand=None):
    return client.get_task(user_id=user_id,
                           outlook_task_id=outlook_task_id,
                           select=select,
                           expand=expand)


def users_user_outlook_get_task_folder(client,
                                       user_id,
                                       outlook_task_folder_id,
                                       select=None,
                                       expand=None):
    return client.get_task_folder(user_id=user_id,
                                  outlook_task_folder_id=outlook_task_folder_id,
                                  select=select,
                                  expand=expand)


def users_user_outlook_get_task_group(client,
                                      user_id,
                                      outlook_task_group_id,
                                      select=None,
                                      expand=None):
    return client.get_task_group(user_id=user_id,
                                 outlook_task_group_id=outlook_task_group_id,
                                 select=select,
                                 expand=expand)


def users_user_outlook_list_master_category(client,
                                            user_id,
                                            orderby=None,
                                            select=None,
                                            expand=None):
    return client.list_master_category(user_id=user_id,
                                       orderby=orderby,
                                       select=select,
                                       expand=expand)


def users_user_outlook_list_task(client,
                                 user_id,
                                 orderby=None,
                                 select=None,
                                 expand=None):
    return client.list_task(user_id=user_id,
                            orderby=orderby,
                            select=select,
                            expand=expand)


def users_user_outlook_list_task_folder(client,
                                        user_id,
                                        orderby=None,
                                        select=None,
                                        expand=None):
    return client.list_task_folder(user_id=user_id,
                                   orderby=orderby,
                                   select=select,
                                   expand=expand)


def users_user_outlook_list_task_group(client,
                                       user_id,
                                       orderby=None,
                                       select=None,
                                       expand=None):
    return client.list_task_group(user_id=user_id,
                                  orderby=orderby,
                                  select=select,
                                  expand=expand)


def users_user_outlook_update_master_category(client,
                                              user_id,
                                              outlook_category_id,
                                              id_=None,
                                              color=None,
                                              display_name=None):
    return client.update_master_category(user_id=user_id,
                                         outlook_category_id=outlook_category_id,
                                         id=id_,
                                         color=color,
                                         display_name=display_name)


def users_user_outlook_update_task(client,
                                   user_id,
                                   outlook_task_id,
                                   id_=None,
                                   categories=None,
                                   change_key=None,
                                   created_date_time=None,
                                   last_modified_date_time=None,
                                   assigned_to=None,
                                   body=None,
                                   completed_date_time=None,
                                   due_date_time=None,
                                   has_attachments=None,
                                   importance=None,
                                   is_reminder_on=None,
                                   owner=None,
                                   parent_folder_id=None,
                                   reminder_date_time=None,
                                   sensitivity=None,
                                   start_date_time=None,
                                   status=None,
                                   subject=None,
                                   attachments=None,
                                   multi_value_extended_properties=None,
                                   single_value_extended_properties=None,
                                   recurrence_pattern=None,
                                   recurrence_range=None):
    return client.update_task(user_id=user_id,
                              outlook_task_id=outlook_task_id,
                              id=id_,
                              categories=categories,
                              change_key=change_key,
                              created_date_time=created_date_time,
                              last_modified_date_time=last_modified_date_time,
                              assigned_to=assigned_to,
                              body=body,
                              completed_date_time=completed_date_time,
                              due_date_time=due_date_time,
                              has_attachments=has_attachments,
                              importance=importance,
                              is_reminder_on=is_reminder_on,
                              owner=owner,
                              parent_folder_id=parent_folder_id,
                              reminder_date_time=reminder_date_time,
                              sensitivity=sensitivity,
                              start_date_time=start_date_time,
                              status=status,
                              subject=subject,
                              attachments=attachments,
                              multi_value_extended_properties=multi_value_extended_properties,
                              single_value_extended_properties=single_value_extended_properties,
                              pattern=recurrence_pattern,
                              range=recurrence_range)


def users_user_outlook_update_task_folder(client,
                                          user_id,
                                          outlook_task_folder_id,
                                          id_=None,
                                          change_key=None,
                                          is_default_folder=None,
                                          name=None,
                                          parent_group_key=None,
                                          multi_value_extended_properties=None,
                                          single_value_extended_properties=None,
                                          tasks=None):
    return client.update_task_folder(user_id=user_id,
                                     outlook_task_folder_id=outlook_task_folder_id,
                                     id=id_,
                                     change_key=change_key,
                                     is_default_folder=is_default_folder,
                                     name=name,
                                     parent_group_key=parent_group_key,
                                     multi_value_extended_properties=multi_value_extended_properties,
                                     single_value_extended_properties=single_value_extended_properties,
                                     tasks=tasks)


def users_user_outlook_update_task_group(client,
                                         user_id,
                                         outlook_task_group_id,
                                         id_=None,
                                         change_key=None,
                                         group_key=None,
                                         is_default_group=None,
                                         name=None,
                                         task_folders=None):
    return client.update_task_group(user_id=user_id,
                                    outlook_task_group_id=outlook_task_group_id,
                                    id=id_,
                                    change_key=change_key,
                                    group_key=group_key,
                                    is_default_group=is_default_group,
                                    name=name,
                                    task_folders=task_folders)


def users_user_outlook_task_folder_delete(client,
                                          user_id,
                                          outlook_task_folder_id,
                                          multi_value_legacy_extended_property_id=None,
                                          if_match=None,
                                          single_value_legacy_extended_property_id=None,
                                          outlook_task_id=None):
    if user_id is not None and outlook_task_folder_id is not None and multi_value_legacy_extended_property_id is not None:
        return client.delete_multi_value_extended_property(user_id=user_id,
                                                           outlook_task_folder_id=outlook_task_folder_id,
                                                           multi_value_legacy_extended_property_id=multi_value_legacy_extended_property_id,
                                                           if_match=if_match)
    elif user_id is not None and outlook_task_folder_id is not None and single_value_legacy_extended_property_id is not None:
        return client.delete_single_value_extended_property(user_id=user_id,
                                                            outlook_task_folder_id=outlook_task_folder_id,
                                                            single_value_legacy_extended_property_id=single_value_legacy_extended_property_id,
                                                            if_match=if_match)
    return client.delete_task(user_id=user_id,
                              outlook_task_folder_id=outlook_task_folder_id,
                              outlook_task_id=outlook_task_id,
                              if_match=if_match)


def users_user_outlook_task_folder_create_multi_value_extended_property(client,
                                                                        user_id,
                                                                        outlook_task_folder_id,
                                                                        id_=None,
                                                                        value=None):
    return client.create_multi_value_extended_property(user_id=user_id,
                                                       outlook_task_folder_id=outlook_task_folder_id,
                                                       id=id_,
                                                       value=value)


def users_user_outlook_task_folder_create_single_value_extended_property(client,
                                                                         user_id,
                                                                         outlook_task_folder_id,
                                                                         id_=None,
                                                                         value=None):
    return client.create_single_value_extended_property(user_id=user_id,
                                                        outlook_task_folder_id=outlook_task_folder_id,
                                                        id=id_,
                                                        value=value)


def users_user_outlook_task_folder_create_task(client,
                                               user_id,
                                               outlook_task_folder_id,
                                               id_=None,
                                               categories=None,
                                               change_key=None,
                                               created_date_time=None,
                                               last_modified_date_time=None,
                                               assigned_to=None,
                                               body=None,
                                               completed_date_time=None,
                                               due_date_time=None,
                                               has_attachments=None,
                                               importance=None,
                                               is_reminder_on=None,
                                               owner=None,
                                               parent_folder_id=None,
                                               reminder_date_time=None,
                                               sensitivity=None,
                                               start_date_time=None,
                                               status=None,
                                               subject=None,
                                               attachments=None,
                                               multi_value_extended_properties=None,
                                               single_value_extended_properties=None,
                                               recurrence_pattern=None,
                                               recurrence_range=None):
    return client.create_task(user_id=user_id,
                              outlook_task_folder_id=outlook_task_folder_id,
                              id=id_,
                              categories=categories,
                              change_key=change_key,
                              created_date_time=created_date_time,
                              last_modified_date_time=last_modified_date_time,
                              assigned_to=assigned_to,
                              body=body,
                              completed_date_time=completed_date_time,
                              due_date_time=due_date_time,
                              has_attachments=has_attachments,
                              importance=importance,
                              is_reminder_on=is_reminder_on,
                              owner=owner,
                              parent_folder_id=parent_folder_id,
                              reminder_date_time=reminder_date_time,
                              sensitivity=sensitivity,
                              start_date_time=start_date_time,
                              status=status,
                              subject=subject,
                              attachments=attachments,
                              multi_value_extended_properties=multi_value_extended_properties,
                              single_value_extended_properties=single_value_extended_properties,
                              pattern=recurrence_pattern,
                              range=recurrence_range)


def users_user_outlook_task_folder_get_multi_value_extended_property(client,
                                                                     user_id,
                                                                     outlook_task_folder_id,
                                                                     multi_value_legacy_extended_property_id,
                                                                     select=None,
                                                                     expand=None):
    return client.get_multi_value_extended_property(user_id=user_id,
                                                    outlook_task_folder_id=outlook_task_folder_id,
                                                    multi_value_legacy_extended_property_id=multi_value_legacy_extended_property_id,
                                                    select=select,
                                                    expand=expand)


def users_user_outlook_task_folder_get_single_value_extended_property(client,
                                                                      user_id,
                                                                      outlook_task_folder_id,
                                                                      single_value_legacy_extended_property_id,
                                                                      select=None,
                                                                      expand=None):
    return client.get_single_value_extended_property(user_id=user_id,
                                                     outlook_task_folder_id=outlook_task_folder_id,
                                                     single_value_legacy_extended_property_id=single_value_legacy_extended_property_id,
                                                     select=select,
                                                     expand=expand)


def users_user_outlook_task_folder_get_task(client,
                                            user_id,
                                            outlook_task_folder_id,
                                            outlook_task_id,
                                            select=None,
                                            expand=None):
    return client.get_task(user_id=user_id,
                           outlook_task_folder_id=outlook_task_folder_id,
                           outlook_task_id=outlook_task_id,
                           select=select,
                           expand=expand)


def users_user_outlook_task_folder_list_multi_value_extended_property(client,
                                                                      user_id,
                                                                      outlook_task_folder_id,
                                                                      orderby=None,
                                                                      select=None,
                                                                      expand=None):
    return client.list_multi_value_extended_property(user_id=user_id,
                                                     outlook_task_folder_id=outlook_task_folder_id,
                                                     orderby=orderby,
                                                     select=select,
                                                     expand=expand)


def users_user_outlook_task_folder_list_single_value_extended_property(client,
                                                                       user_id,
                                                                       outlook_task_folder_id,
                                                                       orderby=None,
                                                                       select=None,
                                                                       expand=None):
    return client.list_single_value_extended_property(user_id=user_id,
                                                      outlook_task_folder_id=outlook_task_folder_id,
                                                      orderby=orderby,
                                                      select=select,
                                                      expand=expand)


def users_user_outlook_task_folder_list_task(client,
                                             user_id,
                                             outlook_task_folder_id,
                                             orderby=None,
                                             select=None,
                                             expand=None):
    return client.list_task(user_id=user_id,
                            outlook_task_folder_id=outlook_task_folder_id,
                            orderby=orderby,
                            select=select,
                            expand=expand)


def users_user_outlook_task_folder_update_multi_value_extended_property(client,
                                                                        user_id,
                                                                        outlook_task_folder_id,
                                                                        multi_value_legacy_extended_property_id,
                                                                        id_=None,
                                                                        value=None):
    return client.update_multi_value_extended_property(user_id=user_id,
                                                       outlook_task_folder_id=outlook_task_folder_id,
                                                       multi_value_legacy_extended_property_id=multi_value_legacy_extended_property_id,
                                                       id=id_,
                                                       value=value)


def users_user_outlook_task_folder_update_single_value_extended_property(client,
                                                                         user_id,
                                                                         outlook_task_folder_id,
                                                                         single_value_legacy_extended_property_id,
                                                                         id_=None,
                                                                         value=None):
    return client.update_single_value_extended_property(user_id=user_id,
                                                        outlook_task_folder_id=outlook_task_folder_id,
                                                        single_value_legacy_extended_property_id=single_value_legacy_extended_property_id,
                                                        id=id_,
                                                        value=value)


def users_user_outlook_task_folder_update_task(client,
                                               user_id,
                                               outlook_task_folder_id,
                                               outlook_task_id,
                                               id_=None,
                                               categories=None,
                                               change_key=None,
                                               created_date_time=None,
                                               last_modified_date_time=None,
                                               assigned_to=None,
                                               body=None,
                                               completed_date_time=None,
                                               due_date_time=None,
                                               has_attachments=None,
                                               importance=None,
                                               is_reminder_on=None,
                                               owner=None,
                                               parent_folder_id=None,
                                               reminder_date_time=None,
                                               sensitivity=None,
                                               start_date_time=None,
                                               status=None,
                                               subject=None,
                                               attachments=None,
                                               multi_value_extended_properties=None,
                                               single_value_extended_properties=None,
                                               recurrence_pattern=None,
                                               recurrence_range=None):
    return client.update_task(user_id=user_id,
                              outlook_task_folder_id=outlook_task_folder_id,
                              outlook_task_id=outlook_task_id,
                              id=id_,
                              categories=categories,
                              change_key=change_key,
                              created_date_time=created_date_time,
                              last_modified_date_time=last_modified_date_time,
                              assigned_to=assigned_to,
                              body=body,
                              completed_date_time=completed_date_time,
                              due_date_time=due_date_time,
                              has_attachments=has_attachments,
                              importance=importance,
                              is_reminder_on=is_reminder_on,
                              owner=owner,
                              parent_folder_id=parent_folder_id,
                              reminder_date_time=reminder_date_time,
                              sensitivity=sensitivity,
                              start_date_time=start_date_time,
                              status=status,
                              subject=subject,
                              attachments=attachments,
                              multi_value_extended_properties=multi_value_extended_properties,
                              single_value_extended_properties=single_value_extended_properties,
                              pattern=recurrence_pattern,
                              range=recurrence_range)


def users_user_outlook_task_folder_task_delete(client,
                                               user_id,
                                               outlook_task_folder_id,
                                               outlook_task_id,
                                               attachment_id=None,
                                               if_match=None,
                                               multi_value_legacy_extended_property_id=None,
                                               single_value_legacy_extended_property_id=None):
    if user_id is not None and outlook_task_folder_id is not None and outlook_task_id is not None and attachment_id is not None:
        return client.delete_attachment(user_id=user_id,
                                        outlook_task_folder_id=outlook_task_folder_id,
                                        outlook_task_id=outlook_task_id,
                                        attachment_id=attachment_id,
                                        if_match=if_match)
    elif user_id is not None and outlook_task_folder_id is not None and outlook_task_id is not None and multi_value_legacy_extended_property_id is not None:
        return client.delete_multi_value_extended_property(user_id=user_id,
                                                           outlook_task_folder_id=outlook_task_folder_id,
                                                           outlook_task_id=outlook_task_id,
                                                           multi_value_legacy_extended_property_id=multi_value_legacy_extended_property_id,
                                                           if_match=if_match)
    return client.delete_single_value_extended_property(user_id=user_id,
                                                        outlook_task_folder_id=outlook_task_folder_id,
                                                        outlook_task_id=outlook_task_id,
                                                        single_value_legacy_extended_property_id=single_value_legacy_extended_property_id,
                                                        if_match=if_match)


def users_user_outlook_task_folder_task_create_attachment(client,
                                                          user_id,
                                                          outlook_task_folder_id,
                                                          outlook_task_id,
                                                          content_type,
                                                          id_=None,
                                                          is_inline=None,
                                                          last_modified_date_time=None,
                                                          name=None,
                                                          size=None):
    return client.create_attachment(user_id=user_id,
                                    outlook_task_folder_id=outlook_task_folder_id,
                                    outlook_task_id=outlook_task_id,
                                    id=id_,
                                    content_type_parameter=content_type,
                                    is_inline=is_inline,
                                    last_modified_date_time=last_modified_date_time,
                                    name=name,
                                    size=size)


def users_user_outlook_task_folder_task_create_multi_value_extended_property(client,
                                                                             user_id,
                                                                             outlook_task_folder_id,
                                                                             outlook_task_id,
                                                                             id_=None,
                                                                             value=None):
    return client.create_multi_value_extended_property(user_id=user_id,
                                                       outlook_task_folder_id=outlook_task_folder_id,
                                                       outlook_task_id=outlook_task_id,
                                                       id=id_,
                                                       value=value)


def users_user_outlook_task_folder_task_create_single_value_extended_property(client,
                                                                              user_id,
                                                                              outlook_task_folder_id,
                                                                              outlook_task_id,
                                                                              id_=None,
                                                                              value=None):
    return client.create_single_value_extended_property(user_id=user_id,
                                                        outlook_task_folder_id=outlook_task_folder_id,
                                                        outlook_task_id=outlook_task_id,
                                                        id=id_,
                                                        value=value)


def users_user_outlook_task_folder_task_get_attachment(client,
                                                       user_id,
                                                       outlook_task_folder_id,
                                                       outlook_task_id,
                                                       attachment_id,
                                                       select=None,
                                                       expand=None):
    return client.get_attachment(user_id=user_id,
                                 outlook_task_folder_id=outlook_task_folder_id,
                                 outlook_task_id=outlook_task_id,
                                 attachment_id=attachment_id,
                                 select=select,
                                 expand=expand)


def users_user_outlook_task_folder_task_get_multi_value_extended_property(client,
                                                                          user_id,
                                                                          outlook_task_folder_id,
                                                                          outlook_task_id,
                                                                          multi_value_legacy_extended_property_id,
                                                                          select=None,
                                                                          expand=None):
    return client.get_multi_value_extended_property(user_id=user_id,
                                                    outlook_task_folder_id=outlook_task_folder_id,
                                                    outlook_task_id=outlook_task_id,
                                                    multi_value_legacy_extended_property_id=multi_value_legacy_extended_property_id,
                                                    select=select,
                                                    expand=expand)


def users_user_outlook_task_folder_task_get_single_value_extended_property(client,
                                                                           user_id,
                                                                           outlook_task_folder_id,
                                                                           outlook_task_id,
                                                                           single_value_legacy_extended_property_id,
                                                                           select=None,
                                                                           expand=None):
    return client.get_single_value_extended_property(user_id=user_id,
                                                     outlook_task_folder_id=outlook_task_folder_id,
                                                     outlook_task_id=outlook_task_id,
                                                     single_value_legacy_extended_property_id=single_value_legacy_extended_property_id,
                                                     select=select,
                                                     expand=expand)


def users_user_outlook_task_folder_task_list_attachment(client,
                                                        user_id,
                                                        outlook_task_folder_id,
                                                        outlook_task_id,
                                                        orderby=None,
                                                        select=None,
                                                        expand=None):
    return client.list_attachment(user_id=user_id,
                                  outlook_task_folder_id=outlook_task_folder_id,
                                  outlook_task_id=outlook_task_id,
                                  orderby=orderby,
                                  select=select,
                                  expand=expand)


def users_user_outlook_task_folder_task_list_multi_value_extended_property(client,
                                                                           user_id,
                                                                           outlook_task_folder_id,
                                                                           outlook_task_id,
                                                                           orderby=None,
                                                                           select=None,
                                                                           expand=None):
    return client.list_multi_value_extended_property(user_id=user_id,
                                                     outlook_task_folder_id=outlook_task_folder_id,
                                                     outlook_task_id=outlook_task_id,
                                                     orderby=orderby,
                                                     select=select,
                                                     expand=expand)


def users_user_outlook_task_folder_task_list_single_value_extended_property(client,
                                                                            user_id,
                                                                            outlook_task_folder_id,
                                                                            outlook_task_id,
                                                                            orderby=None,
                                                                            select=None,
                                                                            expand=None):
    return client.list_single_value_extended_property(user_id=user_id,
                                                      outlook_task_folder_id=outlook_task_folder_id,
                                                      outlook_task_id=outlook_task_id,
                                                      orderby=orderby,
                                                      select=select,
                                                      expand=expand)


def users_user_outlook_task_folder_task_update_attachment(client,
                                                          user_id,
                                                          outlook_task_folder_id,
                                                          outlook_task_id,
                                                          attachment_id,
                                                          content_type,
                                                          id_=None,
                                                          is_inline=None,
                                                          last_modified_date_time=None,
                                                          name=None,
                                                          size=None):
    return client.update_attachment(user_id=user_id,
                                    outlook_task_folder_id=outlook_task_folder_id,
                                    outlook_task_id=outlook_task_id,
                                    attachment_id=attachment_id,
                                    id=id_,
                                    content_type_parameter=content_type,
                                    is_inline=is_inline,
                                    last_modified_date_time=last_modified_date_time,
                                    name=name,
                                    size=size)


def users_user_outlook_task_folder_task_update_multi_value_extended_property(client,
                                                                             user_id,
                                                                             outlook_task_folder_id,
                                                                             outlook_task_id,
                                                                             multi_value_legacy_extended_property_id,
                                                                             id_=None,
                                                                             value=None):
    return client.update_multi_value_extended_property(user_id=user_id,
                                                       outlook_task_folder_id=outlook_task_folder_id,
                                                       outlook_task_id=outlook_task_id,
                                                       multi_value_legacy_extended_property_id=multi_value_legacy_extended_property_id,
                                                       id=id_,
                                                       value=value)


def users_user_outlook_task_folder_task_update_single_value_extended_property(client,
                                                                              user_id,
                                                                              outlook_task_folder_id,
                                                                              outlook_task_id,
                                                                              single_value_legacy_extended_property_id,
                                                                              id_=None,
                                                                              value=None):
    return client.update_single_value_extended_property(user_id=user_id,
                                                        outlook_task_folder_id=outlook_task_folder_id,
                                                        outlook_task_id=outlook_task_id,
                                                        single_value_legacy_extended_property_id=single_value_legacy_extended_property_id,
                                                        id=id_,
                                                        value=value)


def users_user_outlook_task_group_delete(client,
                                         user_id,
                                         outlook_task_group_id,
                                         outlook_task_folder_id,
                                         if_match=None):
    return client.delete_task_folder(user_id=user_id,
                                     outlook_task_group_id=outlook_task_group_id,
                                     outlook_task_folder_id=outlook_task_folder_id,
                                     if_match=if_match)


def users_user_outlook_task_group_create_task_folder(client,
                                                     user_id,
                                                     outlook_task_group_id,
                                                     id_=None,
                                                     change_key=None,
                                                     is_default_folder=None,
                                                     name=None,
                                                     parent_group_key=None,
                                                     multi_value_extended_properties=None,
                                                     single_value_extended_properties=None,
                                                     tasks=None):
    return client.create_task_folder(user_id=user_id,
                                     outlook_task_group_id=outlook_task_group_id,
                                     id=id_,
                                     change_key=change_key,
                                     is_default_folder=is_default_folder,
                                     name=name,
                                     parent_group_key=parent_group_key,
                                     multi_value_extended_properties=multi_value_extended_properties,
                                     single_value_extended_properties=single_value_extended_properties,
                                     tasks=tasks)


def users_user_outlook_task_group_get_task_folder(client,
                                                  user_id,
                                                  outlook_task_group_id,
                                                  outlook_task_folder_id,
                                                  select=None,
                                                  expand=None):
    return client.get_task_folder(user_id=user_id,
                                  outlook_task_group_id=outlook_task_group_id,
                                  outlook_task_folder_id=outlook_task_folder_id,
                                  select=select,
                                  expand=expand)


def users_user_outlook_task_group_list_task_folder(client,
                                                   user_id,
                                                   outlook_task_group_id,
                                                   orderby=None,
                                                   select=None,
                                                   expand=None):
    return client.list_task_folder(user_id=user_id,
                                   outlook_task_group_id=outlook_task_group_id,
                                   orderby=orderby,
                                   select=select,
                                   expand=expand)


def users_user_outlook_task_group_update_task_folder(client,
                                                     user_id,
                                                     outlook_task_group_id,
                                                     outlook_task_folder_id,
                                                     id_=None,
                                                     change_key=None,
                                                     is_default_folder=None,
                                                     name=None,
                                                     parent_group_key=None,
                                                     multi_value_extended_properties=None,
                                                     single_value_extended_properties=None,
                                                     tasks=None):
    return client.update_task_folder(user_id=user_id,
                                     outlook_task_group_id=outlook_task_group_id,
                                     outlook_task_folder_id=outlook_task_folder_id,
                                     id=id_,
                                     change_key=change_key,
                                     is_default_folder=is_default_folder,
                                     name=name,
                                     parent_group_key=parent_group_key,
                                     multi_value_extended_properties=multi_value_extended_properties,
                                     single_value_extended_properties=single_value_extended_properties,
                                     tasks=tasks)


def users_user_outlook_task_group_task_folder_delete(client,
                                                     user_id,
                                                     outlook_task_group_id,
                                                     outlook_task_folder_id,
                                                     multi_value_legacy_extended_property_id=None,
                                                     if_match=None,
                                                     single_value_legacy_extended_property_id=None,
                                                     outlook_task_id=None):
    if user_id is not None and outlook_task_group_id is not None and outlook_task_folder_id is not None and multi_value_legacy_extended_property_id is not None:
        return client.delete_multi_value_extended_property(user_id=user_id,
                                                           outlook_task_group_id=outlook_task_group_id,
                                                           outlook_task_folder_id=outlook_task_folder_id,
                                                           multi_value_legacy_extended_property_id=multi_value_legacy_extended_property_id,
                                                           if_match=if_match)
    elif user_id is not None and outlook_task_group_id is not None and outlook_task_folder_id is not None and single_value_legacy_extended_property_id is not None:
        return client.delete_single_value_extended_property(user_id=user_id,
                                                            outlook_task_group_id=outlook_task_group_id,
                                                            outlook_task_folder_id=outlook_task_folder_id,
                                                            single_value_legacy_extended_property_id=single_value_legacy_extended_property_id,
                                                            if_match=if_match)
    return client.delete_task(user_id=user_id,
                              outlook_task_group_id=outlook_task_group_id,
                              outlook_task_folder_id=outlook_task_folder_id,
                              outlook_task_id=outlook_task_id,
                              if_match=if_match)


def users_user_outlook_task_group_task_folder_create_multi_value_extended_property(client,
                                                                                   user_id,
                                                                                   outlook_task_group_id,
                                                                                   outlook_task_folder_id,
                                                                                   id_=None,
                                                                                   value=None):
    return client.create_multi_value_extended_property(user_id=user_id,
                                                       outlook_task_group_id=outlook_task_group_id,
                                                       outlook_task_folder_id=outlook_task_folder_id,
                                                       id=id_,
                                                       value=value)


def users_user_outlook_task_group_task_folder_create_single_value_extended_property(client,
                                                                                    user_id,
                                                                                    outlook_task_group_id,
                                                                                    outlook_task_folder_id,
                                                                                    id_=None,
                                                                                    value=None):
    return client.create_single_value_extended_property(user_id=user_id,
                                                        outlook_task_group_id=outlook_task_group_id,
                                                        outlook_task_folder_id=outlook_task_folder_id,
                                                        id=id_,
                                                        value=value)


def users_user_outlook_task_group_task_folder_create_task(client,
                                                          user_id,
                                                          outlook_task_group_id,
                                                          outlook_task_folder_id,
                                                          id_=None,
                                                          categories=None,
                                                          change_key=None,
                                                          created_date_time=None,
                                                          last_modified_date_time=None,
                                                          assigned_to=None,
                                                          body=None,
                                                          completed_date_time=None,
                                                          due_date_time=None,
                                                          has_attachments=None,
                                                          importance=None,
                                                          is_reminder_on=None,
                                                          owner=None,
                                                          parent_folder_id=None,
                                                          reminder_date_time=None,
                                                          sensitivity=None,
                                                          start_date_time=None,
                                                          status=None,
                                                          subject=None,
                                                          attachments=None,
                                                          multi_value_extended_properties=None,
                                                          single_value_extended_properties=None,
                                                          recurrence_pattern=None,
                                                          recurrence_range=None):
    return client.create_task(user_id=user_id,
                              outlook_task_group_id=outlook_task_group_id,
                              outlook_task_folder_id=outlook_task_folder_id,
                              id=id_,
                              categories=categories,
                              change_key=change_key,
                              created_date_time=created_date_time,
                              last_modified_date_time=last_modified_date_time,
                              assigned_to=assigned_to,
                              body=body,
                              completed_date_time=completed_date_time,
                              due_date_time=due_date_time,
                              has_attachments=has_attachments,
                              importance=importance,
                              is_reminder_on=is_reminder_on,
                              owner=owner,
                              parent_folder_id=parent_folder_id,
                              reminder_date_time=reminder_date_time,
                              sensitivity=sensitivity,
                              start_date_time=start_date_time,
                              status=status,
                              subject=subject,
                              attachments=attachments,
                              multi_value_extended_properties=multi_value_extended_properties,
                              single_value_extended_properties=single_value_extended_properties,
                              pattern=recurrence_pattern,
                              range=recurrence_range)


def users_user_outlook_task_group_task_folder_get_multi_value_extended_property(client,
                                                                                user_id,
                                                                                outlook_task_group_id,
                                                                                outlook_task_folder_id,
                                                                                multi_value_legacy_extended_property_id,
                                                                                select=None,
                                                                                expand=None):
    return client.get_multi_value_extended_property(user_id=user_id,
                                                    outlook_task_group_id=outlook_task_group_id,
                                                    outlook_task_folder_id=outlook_task_folder_id,
                                                    multi_value_legacy_extended_property_id=multi_value_legacy_extended_property_id,
                                                    select=select,
                                                    expand=expand)


def users_user_outlook_task_group_task_folder_get_single_value_extended_property(client,
                                                                                 user_id,
                                                                                 outlook_task_group_id,
                                                                                 outlook_task_folder_id,
                                                                                 single_value_legacy_extended_property_id,
                                                                                 select=None,
                                                                                 expand=None):
    return client.get_single_value_extended_property(user_id=user_id,
                                                     outlook_task_group_id=outlook_task_group_id,
                                                     outlook_task_folder_id=outlook_task_folder_id,
                                                     single_value_legacy_extended_property_id=single_value_legacy_extended_property_id,
                                                     select=select,
                                                     expand=expand)


def users_user_outlook_task_group_task_folder_get_task(client,
                                                       user_id,
                                                       outlook_task_group_id,
                                                       outlook_task_folder_id,
                                                       outlook_task_id,
                                                       select=None,
                                                       expand=None):
    return client.get_task(user_id=user_id,
                           outlook_task_group_id=outlook_task_group_id,
                           outlook_task_folder_id=outlook_task_folder_id,
                           outlook_task_id=outlook_task_id,
                           select=select,
                           expand=expand)


def users_user_outlook_task_group_task_folder_list_multi_value_extended_property(client,
                                                                                 user_id,
                                                                                 outlook_task_group_id,
                                                                                 outlook_task_folder_id,
                                                                                 orderby=None,
                                                                                 select=None,
                                                                                 expand=None):
    return client.list_multi_value_extended_property(user_id=user_id,
                                                     outlook_task_group_id=outlook_task_group_id,
                                                     outlook_task_folder_id=outlook_task_folder_id,
                                                     orderby=orderby,
                                                     select=select,
                                                     expand=expand)


def users_user_outlook_task_group_task_folder_list_single_value_extended_property(client,
                                                                                  user_id,
                                                                                  outlook_task_group_id,
                                                                                  outlook_task_folder_id,
                                                                                  orderby=None,
                                                                                  select=None,
                                                                                  expand=None):
    return client.list_single_value_extended_property(user_id=user_id,
                                                      outlook_task_group_id=outlook_task_group_id,
                                                      outlook_task_folder_id=outlook_task_folder_id,
                                                      orderby=orderby,
                                                      select=select,
                                                      expand=expand)


def users_user_outlook_task_group_task_folder_list_task(client,
                                                        user_id,
                                                        outlook_task_group_id,
                                                        outlook_task_folder_id,
                                                        orderby=None,
                                                        select=None,
                                                        expand=None):
    return client.list_task(user_id=user_id,
                            outlook_task_group_id=outlook_task_group_id,
                            outlook_task_folder_id=outlook_task_folder_id,
                            orderby=orderby,
                            select=select,
                            expand=expand)


def users_user_outlook_task_group_task_folder_update_multi_value_extended_property(client,
                                                                                   user_id,
                                                                                   outlook_task_group_id,
                                                                                   outlook_task_folder_id,
                                                                                   multi_value_legacy_extended_property_id,
                                                                                   id_=None,
                                                                                   value=None):
    return client.update_multi_value_extended_property(user_id=user_id,
                                                       outlook_task_group_id=outlook_task_group_id,
                                                       outlook_task_folder_id=outlook_task_folder_id,
                                                       multi_value_legacy_extended_property_id=multi_value_legacy_extended_property_id,
                                                       id=id_,
                                                       value=value)


def users_user_outlook_task_group_task_folder_update_single_value_extended_property(client,
                                                                                    user_id,
                                                                                    outlook_task_group_id,
                                                                                    outlook_task_folder_id,
                                                                                    single_value_legacy_extended_property_id,
                                                                                    id_=None,
                                                                                    value=None):
    return client.update_single_value_extended_property(user_id=user_id,
                                                        outlook_task_group_id=outlook_task_group_id,
                                                        outlook_task_folder_id=outlook_task_folder_id,
                                                        single_value_legacy_extended_property_id=single_value_legacy_extended_property_id,
                                                        id=id_,
                                                        value=value)


def users_user_outlook_task_group_task_folder_update_task(client,
                                                          user_id,
                                                          outlook_task_group_id,
                                                          outlook_task_folder_id,
                                                          outlook_task_id,
                                                          id_=None,
                                                          categories=None,
                                                          change_key=None,
                                                          created_date_time=None,
                                                          last_modified_date_time=None,
                                                          assigned_to=None,
                                                          body=None,
                                                          completed_date_time=None,
                                                          due_date_time=None,
                                                          has_attachments=None,
                                                          importance=None,
                                                          is_reminder_on=None,
                                                          owner=None,
                                                          parent_folder_id=None,
                                                          reminder_date_time=None,
                                                          sensitivity=None,
                                                          start_date_time=None,
                                                          status=None,
                                                          subject=None,
                                                          attachments=None,
                                                          multi_value_extended_properties=None,
                                                          single_value_extended_properties=None,
                                                          recurrence_pattern=None,
                                                          recurrence_range=None):
    return client.update_task(user_id=user_id,
                              outlook_task_group_id=outlook_task_group_id,
                              outlook_task_folder_id=outlook_task_folder_id,
                              outlook_task_id=outlook_task_id,
                              id=id_,
                              categories=categories,
                              change_key=change_key,
                              created_date_time=created_date_time,
                              last_modified_date_time=last_modified_date_time,
                              assigned_to=assigned_to,
                              body=body,
                              completed_date_time=completed_date_time,
                              due_date_time=due_date_time,
                              has_attachments=has_attachments,
                              importance=importance,
                              is_reminder_on=is_reminder_on,
                              owner=owner,
                              parent_folder_id=parent_folder_id,
                              reminder_date_time=reminder_date_time,
                              sensitivity=sensitivity,
                              start_date_time=start_date_time,
                              status=status,
                              subject=subject,
                              attachments=attachments,
                              multi_value_extended_properties=multi_value_extended_properties,
                              single_value_extended_properties=single_value_extended_properties,
                              pattern=recurrence_pattern,
                              range=recurrence_range)


def users_user_outlook_task_group_task_folder_task_delete(client,
                                                          user_id,
                                                          outlook_task_group_id,
                                                          outlook_task_folder_id,
                                                          outlook_task_id,
                                                          attachment_id=None,
                                                          if_match=None,
                                                          multi_value_legacy_extended_property_id=None,
                                                          single_value_legacy_extended_property_id=None):
    if user_id is not None and outlook_task_group_id is not None and outlook_task_folder_id is not None and outlook_task_id is not None and attachment_id is not None:
        return client.delete_attachment(user_id=user_id,
                                        outlook_task_group_id=outlook_task_group_id,
                                        outlook_task_folder_id=outlook_task_folder_id,
                                        outlook_task_id=outlook_task_id,
                                        attachment_id=attachment_id,
                                        if_match=if_match)
    elif user_id is not None and outlook_task_group_id is not None and outlook_task_folder_id is not None and outlook_task_id is not None and multi_value_legacy_extended_property_id is not None:
        return client.delete_multi_value_extended_property(user_id=user_id,
                                                           outlook_task_group_id=outlook_task_group_id,
                                                           outlook_task_folder_id=outlook_task_folder_id,
                                                           outlook_task_id=outlook_task_id,
                                                           multi_value_legacy_extended_property_id=multi_value_legacy_extended_property_id,
                                                           if_match=if_match)
    return client.delete_single_value_extended_property(user_id=user_id,
                                                        outlook_task_group_id=outlook_task_group_id,
                                                        outlook_task_folder_id=outlook_task_folder_id,
                                                        outlook_task_id=outlook_task_id,
                                                        single_value_legacy_extended_property_id=single_value_legacy_extended_property_id,
                                                        if_match=if_match)


def users_user_outlook_task_group_task_folder_task_create_attachment(client,
                                                                     user_id,
                                                                     outlook_task_group_id,
                                                                     outlook_task_folder_id,
                                                                     outlook_task_id,
                                                                     content_type,
                                                                     id_=None,
                                                                     is_inline=None,
                                                                     last_modified_date_time=None,
                                                                     name=None,
                                                                     size=None):
    return client.create_attachment(user_id=user_id,
                                    outlook_task_group_id=outlook_task_group_id,
                                    outlook_task_folder_id=outlook_task_folder_id,
                                    outlook_task_id=outlook_task_id,
                                    id=id_,
                                    content_type_parameter=content_type,
                                    is_inline=is_inline,
                                    last_modified_date_time=last_modified_date_time,
                                    name=name,
                                    size=size)


def users_user_outlook_task_group_task_folder_task_create_multi_value_extended_property(client,
                                                                                        user_id,
                                                                                        outlook_task_group_id,
                                                                                        outlook_task_folder_id,
                                                                                        outlook_task_id,
                                                                                        id_=None,
                                                                                        value=None):
    return client.create_multi_value_extended_property(user_id=user_id,
                                                       outlook_task_group_id=outlook_task_group_id,
                                                       outlook_task_folder_id=outlook_task_folder_id,
                                                       outlook_task_id=outlook_task_id,
                                                       id=id_,
                                                       value=value)


def users_user_outlook_task_group_task_folder_task_create_single_value_extended_property(client,
                                                                                         user_id,
                                                                                         outlook_task_group_id,
                                                                                         outlook_task_folder_id,
                                                                                         outlook_task_id,
                                                                                         id_=None,
                                                                                         value=None):
    return client.create_single_value_extended_property(user_id=user_id,
                                                        outlook_task_group_id=outlook_task_group_id,
                                                        outlook_task_folder_id=outlook_task_folder_id,
                                                        outlook_task_id=outlook_task_id,
                                                        id=id_,
                                                        value=value)


def users_user_outlook_task_group_task_folder_task_get_attachment(client,
                                                                  user_id,
                                                                  outlook_task_group_id,
                                                                  outlook_task_folder_id,
                                                                  outlook_task_id,
                                                                  attachment_id,
                                                                  select=None,
                                                                  expand=None):
    return client.get_attachment(user_id=user_id,
                                 outlook_task_group_id=outlook_task_group_id,
                                 outlook_task_folder_id=outlook_task_folder_id,
                                 outlook_task_id=outlook_task_id,
                                 attachment_id=attachment_id,
                                 select=select,
                                 expand=expand)


def users_user_outlook_task_group_task_folder_task_get_multi_value_extended_property(client,
                                                                                     user_id,
                                                                                     outlook_task_group_id,
                                                                                     outlook_task_folder_id,
                                                                                     outlook_task_id,
                                                                                     multi_value_legacy_extended_property_id,
                                                                                     select=None,
                                                                                     expand=None):
    return client.get_multi_value_extended_property(user_id=user_id,
                                                    outlook_task_group_id=outlook_task_group_id,
                                                    outlook_task_folder_id=outlook_task_folder_id,
                                                    outlook_task_id=outlook_task_id,
                                                    multi_value_legacy_extended_property_id=multi_value_legacy_extended_property_id,
                                                    select=select,
                                                    expand=expand)


def users_user_outlook_task_group_task_folder_task_get_single_value_extended_property(client,
                                                                                      user_id,
                                                                                      outlook_task_group_id,
                                                                                      outlook_task_folder_id,
                                                                                      outlook_task_id,
                                                                                      single_value_legacy_extended_property_id,
                                                                                      select=None,
                                                                                      expand=None):
    return client.get_single_value_extended_property(user_id=user_id,
                                                     outlook_task_group_id=outlook_task_group_id,
                                                     outlook_task_folder_id=outlook_task_folder_id,
                                                     outlook_task_id=outlook_task_id,
                                                     single_value_legacy_extended_property_id=single_value_legacy_extended_property_id,
                                                     select=select,
                                                     expand=expand)


def users_user_outlook_task_group_task_folder_task_list_attachment(client,
                                                                   user_id,
                                                                   outlook_task_group_id,
                                                                   outlook_task_folder_id,
                                                                   outlook_task_id,
                                                                   orderby=None,
                                                                   select=None,
                                                                   expand=None):
    return client.list_attachment(user_id=user_id,
                                  outlook_task_group_id=outlook_task_group_id,
                                  outlook_task_folder_id=outlook_task_folder_id,
                                  outlook_task_id=outlook_task_id,
                                  orderby=orderby,
                                  select=select,
                                  expand=expand)


def users_user_outlook_task_group_task_folder_task_list_multi_value_extended_property(client,
                                                                                      user_id,
                                                                                      outlook_task_group_id,
                                                                                      outlook_task_folder_id,
                                                                                      outlook_task_id,
                                                                                      orderby=None,
                                                                                      select=None,
                                                                                      expand=None):
    return client.list_multi_value_extended_property(user_id=user_id,
                                                     outlook_task_group_id=outlook_task_group_id,
                                                     outlook_task_folder_id=outlook_task_folder_id,
                                                     outlook_task_id=outlook_task_id,
                                                     orderby=orderby,
                                                     select=select,
                                                     expand=expand)


def users_user_outlook_task_group_task_folder_task_list_single_value_extended_property(client,
                                                                                       user_id,
                                                                                       outlook_task_group_id,
                                                                                       outlook_task_folder_id,
                                                                                       outlook_task_id,
                                                                                       orderby=None,
                                                                                       select=None,
                                                                                       expand=None):
    return client.list_single_value_extended_property(user_id=user_id,
                                                      outlook_task_group_id=outlook_task_group_id,
                                                      outlook_task_folder_id=outlook_task_folder_id,
                                                      outlook_task_id=outlook_task_id,
                                                      orderby=orderby,
                                                      select=select,
                                                      expand=expand)


def users_user_outlook_task_group_task_folder_task_update_attachment(client,
                                                                     user_id,
                                                                     outlook_task_group_id,
                                                                     outlook_task_folder_id,
                                                                     outlook_task_id,
                                                                     attachment_id,
                                                                     content_type,
                                                                     id_=None,
                                                                     is_inline=None,
                                                                     last_modified_date_time=None,
                                                                     name=None,
                                                                     size=None):
    return client.update_attachment(user_id=user_id,
                                    outlook_task_group_id=outlook_task_group_id,
                                    outlook_task_folder_id=outlook_task_folder_id,
                                    outlook_task_id=outlook_task_id,
                                    attachment_id=attachment_id,
                                    id=id_,
                                    content_type_parameter=content_type,
                                    is_inline=is_inline,
                                    last_modified_date_time=last_modified_date_time,
                                    name=name,
                                    size=size)


def users_user_outlook_task_group_task_folder_task_update_multi_value_extended_property(client,
                                                                                        user_id,
                                                                                        outlook_task_group_id,
                                                                                        outlook_task_folder_id,
                                                                                        outlook_task_id,
                                                                                        multi_value_legacy_extended_property_id,
                                                                                        id_=None,
                                                                                        value=None):
    return client.update_multi_value_extended_property(user_id=user_id,
                                                       outlook_task_group_id=outlook_task_group_id,
                                                       outlook_task_folder_id=outlook_task_folder_id,
                                                       outlook_task_id=outlook_task_id,
                                                       multi_value_legacy_extended_property_id=multi_value_legacy_extended_property_id,
                                                       id=id_,
                                                       value=value)


def users_user_outlook_task_group_task_folder_task_update_single_value_extended_property(client,
                                                                                         user_id,
                                                                                         outlook_task_group_id,
                                                                                         outlook_task_folder_id,
                                                                                         outlook_task_id,
                                                                                         single_value_legacy_extended_property_id,
                                                                                         id_=None,
                                                                                         value=None):
    return client.update_single_value_extended_property(user_id=user_id,
                                                        outlook_task_group_id=outlook_task_group_id,
                                                        outlook_task_folder_id=outlook_task_folder_id,
                                                        outlook_task_id=outlook_task_id,
                                                        single_value_legacy_extended_property_id=single_value_legacy_extended_property_id,
                                                        id=id_,
                                                        value=value)


def users_user_outlook_task_delete(client,
                                   user_id,
                                   outlook_task_id,
                                   attachment_id=None,
                                   if_match=None,
                                   multi_value_legacy_extended_property_id=None,
                                   single_value_legacy_extended_property_id=None):
    if user_id is not None and outlook_task_id is not None and attachment_id is not None:
        return client.delete_attachment(user_id=user_id,
                                        outlook_task_id=outlook_task_id,
                                        attachment_id=attachment_id,
                                        if_match=if_match)
    elif user_id is not None and outlook_task_id is not None and multi_value_legacy_extended_property_id is not None:
        return client.delete_multi_value_extended_property(user_id=user_id,
                                                           outlook_task_id=outlook_task_id,
                                                           multi_value_legacy_extended_property_id=multi_value_legacy_extended_property_id,
                                                           if_match=if_match)
    return client.delete_single_value_extended_property(user_id=user_id,
                                                        outlook_task_id=outlook_task_id,
                                                        single_value_legacy_extended_property_id=single_value_legacy_extended_property_id,
                                                        if_match=if_match)


def users_user_outlook_task_create_attachment(client,
                                              user_id,
                                              outlook_task_id,
                                              content_type,
                                              id_=None,
                                              is_inline=None,
                                              last_modified_date_time=None,
                                              name=None,
                                              size=None):
    return client.create_attachment(user_id=user_id,
                                    outlook_task_id=outlook_task_id,
                                    id=id_,
                                    content_type_parameter=content_type,
                                    is_inline=is_inline,
                                    last_modified_date_time=last_modified_date_time,
                                    name=name,
                                    size=size)


def users_user_outlook_task_create_multi_value_extended_property(client,
                                                                 user_id,
                                                                 outlook_task_id,
                                                                 id_=None,
                                                                 value=None):
    return client.create_multi_value_extended_property(user_id=user_id,
                                                       outlook_task_id=outlook_task_id,
                                                       id=id_,
                                                       value=value)


def users_user_outlook_task_create_single_value_extended_property(client,
                                                                  user_id,
                                                                  outlook_task_id,
                                                                  id_=None,
                                                                  value=None):
    return client.create_single_value_extended_property(user_id=user_id,
                                                        outlook_task_id=outlook_task_id,
                                                        id=id_,
                                                        value=value)


def users_user_outlook_task_get_attachment(client,
                                           user_id,
                                           outlook_task_id,
                                           attachment_id,
                                           select=None,
                                           expand=None):
    return client.get_attachment(user_id=user_id,
                                 outlook_task_id=outlook_task_id,
                                 attachment_id=attachment_id,
                                 select=select,
                                 expand=expand)


def users_user_outlook_task_get_multi_value_extended_property(client,
                                                              user_id,
                                                              outlook_task_id,
                                                              multi_value_legacy_extended_property_id,
                                                              select=None,
                                                              expand=None):
    return client.get_multi_value_extended_property(user_id=user_id,
                                                    outlook_task_id=outlook_task_id,
                                                    multi_value_legacy_extended_property_id=multi_value_legacy_extended_property_id,
                                                    select=select,
                                                    expand=expand)


def users_user_outlook_task_get_single_value_extended_property(client,
                                                               user_id,
                                                               outlook_task_id,
                                                               single_value_legacy_extended_property_id,
                                                               select=None,
                                                               expand=None):
    return client.get_single_value_extended_property(user_id=user_id,
                                                     outlook_task_id=outlook_task_id,
                                                     single_value_legacy_extended_property_id=single_value_legacy_extended_property_id,
                                                     select=select,
                                                     expand=expand)


def users_user_outlook_task_list_attachment(client,
                                            user_id,
                                            outlook_task_id,
                                            orderby=None,
                                            select=None,
                                            expand=None):
    return client.list_attachment(user_id=user_id,
                                  outlook_task_id=outlook_task_id,
                                  orderby=orderby,
                                  select=select,
                                  expand=expand)


def users_user_outlook_task_list_multi_value_extended_property(client,
                                                               user_id,
                                                               outlook_task_id,
                                                               orderby=None,
                                                               select=None,
                                                               expand=None):
    return client.list_multi_value_extended_property(user_id=user_id,
                                                     outlook_task_id=outlook_task_id,
                                                     orderby=orderby,
                                                     select=select,
                                                     expand=expand)


def users_user_outlook_task_list_single_value_extended_property(client,
                                                                user_id,
                                                                outlook_task_id,
                                                                orderby=None,
                                                                select=None,
                                                                expand=None):
    return client.list_single_value_extended_property(user_id=user_id,
                                                      outlook_task_id=outlook_task_id,
                                                      orderby=orderby,
                                                      select=select,
                                                      expand=expand)


def users_user_outlook_task_update_attachment(client,
                                              user_id,
                                              outlook_task_id,
                                              attachment_id,
                                              content_type,
                                              id_=None,
                                              is_inline=None,
                                              last_modified_date_time=None,
                                              name=None,
                                              size=None):
    return client.update_attachment(user_id=user_id,
                                    outlook_task_id=outlook_task_id,
                                    attachment_id=attachment_id,
                                    id=id_,
                                    content_type_parameter=content_type,
                                    is_inline=is_inline,
                                    last_modified_date_time=last_modified_date_time,
                                    name=name,
                                    size=size)


def users_user_outlook_task_update_multi_value_extended_property(client,
                                                                 user_id,
                                                                 outlook_task_id,
                                                                 multi_value_legacy_extended_property_id,
                                                                 id_=None,
                                                                 value=None):
    return client.update_multi_value_extended_property(user_id=user_id,
                                                       outlook_task_id=outlook_task_id,
                                                       multi_value_legacy_extended_property_id=multi_value_legacy_extended_property_id,
                                                       id=id_,
                                                       value=value)


def users_user_outlook_task_update_single_value_extended_property(client,
                                                                  user_id,
                                                                  outlook_task_id,
                                                                  single_value_legacy_extended_property_id,
                                                                  id_=None,
                                                                  value=None):
    return client.update_single_value_extended_property(user_id=user_id,
                                                        outlook_task_id=outlook_task_id,
                                                        single_value_legacy_extended_property_id=single_value_legacy_extended_property_id,
                                                        id=id_,
                                                        value=value)


def users_user_setting_delete(client,
                              user_id,
                              if_match=None):
    if user_id is not None:
        return client.delete_regional_and_language_setting(user_id=user_id,
                                                           if_match=if_match)
    return client.delete_shift_preference(user_id=user_id,
                                          if_match=if_match)


def users_user_setting_get_regional_and_language_setting(client,
                                                         user_id,
                                                         select=None,
                                                         expand=None):
    return client.get_regional_and_language_setting(user_id=user_id,
                                                    select=select,
                                                    expand=expand)


def users_user_setting_get_shift_preference(client,
                                            user_id,
                                            select=None,
                                            expand=None):
    return client.get_shift_preference(user_id=user_id,
                                       select=select,
                                       expand=expand)


def users_user_setting_update_regional_and_language_setting(client,
                                                            user_id,
                                                            id_=None,
                                                            authoring_languages=None,
                                                            default_display_language=None,
                                                            default_regional_format=None,
                                                            default_speech_input_language=None,
                                                            default_translation_language=None,
                                                            regional_format_overrides=None):
    return client.update_regional_and_language_setting(user_id=user_id,
                                                       id=id_,
                                                       authoring_languages=authoring_languages,
                                                       default_display_language=default_display_language,
                                                       default_regional_format=default_regional_format,
                                                       default_speech_input_language=default_speech_input_language,
                                                       default_translation_language=default_translation_language,
                                                       regional_format_overrides=regional_format_overrides)


def users_user_setting_update_shift_preference(client,
                                               user_id,
                                               id_=None,
                                               created_date_time=None,
                                               last_modified_date_time=None,
                                               last_modified_by_application=None,
                                               last_modified_by_device=None,
                                               last_modified_by_user=None,
                                               created_by_application=None,
                                               created_by_device=None,
                                               created_by_user=None,
                                               availability=None):
    return client.update_shift_preference(user_id=user_id,
                                          id=id_,
                                          created_date_time=created_date_time,
                                          last_modified_date_time=last_modified_date_time,
                                          application=last_modified_by_application,
                                          device=last_modified_by_device,
                                          user=last_modified_by_user,
                                          microsoft_graph_identity_application=created_by_application,
                                          microsoft_graph_identity_device=created_by_device,
                                          microsoft_graph_identity_user=created_by_user,
                                          availability=availability)


def users_user_todo_delete(client,
                           user_id,
                           todo_task_list_id,
                           if_match=None):
    return client.delete_list(user_id=user_id,
                              todo_task_list_id=todo_task_list_id,
                              if_match=if_match)


def users_user_todo_create_list(client,
                                user_id,
                                id_=None,
                                display_name=None,
                                is_owner=None,
                                is_shared=None,
                                wellknown_list_name=None,
                                extensions=None,
                                tasks=None):
    return client.create_list(user_id=user_id,
                              id=id_,
                              display_name=display_name,
                              is_owner=is_owner,
                              is_shared=is_shared,
                              wellknown_list_name=wellknown_list_name,
                              extensions=extensions,
                              tasks=tasks)


def users_user_todo_get_list(client,
                             user_id,
                             todo_task_list_id,
                             select=None,
                             expand=None):
    return client.get_list(user_id=user_id,
                           todo_task_list_id=todo_task_list_id,
                           select=select,
                           expand=expand)


def users_user_todo_list_list(client,
                              user_id,
                              orderby=None,
                              select=None,
                              expand=None):
    return client.list_list(user_id=user_id,
                            orderby=orderby,
                            select=select,
                            expand=expand)


def users_user_todo_update_list(client,
                                user_id,
                                todo_task_list_id,
                                id_=None,
                                display_name=None,
                                is_owner=None,
                                is_shared=None,
                                wellknown_list_name=None,
                                extensions=None,
                                tasks=None):
    return client.update_list(user_id=user_id,
                              todo_task_list_id=todo_task_list_id,
                              id=id_,
                              display_name=display_name,
                              is_owner=is_owner,
                              is_shared=is_shared,
                              wellknown_list_name=wellknown_list_name,
                              extensions=extensions,
                              tasks=tasks)


def users_user_todo_list_delete(client,
                                user_id,
                                todo_task_list_id,
                                extension_id=None,
                                if_match=None,
                                todo_task_id=None):
    if user_id is not None and todo_task_list_id is not None and extension_id is not None:
        return client.delete_extension(user_id=user_id,
                                       todo_task_list_id=todo_task_list_id,
                                       extension_id=extension_id,
                                       if_match=if_match)
    return client.delete_task(user_id=user_id,
                              todo_task_list_id=todo_task_list_id,
                              todo_task_id=todo_task_id,
                              if_match=if_match)


def users_user_todo_list_create_extension(client,
                                          user_id,
                                          todo_task_list_id,
                                          id_=None):
    return client.create_extension(user_id=user_id,
                                   todo_task_list_id=todo_task_list_id,
                                   id=id_)


def users_user_todo_list_create_task(client,
                                     user_id,
                                     todo_task_list_id,
                                     id_=None,
                                     body=None,
                                     body_last_modified_date_time=None,
                                     completed_date_time=None,
                                     created_date_time=None,
                                     due_date_time=None,
                                     importance=None,
                                     is_reminder_on=None,
                                     last_modified_date_time=None,
                                     reminder_date_time=None,
                                     status=None,
                                     title=None,
                                     extensions=None,
                                     linked_resources=None,
                                     recurrence_pattern=None,
                                     recurrence_range=None):
    return client.create_task(user_id=user_id,
                              todo_task_list_id=todo_task_list_id,
                              id=id_,
                              body=body,
                              body_last_modified_date_time=body_last_modified_date_time,
                              completed_date_time=completed_date_time,
                              created_date_time=created_date_time,
                              due_date_time=due_date_time,
                              importance=importance,
                              is_reminder_on=is_reminder_on,
                              last_modified_date_time=last_modified_date_time,
                              reminder_date_time=reminder_date_time,
                              status=status,
                              title=title,
                              extensions=extensions,
                              linked_resources=linked_resources,
                              pattern=recurrence_pattern,
                              range=recurrence_range)


def users_user_todo_list_get_extension(client,
                                       user_id,
                                       todo_task_list_id,
                                       extension_id,
                                       select=None,
                                       expand=None):
    return client.get_extension(user_id=user_id,
                                todo_task_list_id=todo_task_list_id,
                                extension_id=extension_id,
                                select=select,
                                expand=expand)


def users_user_todo_list_get_task(client,
                                  user_id,
                                  todo_task_list_id,
                                  todo_task_id,
                                  select=None,
                                  expand=None):
    return client.get_task(user_id=user_id,
                           todo_task_list_id=todo_task_list_id,
                           todo_task_id=todo_task_id,
                           select=select,
                           expand=expand)


def users_user_todo_list_list_extension(client,
                                        user_id,
                                        todo_task_list_id,
                                        orderby=None,
                                        select=None,
                                        expand=None):
    return client.list_extension(user_id=user_id,
                                 todo_task_list_id=todo_task_list_id,
                                 orderby=orderby,
                                 select=select,
                                 expand=expand)


def users_user_todo_list_list_task(client,
                                   user_id,
                                   todo_task_list_id,
                                   orderby=None,
                                   select=None,
                                   expand=None):
    return client.list_task(user_id=user_id,
                            todo_task_list_id=todo_task_list_id,
                            orderby=orderby,
                            select=select,
                            expand=expand)


def users_user_todo_list_update_extension(client,
                                          user_id,
                                          todo_task_list_id,
                                          extension_id,
                                          id_=None):
    return client.update_extension(user_id=user_id,
                                   todo_task_list_id=todo_task_list_id,
                                   extension_id=extension_id,
                                   id=id_)


def users_user_todo_list_update_task(client,
                                     user_id,
                                     todo_task_list_id,
                                     todo_task_id,
                                     id_=None,
                                     body=None,
                                     body_last_modified_date_time=None,
                                     completed_date_time=None,
                                     created_date_time=None,
                                     due_date_time=None,
                                     importance=None,
                                     is_reminder_on=None,
                                     last_modified_date_time=None,
                                     reminder_date_time=None,
                                     status=None,
                                     title=None,
                                     extensions=None,
                                     linked_resources=None,
                                     recurrence_pattern=None,
                                     recurrence_range=None):
    return client.update_task(user_id=user_id,
                              todo_task_list_id=todo_task_list_id,
                              todo_task_id=todo_task_id,
                              id=id_,
                              body=body,
                              body_last_modified_date_time=body_last_modified_date_time,
                              completed_date_time=completed_date_time,
                              created_date_time=created_date_time,
                              due_date_time=due_date_time,
                              importance=importance,
                              is_reminder_on=is_reminder_on,
                              last_modified_date_time=last_modified_date_time,
                              reminder_date_time=reminder_date_time,
                              status=status,
                              title=title,
                              extensions=extensions,
                              linked_resources=linked_resources,
                              pattern=recurrence_pattern,
                              range=recurrence_range)


def users_user_todo_list_task_delete(client,
                                     user_id,
                                     todo_task_list_id,
                                     todo_task_id,
                                     extension_id=None,
                                     if_match=None,
                                     linked_resource_id=None):
    if user_id is not None and todo_task_list_id is not None and todo_task_id is not None and extension_id is not None:
        return client.delete_extension(user_id=user_id,
                                       todo_task_list_id=todo_task_list_id,
                                       todo_task_id=todo_task_id,
                                       extension_id=extension_id,
                                       if_match=if_match)
    return client.delete_linked_resource(user_id=user_id,
                                         todo_task_list_id=todo_task_list_id,
                                         todo_task_id=todo_task_id,
                                         linked_resource_id=linked_resource_id,
                                         if_match=if_match)


def users_user_todo_list_task_create_extension(client,
                                               user_id,
                                               todo_task_list_id,
                                               todo_task_id,
                                               id_=None):
    return client.create_extension(user_id=user_id,
                                   todo_task_list_id=todo_task_list_id,
                                   todo_task_id=todo_task_id,
                                   id=id_)


def users_user_todo_list_task_create_linked_resource(client,
                                                     user_id,
                                                     todo_task_list_id,
                                                     todo_task_id,
                                                     id_=None,
                                                     application_name=None,
                                                     display_name=None,
                                                     external_id=None,
                                                     web_url=None):
    return client.create_linked_resource(user_id=user_id,
                                         todo_task_list_id=todo_task_list_id,
                                         todo_task_id=todo_task_id,
                                         id=id_,
                                         application_name=application_name,
                                         display_name=display_name,
                                         external_id=external_id,
                                         web_url=web_url)


def users_user_todo_list_task_get_extension(client,
                                            user_id,
                                            todo_task_list_id,
                                            todo_task_id,
                                            extension_id,
                                            select=None,
                                            expand=None):
    return client.get_extension(user_id=user_id,
                                todo_task_list_id=todo_task_list_id,
                                todo_task_id=todo_task_id,
                                extension_id=extension_id,
                                select=select,
                                expand=expand)


def users_user_todo_list_task_get_linked_resource(client,
                                                  user_id,
                                                  todo_task_list_id,
                                                  todo_task_id,
                                                  linked_resource_id,
                                                  select=None,
                                                  expand=None):
    return client.get_linked_resource(user_id=user_id,
                                      todo_task_list_id=todo_task_list_id,
                                      todo_task_id=todo_task_id,
                                      linked_resource_id=linked_resource_id,
                                      select=select,
                                      expand=expand)


def users_user_todo_list_task_list_extension(client,
                                             user_id,
                                             todo_task_list_id,
                                             todo_task_id,
                                             orderby=None,
                                             select=None,
                                             expand=None):
    return client.list_extension(user_id=user_id,
                                 todo_task_list_id=todo_task_list_id,
                                 todo_task_id=todo_task_id,
                                 orderby=orderby,
                                 select=select,
                                 expand=expand)


def users_user_todo_list_task_list_linked_resource(client,
                                                   user_id,
                                                   todo_task_list_id,
                                                   todo_task_id,
                                                   orderby=None,
                                                   select=None,
                                                   expand=None):
    return client.list_linked_resource(user_id=user_id,
                                       todo_task_list_id=todo_task_list_id,
                                       todo_task_id=todo_task_id,
                                       orderby=orderby,
                                       select=select,
                                       expand=expand)


def users_user_todo_list_task_update_extension(client,
                                               user_id,
                                               todo_task_list_id,
                                               todo_task_id,
                                               extension_id,
                                               id_=None):
    return client.update_extension(user_id=user_id,
                                   todo_task_list_id=todo_task_list_id,
                                   todo_task_id=todo_task_id,
                                   extension_id=extension_id,
                                   id=id_)


def users_user_todo_list_task_update_linked_resource(client,
                                                     user_id,
                                                     todo_task_list_id,
                                                     todo_task_id,
                                                     linked_resource_id,
                                                     id_=None,
                                                     application_name=None,
                                                     display_name=None,
                                                     external_id=None,
                                                     web_url=None):
    return client.update_linked_resource(user_id=user_id,
                                         todo_task_list_id=todo_task_list_id,
                                         todo_task_id=todo_task_id,
                                         linked_resource_id=linked_resource_id,
                                         id=id_,
                                         application_name=application_name,
                                         display_name=display_name,
                                         external_id=external_id,
                                         web_url=web_url)
