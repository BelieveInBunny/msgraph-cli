# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=too-many-statements
# pylint: disable=too-many-locals

from msgraph.cli.core.commands import CliCommandType


def load_command_table(self, _):

    from azext_users_beta.generated._client_factory import cf_user_user
    users_beta_user_user = CliCommandType(
        operations_tmpl='azext_users_beta.vendored_sdks.users.operations._user_user_operations#UserUserOperations.{}',
        client_factory=cf_user_user)
    with self.command_group('users', users_beta_user_user, client_factory=cf_user_user) as g:
        g.custom_command('delete', 'users_delete', confirmation=True)
        g.custom_command('create-user', 'users_create_user')
        g.custom_command('get-user', 'users_get_user')
        g.custom_command('list-user', 'users_list_user')
        g.custom_command('update-user', 'users_update_user')

    from azext_users_beta.generated._client_factory import cf_user
    users_beta_user = CliCommandType(
        operations_tmpl='azext_users_beta.vendored_sdks.users.operations._user_operations#UserOperations.{}',
        client_factory=cf_user)
    with self.command_group('users', users_beta_user, client_factory=cf_user) as g:
        g.custom_command('delete', 'users_delete', confirmation=True)
        g.custom_command('create-extension', 'users_create_extension')
        g.custom_command('create-license-detail', 'users_create_license_detail')
        g.custom_command('create-notification', 'users_create_notification')
        g.custom_command('create-photo', 'users_create_photo')
        g.custom_command('create-ref-created-object', 'users_create_ref_created_object')
        g.custom_command('create-ref-direct-report', 'users_create_ref_direct_report')
        g.custom_command('create-ref-member-of', 'users_create_ref_member_of')
        g.custom_command('create-ref-owned-device', 'users_create_ref_owned_device')
        g.custom_command('create-ref-owned-object', 'users_create_ref_owned_object')
        g.custom_command('create-ref-registered-device', 'users_create_ref_registered_device')
        g.custom_command('create-ref-transitive-member-of', 'users_create_ref_transitive_member_of')
        g.custom_command('get-extension', 'users_get_extension')
        g.custom_command('get-license-detail', 'users_get_license_detail')
        g.custom_command('get-manager', 'users_get_manager')
        g.custom_command('get-notification', 'users_get_notification')
        g.custom_command('get-outlook', 'users_get_outlook')
        g.custom_command('get-photo', 'users_get_photo')
        g.custom_command('get-photo-content', 'users_get_photo_content')
        g.custom_command('get-ref-manager', 'users_get_ref_manager')
        g.custom_command('get-setting', 'users_get_setting')
        g.custom_command('get-todo', 'users_get_todo')
        g.custom_command('list-created-object', 'users_list_created_object')
        g.custom_command('list-direct-report', 'users_list_direct_report')
        g.custom_command('list-extension', 'users_list_extension')
        g.custom_command('list-license-detail', 'users_list_license_detail')
        g.custom_command('list-member-of', 'users_list_member_of')
        g.custom_command('list-notification', 'users_list_notification')
        g.custom_command('list-owned-device', 'users_list_owned_device')
        g.custom_command('list-owned-object', 'users_list_owned_object')
        g.custom_command('list-photo', 'users_list_photo')
        g.custom_command('list-ref-created-object', 'users_list_ref_created_object')
        g.custom_command('list-ref-direct-report', 'users_list_ref_direct_report')
        g.custom_command('list-ref-member-of', 'users_list_ref_member_of')
        g.custom_command('list-ref-owned-device', 'users_list_ref_owned_device')
        g.custom_command('list-ref-owned-object', 'users_list_ref_owned_object')
        g.custom_command('list-ref-registered-device', 'users_list_ref_registered_device')
        g.custom_command('list-ref-transitive-member-of', 'users_list_ref_transitive_member_of')
        g.custom_command('list-registered-device', 'users_list_registered_device')
        g.custom_command('list-transitive-member-of', 'users_list_transitive_member_of')
        g.custom_command('set-photo-content', 'users_set_photo_content')
        g.custom_command('set-ref-manager', 'users_set_ref_manager')
        g.custom_command('update-extension', 'users_update_extension')
        g.custom_command('update-license-detail', 'users_update_license_detail')
        g.custom_command('update-notification', 'users_update_notification')
        g.custom_command('update-outlook', 'users_update_outlook')
        g.custom_command('update-photo', 'users_update_photo')
        g.custom_command('update-setting', 'users_update_setting')
        g.custom_command('update-todo', 'users_update_todo')

    from azext_users_beta.generated._client_factory import cf_user_outlook
    users_beta_user_outlook = CliCommandType(
        operations_tmpl='azext_users_beta.vendored_sdks.users.operations._user_outlook_operations#UserOutlookOperations'
        '.{}',
        client_factory=cf_user_outlook)
    with self.command_group('users', users_beta_user_outlook, client_factory=cf_user_outlook) as g:
        g.custom_command('delete', 'users_delete', confirmation=True)
        g.custom_command('create-master-category', 'users_create_master_category')
        g.custom_command('create-task', 'users_create_task')
        g.custom_command('create-task-folder', 'users_create_task_folder')
        g.custom_command('create-task-group', 'users_create_task_group')
        g.custom_command('get-master-category', 'users_get_master_category')
        g.custom_command('get-task', 'users_get_task')
        g.custom_command('get-task-folder', 'users_get_task_folder')
        g.custom_command('get-task-group', 'users_get_task_group')
        g.custom_command('list-master-category', 'users_list_master_category')
        g.custom_command('list-task', 'users_list_task')
        g.custom_command('list-task-folder', 'users_list_task_folder')
        g.custom_command('list-task-group', 'users_list_task_group')
        g.custom_command('update-master-category', 'users_update_master_category')
        g.custom_command('update-task', 'users_update_task')
        g.custom_command('update-task-folder', 'users_update_task_folder')
        g.custom_command('update-task-group', 'users_update_task_group')

    from azext_users_beta.generated._client_factory import cf_user_outlook_task_folder
    users_beta_user_outlook_task_folder = CliCommandType(
        operations_tmpl='azext_users_beta.vendored_sdks.users.operations._user_outlook_task_folder_operations#UserOutlo'
        'okTaskFolderOperations.{}',
        client_factory=cf_user_outlook_task_folder)
    with self.command_group('users', users_beta_user_outlook_task_folder,
                            client_factory=cf_user_outlook_task_folder) as g:
        g.custom_command('delete', 'users_delete', confirmation=True)
        g.custom_command('create-multi-value-extended-property', 'users_create_multi_value_extended_property')
        g.custom_command('create-single-value-extended-property', 'users_create_single_value_extended_property')
        g.custom_command('create-task', 'users_create_task')
        g.custom_command('get-multi-value-extended-property', 'users_get_multi_value_extended_property')
        g.custom_command('get-single-value-extended-property', 'users_get_single_value_extended_property')
        g.custom_command('get-task', 'users_get_task')
        g.custom_command('list-multi-value-extended-property', 'users_list_multi_value_extended_property')
        g.custom_command('list-single-value-extended-property', 'users_list_single_value_extended_property')
        g.custom_command('list-task', 'users_list_task')
        g.custom_command('update-multi-value-extended-property', 'users_update_multi_value_extended_property')
        g.custom_command('update-single-value-extended-property', 'users_update_single_value_extended_property')
        g.custom_command('update-task', 'users_update_task')

    from azext_users_beta.generated._client_factory import cf_user_outlook_task_folder_task
    users_beta_user_outlook_task_folder_task = CliCommandType(
        operations_tmpl='azext_users_beta.vendored_sdks.users.operations._user_outlook_task_folder_task_operations#User'
        'OutlookTaskFolderTaskOperations.{}',
        client_factory=cf_user_outlook_task_folder_task)
    with self.command_group('users', users_beta_user_outlook_task_folder_task,
                            client_factory=cf_user_outlook_task_folder_task) as g:
        g.custom_command('delete', 'users_delete', confirmation=True)
        g.custom_command('create-attachment', 'users_create_attachment')
        g.custom_command('create-multi-value-extended-property', 'users_create_multi_value_extended_property')
        g.custom_command('create-single-value-extended-property', 'users_create_single_value_extended_property')
        g.custom_command('get-attachment', 'users_get_attachment')
        g.custom_command('get-multi-value-extended-property', 'users_get_multi_value_extended_property')
        g.custom_command('get-single-value-extended-property', 'users_get_single_value_extended_property')
        g.custom_command('list-attachment', 'users_list_attachment')
        g.custom_command('list-multi-value-extended-property', 'users_list_multi_value_extended_property')
        g.custom_command('list-single-value-extended-property', 'users_list_single_value_extended_property')
        g.custom_command('update-attachment', 'users_update_attachment')
        g.custom_command('update-multi-value-extended-property', 'users_update_multi_value_extended_property')
        g.custom_command('update-single-value-extended-property', 'users_update_single_value_extended_property')

    from azext_users_beta.generated._client_factory import cf_user_outlook_task_group
    users_beta_user_outlook_task_group = CliCommandType(
        operations_tmpl='azext_users_beta.vendored_sdks.users.operations._user_outlook_task_group_operations#UserOutloo'
        'kTaskGroupOperations.{}',
        client_factory=cf_user_outlook_task_group)
    with self.command_group('users', users_beta_user_outlook_task_group,
                            client_factory=cf_user_outlook_task_group) as g:
        g.custom_command('delete', 'users_delete', confirmation=True)
        g.custom_command('create-task-folder', 'users_create_task_folder')
        g.custom_command('get-task-folder', 'users_get_task_folder')
        g.custom_command('list-task-folder', 'users_list_task_folder')
        g.custom_command('update-task-folder', 'users_update_task_folder')

    from azext_users_beta.generated._client_factory import cf_user_outlook_task_group_task_folder
    users_beta_user_outlook_task_group_task_folder = CliCommandType(
        operations_tmpl='azext_users_beta.vendored_sdks.users.operations._user_outlook_task_group_task_folder_operation'
        's#UserOutlookTaskGroupTaskFolderOperations.{}',
        client_factory=cf_user_outlook_task_group_task_folder)
    with self.command_group('users', users_beta_user_outlook_task_group_task_folder,
                            client_factory=cf_user_outlook_task_group_task_folder) as g:
        g.custom_command('delete', 'users_delete', confirmation=True)
        g.custom_command('create-multi-value-extended-property', 'users_create_multi_value_extended_property')
        g.custom_command('create-single-value-extended-property', 'users_create_single_value_extended_property')
        g.custom_command('create-task', 'users_create_task')
        g.custom_command('get-multi-value-extended-property', 'users_get_multi_value_extended_property')
        g.custom_command('get-single-value-extended-property', 'users_get_single_value_extended_property')
        g.custom_command('get-task', 'users_get_task')
        g.custom_command('list-multi-value-extended-property', 'users_list_multi_value_extended_property')
        g.custom_command('list-single-value-extended-property', 'users_list_single_value_extended_property')
        g.custom_command('list-task', 'users_list_task')
        g.custom_command('update-multi-value-extended-property', 'users_update_multi_value_extended_property')
        g.custom_command('update-single-value-extended-property', 'users_update_single_value_extended_property')
        g.custom_command('update-task', 'users_update_task')

    from azext_users_beta.generated._client_factory import cf_user_outlook_task_group_task_folder_task
    users_beta_user_outlook_task_group_task_folder_task = CliCommandType(
        operations_tmpl='azext_users_beta.vendored_sdks.users.operations._user_outlook_task_group_task_folder_task_oper'
        'ations#UserOutlookTaskGroupTaskFolderTaskOperations.{}',
        client_factory=cf_user_outlook_task_group_task_folder_task)
    with self.command_group('users', users_beta_user_outlook_task_group_task_folder_task,
                            client_factory=cf_user_outlook_task_group_task_folder_task) as g:
        g.custom_command('delete', 'users_delete', confirmation=True)
        g.custom_command('create-attachment', 'users_create_attachment')
        g.custom_command('create-multi-value-extended-property', 'users_create_multi_value_extended_property')
        g.custom_command('create-single-value-extended-property', 'users_create_single_value_extended_property')
        g.custom_command('get-attachment', 'users_get_attachment')
        g.custom_command('get-multi-value-extended-property', 'users_get_multi_value_extended_property')
        g.custom_command('get-single-value-extended-property', 'users_get_single_value_extended_property')
        g.custom_command('list-attachment', 'users_list_attachment')
        g.custom_command('list-multi-value-extended-property', 'users_list_multi_value_extended_property')
        g.custom_command('list-single-value-extended-property', 'users_list_single_value_extended_property')
        g.custom_command('update-attachment', 'users_update_attachment')
        g.custom_command('update-multi-value-extended-property', 'users_update_multi_value_extended_property')
        g.custom_command('update-single-value-extended-property', 'users_update_single_value_extended_property')

    from azext_users_beta.generated._client_factory import cf_user_outlook_task
    users_beta_user_outlook_task = CliCommandType(
        operations_tmpl='azext_users_beta.vendored_sdks.users.operations._user_outlook_task_operations#UserOutlookTaskO'
        'perations.{}',
        client_factory=cf_user_outlook_task)
    with self.command_group('users', users_beta_user_outlook_task, client_factory=cf_user_outlook_task) as g:
        g.custom_command('delete', 'users_delete', confirmation=True)
        g.custom_command('create-attachment', 'users_create_attachment')
        g.custom_command('create-multi-value-extended-property', 'users_create_multi_value_extended_property')
        g.custom_command('create-single-value-extended-property', 'users_create_single_value_extended_property')
        g.custom_command('get-attachment', 'users_get_attachment')
        g.custom_command('get-multi-value-extended-property', 'users_get_multi_value_extended_property')
        g.custom_command('get-single-value-extended-property', 'users_get_single_value_extended_property')
        g.custom_command('list-attachment', 'users_list_attachment')
        g.custom_command('list-multi-value-extended-property', 'users_list_multi_value_extended_property')
        g.custom_command('list-single-value-extended-property', 'users_list_single_value_extended_property')
        g.custom_command('update-attachment', 'users_update_attachment')
        g.custom_command('update-multi-value-extended-property', 'users_update_multi_value_extended_property')
        g.custom_command('update-single-value-extended-property', 'users_update_single_value_extended_property')

    from azext_users_beta.generated._client_factory import cf_user_setting
    users_beta_user_setting = CliCommandType(
        operations_tmpl='azext_users_beta.vendored_sdks.users.operations._user_setting_operations#UserSettingOperations'
        '.{}',
        client_factory=cf_user_setting)
    with self.command_group('users', users_beta_user_setting, client_factory=cf_user_setting) as g:
        g.custom_command('delete', 'users_delete', confirmation=True)
        g.custom_command('get-regional-and-language-setting', 'users_get_regional_and_language_setting')
        g.custom_command('get-shift-preference', 'users_get_shift_preference')
        g.custom_command('update-regional-and-language-setting', 'users_update_regional_and_language_setting')
        g.custom_command('update-shift-preference', 'users_update_shift_preference')

    from azext_users_beta.generated._client_factory import cf_user_todo
    users_beta_user_todo = CliCommandType(
        operations_tmpl='azext_users_beta.vendored_sdks.users.operations._user_todo_operations#UserTodoOperations.{}',
        client_factory=cf_user_todo)
    with self.command_group('users', users_beta_user_todo, client_factory=cf_user_todo) as g:
        g.custom_command('delete', 'users_delete', confirmation=True)
        g.custom_command('create-list', 'users_create_list')
        g.custom_command('get-list', 'users_get_list')
        g.custom_command('list-list', 'users_list_list')
        g.custom_command('update-list', 'users_update_list')

    from azext_users_beta.generated._client_factory import cf_user_todo_list
    users_beta_user_todo_list = CliCommandType(
        operations_tmpl='azext_users_beta.vendored_sdks.users.operations._user_todo_list_operations#UserTodoListOperati'
        'ons.{}',
        client_factory=cf_user_todo_list)
    with self.command_group('users', users_beta_user_todo_list, client_factory=cf_user_todo_list) as g:
        g.custom_command('delete', 'users_delete', confirmation=True)
        g.custom_command('create-extension', 'users_create_extension')
        g.custom_command('create-task', 'users_create_task')
        g.custom_command('get-extension', 'users_get_extension')
        g.custom_command('get-task', 'users_get_task')
        g.custom_command('list-extension', 'users_list_extension')
        g.custom_command('list-task', 'users_list_task')
        g.custom_command('update-extension', 'users_update_extension')
        g.custom_command('update-task', 'users_update_task')

    from azext_users_beta.generated._client_factory import cf_user_todo_list_task
    users_beta_user_todo_list_task = CliCommandType(
        operations_tmpl='azext_users_beta.vendored_sdks.users.operations._user_todo_list_task_operations#UserTodoListTa'
        'skOperations.{}',
        client_factory=cf_user_todo_list_task)
    with self.command_group('users', users_beta_user_todo_list_task, client_factory=cf_user_todo_list_task) as g:
        g.custom_command('delete', 'users_delete', confirmation=True)
        g.custom_command('create-extension', 'users_create_extension')
        g.custom_command('create-linked-resource', 'users_create_linked_resource')
        g.custom_command('get-extension', 'users_get_extension')
        g.custom_command('get-linked-resource', 'users_get_linked_resource')
        g.custom_command('list-extension', 'users_list_extension')
        g.custom_command('list-linked-resource', 'users_list_linked_resource')
        g.custom_command('update-extension', 'users_update_extension')
        g.custom_command('update-linked-resource', 'users_update_linked_resource')
