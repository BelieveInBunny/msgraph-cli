# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from typing import Any, Optional, TYPE_CHECKING

from azure.mgmt.core import AsyncARMPipelineClient
from msrest import Deserializer, Serializer

if TYPE_CHECKING:
    # pylint: disable=unused-import,ungrouped-imports
    from azure.core.credentials_async import AsyncTokenCredential

from ._configuration import TeamsConfiguration
from .operations import AppCatalogOperations
from .operations import AppCatalogTeamAppOperations
from .operations import ChatChatOperations
from .operations import ChatOperations
from .operations import ChatInstalledAppOperations
from .operations import ChatMemberOperations
from .operations import ChatMessageOperations
from .operations import ChatMessageReplyOperations
from .operations import ChatTabOperations
from .operations import GroupOperations
from .operations import TeamTeamOperations
from .operations import TeamOperations
from .operations import TeamChannelOperations
from .operations import TeamChannelMemberOperations
from .operations import TeamChannelMessageOperations
from .operations import TeamChannelMessageReplyOperations
from .operations import TeamChannelTabOperations
from .operations import TeamInstalledAppOperations
from .operations import TeamMemberOperations
from .operations import TeamPrimaryChannelOperations
from .operations import TeamPrimaryChannelMemberOperations
from .operations import TeamPrimaryChannelMessageOperations
from .operations import TeamPrimaryChannelMessageReplyOperations
from .operations import TeamPrimaryChannelTabOperations
from .operations import TeamScheduleOperations
from .operations import TeamScheduleTimeCardOperations
from .operations import TeamworkTeamworkOperations
from .operations import TeamworkOperations
from .operations import UserOperations
from .operations import UserTeamworkOperations
from .operations import UserTeamworkInstalledAppOperations
from .. import models


class Teams(object):
    """Teams.

    :ivar app_catalog: AppCatalogOperations operations
    :vartype app_catalog: teams.aio.operations.AppCatalogOperations
    :ivar app_catalog_team_app: AppCatalogTeamAppOperations operations
    :vartype app_catalog_team_app: teams.aio.operations.AppCatalogTeamAppOperations
    :ivar chat_chat: ChatChatOperations operations
    :vartype chat_chat: teams.aio.operations.ChatChatOperations
    :ivar chat: ChatOperations operations
    :vartype chat: teams.aio.operations.ChatOperations
    :ivar chat_installed_app: ChatInstalledAppOperations operations
    :vartype chat_installed_app: teams.aio.operations.ChatInstalledAppOperations
    :ivar chat_member: ChatMemberOperations operations
    :vartype chat_member: teams.aio.operations.ChatMemberOperations
    :ivar chat_message: ChatMessageOperations operations
    :vartype chat_message: teams.aio.operations.ChatMessageOperations
    :ivar chat_message_reply: ChatMessageReplyOperations operations
    :vartype chat_message_reply: teams.aio.operations.ChatMessageReplyOperations
    :ivar chat_tab: ChatTabOperations operations
    :vartype chat_tab: teams.aio.operations.ChatTabOperations
    :ivar group: GroupOperations operations
    :vartype group: teams.aio.operations.GroupOperations
    :ivar team_team: TeamTeamOperations operations
    :vartype team_team: teams.aio.operations.TeamTeamOperations
    :ivar team: TeamOperations operations
    :vartype team: teams.aio.operations.TeamOperations
    :ivar team_channel: TeamChannelOperations operations
    :vartype team_channel: teams.aio.operations.TeamChannelOperations
    :ivar team_channel_member: TeamChannelMemberOperations operations
    :vartype team_channel_member: teams.aio.operations.TeamChannelMemberOperations
    :ivar team_channel_message: TeamChannelMessageOperations operations
    :vartype team_channel_message: teams.aio.operations.TeamChannelMessageOperations
    :ivar team_channel_message_reply: TeamChannelMessageReplyOperations operations
    :vartype team_channel_message_reply: teams.aio.operations.TeamChannelMessageReplyOperations
    :ivar team_channel_tab: TeamChannelTabOperations operations
    :vartype team_channel_tab: teams.aio.operations.TeamChannelTabOperations
    :ivar team_installed_app: TeamInstalledAppOperations operations
    :vartype team_installed_app: teams.aio.operations.TeamInstalledAppOperations
    :ivar team_member: TeamMemberOperations operations
    :vartype team_member: teams.aio.operations.TeamMemberOperations
    :ivar team_primary_channel: TeamPrimaryChannelOperations operations
    :vartype team_primary_channel: teams.aio.operations.TeamPrimaryChannelOperations
    :ivar team_primary_channel_member: TeamPrimaryChannelMemberOperations operations
    :vartype team_primary_channel_member: teams.aio.operations.TeamPrimaryChannelMemberOperations
    :ivar team_primary_channel_message: TeamPrimaryChannelMessageOperations operations
    :vartype team_primary_channel_message: teams.aio.operations.TeamPrimaryChannelMessageOperations
    :ivar team_primary_channel_message_reply: TeamPrimaryChannelMessageReplyOperations operations
    :vartype team_primary_channel_message_reply: teams.aio.operations.TeamPrimaryChannelMessageReplyOperations
    :ivar team_primary_channel_tab: TeamPrimaryChannelTabOperations operations
    :vartype team_primary_channel_tab: teams.aio.operations.TeamPrimaryChannelTabOperations
    :ivar team_schedule: TeamScheduleOperations operations
    :vartype team_schedule: teams.aio.operations.TeamScheduleOperations
    :ivar team_schedule_time_card: TeamScheduleTimeCardOperations operations
    :vartype team_schedule_time_card: teams.aio.operations.TeamScheduleTimeCardOperations
    :ivar teamwork_teamwork: TeamworkTeamworkOperations operations
    :vartype teamwork_teamwork: teams.aio.operations.TeamworkTeamworkOperations
    :ivar teamwork: TeamworkOperations operations
    :vartype teamwork: teams.aio.operations.TeamworkOperations
    :ivar user: UserOperations operations
    :vartype user: teams.aio.operations.UserOperations
    :ivar user_teamwork: UserTeamworkOperations operations
    :vartype user_teamwork: teams.aio.operations.UserTeamworkOperations
    :ivar user_teamwork_installed_app: UserTeamworkInstalledAppOperations operations
    :vartype user_teamwork_installed_app: teams.aio.operations.UserTeamworkInstalledAppOperations
    :param credential: Credential needed for the client to connect to Azure.
    :type credential: ~azure.core.credentials_async.AsyncTokenCredential
    :param top: Show only the first n items.
    :type top: int
    :param skip: Skip the first n items.
    :type skip: int
    :param search: Search items by search phrases.
    :type search: str
    :param filter: Filter items by property values.
    :type filter: str
    :param count: Include count of items.
    :type count: bool
    :param str base_url: Service URL
    """

    def __init__(
        self,
        credential: "AsyncTokenCredential",
        top: Optional[int] = None,
        skip: Optional[int] = None,
        search: Optional[str] = None,
        filter: Optional[str] = None,
        count: Optional[bool] = None,
        base_url: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        if not base_url:
            base_url = 'https://graph.microsoft.com/beta'
        self._config = TeamsConfiguration(credential, top, skip, search, filter, count, **kwargs)
        self._client = AsyncARMPipelineClient(base_url=base_url, config=self._config, **kwargs)

        client_models = {k: v for k, v in models.__dict__.items() if isinstance(v, type)}
        self._serialize = Serializer(client_models)
        self._serialize.client_side_validation = False
        self._deserialize = Deserializer(client_models)

        self.app_catalog = AppCatalogOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.app_catalog_team_app = AppCatalogTeamAppOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.chat_chat = ChatChatOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.chat = ChatOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.chat_installed_app = ChatInstalledAppOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.chat_member = ChatMemberOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.chat_message = ChatMessageOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.chat_message_reply = ChatMessageReplyOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.chat_tab = ChatTabOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.group = GroupOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.team_team = TeamTeamOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.team = TeamOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.team_channel = TeamChannelOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.team_channel_member = TeamChannelMemberOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.team_channel_message = TeamChannelMessageOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.team_channel_message_reply = TeamChannelMessageReplyOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.team_channel_tab = TeamChannelTabOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.team_installed_app = TeamInstalledAppOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.team_member = TeamMemberOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.team_primary_channel = TeamPrimaryChannelOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.team_primary_channel_member = TeamPrimaryChannelMemberOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.team_primary_channel_message = TeamPrimaryChannelMessageOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.team_primary_channel_message_reply = TeamPrimaryChannelMessageReplyOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.team_primary_channel_tab = TeamPrimaryChannelTabOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.team_schedule = TeamScheduleOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.team_schedule_time_card = TeamScheduleTimeCardOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.teamwork_teamwork = TeamworkTeamworkOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.teamwork = TeamworkOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.user = UserOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.user_teamwork = UserTeamworkOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.user_teamwork_installed_app = UserTeamworkInstalledAppOperations(
            self._client, self._config, self._serialize, self._deserialize)

    async def close(self) -> None:
        await self._client.close()

    async def __aenter__(self) -> "Teams":
        await self._client.__aenter__()
        return self

    async def __aexit__(self, *exc_details) -> None:
        await self._client.__aexit__(*exc_details)
