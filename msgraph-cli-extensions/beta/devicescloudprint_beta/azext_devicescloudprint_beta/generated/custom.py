# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=too-many-lines


def devicescloudprint_print_print_show_print(client,
                                             select=None,
                                             expand=None):
    return client.get_print(select=select,
                            expand=expand)


def devicescloudprint_print_print_update_print(client,
                                               connectors=None,
                                               operations=None,
                                               printers=None,
                                               printer_shares=None,
                                               reports=None,
                                               services=None,
                                               shares=None,
                                               task_definitions=None,
                                               document_conversion_enabled=None):
    body = {}
    body['connectors'] = connectors
    body['operations'] = operations
    body['printers'] = printers
    body['printer_shares'] = printer_shares
    body['reports'] = reports
    body['services'] = services
    body['shares'] = shares
    body['task_definitions'] = task_definitions
    body['settings'] = {}
    body['settings']['document_conversion_enabled'] = document_conversion_enabled
    return client.update_print(body=body)


def devicescloudprint_print_delete(client,
                                   print_connector_id=None,
                                   if_match=None,
                                   print_operation_id=None,
                                   printer_id=None,
                                   printer_share_id=None,
                                   report_root_id=None,
                                   print_service_id=None,
                                   print_task_definition_id=None):
    if print_connector_id is not None:
        return client.delete_connectors(print_connector_id=print_connector_id,
                                        if_match=if_match)
    elif print_operation_id is not None:
        return client.delete_operations(print_operation_id=print_operation_id,
                                        if_match=if_match)
    elif printer_id is not None:
        return client.delete_printers(printer_id=printer_id,
                                      if_match=if_match)
    elif printer_share_id is not None:
        return client.delete_printer_shares(printer_share_id=printer_share_id,
                                            if_match=if_match)
    elif report_root_id is not None:
        return client.delete_reports(report_root_id=report_root_id,
                                     if_match=if_match)
    elif print_service_id is not None:
        return client.delete_services(print_service_id=print_service_id,
                                      if_match=if_match)
    elif printer_share_id is not None:
        return client.delete_shares(printer_share_id=printer_share_id,
                                    if_match=if_match)
    return client.delete_task_definitions(print_task_definition_id=print_task_definition_id,
                                          if_match=if_match)


def devicescloudprint_print_create_connector(client,
                                             id_=None,
                                             app_version=None,
                                             display_name=None,
                                             fully_qualified_domain_name=None,
                                             location=None,
                                             name=None,
                                             operating_system=None,
                                             registered_date_time=None,
                                             last_connection_time=None):
    body = {}
    body['id'] = id_
    body['app_version'] = app_version
    body['display_name'] = display_name
    body['fully_qualified_domain_name'] = fully_qualified_domain_name
    body['location'] = location
    body['name'] = name
    body['operating_system'] = operating_system
    body['registered_date_time'] = registered_date_time
    body['device_health'] = {}
    body['device_health']['last_connection_time'] = last_connection_time
    return client.create_connectors(body=body)


def devicescloudprint_print_create_operation(client,
                                             id_=None,
                                             created_date_time=None,
                                             status=None):
    body = {}
    body['id'] = id_
    body['created_date_time'] = created_date_time
    body['status'] = status
    return client.create_operations(body=body)


def devicescloudprint_print_create_printer(client,
                                           id_=None,
                                           defaults=None,
                                           display_name=None,
                                           is_accepting_jobs=None,
                                           location=None,
                                           manufacturer=None,
                                           model=None,
                                           name=None,
                                           status=None,
                                           jobs=None,
                                           bottom_margins=None,
                                           collation=None,
                                           color_modes=None,
                                           content_types=None,
                                           copies_per_job=None,
                                           dpis=None,
                                           duplex_modes=None,
                                           feed_directions=None,
                                           feed_orientations=None,
                                           finishings=None,
                                           input_bins=None,
                                           is_color_printing_supported=None,
                                           is_page_range_supported=None,
                                           left_margins=None,
                                           media_colors=None,
                                           media_sizes=None,
                                           media_types=None,
                                           multipage_layouts=None,
                                           orientations=None,
                                           output_bins=None,
                                           pages_per_sheet=None,
                                           qualities=None,
                                           right_margins=None,
                                           scalings=None,
                                           supported_color_configurations=None,
                                           supported_copies_per_job=None,
                                           supported_document_mime_types=None,
                                           supported_duplex_configurations=None,
                                           supported_finishings=None,
                                           supported_media_colors=None,
                                           supported_media_sizes=None,
                                           supported_media_types=None,
                                           supported_orientations=None,
                                           supported_output_bins=None,
                                           supported_pages_per_sheet=None,
                                           supported_presentation_directions=None,
                                           supported_print_qualities=None,
                                           supports_fit_pdf_to_page=None,
                                           top_margins=None,
                                           accepting_jobs=None,
                                           is_shared=None,
                                           registered_date_time=None,
                                           allowed_groups=None,
                                           allowed_users=None,
                                           connectors=None,
                                           share=None,
                                           shares=None,
                                           task_triggers=None):
    body = {}
    body['id'] = id_
    body['defaults'] = defaults
    body['display_name'] = display_name
    body['is_accepting_jobs'] = is_accepting_jobs
    body['location'] = location
    body['manufacturer'] = manufacturer
    body['model'] = model
    body['name'] = name
    body['status'] = status
    body['jobs'] = jobs
    body['capabilities'] = {}
    body['capabilities']['bottom_margins'] = bottom_margins
    body['capabilities']['collation'] = collation
    body['capabilities']['color_modes'] = color_modes
    body['capabilities']['content_types'] = content_types
    body['capabilities']['copies_per_job'] = copies_per_job
    body['capabilities']['dpis'] = dpis
    body['capabilities']['duplex_modes'] = duplex_modes
    body['capabilities']['feed_directions'] = feed_directions
    body['capabilities']['feed_orientations'] = feed_orientations
    body['capabilities']['finishings'] = finishings
    body['capabilities']['input_bins'] = input_bins
    body['capabilities']['is_color_printing_supported'] = is_color_printing_supported
    body['capabilities']['is_page_range_supported'] = is_page_range_supported
    body['capabilities']['left_margins'] = left_margins
    body['capabilities']['media_colors'] = media_colors
    body['capabilities']['media_sizes'] = media_sizes
    body['capabilities']['media_types'] = media_types
    body['capabilities']['multipage_layouts'] = multipage_layouts
    body['capabilities']['orientations'] = orientations
    body['capabilities']['output_bins'] = output_bins
    body['capabilities']['pages_per_sheet'] = pages_per_sheet
    body['capabilities']['qualities'] = qualities
    body['capabilities']['right_margins'] = right_margins
    body['capabilities']['scalings'] = scalings
    body['capabilities']['supported_color_configurations'] = supported_color_configurations
    body['capabilities']['supported_copies_per_job'] = supported_copies_per_job
    body['capabilities']['supported_document_mime_types'] = supported_document_mime_types
    body['capabilities']['supported_duplex_configurations'] = supported_duplex_configurations
    body['capabilities']['supported_finishings'] = supported_finishings
    body['capabilities']['supported_media_colors'] = supported_media_colors
    body['capabilities']['supported_media_sizes'] = supported_media_sizes
    body['capabilities']['supported_media_types'] = supported_media_types
    body['capabilities']['supported_orientations'] = supported_orientations
    body['capabilities']['supported_output_bins'] = supported_output_bins
    body['capabilities']['supported_pages_per_sheet'] = supported_pages_per_sheet
    body['capabilities']['supported_presentation_directions'] = supported_presentation_directions
    body['capabilities']['supported_print_qualities'] = supported_print_qualities
    body['capabilities']['supports_fit_pdf_to_page'] = supports_fit_pdf_to_page
    body['capabilities']['top_margins'] = top_margins
    body['is_shared'] = is_shared
    body['registered_date_time'] = registered_date_time
    body['allowed_groups'] = allowed_groups
    body['allowed_users'] = allowed_users
    body['connectors'] = connectors
    body['share'] = share
    body['shares'] = shares
    body['task_triggers'] = task_triggers
    return client.create_printers(body=body)


def devicescloudprint_print_create_printer_share(client,
                                                 id_=None,
                                                 defaults=None,
                                                 display_name=None,
                                                 is_accepting_jobs=None,
                                                 location=None,
                                                 manufacturer=None,
                                                 model=None,
                                                 name=None,
                                                 status=None,
                                                 jobs=None,
                                                 bottom_margins=None,
                                                 collation=None,
                                                 color_modes=None,
                                                 content_types=None,
                                                 copies_per_job=None,
                                                 dpis=None,
                                                 duplex_modes=None,
                                                 feed_directions=None,
                                                 feed_orientations=None,
                                                 finishings=None,
                                                 input_bins=None,
                                                 is_color_printing_supported=None,
                                                 is_page_range_supported=None,
                                                 left_margins=None,
                                                 media_colors=None,
                                                 media_sizes=None,
                                                 media_types=None,
                                                 multipage_layouts=None,
                                                 orientations=None,
                                                 output_bins=None,
                                                 pages_per_sheet=None,
                                                 qualities=None,
                                                 right_margins=None,
                                                 scalings=None,
                                                 supported_color_configurations=None,
                                                 supported_copies_per_job=None,
                                                 supported_document_mime_types=None,
                                                 supported_duplex_configurations=None,
                                                 supported_finishings=None,
                                                 supported_media_colors=None,
                                                 supported_media_sizes=None,
                                                 supported_media_types=None,
                                                 supported_orientations=None,
                                                 supported_output_bins=None,
                                                 supported_pages_per_sheet=None,
                                                 supported_presentation_directions=None,
                                                 supported_print_qualities=None,
                                                 supports_fit_pdf_to_page=None,
                                                 top_margins=None,
                                                 allow_all_users=None,
                                                 created_date_time=None,
                                                 allowed_groups=None,
                                                 allowed_users=None,
                                                 printer=None):
    body = {}
    body['id'] = id_
    body['defaults'] = defaults
    body['display_name'] = display_name
    body['is_accepting_jobs'] = is_accepting_jobs
    body['location'] = location
    body['manufacturer'] = manufacturer
    body['model'] = model
    body['name'] = name
    body['status'] = status
    body['jobs'] = jobs
    body['capabilities'] = {}
    body['capabilities']['bottom_margins'] = bottom_margins
    body['capabilities']['collation'] = collation
    body['capabilities']['color_modes'] = color_modes
    body['capabilities']['content_types'] = content_types
    body['capabilities']['copies_per_job'] = copies_per_job
    body['capabilities']['dpis'] = dpis
    body['capabilities']['duplex_modes'] = duplex_modes
    body['capabilities']['feed_directions'] = feed_directions
    body['capabilities']['feed_orientations'] = feed_orientations
    body['capabilities']['finishings'] = finishings
    body['capabilities']['input_bins'] = input_bins
    body['capabilities']['is_color_printing_supported'] = is_color_printing_supported
    body['capabilities']['is_page_range_supported'] = is_page_range_supported
    body['capabilities']['left_margins'] = left_margins
    body['capabilities']['media_colors'] = media_colors
    body['capabilities']['media_sizes'] = media_sizes
    body['capabilities']['media_types'] = media_types
    body['capabilities']['multipage_layouts'] = multipage_layouts
    body['capabilities']['orientations'] = orientations
    body['capabilities']['output_bins'] = output_bins
    body['capabilities']['pages_per_sheet'] = pages_per_sheet
    body['capabilities']['qualities'] = qualities
    body['capabilities']['right_margins'] = right_margins
    body['capabilities']['scalings'] = scalings
    body['capabilities']['supported_color_configurations'] = supported_color_configurations
    body['capabilities']['supported_copies_per_job'] = supported_copies_per_job
    body['capabilities']['supported_document_mime_types'] = supported_document_mime_types
    body['capabilities']['supported_duplex_configurations'] = supported_duplex_configurations
    body['capabilities']['supported_finishings'] = supported_finishings
    body['capabilities']['supported_media_colors'] = supported_media_colors
    body['capabilities']['supported_media_sizes'] = supported_media_sizes
    body['capabilities']['supported_media_types'] = supported_media_types
    body['capabilities']['supported_orientations'] = supported_orientations
    body['capabilities']['supported_output_bins'] = supported_output_bins
    body['capabilities']['supported_pages_per_sheet'] = supported_pages_per_sheet
    body['capabilities']['supported_presentation_directions'] = supported_presentation_directions
    body['capabilities']['supported_print_qualities'] = supported_print_qualities
    body['capabilities']['supports_fit_pdf_to_page'] = supports_fit_pdf_to_page
    body['capabilities']['top_margins'] = top_margins
    body['created_date_time'] = created_date_time
    body['allowed_groups'] = allowed_groups
    body['allowed_users'] = allowed_users
    body['printer'] = printer
    return client.create_printer_shares(body=body)


def devicescloudprint_print_create_report(client,
                                          id_=None,
                                          application_sign_in_detailed_summary=None,
                                          credential_user_registration_details=None,
                                          user_credential_usage_details=None,
                                          daily_print_usage_summaries_by_printer=None,
                                          daily_print_usage_summaries_by_user=None,
                                          monthly_print_usage_summaries_by_printer=None,
                                          monthly_print_usage_summaries_by_user=None):
    body = {}
    body['id'] = id_
    body['application_sign_in_detailed_summary'] = application_sign_in_detailed_summary
    body['credential_user_registration_details'] = credential_user_registration_details
    body['user_credential_usage_details'] = user_credential_usage_details
    body['daily_print_usage_summaries_by_printer'] = daily_print_usage_summaries_by_printer
    body['daily_print_usage_summaries_by_user'] = daily_print_usage_summaries_by_user
    body['monthly_print_usage_summaries_by_printer'] = monthly_print_usage_summaries_by_printer
    body['monthly_print_usage_summaries_by_user'] = monthly_print_usage_summaries_by_user
    return client.create_reports(body=body)


def devicescloudprint_print_create_service(client,
                                           id_=None,
                                           endpoints=None):
    body = {}
    body['id'] = id_
    body['endpoints'] = endpoints
    return client.create_services(body=body)


def devicescloudprint_print_create_share(client,
                                         id_=None,
                                         defaults=None,
                                         display_name=None,
                                         is_accepting_jobs=None,
                                         location=None,
                                         manufacturer=None,
                                         model=None,
                                         name=None,
                                         status=None,
                                         jobs=None,
                                         bottom_margins=None,
                                         collation=None,
                                         color_modes=None,
                                         content_types=None,
                                         copies_per_job=None,
                                         dpis=None,
                                         duplex_modes=None,
                                         feed_directions=None,
                                         feed_orientations=None,
                                         finishings=None,
                                         input_bins=None,
                                         is_color_printing_supported=None,
                                         is_page_range_supported=None,
                                         left_margins=None,
                                         media_colors=None,
                                         media_sizes=None,
                                         media_types=None,
                                         multipage_layouts=None,
                                         orientations=None,
                                         output_bins=None,
                                         pages_per_sheet=None,
                                         qualities=None,
                                         right_margins=None,
                                         scalings=None,
                                         supported_color_configurations=None,
                                         supported_copies_per_job=None,
                                         supported_document_mime_types=None,
                                         supported_duplex_configurations=None,
                                         supported_finishings=None,
                                         supported_media_colors=None,
                                         supported_media_sizes=None,
                                         supported_media_types=None,
                                         supported_orientations=None,
                                         supported_output_bins=None,
                                         supported_pages_per_sheet=None,
                                         supported_presentation_directions=None,
                                         supported_print_qualities=None,
                                         supports_fit_pdf_to_page=None,
                                         top_margins=None,
                                         allow_all_users=None,
                                         created_date_time=None,
                                         allowed_groups=None,
                                         allowed_users=None,
                                         printer=None):
    body = {}
    body['id'] = id_
    body['defaults'] = defaults
    body['display_name'] = display_name
    body['is_accepting_jobs'] = is_accepting_jobs
    body['location'] = location
    body['manufacturer'] = manufacturer
    body['model'] = model
    body['name'] = name
    body['status'] = status
    body['jobs'] = jobs
    body['capabilities'] = {}
    body['capabilities']['bottom_margins'] = bottom_margins
    body['capabilities']['collation'] = collation
    body['capabilities']['color_modes'] = color_modes
    body['capabilities']['content_types'] = content_types
    body['capabilities']['copies_per_job'] = copies_per_job
    body['capabilities']['dpis'] = dpis
    body['capabilities']['duplex_modes'] = duplex_modes
    body['capabilities']['feed_directions'] = feed_directions
    body['capabilities']['feed_orientations'] = feed_orientations
    body['capabilities']['finishings'] = finishings
    body['capabilities']['input_bins'] = input_bins
    body['capabilities']['is_color_printing_supported'] = is_color_printing_supported
    body['capabilities']['is_page_range_supported'] = is_page_range_supported
    body['capabilities']['left_margins'] = left_margins
    body['capabilities']['media_colors'] = media_colors
    body['capabilities']['media_sizes'] = media_sizes
    body['capabilities']['media_types'] = media_types
    body['capabilities']['multipage_layouts'] = multipage_layouts
    body['capabilities']['orientations'] = orientations
    body['capabilities']['output_bins'] = output_bins
    body['capabilities']['pages_per_sheet'] = pages_per_sheet
    body['capabilities']['qualities'] = qualities
    body['capabilities']['right_margins'] = right_margins
    body['capabilities']['scalings'] = scalings
    body['capabilities']['supported_color_configurations'] = supported_color_configurations
    body['capabilities']['supported_copies_per_job'] = supported_copies_per_job
    body['capabilities']['supported_document_mime_types'] = supported_document_mime_types
    body['capabilities']['supported_duplex_configurations'] = supported_duplex_configurations
    body['capabilities']['supported_finishings'] = supported_finishings
    body['capabilities']['supported_media_colors'] = supported_media_colors
    body['capabilities']['supported_media_sizes'] = supported_media_sizes
    body['capabilities']['supported_media_types'] = supported_media_types
    body['capabilities']['supported_orientations'] = supported_orientations
    body['capabilities']['supported_output_bins'] = supported_output_bins
    body['capabilities']['supported_pages_per_sheet'] = supported_pages_per_sheet
    body['capabilities']['supported_presentation_directions'] = supported_presentation_directions
    body['capabilities']['supported_print_qualities'] = supported_print_qualities
    body['capabilities']['supports_fit_pdf_to_page'] = supports_fit_pdf_to_page
    body['capabilities']['top_margins'] = top_margins
    body['created_date_time'] = created_date_time
    body['allowed_groups'] = allowed_groups
    body['allowed_users'] = allowed_users
    body['printer'] = printer
    return client.create_shares(body=body)


def devicescloudprint_print_create_task_definition(client,
                                                   id_=None,
                                                   created_by=None,
                                                   display_name=None,
                                                   tasks=None):
    body = {}
    body['id'] = id_
    body['created_by'] = created_by
    body['display_name'] = display_name
    body['tasks'] = tasks
    return client.create_task_definitions(body=body)


def devicescloudprint_print_list_connector(client,
                                           orderby=None,
                                           select=None,
                                           expand=None):
    return client.list_connectors(orderby=orderby,
                                  select=select,
                                  expand=expand)


def devicescloudprint_print_list_operation(client,
                                           orderby=None,
                                           select=None,
                                           expand=None):
    return client.list_operations(orderby=orderby,
                                  select=select,
                                  expand=expand)


def devicescloudprint_print_list_printer(client,
                                         orderby=None,
                                         select=None,
                                         expand=None):
    return client.list_printers(orderby=orderby,
                                select=select,
                                expand=expand)


def devicescloudprint_print_list_printer_share(client,
                                               orderby=None,
                                               select=None,
                                               expand=None):
    return client.list_printer_shares(orderby=orderby,
                                      select=select,
                                      expand=expand)


def devicescloudprint_print_list_report(client,
                                        orderby=None,
                                        select=None,
                                        expand=None):
    return client.list_reports(orderby=orderby,
                               select=select,
                               expand=expand)


def devicescloudprint_print_list_service(client,
                                         orderby=None,
                                         select=None,
                                         expand=None):
    return client.list_services(orderby=orderby,
                                select=select,
                                expand=expand)


def devicescloudprint_print_list_share(client,
                                       orderby=None,
                                       select=None,
                                       expand=None):
    return client.list_shares(orderby=orderby,
                              select=select,
                              expand=expand)


def devicescloudprint_print_list_task_definition(client,
                                                 orderby=None,
                                                 select=None,
                                                 expand=None):
    return client.list_task_definitions(orderby=orderby,
                                        select=select,
                                        expand=expand)


def devicescloudprint_print_show_connector(client,
                                           print_connector_id,
                                           select=None,
                                           expand=None):
    return client.get_connectors(print_connector_id=print_connector_id,
                                 select=select,
                                 expand=expand)


def devicescloudprint_print_show_operation(client,
                                           print_operation_id,
                                           select=None,
                                           expand=None):
    return client.get_operations(print_operation_id=print_operation_id,
                                 select=select,
                                 expand=expand)


def devicescloudprint_print_show_printer(client,
                                         printer_id,
                                         select=None,
                                         expand=None):
    return client.get_printers(printer_id=printer_id,
                               select=select,
                               expand=expand)


def devicescloudprint_print_show_printer_share(client,
                                               printer_share_id,
                                               select=None,
                                               expand=None):
    return client.get_printer_shares(printer_share_id=printer_share_id,
                                     select=select,
                                     expand=expand)


def devicescloudprint_print_show_report(client,
                                        report_root_id,
                                        select=None,
                                        expand=None):
    return client.get_reports(report_root_id=report_root_id,
                              select=select,
                              expand=expand)


def devicescloudprint_print_show_service(client,
                                         print_service_id,
                                         select=None,
                                         expand=None):
    return client.get_services(print_service_id=print_service_id,
                               select=select,
                               expand=expand)


def devicescloudprint_print_show_share(client,
                                       printer_share_id,
                                       select=None,
                                       expand=None):
    return client.get_shares(printer_share_id=printer_share_id,
                             select=select,
                             expand=expand)


def devicescloudprint_print_show_task_definition(client,
                                                 print_task_definition_id,
                                                 select=None,
                                                 expand=None):
    return client.get_task_definitions(print_task_definition_id=print_task_definition_id,
                                       select=select,
                                       expand=expand)


def devicescloudprint_print_update_connector(client,
                                             print_connector_id,
                                             id_=None,
                                             app_version=None,
                                             display_name=None,
                                             fully_qualified_domain_name=None,
                                             location=None,
                                             name=None,
                                             operating_system=None,
                                             registered_date_time=None,
                                             last_connection_time=None):
    body = {}
    body['id'] = id_
    body['app_version'] = app_version
    body['display_name'] = display_name
    body['fully_qualified_domain_name'] = fully_qualified_domain_name
    body['location'] = location
    body['name'] = name
    body['operating_system'] = operating_system
    body['registered_date_time'] = registered_date_time
    body['device_health'] = {}
    body['device_health']['last_connection_time'] = last_connection_time
    return client.update_connectors(print_connector_id=print_connector_id,
                                    body=body)


def devicescloudprint_print_update_operation(client,
                                             print_operation_id,
                                             id_=None,
                                             created_date_time=None,
                                             status=None):
    body = {}
    body['id'] = id_
    body['created_date_time'] = created_date_time
    body['status'] = status
    return client.update_operations(print_operation_id=print_operation_id,
                                    body=body)


def devicescloudprint_print_update_printer(client,
                                           printer_id,
                                           id_=None,
                                           defaults=None,
                                           display_name=None,
                                           is_accepting_jobs=None,
                                           location=None,
                                           manufacturer=None,
                                           model=None,
                                           name=None,
                                           status=None,
                                           jobs=None,
                                           bottom_margins=None,
                                           collation=None,
                                           color_modes=None,
                                           content_types=None,
                                           copies_per_job=None,
                                           dpis=None,
                                           duplex_modes=None,
                                           feed_directions=None,
                                           feed_orientations=None,
                                           finishings=None,
                                           input_bins=None,
                                           is_color_printing_supported=None,
                                           is_page_range_supported=None,
                                           left_margins=None,
                                           media_colors=None,
                                           media_sizes=None,
                                           media_types=None,
                                           multipage_layouts=None,
                                           orientations=None,
                                           output_bins=None,
                                           pages_per_sheet=None,
                                           qualities=None,
                                           right_margins=None,
                                           scalings=None,
                                           supported_color_configurations=None,
                                           supported_copies_per_job=None,
                                           supported_document_mime_types=None,
                                           supported_duplex_configurations=None,
                                           supported_finishings=None,
                                           supported_media_colors=None,
                                           supported_media_sizes=None,
                                           supported_media_types=None,
                                           supported_orientations=None,
                                           supported_output_bins=None,
                                           supported_pages_per_sheet=None,
                                           supported_presentation_directions=None,
                                           supported_print_qualities=None,
                                           supports_fit_pdf_to_page=None,
                                           top_margins=None,
                                           accepting_jobs=None,
                                           is_shared=None,
                                           registered_date_time=None,
                                           allowed_groups=None,
                                           allowed_users=None,
                                           connectors=None,
                                           share=None,
                                           shares=None,
                                           task_triggers=None):
    body = {}
    body['id'] = id_
    body['defaults'] = defaults
    body['display_name'] = display_name
    body['is_accepting_jobs'] = is_accepting_jobs
    body['location'] = location
    body['manufacturer'] = manufacturer
    body['model'] = model
    body['name'] = name
    body['status'] = status
    body['jobs'] = jobs
    body['capabilities'] = {}
    body['capabilities']['bottom_margins'] = bottom_margins
    body['capabilities']['collation'] = collation
    body['capabilities']['color_modes'] = color_modes
    body['capabilities']['content_types'] = content_types
    body['capabilities']['copies_per_job'] = copies_per_job
    body['capabilities']['dpis'] = dpis
    body['capabilities']['duplex_modes'] = duplex_modes
    body['capabilities']['feed_directions'] = feed_directions
    body['capabilities']['feed_orientations'] = feed_orientations
    body['capabilities']['finishings'] = finishings
    body['capabilities']['input_bins'] = input_bins
    body['capabilities']['is_color_printing_supported'] = is_color_printing_supported
    body['capabilities']['is_page_range_supported'] = is_page_range_supported
    body['capabilities']['left_margins'] = left_margins
    body['capabilities']['media_colors'] = media_colors
    body['capabilities']['media_sizes'] = media_sizes
    body['capabilities']['media_types'] = media_types
    body['capabilities']['multipage_layouts'] = multipage_layouts
    body['capabilities']['orientations'] = orientations
    body['capabilities']['output_bins'] = output_bins
    body['capabilities']['pages_per_sheet'] = pages_per_sheet
    body['capabilities']['qualities'] = qualities
    body['capabilities']['right_margins'] = right_margins
    body['capabilities']['scalings'] = scalings
    body['capabilities']['supported_color_configurations'] = supported_color_configurations
    body['capabilities']['supported_copies_per_job'] = supported_copies_per_job
    body['capabilities']['supported_document_mime_types'] = supported_document_mime_types
    body['capabilities']['supported_duplex_configurations'] = supported_duplex_configurations
    body['capabilities']['supported_finishings'] = supported_finishings
    body['capabilities']['supported_media_colors'] = supported_media_colors
    body['capabilities']['supported_media_sizes'] = supported_media_sizes
    body['capabilities']['supported_media_types'] = supported_media_types
    body['capabilities']['supported_orientations'] = supported_orientations
    body['capabilities']['supported_output_bins'] = supported_output_bins
    body['capabilities']['supported_pages_per_sheet'] = supported_pages_per_sheet
    body['capabilities']['supported_presentation_directions'] = supported_presentation_directions
    body['capabilities']['supported_print_qualities'] = supported_print_qualities
    body['capabilities']['supports_fit_pdf_to_page'] = supports_fit_pdf_to_page
    body['capabilities']['top_margins'] = top_margins
    body['is_shared'] = is_shared
    body['registered_date_time'] = registered_date_time
    body['allowed_groups'] = allowed_groups
    body['allowed_users'] = allowed_users
    body['connectors'] = connectors
    body['share'] = share
    body['shares'] = shares
    body['task_triggers'] = task_triggers
    return client.update_printers(printer_id=printer_id,
                                  body=body)


def devicescloudprint_print_update_printer_share(client,
                                                 printer_share_id,
                                                 id_=None,
                                                 defaults=None,
                                                 display_name=None,
                                                 is_accepting_jobs=None,
                                                 location=None,
                                                 manufacturer=None,
                                                 model=None,
                                                 name=None,
                                                 status=None,
                                                 jobs=None,
                                                 bottom_margins=None,
                                                 collation=None,
                                                 color_modes=None,
                                                 content_types=None,
                                                 copies_per_job=None,
                                                 dpis=None,
                                                 duplex_modes=None,
                                                 feed_directions=None,
                                                 feed_orientations=None,
                                                 finishings=None,
                                                 input_bins=None,
                                                 is_color_printing_supported=None,
                                                 is_page_range_supported=None,
                                                 left_margins=None,
                                                 media_colors=None,
                                                 media_sizes=None,
                                                 media_types=None,
                                                 multipage_layouts=None,
                                                 orientations=None,
                                                 output_bins=None,
                                                 pages_per_sheet=None,
                                                 qualities=None,
                                                 right_margins=None,
                                                 scalings=None,
                                                 supported_color_configurations=None,
                                                 supported_copies_per_job=None,
                                                 supported_document_mime_types=None,
                                                 supported_duplex_configurations=None,
                                                 supported_finishings=None,
                                                 supported_media_colors=None,
                                                 supported_media_sizes=None,
                                                 supported_media_types=None,
                                                 supported_orientations=None,
                                                 supported_output_bins=None,
                                                 supported_pages_per_sheet=None,
                                                 supported_presentation_directions=None,
                                                 supported_print_qualities=None,
                                                 supports_fit_pdf_to_page=None,
                                                 top_margins=None,
                                                 allow_all_users=None,
                                                 created_date_time=None,
                                                 allowed_groups=None,
                                                 allowed_users=None,
                                                 printer=None):
    body = {}
    body['id'] = id_
    body['defaults'] = defaults
    body['display_name'] = display_name
    body['is_accepting_jobs'] = is_accepting_jobs
    body['location'] = location
    body['manufacturer'] = manufacturer
    body['model'] = model
    body['name'] = name
    body['status'] = status
    body['jobs'] = jobs
    body['capabilities'] = {}
    body['capabilities']['bottom_margins'] = bottom_margins
    body['capabilities']['collation'] = collation
    body['capabilities']['color_modes'] = color_modes
    body['capabilities']['content_types'] = content_types
    body['capabilities']['copies_per_job'] = copies_per_job
    body['capabilities']['dpis'] = dpis
    body['capabilities']['duplex_modes'] = duplex_modes
    body['capabilities']['feed_directions'] = feed_directions
    body['capabilities']['feed_orientations'] = feed_orientations
    body['capabilities']['finishings'] = finishings
    body['capabilities']['input_bins'] = input_bins
    body['capabilities']['is_color_printing_supported'] = is_color_printing_supported
    body['capabilities']['is_page_range_supported'] = is_page_range_supported
    body['capabilities']['left_margins'] = left_margins
    body['capabilities']['media_colors'] = media_colors
    body['capabilities']['media_sizes'] = media_sizes
    body['capabilities']['media_types'] = media_types
    body['capabilities']['multipage_layouts'] = multipage_layouts
    body['capabilities']['orientations'] = orientations
    body['capabilities']['output_bins'] = output_bins
    body['capabilities']['pages_per_sheet'] = pages_per_sheet
    body['capabilities']['qualities'] = qualities
    body['capabilities']['right_margins'] = right_margins
    body['capabilities']['scalings'] = scalings
    body['capabilities']['supported_color_configurations'] = supported_color_configurations
    body['capabilities']['supported_copies_per_job'] = supported_copies_per_job
    body['capabilities']['supported_document_mime_types'] = supported_document_mime_types
    body['capabilities']['supported_duplex_configurations'] = supported_duplex_configurations
    body['capabilities']['supported_finishings'] = supported_finishings
    body['capabilities']['supported_media_colors'] = supported_media_colors
    body['capabilities']['supported_media_sizes'] = supported_media_sizes
    body['capabilities']['supported_media_types'] = supported_media_types
    body['capabilities']['supported_orientations'] = supported_orientations
    body['capabilities']['supported_output_bins'] = supported_output_bins
    body['capabilities']['supported_pages_per_sheet'] = supported_pages_per_sheet
    body['capabilities']['supported_presentation_directions'] = supported_presentation_directions
    body['capabilities']['supported_print_qualities'] = supported_print_qualities
    body['capabilities']['supports_fit_pdf_to_page'] = supports_fit_pdf_to_page
    body['capabilities']['top_margins'] = top_margins
    body['created_date_time'] = created_date_time
    body['allowed_groups'] = allowed_groups
    body['allowed_users'] = allowed_users
    body['printer'] = printer
    return client.update_printer_shares(printer_share_id=printer_share_id,
                                        body=body)


def devicescloudprint_print_update_report(client,
                                          report_root_id,
                                          id_=None,
                                          application_sign_in_detailed_summary=None,
                                          credential_user_registration_details=None,
                                          user_credential_usage_details=None,
                                          daily_print_usage_summaries_by_printer=None,
                                          daily_print_usage_summaries_by_user=None,
                                          monthly_print_usage_summaries_by_printer=None,
                                          monthly_print_usage_summaries_by_user=None):
    body = {}
    body['id'] = id_
    body['application_sign_in_detailed_summary'] = application_sign_in_detailed_summary
    body['credential_user_registration_details'] = credential_user_registration_details
    body['user_credential_usage_details'] = user_credential_usage_details
    body['daily_print_usage_summaries_by_printer'] = daily_print_usage_summaries_by_printer
    body['daily_print_usage_summaries_by_user'] = daily_print_usage_summaries_by_user
    body['monthly_print_usage_summaries_by_printer'] = monthly_print_usage_summaries_by_printer
    body['monthly_print_usage_summaries_by_user'] = monthly_print_usage_summaries_by_user
    return client.update_reports(report_root_id=report_root_id,
                                 body=body)


def devicescloudprint_print_update_service(client,
                                           print_service_id,
                                           id_=None,
                                           endpoints=None):
    body = {}
    body['id'] = id_
    body['endpoints'] = endpoints
    return client.update_services(print_service_id=print_service_id,
                                  body=body)


def devicescloudprint_print_update_share(client,
                                         printer_share_id,
                                         id_=None,
                                         defaults=None,
                                         display_name=None,
                                         is_accepting_jobs=None,
                                         location=None,
                                         manufacturer=None,
                                         model=None,
                                         name=None,
                                         status=None,
                                         jobs=None,
                                         bottom_margins=None,
                                         collation=None,
                                         color_modes=None,
                                         content_types=None,
                                         copies_per_job=None,
                                         dpis=None,
                                         duplex_modes=None,
                                         feed_directions=None,
                                         feed_orientations=None,
                                         finishings=None,
                                         input_bins=None,
                                         is_color_printing_supported=None,
                                         is_page_range_supported=None,
                                         left_margins=None,
                                         media_colors=None,
                                         media_sizes=None,
                                         media_types=None,
                                         multipage_layouts=None,
                                         orientations=None,
                                         output_bins=None,
                                         pages_per_sheet=None,
                                         qualities=None,
                                         right_margins=None,
                                         scalings=None,
                                         supported_color_configurations=None,
                                         supported_copies_per_job=None,
                                         supported_document_mime_types=None,
                                         supported_duplex_configurations=None,
                                         supported_finishings=None,
                                         supported_media_colors=None,
                                         supported_media_sizes=None,
                                         supported_media_types=None,
                                         supported_orientations=None,
                                         supported_output_bins=None,
                                         supported_pages_per_sheet=None,
                                         supported_presentation_directions=None,
                                         supported_print_qualities=None,
                                         supports_fit_pdf_to_page=None,
                                         top_margins=None,
                                         allow_all_users=None,
                                         created_date_time=None,
                                         allowed_groups=None,
                                         allowed_users=None,
                                         printer=None):
    body = {}
    body['id'] = id_
    body['defaults'] = defaults
    body['display_name'] = display_name
    body['is_accepting_jobs'] = is_accepting_jobs
    body['location'] = location
    body['manufacturer'] = manufacturer
    body['model'] = model
    body['name'] = name
    body['status'] = status
    body['jobs'] = jobs
    body['capabilities'] = {}
    body['capabilities']['bottom_margins'] = bottom_margins
    body['capabilities']['collation'] = collation
    body['capabilities']['color_modes'] = color_modes
    body['capabilities']['content_types'] = content_types
    body['capabilities']['copies_per_job'] = copies_per_job
    body['capabilities']['dpis'] = dpis
    body['capabilities']['duplex_modes'] = duplex_modes
    body['capabilities']['feed_directions'] = feed_directions
    body['capabilities']['feed_orientations'] = feed_orientations
    body['capabilities']['finishings'] = finishings
    body['capabilities']['input_bins'] = input_bins
    body['capabilities']['is_color_printing_supported'] = is_color_printing_supported
    body['capabilities']['is_page_range_supported'] = is_page_range_supported
    body['capabilities']['left_margins'] = left_margins
    body['capabilities']['media_colors'] = media_colors
    body['capabilities']['media_sizes'] = media_sizes
    body['capabilities']['media_types'] = media_types
    body['capabilities']['multipage_layouts'] = multipage_layouts
    body['capabilities']['orientations'] = orientations
    body['capabilities']['output_bins'] = output_bins
    body['capabilities']['pages_per_sheet'] = pages_per_sheet
    body['capabilities']['qualities'] = qualities
    body['capabilities']['right_margins'] = right_margins
    body['capabilities']['scalings'] = scalings
    body['capabilities']['supported_color_configurations'] = supported_color_configurations
    body['capabilities']['supported_copies_per_job'] = supported_copies_per_job
    body['capabilities']['supported_document_mime_types'] = supported_document_mime_types
    body['capabilities']['supported_duplex_configurations'] = supported_duplex_configurations
    body['capabilities']['supported_finishings'] = supported_finishings
    body['capabilities']['supported_media_colors'] = supported_media_colors
    body['capabilities']['supported_media_sizes'] = supported_media_sizes
    body['capabilities']['supported_media_types'] = supported_media_types
    body['capabilities']['supported_orientations'] = supported_orientations
    body['capabilities']['supported_output_bins'] = supported_output_bins
    body['capabilities']['supported_pages_per_sheet'] = supported_pages_per_sheet
    body['capabilities']['supported_presentation_directions'] = supported_presentation_directions
    body['capabilities']['supported_print_qualities'] = supported_print_qualities
    body['capabilities']['supports_fit_pdf_to_page'] = supports_fit_pdf_to_page
    body['capabilities']['top_margins'] = top_margins
    body['created_date_time'] = created_date_time
    body['allowed_groups'] = allowed_groups
    body['allowed_users'] = allowed_users
    body['printer'] = printer
    return client.update_shares(printer_share_id=printer_share_id,
                                body=body)


def devicescloudprint_print_update_task_definition(client,
                                                   print_task_definition_id,
                                                   id_=None,
                                                   created_by=None,
                                                   display_name=None,
                                                   tasks=None):
    body = {}
    body['id'] = id_
    body['created_by'] = created_by
    body['display_name'] = display_name
    body['tasks'] = tasks
    return client.update_task_definitions(print_task_definition_id=print_task_definition_id,
                                          body=body)


def devicescloudprint_print_printer_create(client,
                                           display_name=None,
                                           manufacturer=None,
                                           model=None,
                                           physical_device_id=None,
                                           has_physical_device=None,
                                           certificate_signing_request=None,
                                           connector_id=None):
    if has_physical_device is None:
        has_physical_device = False
    body = {}
    body['display_name'] = display_name
    body['manufacturer'] = manufacturer
    body['model'] = model
    body['physical_device_id'] = physical_device_id
    body['has_physical_device'] = False if has_physical_device is None else has_physical_device
    body['certificate_signing_request'] = certificate_signing_request
    body['connector_id'] = connector_id
    return client.create(body=body)


def devicescloudprint_print_printer_delete(client,
                                           printer_id,
                                           print_identity_id=None,
                                           if_match=None,
                                           print_user_identity_id=None,
                                           print_task_trigger_id=None):
    if printer_id is not None and print_identity_id is not None:
        return client.delete_allowed_groups(printer_id=printer_id,
                                            print_identity_id=print_identity_id,
                                            if_match=if_match)
    elif printer_id is not None and print_user_identity_id is not None:
        return client.delete_allowed_users(printer_id=printer_id,
                                           print_user_identity_id=print_user_identity_id,
                                           if_match=if_match)
    elif printer_id is not None and print_task_trigger_id is not None:
        return client.delete_task_triggers(printer_id=printer_id,
                                           print_task_trigger_id=print_task_trigger_id,
                                           if_match=if_match)
    return client.delete_ref_share(printer_id=printer_id,
                                   if_match=if_match)


def devicescloudprint_print_printer_create_allowed_group(client,
                                                         printer_id,
                                                         id_=None,
                                                         display_name=None):
    body = {}
    body['id'] = id_
    body['display_name'] = display_name
    return client.create_allowed_groups(printer_id=printer_id,
                                        body=body)


def devicescloudprint_print_printer_create_allowed_user(client,
                                                        printer_id,
                                                        id_=None,
                                                        display_name=None,
                                                        ip_address=None,
                                                        user_principal_name=None):
    body = {}
    body['id'] = id_
    body['display_name'] = display_name
    body['ip_address'] = ip_address
    body['user_principal_name'] = user_principal_name
    return client.create_allowed_users(printer_id=printer_id,
                                       body=body)


def devicescloudprint_print_printer_create_ref_connector(client,
                                                         printer_id,
                                                         body):
    return client.create_ref_connectors(printer_id=printer_id,
                                        body=body)


def devicescloudprint_print_printer_create_ref_share(client,
                                                     printer_id,
                                                     body):
    return client.create_ref_shares(printer_id=printer_id,
                                    body=body)


def devicescloudprint_print_printer_create_task_trigger(client,
                                                        printer_id,
                                                        id_=None,
                                                        event=None,
                                                        definition=None):
    body = {}
    body['id'] = id_
    body['event'] = event
    body['definition'] = definition
    return client.create_task_triggers(printer_id=printer_id,
                                       body=body)


def devicescloudprint_print_printer_list_allowed_group(client,
                                                       printer_id,
                                                       orderby=None,
                                                       select=None,
                                                       expand=None):
    return client.list_allowed_groups(printer_id=printer_id,
                                      orderby=orderby,
                                      select=select,
                                      expand=expand)


def devicescloudprint_print_printer_list_allowed_user(client,
                                                      printer_id,
                                                      orderby=None,
                                                      select=None,
                                                      expand=None):
    return client.list_allowed_users(printer_id=printer_id,
                                     orderby=orderby,
                                     select=select,
                                     expand=expand)


def devicescloudprint_print_printer_list_connector(client,
                                                   printer_id,
                                                   orderby=None,
                                                   select=None,
                                                   expand=None):
    return client.list_connectors(printer_id=printer_id,
                                  orderby=orderby,
                                  select=select,
                                  expand=expand)


def devicescloudprint_print_printer_list_ref_connector(client,
                                                       printer_id,
                                                       orderby=None):
    return client.list_ref_connectors(printer_id=printer_id,
                                      orderby=orderby)


def devicescloudprint_print_printer_list_ref_share(client,
                                                   printer_id,
                                                   orderby=None):
    return client.list_ref_shares(printer_id=printer_id,
                                  orderby=orderby)


def devicescloudprint_print_printer_list_share(client,
                                               printer_id,
                                               orderby=None,
                                               select=None,
                                               expand=None):
    return client.list_shares(printer_id=printer_id,
                              orderby=orderby,
                              select=select,
                              expand=expand)


def devicescloudprint_print_printer_list_task_trigger(client,
                                                      printer_id,
                                                      orderby=None,
                                                      select=None,
                                                      expand=None):
    return client.list_task_triggers(printer_id=printer_id,
                                     orderby=orderby,
                                     select=select,
                                     expand=expand)


def devicescloudprint_print_printer_reset_default(client,
                                                  printer_id):
    return client.reset_defaults(printer_id=printer_id)


def devicescloudprint_print_printer_restore_factory_default(client,
                                                            printer_id):
    return client.restore_factory_defaults(printer_id=printer_id)


def devicescloudprint_print_printer_set_ref_share(client,
                                                  printer_id,
                                                  body):
    return client.set_ref_share(printer_id=printer_id,
                                body=body)


def devicescloudprint_print_printer_show_allowed_group(client,
                                                       printer_id,
                                                       print_identity_id,
                                                       select=None,
                                                       expand=None):
    return client.get_allowed_groups(printer_id=printer_id,
                                     print_identity_id=print_identity_id,
                                     select=select,
                                     expand=expand)


def devicescloudprint_print_printer_show_allowed_user(client,
                                                      printer_id,
                                                      print_user_identity_id,
                                                      select=None,
                                                      expand=None):
    return client.get_allowed_users(printer_id=printer_id,
                                    print_user_identity_id=print_user_identity_id,
                                    select=select,
                                    expand=expand)


def devicescloudprint_print_printer_show_capability(client,
                                                    printer_id):
    return client.get_capabilities(printer_id=printer_id)


def devicescloudprint_print_printer_show_ref_share(client,
                                                   printer_id):
    return client.get_ref_share(printer_id=printer_id)


def devicescloudprint_print_printer_show_share(client,
                                               printer_id,
                                               select=None,
                                               expand=None):
    return client.get_share(printer_id=printer_id,
                            select=select,
                            expand=expand)


def devicescloudprint_print_printer_show_task_trigger(client,
                                                      printer_id,
                                                      print_task_trigger_id,
                                                      select=None,
                                                      expand=None):
    return client.get_task_triggers(printer_id=printer_id,
                                    print_task_trigger_id=print_task_trigger_id,
                                    select=select,
                                    expand=expand)


def devicescloudprint_print_printer_update_allowed_group(client,
                                                         printer_id,
                                                         print_identity_id,
                                                         id_=None,
                                                         display_name=None):
    body = {}
    body['id'] = id_
    body['display_name'] = display_name
    return client.update_allowed_groups(printer_id=printer_id,
                                        print_identity_id=print_identity_id,
                                        body=body)


def devicescloudprint_print_printer_update_allowed_user(client,
                                                        printer_id,
                                                        print_user_identity_id,
                                                        id_=None,
                                                        display_name=None,
                                                        ip_address=None,
                                                        user_principal_name=None):
    body = {}
    body['id'] = id_
    body['display_name'] = display_name
    body['ip_address'] = ip_address
    body['user_principal_name'] = user_principal_name
    return client.update_allowed_users(printer_id=printer_id,
                                       print_user_identity_id=print_user_identity_id,
                                       body=body)


def devicescloudprint_print_printer_update_task_trigger(client,
                                                        printer_id,
                                                        print_task_trigger_id,
                                                        id_=None,
                                                        event=None,
                                                        definition=None):
    body = {}
    body['id'] = id_
    body['event'] = event
    body['definition'] = definition
    return client.update_task_triggers(printer_id=printer_id,
                                       print_task_trigger_id=print_task_trigger_id,
                                       body=body)


def devicescloudprint_print_printer_task_trigger_delete(client,
                                                        printer_id,
                                                        print_task_trigger_id,
                                                        if_match=None):
    return client.delete_ref_definition(printer_id=printer_id,
                                        print_task_trigger_id=print_task_trigger_id,
                                        if_match=if_match)


def devicescloudprint_print_printer_task_trigger_set_ref_definition(client,
                                                                    printer_id,
                                                                    print_task_trigger_id,
                                                                    body):
    return client.set_ref_definition(printer_id=printer_id,
                                     print_task_trigger_id=print_task_trigger_id,
                                     body=body)


def devicescloudprint_print_printer_task_trigger_show_definition(client,
                                                                 printer_id,
                                                                 print_task_trigger_id,
                                                                 select=None,
                                                                 expand=None):
    return client.get_definition(printer_id=printer_id,
                                 print_task_trigger_id=print_task_trigger_id,
                                 select=select,
                                 expand=expand)


def devicescloudprint_print_printer_task_trigger_show_ref_definition(client,
                                                                     printer_id,
                                                                     print_task_trigger_id):
    return client.get_ref_definition(printer_id=printer_id,
                                     print_task_trigger_id=print_task_trigger_id)


def devicescloudprint_print_printer_share_delete(client,
                                                 printer_share_id,
                                                 print_identity_id=None,
                                                 if_match=None,
                                                 print_user_identity_id=None):
    if printer_share_id is not None and print_identity_id is not None:
        return client.delete_allowed_groups(printer_share_id=printer_share_id,
                                            print_identity_id=print_identity_id,
                                            if_match=if_match)
    elif printer_share_id is not None and print_user_identity_id is not None:
        return client.delete_allowed_users(printer_share_id=printer_share_id,
                                           print_user_identity_id=print_user_identity_id,
                                           if_match=if_match)
    return client.delete_ref_printer(printer_share_id=printer_share_id,
                                     if_match=if_match)


def devicescloudprint_print_printer_share_create_allowed_group(client,
                                                               printer_share_id,
                                                               id_=None,
                                                               display_name=None):
    body = {}
    body['id'] = id_
    body['display_name'] = display_name
    return client.create_allowed_groups(printer_share_id=printer_share_id,
                                        body=body)


def devicescloudprint_print_printer_share_create_allowed_user(client,
                                                              printer_share_id,
                                                              id_=None,
                                                              display_name=None,
                                                              ip_address=None,
                                                              user_principal_name=None):
    body = {}
    body['id'] = id_
    body['display_name'] = display_name
    body['ip_address'] = ip_address
    body['user_principal_name'] = user_principal_name
    return client.create_allowed_users(printer_share_id=printer_share_id,
                                       body=body)


def devicescloudprint_print_printer_share_list_allowed_group(client,
                                                             printer_share_id,
                                                             orderby=None,
                                                             select=None,
                                                             expand=None):
    return client.list_allowed_groups(printer_share_id=printer_share_id,
                                      orderby=orderby,
                                      select=select,
                                      expand=expand)


def devicescloudprint_print_printer_share_list_allowed_user(client,
                                                            printer_share_id,
                                                            orderby=None,
                                                            select=None,
                                                            expand=None):
    return client.list_allowed_users(printer_share_id=printer_share_id,
                                     orderby=orderby,
                                     select=select,
                                     expand=expand)


def devicescloudprint_print_printer_share_set_ref_printer(client,
                                                          printer_share_id,
                                                          body):
    return client.set_ref_printer(printer_share_id=printer_share_id,
                                  body=body)


def devicescloudprint_print_printer_share_show_allowed_group(client,
                                                             printer_share_id,
                                                             print_identity_id,
                                                             select=None,
                                                             expand=None):
    return client.get_allowed_groups(printer_share_id=printer_share_id,
                                     print_identity_id=print_identity_id,
                                     select=select,
                                     expand=expand)


def devicescloudprint_print_printer_share_show_allowed_user(client,
                                                            printer_share_id,
                                                            print_user_identity_id,
                                                            select=None,
                                                            expand=None):
    return client.get_allowed_users(printer_share_id=printer_share_id,
                                    print_user_identity_id=print_user_identity_id,
                                    select=select,
                                    expand=expand)


def devicescloudprint_print_printer_share_show_printer(client,
                                                       printer_share_id,
                                                       select=None,
                                                       expand=None):
    return client.get_printer(printer_share_id=printer_share_id,
                              select=select,
                              expand=expand)


def devicescloudprint_print_printer_share_show_ref_printer(client,
                                                           printer_share_id):
    return client.get_ref_printer(printer_share_id=printer_share_id)


def devicescloudprint_print_printer_share_update_allowed_group(client,
                                                               printer_share_id,
                                                               print_identity_id,
                                                               id_=None,
                                                               display_name=None):
    body = {}
    body['id'] = id_
    body['display_name'] = display_name
    return client.update_allowed_groups(printer_share_id=printer_share_id,
                                        print_identity_id=print_identity_id,
                                        body=body)


def devicescloudprint_print_printer_share_update_allowed_user(client,
                                                              printer_share_id,
                                                              print_user_identity_id,
                                                              id_=None,
                                                              display_name=None,
                                                              ip_address=None,
                                                              user_principal_name=None):
    body = {}
    body['id'] = id_
    body['display_name'] = display_name
    body['ip_address'] = ip_address
    body['user_principal_name'] = user_principal_name
    return client.update_allowed_users(printer_share_id=printer_share_id,
                                       print_user_identity_id=print_user_identity_id,
                                       body=body)


def devicescloudprint_print_printer_share_printer_reset_default(client,
                                                                printer_share_id):
    return client.reset_defaults(printer_share_id=printer_share_id)


def devicescloudprint_print_printer_share_printer_restore_factory_default(client,
                                                                          printer_share_id):
    return client.restore_factory_defaults(printer_share_id=printer_share_id)


def devicescloudprint_print_printer_share_printer_show_capability(client,
                                                                  printer_share_id):
    return client.get_capabilities(printer_share_id=printer_share_id)


def devicescloudprint_print_report_show_group_archived_print_job(client,
                                                                 group_id,
                                                                 period_start,
                                                                 period_end):
    return client.get_group_archived_print_jobs(group_id=group_id,
                                                period_start=period_start,
                                                period_end=period_end)


def devicescloudprint_print_report_show_group_print_usage_summary(client,
                                                                  group_id,
                                                                  period_start,
                                                                  period_end):
    return client.get_group_print_usage_summary(group_id=group_id,
                                                period_start=period_start,
                                                period_end=period_end)


def devicescloudprint_print_report_show_overall_print_usage_summary(client,
                                                                    period_start,
                                                                    period_end,
                                                                    top_lists_size):
    return client.get_overall_print_usage_summary(period_start=period_start,
                                                  period_end=period_end,
                                                  top_lists_size=top_lists_size)


def devicescloudprint_print_report_show_print_usage_summary(client,
                                                            period_start,
                                                            period_end,
                                                            time_span_in_minutes=None):
    if period_start is not None and period_end is not None and time_span_in_minutes is not None:
        return client.get_print_usage_summaries_by_time_span(period_start=period_start,
                                                             period_end=period_end,
                                                             time_span_in_minutes=time_span_in_minutes)
    elif period_start is not None and period_end is not None:
        return client.get_print_usage_summaries_by_group(period_start=period_start,
                                                         period_end=period_end)
    elif period_start is not None and period_end is not None:
        return client.get_print_usage_summaries_by_printer(period_start=period_start,
                                                           period_end=period_end)
    return client.get_print_usage_summaries_by_user(period_start=period_start,
                                                    period_end=period_end)


def devicescloudprint_print_report_show_printer_archived_print_job(client,
                                                                   printer_id,
                                                                   period_start,
                                                                   period_end):
    return client.get_printer_archived_print_jobs(printer_id=printer_id,
                                                  period_start=period_start,
                                                  period_end=period_end)


def devicescloudprint_print_report_show_printer_usage_summary(client,
                                                              printer_id,
                                                              period_start,
                                                              period_end):
    return client.get_printer_usage_summary(printer_id=printer_id,
                                            period_start=period_start,
                                            period_end=period_end)


def devicescloudprint_print_report_show_user_archived_print_job(client,
                                                                user_id,
                                                                period_start,
                                                                period_end):
    return client.get_user_archived_print_jobs(user_id=user_id,
                                               period_start=period_start,
                                               period_end=period_end)


def devicescloudprint_print_report_show_user_print_usage_summary(client,
                                                                 user_id,
                                                                 period_start,
                                                                 period_end):
    return client.get_user_print_usage_summary(user_id=user_id,
                                               period_start=period_start,
                                               period_end=period_end)


def devicescloudprint_print_service_delete(client,
                                           print_service_id,
                                           print_service_endpoint_id,
                                           if_match=None):
    return client.delete_endpoints(print_service_id=print_service_id,
                                   print_service_endpoint_id=print_service_endpoint_id,
                                   if_match=if_match)


def devicescloudprint_print_service_create_endpoint(client,
                                                    print_service_id,
                                                    id_=None,
                                                    display_name=None,
                                                    uri=None):
    body = {}
    body['id'] = id_
    body['display_name'] = display_name
    body['uri'] = uri
    return client.create_endpoints(print_service_id=print_service_id,
                                   body=body)


def devicescloudprint_print_service_list_endpoint(client,
                                                  print_service_id,
                                                  orderby=None,
                                                  select=None,
                                                  expand=None):
    return client.list_endpoints(print_service_id=print_service_id,
                                 orderby=orderby,
                                 select=select,
                                 expand=expand)


def devicescloudprint_print_service_show_endpoint(client,
                                                  print_service_id,
                                                  print_service_endpoint_id,
                                                  select=None,
                                                  expand=None):
    return client.get_endpoints(print_service_id=print_service_id,
                                print_service_endpoint_id=print_service_endpoint_id,
                                select=select,
                                expand=expand)


def devicescloudprint_print_service_update_endpoint(client,
                                                    print_service_id,
                                                    print_service_endpoint_id,
                                                    id_=None,
                                                    display_name=None,
                                                    uri=None):
    body = {}
    body['id'] = id_
    body['display_name'] = display_name
    body['uri'] = uri
    return client.update_endpoints(print_service_id=print_service_id,
                                   print_service_endpoint_id=print_service_endpoint_id,
                                   body=body)


def devicescloudprint_print_share_delete(client,
                                         printer_share_id,
                                         print_identity_id=None,
                                         if_match=None,
                                         print_user_identity_id=None):
    if printer_share_id is not None and print_identity_id is not None:
        return client.delete_allowed_groups(printer_share_id=printer_share_id,
                                            print_identity_id=print_identity_id,
                                            if_match=if_match)
    elif printer_share_id is not None and print_user_identity_id is not None:
        return client.delete_allowed_users(printer_share_id=printer_share_id,
                                           print_user_identity_id=print_user_identity_id,
                                           if_match=if_match)
    return client.delete_ref_printer(printer_share_id=printer_share_id,
                                     if_match=if_match)


def devicescloudprint_print_share_create_allowed_group(client,
                                                       printer_share_id,
                                                       id_=None,
                                                       display_name=None):
    body = {}
    body['id'] = id_
    body['display_name'] = display_name
    return client.create_allowed_groups(printer_share_id=printer_share_id,
                                        body=body)


def devicescloudprint_print_share_create_allowed_user(client,
                                                      printer_share_id,
                                                      id_=None,
                                                      display_name=None,
                                                      ip_address=None,
                                                      user_principal_name=None):
    body = {}
    body['id'] = id_
    body['display_name'] = display_name
    body['ip_address'] = ip_address
    body['user_principal_name'] = user_principal_name
    return client.create_allowed_users(printer_share_id=printer_share_id,
                                       body=body)


def devicescloudprint_print_share_list_allowed_group(client,
                                                     printer_share_id,
                                                     orderby=None,
                                                     select=None,
                                                     expand=None):
    return client.list_allowed_groups(printer_share_id=printer_share_id,
                                      orderby=orderby,
                                      select=select,
                                      expand=expand)


def devicescloudprint_print_share_list_allowed_user(client,
                                                    printer_share_id,
                                                    orderby=None,
                                                    select=None,
                                                    expand=None):
    return client.list_allowed_users(printer_share_id=printer_share_id,
                                     orderby=orderby,
                                     select=select,
                                     expand=expand)


def devicescloudprint_print_share_set_ref_printer(client,
                                                  printer_share_id,
                                                  body):
    return client.set_ref_printer(printer_share_id=printer_share_id,
                                  body=body)


def devicescloudprint_print_share_show_allowed_group(client,
                                                     printer_share_id,
                                                     print_identity_id,
                                                     select=None,
                                                     expand=None):
    return client.get_allowed_groups(printer_share_id=printer_share_id,
                                     print_identity_id=print_identity_id,
                                     select=select,
                                     expand=expand)


def devicescloudprint_print_share_show_allowed_user(client,
                                                    printer_share_id,
                                                    print_user_identity_id,
                                                    select=None,
                                                    expand=None):
    return client.get_allowed_users(printer_share_id=printer_share_id,
                                    print_user_identity_id=print_user_identity_id,
                                    select=select,
                                    expand=expand)


def devicescloudprint_print_share_show_printer(client,
                                               printer_share_id,
                                               select=None,
                                               expand=None):
    return client.get_printer(printer_share_id=printer_share_id,
                              select=select,
                              expand=expand)


def devicescloudprint_print_share_show_ref_printer(client,
                                                   printer_share_id):
    return client.get_ref_printer(printer_share_id=printer_share_id)


def devicescloudprint_print_share_update_allowed_group(client,
                                                       printer_share_id,
                                                       print_identity_id,
                                                       id_=None,
                                                       display_name=None):
    body = {}
    body['id'] = id_
    body['display_name'] = display_name
    return client.update_allowed_groups(printer_share_id=printer_share_id,
                                        print_identity_id=print_identity_id,
                                        body=body)


def devicescloudprint_print_share_update_allowed_user(client,
                                                      printer_share_id,
                                                      print_user_identity_id,
                                                      id_=None,
                                                      display_name=None,
                                                      ip_address=None,
                                                      user_principal_name=None):
    body = {}
    body['id'] = id_
    body['display_name'] = display_name
    body['ip_address'] = ip_address
    body['user_principal_name'] = user_principal_name
    return client.update_allowed_users(printer_share_id=printer_share_id,
                                       print_user_identity_id=print_user_identity_id,
                                       body=body)


def devicescloudprint_print_share_printer_reset_default(client,
                                                        printer_share_id):
    return client.reset_defaults(printer_share_id=printer_share_id)


def devicescloudprint_print_share_printer_restore_factory_default(client,
                                                                  printer_share_id):
    return client.restore_factory_defaults(printer_share_id=printer_share_id)


def devicescloudprint_print_share_printer_show_capability(client,
                                                          printer_share_id):
    return client.get_capabilities(printer_share_id=printer_share_id)


def devicescloudprint_print_task_definition_delete(client,
                                                   print_task_definition_id,
                                                   print_task_id,
                                                   if_match=None):
    return client.delete_tasks(print_task_definition_id=print_task_definition_id,
                               print_task_id=print_task_id,
                               if_match=if_match)


def devicescloudprint_print_task_definition_create_task(client,
                                                        print_task_definition_id,
                                                        id_=None,
                                                        parent_url=None,
                                                        status=None,
                                                        definition=None,
                                                        microsoft_graph_entity_id=None,
                                                        event=None,
                                                        microsoft_graph_print_task_definition=None):
    body = {}
    body['id'] = id_
    body['parent_url'] = parent_url
    body['status'] = status
    body['definition'] = definition
    body = microsoft_graph_entity_id
    body['trigger'] = {}
    body['trigger']['event'] = event
    body['trigger']['definition'] = microsoft_graph_print_task_definition
    return client.create_tasks(print_task_definition_id=print_task_definition_id,
                               body=body)


def devicescloudprint_print_task_definition_list_task(client,
                                                      print_task_definition_id,
                                                      orderby=None,
                                                      select=None,
                                                      expand=None):
    return client.list_tasks(print_task_definition_id=print_task_definition_id,
                             orderby=orderby,
                             select=select,
                             expand=expand)


def devicescloudprint_print_task_definition_show_task(client,
                                                      print_task_definition_id,
                                                      print_task_id,
                                                      select=None,
                                                      expand=None):
    return client.get_tasks(print_task_definition_id=print_task_definition_id,
                            print_task_id=print_task_id,
                            select=select,
                            expand=expand)


def devicescloudprint_print_task_definition_update_task(client,
                                                        print_task_definition_id,
                                                        print_task_id,
                                                        id_=None,
                                                        parent_url=None,
                                                        status=None,
                                                        definition=None,
                                                        microsoft_graph_entity_id=None,
                                                        event=None,
                                                        microsoft_graph_print_task_definition=None):
    body = {}
    body['id'] = id_
    body['parent_url'] = parent_url
    body['status'] = status
    body['definition'] = definition
    body = microsoft_graph_entity_id
    body['trigger'] = {}
    body['trigger']['event'] = event
    body['trigger']['definition'] = microsoft_graph_print_task_definition
    return client.update_tasks(print_task_definition_id=print_task_definition_id,
                               print_task_id=print_task_id,
                               body=body)


def devicescloudprint_print_task_definition_task_delete(client,
                                                        print_task_definition_id,
                                                        print_task_id,
                                                        if_match=None):
    if print_task_definition_id is not None and print_task_id is not None:
        return client.delete_ref_definition(print_task_definition_id=print_task_definition_id,
                                            print_task_id=print_task_id,
                                            if_match=if_match)
    return client.delete_ref_trigger(print_task_definition_id=print_task_definition_id,
                                     print_task_id=print_task_id,
                                     if_match=if_match)


def devicescloudprint_print_task_definition_task_set_ref_definition(client,
                                                                    print_task_definition_id,
                                                                    print_task_id,
                                                                    body):
    return client.set_ref_definition(print_task_definition_id=print_task_definition_id,
                                     print_task_id=print_task_id,
                                     body=body)


def devicescloudprint_print_task_definition_task_set_ref_trigger(client,
                                                                 print_task_definition_id,
                                                                 print_task_id,
                                                                 body):
    return client.set_ref_trigger(print_task_definition_id=print_task_definition_id,
                                  print_task_id=print_task_id,
                                  body=body)


def devicescloudprint_print_task_definition_task_show_definition(client,
                                                                 print_task_definition_id,
                                                                 print_task_id,
                                                                 select=None,
                                                                 expand=None):
    return client.get_definition(print_task_definition_id=print_task_definition_id,
                                 print_task_id=print_task_id,
                                 select=select,
                                 expand=expand)


def devicescloudprint_print_task_definition_task_show_ref_definition(client,
                                                                     print_task_definition_id,
                                                                     print_task_id):
    return client.get_ref_definition(print_task_definition_id=print_task_definition_id,
                                     print_task_id=print_task_id)


def devicescloudprint_print_task_definition_task_show_ref_trigger(client,
                                                                  print_task_definition_id,
                                                                  print_task_id):
    return client.get_ref_trigger(print_task_definition_id=print_task_definition_id,
                                  print_task_id=print_task_id)


def devicescloudprint_print_task_definition_task_show_trigger(client,
                                                              print_task_definition_id,
                                                              print_task_id,
                                                              select=None,
                                                              expand=None):
    return client.get_trigger(print_task_definition_id=print_task_definition_id,
                              print_task_id=print_task_id,
                              select=select,
                              expand=expand)
