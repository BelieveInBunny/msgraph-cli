# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=too-many-lines
# pylint: disable=too-many-statements

from msgraph.cli.core.commands.parameters import (
    get_three_state_flag,
    get_enum_type,
    get_location_type
)
from msgraph.cli.core.commands.validators import validate_file_or_dict
from azext_devicescloudprint_beta.action import (
    AddDevicescloudprintPrintCreateOperationStatus,
    AddDefaults,
    AddDevicescloudprintPrintCreatePrinterStatus,
    AddCopiesPerJob,
    AddDevicescloudprintPrintCreatePrinterAllowedGroups,
    AddDevicescloudprintPrintCreatePrinterAllowedUsers,
    AddDevicescloudprintPrintCreatePrinterShareAllowedGroups,
    AddDevicescloudprintPrintCreatePrinterShareAllowedUsers,
    AddCredentialUserRegistrationDetails,
    AddUserCredentialUsageDetails,
    AddDailyPrintUsageSummariesByPrinter,
    AddDailyPrintUsageSummariesByUser,
    AddMonthlyPrintUsageSummariesByPrinter,
    AddMonthlyPrintUsageSummariesByUser,
    AddEndpoints,
    AddCreatedBy,
    AddCertificateSigningRequest,
    AddStatus
)


def load_arguments(self, _):

    with self.argument_context('devicescloudprint print show-print') as c:
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('devicescloudprint print update-print') as c:
        c.argument('connectors', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('operations', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('printers', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('printer_shares', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('reports', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('services', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('shares', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('task_definitions', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('document_conversion_enabled', arg_type=get_three_state_flag(), help='', arg_group='Settings')

    with self.argument_context('devicescloudprint print create-connector') as c:
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('app_version', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('fully_qualified_domain_name', type=str, help='')
        c.argument('location', arg_type=get_location_type(self.cli_ctx))
        c.argument('name', type=str, help='')
        c.argument('operating_system', type=str, help='')
        c.argument('registered_date_time', help='')
        c.argument('last_connection_time', help='', arg_group='Device Health')

    with self.argument_context('devicescloudprint print create-operation') as c:
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_date_time', help='')
        c.argument('status', action=AddDevicescloudprintPrintCreateOperationStatus, nargs='+',
                   help='printOperationStatus')

    with self.argument_context('devicescloudprint print create-printer') as c:
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('defaults', action=AddDefaults, nargs='+', help='printerDefaults')
        c.argument('display_name', type=str, help='')
        c.argument('is_accepting_jobs', arg_type=get_three_state_flag(), help='')
        c.argument('location', arg_type=get_location_type(self.cli_ctx))
        c.argument('manufacturer', type=str, help='')
        c.argument('model', type=str, help='')
        c.argument('name', type=str, help='')
        c.argument('status', action=AddDevicescloudprintPrintCreatePrinterStatus, nargs='+', help='printerStatus')
        c.argument('jobs', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('bottom_margins', nargs='+', help='', arg_group='Capabilities')
        c.argument('collation', arg_type=get_three_state_flag(), help='', arg_group='Capabilities')
        c.argument('color_modes', nargs='+', help='', arg_group='Capabilities')
        c.argument('content_types', nargs='+', help='', arg_group='Capabilities')
        c.argument('copies_per_job', action=AddCopiesPerJob, nargs='+', help='integerRange', arg_group='Capabilities')
        c.argument('dpis', nargs='+', help='', arg_group='Capabilities')
        c.argument('duplex_modes', nargs='+', help='', arg_group='Capabilities')
        c.argument('feed_directions', nargs='+', help='', arg_group='Capabilities')
        c.argument('feed_orientations', nargs='+', help='', arg_group='Capabilities')
        c.argument('finishings', nargs='+', help='', arg_group='Capabilities')
        c.argument('input_bins', nargs='+', help='', arg_group='Capabilities')
        c.argument('is_color_printing_supported', arg_type=get_three_state_flag(), help='', arg_group='Capabilities')
        c.argument('is_page_range_supported', arg_type=get_three_state_flag(), help='', arg_group='Capabilities')
        c.argument('left_margins', nargs='+', help='', arg_group='Capabilities')
        c.argument('media_colors', nargs='+', help='', arg_group='Capabilities')
        c.argument('media_sizes', nargs='+', help='', arg_group='Capabilities')
        c.argument('media_types', nargs='+', help='', arg_group='Capabilities')
        c.argument('multipage_layouts', nargs='+', help='', arg_group='Capabilities')
        c.argument('orientations', nargs='+', help='', arg_group='Capabilities')
        c.argument('output_bins', nargs='+', help='', arg_group='Capabilities')
        c.argument('pages_per_sheet', nargs='+', help='', arg_group='Capabilities')
        c.argument('qualities', nargs='+', help='', arg_group='Capabilities')
        c.argument('right_margins', nargs='+', help='', arg_group='Capabilities')
        c.argument('scalings', nargs='+', help='', arg_group='Capabilities')
        c.argument('supported_color_configurations', nargs='+', help='', arg_group='Capabilities')
        c.argument('supported_copies_per_job', action=AddCopiesPerJob, nargs='+', help='integerRange',
                   arg_group='Capabilities')
        c.argument('supported_document_mime_types', nargs='+', help='', arg_group='Capabilities')
        c.argument('supported_duplex_configurations', nargs='+', help='', arg_group='Capabilities')
        c.argument('supported_finishings', nargs='+', help='', arg_group='Capabilities')
        c.argument('supported_media_colors', nargs='+', help='', arg_group='Capabilities')
        c.argument('supported_media_sizes', nargs='+', help='', arg_group='Capabilities')
        c.argument('supported_media_types', nargs='+', help='', arg_group='Capabilities')
        c.argument('supported_orientations', nargs='+', help='', arg_group='Capabilities')
        c.argument('supported_output_bins', nargs='+', help='', arg_group='Capabilities')
        c.argument('supported_pages_per_sheet', action=AddCopiesPerJob, nargs='+', help='integerRange',
                   arg_group='Capabilities')
        c.argument('supported_presentation_directions', nargs='+', help='', arg_group='Capabilities')
        c.argument('supported_print_qualities', nargs='+', help='', arg_group='Capabilities')
        c.argument('supports_fit_pdf_to_page', arg_type=get_three_state_flag(), help='', arg_group='Capabilities')
        c.argument('top_margins', nargs='+', help='', arg_group='Capabilities')
        c.argument('accepting_jobs', arg_type=get_three_state_flag(), help='')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='')
        c.argument('registered_date_time', help='')
        c.argument('allowed_groups', action=AddDevicescloudprintPrintCreatePrinterAllowedGroups, nargs='+', help='')
        c.argument('allowed_users', action=AddDevicescloudprintPrintCreatePrinterAllowedUsers, nargs='+', help='')
        c.argument('connectors', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('share', type=validate_file_or_dict, help='printerShare Expected value: json-string/@json-file.')
        c.argument('shares', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('task_triggers', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')

    with self.argument_context('devicescloudprint print create-printer-share') as c:
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('defaults', action=AddDefaults, nargs='+', help='printerDefaults')
        c.argument('display_name', type=str, help='')
        c.argument('is_accepting_jobs', arg_type=get_three_state_flag(), help='')
        c.argument('location', arg_type=get_location_type(self.cli_ctx))
        c.argument('manufacturer', type=str, help='')
        c.argument('model', type=str, help='')
        c.argument('name', type=str, help='')
        c.argument('status', action=AddDevicescloudprintPrintCreatePrinterStatus, nargs='+', help='printerStatus')
        c.argument('jobs', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('bottom_margins', nargs='+', help='', arg_group='Capabilities')
        c.argument('collation', arg_type=get_three_state_flag(), help='', arg_group='Capabilities')
        c.argument('color_modes', nargs='+', help='', arg_group='Capabilities')
        c.argument('content_types', nargs='+', help='', arg_group='Capabilities')
        c.argument('copies_per_job', action=AddCopiesPerJob, nargs='+', help='integerRange', arg_group='Capabilities')
        c.argument('dpis', nargs='+', help='', arg_group='Capabilities')
        c.argument('duplex_modes', nargs='+', help='', arg_group='Capabilities')
        c.argument('feed_directions', nargs='+', help='', arg_group='Capabilities')
        c.argument('feed_orientations', nargs='+', help='', arg_group='Capabilities')
        c.argument('finishings', nargs='+', help='', arg_group='Capabilities')
        c.argument('input_bins', nargs='+', help='', arg_group='Capabilities')
        c.argument('is_color_printing_supported', arg_type=get_three_state_flag(), help='', arg_group='Capabilities')
        c.argument('is_page_range_supported', arg_type=get_three_state_flag(), help='', arg_group='Capabilities')
        c.argument('left_margins', nargs='+', help='', arg_group='Capabilities')
        c.argument('media_colors', nargs='+', help='', arg_group='Capabilities')
        c.argument('media_sizes', nargs='+', help='', arg_group='Capabilities')
        c.argument('media_types', nargs='+', help='', arg_group='Capabilities')
        c.argument('multipage_layouts', nargs='+', help='', arg_group='Capabilities')
        c.argument('orientations', nargs='+', help='', arg_group='Capabilities')
        c.argument('output_bins', nargs='+', help='', arg_group='Capabilities')
        c.argument('pages_per_sheet', nargs='+', help='', arg_group='Capabilities')
        c.argument('qualities', nargs='+', help='', arg_group='Capabilities')
        c.argument('right_margins', nargs='+', help='', arg_group='Capabilities')
        c.argument('scalings', nargs='+', help='', arg_group='Capabilities')
        c.argument('supported_color_configurations', nargs='+', help='', arg_group='Capabilities')
        c.argument('supported_copies_per_job', action=AddCopiesPerJob, nargs='+', help='integerRange',
                   arg_group='Capabilities')
        c.argument('supported_document_mime_types', nargs='+', help='', arg_group='Capabilities')
        c.argument('supported_duplex_configurations', nargs='+', help='', arg_group='Capabilities')
        c.argument('supported_finishings', nargs='+', help='', arg_group='Capabilities')
        c.argument('supported_media_colors', nargs='+', help='', arg_group='Capabilities')
        c.argument('supported_media_sizes', nargs='+', help='', arg_group='Capabilities')
        c.argument('supported_media_types', nargs='+', help='', arg_group='Capabilities')
        c.argument('supported_orientations', nargs='+', help='', arg_group='Capabilities')
        c.argument('supported_output_bins', nargs='+', help='', arg_group='Capabilities')
        c.argument('supported_pages_per_sheet', action=AddCopiesPerJob, nargs='+', help='integerRange',
                   arg_group='Capabilities')
        c.argument('supported_presentation_directions', nargs='+', help='', arg_group='Capabilities')
        c.argument('supported_print_qualities', nargs='+', help='', arg_group='Capabilities')
        c.argument('supports_fit_pdf_to_page', arg_type=get_three_state_flag(), help='', arg_group='Capabilities')
        c.argument('top_margins', nargs='+', help='', arg_group='Capabilities')
        c.argument('allow_all_users', arg_type=get_three_state_flag(), help='')
        c.argument('created_date_time', help='')
        c.argument('allowed_groups', action=AddDevicescloudprintPrintCreatePrinterShareAllowedGroups, nargs='+',
                   help='')
        c.argument('allowed_users', action=AddDevicescloudprintPrintCreatePrinterShareAllowedUsers, nargs='+',
                   help='')
        c.argument('printer', type=validate_file_or_dict, help='printer Expected value: json-string/@json-file.')

    with self.argument_context('devicescloudprint print create-report') as c:
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('application_sign_in_detailed_summary', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('credential_user_registration_details', action=AddCredentialUserRegistrationDetails, nargs='+',
                   help='')
        c.argument('user_credential_usage_details', action=AddUserCredentialUsageDetails, nargs='+', help='')
        c.argument('daily_print_usage_summaries_by_printer', action=AddDailyPrintUsageSummariesByPrinter, nargs='+',
                   help='')
        c.argument('daily_print_usage_summaries_by_user', action=AddDailyPrintUsageSummariesByUser, nargs='+',
                   help='')
        c.argument('monthly_print_usage_summaries_by_printer', action=AddMonthlyPrintUsageSummariesByPrinter,
                   nargs='+', help='')
        c.argument('monthly_print_usage_summaries_by_user', action=AddMonthlyPrintUsageSummariesByUser, nargs='+',
                   help='')

    with self.argument_context('devicescloudprint print create-service') as c:
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('endpoints', action=AddEndpoints, nargs='+', help='')

    with self.argument_context('devicescloudprint print create-share') as c:
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('defaults', action=AddDefaults, nargs='+', help='printerDefaults')
        c.argument('display_name', type=str, help='')
        c.argument('is_accepting_jobs', arg_type=get_three_state_flag(), help='')
        c.argument('location', arg_type=get_location_type(self.cli_ctx))
        c.argument('manufacturer', type=str, help='')
        c.argument('model', type=str, help='')
        c.argument('name', type=str, help='')
        c.argument('status', action=AddDevicescloudprintPrintCreatePrinterStatus, nargs='+', help='printerStatus')
        c.argument('jobs', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('bottom_margins', nargs='+', help='', arg_group='Capabilities')
        c.argument('collation', arg_type=get_three_state_flag(), help='', arg_group='Capabilities')
        c.argument('color_modes', nargs='+', help='', arg_group='Capabilities')
        c.argument('content_types', nargs='+', help='', arg_group='Capabilities')
        c.argument('copies_per_job', action=AddCopiesPerJob, nargs='+', help='integerRange', arg_group='Capabilities')
        c.argument('dpis', nargs='+', help='', arg_group='Capabilities')
        c.argument('duplex_modes', nargs='+', help='', arg_group='Capabilities')
        c.argument('feed_directions', nargs='+', help='', arg_group='Capabilities')
        c.argument('feed_orientations', nargs='+', help='', arg_group='Capabilities')
        c.argument('finishings', nargs='+', help='', arg_group='Capabilities')
        c.argument('input_bins', nargs='+', help='', arg_group='Capabilities')
        c.argument('is_color_printing_supported', arg_type=get_three_state_flag(), help='', arg_group='Capabilities')
        c.argument('is_page_range_supported', arg_type=get_three_state_flag(), help='', arg_group='Capabilities')
        c.argument('left_margins', nargs='+', help='', arg_group='Capabilities')
        c.argument('media_colors', nargs='+', help='', arg_group='Capabilities')
        c.argument('media_sizes', nargs='+', help='', arg_group='Capabilities')
        c.argument('media_types', nargs='+', help='', arg_group='Capabilities')
        c.argument('multipage_layouts', nargs='+', help='', arg_group='Capabilities')
        c.argument('orientations', nargs='+', help='', arg_group='Capabilities')
        c.argument('output_bins', nargs='+', help='', arg_group='Capabilities')
        c.argument('pages_per_sheet', nargs='+', help='', arg_group='Capabilities')
        c.argument('qualities', nargs='+', help='', arg_group='Capabilities')
        c.argument('right_margins', nargs='+', help='', arg_group='Capabilities')
        c.argument('scalings', nargs='+', help='', arg_group='Capabilities')
        c.argument('supported_color_configurations', nargs='+', help='', arg_group='Capabilities')
        c.argument('supported_copies_per_job', action=AddCopiesPerJob, nargs='+', help='integerRange',
                   arg_group='Capabilities')
        c.argument('supported_document_mime_types', nargs='+', help='', arg_group='Capabilities')
        c.argument('supported_duplex_configurations', nargs='+', help='', arg_group='Capabilities')
        c.argument('supported_finishings', nargs='+', help='', arg_group='Capabilities')
        c.argument('supported_media_colors', nargs='+', help='', arg_group='Capabilities')
        c.argument('supported_media_sizes', nargs='+', help='', arg_group='Capabilities')
        c.argument('supported_media_types', nargs='+', help='', arg_group='Capabilities')
        c.argument('supported_orientations', nargs='+', help='', arg_group='Capabilities')
        c.argument('supported_output_bins', nargs='+', help='', arg_group='Capabilities')
        c.argument('supported_pages_per_sheet', action=AddCopiesPerJob, nargs='+', help='integerRange',
                   arg_group='Capabilities')
        c.argument('supported_presentation_directions', nargs='+', help='', arg_group='Capabilities')
        c.argument('supported_print_qualities', nargs='+', help='', arg_group='Capabilities')
        c.argument('supports_fit_pdf_to_page', arg_type=get_three_state_flag(), help='', arg_group='Capabilities')
        c.argument('top_margins', nargs='+', help='', arg_group='Capabilities')
        c.argument('allow_all_users', arg_type=get_three_state_flag(), help='')
        c.argument('created_date_time', help='')
        c.argument('allowed_groups', action=AddDevicescloudprintPrintCreatePrinterShareAllowedGroups, nargs='+',
                   help='')
        c.argument('allowed_users', action=AddDevicescloudprintPrintCreatePrinterShareAllowedUsers, nargs='+',
                   help='')
        c.argument('printer', type=validate_file_or_dict, help='printer Expected value: json-string/@json-file.')

    with self.argument_context('devicescloudprint print create-task-definition') as c:
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_by', action=AddCreatedBy, nargs='+', help='appIdentity')
        c.argument('display_name', type=str, help='')
        c.argument('tasks', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')

    with self.argument_context('devicescloudprint print delete-connector') as c:
        c.argument('print_connector_id', type=str, help='key: id of printConnector')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('devicescloudprint print delete-operation') as c:
        c.argument('print_operation_id', type=str, help='key: id of printOperation')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('devicescloudprint print delete-printer') as c:
        c.argument('printer_id', type=str, help='key: id of printer')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('devicescloudprint print delete-printer-share') as c:
        c.argument('printer_share_id', type=str, help='key: id of printerShare')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('devicescloudprint print delete-report') as c:
        c.argument('report_root_id', type=str, help='key: id of reportRoot')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('devicescloudprint print delete-service') as c:
        c.argument('print_service_id', type=str, help='key: id of printService')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('devicescloudprint print delete-share') as c:
        c.argument('printer_share_id', type=str, help='key: id of printerShare')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('devicescloudprint print delete-task-definition') as c:
        c.argument('print_task_definition_id', type=str, help='key: id of printTaskDefinition')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('devicescloudprint print list-connector') as c:
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('devicescloudprint print list-operation') as c:
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('devicescloudprint print list-printer') as c:
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('devicescloudprint print list-printer-share') as c:
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('devicescloudprint print list-report') as c:
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('devicescloudprint print list-service') as c:
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('devicescloudprint print list-share') as c:
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('devicescloudprint print list-task-definition') as c:
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('devicescloudprint print show-connector') as c:
        c.argument('print_connector_id', type=str, help='key: id of printConnector')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('devicescloudprint print show-operation') as c:
        c.argument('print_operation_id', type=str, help='key: id of printOperation')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('devicescloudprint print show-printer') as c:
        c.argument('printer_id', type=str, help='key: id of printer')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('devicescloudprint print show-printer-share') as c:
        c.argument('printer_share_id', type=str, help='key: id of printerShare')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('devicescloudprint print show-report') as c:
        c.argument('report_root_id', type=str, help='key: id of reportRoot')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('devicescloudprint print show-service') as c:
        c.argument('print_service_id', type=str, help='key: id of printService')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('devicescloudprint print show-share') as c:
        c.argument('printer_share_id', type=str, help='key: id of printerShare')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('devicescloudprint print show-task-definition') as c:
        c.argument('print_task_definition_id', type=str, help='key: id of printTaskDefinition')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('devicescloudprint print update-connector') as c:
        c.argument('print_connector_id', type=str, help='key: id of printConnector')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('app_version', type=str, help='')
        c.argument('display_name', type=str, help='')
        c.argument('fully_qualified_domain_name', type=str, help='')
        c.argument('location', arg_type=get_location_type(self.cli_ctx))
        c.argument('name', type=str, help='')
        c.argument('operating_system', type=str, help='')
        c.argument('registered_date_time', help='')
        c.argument('last_connection_time', help='', arg_group='Device Health')

    with self.argument_context('devicescloudprint print update-operation') as c:
        c.argument('print_operation_id', type=str, help='key: id of printOperation')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_date_time', help='')
        c.argument('status', action=AddDevicescloudprintPrintCreateOperationStatus, nargs='+',
                   help='printOperationStatus')

    with self.argument_context('devicescloudprint print update-printer') as c:
        c.argument('printer_id', type=str, help='key: id of printer')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('defaults', action=AddDefaults, nargs='+', help='printerDefaults')
        c.argument('display_name', type=str, help='')
        c.argument('is_accepting_jobs', arg_type=get_three_state_flag(), help='')
        c.argument('location', arg_type=get_location_type(self.cli_ctx))
        c.argument('manufacturer', type=str, help='')
        c.argument('model', type=str, help='')
        c.argument('name', type=str, help='')
        c.argument('status', action=AddDevicescloudprintPrintCreatePrinterStatus, nargs='+', help='printerStatus')
        c.argument('jobs', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('bottom_margins', nargs='+', help='', arg_group='Capabilities')
        c.argument('collation', arg_type=get_three_state_flag(), help='', arg_group='Capabilities')
        c.argument('color_modes', nargs='+', help='', arg_group='Capabilities')
        c.argument('content_types', nargs='+', help='', arg_group='Capabilities')
        c.argument('copies_per_job', action=AddCopiesPerJob, nargs='+', help='integerRange', arg_group='Capabilities')
        c.argument('dpis', nargs='+', help='', arg_group='Capabilities')
        c.argument('duplex_modes', nargs='+', help='', arg_group='Capabilities')
        c.argument('feed_directions', nargs='+', help='', arg_group='Capabilities')
        c.argument('feed_orientations', nargs='+', help='', arg_group='Capabilities')
        c.argument('finishings', nargs='+', help='', arg_group='Capabilities')
        c.argument('input_bins', nargs='+', help='', arg_group='Capabilities')
        c.argument('is_color_printing_supported', arg_type=get_three_state_flag(), help='', arg_group='Capabilities')
        c.argument('is_page_range_supported', arg_type=get_three_state_flag(), help='', arg_group='Capabilities')
        c.argument('left_margins', nargs='+', help='', arg_group='Capabilities')
        c.argument('media_colors', nargs='+', help='', arg_group='Capabilities')
        c.argument('media_sizes', nargs='+', help='', arg_group='Capabilities')
        c.argument('media_types', nargs='+', help='', arg_group='Capabilities')
        c.argument('multipage_layouts', nargs='+', help='', arg_group='Capabilities')
        c.argument('orientations', nargs='+', help='', arg_group='Capabilities')
        c.argument('output_bins', nargs='+', help='', arg_group='Capabilities')
        c.argument('pages_per_sheet', nargs='+', help='', arg_group='Capabilities')
        c.argument('qualities', nargs='+', help='', arg_group='Capabilities')
        c.argument('right_margins', nargs='+', help='', arg_group='Capabilities')
        c.argument('scalings', nargs='+', help='', arg_group='Capabilities')
        c.argument('supported_color_configurations', nargs='+', help='', arg_group='Capabilities')
        c.argument('supported_copies_per_job', action=AddCopiesPerJob, nargs='+', help='integerRange',
                   arg_group='Capabilities')
        c.argument('supported_document_mime_types', nargs='+', help='', arg_group='Capabilities')
        c.argument('supported_duplex_configurations', nargs='+', help='', arg_group='Capabilities')
        c.argument('supported_finishings', nargs='+', help='', arg_group='Capabilities')
        c.argument('supported_media_colors', nargs='+', help='', arg_group='Capabilities')
        c.argument('supported_media_sizes', nargs='+', help='', arg_group='Capabilities')
        c.argument('supported_media_types', nargs='+', help='', arg_group='Capabilities')
        c.argument('supported_orientations', nargs='+', help='', arg_group='Capabilities')
        c.argument('supported_output_bins', nargs='+', help='', arg_group='Capabilities')
        c.argument('supported_pages_per_sheet', action=AddCopiesPerJob, nargs='+', help='integerRange',
                   arg_group='Capabilities')
        c.argument('supported_presentation_directions', nargs='+', help='', arg_group='Capabilities')
        c.argument('supported_print_qualities', nargs='+', help='', arg_group='Capabilities')
        c.argument('supports_fit_pdf_to_page', arg_type=get_three_state_flag(), help='', arg_group='Capabilities')
        c.argument('top_margins', nargs='+', help='', arg_group='Capabilities')
        c.argument('accepting_jobs', arg_type=get_three_state_flag(), help='')
        c.argument('is_shared', arg_type=get_three_state_flag(), help='')
        c.argument('registered_date_time', help='')
        c.argument('allowed_groups', action=AddDevicescloudprintPrintCreatePrinterAllowedGroups, nargs='+', help='')
        c.argument('allowed_users', action=AddDevicescloudprintPrintCreatePrinterAllowedUsers, nargs='+', help='')
        c.argument('connectors', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('share', type=validate_file_or_dict, help='printerShare Expected value: json-string/@json-file.')
        c.argument('shares', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('task_triggers', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')

    with self.argument_context('devicescloudprint print update-printer-share') as c:
        c.argument('printer_share_id', type=str, help='key: id of printerShare')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('defaults', action=AddDefaults, nargs='+', help='printerDefaults')
        c.argument('display_name', type=str, help='')
        c.argument('is_accepting_jobs', arg_type=get_three_state_flag(), help='')
        c.argument('location', arg_type=get_location_type(self.cli_ctx))
        c.argument('manufacturer', type=str, help='')
        c.argument('model', type=str, help='')
        c.argument('name', type=str, help='')
        c.argument('status', action=AddDevicescloudprintPrintCreatePrinterStatus, nargs='+', help='printerStatus')
        c.argument('jobs', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('bottom_margins', nargs='+', help='', arg_group='Capabilities')
        c.argument('collation', arg_type=get_three_state_flag(), help='', arg_group='Capabilities')
        c.argument('color_modes', nargs='+', help='', arg_group='Capabilities')
        c.argument('content_types', nargs='+', help='', arg_group='Capabilities')
        c.argument('copies_per_job', action=AddCopiesPerJob, nargs='+', help='integerRange', arg_group='Capabilities')
        c.argument('dpis', nargs='+', help='', arg_group='Capabilities')
        c.argument('duplex_modes', nargs='+', help='', arg_group='Capabilities')
        c.argument('feed_directions', nargs='+', help='', arg_group='Capabilities')
        c.argument('feed_orientations', nargs='+', help='', arg_group='Capabilities')
        c.argument('finishings', nargs='+', help='', arg_group='Capabilities')
        c.argument('input_bins', nargs='+', help='', arg_group='Capabilities')
        c.argument('is_color_printing_supported', arg_type=get_three_state_flag(), help='', arg_group='Capabilities')
        c.argument('is_page_range_supported', arg_type=get_three_state_flag(), help='', arg_group='Capabilities')
        c.argument('left_margins', nargs='+', help='', arg_group='Capabilities')
        c.argument('media_colors', nargs='+', help='', arg_group='Capabilities')
        c.argument('media_sizes', nargs='+', help='', arg_group='Capabilities')
        c.argument('media_types', nargs='+', help='', arg_group='Capabilities')
        c.argument('multipage_layouts', nargs='+', help='', arg_group='Capabilities')
        c.argument('orientations', nargs='+', help='', arg_group='Capabilities')
        c.argument('output_bins', nargs='+', help='', arg_group='Capabilities')
        c.argument('pages_per_sheet', nargs='+', help='', arg_group='Capabilities')
        c.argument('qualities', nargs='+', help='', arg_group='Capabilities')
        c.argument('right_margins', nargs='+', help='', arg_group='Capabilities')
        c.argument('scalings', nargs='+', help='', arg_group='Capabilities')
        c.argument('supported_color_configurations', nargs='+', help='', arg_group='Capabilities')
        c.argument('supported_copies_per_job', action=AddCopiesPerJob, nargs='+', help='integerRange',
                   arg_group='Capabilities')
        c.argument('supported_document_mime_types', nargs='+', help='', arg_group='Capabilities')
        c.argument('supported_duplex_configurations', nargs='+', help='', arg_group='Capabilities')
        c.argument('supported_finishings', nargs='+', help='', arg_group='Capabilities')
        c.argument('supported_media_colors', nargs='+', help='', arg_group='Capabilities')
        c.argument('supported_media_sizes', nargs='+', help='', arg_group='Capabilities')
        c.argument('supported_media_types', nargs='+', help='', arg_group='Capabilities')
        c.argument('supported_orientations', nargs='+', help='', arg_group='Capabilities')
        c.argument('supported_output_bins', nargs='+', help='', arg_group='Capabilities')
        c.argument('supported_pages_per_sheet', action=AddCopiesPerJob, nargs='+', help='integerRange',
                   arg_group='Capabilities')
        c.argument('supported_presentation_directions', nargs='+', help='', arg_group='Capabilities')
        c.argument('supported_print_qualities', nargs='+', help='', arg_group='Capabilities')
        c.argument('supports_fit_pdf_to_page', arg_type=get_three_state_flag(), help='', arg_group='Capabilities')
        c.argument('top_margins', nargs='+', help='', arg_group='Capabilities')
        c.argument('allow_all_users', arg_type=get_three_state_flag(), help='')
        c.argument('created_date_time', help='')
        c.argument('allowed_groups', action=AddDevicescloudprintPrintCreatePrinterShareAllowedGroups, nargs='+',
                   help='')
        c.argument('allowed_users', action=AddDevicescloudprintPrintCreatePrinterShareAllowedUsers, nargs='+',
                   help='')
        c.argument('printer', type=validate_file_or_dict, help='printer Expected value: json-string/@json-file.')

    with self.argument_context('devicescloudprint print update-report') as c:
        c.argument('report_root_id', type=str, help='key: id of reportRoot')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('application_sign_in_detailed_summary', type=validate_file_or_dict, help=' Expected value: '
                   'json-string/@json-file.')
        c.argument('credential_user_registration_details', action=AddCredentialUserRegistrationDetails, nargs='+',
                   help='')
        c.argument('user_credential_usage_details', action=AddUserCredentialUsageDetails, nargs='+', help='')
        c.argument('daily_print_usage_summaries_by_printer', action=AddDailyPrintUsageSummariesByPrinter, nargs='+',
                   help='')
        c.argument('daily_print_usage_summaries_by_user', action=AddDailyPrintUsageSummariesByUser, nargs='+',
                   help='')
        c.argument('monthly_print_usage_summaries_by_printer', action=AddMonthlyPrintUsageSummariesByPrinter,
                   nargs='+', help='')
        c.argument('monthly_print_usage_summaries_by_user', action=AddMonthlyPrintUsageSummariesByUser, nargs='+',
                   help='')

    with self.argument_context('devicescloudprint print update-service') as c:
        c.argument('print_service_id', type=str, help='key: id of printService')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('endpoints', action=AddEndpoints, nargs='+', help='')

    with self.argument_context('devicescloudprint print update-share') as c:
        c.argument('printer_share_id', type=str, help='key: id of printerShare')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('defaults', action=AddDefaults, nargs='+', help='printerDefaults')
        c.argument('display_name', type=str, help='')
        c.argument('is_accepting_jobs', arg_type=get_three_state_flag(), help='')
        c.argument('location', arg_type=get_location_type(self.cli_ctx))
        c.argument('manufacturer', type=str, help='')
        c.argument('model', type=str, help='')
        c.argument('name', type=str, help='')
        c.argument('status', action=AddDevicescloudprintPrintCreatePrinterStatus, nargs='+', help='printerStatus')
        c.argument('jobs', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')
        c.argument('bottom_margins', nargs='+', help='', arg_group='Capabilities')
        c.argument('collation', arg_type=get_three_state_flag(), help='', arg_group='Capabilities')
        c.argument('color_modes', nargs='+', help='', arg_group='Capabilities')
        c.argument('content_types', nargs='+', help='', arg_group='Capabilities')
        c.argument('copies_per_job', action=AddCopiesPerJob, nargs='+', help='integerRange', arg_group='Capabilities')
        c.argument('dpis', nargs='+', help='', arg_group='Capabilities')
        c.argument('duplex_modes', nargs='+', help='', arg_group='Capabilities')
        c.argument('feed_directions', nargs='+', help='', arg_group='Capabilities')
        c.argument('feed_orientations', nargs='+', help='', arg_group='Capabilities')
        c.argument('finishings', nargs='+', help='', arg_group='Capabilities')
        c.argument('input_bins', nargs='+', help='', arg_group='Capabilities')
        c.argument('is_color_printing_supported', arg_type=get_three_state_flag(), help='', arg_group='Capabilities')
        c.argument('is_page_range_supported', arg_type=get_three_state_flag(), help='', arg_group='Capabilities')
        c.argument('left_margins', nargs='+', help='', arg_group='Capabilities')
        c.argument('media_colors', nargs='+', help='', arg_group='Capabilities')
        c.argument('media_sizes', nargs='+', help='', arg_group='Capabilities')
        c.argument('media_types', nargs='+', help='', arg_group='Capabilities')
        c.argument('multipage_layouts', nargs='+', help='', arg_group='Capabilities')
        c.argument('orientations', nargs='+', help='', arg_group='Capabilities')
        c.argument('output_bins', nargs='+', help='', arg_group='Capabilities')
        c.argument('pages_per_sheet', nargs='+', help='', arg_group='Capabilities')
        c.argument('qualities', nargs='+', help='', arg_group='Capabilities')
        c.argument('right_margins', nargs='+', help='', arg_group='Capabilities')
        c.argument('scalings', nargs='+', help='', arg_group='Capabilities')
        c.argument('supported_color_configurations', nargs='+', help='', arg_group='Capabilities')
        c.argument('supported_copies_per_job', action=AddCopiesPerJob, nargs='+', help='integerRange',
                   arg_group='Capabilities')
        c.argument('supported_document_mime_types', nargs='+', help='', arg_group='Capabilities')
        c.argument('supported_duplex_configurations', nargs='+', help='', arg_group='Capabilities')
        c.argument('supported_finishings', nargs='+', help='', arg_group='Capabilities')
        c.argument('supported_media_colors', nargs='+', help='', arg_group='Capabilities')
        c.argument('supported_media_sizes', nargs='+', help='', arg_group='Capabilities')
        c.argument('supported_media_types', nargs='+', help='', arg_group='Capabilities')
        c.argument('supported_orientations', nargs='+', help='', arg_group='Capabilities')
        c.argument('supported_output_bins', nargs='+', help='', arg_group='Capabilities')
        c.argument('supported_pages_per_sheet', action=AddCopiesPerJob, nargs='+', help='integerRange',
                   arg_group='Capabilities')
        c.argument('supported_presentation_directions', nargs='+', help='', arg_group='Capabilities')
        c.argument('supported_print_qualities', nargs='+', help='', arg_group='Capabilities')
        c.argument('supports_fit_pdf_to_page', arg_type=get_three_state_flag(), help='', arg_group='Capabilities')
        c.argument('top_margins', nargs='+', help='', arg_group='Capabilities')
        c.argument('allow_all_users', arg_type=get_three_state_flag(), help='')
        c.argument('created_date_time', help='')
        c.argument('allowed_groups', action=AddDevicescloudprintPrintCreatePrinterShareAllowedGroups, nargs='+',
                   help='')
        c.argument('allowed_users', action=AddDevicescloudprintPrintCreatePrinterShareAllowedUsers, nargs='+',
                   help='')
        c.argument('printer', type=validate_file_or_dict, help='printer Expected value: json-string/@json-file.')

    with self.argument_context('devicescloudprint print update-task-definition') as c:
        c.argument('print_task_definition_id', type=str, help='key: id of printTaskDefinition')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('created_by', action=AddCreatedBy, nargs='+', help='appIdentity')
        c.argument('display_name', type=str, help='')
        c.argument('tasks', type=validate_file_or_dict, help=' Expected value: json-string/@json-file.')

    with self.argument_context('devicescloudprint printprinter create') as c:
        c.argument('display_name', type=str, help='')
        c.argument('manufacturer', type=str, help='')
        c.argument('model', type=str, help='')
        c.argument('physical_device_id', type=str, help='')
        c.argument('has_physical_device', arg_type=get_three_state_flag(), help='')
        c.argument('certificate_signing_request', action=AddCertificateSigningRequest, nargs='+',
                   help='printCertificateSigningRequest')
        c.argument('connector_id', type=str, help='')

    with self.argument_context('devicescloudprint printprinter create-allowed-group') as c:
        c.argument('printer_id', type=str, help='key: id of printer')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('display_name', type=str, help='')

    with self.argument_context('devicescloudprint printprinter create-allowed-user') as c:
        c.argument('printer_id', type=str, help='key: id of printer')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('display_name', type=str, help='')
        c.argument('ip_address', type=str, help='')
        c.argument('user_principal_name', type=str, help='')

    with self.argument_context('devicescloudprint printprinter create-ref-connector') as c:
        c.argument('printer_id', type=str, help='key: id of printer')
        c.argument('body', type=validate_file_or_dict, help='New navigation property ref value Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('devicescloudprint printprinter create-ref-share') as c:
        c.argument('printer_id', type=str, help='key: id of printer')
        c.argument('body', type=validate_file_or_dict, help='New navigation property ref value Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('devicescloudprint printprinter create-task-trigger') as c:
        c.argument('printer_id', type=str, help='key: id of printer')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('event', arg_type=get_enum_type(['jobStarted', 'unknownFutureValue']), help='')
        c.argument('definition', type=validate_file_or_dict, help='printTaskDefinition Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('devicescloudprint printprinter delete-allowed-group') as c:
        c.argument('printer_id', type=str, help='key: id of printer')
        c.argument('print_identity_id', type=str, help='key: id of printIdentity')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('devicescloudprint printprinter delete-allowed-user') as c:
        c.argument('printer_id', type=str, help='key: id of printer')
        c.argument('print_user_identity_id', type=str, help='key: id of printUserIdentity')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('devicescloudprint printprinter delete-ref-share') as c:
        c.argument('printer_id', type=str, help='key: id of printer')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('devicescloudprint printprinter delete-task-trigger') as c:
        c.argument('printer_id', type=str, help='key: id of printer')
        c.argument('print_task_trigger_id', type=str, help='key: id of printTaskTrigger')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('devicescloudprint printprinter list-allowed-group') as c:
        c.argument('printer_id', type=str, help='key: id of printer')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('devicescloudprint printprinter list-allowed-user') as c:
        c.argument('printer_id', type=str, help='key: id of printer')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('devicescloudprint printprinter list-connector') as c:
        c.argument('printer_id', type=str, help='key: id of printer')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('devicescloudprint printprinter list-ref-connector') as c:
        c.argument('printer_id', type=str, help='key: id of printer')
        c.argument('orderby', nargs='+', help='Order items by property values')

    with self.argument_context('devicescloudprint printprinter list-ref-share') as c:
        c.argument('printer_id', type=str, help='key: id of printer')
        c.argument('orderby', nargs='+', help='Order items by property values')

    with self.argument_context('devicescloudprint printprinter list-share') as c:
        c.argument('printer_id', type=str, help='key: id of printer')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('devicescloudprint printprinter list-task-trigger') as c:
        c.argument('printer_id', type=str, help='key: id of printer')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('devicescloudprint printprinter reset-default') as c:
        c.argument('printer_id', type=str, help='key: id of printer')

    with self.argument_context('devicescloudprint printprinter restore-factory-default') as c:
        c.argument('printer_id', type=str, help='key: id of printer')

    with self.argument_context('devicescloudprint printprinter set-ref-share') as c:
        c.argument('printer_id', type=str, help='key: id of printer')
        c.argument('body', type=validate_file_or_dict, help='New navigation property ref values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('devicescloudprint printprinter show-allowed-group') as c:
        c.argument('printer_id', type=str, help='key: id of printer')
        c.argument('print_identity_id', type=str, help='key: id of printIdentity')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('devicescloudprint printprinter show-allowed-user') as c:
        c.argument('printer_id', type=str, help='key: id of printer')
        c.argument('print_user_identity_id', type=str, help='key: id of printUserIdentity')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('devicescloudprint printprinter show-capability') as c:
        c.argument('printer_id', type=str, help='key: id of printer')

    with self.argument_context('devicescloudprint printprinter show-ref-share') as c:
        c.argument('printer_id', type=str, help='key: id of printer')

    with self.argument_context('devicescloudprint printprinter show-share') as c:
        c.argument('printer_id', type=str, help='key: id of printer')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('devicescloudprint printprinter show-task-trigger') as c:
        c.argument('printer_id', type=str, help='key: id of printer')
        c.argument('print_task_trigger_id', type=str, help='key: id of printTaskTrigger')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('devicescloudprint printprinter update-allowed-group') as c:
        c.argument('printer_id', type=str, help='key: id of printer')
        c.argument('print_identity_id', type=str, help='key: id of printIdentity')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('display_name', type=str, help='')

    with self.argument_context('devicescloudprint printprinter update-allowed-user') as c:
        c.argument('printer_id', type=str, help='key: id of printer')
        c.argument('print_user_identity_id', type=str, help='key: id of printUserIdentity')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('display_name', type=str, help='')
        c.argument('ip_address', type=str, help='')
        c.argument('user_principal_name', type=str, help='')

    with self.argument_context('devicescloudprint printprinter update-task-trigger') as c:
        c.argument('printer_id', type=str, help='key: id of printer')
        c.argument('print_task_trigger_id', type=str, help='key: id of printTaskTrigger')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('event', arg_type=get_enum_type(['jobStarted', 'unknownFutureValue']), help='')
        c.argument('definition', type=validate_file_or_dict, help='printTaskDefinition Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('devicescloudprint printprinterstasktrigger delete-ref-definition') as c:
        c.argument('printer_id', type=str, help='key: id of printer')
        c.argument('print_task_trigger_id', type=str, help='key: id of printTaskTrigger')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('devicescloudprint printprinterstasktrigger set-ref-definition') as c:
        c.argument('printer_id', type=str, help='key: id of printer')
        c.argument('print_task_trigger_id', type=str, help='key: id of printTaskTrigger')
        c.argument('body', type=validate_file_or_dict, help='New navigation property ref values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('devicescloudprint printprinterstasktrigger show-definition') as c:
        c.argument('printer_id', type=str, help='key: id of printer')
        c.argument('print_task_trigger_id', type=str, help='key: id of printTaskTrigger')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('devicescloudprint printprinterstasktrigger show-ref-definition') as c:
        c.argument('printer_id', type=str, help='key: id of printer')
        c.argument('print_task_trigger_id', type=str, help='key: id of printTaskTrigger')

    with self.argument_context('devicescloudprint printprintershare create-allowed-group') as c:
        c.argument('printer_share_id', type=str, help='key: id of printerShare')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('display_name', type=str, help='')

    with self.argument_context('devicescloudprint printprintershare create-allowed-user') as c:
        c.argument('printer_share_id', type=str, help='key: id of printerShare')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('display_name', type=str, help='')
        c.argument('ip_address', type=str, help='')
        c.argument('user_principal_name', type=str, help='')

    with self.argument_context('devicescloudprint printprintershare delete-allowed-group') as c:
        c.argument('printer_share_id', type=str, help='key: id of printerShare')
        c.argument('print_identity_id', type=str, help='key: id of printIdentity')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('devicescloudprint printprintershare delete-allowed-user') as c:
        c.argument('printer_share_id', type=str, help='key: id of printerShare')
        c.argument('print_user_identity_id', type=str, help='key: id of printUserIdentity')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('devicescloudprint printprintershare delete-ref-printer') as c:
        c.argument('printer_share_id', type=str, help='key: id of printerShare')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('devicescloudprint printprintershare list-allowed-group') as c:
        c.argument('printer_share_id', type=str, help='key: id of printerShare')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('devicescloudprint printprintershare list-allowed-user') as c:
        c.argument('printer_share_id', type=str, help='key: id of printerShare')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('devicescloudprint printprintershare set-ref-printer') as c:
        c.argument('printer_share_id', type=str, help='key: id of printerShare')
        c.argument('body', type=validate_file_or_dict, help='New navigation property ref values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('devicescloudprint printprintershare show-allowed-group') as c:
        c.argument('printer_share_id', type=str, help='key: id of printerShare')
        c.argument('print_identity_id', type=str, help='key: id of printIdentity')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('devicescloudprint printprintershare show-allowed-user') as c:
        c.argument('printer_share_id', type=str, help='key: id of printerShare')
        c.argument('print_user_identity_id', type=str, help='key: id of printUserIdentity')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('devicescloudprint printprintershare show-printer') as c:
        c.argument('printer_share_id', type=str, help='key: id of printerShare')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('devicescloudprint printprintershare show-ref-printer') as c:
        c.argument('printer_share_id', type=str, help='key: id of printerShare')

    with self.argument_context('devicescloudprint printprintershare update-allowed-group') as c:
        c.argument('printer_share_id', type=str, help='key: id of printerShare')
        c.argument('print_identity_id', type=str, help='key: id of printIdentity')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('display_name', type=str, help='')

    with self.argument_context('devicescloudprint printprintershare update-allowed-user') as c:
        c.argument('printer_share_id', type=str, help='key: id of printerShare')
        c.argument('print_user_identity_id', type=str, help='key: id of printUserIdentity')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('display_name', type=str, help='')
        c.argument('ip_address', type=str, help='')
        c.argument('user_principal_name', type=str, help='')

    with self.argument_context('devicescloudprint printprintersharesprinter reset-default') as c:
        c.argument('printer_share_id', type=str, help='key: id of printerShare')

    with self.argument_context('devicescloudprint printprintersharesprinter restore-factory-default') as c:
        c.argument('printer_share_id', type=str, help='key: id of printerShare')

    with self.argument_context('devicescloudprint printprintersharesprinter show-capability') as c:
        c.argument('printer_share_id', type=str, help='key: id of printerShare')

    with self.argument_context('devicescloudprint printreport show-group-archived-print-job') as c:
        c.argument('group_id', type=str, help='')
        c.argument('period_start', help='')
        c.argument('period_end', help='')

    with self.argument_context('devicescloudprint printreport show-group-print-usage-summary') as c:
        c.argument('group_id', type=str, help='')
        c.argument('period_start', help='')
        c.argument('period_end', help='')

    with self.argument_context('devicescloudprint printreport show-overall-print-usage-summary') as c:
        c.argument('period_start', help='')
        c.argument('period_end', help='')
        c.argument('top_lists_size', type=int, help='')

    with self.argument_context('devicescloudprint printreport show-print-usage-summary') as c:
        c.argument('period_start', help='')
        c.argument('period_end', help='')
        c.argument('time_span_in_minutes', type=int, help='')

    with self.argument_context('devicescloudprint printreport show-printer-archived-print-job') as c:
        c.argument('printer_id', type=str, help='')
        c.argument('period_start', help='')
        c.argument('period_end', help='')

    with self.argument_context('devicescloudprint printreport show-printer-usage-summary') as c:
        c.argument('printer_id', type=str, help='')
        c.argument('period_start', help='')
        c.argument('period_end', help='')

    with self.argument_context('devicescloudprint printreport show-user-archived-print-job') as c:
        c.argument('user_id', type=str, help='')
        c.argument('period_start', help='')
        c.argument('period_end', help='')

    with self.argument_context('devicescloudprint printreport show-user-print-usage-summary') as c:
        c.argument('user_id', type=str, help='')
        c.argument('period_start', help='')
        c.argument('period_end', help='')

    with self.argument_context('devicescloudprint printservice create-endpoint') as c:
        c.argument('print_service_id', type=str, help='key: id of printService')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('display_name', type=str, help='')
        c.argument('uri', type=str, help='')

    with self.argument_context('devicescloudprint printservice delete-endpoint') as c:
        c.argument('print_service_id', type=str, help='key: id of printService')
        c.argument('print_service_endpoint_id', type=str, help='key: id of printServiceEndpoint')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('devicescloudprint printservice list-endpoint') as c:
        c.argument('print_service_id', type=str, help='key: id of printService')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('devicescloudprint printservice show-endpoint') as c:
        c.argument('print_service_id', type=str, help='key: id of printService')
        c.argument('print_service_endpoint_id', type=str, help='key: id of printServiceEndpoint')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('devicescloudprint printservice update-endpoint') as c:
        c.argument('print_service_id', type=str, help='key: id of printService')
        c.argument('print_service_endpoint_id', type=str, help='key: id of printServiceEndpoint')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('display_name', type=str, help='')
        c.argument('uri', type=str, help='')

    with self.argument_context('devicescloudprint printshare create-allowed-group') as c:
        c.argument('printer_share_id', type=str, help='key: id of printerShare')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('display_name', type=str, help='')

    with self.argument_context('devicescloudprint printshare create-allowed-user') as c:
        c.argument('printer_share_id', type=str, help='key: id of printerShare')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('display_name', type=str, help='')
        c.argument('ip_address', type=str, help='')
        c.argument('user_principal_name', type=str, help='')

    with self.argument_context('devicescloudprint printshare delete-allowed-group') as c:
        c.argument('printer_share_id', type=str, help='key: id of printerShare')
        c.argument('print_identity_id', type=str, help='key: id of printIdentity')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('devicescloudprint printshare delete-allowed-user') as c:
        c.argument('printer_share_id', type=str, help='key: id of printerShare')
        c.argument('print_user_identity_id', type=str, help='key: id of printUserIdentity')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('devicescloudprint printshare delete-ref-printer') as c:
        c.argument('printer_share_id', type=str, help='key: id of printerShare')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('devicescloudprint printshare list-allowed-group') as c:
        c.argument('printer_share_id', type=str, help='key: id of printerShare')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('devicescloudprint printshare list-allowed-user') as c:
        c.argument('printer_share_id', type=str, help='key: id of printerShare')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('devicescloudprint printshare set-ref-printer') as c:
        c.argument('printer_share_id', type=str, help='key: id of printerShare')
        c.argument('body', type=validate_file_or_dict, help='New navigation property ref values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('devicescloudprint printshare show-allowed-group') as c:
        c.argument('printer_share_id', type=str, help='key: id of printerShare')
        c.argument('print_identity_id', type=str, help='key: id of printIdentity')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('devicescloudprint printshare show-allowed-user') as c:
        c.argument('printer_share_id', type=str, help='key: id of printerShare')
        c.argument('print_user_identity_id', type=str, help='key: id of printUserIdentity')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('devicescloudprint printshare show-printer') as c:
        c.argument('printer_share_id', type=str, help='key: id of printerShare')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('devicescloudprint printshare show-ref-printer') as c:
        c.argument('printer_share_id', type=str, help='key: id of printerShare')

    with self.argument_context('devicescloudprint printshare update-allowed-group') as c:
        c.argument('printer_share_id', type=str, help='key: id of printerShare')
        c.argument('print_identity_id', type=str, help='key: id of printIdentity')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('display_name', type=str, help='')

    with self.argument_context('devicescloudprint printshare update-allowed-user') as c:
        c.argument('printer_share_id', type=str, help='key: id of printerShare')
        c.argument('print_user_identity_id', type=str, help='key: id of printUserIdentity')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('display_name', type=str, help='')
        c.argument('ip_address', type=str, help='')
        c.argument('user_principal_name', type=str, help='')

    with self.argument_context('devicescloudprint printsharesprinter reset-default') as c:
        c.argument('printer_share_id', type=str, help='key: id of printerShare')

    with self.argument_context('devicescloudprint printsharesprinter restore-factory-default') as c:
        c.argument('printer_share_id', type=str, help='key: id of printerShare')

    with self.argument_context('devicescloudprint printsharesprinter show-capability') as c:
        c.argument('printer_share_id', type=str, help='key: id of printerShare')

    with self.argument_context('devicescloudprint printtaskdefinition create-task') as c:
        c.argument('print_task_definition_id', type=str, help='key: id of printTaskDefinition')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('parent_url', type=str, help='')
        c.argument('status', action=AddStatus, nargs='+', help='printTaskStatus')
        c.argument('definition', type=validate_file_or_dict, help='printTaskDefinition Expected value: '
                   'json-string/@json-file.')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Trigger')
        c.argument('event', arg_type=get_enum_type(['jobStarted', 'unknownFutureValue']), help='',
                   arg_group='Trigger')
        c.argument('microsoft_graph_print_task_definition', type=validate_file_or_dict, help='printTaskDefinition '
                   'Expected value: json-string/@json-file.', arg_group='Trigger')

    with self.argument_context('devicescloudprint printtaskdefinition delete-task') as c:
        c.argument('print_task_definition_id', type=str, help='key: id of printTaskDefinition')
        c.argument('print_task_id', type=str, help='key: id of printTask')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('devicescloudprint printtaskdefinition list-task') as c:
        c.argument('print_task_definition_id', type=str, help='key: id of printTaskDefinition')
        c.argument('orderby', nargs='+', help='Order items by property values')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('devicescloudprint printtaskdefinition show-task') as c:
        c.argument('print_task_definition_id', type=str, help='key: id of printTaskDefinition')
        c.argument('print_task_id', type=str, help='key: id of printTask')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('devicescloudprint printtaskdefinition update-task') as c:
        c.argument('print_task_definition_id', type=str, help='key: id of printTaskDefinition')
        c.argument('print_task_id', type=str, help='key: id of printTask')
        c.argument('id_', options_list=['--id'], type=str, help='Read-only.')
        c.argument('parent_url', type=str, help='')
        c.argument('status', action=AddStatus, nargs='+', help='printTaskStatus')
        c.argument('definition', type=validate_file_or_dict, help='printTaskDefinition Expected value: '
                   'json-string/@json-file.')
        c.argument('microsoft_graph_entity_id', type=str, help='Read-only.', arg_group='Trigger')
        c.argument('event', arg_type=get_enum_type(['jobStarted', 'unknownFutureValue']), help='',
                   arg_group='Trigger')
        c.argument('microsoft_graph_print_task_definition', type=validate_file_or_dict, help='printTaskDefinition '
                   'Expected value: json-string/@json-file.', arg_group='Trigger')

    with self.argument_context('devicescloudprint printtaskdefinitionstask delete-ref-definition') as c:
        c.argument('print_task_definition_id', type=str, help='key: id of printTaskDefinition')
        c.argument('print_task_id', type=str, help='key: id of printTask')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('devicescloudprint printtaskdefinitionstask delete-ref-trigger') as c:
        c.argument('print_task_definition_id', type=str, help='key: id of printTaskDefinition')
        c.argument('print_task_id', type=str, help='key: id of printTask')
        c.argument('if_match', type=str, help='ETag')

    with self.argument_context('devicescloudprint printtaskdefinitionstask set-ref-definition') as c:
        c.argument('print_task_definition_id', type=str, help='key: id of printTaskDefinition')
        c.argument('print_task_id', type=str, help='key: id of printTask')
        c.argument('body', type=validate_file_or_dict, help='New navigation property ref values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('devicescloudprint printtaskdefinitionstask set-ref-trigger') as c:
        c.argument('print_task_definition_id', type=str, help='key: id of printTaskDefinition')
        c.argument('print_task_id', type=str, help='key: id of printTask')
        c.argument('body', type=validate_file_or_dict, help='New navigation property ref values Expected value: '
                   'json-string/@json-file.')

    with self.argument_context('devicescloudprint printtaskdefinitionstask show-definition') as c:
        c.argument('print_task_definition_id', type=str, help='key: id of printTaskDefinition')
        c.argument('print_task_id', type=str, help='key: id of printTask')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')

    with self.argument_context('devicescloudprint printtaskdefinitionstask show-ref-definition') as c:
        c.argument('print_task_definition_id', type=str, help='key: id of printTaskDefinition')
        c.argument('print_task_id', type=str, help='key: id of printTask')

    with self.argument_context('devicescloudprint printtaskdefinitionstask show-ref-trigger') as c:
        c.argument('print_task_definition_id', type=str, help='key: id of printTaskDefinition')
        c.argument('print_task_id', type=str, help='key: id of printTask')

    with self.argument_context('devicescloudprint printtaskdefinitionstask show-trigger') as c:
        c.argument('print_task_definition_id', type=str, help='key: id of printTaskDefinition')
        c.argument('print_task_id', type=str, help='key: id of printTask')
        c.argument('select', nargs='+', help='Select properties to be returned')
        c.argument('expand', nargs='+', help='Expand related entities')
