# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=too-many-statements
# pylint: disable=too-many-locals

from msgraph.cli.core.commands import CliCommandType


def load_command_table(self, _):

    from azext_mail_beta.generated._client_factory import cf_user
    mail_beta_user = CliCommandType(
        operations_tmpl='azext_mail_beta.vendored_sdks.mail.operations._user_operations#UserOperations.{}',
        client_factory=cf_user)
    with self.command_group('mail', mail_beta_user, client_factory=cf_user) as g:
        g.custom_command('delete', 'mail_delete', confirmation=True)
        g.custom_command('create-mail-folder', 'mail_create_mail_folder')
        g.custom_command('create-message', 'mail_create_message')
        g.custom_command('get-inference-classification', 'mail_get_inference_classification')
        g.custom_command('get-mail-folder', 'mail_get_mail_folder')
        g.custom_command('get-message', 'mail_get_message')
        g.custom_command('get-message-content', 'mail_get_message_content')
        g.custom_command('list-mail-folder', 'mail_list_mail_folder')
        g.custom_command('list-message', 'mail_list_message')
        g.custom_command('set-message-content', 'mail_set_message_content')
        g.custom_command('update-inference-classification', 'mail_update_inference_classification')
        g.custom_command('update-mail-folder', 'mail_update_mail_folder')
        g.custom_command('update-message', 'mail_update_message')

    from azext_mail_beta.generated._client_factory import cf_user_inference_classification
    mail_beta_user_inference_classification = CliCommandType(
        operations_tmpl='azext_mail_beta.vendored_sdks.mail.operations._user_inference_classification_operations#UserIn'
        'ferenceClassificationOperations.{}',
        client_factory=cf_user_inference_classification)
    with self.command_group('mail', mail_beta_user_inference_classification,
                            client_factory=cf_user_inference_classification) as g:
        g.custom_command('delete', 'mail_delete', confirmation=True)
        g.custom_command('create-override', 'mail_create_override')
        g.custom_command('get-override', 'mail_get_override')
        g.custom_command('list-override', 'mail_list_override')
        g.custom_command('update-override', 'mail_update_override')

    from azext_mail_beta.generated._client_factory import cf_user_mail_folder
    mail_beta_user_mail_folder = CliCommandType(
        operations_tmpl='azext_mail_beta.vendored_sdks.mail.operations._user_mail_folder_operations#UserMailFolderOpera'
        'tions.{}',
        client_factory=cf_user_mail_folder)
    with self.command_group('mail', mail_beta_user_mail_folder, client_factory=cf_user_mail_folder) as g:
        g.custom_command('delete', 'mail_delete', confirmation=True)
        g.custom_command('create-child-folder', 'mail_create_child_folder')
        g.custom_command('create-message', 'mail_create_message')
        g.custom_command('create-message-rule', 'mail_create_message_rule')
        g.custom_command('create-multi-value-extended-property', 'mail_create_multi_value_extended_property')
        g.custom_command('create-single-value-extended-property', 'mail_create_single_value_extended_property')
        g.custom_command('create-user-configuration', 'mail_create_user_configuration')
        g.custom_command('get-child-folder', 'mail_get_child_folder')
        g.custom_command('get-message', 'mail_get_message')
        g.custom_command('get-message-content', 'mail_get_message_content')
        g.custom_command('get-message-rule', 'mail_get_message_rule')
        g.custom_command('get-multi-value-extended-property', 'mail_get_multi_value_extended_property')
        g.custom_command('get-single-value-extended-property', 'mail_get_single_value_extended_property')
        g.custom_command('get-user-configuration', 'mail_get_user_configuration')
        g.custom_command('list-child-folder', 'mail_list_child_folder')
        g.custom_command('list-message', 'mail_list_message')
        g.custom_command('list-message-rule', 'mail_list_message_rule')
        g.custom_command('list-multi-value-extended-property', 'mail_list_multi_value_extended_property')
        g.custom_command('list-single-value-extended-property', 'mail_list_single_value_extended_property')
        g.custom_command('list-user-configuration', 'mail_list_user_configuration')
        g.custom_command('set-message-content', 'mail_set_message_content')
        g.custom_command('update-child-folder', 'mail_update_child_folder')
        g.custom_command('update-message', 'mail_update_message')
        g.custom_command('update-message-rule', 'mail_update_message_rule')
        g.custom_command('update-multi-value-extended-property', 'mail_update_multi_value_extended_property')
        g.custom_command('update-single-value-extended-property', 'mail_update_single_value_extended_property')
        g.custom_command('update-user-configuration', 'mail_update_user_configuration')

    from azext_mail_beta.generated._client_factory import cf_user_mail_folder_message
    mail_beta_user_mail_folder_message = CliCommandType(
        operations_tmpl='azext_mail_beta.vendored_sdks.mail.operations._user_mail_folder_message_operations#UserMailFol'
        'derMessageOperations.{}',
        client_factory=cf_user_mail_folder_message)
    with self.command_group('mail', mail_beta_user_mail_folder_message,
                            client_factory=cf_user_mail_folder_message) as g:
        g.custom_command('delete', 'mail_delete', confirmation=True)
        g.custom_command('create-attachment', 'mail_create_attachment')
        g.custom_command('create-extension', 'mail_create_extension')
        g.custom_command('create-mention', 'mail_create_mention')
        g.custom_command('create-multi-value-extended-property', 'mail_create_multi_value_extended_property')
        g.custom_command('create-single-value-extended-property', 'mail_create_single_value_extended_property')
        g.custom_command('get-attachment', 'mail_get_attachment')
        g.custom_command('get-extension', 'mail_get_extension')
        g.custom_command('get-mention', 'mail_get_mention')
        g.custom_command('get-multi-value-extended-property', 'mail_get_multi_value_extended_property')
        g.custom_command('get-single-value-extended-property', 'mail_get_single_value_extended_property')
        g.custom_command('list-attachment', 'mail_list_attachment')
        g.custom_command('list-extension', 'mail_list_extension')
        g.custom_command('list-mention', 'mail_list_mention')
        g.custom_command('list-multi-value-extended-property', 'mail_list_multi_value_extended_property')
        g.custom_command('list-single-value-extended-property', 'mail_list_single_value_extended_property')
        g.custom_command('update-attachment', 'mail_update_attachment')
        g.custom_command('update-extension', 'mail_update_extension')
        g.custom_command('update-mention', 'mail_update_mention')
        g.custom_command('update-multi-value-extended-property', 'mail_update_multi_value_extended_property')
        g.custom_command('update-single-value-extended-property', 'mail_update_single_value_extended_property')

    from azext_mail_beta.generated._client_factory import cf_user_message
    mail_beta_user_message = CliCommandType(
        operations_tmpl='azext_mail_beta.vendored_sdks.mail.operations._user_message_operations#UserMessageOperations.{'
        '}',
        client_factory=cf_user_message)
    with self.command_group('mail', mail_beta_user_message, client_factory=cf_user_message) as g:
        g.custom_command('delete', 'mail_delete', confirmation=True)
        g.custom_command('create-attachment', 'mail_create_attachment')
        g.custom_command('create-extension', 'mail_create_extension')
        g.custom_command('create-mention', 'mail_create_mention')
        g.custom_command('create-multi-value-extended-property', 'mail_create_multi_value_extended_property')
        g.custom_command('create-single-value-extended-property', 'mail_create_single_value_extended_property')
        g.custom_command('get-attachment', 'mail_get_attachment')
        g.custom_command('get-extension', 'mail_get_extension')
        g.custom_command('get-mention', 'mail_get_mention')
        g.custom_command('get-multi-value-extended-property', 'mail_get_multi_value_extended_property')
        g.custom_command('get-single-value-extended-property', 'mail_get_single_value_extended_property')
        g.custom_command('list-attachment', 'mail_list_attachment')
        g.custom_command('list-extension', 'mail_list_extension')
        g.custom_command('list-mention', 'mail_list_mention')
        g.custom_command('list-multi-value-extended-property', 'mail_list_multi_value_extended_property')
        g.custom_command('list-single-value-extended-property', 'mail_list_single_value_extended_property')
        g.custom_command('update-attachment', 'mail_update_attachment')
        g.custom_command('update-extension', 'mail_update_extension')
        g.custom_command('update-mention', 'mail_update_mention')
        g.custom_command('update-multi-value-extended-property', 'mail_update_multi_value_extended_property')
        g.custom_command('update-single-value-extended-property', 'mail_update_single_value_extended_property')
