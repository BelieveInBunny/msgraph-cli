# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from enum import Enum, EnumMeta
from six import with_metaclass

class _CaseInsensitiveEnumMeta(EnumMeta):
    def __getitem__(self, name):
        return super().__getitem__(name.upper())

    def __getattr__(cls, name):
        """Return the enum member matching `name`
        We use __getattr__ instead of descriptors or inserting into the enum
        class' __dict__ in order to support `name` and `value` being both
        properties for enum members (which live in the class' __dict__) and
        enum members themselves.
        """
        try:
            return cls._member_map_[name.upper()]
        except KeyError:
            raise AttributeError(name)


class Enum13(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    BIRTHDAY = "birthday"
    COMPANY_NAME = "companyName"
    DEPARTMENT = "department"
    DISPLAY_NAME = "displayName"
    EMAIL_ADDRESSES = "emailAddresses"
    GIVEN_NAME = "givenName"
    IS_FAVORITE = "isFavorite"
    MAILBOX_TYPE = "mailboxType"
    OFFICE_LOCATION = "officeLocation"
    PERSON_NOTES = "personNotes"
    PERSON_TYPE = "personType"
    PHONES = "phones"
    POSTAL_ADDRESSES = "postalAddresses"
    PROFESSION = "profession"
    SOURCES = "sources"
    SURNAME = "surname"
    TITLE = "title"
    USER_PRINCIPAL_NAME = "userPrincipalName"
    WEBSITES = "websites"
    YOMI_COMPANY = "yomiCompany"

class Enum14(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ACCOUNT = "account"
    ADDRESSES = "addresses"
    ANNIVERSARIES = "anniversaries"
    AWARDS = "awards"
    CERTIFICATIONS = "certifications"
    EDUCATIONAL_ACTIVITIES = "educationalActivities"
    EMAILS = "emails"
    INTERESTS = "interests"
    LANGUAGES = "languages"
    NAMES = "names"
    NOTES = "notes"
    PATENTS = "patents"
    PHONES = "phones"
    POSITIONS = "positions"
    PROJECTS = "projects"
    PUBLICATIONS = "publications"
    SKILLS = "skills"
    WEB_ACCOUNTS = "webAccounts"
    WEBSITES = "websites"

class Enum15(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    ACCOUNT = "account"
    ADDRESSES = "addresses"
    ANNIVERSARIES = "anniversaries"
    AWARDS = "awards"
    CERTIFICATIONS = "certifications"
    EDUCATIONAL_ACTIVITIES = "educationalActivities"
    EMAILS = "emails"
    INTERESTS = "interests"
    LANGUAGES = "languages"
    NAMES = "names"
    NOTES = "notes"
    PATENTS = "patents"
    PHONES = "phones"
    POSITIONS = "positions"
    PROJECTS = "projects"
    PUBLICATIONS = "publications"
    SKILLS = "skills"
    WEB_ACCOUNTS = "webAccounts"
    WEBSITES = "websites"

class Enum23(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    ALLOWED_AUDIENCES = "allowedAudiences"
    ALLOWED_AUDIENCES_DESC = "allowedAudiences desc"
    CREATED_BY = "createdBy"
    CREATED_BY_DESC = "createdBy desc"
    CREATED_DATE_TIME = "createdDateTime"
    CREATED_DATE_TIME_DESC = "createdDateTime desc"
    INFERENCE = "inference"
    INFERENCE_DESC = "inference desc"
    LAST_MODIFIED_BY = "lastModifiedBy"
    LAST_MODIFIED_BY_DESC = "lastModifiedBy desc"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    LAST_MODIFIED_DATE_TIME_DESC = "lastModifiedDateTime desc"
    SOURCE = "source"
    SOURCE_DESC = "source desc"
    AGE_GROUP = "ageGroup"
    AGE_GROUP_DESC = "ageGroup desc"
    COUNTRY_CODE = "countryCode"
    COUNTRY_CODE_DESC = "countryCode desc"
    PREFERRED_LANGUAGE_TAG = "preferredLanguageTag"
    PREFERRED_LANGUAGE_TAG_DESC = "preferredLanguageTag desc"
    USER_PRINCIPAL_NAME = "userPrincipalName"
    USER_PRINCIPAL_NAME_DESC = "userPrincipalName desc"

class Enum24(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ALLOWED_AUDIENCES = "allowedAudiences"
    CREATED_BY = "createdBy"
    CREATED_DATE_TIME = "createdDateTime"
    INFERENCE = "inference"
    LAST_MODIFIED_BY = "lastModifiedBy"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    SOURCE = "source"
    AGE_GROUP = "ageGroup"
    COUNTRY_CODE = "countryCode"
    PREFERRED_LANGUAGE_TAG = "preferredLanguageTag"
    USER_PRINCIPAL_NAME = "userPrincipalName"

class Enum25(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ALLOWED_AUDIENCES = "allowedAudiences"
    CREATED_BY = "createdBy"
    CREATED_DATE_TIME = "createdDateTime"
    INFERENCE = "inference"
    LAST_MODIFIED_BY = "lastModifiedBy"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    SOURCE = "source"
    AGE_GROUP = "ageGroup"
    COUNTRY_CODE = "countryCode"
    PREFERRED_LANGUAGE_TAG = "preferredLanguageTag"
    USER_PRINCIPAL_NAME = "userPrincipalName"

class Enum26(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    ALLOWED_AUDIENCES = "allowedAudiences"
    ALLOWED_AUDIENCES_DESC = "allowedAudiences desc"
    CREATED_BY = "createdBy"
    CREATED_BY_DESC = "createdBy desc"
    CREATED_DATE_TIME = "createdDateTime"
    CREATED_DATE_TIME_DESC = "createdDateTime desc"
    INFERENCE = "inference"
    INFERENCE_DESC = "inference desc"
    LAST_MODIFIED_BY = "lastModifiedBy"
    LAST_MODIFIED_BY_DESC = "lastModifiedBy desc"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    LAST_MODIFIED_DATE_TIME_DESC = "lastModifiedDateTime desc"
    SOURCE = "source"
    SOURCE_DESC = "source desc"
    DETAIL = "detail"
    DETAIL_DESC = "detail desc"
    DISPLAY_NAME = "displayName"
    DISPLAY_NAME_DESC = "displayName desc"
    GEO_COORDINATES = "geoCoordinates"
    GEO_COORDINATES_DESC = "geoCoordinates desc"

class Enum27(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ALLOWED_AUDIENCES = "allowedAudiences"
    CREATED_BY = "createdBy"
    CREATED_DATE_TIME = "createdDateTime"
    INFERENCE = "inference"
    LAST_MODIFIED_BY = "lastModifiedBy"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    SOURCE = "source"
    DETAIL = "detail"
    DISPLAY_NAME = "displayName"
    GEO_COORDINATES = "geoCoordinates"

class Enum28(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ALLOWED_AUDIENCES = "allowedAudiences"
    CREATED_BY = "createdBy"
    CREATED_DATE_TIME = "createdDateTime"
    INFERENCE = "inference"
    LAST_MODIFIED_BY = "lastModifiedBy"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    SOURCE = "source"
    DETAIL = "detail"
    DISPLAY_NAME = "displayName"
    GEO_COORDINATES = "geoCoordinates"

class Enum29(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    ALLOWED_AUDIENCES = "allowedAudiences"
    ALLOWED_AUDIENCES_DESC = "allowedAudiences desc"
    CREATED_BY = "createdBy"
    CREATED_BY_DESC = "createdBy desc"
    CREATED_DATE_TIME = "createdDateTime"
    CREATED_DATE_TIME_DESC = "createdDateTime desc"
    INFERENCE = "inference"
    INFERENCE_DESC = "inference desc"
    LAST_MODIFIED_BY = "lastModifiedBy"
    LAST_MODIFIED_BY_DESC = "lastModifiedBy desc"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    LAST_MODIFIED_DATE_TIME_DESC = "lastModifiedDateTime desc"
    SOURCE = "source"
    SOURCE_DESC = "source desc"
    DATE = "date"
    DATE_DESC = "date desc"
    TYPE = "type"
    TYPE_DESC = "type desc"

class Enum30(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ALLOWED_AUDIENCES = "allowedAudiences"
    CREATED_BY = "createdBy"
    CREATED_DATE_TIME = "createdDateTime"
    INFERENCE = "inference"
    LAST_MODIFIED_BY = "lastModifiedBy"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    SOURCE = "source"
    DATE = "date"
    TYPE = "type"

class Enum31(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ALLOWED_AUDIENCES = "allowedAudiences"
    CREATED_BY = "createdBy"
    CREATED_DATE_TIME = "createdDateTime"
    INFERENCE = "inference"
    LAST_MODIFIED_BY = "lastModifiedBy"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    SOURCE = "source"
    DATE = "date"
    TYPE = "type"

class Enum32(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    ALLOWED_AUDIENCES = "allowedAudiences"
    ALLOWED_AUDIENCES_DESC = "allowedAudiences desc"
    CREATED_BY = "createdBy"
    CREATED_BY_DESC = "createdBy desc"
    CREATED_DATE_TIME = "createdDateTime"
    CREATED_DATE_TIME_DESC = "createdDateTime desc"
    INFERENCE = "inference"
    INFERENCE_DESC = "inference desc"
    LAST_MODIFIED_BY = "lastModifiedBy"
    LAST_MODIFIED_BY_DESC = "lastModifiedBy desc"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    LAST_MODIFIED_DATE_TIME_DESC = "lastModifiedDateTime desc"
    SOURCE = "source"
    SOURCE_DESC = "source desc"
    DESCRIPTION = "description"
    DESCRIPTION_DESC = "description desc"
    DISPLAY_NAME = "displayName"
    DISPLAY_NAME_DESC = "displayName desc"
    ISSUED_DATE = "issuedDate"
    ISSUED_DATE_DESC = "issuedDate desc"
    ISSUING_AUTHORITY = "issuingAuthority"
    ISSUING_AUTHORITY_DESC = "issuingAuthority desc"
    THUMBNAIL_URL = "thumbnailUrl"
    THUMBNAIL_URL_DESC = "thumbnailUrl desc"
    WEB_URL = "webUrl"
    WEB_URL_DESC = "webUrl desc"

class Enum33(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ALLOWED_AUDIENCES = "allowedAudiences"
    CREATED_BY = "createdBy"
    CREATED_DATE_TIME = "createdDateTime"
    INFERENCE = "inference"
    LAST_MODIFIED_BY = "lastModifiedBy"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    SOURCE = "source"
    DESCRIPTION = "description"
    DISPLAY_NAME = "displayName"
    ISSUED_DATE = "issuedDate"
    ISSUING_AUTHORITY = "issuingAuthority"
    THUMBNAIL_URL = "thumbnailUrl"
    WEB_URL = "webUrl"

class Enum34(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ALLOWED_AUDIENCES = "allowedAudiences"
    CREATED_BY = "createdBy"
    CREATED_DATE_TIME = "createdDateTime"
    INFERENCE = "inference"
    LAST_MODIFIED_BY = "lastModifiedBy"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    SOURCE = "source"
    DESCRIPTION = "description"
    DISPLAY_NAME = "displayName"
    ISSUED_DATE = "issuedDate"
    ISSUING_AUTHORITY = "issuingAuthority"
    THUMBNAIL_URL = "thumbnailUrl"
    WEB_URL = "webUrl"

class Enum35(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    ALLOWED_AUDIENCES = "allowedAudiences"
    ALLOWED_AUDIENCES_DESC = "allowedAudiences desc"
    CREATED_BY = "createdBy"
    CREATED_BY_DESC = "createdBy desc"
    CREATED_DATE_TIME = "createdDateTime"
    CREATED_DATE_TIME_DESC = "createdDateTime desc"
    INFERENCE = "inference"
    INFERENCE_DESC = "inference desc"
    LAST_MODIFIED_BY = "lastModifiedBy"
    LAST_MODIFIED_BY_DESC = "lastModifiedBy desc"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    LAST_MODIFIED_DATE_TIME_DESC = "lastModifiedDateTime desc"
    SOURCE = "source"
    SOURCE_DESC = "source desc"
    CERTIFICATION_ID = "certificationId"
    CERTIFICATION_ID_DESC = "certificationId desc"
    DESCRIPTION = "description"
    DESCRIPTION_DESC = "description desc"
    DISPLAY_NAME = "displayName"
    DISPLAY_NAME_DESC = "displayName desc"
    END_DATE = "endDate"
    END_DATE_DESC = "endDate desc"
    ISSUED_DATE = "issuedDate"
    ISSUED_DATE_DESC = "issuedDate desc"
    ISSUING_AUTHORITY = "issuingAuthority"
    ISSUING_AUTHORITY_DESC = "issuingAuthority desc"
    ISSUING_COMPANY = "issuingCompany"
    ISSUING_COMPANY_DESC = "issuingCompany desc"
    START_DATE = "startDate"
    START_DATE_DESC = "startDate desc"
    THUMBNAIL_URL = "thumbnailUrl"
    THUMBNAIL_URL_DESC = "thumbnailUrl desc"
    WEB_URL = "webUrl"
    WEB_URL_DESC = "webUrl desc"

class Enum36(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ALLOWED_AUDIENCES = "allowedAudiences"
    CREATED_BY = "createdBy"
    CREATED_DATE_TIME = "createdDateTime"
    INFERENCE = "inference"
    LAST_MODIFIED_BY = "lastModifiedBy"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    SOURCE = "source"
    CERTIFICATION_ID = "certificationId"
    DESCRIPTION = "description"
    DISPLAY_NAME = "displayName"
    END_DATE = "endDate"
    ISSUED_DATE = "issuedDate"
    ISSUING_AUTHORITY = "issuingAuthority"
    ISSUING_COMPANY = "issuingCompany"
    START_DATE = "startDate"
    THUMBNAIL_URL = "thumbnailUrl"
    WEB_URL = "webUrl"

class Enum37(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ALLOWED_AUDIENCES = "allowedAudiences"
    CREATED_BY = "createdBy"
    CREATED_DATE_TIME = "createdDateTime"
    INFERENCE = "inference"
    LAST_MODIFIED_BY = "lastModifiedBy"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    SOURCE = "source"
    CERTIFICATION_ID = "certificationId"
    DESCRIPTION = "description"
    DISPLAY_NAME = "displayName"
    END_DATE = "endDate"
    ISSUED_DATE = "issuedDate"
    ISSUING_AUTHORITY = "issuingAuthority"
    ISSUING_COMPANY = "issuingCompany"
    START_DATE = "startDate"
    THUMBNAIL_URL = "thumbnailUrl"
    WEB_URL = "webUrl"

class Enum38(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    ALLOWED_AUDIENCES = "allowedAudiences"
    ALLOWED_AUDIENCES_DESC = "allowedAudiences desc"
    CREATED_BY = "createdBy"
    CREATED_BY_DESC = "createdBy desc"
    CREATED_DATE_TIME = "createdDateTime"
    CREATED_DATE_TIME_DESC = "createdDateTime desc"
    INFERENCE = "inference"
    INFERENCE_DESC = "inference desc"
    LAST_MODIFIED_BY = "lastModifiedBy"
    LAST_MODIFIED_BY_DESC = "lastModifiedBy desc"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    LAST_MODIFIED_DATE_TIME_DESC = "lastModifiedDateTime desc"
    SOURCE = "source"
    SOURCE_DESC = "source desc"
    COMPLETION_MONTH_YEAR = "completionMonthYear"
    COMPLETION_MONTH_YEAR_DESC = "completionMonthYear desc"
    END_MONTH_YEAR = "endMonthYear"
    END_MONTH_YEAR_DESC = "endMonthYear desc"
    INSTITUTION = "institution"
    INSTITUTION_DESC = "institution desc"
    PROGRAM = "program"
    PROGRAM_DESC = "program desc"
    START_MONTH_YEAR = "startMonthYear"
    START_MONTH_YEAR_DESC = "startMonthYear desc"

class Enum39(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ALLOWED_AUDIENCES = "allowedAudiences"
    CREATED_BY = "createdBy"
    CREATED_DATE_TIME = "createdDateTime"
    INFERENCE = "inference"
    LAST_MODIFIED_BY = "lastModifiedBy"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    SOURCE = "source"
    COMPLETION_MONTH_YEAR = "completionMonthYear"
    END_MONTH_YEAR = "endMonthYear"
    INSTITUTION = "institution"
    PROGRAM = "program"
    START_MONTH_YEAR = "startMonthYear"

class Enum40(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ALLOWED_AUDIENCES = "allowedAudiences"
    CREATED_BY = "createdBy"
    CREATED_DATE_TIME = "createdDateTime"
    INFERENCE = "inference"
    LAST_MODIFIED_BY = "lastModifiedBy"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    SOURCE = "source"
    COMPLETION_MONTH_YEAR = "completionMonthYear"
    END_MONTH_YEAR = "endMonthYear"
    INSTITUTION = "institution"
    PROGRAM = "program"
    START_MONTH_YEAR = "startMonthYear"

class Enum41(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    ALLOWED_AUDIENCES = "allowedAudiences"
    ALLOWED_AUDIENCES_DESC = "allowedAudiences desc"
    CREATED_BY = "createdBy"
    CREATED_BY_DESC = "createdBy desc"
    CREATED_DATE_TIME = "createdDateTime"
    CREATED_DATE_TIME_DESC = "createdDateTime desc"
    INFERENCE = "inference"
    INFERENCE_DESC = "inference desc"
    LAST_MODIFIED_BY = "lastModifiedBy"
    LAST_MODIFIED_BY_DESC = "lastModifiedBy desc"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    LAST_MODIFIED_DATE_TIME_DESC = "lastModifiedDateTime desc"
    SOURCE = "source"
    SOURCE_DESC = "source desc"
    ADDRESS = "address"
    ADDRESS_DESC = "address desc"
    DISPLAY_NAME = "displayName"
    DISPLAY_NAME_DESC = "displayName desc"
    TYPE = "type"
    TYPE_DESC = "type desc"

class Enum42(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ALLOWED_AUDIENCES = "allowedAudiences"
    CREATED_BY = "createdBy"
    CREATED_DATE_TIME = "createdDateTime"
    INFERENCE = "inference"
    LAST_MODIFIED_BY = "lastModifiedBy"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    SOURCE = "source"
    ADDRESS = "address"
    DISPLAY_NAME = "displayName"
    TYPE = "type"

class Enum43(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ALLOWED_AUDIENCES = "allowedAudiences"
    CREATED_BY = "createdBy"
    CREATED_DATE_TIME = "createdDateTime"
    INFERENCE = "inference"
    LAST_MODIFIED_BY = "lastModifiedBy"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    SOURCE = "source"
    ADDRESS = "address"
    DISPLAY_NAME = "displayName"
    TYPE = "type"

class Enum44(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    ALLOWED_AUDIENCES = "allowedAudiences"
    ALLOWED_AUDIENCES_DESC = "allowedAudiences desc"
    CREATED_BY = "createdBy"
    CREATED_BY_DESC = "createdBy desc"
    CREATED_DATE_TIME = "createdDateTime"
    CREATED_DATE_TIME_DESC = "createdDateTime desc"
    INFERENCE = "inference"
    INFERENCE_DESC = "inference desc"
    LAST_MODIFIED_BY = "lastModifiedBy"
    LAST_MODIFIED_BY_DESC = "lastModifiedBy desc"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    LAST_MODIFIED_DATE_TIME_DESC = "lastModifiedDateTime desc"
    SOURCE = "source"
    SOURCE_DESC = "source desc"
    CATEGORIES = "categories"
    CATEGORIES_DESC = "categories desc"
    COLLABORATION_TAGS = "collaborationTags"
    COLLABORATION_TAGS_DESC = "collaborationTags desc"
    DESCRIPTION = "description"
    DESCRIPTION_DESC = "description desc"
    DISPLAY_NAME = "displayName"
    DISPLAY_NAME_DESC = "displayName desc"
    WEB_URL = "webUrl"
    WEB_URL_DESC = "webUrl desc"

class Enum45(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ALLOWED_AUDIENCES = "allowedAudiences"
    CREATED_BY = "createdBy"
    CREATED_DATE_TIME = "createdDateTime"
    INFERENCE = "inference"
    LAST_MODIFIED_BY = "lastModifiedBy"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    SOURCE = "source"
    CATEGORIES = "categories"
    COLLABORATION_TAGS = "collaborationTags"
    DESCRIPTION = "description"
    DISPLAY_NAME = "displayName"
    WEB_URL = "webUrl"

class Enum46(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ALLOWED_AUDIENCES = "allowedAudiences"
    CREATED_BY = "createdBy"
    CREATED_DATE_TIME = "createdDateTime"
    INFERENCE = "inference"
    LAST_MODIFIED_BY = "lastModifiedBy"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    SOURCE = "source"
    CATEGORIES = "categories"
    COLLABORATION_TAGS = "collaborationTags"
    DESCRIPTION = "description"
    DISPLAY_NAME = "displayName"
    WEB_URL = "webUrl"

class Enum47(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    ALLOWED_AUDIENCES = "allowedAudiences"
    ALLOWED_AUDIENCES_DESC = "allowedAudiences desc"
    CREATED_BY = "createdBy"
    CREATED_BY_DESC = "createdBy desc"
    CREATED_DATE_TIME = "createdDateTime"
    CREATED_DATE_TIME_DESC = "createdDateTime desc"
    INFERENCE = "inference"
    INFERENCE_DESC = "inference desc"
    LAST_MODIFIED_BY = "lastModifiedBy"
    LAST_MODIFIED_BY_DESC = "lastModifiedBy desc"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    LAST_MODIFIED_DATE_TIME_DESC = "lastModifiedDateTime desc"
    SOURCE = "source"
    SOURCE_DESC = "source desc"
    DISPLAY_NAME = "displayName"
    DISPLAY_NAME_DESC = "displayName desc"
    PROFICIENCY = "proficiency"
    PROFICIENCY_DESC = "proficiency desc"
    READING = "reading"
    READING_DESC = "reading desc"
    SPOKEN = "spoken"
    SPOKEN_DESC = "spoken desc"
    TAG = "tag"
    TAG_DESC = "tag desc"
    WRITTEN = "written"
    WRITTEN_DESC = "written desc"

class Enum48(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ALLOWED_AUDIENCES = "allowedAudiences"
    CREATED_BY = "createdBy"
    CREATED_DATE_TIME = "createdDateTime"
    INFERENCE = "inference"
    LAST_MODIFIED_BY = "lastModifiedBy"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    SOURCE = "source"
    DISPLAY_NAME = "displayName"
    PROFICIENCY = "proficiency"
    READING = "reading"
    SPOKEN = "spoken"
    TAG = "tag"
    WRITTEN = "written"

class Enum49(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ALLOWED_AUDIENCES = "allowedAudiences"
    CREATED_BY = "createdBy"
    CREATED_DATE_TIME = "createdDateTime"
    INFERENCE = "inference"
    LAST_MODIFIED_BY = "lastModifiedBy"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    SOURCE = "source"
    DISPLAY_NAME = "displayName"
    PROFICIENCY = "proficiency"
    READING = "reading"
    SPOKEN = "spoken"
    TAG = "tag"
    WRITTEN = "written"

class Enum5(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ACTIVITY = "activity"
    DURATION = "duration"
    END_DATE = "endDate"
    START_DATE = "startDate"
    TIME_ZONE_USED = "timeZoneUsed"

class Enum50(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    ALLOWED_AUDIENCES = "allowedAudiences"
    ALLOWED_AUDIENCES_DESC = "allowedAudiences desc"
    CREATED_BY = "createdBy"
    CREATED_BY_DESC = "createdBy desc"
    CREATED_DATE_TIME = "createdDateTime"
    CREATED_DATE_TIME_DESC = "createdDateTime desc"
    INFERENCE = "inference"
    INFERENCE_DESC = "inference desc"
    LAST_MODIFIED_BY = "lastModifiedBy"
    LAST_MODIFIED_BY_DESC = "lastModifiedBy desc"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    LAST_MODIFIED_DATE_TIME_DESC = "lastModifiedDateTime desc"
    SOURCE = "source"
    SOURCE_DESC = "source desc"
    DISPLAY_NAME = "displayName"
    DISPLAY_NAME_DESC = "displayName desc"
    FIRST = "first"
    FIRST_DESC = "first desc"
    INITIALS = "initials"
    INITIALS_DESC = "initials desc"
    LANGUAGE_TAG = "languageTag"
    LANGUAGE_TAG_DESC = "languageTag desc"
    LAST = "last"
    LAST_DESC = "last desc"
    MAIDEN = "maiden"
    MAIDEN_DESC = "maiden desc"
    MIDDLE = "middle"
    MIDDLE_DESC = "middle desc"
    NICKNAME = "nickname"
    NICKNAME_DESC = "nickname desc"
    PRONUNCIATION = "pronunciation"
    PRONUNCIATION_DESC = "pronunciation desc"
    SUFFIX = "suffix"
    SUFFIX_DESC = "suffix desc"
    TITLE = "title"
    TITLE_DESC = "title desc"

class Enum51(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ALLOWED_AUDIENCES = "allowedAudiences"
    CREATED_BY = "createdBy"
    CREATED_DATE_TIME = "createdDateTime"
    INFERENCE = "inference"
    LAST_MODIFIED_BY = "lastModifiedBy"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    SOURCE = "source"
    DISPLAY_NAME = "displayName"
    FIRST = "first"
    INITIALS = "initials"
    LANGUAGE_TAG = "languageTag"
    LAST = "last"
    MAIDEN = "maiden"
    MIDDLE = "middle"
    NICKNAME = "nickname"
    PRONUNCIATION = "pronunciation"
    SUFFIX = "suffix"
    TITLE = "title"

class Enum52(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ALLOWED_AUDIENCES = "allowedAudiences"
    CREATED_BY = "createdBy"
    CREATED_DATE_TIME = "createdDateTime"
    INFERENCE = "inference"
    LAST_MODIFIED_BY = "lastModifiedBy"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    SOURCE = "source"
    DISPLAY_NAME = "displayName"
    FIRST = "first"
    INITIALS = "initials"
    LANGUAGE_TAG = "languageTag"
    LAST = "last"
    MAIDEN = "maiden"
    MIDDLE = "middle"
    NICKNAME = "nickname"
    PRONUNCIATION = "pronunciation"
    SUFFIX = "suffix"
    TITLE = "title"

class Enum53(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    ALLOWED_AUDIENCES = "allowedAudiences"
    ALLOWED_AUDIENCES_DESC = "allowedAudiences desc"
    CREATED_BY = "createdBy"
    CREATED_BY_DESC = "createdBy desc"
    CREATED_DATE_TIME = "createdDateTime"
    CREATED_DATE_TIME_DESC = "createdDateTime desc"
    INFERENCE = "inference"
    INFERENCE_DESC = "inference desc"
    LAST_MODIFIED_BY = "lastModifiedBy"
    LAST_MODIFIED_BY_DESC = "lastModifiedBy desc"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    LAST_MODIFIED_DATE_TIME_DESC = "lastModifiedDateTime desc"
    SOURCE = "source"
    SOURCE_DESC = "source desc"
    DETAIL = "detail"
    DETAIL_DESC = "detail desc"
    DISPLAY_NAME = "displayName"
    DISPLAY_NAME_DESC = "displayName desc"

class Enum54(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ALLOWED_AUDIENCES = "allowedAudiences"
    CREATED_BY = "createdBy"
    CREATED_DATE_TIME = "createdDateTime"
    INFERENCE = "inference"
    LAST_MODIFIED_BY = "lastModifiedBy"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    SOURCE = "source"
    DETAIL = "detail"
    DISPLAY_NAME = "displayName"

class Enum55(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ALLOWED_AUDIENCES = "allowedAudiences"
    CREATED_BY = "createdBy"
    CREATED_DATE_TIME = "createdDateTime"
    INFERENCE = "inference"
    LAST_MODIFIED_BY = "lastModifiedBy"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    SOURCE = "source"
    DETAIL = "detail"
    DISPLAY_NAME = "displayName"

class Enum56(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    ALLOWED_AUDIENCES = "allowedAudiences"
    ALLOWED_AUDIENCES_DESC = "allowedAudiences desc"
    CREATED_BY = "createdBy"
    CREATED_BY_DESC = "createdBy desc"
    CREATED_DATE_TIME = "createdDateTime"
    CREATED_DATE_TIME_DESC = "createdDateTime desc"
    INFERENCE = "inference"
    INFERENCE_DESC = "inference desc"
    LAST_MODIFIED_BY = "lastModifiedBy"
    LAST_MODIFIED_BY_DESC = "lastModifiedBy desc"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    LAST_MODIFIED_DATE_TIME_DESC = "lastModifiedDateTime desc"
    SOURCE = "source"
    SOURCE_DESC = "source desc"
    DESCRIPTION = "description"
    DESCRIPTION_DESC = "description desc"
    DISPLAY_NAME = "displayName"
    DISPLAY_NAME_DESC = "displayName desc"
    IS_PENDING = "isPending"
    IS_PENDING_DESC = "isPending desc"
    ISSUED_DATE = "issuedDate"
    ISSUED_DATE_DESC = "issuedDate desc"
    ISSUING_AUTHORITY = "issuingAuthority"
    ISSUING_AUTHORITY_DESC = "issuingAuthority desc"
    NUMBER = "number"
    NUMBER_DESC = "number desc"
    WEB_URL = "webUrl"
    WEB_URL_DESC = "webUrl desc"

class Enum57(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ALLOWED_AUDIENCES = "allowedAudiences"
    CREATED_BY = "createdBy"
    CREATED_DATE_TIME = "createdDateTime"
    INFERENCE = "inference"
    LAST_MODIFIED_BY = "lastModifiedBy"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    SOURCE = "source"
    DESCRIPTION = "description"
    DISPLAY_NAME = "displayName"
    IS_PENDING = "isPending"
    ISSUED_DATE = "issuedDate"
    ISSUING_AUTHORITY = "issuingAuthority"
    NUMBER = "number"
    WEB_URL = "webUrl"

class Enum58(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ALLOWED_AUDIENCES = "allowedAudiences"
    CREATED_BY = "createdBy"
    CREATED_DATE_TIME = "createdDateTime"
    INFERENCE = "inference"
    LAST_MODIFIED_BY = "lastModifiedBy"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    SOURCE = "source"
    DESCRIPTION = "description"
    DISPLAY_NAME = "displayName"
    IS_PENDING = "isPending"
    ISSUED_DATE = "issuedDate"
    ISSUING_AUTHORITY = "issuingAuthority"
    NUMBER = "number"
    WEB_URL = "webUrl"

class Enum59(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    ALLOWED_AUDIENCES = "allowedAudiences"
    ALLOWED_AUDIENCES_DESC = "allowedAudiences desc"
    CREATED_BY = "createdBy"
    CREATED_BY_DESC = "createdBy desc"
    CREATED_DATE_TIME = "createdDateTime"
    CREATED_DATE_TIME_DESC = "createdDateTime desc"
    INFERENCE = "inference"
    INFERENCE_DESC = "inference desc"
    LAST_MODIFIED_BY = "lastModifiedBy"
    LAST_MODIFIED_BY_DESC = "lastModifiedBy desc"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    LAST_MODIFIED_DATE_TIME_DESC = "lastModifiedDateTime desc"
    SOURCE = "source"
    SOURCE_DESC = "source desc"
    DISPLAY_NAME = "displayName"
    DISPLAY_NAME_DESC = "displayName desc"
    NUMBER = "number"
    NUMBER_DESC = "number desc"
    TYPE = "type"
    TYPE_DESC = "type desc"

class Enum6(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    BIRTHDAY = "birthday"
    BIRTHDAY_DESC = "birthday desc"
    COMPANY_NAME = "companyName"
    COMPANY_NAME_DESC = "companyName desc"
    DEPARTMENT = "department"
    DEPARTMENT_DESC = "department desc"
    DISPLAY_NAME = "displayName"
    DISPLAY_NAME_DESC = "displayName desc"
    EMAIL_ADDRESSES = "emailAddresses"
    EMAIL_ADDRESSES_DESC = "emailAddresses desc"
    GIVEN_NAME = "givenName"
    GIVEN_NAME_DESC = "givenName desc"
    IS_FAVORITE = "isFavorite"
    IS_FAVORITE_DESC = "isFavorite desc"
    MAILBOX_TYPE = "mailboxType"
    MAILBOX_TYPE_DESC = "mailboxType desc"
    OFFICE_LOCATION = "officeLocation"
    OFFICE_LOCATION_DESC = "officeLocation desc"
    PERSON_NOTES = "personNotes"
    PERSON_NOTES_DESC = "personNotes desc"
    PERSON_TYPE = "personType"
    PERSON_TYPE_DESC = "personType desc"
    PHONES = "phones"
    PHONES_DESC = "phones desc"
    POSTAL_ADDRESSES = "postalAddresses"
    POSTAL_ADDRESSES_DESC = "postalAddresses desc"
    PROFESSION = "profession"
    PROFESSION_DESC = "profession desc"
    SOURCES = "sources"
    SOURCES_DESC = "sources desc"
    SURNAME = "surname"
    SURNAME_DESC = "surname desc"
    TITLE = "title"
    TITLE_DESC = "title desc"
    USER_PRINCIPAL_NAME = "userPrincipalName"
    USER_PRINCIPAL_NAME_DESC = "userPrincipalName desc"
    WEBSITES = "websites"
    WEBSITES_DESC = "websites desc"
    YOMI_COMPANY = "yomiCompany"
    YOMI_COMPANY_DESC = "yomiCompany desc"

class Enum60(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ALLOWED_AUDIENCES = "allowedAudiences"
    CREATED_BY = "createdBy"
    CREATED_DATE_TIME = "createdDateTime"
    INFERENCE = "inference"
    LAST_MODIFIED_BY = "lastModifiedBy"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    SOURCE = "source"
    DISPLAY_NAME = "displayName"
    NUMBER = "number"
    TYPE = "type"

class Enum61(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ALLOWED_AUDIENCES = "allowedAudiences"
    CREATED_BY = "createdBy"
    CREATED_DATE_TIME = "createdDateTime"
    INFERENCE = "inference"
    LAST_MODIFIED_BY = "lastModifiedBy"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    SOURCE = "source"
    DISPLAY_NAME = "displayName"
    NUMBER = "number"
    TYPE = "type"

class Enum62(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    ALLOWED_AUDIENCES = "allowedAudiences"
    ALLOWED_AUDIENCES_DESC = "allowedAudiences desc"
    CREATED_BY = "createdBy"
    CREATED_BY_DESC = "createdBy desc"
    CREATED_DATE_TIME = "createdDateTime"
    CREATED_DATE_TIME_DESC = "createdDateTime desc"
    INFERENCE = "inference"
    INFERENCE_DESC = "inference desc"
    LAST_MODIFIED_BY = "lastModifiedBy"
    LAST_MODIFIED_BY_DESC = "lastModifiedBy desc"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    LAST_MODIFIED_DATE_TIME_DESC = "lastModifiedDateTime desc"
    SOURCE = "source"
    SOURCE_DESC = "source desc"
    CATEGORIES = "categories"
    CATEGORIES_DESC = "categories desc"
    COLLEAGUES = "colleagues"
    COLLEAGUES_DESC = "colleagues desc"
    DETAIL = "detail"
    DETAIL_DESC = "detail desc"
    IS_CURRENT = "isCurrent"
    IS_CURRENT_DESC = "isCurrent desc"
    MANAGER = "manager"
    MANAGER_DESC = "manager desc"

class Enum63(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ALLOWED_AUDIENCES = "allowedAudiences"
    CREATED_BY = "createdBy"
    CREATED_DATE_TIME = "createdDateTime"
    INFERENCE = "inference"
    LAST_MODIFIED_BY = "lastModifiedBy"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    SOURCE = "source"
    CATEGORIES = "categories"
    COLLEAGUES = "colleagues"
    DETAIL = "detail"
    IS_CURRENT = "isCurrent"
    MANAGER = "manager"

class Enum64(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ALLOWED_AUDIENCES = "allowedAudiences"
    CREATED_BY = "createdBy"
    CREATED_DATE_TIME = "createdDateTime"
    INFERENCE = "inference"
    LAST_MODIFIED_BY = "lastModifiedBy"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    SOURCE = "source"
    CATEGORIES = "categories"
    COLLEAGUES = "colleagues"
    DETAIL = "detail"
    IS_CURRENT = "isCurrent"
    MANAGER = "manager"

class Enum65(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    ALLOWED_AUDIENCES = "allowedAudiences"
    ALLOWED_AUDIENCES_DESC = "allowedAudiences desc"
    CREATED_BY = "createdBy"
    CREATED_BY_DESC = "createdBy desc"
    CREATED_DATE_TIME = "createdDateTime"
    CREATED_DATE_TIME_DESC = "createdDateTime desc"
    INFERENCE = "inference"
    INFERENCE_DESC = "inference desc"
    LAST_MODIFIED_BY = "lastModifiedBy"
    LAST_MODIFIED_BY_DESC = "lastModifiedBy desc"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    LAST_MODIFIED_DATE_TIME_DESC = "lastModifiedDateTime desc"
    SOURCE = "source"
    SOURCE_DESC = "source desc"
    CATEGORIES = "categories"
    CATEGORIES_DESC = "categories desc"
    CLIENT = "client"
    CLIENT_DESC = "client desc"
    COLLABORATION_TAGS = "collaborationTags"
    COLLABORATION_TAGS_DESC = "collaborationTags desc"
    COLLEAGUES = "colleagues"
    COLLEAGUES_DESC = "colleagues desc"
    DETAIL = "detail"
    DETAIL_DESC = "detail desc"
    DISPLAY_NAME = "displayName"
    DISPLAY_NAME_DESC = "displayName desc"
    SPONSORS = "sponsors"
    SPONSORS_DESC = "sponsors desc"

class Enum66(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ALLOWED_AUDIENCES = "allowedAudiences"
    CREATED_BY = "createdBy"
    CREATED_DATE_TIME = "createdDateTime"
    INFERENCE = "inference"
    LAST_MODIFIED_BY = "lastModifiedBy"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    SOURCE = "source"
    CATEGORIES = "categories"
    CLIENT = "client"
    COLLABORATION_TAGS = "collaborationTags"
    COLLEAGUES = "colleagues"
    DETAIL = "detail"
    DISPLAY_NAME = "displayName"
    SPONSORS = "sponsors"

class Enum67(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ALLOWED_AUDIENCES = "allowedAudiences"
    CREATED_BY = "createdBy"
    CREATED_DATE_TIME = "createdDateTime"
    INFERENCE = "inference"
    LAST_MODIFIED_BY = "lastModifiedBy"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    SOURCE = "source"
    CATEGORIES = "categories"
    CLIENT = "client"
    COLLABORATION_TAGS = "collaborationTags"
    COLLEAGUES = "colleagues"
    DETAIL = "detail"
    DISPLAY_NAME = "displayName"
    SPONSORS = "sponsors"

class Enum68(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    ALLOWED_AUDIENCES = "allowedAudiences"
    ALLOWED_AUDIENCES_DESC = "allowedAudiences desc"
    CREATED_BY = "createdBy"
    CREATED_BY_DESC = "createdBy desc"
    CREATED_DATE_TIME = "createdDateTime"
    CREATED_DATE_TIME_DESC = "createdDateTime desc"
    INFERENCE = "inference"
    INFERENCE_DESC = "inference desc"
    LAST_MODIFIED_BY = "lastModifiedBy"
    LAST_MODIFIED_BY_DESC = "lastModifiedBy desc"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    LAST_MODIFIED_DATE_TIME_DESC = "lastModifiedDateTime desc"
    SOURCE = "source"
    SOURCE_DESC = "source desc"
    DESCRIPTION = "description"
    DESCRIPTION_DESC = "description desc"
    DISPLAY_NAME = "displayName"
    DISPLAY_NAME_DESC = "displayName desc"
    PUBLISHED_DATE = "publishedDate"
    PUBLISHED_DATE_DESC = "publishedDate desc"
    PUBLISHER = "publisher"
    PUBLISHER_DESC = "publisher desc"
    THUMBNAIL_URL = "thumbnailUrl"
    THUMBNAIL_URL_DESC = "thumbnailUrl desc"
    WEB_URL = "webUrl"
    WEB_URL_DESC = "webUrl desc"

class Enum69(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ALLOWED_AUDIENCES = "allowedAudiences"
    CREATED_BY = "createdBy"
    CREATED_DATE_TIME = "createdDateTime"
    INFERENCE = "inference"
    LAST_MODIFIED_BY = "lastModifiedBy"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    SOURCE = "source"
    DESCRIPTION = "description"
    DISPLAY_NAME = "displayName"
    PUBLISHED_DATE = "publishedDate"
    PUBLISHER = "publisher"
    THUMBNAIL_URL = "thumbnailUrl"
    WEB_URL = "webUrl"

class Enum7(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    BIRTHDAY = "birthday"
    COMPANY_NAME = "companyName"
    DEPARTMENT = "department"
    DISPLAY_NAME = "displayName"
    EMAIL_ADDRESSES = "emailAddresses"
    GIVEN_NAME = "givenName"
    IS_FAVORITE = "isFavorite"
    MAILBOX_TYPE = "mailboxType"
    OFFICE_LOCATION = "officeLocation"
    PERSON_NOTES = "personNotes"
    PERSON_TYPE = "personType"
    PHONES = "phones"
    POSTAL_ADDRESSES = "postalAddresses"
    PROFESSION = "profession"
    SOURCES = "sources"
    SURNAME = "surname"
    TITLE = "title"
    USER_PRINCIPAL_NAME = "userPrincipalName"
    WEBSITES = "websites"
    YOMI_COMPANY = "yomiCompany"

class Enum70(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ALLOWED_AUDIENCES = "allowedAudiences"
    CREATED_BY = "createdBy"
    CREATED_DATE_TIME = "createdDateTime"
    INFERENCE = "inference"
    LAST_MODIFIED_BY = "lastModifiedBy"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    SOURCE = "source"
    DESCRIPTION = "description"
    DISPLAY_NAME = "displayName"
    PUBLISHED_DATE = "publishedDate"
    PUBLISHER = "publisher"
    THUMBNAIL_URL = "thumbnailUrl"
    WEB_URL = "webUrl"

class Enum71(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    ALLOWED_AUDIENCES = "allowedAudiences"
    ALLOWED_AUDIENCES_DESC = "allowedAudiences desc"
    CREATED_BY = "createdBy"
    CREATED_BY_DESC = "createdBy desc"
    CREATED_DATE_TIME = "createdDateTime"
    CREATED_DATE_TIME_DESC = "createdDateTime desc"
    INFERENCE = "inference"
    INFERENCE_DESC = "inference desc"
    LAST_MODIFIED_BY = "lastModifiedBy"
    LAST_MODIFIED_BY_DESC = "lastModifiedBy desc"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    LAST_MODIFIED_DATE_TIME_DESC = "lastModifiedDateTime desc"
    SOURCE = "source"
    SOURCE_DESC = "source desc"
    CATEGORIES = "categories"
    CATEGORIES_DESC = "categories desc"
    COLLABORATION_TAGS = "collaborationTags"
    COLLABORATION_TAGS_DESC = "collaborationTags desc"
    DISPLAY_NAME = "displayName"
    DISPLAY_NAME_DESC = "displayName desc"
    PROFICIENCY = "proficiency"
    PROFICIENCY_DESC = "proficiency desc"
    WEB_URL = "webUrl"
    WEB_URL_DESC = "webUrl desc"

class Enum72(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ALLOWED_AUDIENCES = "allowedAudiences"
    CREATED_BY = "createdBy"
    CREATED_DATE_TIME = "createdDateTime"
    INFERENCE = "inference"
    LAST_MODIFIED_BY = "lastModifiedBy"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    SOURCE = "source"
    CATEGORIES = "categories"
    COLLABORATION_TAGS = "collaborationTags"
    DISPLAY_NAME = "displayName"
    PROFICIENCY = "proficiency"
    WEB_URL = "webUrl"

class Enum73(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ALLOWED_AUDIENCES = "allowedAudiences"
    CREATED_BY = "createdBy"
    CREATED_DATE_TIME = "createdDateTime"
    INFERENCE = "inference"
    LAST_MODIFIED_BY = "lastModifiedBy"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    SOURCE = "source"
    CATEGORIES = "categories"
    COLLABORATION_TAGS = "collaborationTags"
    DISPLAY_NAME = "displayName"
    PROFICIENCY = "proficiency"
    WEB_URL = "webUrl"

class Enum74(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    ALLOWED_AUDIENCES = "allowedAudiences"
    ALLOWED_AUDIENCES_DESC = "allowedAudiences desc"
    CREATED_BY = "createdBy"
    CREATED_BY_DESC = "createdBy desc"
    CREATED_DATE_TIME = "createdDateTime"
    CREATED_DATE_TIME_DESC = "createdDateTime desc"
    INFERENCE = "inference"
    INFERENCE_DESC = "inference desc"
    LAST_MODIFIED_BY = "lastModifiedBy"
    LAST_MODIFIED_BY_DESC = "lastModifiedBy desc"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    LAST_MODIFIED_DATE_TIME_DESC = "lastModifiedDateTime desc"
    SOURCE = "source"
    SOURCE_DESC = "source desc"
    DESCRIPTION = "description"
    DESCRIPTION_DESC = "description desc"
    SERVICE = "service"
    SERVICE_DESC = "service desc"
    STATUS_MESSAGE = "statusMessage"
    STATUS_MESSAGE_DESC = "statusMessage desc"
    USER_ID = "userId"
    USER_ID_DESC = "userId desc"
    WEB_URL = "webUrl"
    WEB_URL_DESC = "webUrl desc"

class Enum75(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ALLOWED_AUDIENCES = "allowedAudiences"
    CREATED_BY = "createdBy"
    CREATED_DATE_TIME = "createdDateTime"
    INFERENCE = "inference"
    LAST_MODIFIED_BY = "lastModifiedBy"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    SOURCE = "source"
    DESCRIPTION = "description"
    SERVICE = "service"
    STATUS_MESSAGE = "statusMessage"
    USER_ID = "userId"
    WEB_URL = "webUrl"

class Enum76(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ALLOWED_AUDIENCES = "allowedAudiences"
    CREATED_BY = "createdBy"
    CREATED_DATE_TIME = "createdDateTime"
    INFERENCE = "inference"
    LAST_MODIFIED_BY = "lastModifiedBy"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    SOURCE = "source"
    DESCRIPTION = "description"
    SERVICE = "service"
    STATUS_MESSAGE = "statusMessage"
    USER_ID = "userId"
    WEB_URL = "webUrl"

class Enum77(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    ALLOWED_AUDIENCES = "allowedAudiences"
    ALLOWED_AUDIENCES_DESC = "allowedAudiences desc"
    CREATED_BY = "createdBy"
    CREATED_BY_DESC = "createdBy desc"
    CREATED_DATE_TIME = "createdDateTime"
    CREATED_DATE_TIME_DESC = "createdDateTime desc"
    INFERENCE = "inference"
    INFERENCE_DESC = "inference desc"
    LAST_MODIFIED_BY = "lastModifiedBy"
    LAST_MODIFIED_BY_DESC = "lastModifiedBy desc"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    LAST_MODIFIED_DATE_TIME_DESC = "lastModifiedDateTime desc"
    SOURCE = "source"
    SOURCE_DESC = "source desc"
    CATEGORIES = "categories"
    CATEGORIES_DESC = "categories desc"
    DESCRIPTION = "description"
    DESCRIPTION_DESC = "description desc"
    DISPLAY_NAME = "displayName"
    DISPLAY_NAME_DESC = "displayName desc"
    WEB_URL = "webUrl"
    WEB_URL_DESC = "webUrl desc"

class Enum78(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ALLOWED_AUDIENCES = "allowedAudiences"
    CREATED_BY = "createdBy"
    CREATED_DATE_TIME = "createdDateTime"
    INFERENCE = "inference"
    LAST_MODIFIED_BY = "lastModifiedBy"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    SOURCE = "source"
    CATEGORIES = "categories"
    DESCRIPTION = "description"
    DISPLAY_NAME = "displayName"
    WEB_URL = "webUrl"

class Enum79(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ALLOWED_AUDIENCES = "allowedAudiences"
    CREATED_BY = "createdBy"
    CREATED_DATE_TIME = "createdDateTime"
    INFERENCE = "inference"
    LAST_MODIFIED_BY = "lastModifiedBy"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    SOURCE = "source"
    CATEGORIES = "categories"
    DESCRIPTION = "description"
    DISPLAY_NAME = "displayName"
    WEB_URL = "webUrl"

class Get1ItemsItem(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    SETTINGS = "settings"
    ACTIVITY_STATISTICS = "activityStatistics"

class Get2ItemsItem(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    ACTIVITY_STATISTICS = "activityStatistics"

class Get6ItemsItem(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    ACTIVITY = "activity"
    ACTIVITY_DESC = "activity desc"
    DURATION = "duration"
    DURATION_DESC = "duration desc"
    END_DATE = "endDate"
    END_DATE_DESC = "endDate desc"
    START_DATE = "startDate"
    START_DATE_DESC = "startDate desc"
    TIME_ZONE_USED = "timeZoneUsed"
    TIME_ZONE_USED_DESC = "timeZoneUsed desc"

class Get7ItemsItem(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ACTIVITY = "activity"
    DURATION = "duration"
    END_DATE = "endDate"
    START_DATE = "startDate"
    TIME_ZONE_USED = "timeZoneUsed"

class MicrosoftGraphAllowedAudiences(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ME = "me"
    FAMILY = "family"
    CONTACTS = "contacts"
    GROUP_MEMBERS = "groupMembers"
    ORGANIZATION = "organization"
    FEDERATED_ORGANIZATIONS = "federatedOrganizations"
    EVERYONE = "everyone"
    UNKNOWN_FUTURE_VALUE = "unknownFutureValue"

class MicrosoftGraphAnalyticsActivityType(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    EMAIL = "Email"
    MEETING = "Meeting"
    FOCUS = "Focus"
    CHAT = "Chat"
    CALL = "Call"

class MicrosoftGraphAnniversaryType(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    BIRTHDAY = "birthday"
    WEDDING = "wedding"
    UNKNOWN_FUTURE_VALUE = "unknownFutureValue"

class MicrosoftGraphBodyType(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    TEXT = "text"
    HTML = "html"

class MicrosoftGraphEmailType(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    UNKNOWN = "unknown"
    WORK = "work"
    PERSONAL = "personal"
    MAIN = "main"
    OTHER = "other"

class MicrosoftGraphLanguageProficiencyLevel(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ELEMENTARY = "elementary"
    CONVERSATIONAL = "conversational"
    LIMITED_WORKING = "limitedWorking"
    PROFESSIONAL_WORKING = "professionalWorking"
    FULL_PROFESSIONAL = "fullProfessional"
    NATIVE_OR_BILINGUAL = "nativeOrBilingual"
    UNKNOWN_FUTURE_VALUE = "unknownFutureValue"

class MicrosoftGraphLocationType(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    DEFAULT = "default"
    CONFERENCE_ROOM = "conferenceRoom"
    HOME_ADDRESS = "homeAddress"
    BUSINESS_ADDRESS = "businessAddress"
    GEO_COORDINATES = "geoCoordinates"
    STREET_ADDRESS = "streetAddress"
    HOTEL = "hotel"
    RESTAURANT = "restaurant"
    LOCAL_BUSINESS = "localBusiness"
    POSTAL_ADDRESS = "postalAddress"

class MicrosoftGraphLocationUniqueIdType(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    UNKNOWN = "unknown"
    LOCATION_STORE = "locationStore"
    DIRECTORY = "directory"
    PRIVATE = "private"
    BING = "bing"

class MicrosoftGraphPersonRelationship(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    MANAGER = "manager"
    COLLEAGUE = "colleague"
    DIRECT_REPORT = "directReport"
    DOT_LINE_REPORT = "dotLineReport"
    ASSISTANT = "assistant"
    DOT_LINE_MANAGER = "dotLineManager"
    ALTERNATE_CONTACT = "alternateContact"
    FRIEND = "friend"
    SPOUSE = "spouse"
    SIBLING = "sibling"
    CHILD = "child"
    PARENT = "parent"
    SPONSOR = "sponsor"
    EMERGENCY_CONTACT = "emergencyContact"
    OTHER = "other"
    UNKNOWN_FUTURE_VALUE = "unknownFutureValue"

class MicrosoftGraphPhoneType(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    HOME = "home"
    BUSINESS = "business"
    MOBILE = "mobile"
    OTHER = "other"
    ASSISTANT = "assistant"
    HOME_FAX = "homeFax"
    BUSINESS_FAX = "businessFax"
    OTHER_FAX = "otherFax"
    PAGER = "pager"
    RADIO = "radio"

class MicrosoftGraphPhysicalAddressType(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    UNKNOWN = "unknown"
    HOME = "home"
    BUSINESS = "business"
    OTHER = "other"

class MicrosoftGraphSkillProficiencyLevel(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ELEMENTARY = "elementary"
    LIMITED_WORKING = "limitedWorking"
    GENERAL_PROFESSIONAL = "generalProfessional"
    ADVANCED_PROFESSIONAL = "advancedProfessional"
    EXPERT = "expert"
    UNKNOWN_FUTURE_VALUE = "unknownFutureValue"

class MicrosoftGraphWebsiteType(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    OTHER = "other"
    HOME = "home"
    WORK = "work"
    BLOG = "blog"
    PROFILE = "profile"
