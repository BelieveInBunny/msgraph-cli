# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from enum import Enum, EnumMeta
from six import with_metaclass

class _CaseInsensitiveEnumMeta(EnumMeta):
    def __getitem__(self, name):
        return super().__getitem__(name.upper())

    def __getattr__(cls, name):
        """Return the enum member matching `name`
        We use __getattr__ instead of descriptors or inserting into the enum
        class' __dict__ in order to support `name` and `value` being both
        properties for enum members (which live in the class' __dict__) and
        enum members themselves.
        """
        try:
            return cls._member_map_[name.upper()]
        except KeyError:
            raise AttributeError(name)


class Enum13(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    BIRTHDAY = "birthday"
    COMPANYNAME = "companyName"
    DEPARTMENT = "department"
    DISPLAYNAME = "displayName"
    EMAILADDRESSES = "emailAddresses"
    GIVENNAME = "givenName"
    ISFAVORITE = "isFavorite"
    MAILBOXTYPE = "mailboxType"
    OFFICELOCATION = "officeLocation"
    PERSONNOTES = "personNotes"
    PERSONTYPE = "personType"
    PHONES = "phones"
    POSTALADDRESSES = "postalAddresses"
    PROFESSION = "profession"
    SOURCES = "sources"
    SURNAME = "surname"
    TITLE = "title"
    USERPRINCIPALNAME = "userPrincipalName"
    WEBSITES = "websites"
    YOMICOMPANY = "yomiCompany"

class Enum14(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ACCOUNT = "account"
    ADDRESSES = "addresses"
    ANNIVERSARIES = "anniversaries"
    AWARDS = "awards"
    CERTIFICATIONS = "certifications"
    EDUCATIONALACTIVITIES = "educationalActivities"
    EMAILS = "emails"
    INTERESTS = "interests"
    LANGUAGES = "languages"
    NAMES = "names"
    NOTES = "notes"
    PATENTS = "patents"
    PHONES = "phones"
    POSITIONS = "positions"
    PROJECTS = "projects"
    PUBLICATIONS = "publications"
    SKILLS = "skills"
    WEBACCOUNTS = "webAccounts"
    WEBSITES = "websites"

class Enum15(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    ACCOUNT = "account"
    ADDRESSES = "addresses"
    ANNIVERSARIES = "anniversaries"
    AWARDS = "awards"
    CERTIFICATIONS = "certifications"
    EDUCATIONALACTIVITIES = "educationalActivities"
    EMAILS = "emails"
    INTERESTS = "interests"
    LANGUAGES = "languages"
    NAMES = "names"
    NOTES = "notes"
    PATENTS = "patents"
    PHONES = "phones"
    POSITIONS = "positions"
    PROJECTS = "projects"
    PUBLICATIONS = "publications"
    SKILLS = "skills"
    WEBACCOUNTS = "webAccounts"
    WEBSITES = "websites"

class Enum23(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    IDDESC = "id desc"
    ALLOWEDAUDIENCES = "allowedAudiences"
    ALLOWEDAUDIENCESDESC = "allowedAudiences desc"
    CREATEDBY = "createdBy"
    CREATEDBYDESC = "createdBy desc"
    CREATEDDATETIME = "createdDateTime"
    CREATEDDATETIMEDESC = "createdDateTime desc"
    INFERENCE = "inference"
    INFERENCEDESC = "inference desc"
    LASTMODIFIEDBY = "lastModifiedBy"
    LASTMODIFIEDBYDESC = "lastModifiedBy desc"
    LASTMODIFIEDDATETIME = "lastModifiedDateTime"
    LASTMODIFIEDDATETIMEDESC = "lastModifiedDateTime desc"
    SOURCE = "source"
    SOURCEDESC = "source desc"
    AGEGROUP = "ageGroup"
    AGEGROUPDESC = "ageGroup desc"
    COUNTRYCODE = "countryCode"
    COUNTRYCODEDESC = "countryCode desc"
    PREFERREDLANGUAGETAG = "preferredLanguageTag"
    PREFERREDLANGUAGETAGDESC = "preferredLanguageTag desc"
    USERPRINCIPALNAME = "userPrincipalName"
    USERPRINCIPALNAMEDESC = "userPrincipalName desc"

class Enum24(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ALLOWEDAUDIENCES = "allowedAudiences"
    CREATEDBY = "createdBy"
    CREATEDDATETIME = "createdDateTime"
    INFERENCE = "inference"
    LASTMODIFIEDBY = "lastModifiedBy"
    LASTMODIFIEDDATETIME = "lastModifiedDateTime"
    SOURCE = "source"
    AGEGROUP = "ageGroup"
    COUNTRYCODE = "countryCode"
    PREFERREDLANGUAGETAG = "preferredLanguageTag"
    USERPRINCIPALNAME = "userPrincipalName"

class Enum25(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ALLOWEDAUDIENCES = "allowedAudiences"
    CREATEDBY = "createdBy"
    CREATEDDATETIME = "createdDateTime"
    INFERENCE = "inference"
    LASTMODIFIEDBY = "lastModifiedBy"
    LASTMODIFIEDDATETIME = "lastModifiedDateTime"
    SOURCE = "source"
    AGEGROUP = "ageGroup"
    COUNTRYCODE = "countryCode"
    PREFERREDLANGUAGETAG = "preferredLanguageTag"
    USERPRINCIPALNAME = "userPrincipalName"

class Enum26(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    IDDESC = "id desc"
    ALLOWEDAUDIENCES = "allowedAudiences"
    ALLOWEDAUDIENCESDESC = "allowedAudiences desc"
    CREATEDBY = "createdBy"
    CREATEDBYDESC = "createdBy desc"
    CREATEDDATETIME = "createdDateTime"
    CREATEDDATETIMEDESC = "createdDateTime desc"
    INFERENCE = "inference"
    INFERENCEDESC = "inference desc"
    LASTMODIFIEDBY = "lastModifiedBy"
    LASTMODIFIEDBYDESC = "lastModifiedBy desc"
    LASTMODIFIEDDATETIME = "lastModifiedDateTime"
    LASTMODIFIEDDATETIMEDESC = "lastModifiedDateTime desc"
    SOURCE = "source"
    SOURCEDESC = "source desc"
    DETAIL = "detail"
    DETAILDESC = "detail desc"
    DISPLAYNAME = "displayName"
    DISPLAYNAMEDESC = "displayName desc"
    GEOCOORDINATES = "geoCoordinates"
    GEOCOORDINATESDESC = "geoCoordinates desc"

class Enum27(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ALLOWEDAUDIENCES = "allowedAudiences"
    CREATEDBY = "createdBy"
    CREATEDDATETIME = "createdDateTime"
    INFERENCE = "inference"
    LASTMODIFIEDBY = "lastModifiedBy"
    LASTMODIFIEDDATETIME = "lastModifiedDateTime"
    SOURCE = "source"
    DETAIL = "detail"
    DISPLAYNAME = "displayName"
    GEOCOORDINATES = "geoCoordinates"

class Enum28(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ALLOWEDAUDIENCES = "allowedAudiences"
    CREATEDBY = "createdBy"
    CREATEDDATETIME = "createdDateTime"
    INFERENCE = "inference"
    LASTMODIFIEDBY = "lastModifiedBy"
    LASTMODIFIEDDATETIME = "lastModifiedDateTime"
    SOURCE = "source"
    DETAIL = "detail"
    DISPLAYNAME = "displayName"
    GEOCOORDINATES = "geoCoordinates"

class Enum29(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    IDDESC = "id desc"
    ALLOWEDAUDIENCES = "allowedAudiences"
    ALLOWEDAUDIENCESDESC = "allowedAudiences desc"
    CREATEDBY = "createdBy"
    CREATEDBYDESC = "createdBy desc"
    CREATEDDATETIME = "createdDateTime"
    CREATEDDATETIMEDESC = "createdDateTime desc"
    INFERENCE = "inference"
    INFERENCEDESC = "inference desc"
    LASTMODIFIEDBY = "lastModifiedBy"
    LASTMODIFIEDBYDESC = "lastModifiedBy desc"
    LASTMODIFIEDDATETIME = "lastModifiedDateTime"
    LASTMODIFIEDDATETIMEDESC = "lastModifiedDateTime desc"
    SOURCE = "source"
    SOURCEDESC = "source desc"
    DATE = "date"
    DATEDESC = "date desc"
    TYPE = "type"
    TYPEDESC = "type desc"

class Enum30(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ALLOWEDAUDIENCES = "allowedAudiences"
    CREATEDBY = "createdBy"
    CREATEDDATETIME = "createdDateTime"
    INFERENCE = "inference"
    LASTMODIFIEDBY = "lastModifiedBy"
    LASTMODIFIEDDATETIME = "lastModifiedDateTime"
    SOURCE = "source"
    DATE = "date"
    TYPE = "type"

class Enum31(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ALLOWEDAUDIENCES = "allowedAudiences"
    CREATEDBY = "createdBy"
    CREATEDDATETIME = "createdDateTime"
    INFERENCE = "inference"
    LASTMODIFIEDBY = "lastModifiedBy"
    LASTMODIFIEDDATETIME = "lastModifiedDateTime"
    SOURCE = "source"
    DATE = "date"
    TYPE = "type"

class Enum32(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    IDDESC = "id desc"
    ALLOWEDAUDIENCES = "allowedAudiences"
    ALLOWEDAUDIENCESDESC = "allowedAudiences desc"
    CREATEDBY = "createdBy"
    CREATEDBYDESC = "createdBy desc"
    CREATEDDATETIME = "createdDateTime"
    CREATEDDATETIMEDESC = "createdDateTime desc"
    INFERENCE = "inference"
    INFERENCEDESC = "inference desc"
    LASTMODIFIEDBY = "lastModifiedBy"
    LASTMODIFIEDBYDESC = "lastModifiedBy desc"
    LASTMODIFIEDDATETIME = "lastModifiedDateTime"
    LASTMODIFIEDDATETIMEDESC = "lastModifiedDateTime desc"
    SOURCE = "source"
    SOURCEDESC = "source desc"
    DESCRIPTION = "description"
    DESCRIPTIONDESC = "description desc"
    DISPLAYNAME = "displayName"
    DISPLAYNAMEDESC = "displayName desc"
    ISSUEDDATE = "issuedDate"
    ISSUEDDATEDESC = "issuedDate desc"
    ISSUINGAUTHORITY = "issuingAuthority"
    ISSUINGAUTHORITYDESC = "issuingAuthority desc"
    THUMBNAILURL = "thumbnailUrl"
    THUMBNAILURLDESC = "thumbnailUrl desc"
    WEBURL = "webUrl"
    WEBURLDESC = "webUrl desc"

class Enum33(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ALLOWEDAUDIENCES = "allowedAudiences"
    CREATEDBY = "createdBy"
    CREATEDDATETIME = "createdDateTime"
    INFERENCE = "inference"
    LASTMODIFIEDBY = "lastModifiedBy"
    LASTMODIFIEDDATETIME = "lastModifiedDateTime"
    SOURCE = "source"
    DESCRIPTION = "description"
    DISPLAYNAME = "displayName"
    ISSUEDDATE = "issuedDate"
    ISSUINGAUTHORITY = "issuingAuthority"
    THUMBNAILURL = "thumbnailUrl"
    WEBURL = "webUrl"

class Enum34(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ALLOWEDAUDIENCES = "allowedAudiences"
    CREATEDBY = "createdBy"
    CREATEDDATETIME = "createdDateTime"
    INFERENCE = "inference"
    LASTMODIFIEDBY = "lastModifiedBy"
    LASTMODIFIEDDATETIME = "lastModifiedDateTime"
    SOURCE = "source"
    DESCRIPTION = "description"
    DISPLAYNAME = "displayName"
    ISSUEDDATE = "issuedDate"
    ISSUINGAUTHORITY = "issuingAuthority"
    THUMBNAILURL = "thumbnailUrl"
    WEBURL = "webUrl"

class Enum35(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    IDDESC = "id desc"
    ALLOWEDAUDIENCES = "allowedAudiences"
    ALLOWEDAUDIENCESDESC = "allowedAudiences desc"
    CREATEDBY = "createdBy"
    CREATEDBYDESC = "createdBy desc"
    CREATEDDATETIME = "createdDateTime"
    CREATEDDATETIMEDESC = "createdDateTime desc"
    INFERENCE = "inference"
    INFERENCEDESC = "inference desc"
    LASTMODIFIEDBY = "lastModifiedBy"
    LASTMODIFIEDBYDESC = "lastModifiedBy desc"
    LASTMODIFIEDDATETIME = "lastModifiedDateTime"
    LASTMODIFIEDDATETIMEDESC = "lastModifiedDateTime desc"
    SOURCE = "source"
    SOURCEDESC = "source desc"
    CERTIFICATIONID = "certificationId"
    CERTIFICATIONIDDESC = "certificationId desc"
    DESCRIPTION = "description"
    DESCRIPTIONDESC = "description desc"
    DISPLAYNAME = "displayName"
    DISPLAYNAMEDESC = "displayName desc"
    ENDDATE = "endDate"
    ENDDATEDESC = "endDate desc"
    ISSUEDDATE = "issuedDate"
    ISSUEDDATEDESC = "issuedDate desc"
    ISSUINGAUTHORITY = "issuingAuthority"
    ISSUINGAUTHORITYDESC = "issuingAuthority desc"
    ISSUINGCOMPANY = "issuingCompany"
    ISSUINGCOMPANYDESC = "issuingCompany desc"
    STARTDATE = "startDate"
    STARTDATEDESC = "startDate desc"
    THUMBNAILURL = "thumbnailUrl"
    THUMBNAILURLDESC = "thumbnailUrl desc"
    WEBURL = "webUrl"
    WEBURLDESC = "webUrl desc"

class Enum36(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ALLOWEDAUDIENCES = "allowedAudiences"
    CREATEDBY = "createdBy"
    CREATEDDATETIME = "createdDateTime"
    INFERENCE = "inference"
    LASTMODIFIEDBY = "lastModifiedBy"
    LASTMODIFIEDDATETIME = "lastModifiedDateTime"
    SOURCE = "source"
    CERTIFICATIONID = "certificationId"
    DESCRIPTION = "description"
    DISPLAYNAME = "displayName"
    ENDDATE = "endDate"
    ISSUEDDATE = "issuedDate"
    ISSUINGAUTHORITY = "issuingAuthority"
    ISSUINGCOMPANY = "issuingCompany"
    STARTDATE = "startDate"
    THUMBNAILURL = "thumbnailUrl"
    WEBURL = "webUrl"

class Enum37(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ALLOWEDAUDIENCES = "allowedAudiences"
    CREATEDBY = "createdBy"
    CREATEDDATETIME = "createdDateTime"
    INFERENCE = "inference"
    LASTMODIFIEDBY = "lastModifiedBy"
    LASTMODIFIEDDATETIME = "lastModifiedDateTime"
    SOURCE = "source"
    CERTIFICATIONID = "certificationId"
    DESCRIPTION = "description"
    DISPLAYNAME = "displayName"
    ENDDATE = "endDate"
    ISSUEDDATE = "issuedDate"
    ISSUINGAUTHORITY = "issuingAuthority"
    ISSUINGCOMPANY = "issuingCompany"
    STARTDATE = "startDate"
    THUMBNAILURL = "thumbnailUrl"
    WEBURL = "webUrl"

class Enum38(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    IDDESC = "id desc"
    ALLOWEDAUDIENCES = "allowedAudiences"
    ALLOWEDAUDIENCESDESC = "allowedAudiences desc"
    CREATEDBY = "createdBy"
    CREATEDBYDESC = "createdBy desc"
    CREATEDDATETIME = "createdDateTime"
    CREATEDDATETIMEDESC = "createdDateTime desc"
    INFERENCE = "inference"
    INFERENCEDESC = "inference desc"
    LASTMODIFIEDBY = "lastModifiedBy"
    LASTMODIFIEDBYDESC = "lastModifiedBy desc"
    LASTMODIFIEDDATETIME = "lastModifiedDateTime"
    LASTMODIFIEDDATETIMEDESC = "lastModifiedDateTime desc"
    SOURCE = "source"
    SOURCEDESC = "source desc"
    COMPLETIONMONTHYEAR = "completionMonthYear"
    COMPLETIONMONTHYEARDESC = "completionMonthYear desc"
    ENDMONTHYEAR = "endMonthYear"
    ENDMONTHYEARDESC = "endMonthYear desc"
    INSTITUTION = "institution"
    INSTITUTIONDESC = "institution desc"
    PROGRAM = "program"
    PROGRAMDESC = "program desc"
    STARTMONTHYEAR = "startMonthYear"
    STARTMONTHYEARDESC = "startMonthYear desc"

class Enum39(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ALLOWEDAUDIENCES = "allowedAudiences"
    CREATEDBY = "createdBy"
    CREATEDDATETIME = "createdDateTime"
    INFERENCE = "inference"
    LASTMODIFIEDBY = "lastModifiedBy"
    LASTMODIFIEDDATETIME = "lastModifiedDateTime"
    SOURCE = "source"
    COMPLETIONMONTHYEAR = "completionMonthYear"
    ENDMONTHYEAR = "endMonthYear"
    INSTITUTION = "institution"
    PROGRAM = "program"
    STARTMONTHYEAR = "startMonthYear"

class Enum40(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ALLOWEDAUDIENCES = "allowedAudiences"
    CREATEDBY = "createdBy"
    CREATEDDATETIME = "createdDateTime"
    INFERENCE = "inference"
    LASTMODIFIEDBY = "lastModifiedBy"
    LASTMODIFIEDDATETIME = "lastModifiedDateTime"
    SOURCE = "source"
    COMPLETIONMONTHYEAR = "completionMonthYear"
    ENDMONTHYEAR = "endMonthYear"
    INSTITUTION = "institution"
    PROGRAM = "program"
    STARTMONTHYEAR = "startMonthYear"

class Enum41(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    IDDESC = "id desc"
    ALLOWEDAUDIENCES = "allowedAudiences"
    ALLOWEDAUDIENCESDESC = "allowedAudiences desc"
    CREATEDBY = "createdBy"
    CREATEDBYDESC = "createdBy desc"
    CREATEDDATETIME = "createdDateTime"
    CREATEDDATETIMEDESC = "createdDateTime desc"
    INFERENCE = "inference"
    INFERENCEDESC = "inference desc"
    LASTMODIFIEDBY = "lastModifiedBy"
    LASTMODIFIEDBYDESC = "lastModifiedBy desc"
    LASTMODIFIEDDATETIME = "lastModifiedDateTime"
    LASTMODIFIEDDATETIMEDESC = "lastModifiedDateTime desc"
    SOURCE = "source"
    SOURCEDESC = "source desc"
    ADDRESS = "address"
    ADDRESSDESC = "address desc"
    DISPLAYNAME = "displayName"
    DISPLAYNAMEDESC = "displayName desc"
    TYPE = "type"
    TYPEDESC = "type desc"

class Enum42(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ALLOWEDAUDIENCES = "allowedAudiences"
    CREATEDBY = "createdBy"
    CREATEDDATETIME = "createdDateTime"
    INFERENCE = "inference"
    LASTMODIFIEDBY = "lastModifiedBy"
    LASTMODIFIEDDATETIME = "lastModifiedDateTime"
    SOURCE = "source"
    ADDRESS = "address"
    DISPLAYNAME = "displayName"
    TYPE = "type"

class Enum43(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ALLOWEDAUDIENCES = "allowedAudiences"
    CREATEDBY = "createdBy"
    CREATEDDATETIME = "createdDateTime"
    INFERENCE = "inference"
    LASTMODIFIEDBY = "lastModifiedBy"
    LASTMODIFIEDDATETIME = "lastModifiedDateTime"
    SOURCE = "source"
    ADDRESS = "address"
    DISPLAYNAME = "displayName"
    TYPE = "type"

class Enum44(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    IDDESC = "id desc"
    ALLOWEDAUDIENCES = "allowedAudiences"
    ALLOWEDAUDIENCESDESC = "allowedAudiences desc"
    CREATEDBY = "createdBy"
    CREATEDBYDESC = "createdBy desc"
    CREATEDDATETIME = "createdDateTime"
    CREATEDDATETIMEDESC = "createdDateTime desc"
    INFERENCE = "inference"
    INFERENCEDESC = "inference desc"
    LASTMODIFIEDBY = "lastModifiedBy"
    LASTMODIFIEDBYDESC = "lastModifiedBy desc"
    LASTMODIFIEDDATETIME = "lastModifiedDateTime"
    LASTMODIFIEDDATETIMEDESC = "lastModifiedDateTime desc"
    SOURCE = "source"
    SOURCEDESC = "source desc"
    CATEGORIES = "categories"
    CATEGORIESDESC = "categories desc"
    COLLABORATIONTAGS = "collaborationTags"
    COLLABORATIONTAGSDESC = "collaborationTags desc"
    DESCRIPTION = "description"
    DESCRIPTIONDESC = "description desc"
    DISPLAYNAME = "displayName"
    DISPLAYNAMEDESC = "displayName desc"
    WEBURL = "webUrl"
    WEBURLDESC = "webUrl desc"

class Enum45(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ALLOWEDAUDIENCES = "allowedAudiences"
    CREATEDBY = "createdBy"
    CREATEDDATETIME = "createdDateTime"
    INFERENCE = "inference"
    LASTMODIFIEDBY = "lastModifiedBy"
    LASTMODIFIEDDATETIME = "lastModifiedDateTime"
    SOURCE = "source"
    CATEGORIES = "categories"
    COLLABORATIONTAGS = "collaborationTags"
    DESCRIPTION = "description"
    DISPLAYNAME = "displayName"
    WEBURL = "webUrl"

class Enum46(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ALLOWEDAUDIENCES = "allowedAudiences"
    CREATEDBY = "createdBy"
    CREATEDDATETIME = "createdDateTime"
    INFERENCE = "inference"
    LASTMODIFIEDBY = "lastModifiedBy"
    LASTMODIFIEDDATETIME = "lastModifiedDateTime"
    SOURCE = "source"
    CATEGORIES = "categories"
    COLLABORATIONTAGS = "collaborationTags"
    DESCRIPTION = "description"
    DISPLAYNAME = "displayName"
    WEBURL = "webUrl"

class Enum47(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    IDDESC = "id desc"
    ALLOWEDAUDIENCES = "allowedAudiences"
    ALLOWEDAUDIENCESDESC = "allowedAudiences desc"
    CREATEDBY = "createdBy"
    CREATEDBYDESC = "createdBy desc"
    CREATEDDATETIME = "createdDateTime"
    CREATEDDATETIMEDESC = "createdDateTime desc"
    INFERENCE = "inference"
    INFERENCEDESC = "inference desc"
    LASTMODIFIEDBY = "lastModifiedBy"
    LASTMODIFIEDBYDESC = "lastModifiedBy desc"
    LASTMODIFIEDDATETIME = "lastModifiedDateTime"
    LASTMODIFIEDDATETIMEDESC = "lastModifiedDateTime desc"
    SOURCE = "source"
    SOURCEDESC = "source desc"
    DISPLAYNAME = "displayName"
    DISPLAYNAMEDESC = "displayName desc"
    PROFICIENCY = "proficiency"
    PROFICIENCYDESC = "proficiency desc"
    READING = "reading"
    READINGDESC = "reading desc"
    SPOKEN = "spoken"
    SPOKENDESC = "spoken desc"
    TAG = "tag"
    TAGDESC = "tag desc"
    WRITTEN = "written"
    WRITTENDESC = "written desc"

class Enum48(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ALLOWEDAUDIENCES = "allowedAudiences"
    CREATEDBY = "createdBy"
    CREATEDDATETIME = "createdDateTime"
    INFERENCE = "inference"
    LASTMODIFIEDBY = "lastModifiedBy"
    LASTMODIFIEDDATETIME = "lastModifiedDateTime"
    SOURCE = "source"
    DISPLAYNAME = "displayName"
    PROFICIENCY = "proficiency"
    READING = "reading"
    SPOKEN = "spoken"
    TAG = "tag"
    WRITTEN = "written"

class Enum49(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ALLOWEDAUDIENCES = "allowedAudiences"
    CREATEDBY = "createdBy"
    CREATEDDATETIME = "createdDateTime"
    INFERENCE = "inference"
    LASTMODIFIEDBY = "lastModifiedBy"
    LASTMODIFIEDDATETIME = "lastModifiedDateTime"
    SOURCE = "source"
    DISPLAYNAME = "displayName"
    PROFICIENCY = "proficiency"
    READING = "reading"
    SPOKEN = "spoken"
    TAG = "tag"
    WRITTEN = "written"

class Enum5(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ACTIVITY = "activity"
    DURATION = "duration"
    ENDDATE = "endDate"
    STARTDATE = "startDate"
    TIMEZONEUSED = "timeZoneUsed"

class Enum50(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    IDDESC = "id desc"
    ALLOWEDAUDIENCES = "allowedAudiences"
    ALLOWEDAUDIENCESDESC = "allowedAudiences desc"
    CREATEDBY = "createdBy"
    CREATEDBYDESC = "createdBy desc"
    CREATEDDATETIME = "createdDateTime"
    CREATEDDATETIMEDESC = "createdDateTime desc"
    INFERENCE = "inference"
    INFERENCEDESC = "inference desc"
    LASTMODIFIEDBY = "lastModifiedBy"
    LASTMODIFIEDBYDESC = "lastModifiedBy desc"
    LASTMODIFIEDDATETIME = "lastModifiedDateTime"
    LASTMODIFIEDDATETIMEDESC = "lastModifiedDateTime desc"
    SOURCE = "source"
    SOURCEDESC = "source desc"
    DISPLAYNAME = "displayName"
    DISPLAYNAMEDESC = "displayName desc"
    FIRST = "first"
    FIRSTDESC = "first desc"
    INITIALS = "initials"
    INITIALSDESC = "initials desc"
    LANGUAGETAG = "languageTag"
    LANGUAGETAGDESC = "languageTag desc"
    LAST = "last"
    LASTDESC = "last desc"
    MAIDEN = "maiden"
    MAIDENDESC = "maiden desc"
    MIDDLE = "middle"
    MIDDLEDESC = "middle desc"
    NICKNAME = "nickname"
    NICKNAMEDESC = "nickname desc"
    PRONUNCIATION = "pronunciation"
    PRONUNCIATIONDESC = "pronunciation desc"
    SUFFIX = "suffix"
    SUFFIXDESC = "suffix desc"
    TITLE = "title"
    TITLEDESC = "title desc"

class Enum51(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ALLOWEDAUDIENCES = "allowedAudiences"
    CREATEDBY = "createdBy"
    CREATEDDATETIME = "createdDateTime"
    INFERENCE = "inference"
    LASTMODIFIEDBY = "lastModifiedBy"
    LASTMODIFIEDDATETIME = "lastModifiedDateTime"
    SOURCE = "source"
    DISPLAYNAME = "displayName"
    FIRST = "first"
    INITIALS = "initials"
    LANGUAGETAG = "languageTag"
    LAST = "last"
    MAIDEN = "maiden"
    MIDDLE = "middle"
    NICKNAME = "nickname"
    PRONUNCIATION = "pronunciation"
    SUFFIX = "suffix"
    TITLE = "title"

class Enum52(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ALLOWEDAUDIENCES = "allowedAudiences"
    CREATEDBY = "createdBy"
    CREATEDDATETIME = "createdDateTime"
    INFERENCE = "inference"
    LASTMODIFIEDBY = "lastModifiedBy"
    LASTMODIFIEDDATETIME = "lastModifiedDateTime"
    SOURCE = "source"
    DISPLAYNAME = "displayName"
    FIRST = "first"
    INITIALS = "initials"
    LANGUAGETAG = "languageTag"
    LAST = "last"
    MAIDEN = "maiden"
    MIDDLE = "middle"
    NICKNAME = "nickname"
    PRONUNCIATION = "pronunciation"
    SUFFIX = "suffix"
    TITLE = "title"

class Enum53(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    IDDESC = "id desc"
    ALLOWEDAUDIENCES = "allowedAudiences"
    ALLOWEDAUDIENCESDESC = "allowedAudiences desc"
    CREATEDBY = "createdBy"
    CREATEDBYDESC = "createdBy desc"
    CREATEDDATETIME = "createdDateTime"
    CREATEDDATETIMEDESC = "createdDateTime desc"
    INFERENCE = "inference"
    INFERENCEDESC = "inference desc"
    LASTMODIFIEDBY = "lastModifiedBy"
    LASTMODIFIEDBYDESC = "lastModifiedBy desc"
    LASTMODIFIEDDATETIME = "lastModifiedDateTime"
    LASTMODIFIEDDATETIMEDESC = "lastModifiedDateTime desc"
    SOURCE = "source"
    SOURCEDESC = "source desc"
    DETAIL = "detail"
    DETAILDESC = "detail desc"
    DISPLAYNAME = "displayName"
    DISPLAYNAMEDESC = "displayName desc"

class Enum54(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ALLOWEDAUDIENCES = "allowedAudiences"
    CREATEDBY = "createdBy"
    CREATEDDATETIME = "createdDateTime"
    INFERENCE = "inference"
    LASTMODIFIEDBY = "lastModifiedBy"
    LASTMODIFIEDDATETIME = "lastModifiedDateTime"
    SOURCE = "source"
    DETAIL = "detail"
    DISPLAYNAME = "displayName"

class Enum55(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ALLOWEDAUDIENCES = "allowedAudiences"
    CREATEDBY = "createdBy"
    CREATEDDATETIME = "createdDateTime"
    INFERENCE = "inference"
    LASTMODIFIEDBY = "lastModifiedBy"
    LASTMODIFIEDDATETIME = "lastModifiedDateTime"
    SOURCE = "source"
    DETAIL = "detail"
    DISPLAYNAME = "displayName"

class Enum56(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    IDDESC = "id desc"
    ALLOWEDAUDIENCES = "allowedAudiences"
    ALLOWEDAUDIENCESDESC = "allowedAudiences desc"
    CREATEDBY = "createdBy"
    CREATEDBYDESC = "createdBy desc"
    CREATEDDATETIME = "createdDateTime"
    CREATEDDATETIMEDESC = "createdDateTime desc"
    INFERENCE = "inference"
    INFERENCEDESC = "inference desc"
    LASTMODIFIEDBY = "lastModifiedBy"
    LASTMODIFIEDBYDESC = "lastModifiedBy desc"
    LASTMODIFIEDDATETIME = "lastModifiedDateTime"
    LASTMODIFIEDDATETIMEDESC = "lastModifiedDateTime desc"
    SOURCE = "source"
    SOURCEDESC = "source desc"
    DESCRIPTION = "description"
    DESCRIPTIONDESC = "description desc"
    DISPLAYNAME = "displayName"
    DISPLAYNAMEDESC = "displayName desc"
    ISPENDING = "isPending"
    ISPENDINGDESC = "isPending desc"
    ISSUEDDATE = "issuedDate"
    ISSUEDDATEDESC = "issuedDate desc"
    ISSUINGAUTHORITY = "issuingAuthority"
    ISSUINGAUTHORITYDESC = "issuingAuthority desc"
    NUMBER = "number"
    NUMBERDESC = "number desc"
    WEBURL = "webUrl"
    WEBURLDESC = "webUrl desc"

class Enum57(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ALLOWEDAUDIENCES = "allowedAudiences"
    CREATEDBY = "createdBy"
    CREATEDDATETIME = "createdDateTime"
    INFERENCE = "inference"
    LASTMODIFIEDBY = "lastModifiedBy"
    LASTMODIFIEDDATETIME = "lastModifiedDateTime"
    SOURCE = "source"
    DESCRIPTION = "description"
    DISPLAYNAME = "displayName"
    ISPENDING = "isPending"
    ISSUEDDATE = "issuedDate"
    ISSUINGAUTHORITY = "issuingAuthority"
    NUMBER = "number"
    WEBURL = "webUrl"

class Enum58(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ALLOWEDAUDIENCES = "allowedAudiences"
    CREATEDBY = "createdBy"
    CREATEDDATETIME = "createdDateTime"
    INFERENCE = "inference"
    LASTMODIFIEDBY = "lastModifiedBy"
    LASTMODIFIEDDATETIME = "lastModifiedDateTime"
    SOURCE = "source"
    DESCRIPTION = "description"
    DISPLAYNAME = "displayName"
    ISPENDING = "isPending"
    ISSUEDDATE = "issuedDate"
    ISSUINGAUTHORITY = "issuingAuthority"
    NUMBER = "number"
    WEBURL = "webUrl"

class Enum59(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    IDDESC = "id desc"
    ALLOWEDAUDIENCES = "allowedAudiences"
    ALLOWEDAUDIENCESDESC = "allowedAudiences desc"
    CREATEDBY = "createdBy"
    CREATEDBYDESC = "createdBy desc"
    CREATEDDATETIME = "createdDateTime"
    CREATEDDATETIMEDESC = "createdDateTime desc"
    INFERENCE = "inference"
    INFERENCEDESC = "inference desc"
    LASTMODIFIEDBY = "lastModifiedBy"
    LASTMODIFIEDBYDESC = "lastModifiedBy desc"
    LASTMODIFIEDDATETIME = "lastModifiedDateTime"
    LASTMODIFIEDDATETIMEDESC = "lastModifiedDateTime desc"
    SOURCE = "source"
    SOURCEDESC = "source desc"
    DISPLAYNAME = "displayName"
    DISPLAYNAMEDESC = "displayName desc"
    NUMBER = "number"
    NUMBERDESC = "number desc"
    TYPE = "type"
    TYPEDESC = "type desc"

class Enum6(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    IDDESC = "id desc"
    BIRTHDAY = "birthday"
    BIRTHDAYDESC = "birthday desc"
    COMPANYNAME = "companyName"
    COMPANYNAMEDESC = "companyName desc"
    DEPARTMENT = "department"
    DEPARTMENTDESC = "department desc"
    DISPLAYNAME = "displayName"
    DISPLAYNAMEDESC = "displayName desc"
    EMAILADDRESSES = "emailAddresses"
    EMAILADDRESSESDESC = "emailAddresses desc"
    GIVENNAME = "givenName"
    GIVENNAMEDESC = "givenName desc"
    ISFAVORITE = "isFavorite"
    ISFAVORITEDESC = "isFavorite desc"
    MAILBOXTYPE = "mailboxType"
    MAILBOXTYPEDESC = "mailboxType desc"
    OFFICELOCATION = "officeLocation"
    OFFICELOCATIONDESC = "officeLocation desc"
    PERSONNOTES = "personNotes"
    PERSONNOTESDESC = "personNotes desc"
    PERSONTYPE = "personType"
    PERSONTYPEDESC = "personType desc"
    PHONES = "phones"
    PHONESDESC = "phones desc"
    POSTALADDRESSES = "postalAddresses"
    POSTALADDRESSESDESC = "postalAddresses desc"
    PROFESSION = "profession"
    PROFESSIONDESC = "profession desc"
    SOURCES = "sources"
    SOURCESDESC = "sources desc"
    SURNAME = "surname"
    SURNAMEDESC = "surname desc"
    TITLE = "title"
    TITLEDESC = "title desc"
    USERPRINCIPALNAME = "userPrincipalName"
    USERPRINCIPALNAMEDESC = "userPrincipalName desc"
    WEBSITES = "websites"
    WEBSITESDESC = "websites desc"
    YOMICOMPANY = "yomiCompany"
    YOMICOMPANYDESC = "yomiCompany desc"

class Enum60(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ALLOWEDAUDIENCES = "allowedAudiences"
    CREATEDBY = "createdBy"
    CREATEDDATETIME = "createdDateTime"
    INFERENCE = "inference"
    LASTMODIFIEDBY = "lastModifiedBy"
    LASTMODIFIEDDATETIME = "lastModifiedDateTime"
    SOURCE = "source"
    DISPLAYNAME = "displayName"
    NUMBER = "number"
    TYPE = "type"

class Enum61(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ALLOWEDAUDIENCES = "allowedAudiences"
    CREATEDBY = "createdBy"
    CREATEDDATETIME = "createdDateTime"
    INFERENCE = "inference"
    LASTMODIFIEDBY = "lastModifiedBy"
    LASTMODIFIEDDATETIME = "lastModifiedDateTime"
    SOURCE = "source"
    DISPLAYNAME = "displayName"
    NUMBER = "number"
    TYPE = "type"

class Enum62(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    IDDESC = "id desc"
    ALLOWEDAUDIENCES = "allowedAudiences"
    ALLOWEDAUDIENCESDESC = "allowedAudiences desc"
    CREATEDBY = "createdBy"
    CREATEDBYDESC = "createdBy desc"
    CREATEDDATETIME = "createdDateTime"
    CREATEDDATETIMEDESC = "createdDateTime desc"
    INFERENCE = "inference"
    INFERENCEDESC = "inference desc"
    LASTMODIFIEDBY = "lastModifiedBy"
    LASTMODIFIEDBYDESC = "lastModifiedBy desc"
    LASTMODIFIEDDATETIME = "lastModifiedDateTime"
    LASTMODIFIEDDATETIMEDESC = "lastModifiedDateTime desc"
    SOURCE = "source"
    SOURCEDESC = "source desc"
    CATEGORIES = "categories"
    CATEGORIESDESC = "categories desc"
    COLLEAGUES = "colleagues"
    COLLEAGUESDESC = "colleagues desc"
    DETAIL = "detail"
    DETAILDESC = "detail desc"
    ISCURRENT = "isCurrent"
    ISCURRENTDESC = "isCurrent desc"
    MANAGER = "manager"
    MANAGERDESC = "manager desc"

class Enum63(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ALLOWEDAUDIENCES = "allowedAudiences"
    CREATEDBY = "createdBy"
    CREATEDDATETIME = "createdDateTime"
    INFERENCE = "inference"
    LASTMODIFIEDBY = "lastModifiedBy"
    LASTMODIFIEDDATETIME = "lastModifiedDateTime"
    SOURCE = "source"
    CATEGORIES = "categories"
    COLLEAGUES = "colleagues"
    DETAIL = "detail"
    ISCURRENT = "isCurrent"
    MANAGER = "manager"

class Enum64(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ALLOWEDAUDIENCES = "allowedAudiences"
    CREATEDBY = "createdBy"
    CREATEDDATETIME = "createdDateTime"
    INFERENCE = "inference"
    LASTMODIFIEDBY = "lastModifiedBy"
    LASTMODIFIEDDATETIME = "lastModifiedDateTime"
    SOURCE = "source"
    CATEGORIES = "categories"
    COLLEAGUES = "colleagues"
    DETAIL = "detail"
    ISCURRENT = "isCurrent"
    MANAGER = "manager"

class Enum65(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    IDDESC = "id desc"
    ALLOWEDAUDIENCES = "allowedAudiences"
    ALLOWEDAUDIENCESDESC = "allowedAudiences desc"
    CREATEDBY = "createdBy"
    CREATEDBYDESC = "createdBy desc"
    CREATEDDATETIME = "createdDateTime"
    CREATEDDATETIMEDESC = "createdDateTime desc"
    INFERENCE = "inference"
    INFERENCEDESC = "inference desc"
    LASTMODIFIEDBY = "lastModifiedBy"
    LASTMODIFIEDBYDESC = "lastModifiedBy desc"
    LASTMODIFIEDDATETIME = "lastModifiedDateTime"
    LASTMODIFIEDDATETIMEDESC = "lastModifiedDateTime desc"
    SOURCE = "source"
    SOURCEDESC = "source desc"
    CATEGORIES = "categories"
    CATEGORIESDESC = "categories desc"
    CLIENT = "client"
    CLIENTDESC = "client desc"
    COLLABORATIONTAGS = "collaborationTags"
    COLLABORATIONTAGSDESC = "collaborationTags desc"
    COLLEAGUES = "colleagues"
    COLLEAGUESDESC = "colleagues desc"
    DETAIL = "detail"
    DETAILDESC = "detail desc"
    DISPLAYNAME = "displayName"
    DISPLAYNAMEDESC = "displayName desc"
    SPONSORS = "sponsors"
    SPONSORSDESC = "sponsors desc"

class Enum66(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ALLOWEDAUDIENCES = "allowedAudiences"
    CREATEDBY = "createdBy"
    CREATEDDATETIME = "createdDateTime"
    INFERENCE = "inference"
    LASTMODIFIEDBY = "lastModifiedBy"
    LASTMODIFIEDDATETIME = "lastModifiedDateTime"
    SOURCE = "source"
    CATEGORIES = "categories"
    CLIENT = "client"
    COLLABORATIONTAGS = "collaborationTags"
    COLLEAGUES = "colleagues"
    DETAIL = "detail"
    DISPLAYNAME = "displayName"
    SPONSORS = "sponsors"

class Enum67(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ALLOWEDAUDIENCES = "allowedAudiences"
    CREATEDBY = "createdBy"
    CREATEDDATETIME = "createdDateTime"
    INFERENCE = "inference"
    LASTMODIFIEDBY = "lastModifiedBy"
    LASTMODIFIEDDATETIME = "lastModifiedDateTime"
    SOURCE = "source"
    CATEGORIES = "categories"
    CLIENT = "client"
    COLLABORATIONTAGS = "collaborationTags"
    COLLEAGUES = "colleagues"
    DETAIL = "detail"
    DISPLAYNAME = "displayName"
    SPONSORS = "sponsors"

class Enum68(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    IDDESC = "id desc"
    ALLOWEDAUDIENCES = "allowedAudiences"
    ALLOWEDAUDIENCESDESC = "allowedAudiences desc"
    CREATEDBY = "createdBy"
    CREATEDBYDESC = "createdBy desc"
    CREATEDDATETIME = "createdDateTime"
    CREATEDDATETIMEDESC = "createdDateTime desc"
    INFERENCE = "inference"
    INFERENCEDESC = "inference desc"
    LASTMODIFIEDBY = "lastModifiedBy"
    LASTMODIFIEDBYDESC = "lastModifiedBy desc"
    LASTMODIFIEDDATETIME = "lastModifiedDateTime"
    LASTMODIFIEDDATETIMEDESC = "lastModifiedDateTime desc"
    SOURCE = "source"
    SOURCEDESC = "source desc"
    DESCRIPTION = "description"
    DESCRIPTIONDESC = "description desc"
    DISPLAYNAME = "displayName"
    DISPLAYNAMEDESC = "displayName desc"
    PUBLISHEDDATE = "publishedDate"
    PUBLISHEDDATEDESC = "publishedDate desc"
    PUBLISHER = "publisher"
    PUBLISHERDESC = "publisher desc"
    THUMBNAILURL = "thumbnailUrl"
    THUMBNAILURLDESC = "thumbnailUrl desc"
    WEBURL = "webUrl"
    WEBURLDESC = "webUrl desc"

class Enum69(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ALLOWEDAUDIENCES = "allowedAudiences"
    CREATEDBY = "createdBy"
    CREATEDDATETIME = "createdDateTime"
    INFERENCE = "inference"
    LASTMODIFIEDBY = "lastModifiedBy"
    LASTMODIFIEDDATETIME = "lastModifiedDateTime"
    SOURCE = "source"
    DESCRIPTION = "description"
    DISPLAYNAME = "displayName"
    PUBLISHEDDATE = "publishedDate"
    PUBLISHER = "publisher"
    THUMBNAILURL = "thumbnailUrl"
    WEBURL = "webUrl"

class Enum7(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    BIRTHDAY = "birthday"
    COMPANYNAME = "companyName"
    DEPARTMENT = "department"
    DISPLAYNAME = "displayName"
    EMAILADDRESSES = "emailAddresses"
    GIVENNAME = "givenName"
    ISFAVORITE = "isFavorite"
    MAILBOXTYPE = "mailboxType"
    OFFICELOCATION = "officeLocation"
    PERSONNOTES = "personNotes"
    PERSONTYPE = "personType"
    PHONES = "phones"
    POSTALADDRESSES = "postalAddresses"
    PROFESSION = "profession"
    SOURCES = "sources"
    SURNAME = "surname"
    TITLE = "title"
    USERPRINCIPALNAME = "userPrincipalName"
    WEBSITES = "websites"
    YOMICOMPANY = "yomiCompany"

class Enum70(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ALLOWEDAUDIENCES = "allowedAudiences"
    CREATEDBY = "createdBy"
    CREATEDDATETIME = "createdDateTime"
    INFERENCE = "inference"
    LASTMODIFIEDBY = "lastModifiedBy"
    LASTMODIFIEDDATETIME = "lastModifiedDateTime"
    SOURCE = "source"
    DESCRIPTION = "description"
    DISPLAYNAME = "displayName"
    PUBLISHEDDATE = "publishedDate"
    PUBLISHER = "publisher"
    THUMBNAILURL = "thumbnailUrl"
    WEBURL = "webUrl"

class Enum71(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    IDDESC = "id desc"
    ALLOWEDAUDIENCES = "allowedAudiences"
    ALLOWEDAUDIENCESDESC = "allowedAudiences desc"
    CREATEDBY = "createdBy"
    CREATEDBYDESC = "createdBy desc"
    CREATEDDATETIME = "createdDateTime"
    CREATEDDATETIMEDESC = "createdDateTime desc"
    INFERENCE = "inference"
    INFERENCEDESC = "inference desc"
    LASTMODIFIEDBY = "lastModifiedBy"
    LASTMODIFIEDBYDESC = "lastModifiedBy desc"
    LASTMODIFIEDDATETIME = "lastModifiedDateTime"
    LASTMODIFIEDDATETIMEDESC = "lastModifiedDateTime desc"
    SOURCE = "source"
    SOURCEDESC = "source desc"
    CATEGORIES = "categories"
    CATEGORIESDESC = "categories desc"
    COLLABORATIONTAGS = "collaborationTags"
    COLLABORATIONTAGSDESC = "collaborationTags desc"
    DISPLAYNAME = "displayName"
    DISPLAYNAMEDESC = "displayName desc"
    PROFICIENCY = "proficiency"
    PROFICIENCYDESC = "proficiency desc"
    WEBURL = "webUrl"
    WEBURLDESC = "webUrl desc"

class Enum72(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ALLOWEDAUDIENCES = "allowedAudiences"
    CREATEDBY = "createdBy"
    CREATEDDATETIME = "createdDateTime"
    INFERENCE = "inference"
    LASTMODIFIEDBY = "lastModifiedBy"
    LASTMODIFIEDDATETIME = "lastModifiedDateTime"
    SOURCE = "source"
    CATEGORIES = "categories"
    COLLABORATIONTAGS = "collaborationTags"
    DISPLAYNAME = "displayName"
    PROFICIENCY = "proficiency"
    WEBURL = "webUrl"

class Enum73(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ALLOWEDAUDIENCES = "allowedAudiences"
    CREATEDBY = "createdBy"
    CREATEDDATETIME = "createdDateTime"
    INFERENCE = "inference"
    LASTMODIFIEDBY = "lastModifiedBy"
    LASTMODIFIEDDATETIME = "lastModifiedDateTime"
    SOURCE = "source"
    CATEGORIES = "categories"
    COLLABORATIONTAGS = "collaborationTags"
    DISPLAYNAME = "displayName"
    PROFICIENCY = "proficiency"
    WEBURL = "webUrl"

class Enum74(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    IDDESC = "id desc"
    ALLOWEDAUDIENCES = "allowedAudiences"
    ALLOWEDAUDIENCESDESC = "allowedAudiences desc"
    CREATEDBY = "createdBy"
    CREATEDBYDESC = "createdBy desc"
    CREATEDDATETIME = "createdDateTime"
    CREATEDDATETIMEDESC = "createdDateTime desc"
    INFERENCE = "inference"
    INFERENCEDESC = "inference desc"
    LASTMODIFIEDBY = "lastModifiedBy"
    LASTMODIFIEDBYDESC = "lastModifiedBy desc"
    LASTMODIFIEDDATETIME = "lastModifiedDateTime"
    LASTMODIFIEDDATETIMEDESC = "lastModifiedDateTime desc"
    SOURCE = "source"
    SOURCEDESC = "source desc"
    DESCRIPTION = "description"
    DESCRIPTIONDESC = "description desc"
    SERVICE = "service"
    SERVICEDESC = "service desc"
    STATUSMESSAGE = "statusMessage"
    STATUSMESSAGEDESC = "statusMessage desc"
    USERID = "userId"
    USERIDDESC = "userId desc"
    WEBURL = "webUrl"
    WEBURLDESC = "webUrl desc"

class Enum75(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ALLOWEDAUDIENCES = "allowedAudiences"
    CREATEDBY = "createdBy"
    CREATEDDATETIME = "createdDateTime"
    INFERENCE = "inference"
    LASTMODIFIEDBY = "lastModifiedBy"
    LASTMODIFIEDDATETIME = "lastModifiedDateTime"
    SOURCE = "source"
    DESCRIPTION = "description"
    SERVICE = "service"
    STATUSMESSAGE = "statusMessage"
    USERID = "userId"
    WEBURL = "webUrl"

class Enum76(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ALLOWEDAUDIENCES = "allowedAudiences"
    CREATEDBY = "createdBy"
    CREATEDDATETIME = "createdDateTime"
    INFERENCE = "inference"
    LASTMODIFIEDBY = "lastModifiedBy"
    LASTMODIFIEDDATETIME = "lastModifiedDateTime"
    SOURCE = "source"
    DESCRIPTION = "description"
    SERVICE = "service"
    STATUSMESSAGE = "statusMessage"
    USERID = "userId"
    WEBURL = "webUrl"

class Enum77(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    IDDESC = "id desc"
    ALLOWEDAUDIENCES = "allowedAudiences"
    ALLOWEDAUDIENCESDESC = "allowedAudiences desc"
    CREATEDBY = "createdBy"
    CREATEDBYDESC = "createdBy desc"
    CREATEDDATETIME = "createdDateTime"
    CREATEDDATETIMEDESC = "createdDateTime desc"
    INFERENCE = "inference"
    INFERENCEDESC = "inference desc"
    LASTMODIFIEDBY = "lastModifiedBy"
    LASTMODIFIEDBYDESC = "lastModifiedBy desc"
    LASTMODIFIEDDATETIME = "lastModifiedDateTime"
    LASTMODIFIEDDATETIMEDESC = "lastModifiedDateTime desc"
    SOURCE = "source"
    SOURCEDESC = "source desc"
    CATEGORIES = "categories"
    CATEGORIESDESC = "categories desc"
    DESCRIPTION = "description"
    DESCRIPTIONDESC = "description desc"
    DISPLAYNAME = "displayName"
    DISPLAYNAMEDESC = "displayName desc"
    WEBURL = "webUrl"
    WEBURLDESC = "webUrl desc"

class Enum78(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ALLOWEDAUDIENCES = "allowedAudiences"
    CREATEDBY = "createdBy"
    CREATEDDATETIME = "createdDateTime"
    INFERENCE = "inference"
    LASTMODIFIEDBY = "lastModifiedBy"
    LASTMODIFIEDDATETIME = "lastModifiedDateTime"
    SOURCE = "source"
    CATEGORIES = "categories"
    DESCRIPTION = "description"
    DISPLAYNAME = "displayName"
    WEBURL = "webUrl"

class Enum79(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ALLOWEDAUDIENCES = "allowedAudiences"
    CREATEDBY = "createdBy"
    CREATEDDATETIME = "createdDateTime"
    INFERENCE = "inference"
    LASTMODIFIEDBY = "lastModifiedBy"
    LASTMODIFIEDDATETIME = "lastModifiedDateTime"
    SOURCE = "source"
    CATEGORIES = "categories"
    DESCRIPTION = "description"
    DISPLAYNAME = "displayName"
    WEBURL = "webUrl"

class Get1itemsitem(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    SETTINGS = "settings"
    ACTIVITYSTATISTICS = "activityStatistics"

class Get2itemsitem(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    ACTIVITYSTATISTICS = "activityStatistics"

class Get6itemsitem(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    IDDESC = "id desc"
    ACTIVITY = "activity"
    ACTIVITYDESC = "activity desc"
    DURATION = "duration"
    DURATIONDESC = "duration desc"
    ENDDATE = "endDate"
    ENDDATEDESC = "endDate desc"
    STARTDATE = "startDate"
    STARTDATEDESC = "startDate desc"
    TIMEZONEUSED = "timeZoneUsed"
    TIMEZONEUSEDDESC = "timeZoneUsed desc"

class Get7itemsitem(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ACTIVITY = "activity"
    DURATION = "duration"
    ENDDATE = "endDate"
    STARTDATE = "startDate"
    TIMEZONEUSED = "timeZoneUsed"

class Microsoftgraphallowedaudiences(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ME = "me"
    FAMILY = "family"
    CONTACTS = "contacts"
    GROUPMEMBERS = "groupMembers"
    ORGANIZATION = "organization"
    FEDERATEDORGANIZATIONS = "federatedOrganizations"
    EVERYONE = "everyone"
    UNKNOWNFUTUREVALUE = "unknownFutureValue"

class Microsoftgraphanalyticsactivitytype(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    EMAIL = "Email"
    MEETING = "Meeting"
    FOCUS = "Focus"
    CHAT = "Chat"
    CALL = "Call"

class Microsoftgraphanniversarytype(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    BIRTHDAY = "birthday"
    WEDDING = "wedding"
    UNKNOWNFUTUREVALUE = "unknownFutureValue"

class Microsoftgraphbodytype(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    TEXT = "text"
    HTML = "html"

class Microsoftgraphemailtype(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    UNKNOWN = "unknown"
    WORK = "work"
    PERSONAL = "personal"
    MAIN = "main"
    OTHER = "other"

class Microsoftgraphlanguageproficiencylevel(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ELEMENTARY = "elementary"
    CONVERSATIONAL = "conversational"
    LIMITEDWORKING = "limitedWorking"
    PROFESSIONALWORKING = "professionalWorking"
    FULLPROFESSIONAL = "fullProfessional"
    NATIVEORBILINGUAL = "nativeOrBilingual"
    UNKNOWNFUTUREVALUE = "unknownFutureValue"

class Microsoftgraphlocationtype(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    DEFAULT = "default"
    CONFERENCEROOM = "conferenceRoom"
    HOMEADDRESS = "homeAddress"
    BUSINESSADDRESS = "businessAddress"
    GEOCOORDINATES = "geoCoordinates"
    STREETADDRESS = "streetAddress"
    HOTEL = "hotel"
    RESTAURANT = "restaurant"
    LOCALBUSINESS = "localBusiness"
    POSTALADDRESS = "postalAddress"

class Microsoftgraphlocationuniqueidtype(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    UNKNOWN = "unknown"
    LOCATIONSTORE = "locationStore"
    DIRECTORY = "directory"
    PRIVATE = "private"
    BING = "bing"

class Microsoftgraphpersonrelationship(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    MANAGER = "manager"
    COLLEAGUE = "colleague"
    DIRECTREPORT = "directReport"
    DOTLINEREPORT = "dotLineReport"
    ASSISTANT = "assistant"
    DOTLINEMANAGER = "dotLineManager"
    ALTERNATECONTACT = "alternateContact"
    FRIEND = "friend"
    SPOUSE = "spouse"
    SIBLING = "sibling"
    CHILD = "child"
    PARENT = "parent"
    SPONSOR = "sponsor"
    EMERGENCYCONTACT = "emergencyContact"
    OTHER = "other"
    UNKNOWNFUTUREVALUE = "unknownFutureValue"

class Microsoftgraphphonetype(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    HOME = "home"
    BUSINESS = "business"
    MOBILE = "mobile"
    OTHER = "other"
    ASSISTANT = "assistant"
    HOMEFAX = "homeFax"
    BUSINESSFAX = "businessFax"
    OTHERFAX = "otherFax"
    PAGER = "pager"
    RADIO = "radio"

class Microsoftgraphphysicaladdresstype(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    UNKNOWN = "unknown"
    HOME = "home"
    BUSINESS = "business"
    OTHER = "other"

class Microsoftgraphskillproficiencylevel(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ELEMENTARY = "elementary"
    LIMITEDWORKING = "limitedWorking"
    GENERALPROFESSIONAL = "generalProfessional"
    ADVANCEDPROFESSIONAL = "advancedProfessional"
    EXPERT = "expert"
    UNKNOWNFUTUREVALUE = "unknownFutureValue"

class Microsoftgraphwebsitetype(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    OTHER = "other"
    HOME = "home"
    WORK = "work"
    BLOG = "blog"
    PROFILE = "profile"
