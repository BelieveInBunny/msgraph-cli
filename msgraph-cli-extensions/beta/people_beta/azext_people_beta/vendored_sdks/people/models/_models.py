# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from azure.core.exceptions import HttpResponseError
import msrest.serialization


class CollectionOfActivityStatistics(msrest.serialization.Model):
    """Collection of activityStatistics.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~people.models.MicrosoftGraphActivityStatistics]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphActivityStatistics]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfActivityStatistics, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfEducationalActivity(msrest.serialization.Model):
    """Collection of educationalActivity.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~people.models.MicrosoftGraphEducationalActivity]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphEducationalActivity]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfEducationalActivity, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfItemAddress(msrest.serialization.Model):
    """Collection of itemAddress.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~people.models.MicrosoftGraphItemAddress]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphItemAddress]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfItemAddress, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfItemEmail(msrest.serialization.Model):
    """Collection of itemEmail.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~people.models.MicrosoftGraphItemEmail]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphItemEmail]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfItemEmail, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfItemPatent(msrest.serialization.Model):
    """Collection of itemPatent.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~people.models.MicrosoftGraphItemPatent]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphItemPatent]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfItemPatent, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfItemPhone(msrest.serialization.Model):
    """Collection of itemPhone.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~people.models.MicrosoftGraphItemPhone]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphItemPhone]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfItemPhone, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfItemPublication(msrest.serialization.Model):
    """Collection of itemPublication.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~people.models.MicrosoftGraphItemPublication]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphItemPublication]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfItemPublication, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfLanguageProficiency(msrest.serialization.Model):
    """Collection of languageProficiency.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~people.models.MicrosoftGraphLanguageProficiency]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphLanguageProficiency]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfLanguageProficiency, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfPerson(msrest.serialization.Model):
    """Collection of person.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~people.models.MicrosoftGraphPerson]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphPerson]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfPerson, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfPersonAnniversary(msrest.serialization.Model):
    """Collection of personAnniversary.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~people.models.MicrosoftGraphPersonAnniversary]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphPersonAnniversary]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfPersonAnniversary, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfPersonAnnotation(msrest.serialization.Model):
    """Collection of personAnnotation.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~people.models.MicrosoftGraphPersonAnnotation]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphPersonAnnotation]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfPersonAnnotation, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfPersonAward(msrest.serialization.Model):
    """Collection of personAward.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~people.models.MicrosoftGraphPersonAward]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphPersonAward]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfPersonAward, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfPersonCertification(msrest.serialization.Model):
    """Collection of personCertification.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~people.models.MicrosoftGraphPersonCertification]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphPersonCertification]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfPersonCertification, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfPersonInterest(msrest.serialization.Model):
    """Collection of personInterest.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~people.models.MicrosoftGraphPersonInterest]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphPersonInterest]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfPersonInterest, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfPersonName(msrest.serialization.Model):
    """Collection of personName.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~people.models.MicrosoftGraphPersonName]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphPersonName]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfPersonName, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfPersonWebsite(msrest.serialization.Model):
    """Collection of personWebsite.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~people.models.MicrosoftGraphPersonWebsite]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphPersonWebsite]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfPersonWebsite, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfProjectParticipation(msrest.serialization.Model):
    """Collection of projectParticipation.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~people.models.MicrosoftGraphProjectParticipation]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphProjectParticipation]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfProjectParticipation, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfSkillProficiency(msrest.serialization.Model):
    """Collection of skillProficiency.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~people.models.MicrosoftGraphSkillProficiency]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphSkillProficiency]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfSkillProficiency, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfUserAccountInformation(msrest.serialization.Model):
    """Collection of userAccountInformation.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~people.models.MicrosoftGraphUserAccountInformation]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphUserAccountInformation]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfUserAccountInformation, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfWebAccount(msrest.serialization.Model):
    """Collection of webAccount.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~people.models.MicrosoftGraphWebAccount]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphWebAccount]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfWebAccount, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class CollectionOfWorkPosition(msrest.serialization.Model):
    """Collection of workPosition.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param value:
    :type value: list[~people.models.MicrosoftGraphWorkPosition]
    :param odata_next_link:
    :type odata_next_link: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'value': {'key': 'value', 'type': '[MicrosoftGraphWorkPosition]'},
        'odata_next_link': {'key': '@odata\\.nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(CollectionOfWorkPosition, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.value = kwargs.get('value', None)
        self.odata_next_link = kwargs.get('odata_next_link', None)


class MicrosoftGraphEntity(msrest.serialization.Model):
    """entity.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param id: Read-only.
    :type id: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'id': {'key': 'id', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphEntity, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.id = kwargs.get('id', None)


class MicrosoftGraphActivityStatistics(MicrosoftGraphEntity):
    """activityStatistics.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param activity:  Possible values include: "Email", "Meeting", "Focus", "Chat", "Call".
    :type activity: str or ~people.models.MicrosoftGraphAnalyticsActivityType
    :param duration:
    :type duration: ~datetime.timedelta
    :param end_date:
    :type end_date: ~datetime.date
    :param start_date:
    :type start_date: ~datetime.date
    :param time_zone_used:
    :type time_zone_used: str
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'activity': {'key': 'activity', 'type': 'str'},
        'duration': {'key': 'duration', 'type': 'duration'},
        'end_date': {'key': 'endDate', 'type': 'date'},
        'start_date': {'key': 'startDate', 'type': 'date'},
        'time_zone_used': {'key': 'timeZoneUsed', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphActivityStatistics, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.activity = kwargs.get('activity', None)
        self.duration = kwargs.get('duration', None)
        self.end_date = kwargs.get('end_date', None)
        self.start_date = kwargs.get('start_date', None)
        self.time_zone_used = kwargs.get('time_zone_used', None)


class MicrosoftGraphCompanyDetail(msrest.serialization.Model):
    """companyDetail.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param address: physicalAddress.
    :type address: ~people.models.MicrosoftGraphPhysicalAddress
    :param department:
    :type department: str
    :param display_name:
    :type display_name: str
    :param office_location:
    :type office_location: str
    :param pronunciation:
    :type pronunciation: str
    :param web_url:
    :type web_url: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'address': {'key': 'address', 'type': 'MicrosoftGraphPhysicalAddress'},
        'department': {'key': 'department', 'type': 'str'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'office_location': {'key': 'officeLocation', 'type': 'str'},
        'pronunciation': {'key': 'pronunciation', 'type': 'str'},
        'web_url': {'key': 'webUrl', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphCompanyDetail, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.address = kwargs.get('address', None)
        self.department = kwargs.get('department', None)
        self.display_name = kwargs.get('display_name', None)
        self.office_location = kwargs.get('office_location', None)
        self.pronunciation = kwargs.get('pronunciation', None)
        self.web_url = kwargs.get('web_url', None)


class MicrosoftGraphItemFacet(MicrosoftGraphEntity):
    """itemFacet.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param allowed_audiences:  Possible values include: "me", "family", "contacts", "groupMembers",
     "organization", "federatedOrganizations", "everyone", "unknownFutureValue".
    :type allowed_audiences: str or ~people.models.MicrosoftGraphAllowedAudiences
    :param created_date_time:
    :type created_date_time: ~datetime.datetime
    :param inference: inferenceData.
    :type inference: ~people.models.MicrosoftGraphInferenceData
    :param last_modified_date_time:
    :type last_modified_date_time: ~datetime.datetime
    :param source: personDataSources.
    :type source: ~people.models.MicrosoftGraphPersonDataSources
    :param application_last_modified_by_application: identity.
    :type application_last_modified_by_application: ~people.models.MicrosoftGraphIdentity
    :param device_last_modified_by_device: identity.
    :type device_last_modified_by_device: ~people.models.MicrosoftGraphIdentity
    :param user_last_modified_by_user: identity.
    :type user_last_modified_by_user: ~people.models.MicrosoftGraphIdentity
    :param application_created_by_application: identity.
    :type application_created_by_application: ~people.models.MicrosoftGraphIdentity
    :param device_created_by_device: identity.
    :type device_created_by_device: ~people.models.MicrosoftGraphIdentity
    :param user_created_by_user: identity.
    :type user_created_by_user: ~people.models.MicrosoftGraphIdentity
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'allowed_audiences': {'key': 'allowedAudiences', 'type': 'str'},
        'created_date_time': {'key': 'createdDateTime', 'type': 'iso-8601'},
        'inference': {'key': 'inference', 'type': 'MicrosoftGraphInferenceData'},
        'last_modified_date_time': {'key': 'lastModifiedDateTime', 'type': 'iso-8601'},
        'source': {'key': 'source', 'type': 'MicrosoftGraphPersonDataSources'},
        'application_last_modified_by_application': {'key': 'lastModifiedBy.application', 'type': 'MicrosoftGraphIdentity'},
        'device_last_modified_by_device': {'key': 'lastModifiedBy.device', 'type': 'MicrosoftGraphIdentity'},
        'user_last_modified_by_user': {'key': 'lastModifiedBy.user', 'type': 'MicrosoftGraphIdentity'},
        'application_created_by_application': {'key': 'createdBy.application', 'type': 'MicrosoftGraphIdentity'},
        'device_created_by_device': {'key': 'createdBy.device', 'type': 'MicrosoftGraphIdentity'},
        'user_created_by_user': {'key': 'createdBy.user', 'type': 'MicrosoftGraphIdentity'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphItemFacet, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.allowed_audiences = kwargs.get('allowed_audiences', None)
        self.created_date_time = kwargs.get('created_date_time', None)
        self.inference = kwargs.get('inference', None)
        self.last_modified_date_time = kwargs.get('last_modified_date_time', None)
        self.source = kwargs.get('source', None)
        self.application_last_modified_by_application = kwargs.get('application_last_modified_by_application', None)
        self.device_last_modified_by_device = kwargs.get('device_last_modified_by_device', None)
        self.user_last_modified_by_user = kwargs.get('user_last_modified_by_user', None)
        self.application_created_by_application = kwargs.get('application_created_by_application', None)
        self.device_created_by_device = kwargs.get('device_created_by_device', None)
        self.user_created_by_user = kwargs.get('user_created_by_user', None)


class MicrosoftGraphEducationalActivity(MicrosoftGraphItemFacet):
    """educationalActivity.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param id: Read-only.
    :type id: str
    :param allowed_audiences:  Possible values include: "me", "family", "contacts", "groupMembers",
     "organization", "federatedOrganizations", "everyone", "unknownFutureValue".
    :type allowed_audiences: str or ~people.models.MicrosoftGraphAllowedAudiences
    :param created_date_time:
    :type created_date_time: ~datetime.datetime
    :param inference: inferenceData.
    :type inference: ~people.models.MicrosoftGraphInferenceData
    :param last_modified_date_time:
    :type last_modified_date_time: ~datetime.datetime
    :param source: personDataSources.
    :type source: ~people.models.MicrosoftGraphPersonDataSources
    :param application_last_modified_by_application: identity.
    :type application_last_modified_by_application: ~people.models.MicrosoftGraphIdentity
    :param device_last_modified_by_device: identity.
    :type device_last_modified_by_device: ~people.models.MicrosoftGraphIdentity
    :param user_last_modified_by_user: identity.
    :type user_last_modified_by_user: ~people.models.MicrosoftGraphIdentity
    :param application_created_by_application: identity.
    :type application_created_by_application: ~people.models.MicrosoftGraphIdentity
    :param device_created_by_device: identity.
    :type device_created_by_device: ~people.models.MicrosoftGraphIdentity
    :param user_created_by_user: identity.
    :type user_created_by_user: ~people.models.MicrosoftGraphIdentity
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param completion_month_year:
    :type completion_month_year: ~datetime.date
    :param end_month_year:
    :type end_month_year: ~datetime.date
    :param program: educationalActivityDetail.
    :type program: ~people.models.MicrosoftGraphEducationalActivityDetail
    :param start_month_year:
    :type start_month_year: ~datetime.date
    :param description:
    :type description: str
    :param display_name:
    :type display_name: str
    :param location: physicalAddress.
    :type location: ~people.models.MicrosoftGraphPhysicalAddress
    :param web_url:
    :type web_url: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'id': {'key': 'id', 'type': 'str'},
        'allowed_audiences': {'key': 'allowedAudiences', 'type': 'str'},
        'created_date_time': {'key': 'createdDateTime', 'type': 'iso-8601'},
        'inference': {'key': 'inference', 'type': 'MicrosoftGraphInferenceData'},
        'last_modified_date_time': {'key': 'lastModifiedDateTime', 'type': 'iso-8601'},
        'source': {'key': 'source', 'type': 'MicrosoftGraphPersonDataSources'},
        'application_last_modified_by_application': {'key': 'lastModifiedBy.application', 'type': 'MicrosoftGraphIdentity'},
        'device_last_modified_by_device': {'key': 'lastModifiedBy.device', 'type': 'MicrosoftGraphIdentity'},
        'user_last_modified_by_user': {'key': 'lastModifiedBy.user', 'type': 'MicrosoftGraphIdentity'},
        'application_created_by_application': {'key': 'createdBy.application', 'type': 'MicrosoftGraphIdentity'},
        'device_created_by_device': {'key': 'createdBy.device', 'type': 'MicrosoftGraphIdentity'},
        'user_created_by_user': {'key': 'createdBy.user', 'type': 'MicrosoftGraphIdentity'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'completion_month_year': {'key': 'completionMonthYear', 'type': 'date'},
        'end_month_year': {'key': 'endMonthYear', 'type': 'date'},
        'program': {'key': 'program', 'type': 'MicrosoftGraphEducationalActivityDetail'},
        'start_month_year': {'key': 'startMonthYear', 'type': 'date'},
        'description': {'key': 'institution.description', 'type': 'str'},
        'display_name': {'key': 'institution.displayName', 'type': 'str'},
        'location': {'key': 'institution.location', 'type': 'MicrosoftGraphPhysicalAddress'},
        'web_url': {'key': 'institution.webUrl', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphEducationalActivity, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.completion_month_year = kwargs.get('completion_month_year', None)
        self.end_month_year = kwargs.get('end_month_year', None)
        self.program = kwargs.get('program', None)
        self.start_month_year = kwargs.get('start_month_year', None)
        self.description = kwargs.get('description', None)
        self.display_name = kwargs.get('display_name', None)
        self.location = kwargs.get('location', None)
        self.web_url = kwargs.get('web_url', None)


class MicrosoftGraphEducationalActivityDetail(msrest.serialization.Model):
    """educationalActivityDetail.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param abbreviation:
    :type abbreviation: str
    :param activities:
    :type activities: list[str]
    :param awards:
    :type awards: list[str]
    :param description:
    :type description: str
    :param display_name:
    :type display_name: str
    :param fields_of_study:
    :type fields_of_study: list[str]
    :param grade:
    :type grade: str
    :param notes:
    :type notes: str
    :param web_url:
    :type web_url: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'abbreviation': {'key': 'abbreviation', 'type': 'str'},
        'activities': {'key': 'activities', 'type': '[str]'},
        'awards': {'key': 'awards', 'type': '[str]'},
        'description': {'key': 'description', 'type': 'str'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'fields_of_study': {'key': 'fieldsOfStudy', 'type': '[str]'},
        'grade': {'key': 'grade', 'type': 'str'},
        'notes': {'key': 'notes', 'type': 'str'},
        'web_url': {'key': 'webUrl', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphEducationalActivityDetail, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.abbreviation = kwargs.get('abbreviation', None)
        self.activities = kwargs.get('activities', None)
        self.awards = kwargs.get('awards', None)
        self.description = kwargs.get('description', None)
        self.display_name = kwargs.get('display_name', None)
        self.fields_of_study = kwargs.get('fields_of_study', None)
        self.grade = kwargs.get('grade', None)
        self.notes = kwargs.get('notes', None)
        self.web_url = kwargs.get('web_url', None)


class MicrosoftGraphGeoCoordinates(msrest.serialization.Model):
    """geoCoordinates.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param altitude: Optional. The altitude (height), in feet,  above sea level for the item. Read-
     only.
    :type altitude: float
    :param latitude: Optional. The latitude, in decimal, for the item. Read-only.
    :type latitude: float
    :param longitude: Optional. The longitude, in decimal, for the item. Read-only.
    :type longitude: float
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'altitude': {'key': 'altitude', 'type': 'float'},
        'latitude': {'key': 'latitude', 'type': 'float'},
        'longitude': {'key': 'longitude', 'type': 'float'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphGeoCoordinates, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.altitude = kwargs.get('altitude', None)
        self.latitude = kwargs.get('latitude', None)
        self.longitude = kwargs.get('longitude', None)


class MicrosoftGraphIdentity(msrest.serialization.Model):
    """identity.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param display_name: The identity's display name. Note that this may not always be available or
     up to date. For example, if a user changes their display name, the API may show the new value
     in a future response, but the items associated with the user won't show up as having changed
     when using delta.
    :type display_name: str
    :param id: Unique identifier for the identity.
    :type id: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'id': {'key': 'id', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphIdentity, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.display_name = kwargs.get('display_name', None)
        self.id = kwargs.get('id', None)


class MicrosoftGraphIdentitySet(msrest.serialization.Model):
    """identitySet.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param application: identity.
    :type application: ~people.models.MicrosoftGraphIdentity
    :param device: identity.
    :type device: ~people.models.MicrosoftGraphIdentity
    :param user: identity.
    :type user: ~people.models.MicrosoftGraphIdentity
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'application': {'key': 'application', 'type': 'MicrosoftGraphIdentity'},
        'device': {'key': 'device', 'type': 'MicrosoftGraphIdentity'},
        'user': {'key': 'user', 'type': 'MicrosoftGraphIdentity'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphIdentitySet, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.application = kwargs.get('application', None)
        self.device = kwargs.get('device', None)
        self.user = kwargs.get('user', None)


class MicrosoftGraphInferenceData(msrest.serialization.Model):
    """inferenceData.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param confidence_score:
    :type confidence_score: float
    :param user_has_verified_accuracy:
    :type user_has_verified_accuracy: bool
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'confidence_score': {'key': 'confidenceScore', 'type': 'float'},
        'user_has_verified_accuracy': {'key': 'userHasVerifiedAccuracy', 'type': 'bool'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphInferenceData, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.confidence_score = kwargs.get('confidence_score', None)
        self.user_has_verified_accuracy = kwargs.get('user_has_verified_accuracy', None)


class MicrosoftGraphInstitutionData(msrest.serialization.Model):
    """institutionData.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param description:
    :type description: str
    :param display_name:
    :type display_name: str
    :param location: physicalAddress.
    :type location: ~people.models.MicrosoftGraphPhysicalAddress
    :param web_url:
    :type web_url: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'description': {'key': 'description', 'type': 'str'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'location': {'key': 'location', 'type': 'MicrosoftGraphPhysicalAddress'},
        'web_url': {'key': 'webUrl', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphInstitutionData, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.description = kwargs.get('description', None)
        self.display_name = kwargs.get('display_name', None)
        self.location = kwargs.get('location', None)
        self.web_url = kwargs.get('web_url', None)


class MicrosoftGraphItemAddress(MicrosoftGraphItemFacet):
    """itemAddress.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param id: Read-only.
    :type id: str
    :param allowed_audiences:  Possible values include: "me", "family", "contacts", "groupMembers",
     "organization", "federatedOrganizations", "everyone", "unknownFutureValue".
    :type allowed_audiences: str or ~people.models.MicrosoftGraphAllowedAudiences
    :param created_date_time:
    :type created_date_time: ~datetime.datetime
    :param inference: inferenceData.
    :type inference: ~people.models.MicrosoftGraphInferenceData
    :param last_modified_date_time:
    :type last_modified_date_time: ~datetime.datetime
    :param source: personDataSources.
    :type source: ~people.models.MicrosoftGraphPersonDataSources
    :param application_last_modified_by_application: identity.
    :type application_last_modified_by_application: ~people.models.MicrosoftGraphIdentity
    :param device_last_modified_by_device: identity.
    :type device_last_modified_by_device: ~people.models.MicrosoftGraphIdentity
    :param user_last_modified_by_user: identity.
    :type user_last_modified_by_user: ~people.models.MicrosoftGraphIdentity
    :param application_created_by_application: identity.
    :type application_created_by_application: ~people.models.MicrosoftGraphIdentity
    :param device_created_by_device: identity.
    :type device_created_by_device: ~people.models.MicrosoftGraphIdentity
    :param user_created_by_user: identity.
    :type user_created_by_user: ~people.models.MicrosoftGraphIdentity
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param detail: physicalAddress.
    :type detail: ~people.models.MicrosoftGraphPhysicalAddress
    :param display_name:
    :type display_name: str
    :param geo_coordinates: geoCoordinates.
    :type geo_coordinates: ~people.models.MicrosoftGraphGeoCoordinates
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'id': {'key': 'id', 'type': 'str'},
        'allowed_audiences': {'key': 'allowedAudiences', 'type': 'str'},
        'created_date_time': {'key': 'createdDateTime', 'type': 'iso-8601'},
        'inference': {'key': 'inference', 'type': 'MicrosoftGraphInferenceData'},
        'last_modified_date_time': {'key': 'lastModifiedDateTime', 'type': 'iso-8601'},
        'source': {'key': 'source', 'type': 'MicrosoftGraphPersonDataSources'},
        'application_last_modified_by_application': {'key': 'lastModifiedBy.application', 'type': 'MicrosoftGraphIdentity'},
        'device_last_modified_by_device': {'key': 'lastModifiedBy.device', 'type': 'MicrosoftGraphIdentity'},
        'user_last_modified_by_user': {'key': 'lastModifiedBy.user', 'type': 'MicrosoftGraphIdentity'},
        'application_created_by_application': {'key': 'createdBy.application', 'type': 'MicrosoftGraphIdentity'},
        'device_created_by_device': {'key': 'createdBy.device', 'type': 'MicrosoftGraphIdentity'},
        'user_created_by_user': {'key': 'createdBy.user', 'type': 'MicrosoftGraphIdentity'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'detail': {'key': 'detail', 'type': 'MicrosoftGraphPhysicalAddress'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'geo_coordinates': {'key': 'geoCoordinates', 'type': 'MicrosoftGraphGeoCoordinates'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphItemAddress, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.detail = kwargs.get('detail', None)
        self.display_name = kwargs.get('display_name', None)
        self.geo_coordinates = kwargs.get('geo_coordinates', None)


class MicrosoftGraphItemBody(msrest.serialization.Model):
    """itemBody.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param content: The content of the item.
    :type content: str
    :param content_type:  Possible values include: "text", "html".
    :type content_type: str or ~people.models.MicrosoftGraphBodyType
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'content': {'key': 'content', 'type': 'str'},
        'content_type': {'key': 'contentType', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphItemBody, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.content = kwargs.get('content', None)
        self.content_type = kwargs.get('content_type', None)


class MicrosoftGraphItemEmail(MicrosoftGraphItemFacet):
    """itemEmail.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param id: Read-only.
    :type id: str
    :param allowed_audiences:  Possible values include: "me", "family", "contacts", "groupMembers",
     "organization", "federatedOrganizations", "everyone", "unknownFutureValue".
    :type allowed_audiences: str or ~people.models.MicrosoftGraphAllowedAudiences
    :param created_date_time:
    :type created_date_time: ~datetime.datetime
    :param inference: inferenceData.
    :type inference: ~people.models.MicrosoftGraphInferenceData
    :param last_modified_date_time:
    :type last_modified_date_time: ~datetime.datetime
    :param source: personDataSources.
    :type source: ~people.models.MicrosoftGraphPersonDataSources
    :param application_last_modified_by_application: identity.
    :type application_last_modified_by_application: ~people.models.MicrosoftGraphIdentity
    :param device_last_modified_by_device: identity.
    :type device_last_modified_by_device: ~people.models.MicrosoftGraphIdentity
    :param user_last_modified_by_user: identity.
    :type user_last_modified_by_user: ~people.models.MicrosoftGraphIdentity
    :param application_created_by_application: identity.
    :type application_created_by_application: ~people.models.MicrosoftGraphIdentity
    :param device_created_by_device: identity.
    :type device_created_by_device: ~people.models.MicrosoftGraphIdentity
    :param user_created_by_user: identity.
    :type user_created_by_user: ~people.models.MicrosoftGraphIdentity
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param address:
    :type address: str
    :param display_name:
    :type display_name: str
    :param type:  Possible values include: "unknown", "work", "personal", "main", "other".
    :type type: str or ~people.models.MicrosoftGraphEmailType
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'id': {'key': 'id', 'type': 'str'},
        'allowed_audiences': {'key': 'allowedAudiences', 'type': 'str'},
        'created_date_time': {'key': 'createdDateTime', 'type': 'iso-8601'},
        'inference': {'key': 'inference', 'type': 'MicrosoftGraphInferenceData'},
        'last_modified_date_time': {'key': 'lastModifiedDateTime', 'type': 'iso-8601'},
        'source': {'key': 'source', 'type': 'MicrosoftGraphPersonDataSources'},
        'application_last_modified_by_application': {'key': 'lastModifiedBy.application', 'type': 'MicrosoftGraphIdentity'},
        'device_last_modified_by_device': {'key': 'lastModifiedBy.device', 'type': 'MicrosoftGraphIdentity'},
        'user_last_modified_by_user': {'key': 'lastModifiedBy.user', 'type': 'MicrosoftGraphIdentity'},
        'application_created_by_application': {'key': 'createdBy.application', 'type': 'MicrosoftGraphIdentity'},
        'device_created_by_device': {'key': 'createdBy.device', 'type': 'MicrosoftGraphIdentity'},
        'user_created_by_user': {'key': 'createdBy.user', 'type': 'MicrosoftGraphIdentity'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'address': {'key': 'address', 'type': 'str'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphItemEmail, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.address = kwargs.get('address', None)
        self.display_name = kwargs.get('display_name', None)
        self.type = kwargs.get('type', None)


class MicrosoftGraphItemPatent(MicrosoftGraphItemFacet):
    """itemPatent.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param id: Read-only.
    :type id: str
    :param allowed_audiences:  Possible values include: "me", "family", "contacts", "groupMembers",
     "organization", "federatedOrganizations", "everyone", "unknownFutureValue".
    :type allowed_audiences: str or ~people.models.MicrosoftGraphAllowedAudiences
    :param created_date_time:
    :type created_date_time: ~datetime.datetime
    :param inference: inferenceData.
    :type inference: ~people.models.MicrosoftGraphInferenceData
    :param last_modified_date_time:
    :type last_modified_date_time: ~datetime.datetime
    :param source: personDataSources.
    :type source: ~people.models.MicrosoftGraphPersonDataSources
    :param application_last_modified_by_application: identity.
    :type application_last_modified_by_application: ~people.models.MicrosoftGraphIdentity
    :param device_last_modified_by_device: identity.
    :type device_last_modified_by_device: ~people.models.MicrosoftGraphIdentity
    :param user_last_modified_by_user: identity.
    :type user_last_modified_by_user: ~people.models.MicrosoftGraphIdentity
    :param application_created_by_application: identity.
    :type application_created_by_application: ~people.models.MicrosoftGraphIdentity
    :param device_created_by_device: identity.
    :type device_created_by_device: ~people.models.MicrosoftGraphIdentity
    :param user_created_by_user: identity.
    :type user_created_by_user: ~people.models.MicrosoftGraphIdentity
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param description:
    :type description: str
    :param display_name:
    :type display_name: str
    :param is_pending:
    :type is_pending: bool
    :param issued_date:
    :type issued_date: ~datetime.date
    :param issuing_authority:
    :type issuing_authority: str
    :param number:
    :type number: str
    :param web_url:
    :type web_url: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'id': {'key': 'id', 'type': 'str'},
        'allowed_audiences': {'key': 'allowedAudiences', 'type': 'str'},
        'created_date_time': {'key': 'createdDateTime', 'type': 'iso-8601'},
        'inference': {'key': 'inference', 'type': 'MicrosoftGraphInferenceData'},
        'last_modified_date_time': {'key': 'lastModifiedDateTime', 'type': 'iso-8601'},
        'source': {'key': 'source', 'type': 'MicrosoftGraphPersonDataSources'},
        'application_last_modified_by_application': {'key': 'lastModifiedBy.application', 'type': 'MicrosoftGraphIdentity'},
        'device_last_modified_by_device': {'key': 'lastModifiedBy.device', 'type': 'MicrosoftGraphIdentity'},
        'user_last_modified_by_user': {'key': 'lastModifiedBy.user', 'type': 'MicrosoftGraphIdentity'},
        'application_created_by_application': {'key': 'createdBy.application', 'type': 'MicrosoftGraphIdentity'},
        'device_created_by_device': {'key': 'createdBy.device', 'type': 'MicrosoftGraphIdentity'},
        'user_created_by_user': {'key': 'createdBy.user', 'type': 'MicrosoftGraphIdentity'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'description': {'key': 'description', 'type': 'str'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'is_pending': {'key': 'isPending', 'type': 'bool'},
        'issued_date': {'key': 'issuedDate', 'type': 'date'},
        'issuing_authority': {'key': 'issuingAuthority', 'type': 'str'},
        'number': {'key': 'number', 'type': 'str'},
        'web_url': {'key': 'webUrl', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphItemPatent, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.description = kwargs.get('description', None)
        self.display_name = kwargs.get('display_name', None)
        self.is_pending = kwargs.get('is_pending', None)
        self.issued_date = kwargs.get('issued_date', None)
        self.issuing_authority = kwargs.get('issuing_authority', None)
        self.number = kwargs.get('number', None)
        self.web_url = kwargs.get('web_url', None)


class MicrosoftGraphItemPhone(MicrosoftGraphItemFacet):
    """itemPhone.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param id: Read-only.
    :type id: str
    :param allowed_audiences:  Possible values include: "me", "family", "contacts", "groupMembers",
     "organization", "federatedOrganizations", "everyone", "unknownFutureValue".
    :type allowed_audiences: str or ~people.models.MicrosoftGraphAllowedAudiences
    :param created_date_time:
    :type created_date_time: ~datetime.datetime
    :param inference: inferenceData.
    :type inference: ~people.models.MicrosoftGraphInferenceData
    :param last_modified_date_time:
    :type last_modified_date_time: ~datetime.datetime
    :param source: personDataSources.
    :type source: ~people.models.MicrosoftGraphPersonDataSources
    :param application_last_modified_by_application: identity.
    :type application_last_modified_by_application: ~people.models.MicrosoftGraphIdentity
    :param device_last_modified_by_device: identity.
    :type device_last_modified_by_device: ~people.models.MicrosoftGraphIdentity
    :param user_last_modified_by_user: identity.
    :type user_last_modified_by_user: ~people.models.MicrosoftGraphIdentity
    :param application_created_by_application: identity.
    :type application_created_by_application: ~people.models.MicrosoftGraphIdentity
    :param device_created_by_device: identity.
    :type device_created_by_device: ~people.models.MicrosoftGraphIdentity
    :param user_created_by_user: identity.
    :type user_created_by_user: ~people.models.MicrosoftGraphIdentity
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param display_name:
    :type display_name: str
    :param number:
    :type number: str
    :param type:  Possible values include: "home", "business", "mobile", "other", "assistant",
     "homeFax", "businessFax", "otherFax", "pager", "radio".
    :type type: str or ~people.models.MicrosoftGraphPhoneType
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'id': {'key': 'id', 'type': 'str'},
        'allowed_audiences': {'key': 'allowedAudiences', 'type': 'str'},
        'created_date_time': {'key': 'createdDateTime', 'type': 'iso-8601'},
        'inference': {'key': 'inference', 'type': 'MicrosoftGraphInferenceData'},
        'last_modified_date_time': {'key': 'lastModifiedDateTime', 'type': 'iso-8601'},
        'source': {'key': 'source', 'type': 'MicrosoftGraphPersonDataSources'},
        'application_last_modified_by_application': {'key': 'lastModifiedBy.application', 'type': 'MicrosoftGraphIdentity'},
        'device_last_modified_by_device': {'key': 'lastModifiedBy.device', 'type': 'MicrosoftGraphIdentity'},
        'user_last_modified_by_user': {'key': 'lastModifiedBy.user', 'type': 'MicrosoftGraphIdentity'},
        'application_created_by_application': {'key': 'createdBy.application', 'type': 'MicrosoftGraphIdentity'},
        'device_created_by_device': {'key': 'createdBy.device', 'type': 'MicrosoftGraphIdentity'},
        'user_created_by_user': {'key': 'createdBy.user', 'type': 'MicrosoftGraphIdentity'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'number': {'key': 'number', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphItemPhone, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.display_name = kwargs.get('display_name', None)
        self.number = kwargs.get('number', None)
        self.type = kwargs.get('type', None)


class MicrosoftGraphItemPublication(MicrosoftGraphItemFacet):
    """itemPublication.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param id: Read-only.
    :type id: str
    :param allowed_audiences:  Possible values include: "me", "family", "contacts", "groupMembers",
     "organization", "federatedOrganizations", "everyone", "unknownFutureValue".
    :type allowed_audiences: str or ~people.models.MicrosoftGraphAllowedAudiences
    :param created_date_time:
    :type created_date_time: ~datetime.datetime
    :param inference: inferenceData.
    :type inference: ~people.models.MicrosoftGraphInferenceData
    :param last_modified_date_time:
    :type last_modified_date_time: ~datetime.datetime
    :param source: personDataSources.
    :type source: ~people.models.MicrosoftGraphPersonDataSources
    :param application_last_modified_by_application: identity.
    :type application_last_modified_by_application: ~people.models.MicrosoftGraphIdentity
    :param device_last_modified_by_device: identity.
    :type device_last_modified_by_device: ~people.models.MicrosoftGraphIdentity
    :param user_last_modified_by_user: identity.
    :type user_last_modified_by_user: ~people.models.MicrosoftGraphIdentity
    :param application_created_by_application: identity.
    :type application_created_by_application: ~people.models.MicrosoftGraphIdentity
    :param device_created_by_device: identity.
    :type device_created_by_device: ~people.models.MicrosoftGraphIdentity
    :param user_created_by_user: identity.
    :type user_created_by_user: ~people.models.MicrosoftGraphIdentity
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param description:
    :type description: str
    :param display_name:
    :type display_name: str
    :param published_date:
    :type published_date: ~datetime.date
    :param publisher:
    :type publisher: str
    :param thumbnail_url:
    :type thumbnail_url: str
    :param web_url:
    :type web_url: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'id': {'key': 'id', 'type': 'str'},
        'allowed_audiences': {'key': 'allowedAudiences', 'type': 'str'},
        'created_date_time': {'key': 'createdDateTime', 'type': 'iso-8601'},
        'inference': {'key': 'inference', 'type': 'MicrosoftGraphInferenceData'},
        'last_modified_date_time': {'key': 'lastModifiedDateTime', 'type': 'iso-8601'},
        'source': {'key': 'source', 'type': 'MicrosoftGraphPersonDataSources'},
        'application_last_modified_by_application': {'key': 'lastModifiedBy.application', 'type': 'MicrosoftGraphIdentity'},
        'device_last_modified_by_device': {'key': 'lastModifiedBy.device', 'type': 'MicrosoftGraphIdentity'},
        'user_last_modified_by_user': {'key': 'lastModifiedBy.user', 'type': 'MicrosoftGraphIdentity'},
        'application_created_by_application': {'key': 'createdBy.application', 'type': 'MicrosoftGraphIdentity'},
        'device_created_by_device': {'key': 'createdBy.device', 'type': 'MicrosoftGraphIdentity'},
        'user_created_by_user': {'key': 'createdBy.user', 'type': 'MicrosoftGraphIdentity'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'description': {'key': 'description', 'type': 'str'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'published_date': {'key': 'publishedDate', 'type': 'date'},
        'publisher': {'key': 'publisher', 'type': 'str'},
        'thumbnail_url': {'key': 'thumbnailUrl', 'type': 'str'},
        'web_url': {'key': 'webUrl', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphItemPublication, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.description = kwargs.get('description', None)
        self.display_name = kwargs.get('display_name', None)
        self.published_date = kwargs.get('published_date', None)
        self.publisher = kwargs.get('publisher', None)
        self.thumbnail_url = kwargs.get('thumbnail_url', None)
        self.web_url = kwargs.get('web_url', None)


class MicrosoftGraphLanguageProficiency(MicrosoftGraphItemFacet):
    """languageProficiency.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param id: Read-only.
    :type id: str
    :param allowed_audiences:  Possible values include: "me", "family", "contacts", "groupMembers",
     "organization", "federatedOrganizations", "everyone", "unknownFutureValue".
    :type allowed_audiences: str or ~people.models.MicrosoftGraphAllowedAudiences
    :param created_date_time:
    :type created_date_time: ~datetime.datetime
    :param inference: inferenceData.
    :type inference: ~people.models.MicrosoftGraphInferenceData
    :param last_modified_date_time:
    :type last_modified_date_time: ~datetime.datetime
    :param source: personDataSources.
    :type source: ~people.models.MicrosoftGraphPersonDataSources
    :param application_last_modified_by_application: identity.
    :type application_last_modified_by_application: ~people.models.MicrosoftGraphIdentity
    :param device_last_modified_by_device: identity.
    :type device_last_modified_by_device: ~people.models.MicrosoftGraphIdentity
    :param user_last_modified_by_user: identity.
    :type user_last_modified_by_user: ~people.models.MicrosoftGraphIdentity
    :param application_created_by_application: identity.
    :type application_created_by_application: ~people.models.MicrosoftGraphIdentity
    :param device_created_by_device: identity.
    :type device_created_by_device: ~people.models.MicrosoftGraphIdentity
    :param user_created_by_user: identity.
    :type user_created_by_user: ~people.models.MicrosoftGraphIdentity
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param display_name:
    :type display_name: str
    :param proficiency:  Possible values include: "elementary", "conversational", "limitedWorking",
     "professionalWorking", "fullProfessional", "nativeOrBilingual", "unknownFutureValue".
    :type proficiency: str or ~people.models.MicrosoftGraphLanguageProficiencyLevel
    :param reading:  Possible values include: "elementary", "conversational", "limitedWorking",
     "professionalWorking", "fullProfessional", "nativeOrBilingual", "unknownFutureValue".
    :type reading: str or ~people.models.MicrosoftGraphLanguageProficiencyLevel
    :param spoken:  Possible values include: "elementary", "conversational", "limitedWorking",
     "professionalWorking", "fullProfessional", "nativeOrBilingual", "unknownFutureValue".
    :type spoken: str or ~people.models.MicrosoftGraphLanguageProficiencyLevel
    :param tag:
    :type tag: str
    :param written:  Possible values include: "elementary", "conversational", "limitedWorking",
     "professionalWorking", "fullProfessional", "nativeOrBilingual", "unknownFutureValue".
    :type written: str or ~people.models.MicrosoftGraphLanguageProficiencyLevel
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'id': {'key': 'id', 'type': 'str'},
        'allowed_audiences': {'key': 'allowedAudiences', 'type': 'str'},
        'created_date_time': {'key': 'createdDateTime', 'type': 'iso-8601'},
        'inference': {'key': 'inference', 'type': 'MicrosoftGraphInferenceData'},
        'last_modified_date_time': {'key': 'lastModifiedDateTime', 'type': 'iso-8601'},
        'source': {'key': 'source', 'type': 'MicrosoftGraphPersonDataSources'},
        'application_last_modified_by_application': {'key': 'lastModifiedBy.application', 'type': 'MicrosoftGraphIdentity'},
        'device_last_modified_by_device': {'key': 'lastModifiedBy.device', 'type': 'MicrosoftGraphIdentity'},
        'user_last_modified_by_user': {'key': 'lastModifiedBy.user', 'type': 'MicrosoftGraphIdentity'},
        'application_created_by_application': {'key': 'createdBy.application', 'type': 'MicrosoftGraphIdentity'},
        'device_created_by_device': {'key': 'createdBy.device', 'type': 'MicrosoftGraphIdentity'},
        'user_created_by_user': {'key': 'createdBy.user', 'type': 'MicrosoftGraphIdentity'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'proficiency': {'key': 'proficiency', 'type': 'str'},
        'reading': {'key': 'reading', 'type': 'str'},
        'spoken': {'key': 'spoken', 'type': 'str'},
        'tag': {'key': 'tag', 'type': 'str'},
        'written': {'key': 'written', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphLanguageProficiency, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.display_name = kwargs.get('display_name', None)
        self.proficiency = kwargs.get('proficiency', None)
        self.reading = kwargs.get('reading', None)
        self.spoken = kwargs.get('spoken', None)
        self.tag = kwargs.get('tag', None)
        self.written = kwargs.get('written', None)


class MicrosoftGraphLocaleInfo(msrest.serialization.Model):
    """localeInfo.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param display_name: A name representing the user's locale in natural language, for example,
     'English (United States)'.
    :type display_name: str
    :param locale: A locale representation for the user, which includes the user's preferred
     language and country/region. For example, 'en-us'. The language component follows 2-letter
     codes as defined in ISO 639-1, and the country component follows 2-letter codes as defined in
     ISO 3166-1 alpha-2.
    :type locale: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'locale': {'key': 'locale', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphLocaleInfo, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.display_name = kwargs.get('display_name', None)
        self.locale = kwargs.get('locale', None)


class MicrosoftGraphLocation(msrest.serialization.Model):
    """location.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param address: physicalAddress.
    :type address: ~people.models.MicrosoftGraphPhysicalAddress
    :param coordinates: outlookGeoCoordinates.
    :type coordinates: ~people.models.MicrosoftGraphOutlookGeoCoordinates
    :param display_name: The name associated with the location.
    :type display_name: str
    :param location_email_address: Optional email address of the location.
    :type location_email_address: str
    :param location_type:  Possible values include: "default", "conferenceRoom", "homeAddress",
     "businessAddress", "geoCoordinates", "streetAddress", "hotel", "restaurant", "localBusiness",
     "postalAddress".
    :type location_type: str or ~people.models.MicrosoftGraphLocationType
    :param location_uri: Optional URI representing the location.
    :type location_uri: str
    :param unique_id: For internal use only.
    :type unique_id: str
    :param unique_id_type:  Possible values include: "unknown", "locationStore", "directory",
     "private", "bing".
    :type unique_id_type: str or ~people.models.MicrosoftGraphLocationUniqueIdType
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'address': {'key': 'address', 'type': 'MicrosoftGraphPhysicalAddress'},
        'coordinates': {'key': 'coordinates', 'type': 'MicrosoftGraphOutlookGeoCoordinates'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'location_email_address': {'key': 'locationEmailAddress', 'type': 'str'},
        'location_type': {'key': 'locationType', 'type': 'str'},
        'location_uri': {'key': 'locationUri', 'type': 'str'},
        'unique_id': {'key': 'uniqueId', 'type': 'str'},
        'unique_id_type': {'key': 'uniqueIdType', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphLocation, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.address = kwargs.get('address', None)
        self.coordinates = kwargs.get('coordinates', None)
        self.display_name = kwargs.get('display_name', None)
        self.location_email_address = kwargs.get('location_email_address', None)
        self.location_type = kwargs.get('location_type', None)
        self.location_uri = kwargs.get('location_uri', None)
        self.unique_id = kwargs.get('unique_id', None)
        self.unique_id_type = kwargs.get('unique_id_type', None)


class MicrosoftGraphOutlookGeoCoordinates(msrest.serialization.Model):
    """outlookGeoCoordinates.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param accuracy: The accuracy of the latitude and longitude. As an example, the accuracy can be
     measured in meters, such as the latitude and longitude are accurate to within 50 meters.
    :type accuracy: float
    :param altitude: The altitude of the location.
    :type altitude: float
    :param altitude_accuracy: The accuracy of the altitude.
    :type altitude_accuracy: float
    :param latitude: The latitude of the location.
    :type latitude: float
    :param longitude: The longitude of the location.
    :type longitude: float
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'accuracy': {'key': 'accuracy', 'type': 'float'},
        'altitude': {'key': 'altitude', 'type': 'float'},
        'altitude_accuracy': {'key': 'altitudeAccuracy', 'type': 'float'},
        'latitude': {'key': 'latitude', 'type': 'float'},
        'longitude': {'key': 'longitude', 'type': 'float'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphOutlookGeoCoordinates, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.accuracy = kwargs.get('accuracy', None)
        self.altitude = kwargs.get('altitude', None)
        self.altitude_accuracy = kwargs.get('altitude_accuracy', None)
        self.latitude = kwargs.get('latitude', None)
        self.longitude = kwargs.get('longitude', None)


class MicrosoftGraphPerson(MicrosoftGraphEntity):
    """person.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param birthday: The person's birthday.
    :type birthday: str
    :param company_name: The name of the person's company.
    :type company_name: str
    :param department: The person's department.
    :type department: str
    :param display_name: The person's display name.
    :type display_name: str
    :param email_addresses:
    :type email_addresses: list[~people.models.MicrosoftGraphRankedEmailAddress]
    :param given_name: The person's given name.
    :type given_name: str
    :param is_favorite: true if the user has flagged this person as a favorite.
    :type is_favorite: bool
    :param mailbox_type:
    :type mailbox_type: str
    :param office_location: The location of the person's office.
    :type office_location: str
    :param person_notes: Free-form notes that the user has taken about this person.
    :type person_notes: str
    :param person_type: The type of person.
    :type person_type: str
    :param phones: The person's phone numbers.
    :type phones: list[~people.models.MicrosoftGraphPhone]
    :param postal_addresses: The person's addresses.
    :type postal_addresses: list[~people.models.MicrosoftGraphLocation]
    :param profession: The person's profession.
    :type profession: str
    :param sources:
    :type sources: list[~people.models.MicrosoftGraphPersonDataSource]
    :param surname: The person's surname.
    :type surname: str
    :param title:
    :type title: str
    :param user_principal_name: The user principal name (UPN) of the person. The UPN is an
     Internet-style login name for the person based on the Internet standard RFC 822. By convention,
     this should map to the person's email name. The general format is alias@domain.
    :type user_principal_name: str
    :param websites: The person's websites.
    :type websites: list[~people.models.MicrosoftGraphWebsite]
    :param yomi_company: The phonetic Japanese name of the person's company.
    :type yomi_company: str
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'birthday': {'key': 'birthday', 'type': 'str'},
        'company_name': {'key': 'companyName', 'type': 'str'},
        'department': {'key': 'department', 'type': 'str'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'email_addresses': {'key': 'emailAddresses', 'type': '[MicrosoftGraphRankedEmailAddress]'},
        'given_name': {'key': 'givenName', 'type': 'str'},
        'is_favorite': {'key': 'isFavorite', 'type': 'bool'},
        'mailbox_type': {'key': 'mailboxType', 'type': 'str'},
        'office_location': {'key': 'officeLocation', 'type': 'str'},
        'person_notes': {'key': 'personNotes', 'type': 'str'},
        'person_type': {'key': 'personType', 'type': 'str'},
        'phones': {'key': 'phones', 'type': '[MicrosoftGraphPhone]'},
        'postal_addresses': {'key': 'postalAddresses', 'type': '[MicrosoftGraphLocation]'},
        'profession': {'key': 'profession', 'type': 'str'},
        'sources': {'key': 'sources', 'type': '[MicrosoftGraphPersonDataSource]'},
        'surname': {'key': 'surname', 'type': 'str'},
        'title': {'key': 'title', 'type': 'str'},
        'user_principal_name': {'key': 'userPrincipalName', 'type': 'str'},
        'websites': {'key': 'websites', 'type': '[MicrosoftGraphWebsite]'},
        'yomi_company': {'key': 'yomiCompany', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphPerson, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.birthday = kwargs.get('birthday', None)
        self.company_name = kwargs.get('company_name', None)
        self.department = kwargs.get('department', None)
        self.display_name = kwargs.get('display_name', None)
        self.email_addresses = kwargs.get('email_addresses', None)
        self.given_name = kwargs.get('given_name', None)
        self.is_favorite = kwargs.get('is_favorite', None)
        self.mailbox_type = kwargs.get('mailbox_type', None)
        self.office_location = kwargs.get('office_location', None)
        self.person_notes = kwargs.get('person_notes', None)
        self.person_type = kwargs.get('person_type', None)
        self.phones = kwargs.get('phones', None)
        self.postal_addresses = kwargs.get('postal_addresses', None)
        self.profession = kwargs.get('profession', None)
        self.sources = kwargs.get('sources', None)
        self.surname = kwargs.get('surname', None)
        self.title = kwargs.get('title', None)
        self.user_principal_name = kwargs.get('user_principal_name', None)
        self.websites = kwargs.get('websites', None)
        self.yomi_company = kwargs.get('yomi_company', None)


class MicrosoftGraphPersonAnniversary(MicrosoftGraphItemFacet):
    """personAnniversary.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param id: Read-only.
    :type id: str
    :param allowed_audiences:  Possible values include: "me", "family", "contacts", "groupMembers",
     "organization", "federatedOrganizations", "everyone", "unknownFutureValue".
    :type allowed_audiences: str or ~people.models.MicrosoftGraphAllowedAudiences
    :param created_date_time:
    :type created_date_time: ~datetime.datetime
    :param inference: inferenceData.
    :type inference: ~people.models.MicrosoftGraphInferenceData
    :param last_modified_date_time:
    :type last_modified_date_time: ~datetime.datetime
    :param source: personDataSources.
    :type source: ~people.models.MicrosoftGraphPersonDataSources
    :param application_last_modified_by_application: identity.
    :type application_last_modified_by_application: ~people.models.MicrosoftGraphIdentity
    :param device_last_modified_by_device: identity.
    :type device_last_modified_by_device: ~people.models.MicrosoftGraphIdentity
    :param user_last_modified_by_user: identity.
    :type user_last_modified_by_user: ~people.models.MicrosoftGraphIdentity
    :param application_created_by_application: identity.
    :type application_created_by_application: ~people.models.MicrosoftGraphIdentity
    :param device_created_by_device: identity.
    :type device_created_by_device: ~people.models.MicrosoftGraphIdentity
    :param user_created_by_user: identity.
    :type user_created_by_user: ~people.models.MicrosoftGraphIdentity
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param date:
    :type date: ~datetime.date
    :param type:  Possible values include: "birthday", "wedding", "unknownFutureValue".
    :type type: str or ~people.models.MicrosoftGraphAnniversaryType
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'id': {'key': 'id', 'type': 'str'},
        'allowed_audiences': {'key': 'allowedAudiences', 'type': 'str'},
        'created_date_time': {'key': 'createdDateTime', 'type': 'iso-8601'},
        'inference': {'key': 'inference', 'type': 'MicrosoftGraphInferenceData'},
        'last_modified_date_time': {'key': 'lastModifiedDateTime', 'type': 'iso-8601'},
        'source': {'key': 'source', 'type': 'MicrosoftGraphPersonDataSources'},
        'application_last_modified_by_application': {'key': 'lastModifiedBy.application', 'type': 'MicrosoftGraphIdentity'},
        'device_last_modified_by_device': {'key': 'lastModifiedBy.device', 'type': 'MicrosoftGraphIdentity'},
        'user_last_modified_by_user': {'key': 'lastModifiedBy.user', 'type': 'MicrosoftGraphIdentity'},
        'application_created_by_application': {'key': 'createdBy.application', 'type': 'MicrosoftGraphIdentity'},
        'device_created_by_device': {'key': 'createdBy.device', 'type': 'MicrosoftGraphIdentity'},
        'user_created_by_user': {'key': 'createdBy.user', 'type': 'MicrosoftGraphIdentity'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'date': {'key': 'date', 'type': 'date'},
        'type': {'key': 'type', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphPersonAnniversary, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.date = kwargs.get('date', None)
        self.type = kwargs.get('type', None)


class MicrosoftGraphPersonAnnotation(MicrosoftGraphItemFacet):
    """personAnnotation.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param id: Read-only.
    :type id: str
    :param allowed_audiences:  Possible values include: "me", "family", "contacts", "groupMembers",
     "organization", "federatedOrganizations", "everyone", "unknownFutureValue".
    :type allowed_audiences: str or ~people.models.MicrosoftGraphAllowedAudiences
    :param created_date_time:
    :type created_date_time: ~datetime.datetime
    :param inference: inferenceData.
    :type inference: ~people.models.MicrosoftGraphInferenceData
    :param last_modified_date_time:
    :type last_modified_date_time: ~datetime.datetime
    :param source: personDataSources.
    :type source: ~people.models.MicrosoftGraphPersonDataSources
    :param application_last_modified_by_application: identity.
    :type application_last_modified_by_application: ~people.models.MicrosoftGraphIdentity
    :param device_last_modified_by_device: identity.
    :type device_last_modified_by_device: ~people.models.MicrosoftGraphIdentity
    :param user_last_modified_by_user: identity.
    :type user_last_modified_by_user: ~people.models.MicrosoftGraphIdentity
    :param application_created_by_application: identity.
    :type application_created_by_application: ~people.models.MicrosoftGraphIdentity
    :param device_created_by_device: identity.
    :type device_created_by_device: ~people.models.MicrosoftGraphIdentity
    :param user_created_by_user: identity.
    :type user_created_by_user: ~people.models.MicrosoftGraphIdentity
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param detail: itemBody.
    :type detail: ~people.models.MicrosoftGraphItemBody
    :param display_name:
    :type display_name: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'id': {'key': 'id', 'type': 'str'},
        'allowed_audiences': {'key': 'allowedAudiences', 'type': 'str'},
        'created_date_time': {'key': 'createdDateTime', 'type': 'iso-8601'},
        'inference': {'key': 'inference', 'type': 'MicrosoftGraphInferenceData'},
        'last_modified_date_time': {'key': 'lastModifiedDateTime', 'type': 'iso-8601'},
        'source': {'key': 'source', 'type': 'MicrosoftGraphPersonDataSources'},
        'application_last_modified_by_application': {'key': 'lastModifiedBy.application', 'type': 'MicrosoftGraphIdentity'},
        'device_last_modified_by_device': {'key': 'lastModifiedBy.device', 'type': 'MicrosoftGraphIdentity'},
        'user_last_modified_by_user': {'key': 'lastModifiedBy.user', 'type': 'MicrosoftGraphIdentity'},
        'application_created_by_application': {'key': 'createdBy.application', 'type': 'MicrosoftGraphIdentity'},
        'device_created_by_device': {'key': 'createdBy.device', 'type': 'MicrosoftGraphIdentity'},
        'user_created_by_user': {'key': 'createdBy.user', 'type': 'MicrosoftGraphIdentity'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'detail': {'key': 'detail', 'type': 'MicrosoftGraphItemBody'},
        'display_name': {'key': 'displayName', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphPersonAnnotation, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.detail = kwargs.get('detail', None)
        self.display_name = kwargs.get('display_name', None)


class MicrosoftGraphPersonAward(MicrosoftGraphItemFacet):
    """personAward.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param id: Read-only.
    :type id: str
    :param allowed_audiences:  Possible values include: "me", "family", "contacts", "groupMembers",
     "organization", "federatedOrganizations", "everyone", "unknownFutureValue".
    :type allowed_audiences: str or ~people.models.MicrosoftGraphAllowedAudiences
    :param created_date_time:
    :type created_date_time: ~datetime.datetime
    :param inference: inferenceData.
    :type inference: ~people.models.MicrosoftGraphInferenceData
    :param last_modified_date_time:
    :type last_modified_date_time: ~datetime.datetime
    :param source: personDataSources.
    :type source: ~people.models.MicrosoftGraphPersonDataSources
    :param application_last_modified_by_application: identity.
    :type application_last_modified_by_application: ~people.models.MicrosoftGraphIdentity
    :param device_last_modified_by_device: identity.
    :type device_last_modified_by_device: ~people.models.MicrosoftGraphIdentity
    :param user_last_modified_by_user: identity.
    :type user_last_modified_by_user: ~people.models.MicrosoftGraphIdentity
    :param application_created_by_application: identity.
    :type application_created_by_application: ~people.models.MicrosoftGraphIdentity
    :param device_created_by_device: identity.
    :type device_created_by_device: ~people.models.MicrosoftGraphIdentity
    :param user_created_by_user: identity.
    :type user_created_by_user: ~people.models.MicrosoftGraphIdentity
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param description:
    :type description: str
    :param display_name:
    :type display_name: str
    :param issued_date:
    :type issued_date: ~datetime.date
    :param issuing_authority:
    :type issuing_authority: str
    :param thumbnail_url:
    :type thumbnail_url: str
    :param web_url:
    :type web_url: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'id': {'key': 'id', 'type': 'str'},
        'allowed_audiences': {'key': 'allowedAudiences', 'type': 'str'},
        'created_date_time': {'key': 'createdDateTime', 'type': 'iso-8601'},
        'inference': {'key': 'inference', 'type': 'MicrosoftGraphInferenceData'},
        'last_modified_date_time': {'key': 'lastModifiedDateTime', 'type': 'iso-8601'},
        'source': {'key': 'source', 'type': 'MicrosoftGraphPersonDataSources'},
        'application_last_modified_by_application': {'key': 'lastModifiedBy.application', 'type': 'MicrosoftGraphIdentity'},
        'device_last_modified_by_device': {'key': 'lastModifiedBy.device', 'type': 'MicrosoftGraphIdentity'},
        'user_last_modified_by_user': {'key': 'lastModifiedBy.user', 'type': 'MicrosoftGraphIdentity'},
        'application_created_by_application': {'key': 'createdBy.application', 'type': 'MicrosoftGraphIdentity'},
        'device_created_by_device': {'key': 'createdBy.device', 'type': 'MicrosoftGraphIdentity'},
        'user_created_by_user': {'key': 'createdBy.user', 'type': 'MicrosoftGraphIdentity'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'description': {'key': 'description', 'type': 'str'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'issued_date': {'key': 'issuedDate', 'type': 'date'},
        'issuing_authority': {'key': 'issuingAuthority', 'type': 'str'},
        'thumbnail_url': {'key': 'thumbnailUrl', 'type': 'str'},
        'web_url': {'key': 'webUrl', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphPersonAward, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.description = kwargs.get('description', None)
        self.display_name = kwargs.get('display_name', None)
        self.issued_date = kwargs.get('issued_date', None)
        self.issuing_authority = kwargs.get('issuing_authority', None)
        self.thumbnail_url = kwargs.get('thumbnail_url', None)
        self.web_url = kwargs.get('web_url', None)


class MicrosoftGraphPersonCertification(MicrosoftGraphItemFacet):
    """personCertification.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param id: Read-only.
    :type id: str
    :param allowed_audiences:  Possible values include: "me", "family", "contacts", "groupMembers",
     "organization", "federatedOrganizations", "everyone", "unknownFutureValue".
    :type allowed_audiences: str or ~people.models.MicrosoftGraphAllowedAudiences
    :param created_date_time:
    :type created_date_time: ~datetime.datetime
    :param inference: inferenceData.
    :type inference: ~people.models.MicrosoftGraphInferenceData
    :param last_modified_date_time:
    :type last_modified_date_time: ~datetime.datetime
    :param source: personDataSources.
    :type source: ~people.models.MicrosoftGraphPersonDataSources
    :param application_last_modified_by_application: identity.
    :type application_last_modified_by_application: ~people.models.MicrosoftGraphIdentity
    :param device_last_modified_by_device: identity.
    :type device_last_modified_by_device: ~people.models.MicrosoftGraphIdentity
    :param user_last_modified_by_user: identity.
    :type user_last_modified_by_user: ~people.models.MicrosoftGraphIdentity
    :param application_created_by_application: identity.
    :type application_created_by_application: ~people.models.MicrosoftGraphIdentity
    :param device_created_by_device: identity.
    :type device_created_by_device: ~people.models.MicrosoftGraphIdentity
    :param user_created_by_user: identity.
    :type user_created_by_user: ~people.models.MicrosoftGraphIdentity
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param certification_id:
    :type certification_id: str
    :param description:
    :type description: str
    :param display_name:
    :type display_name: str
    :param end_date:
    :type end_date: ~datetime.date
    :param issued_date:
    :type issued_date: ~datetime.date
    :param issuing_authority:
    :type issuing_authority: str
    :param issuing_company:
    :type issuing_company: str
    :param start_date:
    :type start_date: ~datetime.date
    :param thumbnail_url:
    :type thumbnail_url: str
    :param web_url:
    :type web_url: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'id': {'key': 'id', 'type': 'str'},
        'allowed_audiences': {'key': 'allowedAudiences', 'type': 'str'},
        'created_date_time': {'key': 'createdDateTime', 'type': 'iso-8601'},
        'inference': {'key': 'inference', 'type': 'MicrosoftGraphInferenceData'},
        'last_modified_date_time': {'key': 'lastModifiedDateTime', 'type': 'iso-8601'},
        'source': {'key': 'source', 'type': 'MicrosoftGraphPersonDataSources'},
        'application_last_modified_by_application': {'key': 'lastModifiedBy.application', 'type': 'MicrosoftGraphIdentity'},
        'device_last_modified_by_device': {'key': 'lastModifiedBy.device', 'type': 'MicrosoftGraphIdentity'},
        'user_last_modified_by_user': {'key': 'lastModifiedBy.user', 'type': 'MicrosoftGraphIdentity'},
        'application_created_by_application': {'key': 'createdBy.application', 'type': 'MicrosoftGraphIdentity'},
        'device_created_by_device': {'key': 'createdBy.device', 'type': 'MicrosoftGraphIdentity'},
        'user_created_by_user': {'key': 'createdBy.user', 'type': 'MicrosoftGraphIdentity'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'certification_id': {'key': 'certificationId', 'type': 'str'},
        'description': {'key': 'description', 'type': 'str'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'end_date': {'key': 'endDate', 'type': 'date'},
        'issued_date': {'key': 'issuedDate', 'type': 'date'},
        'issuing_authority': {'key': 'issuingAuthority', 'type': 'str'},
        'issuing_company': {'key': 'issuingCompany', 'type': 'str'},
        'start_date': {'key': 'startDate', 'type': 'date'},
        'thumbnail_url': {'key': 'thumbnailUrl', 'type': 'str'},
        'web_url': {'key': 'webUrl', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphPersonCertification, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.certification_id = kwargs.get('certification_id', None)
        self.description = kwargs.get('description', None)
        self.display_name = kwargs.get('display_name', None)
        self.end_date = kwargs.get('end_date', None)
        self.issued_date = kwargs.get('issued_date', None)
        self.issuing_authority = kwargs.get('issuing_authority', None)
        self.issuing_company = kwargs.get('issuing_company', None)
        self.start_date = kwargs.get('start_date', None)
        self.thumbnail_url = kwargs.get('thumbnail_url', None)
        self.web_url = kwargs.get('web_url', None)


class MicrosoftGraphPersonDataSource(msrest.serialization.Model):
    """personDataSource.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param type:
    :type type: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'type': {'key': 'type', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphPersonDataSource, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.type = kwargs.get('type', None)


class MicrosoftGraphPersonDataSources(msrest.serialization.Model):
    """personDataSources.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param type:
    :type type: list[str]
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'type': {'key': 'type', 'type': '[str]'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphPersonDataSources, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.type = kwargs.get('type', None)


class MicrosoftGraphPersonInterest(MicrosoftGraphItemFacet):
    """personInterest.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param id: Read-only.
    :type id: str
    :param allowed_audiences:  Possible values include: "me", "family", "contacts", "groupMembers",
     "organization", "federatedOrganizations", "everyone", "unknownFutureValue".
    :type allowed_audiences: str or ~people.models.MicrosoftGraphAllowedAudiences
    :param created_date_time:
    :type created_date_time: ~datetime.datetime
    :param inference: inferenceData.
    :type inference: ~people.models.MicrosoftGraphInferenceData
    :param last_modified_date_time:
    :type last_modified_date_time: ~datetime.datetime
    :param source: personDataSources.
    :type source: ~people.models.MicrosoftGraphPersonDataSources
    :param application_last_modified_by_application: identity.
    :type application_last_modified_by_application: ~people.models.MicrosoftGraphIdentity
    :param device_last_modified_by_device: identity.
    :type device_last_modified_by_device: ~people.models.MicrosoftGraphIdentity
    :param user_last_modified_by_user: identity.
    :type user_last_modified_by_user: ~people.models.MicrosoftGraphIdentity
    :param application_created_by_application: identity.
    :type application_created_by_application: ~people.models.MicrosoftGraphIdentity
    :param device_created_by_device: identity.
    :type device_created_by_device: ~people.models.MicrosoftGraphIdentity
    :param user_created_by_user: identity.
    :type user_created_by_user: ~people.models.MicrosoftGraphIdentity
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param categories:
    :type categories: list[str]
    :param collaboration_tags:
    :type collaboration_tags: list[str]
    :param description:
    :type description: str
    :param display_name:
    :type display_name: str
    :param web_url:
    :type web_url: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'id': {'key': 'id', 'type': 'str'},
        'allowed_audiences': {'key': 'allowedAudiences', 'type': 'str'},
        'created_date_time': {'key': 'createdDateTime', 'type': 'iso-8601'},
        'inference': {'key': 'inference', 'type': 'MicrosoftGraphInferenceData'},
        'last_modified_date_time': {'key': 'lastModifiedDateTime', 'type': 'iso-8601'},
        'source': {'key': 'source', 'type': 'MicrosoftGraphPersonDataSources'},
        'application_last_modified_by_application': {'key': 'lastModifiedBy.application', 'type': 'MicrosoftGraphIdentity'},
        'device_last_modified_by_device': {'key': 'lastModifiedBy.device', 'type': 'MicrosoftGraphIdentity'},
        'user_last_modified_by_user': {'key': 'lastModifiedBy.user', 'type': 'MicrosoftGraphIdentity'},
        'application_created_by_application': {'key': 'createdBy.application', 'type': 'MicrosoftGraphIdentity'},
        'device_created_by_device': {'key': 'createdBy.device', 'type': 'MicrosoftGraphIdentity'},
        'user_created_by_user': {'key': 'createdBy.user', 'type': 'MicrosoftGraphIdentity'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'categories': {'key': 'categories', 'type': '[str]'},
        'collaboration_tags': {'key': 'collaborationTags', 'type': '[str]'},
        'description': {'key': 'description', 'type': 'str'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'web_url': {'key': 'webUrl', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphPersonInterest, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.categories = kwargs.get('categories', None)
        self.collaboration_tags = kwargs.get('collaboration_tags', None)
        self.description = kwargs.get('description', None)
        self.display_name = kwargs.get('display_name', None)
        self.web_url = kwargs.get('web_url', None)


class MicrosoftGraphPersonName(MicrosoftGraphItemFacet):
    """personName.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param id: Read-only.
    :type id: str
    :param allowed_audiences:  Possible values include: "me", "family", "contacts", "groupMembers",
     "organization", "federatedOrganizations", "everyone", "unknownFutureValue".
    :type allowed_audiences: str or ~people.models.MicrosoftGraphAllowedAudiences
    :param created_date_time:
    :type created_date_time: ~datetime.datetime
    :param inference: inferenceData.
    :type inference: ~people.models.MicrosoftGraphInferenceData
    :param last_modified_date_time:
    :type last_modified_date_time: ~datetime.datetime
    :param source: personDataSources.
    :type source: ~people.models.MicrosoftGraphPersonDataSources
    :param application_last_modified_by_application: identity.
    :type application_last_modified_by_application: ~people.models.MicrosoftGraphIdentity
    :param device_last_modified_by_device: identity.
    :type device_last_modified_by_device: ~people.models.MicrosoftGraphIdentity
    :param user_last_modified_by_user: identity.
    :type user_last_modified_by_user: ~people.models.MicrosoftGraphIdentity
    :param application_created_by_application: identity.
    :type application_created_by_application: ~people.models.MicrosoftGraphIdentity
    :param device_created_by_device: identity.
    :type device_created_by_device: ~people.models.MicrosoftGraphIdentity
    :param user_created_by_user: identity.
    :type user_created_by_user: ~people.models.MicrosoftGraphIdentity
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param display_name:
    :type display_name: str
    :param first:
    :type first: str
    :param initials:
    :type initials: str
    :param language_tag:
    :type language_tag: str
    :param last:
    :type last: str
    :param maiden:
    :type maiden: str
    :param middle:
    :type middle: str
    :param nickname:
    :type nickname: str
    :param pronunciation: yomiPersonName.
    :type pronunciation: ~people.models.MicrosoftGraphYomiPersonName
    :param suffix:
    :type suffix: str
    :param title:
    :type title: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'id': {'key': 'id', 'type': 'str'},
        'allowed_audiences': {'key': 'allowedAudiences', 'type': 'str'},
        'created_date_time': {'key': 'createdDateTime', 'type': 'iso-8601'},
        'inference': {'key': 'inference', 'type': 'MicrosoftGraphInferenceData'},
        'last_modified_date_time': {'key': 'lastModifiedDateTime', 'type': 'iso-8601'},
        'source': {'key': 'source', 'type': 'MicrosoftGraphPersonDataSources'},
        'application_last_modified_by_application': {'key': 'lastModifiedBy.application', 'type': 'MicrosoftGraphIdentity'},
        'device_last_modified_by_device': {'key': 'lastModifiedBy.device', 'type': 'MicrosoftGraphIdentity'},
        'user_last_modified_by_user': {'key': 'lastModifiedBy.user', 'type': 'MicrosoftGraphIdentity'},
        'application_created_by_application': {'key': 'createdBy.application', 'type': 'MicrosoftGraphIdentity'},
        'device_created_by_device': {'key': 'createdBy.device', 'type': 'MicrosoftGraphIdentity'},
        'user_created_by_user': {'key': 'createdBy.user', 'type': 'MicrosoftGraphIdentity'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'first': {'key': 'first', 'type': 'str'},
        'initials': {'key': 'initials', 'type': 'str'},
        'language_tag': {'key': 'languageTag', 'type': 'str'},
        'last': {'key': 'last', 'type': 'str'},
        'maiden': {'key': 'maiden', 'type': 'str'},
        'middle': {'key': 'middle', 'type': 'str'},
        'nickname': {'key': 'nickname', 'type': 'str'},
        'pronunciation': {'key': 'pronunciation', 'type': 'MicrosoftGraphYomiPersonName'},
        'suffix': {'key': 'suffix', 'type': 'str'},
        'title': {'key': 'title', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphPersonName, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.display_name = kwargs.get('display_name', None)
        self.first = kwargs.get('first', None)
        self.initials = kwargs.get('initials', None)
        self.language_tag = kwargs.get('language_tag', None)
        self.last = kwargs.get('last', None)
        self.maiden = kwargs.get('maiden', None)
        self.middle = kwargs.get('middle', None)
        self.nickname = kwargs.get('nickname', None)
        self.pronunciation = kwargs.get('pronunciation', None)
        self.suffix = kwargs.get('suffix', None)
        self.title = kwargs.get('title', None)


class MicrosoftGraphPersonWebsite(MicrosoftGraphItemFacet):
    """personWebsite.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param id: Read-only.
    :type id: str
    :param allowed_audiences:  Possible values include: "me", "family", "contacts", "groupMembers",
     "organization", "federatedOrganizations", "everyone", "unknownFutureValue".
    :type allowed_audiences: str or ~people.models.MicrosoftGraphAllowedAudiences
    :param created_date_time:
    :type created_date_time: ~datetime.datetime
    :param inference: inferenceData.
    :type inference: ~people.models.MicrosoftGraphInferenceData
    :param last_modified_date_time:
    :type last_modified_date_time: ~datetime.datetime
    :param source: personDataSources.
    :type source: ~people.models.MicrosoftGraphPersonDataSources
    :param application_last_modified_by_application: identity.
    :type application_last_modified_by_application: ~people.models.MicrosoftGraphIdentity
    :param device_last_modified_by_device: identity.
    :type device_last_modified_by_device: ~people.models.MicrosoftGraphIdentity
    :param user_last_modified_by_user: identity.
    :type user_last_modified_by_user: ~people.models.MicrosoftGraphIdentity
    :param application_created_by_application: identity.
    :type application_created_by_application: ~people.models.MicrosoftGraphIdentity
    :param device_created_by_device: identity.
    :type device_created_by_device: ~people.models.MicrosoftGraphIdentity
    :param user_created_by_user: identity.
    :type user_created_by_user: ~people.models.MicrosoftGraphIdentity
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param categories:
    :type categories: list[str]
    :param description:
    :type description: str
    :param display_name:
    :type display_name: str
    :param web_url:
    :type web_url: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'id': {'key': 'id', 'type': 'str'},
        'allowed_audiences': {'key': 'allowedAudiences', 'type': 'str'},
        'created_date_time': {'key': 'createdDateTime', 'type': 'iso-8601'},
        'inference': {'key': 'inference', 'type': 'MicrosoftGraphInferenceData'},
        'last_modified_date_time': {'key': 'lastModifiedDateTime', 'type': 'iso-8601'},
        'source': {'key': 'source', 'type': 'MicrosoftGraphPersonDataSources'},
        'application_last_modified_by_application': {'key': 'lastModifiedBy.application', 'type': 'MicrosoftGraphIdentity'},
        'device_last_modified_by_device': {'key': 'lastModifiedBy.device', 'type': 'MicrosoftGraphIdentity'},
        'user_last_modified_by_user': {'key': 'lastModifiedBy.user', 'type': 'MicrosoftGraphIdentity'},
        'application_created_by_application': {'key': 'createdBy.application', 'type': 'MicrosoftGraphIdentity'},
        'device_created_by_device': {'key': 'createdBy.device', 'type': 'MicrosoftGraphIdentity'},
        'user_created_by_user': {'key': 'createdBy.user', 'type': 'MicrosoftGraphIdentity'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'categories': {'key': 'categories', 'type': '[str]'},
        'description': {'key': 'description', 'type': 'str'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'web_url': {'key': 'webUrl', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphPersonWebsite, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.categories = kwargs.get('categories', None)
        self.description = kwargs.get('description', None)
        self.display_name = kwargs.get('display_name', None)
        self.web_url = kwargs.get('web_url', None)


class MicrosoftGraphPhone(msrest.serialization.Model):
    """phone.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param number: The phone number.
    :type number: str
    :param type:  Possible values include: "home", "business", "mobile", "other", "assistant",
     "homeFax", "businessFax", "otherFax", "pager", "radio".
    :type type: str or ~people.models.MicrosoftGraphPhoneType
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'number': {'key': 'number', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphPhone, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.number = kwargs.get('number', None)
        self.type = kwargs.get('type', None)


class MicrosoftGraphPhysicalAddress(msrest.serialization.Model):
    """physicalAddress.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param city: The city.
    :type city: str
    :param country_or_region: The country or region. It's a free-format string value, for example,
     'United States'.
    :type country_or_region: str
    :param postal_code: The postal code.
    :type postal_code: str
    :param post_office_box:
    :type post_office_box: str
    :param state: The state.
    :type state: str
    :param street: The street.
    :type street: str
    :param type:  Possible values include: "unknown", "home", "business", "other".
    :type type: str or ~people.models.MicrosoftGraphPhysicalAddressType
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'city': {'key': 'city', 'type': 'str'},
        'country_or_region': {'key': 'countryOrRegion', 'type': 'str'},
        'postal_code': {'key': 'postalCode', 'type': 'str'},
        'post_office_box': {'key': 'postOfficeBox', 'type': 'str'},
        'state': {'key': 'state', 'type': 'str'},
        'street': {'key': 'street', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphPhysicalAddress, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.city = kwargs.get('city', None)
        self.country_or_region = kwargs.get('country_or_region', None)
        self.postal_code = kwargs.get('postal_code', None)
        self.post_office_box = kwargs.get('post_office_box', None)
        self.state = kwargs.get('state', None)
        self.street = kwargs.get('street', None)
        self.type = kwargs.get('type', None)


class MicrosoftGraphPositionDetail(msrest.serialization.Model):
    """positionDetail.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param company: companyDetail.
    :type company: ~people.models.MicrosoftGraphCompanyDetail
    :param description:
    :type description: str
    :param end_month_year:
    :type end_month_year: ~datetime.date
    :param job_title:
    :type job_title: str
    :param role:
    :type role: str
    :param start_month_year:
    :type start_month_year: ~datetime.date
    :param summary:
    :type summary: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'company': {'key': 'company', 'type': 'MicrosoftGraphCompanyDetail'},
        'description': {'key': 'description', 'type': 'str'},
        'end_month_year': {'key': 'endMonthYear', 'type': 'date'},
        'job_title': {'key': 'jobTitle', 'type': 'str'},
        'role': {'key': 'role', 'type': 'str'},
        'start_month_year': {'key': 'startMonthYear', 'type': 'date'},
        'summary': {'key': 'summary', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphPositionDetail, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.company = kwargs.get('company', None)
        self.description = kwargs.get('description', None)
        self.end_month_year = kwargs.get('end_month_year', None)
        self.job_title = kwargs.get('job_title', None)
        self.role = kwargs.get('role', None)
        self.start_month_year = kwargs.get('start_month_year', None)
        self.summary = kwargs.get('summary', None)


class MicrosoftGraphProfile(MicrosoftGraphEntity):
    """profile.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param account:
    :type account: list[~people.models.MicrosoftGraphUserAccountInformation]
    :param addresses:
    :type addresses: list[~people.models.MicrosoftGraphItemAddress]
    :param anniversaries:
    :type anniversaries: list[~people.models.MicrosoftGraphPersonAnniversary]
    :param awards:
    :type awards: list[~people.models.MicrosoftGraphPersonAward]
    :param certifications:
    :type certifications: list[~people.models.MicrosoftGraphPersonCertification]
    :param educational_activities:
    :type educational_activities: list[~people.models.MicrosoftGraphEducationalActivity]
    :param emails:
    :type emails: list[~people.models.MicrosoftGraphItemEmail]
    :param interests:
    :type interests: list[~people.models.MicrosoftGraphPersonInterest]
    :param languages:
    :type languages: list[~people.models.MicrosoftGraphLanguageProficiency]
    :param names:
    :type names: list[~people.models.MicrosoftGraphPersonName]
    :param notes:
    :type notes: list[~people.models.MicrosoftGraphPersonAnnotation]
    :param patents:
    :type patents: list[~people.models.MicrosoftGraphItemPatent]
    :param phones:
    :type phones: list[~people.models.MicrosoftGraphItemPhone]
    :param positions:
    :type positions: list[~people.models.MicrosoftGraphWorkPosition]
    :param projects:
    :type projects: list[~people.models.MicrosoftGraphProjectParticipation]
    :param publications:
    :type publications: list[~people.models.MicrosoftGraphItemPublication]
    :param skills:
    :type skills: list[~people.models.MicrosoftGraphSkillProficiency]
    :param web_accounts:
    :type web_accounts: list[~people.models.MicrosoftGraphWebAccount]
    :param websites:
    :type websites: list[~people.models.MicrosoftGraphPersonWebsite]
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'account': {'key': 'account', 'type': '[MicrosoftGraphUserAccountInformation]'},
        'addresses': {'key': 'addresses', 'type': '[MicrosoftGraphItemAddress]'},
        'anniversaries': {'key': 'anniversaries', 'type': '[MicrosoftGraphPersonAnniversary]'},
        'awards': {'key': 'awards', 'type': '[MicrosoftGraphPersonAward]'},
        'certifications': {'key': 'certifications', 'type': '[MicrosoftGraphPersonCertification]'},
        'educational_activities': {'key': 'educationalActivities', 'type': '[MicrosoftGraphEducationalActivity]'},
        'emails': {'key': 'emails', 'type': '[MicrosoftGraphItemEmail]'},
        'interests': {'key': 'interests', 'type': '[MicrosoftGraphPersonInterest]'},
        'languages': {'key': 'languages', 'type': '[MicrosoftGraphLanguageProficiency]'},
        'names': {'key': 'names', 'type': '[MicrosoftGraphPersonName]'},
        'notes': {'key': 'notes', 'type': '[MicrosoftGraphPersonAnnotation]'},
        'patents': {'key': 'patents', 'type': '[MicrosoftGraphItemPatent]'},
        'phones': {'key': 'phones', 'type': '[MicrosoftGraphItemPhone]'},
        'positions': {'key': 'positions', 'type': '[MicrosoftGraphWorkPosition]'},
        'projects': {'key': 'projects', 'type': '[MicrosoftGraphProjectParticipation]'},
        'publications': {'key': 'publications', 'type': '[MicrosoftGraphItemPublication]'},
        'skills': {'key': 'skills', 'type': '[MicrosoftGraphSkillProficiency]'},
        'web_accounts': {'key': 'webAccounts', 'type': '[MicrosoftGraphWebAccount]'},
        'websites': {'key': 'websites', 'type': '[MicrosoftGraphPersonWebsite]'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphProfile, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.account = kwargs.get('account', None)
        self.addresses = kwargs.get('addresses', None)
        self.anniversaries = kwargs.get('anniversaries', None)
        self.awards = kwargs.get('awards', None)
        self.certifications = kwargs.get('certifications', None)
        self.educational_activities = kwargs.get('educational_activities', None)
        self.emails = kwargs.get('emails', None)
        self.interests = kwargs.get('interests', None)
        self.languages = kwargs.get('languages', None)
        self.names = kwargs.get('names', None)
        self.notes = kwargs.get('notes', None)
        self.patents = kwargs.get('patents', None)
        self.phones = kwargs.get('phones', None)
        self.positions = kwargs.get('positions', None)
        self.projects = kwargs.get('projects', None)
        self.publications = kwargs.get('publications', None)
        self.skills = kwargs.get('skills', None)
        self.web_accounts = kwargs.get('web_accounts', None)
        self.websites = kwargs.get('websites', None)


class MicrosoftGraphProjectParticipation(MicrosoftGraphItemFacet):
    """projectParticipation.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param id: Read-only.
    :type id: str
    :param allowed_audiences:  Possible values include: "me", "family", "contacts", "groupMembers",
     "organization", "federatedOrganizations", "everyone", "unknownFutureValue".
    :type allowed_audiences: str or ~people.models.MicrosoftGraphAllowedAudiences
    :param created_date_time:
    :type created_date_time: ~datetime.datetime
    :param inference: inferenceData.
    :type inference: ~people.models.MicrosoftGraphInferenceData
    :param last_modified_date_time:
    :type last_modified_date_time: ~datetime.datetime
    :param source: personDataSources.
    :type source: ~people.models.MicrosoftGraphPersonDataSources
    :param application_last_modified_by_application: identity.
    :type application_last_modified_by_application: ~people.models.MicrosoftGraphIdentity
    :param device_last_modified_by_device: identity.
    :type device_last_modified_by_device: ~people.models.MicrosoftGraphIdentity
    :param user_last_modified_by_user: identity.
    :type user_last_modified_by_user: ~people.models.MicrosoftGraphIdentity
    :param application_created_by_application: identity.
    :type application_created_by_application: ~people.models.MicrosoftGraphIdentity
    :param device_created_by_device: identity.
    :type device_created_by_device: ~people.models.MicrosoftGraphIdentity
    :param user_created_by_user: identity.
    :type user_created_by_user: ~people.models.MicrosoftGraphIdentity
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param categories:
    :type categories: list[str]
    :param collaboration_tags:
    :type collaboration_tags: list[str]
    :param colleagues:
    :type colleagues: list[~people.models.MicrosoftGraphRelatedPerson]
    :param display_name:
    :type display_name: str
    :param sponsors:
    :type sponsors: list[~people.models.MicrosoftGraphRelatedPerson]
    :param company: companyDetail.
    :type company: ~people.models.MicrosoftGraphCompanyDetail
    :param description:
    :type description: str
    :param end_month_year:
    :type end_month_year: ~datetime.date
    :param job_title:
    :type job_title: str
    :param role:
    :type role: str
    :param start_month_year:
    :type start_month_year: ~datetime.date
    :param summary:
    :type summary: str
    :param address: physicalAddress.
    :type address: ~people.models.MicrosoftGraphPhysicalAddress
    :param department:
    :type department: str
    :param display_name_client_display_name:
    :type display_name_client_display_name: str
    :param office_location:
    :type office_location: str
    :param pronunciation:
    :type pronunciation: str
    :param web_url:
    :type web_url: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'id': {'key': 'id', 'type': 'str'},
        'allowed_audiences': {'key': 'allowedAudiences', 'type': 'str'},
        'created_date_time': {'key': 'createdDateTime', 'type': 'iso-8601'},
        'inference': {'key': 'inference', 'type': 'MicrosoftGraphInferenceData'},
        'last_modified_date_time': {'key': 'lastModifiedDateTime', 'type': 'iso-8601'},
        'source': {'key': 'source', 'type': 'MicrosoftGraphPersonDataSources'},
        'application_last_modified_by_application': {'key': 'lastModifiedBy.application', 'type': 'MicrosoftGraphIdentity'},
        'device_last_modified_by_device': {'key': 'lastModifiedBy.device', 'type': 'MicrosoftGraphIdentity'},
        'user_last_modified_by_user': {'key': 'lastModifiedBy.user', 'type': 'MicrosoftGraphIdentity'},
        'application_created_by_application': {'key': 'createdBy.application', 'type': 'MicrosoftGraphIdentity'},
        'device_created_by_device': {'key': 'createdBy.device', 'type': 'MicrosoftGraphIdentity'},
        'user_created_by_user': {'key': 'createdBy.user', 'type': 'MicrosoftGraphIdentity'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'categories': {'key': 'categories', 'type': '[str]'},
        'collaboration_tags': {'key': 'collaborationTags', 'type': '[str]'},
        'colleagues': {'key': 'colleagues', 'type': '[MicrosoftGraphRelatedPerson]'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'sponsors': {'key': 'sponsors', 'type': '[MicrosoftGraphRelatedPerson]'},
        'company': {'key': 'detail.company', 'type': 'MicrosoftGraphCompanyDetail'},
        'description': {'key': 'detail.description', 'type': 'str'},
        'end_month_year': {'key': 'detail.endMonthYear', 'type': 'date'},
        'job_title': {'key': 'detail.jobTitle', 'type': 'str'},
        'role': {'key': 'detail.role', 'type': 'str'},
        'start_month_year': {'key': 'detail.startMonthYear', 'type': 'date'},
        'summary': {'key': 'detail.summary', 'type': 'str'},
        'address': {'key': 'client.address', 'type': 'MicrosoftGraphPhysicalAddress'},
        'department': {'key': 'client.department', 'type': 'str'},
        'display_name_client_display_name': {'key': 'client.displayName', 'type': 'str'},
        'office_location': {'key': 'client.officeLocation', 'type': 'str'},
        'pronunciation': {'key': 'client.pronunciation', 'type': 'str'},
        'web_url': {'key': 'client.webUrl', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphProjectParticipation, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.categories = kwargs.get('categories', None)
        self.collaboration_tags = kwargs.get('collaboration_tags', None)
        self.colleagues = kwargs.get('colleagues', None)
        self.display_name = kwargs.get('display_name', None)
        self.sponsors = kwargs.get('sponsors', None)
        self.company = kwargs.get('company', None)
        self.description = kwargs.get('description', None)
        self.end_month_year = kwargs.get('end_month_year', None)
        self.job_title = kwargs.get('job_title', None)
        self.role = kwargs.get('role', None)
        self.start_month_year = kwargs.get('start_month_year', None)
        self.summary = kwargs.get('summary', None)
        self.address = kwargs.get('address', None)
        self.department = kwargs.get('department', None)
        self.display_name_client_display_name = kwargs.get('display_name_client_display_name', None)
        self.office_location = kwargs.get('office_location', None)
        self.pronunciation = kwargs.get('pronunciation', None)
        self.web_url = kwargs.get('web_url', None)


class MicrosoftGraphRankedEmailAddress(msrest.serialization.Model):
    """rankedEmailAddress.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param address:
    :type address: str
    :param rank:
    :type rank: float
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'address': {'key': 'address', 'type': 'str'},
        'rank': {'key': 'rank', 'type': 'float'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphRankedEmailAddress, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.address = kwargs.get('address', None)
        self.rank = kwargs.get('rank', None)


class MicrosoftGraphRelatedPerson(msrest.serialization.Model):
    """relatedPerson.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param display_name:
    :type display_name: str
    :param relationship:  Possible values include: "manager", "colleague", "directReport",
     "dotLineReport", "assistant", "dotLineManager", "alternateContact", "friend", "spouse",
     "sibling", "child", "parent", "sponsor", "emergencyContact", "other", "unknownFutureValue".
    :type relationship: str or ~people.models.MicrosoftGraphPersonRelationship
    :param user_principal_name:
    :type user_principal_name: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'relationship': {'key': 'relationship', 'type': 'str'},
        'user_principal_name': {'key': 'userPrincipalName', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphRelatedPerson, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.display_name = kwargs.get('display_name', None)
        self.relationship = kwargs.get('relationship', None)
        self.user_principal_name = kwargs.get('user_principal_name', None)


class MicrosoftGraphServiceInformation(msrest.serialization.Model):
    """serviceInformation.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param name:
    :type name: str
    :param web_url:
    :type web_url: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'name': {'key': 'name', 'type': 'str'},
        'web_url': {'key': 'webUrl', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphServiceInformation, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.name = kwargs.get('name', None)
        self.web_url = kwargs.get('web_url', None)


class MicrosoftGraphSettings(msrest.serialization.Model):
    """settings.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param has_graph_mailbox:
    :type has_graph_mailbox: bool
    :param has_license:
    :type has_license: bool
    :param has_opted_out:
    :type has_opted_out: bool
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'has_graph_mailbox': {'key': 'hasGraphMailbox', 'type': 'bool'},
        'has_license': {'key': 'hasLicense', 'type': 'bool'},
        'has_opted_out': {'key': 'hasOptedOut', 'type': 'bool'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphSettings, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.has_graph_mailbox = kwargs.get('has_graph_mailbox', None)
        self.has_license = kwargs.get('has_license', None)
        self.has_opted_out = kwargs.get('has_opted_out', None)


class MicrosoftGraphSkillProficiency(MicrosoftGraphItemFacet):
    """skillProficiency.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param id: Read-only.
    :type id: str
    :param allowed_audiences:  Possible values include: "me", "family", "contacts", "groupMembers",
     "organization", "federatedOrganizations", "everyone", "unknownFutureValue".
    :type allowed_audiences: str or ~people.models.MicrosoftGraphAllowedAudiences
    :param created_date_time:
    :type created_date_time: ~datetime.datetime
    :param inference: inferenceData.
    :type inference: ~people.models.MicrosoftGraphInferenceData
    :param last_modified_date_time:
    :type last_modified_date_time: ~datetime.datetime
    :param source: personDataSources.
    :type source: ~people.models.MicrosoftGraphPersonDataSources
    :param application_last_modified_by_application: identity.
    :type application_last_modified_by_application: ~people.models.MicrosoftGraphIdentity
    :param device_last_modified_by_device: identity.
    :type device_last_modified_by_device: ~people.models.MicrosoftGraphIdentity
    :param user_last_modified_by_user: identity.
    :type user_last_modified_by_user: ~people.models.MicrosoftGraphIdentity
    :param application_created_by_application: identity.
    :type application_created_by_application: ~people.models.MicrosoftGraphIdentity
    :param device_created_by_device: identity.
    :type device_created_by_device: ~people.models.MicrosoftGraphIdentity
    :param user_created_by_user: identity.
    :type user_created_by_user: ~people.models.MicrosoftGraphIdentity
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param categories:
    :type categories: list[str]
    :param collaboration_tags:
    :type collaboration_tags: list[str]
    :param display_name:
    :type display_name: str
    :param proficiency:  Possible values include: "elementary", "limitedWorking",
     "generalProfessional", "advancedProfessional", "expert", "unknownFutureValue".
    :type proficiency: str or ~people.models.MicrosoftGraphSkillProficiencyLevel
    :param web_url:
    :type web_url: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'id': {'key': 'id', 'type': 'str'},
        'allowed_audiences': {'key': 'allowedAudiences', 'type': 'str'},
        'created_date_time': {'key': 'createdDateTime', 'type': 'iso-8601'},
        'inference': {'key': 'inference', 'type': 'MicrosoftGraphInferenceData'},
        'last_modified_date_time': {'key': 'lastModifiedDateTime', 'type': 'iso-8601'},
        'source': {'key': 'source', 'type': 'MicrosoftGraphPersonDataSources'},
        'application_last_modified_by_application': {'key': 'lastModifiedBy.application', 'type': 'MicrosoftGraphIdentity'},
        'device_last_modified_by_device': {'key': 'lastModifiedBy.device', 'type': 'MicrosoftGraphIdentity'},
        'user_last_modified_by_user': {'key': 'lastModifiedBy.user', 'type': 'MicrosoftGraphIdentity'},
        'application_created_by_application': {'key': 'createdBy.application', 'type': 'MicrosoftGraphIdentity'},
        'device_created_by_device': {'key': 'createdBy.device', 'type': 'MicrosoftGraphIdentity'},
        'user_created_by_user': {'key': 'createdBy.user', 'type': 'MicrosoftGraphIdentity'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'categories': {'key': 'categories', 'type': '[str]'},
        'collaboration_tags': {'key': 'collaborationTags', 'type': '[str]'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'proficiency': {'key': 'proficiency', 'type': 'str'},
        'web_url': {'key': 'webUrl', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphSkillProficiency, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.categories = kwargs.get('categories', None)
        self.collaboration_tags = kwargs.get('collaboration_tags', None)
        self.display_name = kwargs.get('display_name', None)
        self.proficiency = kwargs.get('proficiency', None)
        self.web_url = kwargs.get('web_url', None)


class MicrosoftGraphUserAccountInformation(MicrosoftGraphItemFacet):
    """userAccountInformation.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param id: Read-only.
    :type id: str
    :param allowed_audiences:  Possible values include: "me", "family", "contacts", "groupMembers",
     "organization", "federatedOrganizations", "everyone", "unknownFutureValue".
    :type allowed_audiences: str or ~people.models.MicrosoftGraphAllowedAudiences
    :param created_date_time:
    :type created_date_time: ~datetime.datetime
    :param inference: inferenceData.
    :type inference: ~people.models.MicrosoftGraphInferenceData
    :param last_modified_date_time:
    :type last_modified_date_time: ~datetime.datetime
    :param source: personDataSources.
    :type source: ~people.models.MicrosoftGraphPersonDataSources
    :param application_last_modified_by_application: identity.
    :type application_last_modified_by_application: ~people.models.MicrosoftGraphIdentity
    :param device_last_modified_by_device: identity.
    :type device_last_modified_by_device: ~people.models.MicrosoftGraphIdentity
    :param user_last_modified_by_user: identity.
    :type user_last_modified_by_user: ~people.models.MicrosoftGraphIdentity
    :param application_created_by_application: identity.
    :type application_created_by_application: ~people.models.MicrosoftGraphIdentity
    :param device_created_by_device: identity.
    :type device_created_by_device: ~people.models.MicrosoftGraphIdentity
    :param user_created_by_user: identity.
    :type user_created_by_user: ~people.models.MicrosoftGraphIdentity
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param age_group:
    :type age_group: str
    :param country_code:
    :type country_code: str
    :param preferred_language_tag: localeInfo.
    :type preferred_language_tag: ~people.models.MicrosoftGraphLocaleInfo
    :param user_principal_name:
    :type user_principal_name: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'id': {'key': 'id', 'type': 'str'},
        'allowed_audiences': {'key': 'allowedAudiences', 'type': 'str'},
        'created_date_time': {'key': 'createdDateTime', 'type': 'iso-8601'},
        'inference': {'key': 'inference', 'type': 'MicrosoftGraphInferenceData'},
        'last_modified_date_time': {'key': 'lastModifiedDateTime', 'type': 'iso-8601'},
        'source': {'key': 'source', 'type': 'MicrosoftGraphPersonDataSources'},
        'application_last_modified_by_application': {'key': 'lastModifiedBy.application', 'type': 'MicrosoftGraphIdentity'},
        'device_last_modified_by_device': {'key': 'lastModifiedBy.device', 'type': 'MicrosoftGraphIdentity'},
        'user_last_modified_by_user': {'key': 'lastModifiedBy.user', 'type': 'MicrosoftGraphIdentity'},
        'application_created_by_application': {'key': 'createdBy.application', 'type': 'MicrosoftGraphIdentity'},
        'device_created_by_device': {'key': 'createdBy.device', 'type': 'MicrosoftGraphIdentity'},
        'user_created_by_user': {'key': 'createdBy.user', 'type': 'MicrosoftGraphIdentity'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'age_group': {'key': 'ageGroup', 'type': 'str'},
        'country_code': {'key': 'countryCode', 'type': 'str'},
        'preferred_language_tag': {'key': 'preferredLanguageTag', 'type': 'MicrosoftGraphLocaleInfo'},
        'user_principal_name': {'key': 'userPrincipalName', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphUserAccountInformation, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.age_group = kwargs.get('age_group', None)
        self.country_code = kwargs.get('country_code', None)
        self.preferred_language_tag = kwargs.get('preferred_language_tag', None)
        self.user_principal_name = kwargs.get('user_principal_name', None)


class MicrosoftGraphUserAnalytics(MicrosoftGraphEntity):
    """userAnalytics.

    :param id: Read-only.
    :type id: str
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param settings: settings.
    :type settings: ~people.models.MicrosoftGraphSettings
    :param activity_statistics:
    :type activity_statistics: list[~people.models.MicrosoftGraphActivityStatistics]
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'settings': {'key': 'settings', 'type': 'MicrosoftGraphSettings'},
        'activity_statistics': {'key': 'activityStatistics', 'type': '[MicrosoftGraphActivityStatistics]'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphUserAnalytics, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.settings = kwargs.get('settings', None)
        self.activity_statistics = kwargs.get('activity_statistics', None)


class MicrosoftGraphWebAccount(MicrosoftGraphItemFacet):
    """webAccount.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param id: Read-only.
    :type id: str
    :param allowed_audiences:  Possible values include: "me", "family", "contacts", "groupMembers",
     "organization", "federatedOrganizations", "everyone", "unknownFutureValue".
    :type allowed_audiences: str or ~people.models.MicrosoftGraphAllowedAudiences
    :param created_date_time:
    :type created_date_time: ~datetime.datetime
    :param inference: inferenceData.
    :type inference: ~people.models.MicrosoftGraphInferenceData
    :param last_modified_date_time:
    :type last_modified_date_time: ~datetime.datetime
    :param source: personDataSources.
    :type source: ~people.models.MicrosoftGraphPersonDataSources
    :param application_last_modified_by_application: identity.
    :type application_last_modified_by_application: ~people.models.MicrosoftGraphIdentity
    :param device_last_modified_by_device: identity.
    :type device_last_modified_by_device: ~people.models.MicrosoftGraphIdentity
    :param user_last_modified_by_user: identity.
    :type user_last_modified_by_user: ~people.models.MicrosoftGraphIdentity
    :param application_created_by_application: identity.
    :type application_created_by_application: ~people.models.MicrosoftGraphIdentity
    :param device_created_by_device: identity.
    :type device_created_by_device: ~people.models.MicrosoftGraphIdentity
    :param user_created_by_user: identity.
    :type user_created_by_user: ~people.models.MicrosoftGraphIdentity
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param description:
    :type description: str
    :param service: serviceInformation.
    :type service: ~people.models.MicrosoftGraphServiceInformation
    :param status_message:
    :type status_message: str
    :param user_id:
    :type user_id: str
    :param web_url:
    :type web_url: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'id': {'key': 'id', 'type': 'str'},
        'allowed_audiences': {'key': 'allowedAudiences', 'type': 'str'},
        'created_date_time': {'key': 'createdDateTime', 'type': 'iso-8601'},
        'inference': {'key': 'inference', 'type': 'MicrosoftGraphInferenceData'},
        'last_modified_date_time': {'key': 'lastModifiedDateTime', 'type': 'iso-8601'},
        'source': {'key': 'source', 'type': 'MicrosoftGraphPersonDataSources'},
        'application_last_modified_by_application': {'key': 'lastModifiedBy.application', 'type': 'MicrosoftGraphIdentity'},
        'device_last_modified_by_device': {'key': 'lastModifiedBy.device', 'type': 'MicrosoftGraphIdentity'},
        'user_last_modified_by_user': {'key': 'lastModifiedBy.user', 'type': 'MicrosoftGraphIdentity'},
        'application_created_by_application': {'key': 'createdBy.application', 'type': 'MicrosoftGraphIdentity'},
        'device_created_by_device': {'key': 'createdBy.device', 'type': 'MicrosoftGraphIdentity'},
        'user_created_by_user': {'key': 'createdBy.user', 'type': 'MicrosoftGraphIdentity'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'description': {'key': 'description', 'type': 'str'},
        'service': {'key': 'service', 'type': 'MicrosoftGraphServiceInformation'},
        'status_message': {'key': 'statusMessage', 'type': 'str'},
        'user_id': {'key': 'userId', 'type': 'str'},
        'web_url': {'key': 'webUrl', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphWebAccount, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.description = kwargs.get('description', None)
        self.service = kwargs.get('service', None)
        self.status_message = kwargs.get('status_message', None)
        self.user_id = kwargs.get('user_id', None)
        self.web_url = kwargs.get('web_url', None)


class MicrosoftGraphWebsite(msrest.serialization.Model):
    """website.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param address: The URL of the website.
    :type address: str
    :param display_name: The display name of the web site.
    :type display_name: str
    :param type:  Possible values include: "other", "home", "work", "blog", "profile".
    :type type: str or ~people.models.MicrosoftGraphWebsiteType
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'address': {'key': 'address', 'type': 'str'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphWebsite, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.address = kwargs.get('address', None)
        self.display_name = kwargs.get('display_name', None)
        self.type = kwargs.get('type', None)


class MicrosoftGraphWorkPosition(MicrosoftGraphItemFacet):
    """workPosition.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param id: Read-only.
    :type id: str
    :param allowed_audiences:  Possible values include: "me", "family", "contacts", "groupMembers",
     "organization", "federatedOrganizations", "everyone", "unknownFutureValue".
    :type allowed_audiences: str or ~people.models.MicrosoftGraphAllowedAudiences
    :param created_date_time:
    :type created_date_time: ~datetime.datetime
    :param inference: inferenceData.
    :type inference: ~people.models.MicrosoftGraphInferenceData
    :param last_modified_date_time:
    :type last_modified_date_time: ~datetime.datetime
    :param source: personDataSources.
    :type source: ~people.models.MicrosoftGraphPersonDataSources
    :param application_last_modified_by_application: identity.
    :type application_last_modified_by_application: ~people.models.MicrosoftGraphIdentity
    :param device_last_modified_by_device: identity.
    :type device_last_modified_by_device: ~people.models.MicrosoftGraphIdentity
    :param user_last_modified_by_user: identity.
    :type user_last_modified_by_user: ~people.models.MicrosoftGraphIdentity
    :param application_created_by_application: identity.
    :type application_created_by_application: ~people.models.MicrosoftGraphIdentity
    :param device_created_by_device: identity.
    :type device_created_by_device: ~people.models.MicrosoftGraphIdentity
    :param user_created_by_user: identity.
    :type user_created_by_user: ~people.models.MicrosoftGraphIdentity
    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param categories:
    :type categories: list[str]
    :param colleagues:
    :type colleagues: list[~people.models.MicrosoftGraphRelatedPerson]
    :param is_current:
    :type is_current: bool
    :param manager: relatedPerson.
    :type manager: ~people.models.MicrosoftGraphRelatedPerson
    :param company: companyDetail.
    :type company: ~people.models.MicrosoftGraphCompanyDetail
    :param description:
    :type description: str
    :param end_month_year:
    :type end_month_year: ~datetime.date
    :param job_title:
    :type job_title: str
    :param role:
    :type role: str
    :param start_month_year:
    :type start_month_year: ~datetime.date
    :param summary:
    :type summary: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'id': {'key': 'id', 'type': 'str'},
        'allowed_audiences': {'key': 'allowedAudiences', 'type': 'str'},
        'created_date_time': {'key': 'createdDateTime', 'type': 'iso-8601'},
        'inference': {'key': 'inference', 'type': 'MicrosoftGraphInferenceData'},
        'last_modified_date_time': {'key': 'lastModifiedDateTime', 'type': 'iso-8601'},
        'source': {'key': 'source', 'type': 'MicrosoftGraphPersonDataSources'},
        'application_last_modified_by_application': {'key': 'lastModifiedBy.application', 'type': 'MicrosoftGraphIdentity'},
        'device_last_modified_by_device': {'key': 'lastModifiedBy.device', 'type': 'MicrosoftGraphIdentity'},
        'user_last_modified_by_user': {'key': 'lastModifiedBy.user', 'type': 'MicrosoftGraphIdentity'},
        'application_created_by_application': {'key': 'createdBy.application', 'type': 'MicrosoftGraphIdentity'},
        'device_created_by_device': {'key': 'createdBy.device', 'type': 'MicrosoftGraphIdentity'},
        'user_created_by_user': {'key': 'createdBy.user', 'type': 'MicrosoftGraphIdentity'},
        'additional_properties': {'key': '', 'type': '{object}'},
        'categories': {'key': 'categories', 'type': '[str]'},
        'colleagues': {'key': 'colleagues', 'type': '[MicrosoftGraphRelatedPerson]'},
        'is_current': {'key': 'isCurrent', 'type': 'bool'},
        'manager': {'key': 'manager', 'type': 'MicrosoftGraphRelatedPerson'},
        'company': {'key': 'detail.company', 'type': 'MicrosoftGraphCompanyDetail'},
        'description': {'key': 'detail.description', 'type': 'str'},
        'end_month_year': {'key': 'detail.endMonthYear', 'type': 'date'},
        'job_title': {'key': 'detail.jobTitle', 'type': 'str'},
        'role': {'key': 'detail.role', 'type': 'str'},
        'start_month_year': {'key': 'detail.startMonthYear', 'type': 'date'},
        'summary': {'key': 'detail.summary', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphWorkPosition, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.categories = kwargs.get('categories', None)
        self.colleagues = kwargs.get('colleagues', None)
        self.is_current = kwargs.get('is_current', None)
        self.manager = kwargs.get('manager', None)
        self.company = kwargs.get('company', None)
        self.description = kwargs.get('description', None)
        self.end_month_year = kwargs.get('end_month_year', None)
        self.job_title = kwargs.get('job_title', None)
        self.role = kwargs.get('role', None)
        self.start_month_year = kwargs.get('start_month_year', None)
        self.summary = kwargs.get('summary', None)


class MicrosoftGraphYomiPersonName(msrest.serialization.Model):
    """yomiPersonName.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param display_name:
    :type display_name: str
    :param first:
    :type first: str
    :param last:
    :type last: str
    :param maiden:
    :type maiden: str
    :param middle:
    :type middle: str
    """

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'first': {'key': 'first', 'type': 'str'},
        'last': {'key': 'last', 'type': 'str'},
        'maiden': {'key': 'maiden', 'type': 'str'},
        'middle': {'key': 'middle', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(MicrosoftGraphYomiPersonName, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.display_name = kwargs.get('display_name', None)
        self.first = kwargs.get('first', None)
        self.last = kwargs.get('last', None)
        self.maiden = kwargs.get('maiden', None)
        self.middle = kwargs.get('middle', None)


class OdataError(msrest.serialization.Model):
    """OdataError.

    All required parameters must be populated in order to send to Azure.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param error: Required.
    :type error: ~people.models.OdataErrorMain
    """

    _validation = {
        'error': {'required': True},
    }

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'error': {'key': 'error', 'type': 'OdataErrorMain'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(OdataError, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.error = kwargs['error']


class OdataErrorDetail(msrest.serialization.Model):
    """OdataErrorDetail.

    All required parameters must be populated in order to send to Azure.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param code: Required.
    :type code: str
    :param message: Required.
    :type message: str
    :param target:
    :type target: str
    """

    _validation = {
        'code': {'required': True},
        'message': {'required': True},
    }

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'code': {'key': 'code', 'type': 'str'},
        'message': {'key': 'message', 'type': 'str'},
        'target': {'key': 'target', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(OdataErrorDetail, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.code = kwargs['code']
        self.message = kwargs['message']
        self.target = kwargs.get('target', None)


class OdataErrorMain(msrest.serialization.Model):
    """OdataErrorMain.

    All required parameters must be populated in order to send to Azure.

    :param additional_properties: Unmatched properties from the message are deserialized to this
     collection.
    :type additional_properties: dict[str, object]
    :param code: Required.
    :type code: str
    :param message: Required.
    :type message: str
    :param target:
    :type target: str
    :param details:
    :type details: list[~people.models.OdataErrorDetail]
    :param innererror: The structure of this object is service-specific.
    :type innererror: dict[str, object]
    """

    _validation = {
        'code': {'required': True},
        'message': {'required': True},
    }

    _attribute_map = {
        'additional_properties': {'key': '', 'type': '{object}'},
        'code': {'key': 'code', 'type': 'str'},
        'message': {'key': 'message', 'type': 'str'},
        'target': {'key': 'target', 'type': 'str'},
        'details': {'key': 'details', 'type': '[OdataErrorDetail]'},
        'innererror': {'key': 'innererror', 'type': '{object}'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(OdataErrorMain, self).__init__(**kwargs)
        self.additional_properties = kwargs.get('additional_properties', None)
        self.code = kwargs['code']
        self.message = kwargs['message']
        self.target = kwargs.get('target', None)
        self.details = kwargs.get('details', None)
        self.innererror = kwargs.get('innererror', None)
