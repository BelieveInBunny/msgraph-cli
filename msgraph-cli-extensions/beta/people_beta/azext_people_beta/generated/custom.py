# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=line-too-long
# pylint: disable=too-many-lines


def people_user_delete(client,
                       user_id,
                       person_id=None,
                       if_match=None):
    if user_id is not None and person_id is not None:
        return client.delete_person(user_id=user_id,
                                    person_id=person_id,
                                    if_match=if_match)
    elif user_id is not None:
        return client.delete_analytic(user_id=user_id,
                                      if_match=if_match)
    return client.delete_profile(user_id=user_id,
                                 if_match=if_match)


def people_user_create_person(client,
                              user_id,
                              id_=None,
                              birthday=None,
                              company_name=None,
                              department=None,
                              display_name=None,
                              email_addresses=None,
                              given_name=None,
                              is_favorite=None,
                              mailbox_type=None,
                              office_location=None,
                              person_notes=None,
                              person_type=None,
                              phones=None,
                              postal_addresses=None,
                              profession=None,
                              sources=None,
                              surname=None,
                              title=None,
                              user_principal_name=None,
                              websites=None,
                              yomi_company=None):
    return client.create_person(user_id=user_id,
                                id=id_,
                                birthday=birthday,
                                company_name=company_name,
                                department=department,
                                display_name=display_name,
                                email_addresses=email_addresses,
                                given_name=given_name,
                                is_favorite=is_favorite,
                                mailbox_type=mailbox_type,
                                office_location=office_location,
                                person_notes=person_notes,
                                person_type=person_type,
                                phones=phones,
                                postal_addresses=postal_addresses,
                                profession=profession,
                                sources=sources,
                                surname=surname,
                                title=title,
                                user_principal_name=user_principal_name,
                                websites=websites,
                                yomi_company=yomi_company)


def people_user_list_person(client,
                            user_id,
                            orderby=None,
                            select=None,
                            expand=None):
    return client.list_person(user_id=user_id,
                              orderby=orderby,
                              select=select,
                              expand=expand)


def people_user_show_analytic(client,
                              user_id,
                              select=None,
                              expand=None):
    return client.get_analytic(user_id=user_id,
                               select=select,
                               expand=expand)


def people_user_show_person(client,
                            user_id,
                            person_id,
                            select=None,
                            expand=None):
    return client.get_person(user_id=user_id,
                             person_id=person_id,
                             select=select,
                             expand=expand)


def people_user_show_profile(client,
                             user_id,
                             select=None,
                             expand=None):
    return client.get_profile(user_id=user_id,
                              select=select,
                              expand=expand)


def people_user_update_analytic(client,
                                user_id,
                                id_=None,
                                settings=None,
                                activity_statistics=None):
    return client.update_analytic(user_id=user_id,
                                  id=id_,
                                  settings=settings,
                                  activity_statistics=activity_statistics)


def people_user_update_person(client,
                              user_id,
                              person_id,
                              id_=None,
                              birthday=None,
                              company_name=None,
                              department=None,
                              display_name=None,
                              email_addresses=None,
                              given_name=None,
                              is_favorite=None,
                              mailbox_type=None,
                              office_location=None,
                              person_notes=None,
                              person_type=None,
                              phones=None,
                              postal_addresses=None,
                              profession=None,
                              sources=None,
                              surname=None,
                              title=None,
                              user_principal_name=None,
                              websites=None,
                              yomi_company=None):
    return client.update_person(user_id=user_id,
                                person_id=person_id,
                                id=id_,
                                birthday=birthday,
                                company_name=company_name,
                                department=department,
                                display_name=display_name,
                                email_addresses=email_addresses,
                                given_name=given_name,
                                is_favorite=is_favorite,
                                mailbox_type=mailbox_type,
                                office_location=office_location,
                                person_notes=person_notes,
                                person_type=person_type,
                                phones=phones,
                                postal_addresses=postal_addresses,
                                profession=profession,
                                sources=sources,
                                surname=surname,
                                title=title,
                                user_principal_name=user_principal_name,
                                websites=websites,
                                yomi_company=yomi_company)


def people_user_update_profile(client,
                               user_id,
                               id_=None,
                               account=None,
                               addresses=None,
                               anniversaries=None,
                               awards=None,
                               certifications=None,
                               educational_activities=None,
                               emails=None,
                               interests=None,
                               languages=None,
                               names=None,
                               notes=None,
                               patents=None,
                               phones=None,
                               positions=None,
                               projects=None,
                               publications=None,
                               skills=None,
                               web_accounts=None,
                               websites=None):
    return client.update_profile(user_id=user_id,
                                 id=id_,
                                 account=account,
                                 addresses=addresses,
                                 anniversaries=anniversaries,
                                 awards=awards,
                                 certifications=certifications,
                                 educational_activities=educational_activities,
                                 emails=emails,
                                 interests=interests,
                                 languages=languages,
                                 names=names,
                                 notes=notes,
                                 patents=patents,
                                 phones=phones,
                                 positions=positions,
                                 projects=projects,
                                 publications=publications,
                                 skills=skills,
                                 web_accounts=web_accounts,
                                 websites=websites)


def people_user_analytic_delete(client,
                                user_id,
                                activity_statistics_id,
                                if_match=None):
    return client.delete_activity_statistics(user_id=user_id,
                                             activity_statistics_id=activity_statistics_id,
                                             if_match=if_match)


def people_user_analytic_create_activity_statistics(client,
                                                    user_id,
                                                    id_=None,
                                                    activity=None,
                                                    duration=None,
                                                    end_date=None,
                                                    start_date=None,
                                                    time_zone_used=None):
    return client.create_activity_statistics(user_id=user_id,
                                             id=id_,
                                             activity=activity,
                                             duration=duration,
                                             end_date=end_date,
                                             start_date=start_date,
                                             time_zone_used=time_zone_used)


def people_user_analytic_list_activity_statistics(client,
                                                  user_id,
                                                  orderby=None,
                                                  select=None,
                                                  expand=None):
    return client.list_activity_statistics(user_id=user_id,
                                           orderby=orderby,
                                           select=select,
                                           expand=expand)


def people_user_analytic_show_activity_statistics(client,
                                                  user_id,
                                                  activity_statistics_id,
                                                  select=None,
                                                  expand=None):
    return client.get_activity_statistics(user_id=user_id,
                                          activity_statistics_id=activity_statistics_id,
                                          select=select,
                                          expand=expand)


def people_user_analytic_update_activity_statistics(client,
                                                    user_id,
                                                    activity_statistics_id,
                                                    id_=None,
                                                    activity=None,
                                                    duration=None,
                                                    end_date=None,
                                                    start_date=None,
                                                    time_zone_used=None):
    return client.update_activity_statistics(user_id=user_id,
                                             activity_statistics_id=activity_statistics_id,
                                             id=id_,
                                             activity=activity,
                                             duration=duration,
                                             end_date=end_date,
                                             start_date=start_date,
                                             time_zone_used=time_zone_used)


def people_user_profile_delete(client,
                               user_id,
                               user_account_information_id=None,
                               if_match=None,
                               item_address_id=None,
                               person_anniversary_id=None,
                               person_award_id=None,
                               person_certification_id=None,
                               educational_activity_id=None,
                               item_email_id=None,
                               person_interest_id=None,
                               language_proficiency_id=None,
                               person_name_id=None,
                               person_annotation_id=None,
                               item_patent_id=None,
                               item_phone_id=None,
                               work_position_id=None,
                               project_participation_id=None,
                               item_publication_id=None,
                               skill_proficiency_id=None,
                               web_account_id=None,
                               person_website_id=None):
    if user_id is not None and user_account_information_id is not None:
        return client.delete_account(user_id=user_id,
                                     user_account_information_id=user_account_information_id,
                                     if_match=if_match)
    elif user_id is not None and item_address_id is not None:
        return client.delete_address(user_id=user_id,
                                     item_address_id=item_address_id,
                                     if_match=if_match)
    elif user_id is not None and person_anniversary_id is not None:
        return client.delete_anniversary(user_id=user_id,
                                         person_anniversary_id=person_anniversary_id,
                                         if_match=if_match)
    elif user_id is not None and person_award_id is not None:
        return client.delete_award(user_id=user_id,
                                   person_award_id=person_award_id,
                                   if_match=if_match)
    elif user_id is not None and person_certification_id is not None:
        return client.delete_certification(user_id=user_id,
                                           person_certification_id=person_certification_id,
                                           if_match=if_match)
    elif user_id is not None and educational_activity_id is not None:
        return client.delete_educational_activity(user_id=user_id,
                                                  educational_activity_id=educational_activity_id,
                                                  if_match=if_match)
    elif user_id is not None and item_email_id is not None:
        return client.delete_email(user_id=user_id,
                                   item_email_id=item_email_id,
                                   if_match=if_match)
    elif user_id is not None and person_interest_id is not None:
        return client.delete_interest(user_id=user_id,
                                      person_interest_id=person_interest_id,
                                      if_match=if_match)
    elif user_id is not None and language_proficiency_id is not None:
        return client.delete_language(user_id=user_id,
                                      language_proficiency_id=language_proficiency_id,
                                      if_match=if_match)
    elif user_id is not None and person_name_id is not None:
        return client.delete_name(user_id=user_id,
                                  person_name_id=person_name_id,
                                  if_match=if_match)
    elif user_id is not None and person_annotation_id is not None:
        return client.delete_note(user_id=user_id,
                                  person_annotation_id=person_annotation_id,
                                  if_match=if_match)
    elif user_id is not None and item_patent_id is not None:
        return client.delete_patent(user_id=user_id,
                                    item_patent_id=item_patent_id,
                                    if_match=if_match)
    elif user_id is not None and item_phone_id is not None:
        return client.delete_phone(user_id=user_id,
                                   item_phone_id=item_phone_id,
                                   if_match=if_match)
    elif user_id is not None and work_position_id is not None:
        return client.delete_position(user_id=user_id,
                                      work_position_id=work_position_id,
                                      if_match=if_match)
    elif user_id is not None and project_participation_id is not None:
        return client.delete_project(user_id=user_id,
                                     project_participation_id=project_participation_id,
                                     if_match=if_match)
    elif user_id is not None and item_publication_id is not None:
        return client.delete_publication(user_id=user_id,
                                         item_publication_id=item_publication_id,
                                         if_match=if_match)
    elif user_id is not None and skill_proficiency_id is not None:
        return client.delete_skill(user_id=user_id,
                                   skill_proficiency_id=skill_proficiency_id,
                                   if_match=if_match)
    elif user_id is not None and web_account_id is not None:
        return client.delete_web_account(user_id=user_id,
                                         web_account_id=web_account_id,
                                         if_match=if_match)
    return client.delete_website(user_id=user_id,
                                 person_website_id=person_website_id,
                                 if_match=if_match)


def people_user_profile_create_account(client,
                                       user_id,
                                       id_=None,
                                       allowed_audiences=None,
                                       created_date_time=None,
                                       inference=None,
                                       last_modified_date_time=None,
                                       source=None,
                                       application=None,
                                       device=None,
                                       user=None,
                                       microsoft_graph_identity_application=None,
                                       microsoft_graph_identity_device=None,
                                       microsoft_graph_identity_user=None,
                                       age_group=None,
                                       country_code=None,
                                       preferred_language_tag=None,
                                       user_principal_name=None):
    return client.create_account(user_id=user_id,
                                 id=id_,
                                 allowed_audiences=allowed_audiences,
                                 created_date_time=created_date_time,
                                 inference=inference,
                                 last_modified_date_time=last_modified_date_time,
                                 source=source,
                                 application=application,
                                 device=device,
                                 user=user,
                                 microsoft_graph_identity_application=microsoft_graph_identity_application,
                                 microsoft_graph_identity_device=microsoft_graph_identity_device,
                                 microsoft_graph_identity_user=microsoft_graph_identity_user,
                                 age_group=age_group,
                                 country_code=country_code,
                                 preferred_language_tag=preferred_language_tag,
                                 user_principal_name=user_principal_name)


def people_user_profile_create_address(client,
                                       user_id,
                                       id_=None,
                                       allowed_audiences=None,
                                       created_date_time=None,
                                       inference=None,
                                       last_modified_date_time=None,
                                       source=None,
                                       application=None,
                                       device=None,
                                       user=None,
                                       microsoft_graph_identity_application=None,
                                       microsoft_graph_identity_device=None,
                                       microsoft_graph_identity_user=None,
                                       detail=None,
                                       display_name=None,
                                       geo_coordinates=None):
    return client.create_address(user_id=user_id,
                                 id=id_,
                                 allowed_audiences=allowed_audiences,
                                 created_date_time=created_date_time,
                                 inference=inference,
                                 last_modified_date_time=last_modified_date_time,
                                 source=source,
                                 application=application,
                                 device=device,
                                 user=user,
                                 microsoft_graph_identity_application=microsoft_graph_identity_application,
                                 microsoft_graph_identity_device=microsoft_graph_identity_device,
                                 microsoft_graph_identity_user=microsoft_graph_identity_user,
                                 detail=detail,
                                 display_name=display_name,
                                 geo_coordinates=geo_coordinates)


def people_user_profile_create_anniversary(client,
                                           user_id,
                                           id_=None,
                                           allowed_audiences=None,
                                           created_date_time=None,
                                           inference=None,
                                           last_modified_date_time=None,
                                           source=None,
                                           application=None,
                                           device=None,
                                           user=None,
                                           microsoft_graph_identity_application=None,
                                           microsoft_graph_identity_device=None,
                                           microsoft_graph_identity_user=None,
                                           date=None,
                                           type_=None):
    return client.create_anniversary(user_id=user_id,
                                     id=id_,
                                     allowed_audiences=allowed_audiences,
                                     created_date_time=created_date_time,
                                     inference=inference,
                                     last_modified_date_time=last_modified_date_time,
                                     source=source,
                                     application=application,
                                     device=device,
                                     user=user,
                                     microsoft_graph_identity_application=microsoft_graph_identity_application,
                                     microsoft_graph_identity_device=microsoft_graph_identity_device,
                                     microsoft_graph_identity_user=microsoft_graph_identity_user,
                                     date=date,
                                     type=type_)


def people_user_profile_create_award(client,
                                     user_id,
                                     id_=None,
                                     allowed_audiences=None,
                                     created_date_time=None,
                                     inference=None,
                                     last_modified_date_time=None,
                                     source=None,
                                     application=None,
                                     device=None,
                                     user=None,
                                     microsoft_graph_identity_application=None,
                                     microsoft_graph_identity_device=None,
                                     microsoft_graph_identity_user=None,
                                     description=None,
                                     display_name=None,
                                     issued_date=None,
                                     issuing_authority=None,
                                     thumbnail_url=None,
                                     web_url=None):
    return client.create_award(user_id=user_id,
                               id=id_,
                               allowed_audiences=allowed_audiences,
                               created_date_time=created_date_time,
                               inference=inference,
                               last_modified_date_time=last_modified_date_time,
                               source=source,
                               application=application,
                               device=device,
                               user=user,
                               microsoft_graph_identity_application=microsoft_graph_identity_application,
                               microsoft_graph_identity_device=microsoft_graph_identity_device,
                               microsoft_graph_identity_user=microsoft_graph_identity_user,
                               description=description,
                               display_name=display_name,
                               issued_date=issued_date,
                               issuing_authority=issuing_authority,
                               thumbnail_url=thumbnail_url,
                               web_url=web_url)


def people_user_profile_create_certification(client,
                                             user_id,
                                             id_=None,
                                             allowed_audiences=None,
                                             created_date_time=None,
                                             inference=None,
                                             last_modified_date_time=None,
                                             source=None,
                                             application=None,
                                             device=None,
                                             user=None,
                                             microsoft_graph_identity_application=None,
                                             microsoft_graph_identity_device=None,
                                             microsoft_graph_identity_user=None,
                                             certification_id=None,
                                             description=None,
                                             display_name=None,
                                             end_date=None,
                                             issued_date=None,
                                             issuing_authority=None,
                                             issuing_company=None,
                                             start_date=None,
                                             thumbnail_url=None,
                                             web_url=None):
    return client.create_certification(user_id=user_id,
                                       id=id_,
                                       allowed_audiences=allowed_audiences,
                                       created_date_time=created_date_time,
                                       inference=inference,
                                       last_modified_date_time=last_modified_date_time,
                                       source=source,
                                       application=application,
                                       device=device,
                                       user=user,
                                       microsoft_graph_identity_application=microsoft_graph_identity_application,
                                       microsoft_graph_identity_device=microsoft_graph_identity_device,
                                       microsoft_graph_identity_user=microsoft_graph_identity_user,
                                       certification_id=certification_id,
                                       description=description,
                                       display_name=display_name,
                                       end_date=end_date,
                                       issued_date=issued_date,
                                       issuing_authority=issuing_authority,
                                       issuing_company=issuing_company,
                                       start_date=start_date,
                                       thumbnail_url=thumbnail_url,
                                       web_url=web_url)


def people_user_profile_create_educational_activity(client,
                                                    user_id,
                                                    id_=None,
                                                    allowed_audiences=None,
                                                    created_date_time=None,
                                                    inference=None,
                                                    last_modified_date_time=None,
                                                    source=None,
                                                    application=None,
                                                    device=None,
                                                    user=None,
                                                    microsoft_graph_identity_application=None,
                                                    microsoft_graph_identity_device=None,
                                                    microsoft_graph_identity_user=None,
                                                    completion_month_year=None,
                                                    end_month_year=None,
                                                    program=None,
                                                    start_month_year=None,
                                                    description=None,
                                                    display_name=None,
                                                    location=None,
                                                    web_url=None):
    return client.create_educational_activity(user_id=user_id,
                                              id=id_,
                                              allowed_audiences=allowed_audiences,
                                              created_date_time=created_date_time,
                                              inference=inference,
                                              last_modified_date_time=last_modified_date_time,
                                              source=source,
                                              application=application,
                                              device=device,
                                              user=user,
                                              microsoft_graph_identity_application=microsoft_graph_identity_application,
                                              microsoft_graph_identity_device=microsoft_graph_identity_device,
                                              microsoft_graph_identity_user=microsoft_graph_identity_user,
                                              completion_month_year=completion_month_year,
                                              end_month_year=end_month_year,
                                              program=program,
                                              start_month_year=start_month_year,
                                              description=description,
                                              display_name=display_name,
                                              location=location,
                                              web_url=web_url)


def people_user_profile_create_email(client,
                                     user_id,
                                     id_=None,
                                     allowed_audiences=None,
                                     created_date_time=None,
                                     inference=None,
                                     last_modified_date_time=None,
                                     source=None,
                                     application=None,
                                     device=None,
                                     user=None,
                                     microsoft_graph_identity_application=None,
                                     microsoft_graph_identity_device=None,
                                     microsoft_graph_identity_user=None,
                                     address=None,
                                     display_name=None,
                                     type_=None):
    return client.create_email(user_id=user_id,
                               id=id_,
                               allowed_audiences=allowed_audiences,
                               created_date_time=created_date_time,
                               inference=inference,
                               last_modified_date_time=last_modified_date_time,
                               source=source,
                               application=application,
                               device=device,
                               user=user,
                               microsoft_graph_identity_application=microsoft_graph_identity_application,
                               microsoft_graph_identity_device=microsoft_graph_identity_device,
                               microsoft_graph_identity_user=microsoft_graph_identity_user,
                               address=address,
                               display_name=display_name,
                               type=type_)


def people_user_profile_create_interest(client,
                                        user_id,
                                        id_=None,
                                        allowed_audiences=None,
                                        created_date_time=None,
                                        inference=None,
                                        last_modified_date_time=None,
                                        source=None,
                                        application=None,
                                        device=None,
                                        user=None,
                                        microsoft_graph_identity_application=None,
                                        microsoft_graph_identity_device=None,
                                        microsoft_graph_identity_user=None,
                                        categories=None,
                                        collaboration_tags=None,
                                        description=None,
                                        display_name=None,
                                        web_url=None):
    return client.create_interest(user_id=user_id,
                                  id=id_,
                                  allowed_audiences=allowed_audiences,
                                  created_date_time=created_date_time,
                                  inference=inference,
                                  last_modified_date_time=last_modified_date_time,
                                  source=source,
                                  application=application,
                                  device=device,
                                  user=user,
                                  microsoft_graph_identity_application=microsoft_graph_identity_application,
                                  microsoft_graph_identity_device=microsoft_graph_identity_device,
                                  microsoft_graph_identity_user=microsoft_graph_identity_user,
                                  categories=categories,
                                  collaboration_tags=collaboration_tags,
                                  description=description,
                                  display_name=display_name,
                                  web_url=web_url)


def people_user_profile_create_language(client,
                                        user_id,
                                        id_=None,
                                        allowed_audiences=None,
                                        created_date_time=None,
                                        inference=None,
                                        last_modified_date_time=None,
                                        source=None,
                                        application=None,
                                        device=None,
                                        user=None,
                                        microsoft_graph_identity_application=None,
                                        microsoft_graph_identity_device=None,
                                        microsoft_graph_identity_user=None,
                                        display_name=None,
                                        proficiency=None,
                                        reading=None,
                                        spoken=None,
                                        tag=None,
                                        written=None):
    return client.create_language(user_id=user_id,
                                  id=id_,
                                  allowed_audiences=allowed_audiences,
                                  created_date_time=created_date_time,
                                  inference=inference,
                                  last_modified_date_time=last_modified_date_time,
                                  source=source,
                                  application=application,
                                  device=device,
                                  user=user,
                                  microsoft_graph_identity_application=microsoft_graph_identity_application,
                                  microsoft_graph_identity_device=microsoft_graph_identity_device,
                                  microsoft_graph_identity_user=microsoft_graph_identity_user,
                                  display_name=display_name,
                                  proficiency=proficiency,
                                  reading=reading,
                                  spoken=spoken,
                                  tag=tag,
                                  written=written)


def people_user_profile_create_name(client,
                                    user_id,
                                    id_=None,
                                    allowed_audiences=None,
                                    created_date_time=None,
                                    inference=None,
                                    last_modified_date_time=None,
                                    source=None,
                                    application=None,
                                    device=None,
                                    user=None,
                                    microsoft_graph_identity_application=None,
                                    microsoft_graph_identity_device=None,
                                    microsoft_graph_identity_user=None,
                                    display_name=None,
                                    first=None,
                                    initials=None,
                                    language_tag=None,
                                    last=None,
                                    maiden=None,
                                    middle=None,
                                    nickname=None,
                                    pronunciation=None,
                                    suffix=None,
                                    title=None):
    return client.create_name(user_id=user_id,
                              id=id_,
                              allowed_audiences=allowed_audiences,
                              created_date_time=created_date_time,
                              inference=inference,
                              last_modified_date_time=last_modified_date_time,
                              source=source,
                              application=application,
                              device=device,
                              user=user,
                              microsoft_graph_identity_application=microsoft_graph_identity_application,
                              microsoft_graph_identity_device=microsoft_graph_identity_device,
                              microsoft_graph_identity_user=microsoft_graph_identity_user,
                              display_name=display_name,
                              first=first,
                              initials=initials,
                              language_tag=language_tag,
                              last=last,
                              maiden=maiden,
                              middle=middle,
                              nickname=nickname,
                              pronunciation=pronunciation,
                              suffix=suffix,
                              title=title)


def people_user_profile_create_note(client,
                                    user_id,
                                    id_=None,
                                    allowed_audiences=None,
                                    created_date_time=None,
                                    inference=None,
                                    last_modified_date_time=None,
                                    source=None,
                                    application=None,
                                    device=None,
                                    user=None,
                                    microsoft_graph_identity_application=None,
                                    microsoft_graph_identity_device=None,
                                    microsoft_graph_identity_user=None,
                                    detail=None,
                                    display_name=None):
    return client.create_note(user_id=user_id,
                              id=id_,
                              allowed_audiences=allowed_audiences,
                              created_date_time=created_date_time,
                              inference=inference,
                              last_modified_date_time=last_modified_date_time,
                              source=source,
                              application=application,
                              device=device,
                              user=user,
                              microsoft_graph_identity_application=microsoft_graph_identity_application,
                              microsoft_graph_identity_device=microsoft_graph_identity_device,
                              microsoft_graph_identity_user=microsoft_graph_identity_user,
                              detail=detail,
                              display_name=display_name)


def people_user_profile_create_patent(client,
                                      user_id,
                                      id_=None,
                                      allowed_audiences=None,
                                      created_date_time=None,
                                      inference=None,
                                      last_modified_date_time=None,
                                      source=None,
                                      application=None,
                                      device=None,
                                      user=None,
                                      microsoft_graph_identity_application=None,
                                      microsoft_graph_identity_device=None,
                                      microsoft_graph_identity_user=None,
                                      description=None,
                                      display_name=None,
                                      is_pending=None,
                                      issued_date=None,
                                      issuing_authority=None,
                                      number=None,
                                      web_url=None):
    return client.create_patent(user_id=user_id,
                                id=id_,
                                allowed_audiences=allowed_audiences,
                                created_date_time=created_date_time,
                                inference=inference,
                                last_modified_date_time=last_modified_date_time,
                                source=source,
                                application=application,
                                device=device,
                                user=user,
                                microsoft_graph_identity_application=microsoft_graph_identity_application,
                                microsoft_graph_identity_device=microsoft_graph_identity_device,
                                microsoft_graph_identity_user=microsoft_graph_identity_user,
                                description=description,
                                display_name=display_name,
                                is_pending=is_pending,
                                issued_date=issued_date,
                                issuing_authority=issuing_authority,
                                number=number,
                                web_url=web_url)


def people_user_profile_create_phone(client,
                                     user_id,
                                     id_=None,
                                     allowed_audiences=None,
                                     created_date_time=None,
                                     inference=None,
                                     last_modified_date_time=None,
                                     source=None,
                                     application=None,
                                     device=None,
                                     user=None,
                                     microsoft_graph_identity_application=None,
                                     microsoft_graph_identity_device=None,
                                     microsoft_graph_identity_user=None,
                                     display_name=None,
                                     number=None,
                                     type_=None):
    return client.create_phone(user_id=user_id,
                               id=id_,
                               allowed_audiences=allowed_audiences,
                               created_date_time=created_date_time,
                               inference=inference,
                               last_modified_date_time=last_modified_date_time,
                               source=source,
                               application=application,
                               device=device,
                               user=user,
                               microsoft_graph_identity_application=microsoft_graph_identity_application,
                               microsoft_graph_identity_device=microsoft_graph_identity_device,
                               microsoft_graph_identity_user=microsoft_graph_identity_user,
                               display_name=display_name,
                               number=number,
                               type=type_)


def people_user_profile_create_position(client,
                                        user_id,
                                        id_=None,
                                        allowed_audiences=None,
                                        created_date_time=None,
                                        inference=None,
                                        last_modified_date_time=None,
                                        source=None,
                                        application=None,
                                        device=None,
                                        user=None,
                                        microsoft_graph_identity_application=None,
                                        microsoft_graph_identity_device=None,
                                        microsoft_graph_identity_user=None,
                                        categories=None,
                                        colleagues=None,
                                        is_current=None,
                                        manager=None,
                                        company=None,
                                        description=None,
                                        end_month_year=None,
                                        job_title=None,
                                        role=None,
                                        start_month_year=None,
                                        summary=None):
    return client.create_position(user_id=user_id,
                                  id=id_,
                                  allowed_audiences=allowed_audiences,
                                  created_date_time=created_date_time,
                                  inference=inference,
                                  last_modified_date_time=last_modified_date_time,
                                  source=source,
                                  application=application,
                                  device=device,
                                  user=user,
                                  microsoft_graph_identity_application=microsoft_graph_identity_application,
                                  microsoft_graph_identity_device=microsoft_graph_identity_device,
                                  microsoft_graph_identity_user=microsoft_graph_identity_user,
                                  categories=categories,
                                  colleagues=colleagues,
                                  is_current=is_current,
                                  manager=manager,
                                  company=company,
                                  description=description,
                                  end_month_year=end_month_year,
                                  job_title=job_title,
                                  role=role,
                                  start_month_year=start_month_year,
                                  summary=summary)


def people_user_profile_create_project(client,
                                       user_id,
                                       id_=None,
                                       allowed_audiences=None,
                                       created_date_time=None,
                                       inference=None,
                                       last_modified_date_time=None,
                                       source=None,
                                       application=None,
                                       device=None,
                                       user=None,
                                       microsoft_graph_identity_application=None,
                                       microsoft_graph_identity_device=None,
                                       microsoft_graph_identity_user=None,
                                       categories=None,
                                       collaboration_tags=None,
                                       colleagues=None,
                                       display_name=None,
                                       sponsors=None,
                                       company=None,
                                       description=None,
                                       end_month_year=None,
                                       job_title=None,
                                       role=None,
                                       start_month_year=None,
                                       summary=None,
                                       address=None,
                                       department=None,
                                       microsoft_graph_company_detail_display_name=None,
                                       office_location=None,
                                       pronunciation=None,
                                       web_url=None):
    return client.create_project(user_id=user_id,
                                 id=id_,
                                 allowed_audiences=allowed_audiences,
                                 created_date_time=created_date_time,
                                 inference=inference,
                                 last_modified_date_time=last_modified_date_time,
                                 source=source,
                                 application=application,
                                 device=device,
                                 user=user,
                                 microsoft_graph_identity_application=microsoft_graph_identity_application,
                                 microsoft_graph_identity_device=microsoft_graph_identity_device,
                                 microsoft_graph_identity_user=microsoft_graph_identity_user,
                                 categories=categories,
                                 collaboration_tags=collaboration_tags,
                                 colleagues=colleagues,
                                 display_name=display_name,
                                 sponsors=sponsors,
                                 company=company,
                                 description=description,
                                 end_month_year=end_month_year,
                                 job_title=job_title,
                                 role=role,
                                 start_month_year=start_month_year,
                                 summary=summary,
                                 address=address,
                                 department=department,
                                 microsoft_graph_company_detail_display_name=microsoft_graph_company_detail_display_name,
                                 office_location=office_location,
                                 pronunciation=pronunciation,
                                 web_url=web_url)


def people_user_profile_create_publication(client,
                                           user_id,
                                           id_=None,
                                           allowed_audiences=None,
                                           created_date_time=None,
                                           inference=None,
                                           last_modified_date_time=None,
                                           source=None,
                                           application=None,
                                           device=None,
                                           user=None,
                                           microsoft_graph_identity_application=None,
                                           microsoft_graph_identity_device=None,
                                           microsoft_graph_identity_user=None,
                                           description=None,
                                           display_name=None,
                                           published_date=None,
                                           publisher=None,
                                           thumbnail_url=None,
                                           web_url=None):
    return client.create_publication(user_id=user_id,
                                     id=id_,
                                     allowed_audiences=allowed_audiences,
                                     created_date_time=created_date_time,
                                     inference=inference,
                                     last_modified_date_time=last_modified_date_time,
                                     source=source,
                                     application=application,
                                     device=device,
                                     user=user,
                                     microsoft_graph_identity_application=microsoft_graph_identity_application,
                                     microsoft_graph_identity_device=microsoft_graph_identity_device,
                                     microsoft_graph_identity_user=microsoft_graph_identity_user,
                                     description=description,
                                     display_name=display_name,
                                     published_date=published_date,
                                     publisher=publisher,
                                     thumbnail_url=thumbnail_url,
                                     web_url=web_url)


def people_user_profile_create_skill(client,
                                     user_id,
                                     id_=None,
                                     allowed_audiences=None,
                                     created_date_time=None,
                                     inference=None,
                                     last_modified_date_time=None,
                                     source=None,
                                     application=None,
                                     device=None,
                                     user=None,
                                     microsoft_graph_identity_application=None,
                                     microsoft_graph_identity_device=None,
                                     microsoft_graph_identity_user=None,
                                     categories=None,
                                     collaboration_tags=None,
                                     display_name=None,
                                     proficiency=None,
                                     web_url=None):
    return client.create_skill(user_id=user_id,
                               id=id_,
                               allowed_audiences=allowed_audiences,
                               created_date_time=created_date_time,
                               inference=inference,
                               last_modified_date_time=last_modified_date_time,
                               source=source,
                               application=application,
                               device=device,
                               user=user,
                               microsoft_graph_identity_application=microsoft_graph_identity_application,
                               microsoft_graph_identity_device=microsoft_graph_identity_device,
                               microsoft_graph_identity_user=microsoft_graph_identity_user,
                               categories=categories,
                               collaboration_tags=collaboration_tags,
                               display_name=display_name,
                               proficiency=proficiency,
                               web_url=web_url)


def people_user_profile_create_web_account(client,
                                           user_id,
                                           id_=None,
                                           allowed_audiences=None,
                                           created_date_time=None,
                                           inference=None,
                                           last_modified_date_time=None,
                                           source=None,
                                           application=None,
                                           device=None,
                                           user=None,
                                           microsoft_graph_identity_application=None,
                                           microsoft_graph_identity_device=None,
                                           microsoft_graph_identity_user=None,
                                           description=None,
                                           service=None,
                                           status_message=None,
                                           microsoft_graph_web_account_user_id=None,
                                           web_url=None):
    return client.create_web_account(user_id=user_id,
                                     id=id_,
                                     allowed_audiences=allowed_audiences,
                                     created_date_time=created_date_time,
                                     inference=inference,
                                     last_modified_date_time=last_modified_date_time,
                                     source=source,
                                     application=application,
                                     device=device,
                                     user=user,
                                     microsoft_graph_identity_application=microsoft_graph_identity_application,
                                     microsoft_graph_identity_device=microsoft_graph_identity_device,
                                     microsoft_graph_identity_user=microsoft_graph_identity_user,
                                     description=description,
                                     service=service,
                                     status_message=status_message,
                                     microsoft_graph_web_account_user_id=microsoft_graph_web_account_user_id,
                                     web_url=web_url)


def people_user_profile_create_website(client,
                                       user_id,
                                       id_=None,
                                       allowed_audiences=None,
                                       created_date_time=None,
                                       inference=None,
                                       last_modified_date_time=None,
                                       source=None,
                                       application=None,
                                       device=None,
                                       user=None,
                                       microsoft_graph_identity_application=None,
                                       microsoft_graph_identity_device=None,
                                       microsoft_graph_identity_user=None,
                                       categories=None,
                                       description=None,
                                       display_name=None,
                                       web_url=None):
    return client.create_website(user_id=user_id,
                                 id=id_,
                                 allowed_audiences=allowed_audiences,
                                 created_date_time=created_date_time,
                                 inference=inference,
                                 last_modified_date_time=last_modified_date_time,
                                 source=source,
                                 application=application,
                                 device=device,
                                 user=user,
                                 microsoft_graph_identity_application=microsoft_graph_identity_application,
                                 microsoft_graph_identity_device=microsoft_graph_identity_device,
                                 microsoft_graph_identity_user=microsoft_graph_identity_user,
                                 categories=categories,
                                 description=description,
                                 display_name=display_name,
                                 web_url=web_url)


def people_user_profile_list_account(client,
                                     user_id,
                                     orderby=None,
                                     select=None,
                                     expand=None):
    return client.list_account(user_id=user_id,
                               orderby=orderby,
                               select=select,
                               expand=expand)


def people_user_profile_list_address(client,
                                     user_id,
                                     orderby=None,
                                     select=None,
                                     expand=None):
    return client.list_address(user_id=user_id,
                               orderby=orderby,
                               select=select,
                               expand=expand)


def people_user_profile_list_anniversary(client,
                                         user_id,
                                         orderby=None,
                                         select=None,
                                         expand=None):
    return client.list_anniversary(user_id=user_id,
                                   orderby=orderby,
                                   select=select,
                                   expand=expand)


def people_user_profile_list_award(client,
                                   user_id,
                                   orderby=None,
                                   select=None,
                                   expand=None):
    return client.list_award(user_id=user_id,
                             orderby=orderby,
                             select=select,
                             expand=expand)


def people_user_profile_list_certification(client,
                                           user_id,
                                           orderby=None,
                                           select=None,
                                           expand=None):
    return client.list_certification(user_id=user_id,
                                     orderby=orderby,
                                     select=select,
                                     expand=expand)


def people_user_profile_list_educational_activity(client,
                                                  user_id,
                                                  orderby=None,
                                                  select=None,
                                                  expand=None):
    return client.list_educational_activity(user_id=user_id,
                                            orderby=orderby,
                                            select=select,
                                            expand=expand)


def people_user_profile_list_email(client,
                                   user_id,
                                   orderby=None,
                                   select=None,
                                   expand=None):
    return client.list_email(user_id=user_id,
                             orderby=orderby,
                             select=select,
                             expand=expand)


def people_user_profile_list_interest(client,
                                      user_id,
                                      orderby=None,
                                      select=None,
                                      expand=None):
    return client.list_interest(user_id=user_id,
                                orderby=orderby,
                                select=select,
                                expand=expand)


def people_user_profile_list_language(client,
                                      user_id,
                                      orderby=None,
                                      select=None,
                                      expand=None):
    return client.list_language(user_id=user_id,
                                orderby=orderby,
                                select=select,
                                expand=expand)


def people_user_profile_list_name(client,
                                  user_id,
                                  orderby=None,
                                  select=None,
                                  expand=None):
    return client.list_name(user_id=user_id,
                            orderby=orderby,
                            select=select,
                            expand=expand)


def people_user_profile_list_note(client,
                                  user_id,
                                  orderby=None,
                                  select=None,
                                  expand=None):
    return client.list_note(user_id=user_id,
                            orderby=orderby,
                            select=select,
                            expand=expand)


def people_user_profile_list_patent(client,
                                    user_id,
                                    orderby=None,
                                    select=None,
                                    expand=None):
    return client.list_patent(user_id=user_id,
                              orderby=orderby,
                              select=select,
                              expand=expand)


def people_user_profile_list_phone(client,
                                   user_id,
                                   orderby=None,
                                   select=None,
                                   expand=None):
    return client.list_phone(user_id=user_id,
                             orderby=orderby,
                             select=select,
                             expand=expand)


def people_user_profile_list_position(client,
                                      user_id,
                                      orderby=None,
                                      select=None,
                                      expand=None):
    return client.list_position(user_id=user_id,
                                orderby=orderby,
                                select=select,
                                expand=expand)


def people_user_profile_list_project(client,
                                     user_id,
                                     orderby=None,
                                     select=None,
                                     expand=None):
    return client.list_project(user_id=user_id,
                               orderby=orderby,
                               select=select,
                               expand=expand)


def people_user_profile_list_publication(client,
                                         user_id,
                                         orderby=None,
                                         select=None,
                                         expand=None):
    return client.list_publication(user_id=user_id,
                                   orderby=orderby,
                                   select=select,
                                   expand=expand)


def people_user_profile_list_skill(client,
                                   user_id,
                                   orderby=None,
                                   select=None,
                                   expand=None):
    return client.list_skill(user_id=user_id,
                             orderby=orderby,
                             select=select,
                             expand=expand)


def people_user_profile_list_web_account(client,
                                         user_id,
                                         orderby=None,
                                         select=None,
                                         expand=None):
    return client.list_web_account(user_id=user_id,
                                   orderby=orderby,
                                   select=select,
                                   expand=expand)


def people_user_profile_list_website(client,
                                     user_id,
                                     orderby=None,
                                     select=None,
                                     expand=None):
    return client.list_website(user_id=user_id,
                               orderby=orderby,
                               select=select,
                               expand=expand)


def people_user_profile_show_account(client,
                                     user_id,
                                     user_account_information_id,
                                     select=None,
                                     expand=None):
    return client.get_account(user_id=user_id,
                              user_account_information_id=user_account_information_id,
                              select=select,
                              expand=expand)


def people_user_profile_show_address(client,
                                     user_id,
                                     item_address_id,
                                     select=None,
                                     expand=None):
    return client.get_address(user_id=user_id,
                              item_address_id=item_address_id,
                              select=select,
                              expand=expand)


def people_user_profile_show_anniversary(client,
                                         user_id,
                                         person_anniversary_id,
                                         select=None,
                                         expand=None):
    return client.get_anniversary(user_id=user_id,
                                  person_anniversary_id=person_anniversary_id,
                                  select=select,
                                  expand=expand)


def people_user_profile_show_award(client,
                                   user_id,
                                   person_award_id,
                                   select=None,
                                   expand=None):
    return client.get_award(user_id=user_id,
                            person_award_id=person_award_id,
                            select=select,
                            expand=expand)


def people_user_profile_show_certification(client,
                                           user_id,
                                           person_certification_id,
                                           select=None,
                                           expand=None):
    return client.get_certification(user_id=user_id,
                                    person_certification_id=person_certification_id,
                                    select=select,
                                    expand=expand)


def people_user_profile_show_educational_activity(client,
                                                  user_id,
                                                  educational_activity_id,
                                                  select=None,
                                                  expand=None):
    return client.get_educational_activity(user_id=user_id,
                                           educational_activity_id=educational_activity_id,
                                           select=select,
                                           expand=expand)


def people_user_profile_show_email(client,
                                   user_id,
                                   item_email_id,
                                   select=None,
                                   expand=None):
    return client.get_email(user_id=user_id,
                            item_email_id=item_email_id,
                            select=select,
                            expand=expand)


def people_user_profile_show_interest(client,
                                      user_id,
                                      person_interest_id,
                                      select=None,
                                      expand=None):
    return client.get_interest(user_id=user_id,
                               person_interest_id=person_interest_id,
                               select=select,
                               expand=expand)


def people_user_profile_show_language(client,
                                      user_id,
                                      language_proficiency_id,
                                      select=None,
                                      expand=None):
    return client.get_language(user_id=user_id,
                               language_proficiency_id=language_proficiency_id,
                               select=select,
                               expand=expand)


def people_user_profile_show_name(client,
                                  user_id,
                                  person_name_id,
                                  select=None,
                                  expand=None):
    return client.get_name(user_id=user_id,
                           person_name_id=person_name_id,
                           select=select,
                           expand=expand)


def people_user_profile_show_note(client,
                                  user_id,
                                  person_annotation_id,
                                  select=None,
                                  expand=None):
    return client.get_note(user_id=user_id,
                           person_annotation_id=person_annotation_id,
                           select=select,
                           expand=expand)


def people_user_profile_show_patent(client,
                                    user_id,
                                    item_patent_id,
                                    select=None,
                                    expand=None):
    return client.get_patent(user_id=user_id,
                             item_patent_id=item_patent_id,
                             select=select,
                             expand=expand)


def people_user_profile_show_phone(client,
                                   user_id,
                                   item_phone_id,
                                   select=None,
                                   expand=None):
    return client.get_phone(user_id=user_id,
                            item_phone_id=item_phone_id,
                            select=select,
                            expand=expand)


def people_user_profile_show_position(client,
                                      user_id,
                                      work_position_id,
                                      select=None,
                                      expand=None):
    return client.get_position(user_id=user_id,
                               work_position_id=work_position_id,
                               select=select,
                               expand=expand)


def people_user_profile_show_project(client,
                                     user_id,
                                     project_participation_id,
                                     select=None,
                                     expand=None):
    return client.get_project(user_id=user_id,
                              project_participation_id=project_participation_id,
                              select=select,
                              expand=expand)


def people_user_profile_show_publication(client,
                                         user_id,
                                         item_publication_id,
                                         select=None,
                                         expand=None):
    return client.get_publication(user_id=user_id,
                                  item_publication_id=item_publication_id,
                                  select=select,
                                  expand=expand)


def people_user_profile_show_skill(client,
                                   user_id,
                                   skill_proficiency_id,
                                   select=None,
                                   expand=None):
    return client.get_skill(user_id=user_id,
                            skill_proficiency_id=skill_proficiency_id,
                            select=select,
                            expand=expand)


def people_user_profile_show_web_account(client,
                                         user_id,
                                         web_account_id,
                                         select=None,
                                         expand=None):
    return client.get_web_account(user_id=user_id,
                                  web_account_id=web_account_id,
                                  select=select,
                                  expand=expand)


def people_user_profile_show_website(client,
                                     user_id,
                                     person_website_id,
                                     select=None,
                                     expand=None):
    return client.get_website(user_id=user_id,
                              person_website_id=person_website_id,
                              select=select,
                              expand=expand)


def people_user_profile_update_account(client,
                                       user_id,
                                       user_account_information_id,
                                       id_=None,
                                       allowed_audiences=None,
                                       created_date_time=None,
                                       inference=None,
                                       last_modified_date_time=None,
                                       source=None,
                                       application=None,
                                       device=None,
                                       user=None,
                                       microsoft_graph_identity_application=None,
                                       microsoft_graph_identity_device=None,
                                       microsoft_graph_identity_user=None,
                                       age_group=None,
                                       country_code=None,
                                       preferred_language_tag=None,
                                       user_principal_name=None):
    return client.update_account(user_id=user_id,
                                 user_account_information_id=user_account_information_id,
                                 id=id_,
                                 allowed_audiences=allowed_audiences,
                                 created_date_time=created_date_time,
                                 inference=inference,
                                 last_modified_date_time=last_modified_date_time,
                                 source=source,
                                 application=application,
                                 device=device,
                                 user=user,
                                 microsoft_graph_identity_application=microsoft_graph_identity_application,
                                 microsoft_graph_identity_device=microsoft_graph_identity_device,
                                 microsoft_graph_identity_user=microsoft_graph_identity_user,
                                 age_group=age_group,
                                 country_code=country_code,
                                 preferred_language_tag=preferred_language_tag,
                                 user_principal_name=user_principal_name)


def people_user_profile_update_address(client,
                                       user_id,
                                       item_address_id,
                                       id_=None,
                                       allowed_audiences=None,
                                       created_date_time=None,
                                       inference=None,
                                       last_modified_date_time=None,
                                       source=None,
                                       application=None,
                                       device=None,
                                       user=None,
                                       microsoft_graph_identity_application=None,
                                       microsoft_graph_identity_device=None,
                                       microsoft_graph_identity_user=None,
                                       detail=None,
                                       display_name=None,
                                       geo_coordinates=None):
    return client.update_address(user_id=user_id,
                                 item_address_id=item_address_id,
                                 id=id_,
                                 allowed_audiences=allowed_audiences,
                                 created_date_time=created_date_time,
                                 inference=inference,
                                 last_modified_date_time=last_modified_date_time,
                                 source=source,
                                 application=application,
                                 device=device,
                                 user=user,
                                 microsoft_graph_identity_application=microsoft_graph_identity_application,
                                 microsoft_graph_identity_device=microsoft_graph_identity_device,
                                 microsoft_graph_identity_user=microsoft_graph_identity_user,
                                 detail=detail,
                                 display_name=display_name,
                                 geo_coordinates=geo_coordinates)


def people_user_profile_update_anniversary(client,
                                           user_id,
                                           person_anniversary_id,
                                           id_=None,
                                           allowed_audiences=None,
                                           created_date_time=None,
                                           inference=None,
                                           last_modified_date_time=None,
                                           source=None,
                                           application=None,
                                           device=None,
                                           user=None,
                                           microsoft_graph_identity_application=None,
                                           microsoft_graph_identity_device=None,
                                           microsoft_graph_identity_user=None,
                                           date=None,
                                           type_=None):
    return client.update_anniversary(user_id=user_id,
                                     person_anniversary_id=person_anniversary_id,
                                     id=id_,
                                     allowed_audiences=allowed_audiences,
                                     created_date_time=created_date_time,
                                     inference=inference,
                                     last_modified_date_time=last_modified_date_time,
                                     source=source,
                                     application=application,
                                     device=device,
                                     user=user,
                                     microsoft_graph_identity_application=microsoft_graph_identity_application,
                                     microsoft_graph_identity_device=microsoft_graph_identity_device,
                                     microsoft_graph_identity_user=microsoft_graph_identity_user,
                                     date=date,
                                     type=type_)


def people_user_profile_update_award(client,
                                     user_id,
                                     person_award_id,
                                     id_=None,
                                     allowed_audiences=None,
                                     created_date_time=None,
                                     inference=None,
                                     last_modified_date_time=None,
                                     source=None,
                                     application=None,
                                     device=None,
                                     user=None,
                                     microsoft_graph_identity_application=None,
                                     microsoft_graph_identity_device=None,
                                     microsoft_graph_identity_user=None,
                                     description=None,
                                     display_name=None,
                                     issued_date=None,
                                     issuing_authority=None,
                                     thumbnail_url=None,
                                     web_url=None):
    return client.update_award(user_id=user_id,
                               person_award_id=person_award_id,
                               id=id_,
                               allowed_audiences=allowed_audiences,
                               created_date_time=created_date_time,
                               inference=inference,
                               last_modified_date_time=last_modified_date_time,
                               source=source,
                               application=application,
                               device=device,
                               user=user,
                               microsoft_graph_identity_application=microsoft_graph_identity_application,
                               microsoft_graph_identity_device=microsoft_graph_identity_device,
                               microsoft_graph_identity_user=microsoft_graph_identity_user,
                               description=description,
                               display_name=display_name,
                               issued_date=issued_date,
                               issuing_authority=issuing_authority,
                               thumbnail_url=thumbnail_url,
                               web_url=web_url)


def people_user_profile_update_certification(client,
                                             user_id,
                                             person_certification_id,
                                             id_=None,
                                             allowed_audiences=None,
                                             created_date_time=None,
                                             inference=None,
                                             last_modified_date_time=None,
                                             source=None,
                                             application=None,
                                             device=None,
                                             user=None,
                                             microsoft_graph_identity_application=None,
                                             microsoft_graph_identity_device=None,
                                             microsoft_graph_identity_user=None,
                                             certification_id=None,
                                             description=None,
                                             display_name=None,
                                             end_date=None,
                                             issued_date=None,
                                             issuing_authority=None,
                                             issuing_company=None,
                                             start_date=None,
                                             thumbnail_url=None,
                                             web_url=None):
    return client.update_certification(user_id=user_id,
                                       person_certification_id=person_certification_id,
                                       id=id_,
                                       allowed_audiences=allowed_audiences,
                                       created_date_time=created_date_time,
                                       inference=inference,
                                       last_modified_date_time=last_modified_date_time,
                                       source=source,
                                       application=application,
                                       device=device,
                                       user=user,
                                       microsoft_graph_identity_application=microsoft_graph_identity_application,
                                       microsoft_graph_identity_device=microsoft_graph_identity_device,
                                       microsoft_graph_identity_user=microsoft_graph_identity_user,
                                       certification_id=certification_id,
                                       description=description,
                                       display_name=display_name,
                                       end_date=end_date,
                                       issued_date=issued_date,
                                       issuing_authority=issuing_authority,
                                       issuing_company=issuing_company,
                                       start_date=start_date,
                                       thumbnail_url=thumbnail_url,
                                       web_url=web_url)


def people_user_profile_update_educational_activity(client,
                                                    user_id,
                                                    educational_activity_id,
                                                    id_=None,
                                                    allowed_audiences=None,
                                                    created_date_time=None,
                                                    inference=None,
                                                    last_modified_date_time=None,
                                                    source=None,
                                                    application=None,
                                                    device=None,
                                                    user=None,
                                                    microsoft_graph_identity_application=None,
                                                    microsoft_graph_identity_device=None,
                                                    microsoft_graph_identity_user=None,
                                                    completion_month_year=None,
                                                    end_month_year=None,
                                                    program=None,
                                                    start_month_year=None,
                                                    description=None,
                                                    display_name=None,
                                                    location=None,
                                                    web_url=None):
    return client.update_educational_activity(user_id=user_id,
                                              educational_activity_id=educational_activity_id,
                                              id=id_,
                                              allowed_audiences=allowed_audiences,
                                              created_date_time=created_date_time,
                                              inference=inference,
                                              last_modified_date_time=last_modified_date_time,
                                              source=source,
                                              application=application,
                                              device=device,
                                              user=user,
                                              microsoft_graph_identity_application=microsoft_graph_identity_application,
                                              microsoft_graph_identity_device=microsoft_graph_identity_device,
                                              microsoft_graph_identity_user=microsoft_graph_identity_user,
                                              completion_month_year=completion_month_year,
                                              end_month_year=end_month_year,
                                              program=program,
                                              start_month_year=start_month_year,
                                              description=description,
                                              display_name=display_name,
                                              location=location,
                                              web_url=web_url)


def people_user_profile_update_email(client,
                                     user_id,
                                     item_email_id,
                                     id_=None,
                                     allowed_audiences=None,
                                     created_date_time=None,
                                     inference=None,
                                     last_modified_date_time=None,
                                     source=None,
                                     application=None,
                                     device=None,
                                     user=None,
                                     microsoft_graph_identity_application=None,
                                     microsoft_graph_identity_device=None,
                                     microsoft_graph_identity_user=None,
                                     address=None,
                                     display_name=None,
                                     type_=None):
    return client.update_email(user_id=user_id,
                               item_email_id=item_email_id,
                               id=id_,
                               allowed_audiences=allowed_audiences,
                               created_date_time=created_date_time,
                               inference=inference,
                               last_modified_date_time=last_modified_date_time,
                               source=source,
                               application=application,
                               device=device,
                               user=user,
                               microsoft_graph_identity_application=microsoft_graph_identity_application,
                               microsoft_graph_identity_device=microsoft_graph_identity_device,
                               microsoft_graph_identity_user=microsoft_graph_identity_user,
                               address=address,
                               display_name=display_name,
                               type=type_)


def people_user_profile_update_interest(client,
                                        user_id,
                                        person_interest_id,
                                        id_=None,
                                        allowed_audiences=None,
                                        created_date_time=None,
                                        inference=None,
                                        last_modified_date_time=None,
                                        source=None,
                                        application=None,
                                        device=None,
                                        user=None,
                                        microsoft_graph_identity_application=None,
                                        microsoft_graph_identity_device=None,
                                        microsoft_graph_identity_user=None,
                                        categories=None,
                                        collaboration_tags=None,
                                        description=None,
                                        display_name=None,
                                        web_url=None):
    return client.update_interest(user_id=user_id,
                                  person_interest_id=person_interest_id,
                                  id=id_,
                                  allowed_audiences=allowed_audiences,
                                  created_date_time=created_date_time,
                                  inference=inference,
                                  last_modified_date_time=last_modified_date_time,
                                  source=source,
                                  application=application,
                                  device=device,
                                  user=user,
                                  microsoft_graph_identity_application=microsoft_graph_identity_application,
                                  microsoft_graph_identity_device=microsoft_graph_identity_device,
                                  microsoft_graph_identity_user=microsoft_graph_identity_user,
                                  categories=categories,
                                  collaboration_tags=collaboration_tags,
                                  description=description,
                                  display_name=display_name,
                                  web_url=web_url)


def people_user_profile_update_language(client,
                                        user_id,
                                        language_proficiency_id,
                                        id_=None,
                                        allowed_audiences=None,
                                        created_date_time=None,
                                        inference=None,
                                        last_modified_date_time=None,
                                        source=None,
                                        application=None,
                                        device=None,
                                        user=None,
                                        microsoft_graph_identity_application=None,
                                        microsoft_graph_identity_device=None,
                                        microsoft_graph_identity_user=None,
                                        display_name=None,
                                        proficiency=None,
                                        reading=None,
                                        spoken=None,
                                        tag=None,
                                        written=None):
    return client.update_language(user_id=user_id,
                                  language_proficiency_id=language_proficiency_id,
                                  id=id_,
                                  allowed_audiences=allowed_audiences,
                                  created_date_time=created_date_time,
                                  inference=inference,
                                  last_modified_date_time=last_modified_date_time,
                                  source=source,
                                  application=application,
                                  device=device,
                                  user=user,
                                  microsoft_graph_identity_application=microsoft_graph_identity_application,
                                  microsoft_graph_identity_device=microsoft_graph_identity_device,
                                  microsoft_graph_identity_user=microsoft_graph_identity_user,
                                  display_name=display_name,
                                  proficiency=proficiency,
                                  reading=reading,
                                  spoken=spoken,
                                  tag=tag,
                                  written=written)


def people_user_profile_update_name(client,
                                    user_id,
                                    person_name_id,
                                    id_=None,
                                    allowed_audiences=None,
                                    created_date_time=None,
                                    inference=None,
                                    last_modified_date_time=None,
                                    source=None,
                                    application=None,
                                    device=None,
                                    user=None,
                                    microsoft_graph_identity_application=None,
                                    microsoft_graph_identity_device=None,
                                    microsoft_graph_identity_user=None,
                                    display_name=None,
                                    first=None,
                                    initials=None,
                                    language_tag=None,
                                    last=None,
                                    maiden=None,
                                    middle=None,
                                    nickname=None,
                                    pronunciation=None,
                                    suffix=None,
                                    title=None):
    return client.update_name(user_id=user_id,
                              person_name_id=person_name_id,
                              id=id_,
                              allowed_audiences=allowed_audiences,
                              created_date_time=created_date_time,
                              inference=inference,
                              last_modified_date_time=last_modified_date_time,
                              source=source,
                              application=application,
                              device=device,
                              user=user,
                              microsoft_graph_identity_application=microsoft_graph_identity_application,
                              microsoft_graph_identity_device=microsoft_graph_identity_device,
                              microsoft_graph_identity_user=microsoft_graph_identity_user,
                              display_name=display_name,
                              first=first,
                              initials=initials,
                              language_tag=language_tag,
                              last=last,
                              maiden=maiden,
                              middle=middle,
                              nickname=nickname,
                              pronunciation=pronunciation,
                              suffix=suffix,
                              title=title)


def people_user_profile_update_note(client,
                                    user_id,
                                    person_annotation_id,
                                    id_=None,
                                    allowed_audiences=None,
                                    created_date_time=None,
                                    inference=None,
                                    last_modified_date_time=None,
                                    source=None,
                                    application=None,
                                    device=None,
                                    user=None,
                                    microsoft_graph_identity_application=None,
                                    microsoft_graph_identity_device=None,
                                    microsoft_graph_identity_user=None,
                                    detail=None,
                                    display_name=None):
    return client.update_note(user_id=user_id,
                              person_annotation_id=person_annotation_id,
                              id=id_,
                              allowed_audiences=allowed_audiences,
                              created_date_time=created_date_time,
                              inference=inference,
                              last_modified_date_time=last_modified_date_time,
                              source=source,
                              application=application,
                              device=device,
                              user=user,
                              microsoft_graph_identity_application=microsoft_graph_identity_application,
                              microsoft_graph_identity_device=microsoft_graph_identity_device,
                              microsoft_graph_identity_user=microsoft_graph_identity_user,
                              detail=detail,
                              display_name=display_name)


def people_user_profile_update_patent(client,
                                      user_id,
                                      item_patent_id,
                                      id_=None,
                                      allowed_audiences=None,
                                      created_date_time=None,
                                      inference=None,
                                      last_modified_date_time=None,
                                      source=None,
                                      application=None,
                                      device=None,
                                      user=None,
                                      microsoft_graph_identity_application=None,
                                      microsoft_graph_identity_device=None,
                                      microsoft_graph_identity_user=None,
                                      description=None,
                                      display_name=None,
                                      is_pending=None,
                                      issued_date=None,
                                      issuing_authority=None,
                                      number=None,
                                      web_url=None):
    return client.update_patent(user_id=user_id,
                                item_patent_id=item_patent_id,
                                id=id_,
                                allowed_audiences=allowed_audiences,
                                created_date_time=created_date_time,
                                inference=inference,
                                last_modified_date_time=last_modified_date_time,
                                source=source,
                                application=application,
                                device=device,
                                user=user,
                                microsoft_graph_identity_application=microsoft_graph_identity_application,
                                microsoft_graph_identity_device=microsoft_graph_identity_device,
                                microsoft_graph_identity_user=microsoft_graph_identity_user,
                                description=description,
                                display_name=display_name,
                                is_pending=is_pending,
                                issued_date=issued_date,
                                issuing_authority=issuing_authority,
                                number=number,
                                web_url=web_url)


def people_user_profile_update_phone(client,
                                     user_id,
                                     item_phone_id,
                                     id_=None,
                                     allowed_audiences=None,
                                     created_date_time=None,
                                     inference=None,
                                     last_modified_date_time=None,
                                     source=None,
                                     application=None,
                                     device=None,
                                     user=None,
                                     microsoft_graph_identity_application=None,
                                     microsoft_graph_identity_device=None,
                                     microsoft_graph_identity_user=None,
                                     display_name=None,
                                     number=None,
                                     type_=None):
    return client.update_phone(user_id=user_id,
                               item_phone_id=item_phone_id,
                               id=id_,
                               allowed_audiences=allowed_audiences,
                               created_date_time=created_date_time,
                               inference=inference,
                               last_modified_date_time=last_modified_date_time,
                               source=source,
                               application=application,
                               device=device,
                               user=user,
                               microsoft_graph_identity_application=microsoft_graph_identity_application,
                               microsoft_graph_identity_device=microsoft_graph_identity_device,
                               microsoft_graph_identity_user=microsoft_graph_identity_user,
                               display_name=display_name,
                               number=number,
                               type=type_)


def people_user_profile_update_position(client,
                                        user_id,
                                        work_position_id,
                                        id_=None,
                                        allowed_audiences=None,
                                        created_date_time=None,
                                        inference=None,
                                        last_modified_date_time=None,
                                        source=None,
                                        application=None,
                                        device=None,
                                        user=None,
                                        microsoft_graph_identity_application=None,
                                        microsoft_graph_identity_device=None,
                                        microsoft_graph_identity_user=None,
                                        categories=None,
                                        colleagues=None,
                                        is_current=None,
                                        manager=None,
                                        company=None,
                                        description=None,
                                        end_month_year=None,
                                        job_title=None,
                                        role=None,
                                        start_month_year=None,
                                        summary=None):
    return client.update_position(user_id=user_id,
                                  work_position_id=work_position_id,
                                  id=id_,
                                  allowed_audiences=allowed_audiences,
                                  created_date_time=created_date_time,
                                  inference=inference,
                                  last_modified_date_time=last_modified_date_time,
                                  source=source,
                                  application=application,
                                  device=device,
                                  user=user,
                                  microsoft_graph_identity_application=microsoft_graph_identity_application,
                                  microsoft_graph_identity_device=microsoft_graph_identity_device,
                                  microsoft_graph_identity_user=microsoft_graph_identity_user,
                                  categories=categories,
                                  colleagues=colleagues,
                                  is_current=is_current,
                                  manager=manager,
                                  company=company,
                                  description=description,
                                  end_month_year=end_month_year,
                                  job_title=job_title,
                                  role=role,
                                  start_month_year=start_month_year,
                                  summary=summary)


def people_user_profile_update_project(client,
                                       user_id,
                                       project_participation_id,
                                       id_=None,
                                       allowed_audiences=None,
                                       created_date_time=None,
                                       inference=None,
                                       last_modified_date_time=None,
                                       source=None,
                                       application=None,
                                       device=None,
                                       user=None,
                                       microsoft_graph_identity_application=None,
                                       microsoft_graph_identity_device=None,
                                       microsoft_graph_identity_user=None,
                                       categories=None,
                                       collaboration_tags=None,
                                       colleagues=None,
                                       display_name=None,
                                       sponsors=None,
                                       company=None,
                                       description=None,
                                       end_month_year=None,
                                       job_title=None,
                                       role=None,
                                       start_month_year=None,
                                       summary=None,
                                       address=None,
                                       department=None,
                                       microsoft_graph_company_detail_display_name=None,
                                       office_location=None,
                                       pronunciation=None,
                                       web_url=None):
    return client.update_project(user_id=user_id,
                                 project_participation_id=project_participation_id,
                                 id=id_,
                                 allowed_audiences=allowed_audiences,
                                 created_date_time=created_date_time,
                                 inference=inference,
                                 last_modified_date_time=last_modified_date_time,
                                 source=source,
                                 application=application,
                                 device=device,
                                 user=user,
                                 microsoft_graph_identity_application=microsoft_graph_identity_application,
                                 microsoft_graph_identity_device=microsoft_graph_identity_device,
                                 microsoft_graph_identity_user=microsoft_graph_identity_user,
                                 categories=categories,
                                 collaboration_tags=collaboration_tags,
                                 colleagues=colleagues,
                                 display_name=display_name,
                                 sponsors=sponsors,
                                 company=company,
                                 description=description,
                                 end_month_year=end_month_year,
                                 job_title=job_title,
                                 role=role,
                                 start_month_year=start_month_year,
                                 summary=summary,
                                 address=address,
                                 department=department,
                                 microsoft_graph_company_detail_display_name=microsoft_graph_company_detail_display_name,
                                 office_location=office_location,
                                 pronunciation=pronunciation,
                                 web_url=web_url)


def people_user_profile_update_publication(client,
                                           user_id,
                                           item_publication_id,
                                           id_=None,
                                           allowed_audiences=None,
                                           created_date_time=None,
                                           inference=None,
                                           last_modified_date_time=None,
                                           source=None,
                                           application=None,
                                           device=None,
                                           user=None,
                                           microsoft_graph_identity_application=None,
                                           microsoft_graph_identity_device=None,
                                           microsoft_graph_identity_user=None,
                                           description=None,
                                           display_name=None,
                                           published_date=None,
                                           publisher=None,
                                           thumbnail_url=None,
                                           web_url=None):
    return client.update_publication(user_id=user_id,
                                     item_publication_id=item_publication_id,
                                     id=id_,
                                     allowed_audiences=allowed_audiences,
                                     created_date_time=created_date_time,
                                     inference=inference,
                                     last_modified_date_time=last_modified_date_time,
                                     source=source,
                                     application=application,
                                     device=device,
                                     user=user,
                                     microsoft_graph_identity_application=microsoft_graph_identity_application,
                                     microsoft_graph_identity_device=microsoft_graph_identity_device,
                                     microsoft_graph_identity_user=microsoft_graph_identity_user,
                                     description=description,
                                     display_name=display_name,
                                     published_date=published_date,
                                     publisher=publisher,
                                     thumbnail_url=thumbnail_url,
                                     web_url=web_url)


def people_user_profile_update_skill(client,
                                     user_id,
                                     skill_proficiency_id,
                                     id_=None,
                                     allowed_audiences=None,
                                     created_date_time=None,
                                     inference=None,
                                     last_modified_date_time=None,
                                     source=None,
                                     application=None,
                                     device=None,
                                     user=None,
                                     microsoft_graph_identity_application=None,
                                     microsoft_graph_identity_device=None,
                                     microsoft_graph_identity_user=None,
                                     categories=None,
                                     collaboration_tags=None,
                                     display_name=None,
                                     proficiency=None,
                                     web_url=None):
    return client.update_skill(user_id=user_id,
                               skill_proficiency_id=skill_proficiency_id,
                               id=id_,
                               allowed_audiences=allowed_audiences,
                               created_date_time=created_date_time,
                               inference=inference,
                               last_modified_date_time=last_modified_date_time,
                               source=source,
                               application=application,
                               device=device,
                               user=user,
                               microsoft_graph_identity_application=microsoft_graph_identity_application,
                               microsoft_graph_identity_device=microsoft_graph_identity_device,
                               microsoft_graph_identity_user=microsoft_graph_identity_user,
                               categories=categories,
                               collaboration_tags=collaboration_tags,
                               display_name=display_name,
                               proficiency=proficiency,
                               web_url=web_url)


def people_user_profile_update_web_account(client,
                                           user_id,
                                           web_account_id,
                                           id_=None,
                                           allowed_audiences=None,
                                           created_date_time=None,
                                           inference=None,
                                           last_modified_date_time=None,
                                           source=None,
                                           application=None,
                                           device=None,
                                           user=None,
                                           microsoft_graph_identity_application=None,
                                           microsoft_graph_identity_device=None,
                                           microsoft_graph_identity_user=None,
                                           description=None,
                                           service=None,
                                           status_message=None,
                                           microsoft_graph_web_account_user_id=None,
                                           web_url=None):
    return client.update_web_account(user_id=user_id,
                                     web_account_id=web_account_id,
                                     id=id_,
                                     allowed_audiences=allowed_audiences,
                                     created_date_time=created_date_time,
                                     inference=inference,
                                     last_modified_date_time=last_modified_date_time,
                                     source=source,
                                     application=application,
                                     device=device,
                                     user=user,
                                     microsoft_graph_identity_application=microsoft_graph_identity_application,
                                     microsoft_graph_identity_device=microsoft_graph_identity_device,
                                     microsoft_graph_identity_user=microsoft_graph_identity_user,
                                     description=description,
                                     service=service,
                                     status_message=status_message,
                                     microsoft_graph_web_account_user_id=microsoft_graph_web_account_user_id,
                                     web_url=web_url)


def people_user_profile_update_website(client,
                                       user_id,
                                       person_website_id,
                                       id_=None,
                                       allowed_audiences=None,
                                       created_date_time=None,
                                       inference=None,
                                       last_modified_date_time=None,
                                       source=None,
                                       application=None,
                                       device=None,
                                       user=None,
                                       microsoft_graph_identity_application=None,
                                       microsoft_graph_identity_device=None,
                                       microsoft_graph_identity_user=None,
                                       categories=None,
                                       description=None,
                                       display_name=None,
                                       web_url=None):
    return client.update_website(user_id=user_id,
                                 person_website_id=person_website_id,
                                 id=id_,
                                 allowed_audiences=allowed_audiences,
                                 created_date_time=created_date_time,
                                 inference=inference,
                                 last_modified_date_time=last_modified_date_time,
                                 source=source,
                                 application=application,
                                 device=device,
                                 user=user,
                                 microsoft_graph_identity_application=microsoft_graph_identity_application,
                                 microsoft_graph_identity_device=microsoft_graph_identity_device,
                                 microsoft_graph_identity_user=microsoft_graph_identity_user,
                                 categories=categories,
                                 description=description,
                                 display_name=display_name,
                                 web_url=web_url)
