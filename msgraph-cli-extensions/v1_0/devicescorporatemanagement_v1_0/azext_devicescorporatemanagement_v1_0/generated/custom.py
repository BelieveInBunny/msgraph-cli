# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=line-too-long
# pylint: disable=too-many-lines


def devicescorporatemanagement_get_device_app_management(client,
                                                         select=None,
                                                         expand=None):
    return client.get_device_app_management(select=select,
                                            expand=expand)


def devicescorporatemanagement_update_device_app_management(client,
                                                            id_=None,
                                                            is_enabled_for_microsoft_store_for_business=None,
                                                            microsoft_store_for_business_language=None,
                                                            microsoft_store_for_business_last_completed_application_sync_time=None,
                                                            microsoft_store_for_business_last_successful_sync_date_time=None,
                                                            managed_e_books=None,
                                                            mobile_app_categories=None,
                                                            mobile_app_configurations=None,
                                                            mobile_apps=None,
                                                            vpp_tokens=None,
                                                            android_managed_app_protections=None,
                                                            default_managed_app_protections=None,
                                                            ios_managed_app_protections=None,
                                                            managed_app_policies=None,
                                                            managed_app_registrations=None,
                                                            managed_app_statuses=None,
                                                            mdm_windows_information_protection_policies=None,
                                                            targeted_managed_app_configurations=None,
                                                            windows_information_protection_policies=None):
    return client.update_device_app_management(id=id_,
                                               is_enabled_for_microsoft_store_for_business=is_enabled_for_microsoft_store_for_business,
                                               microsoft_store_for_business_language=microsoft_store_for_business_language,
                                               microsoft_store_for_business_last_completed_application_sync_time=microsoft_store_for_business_last_completed_application_sync_time,
                                               microsoft_store_for_business_last_successful_sync_date_time=microsoft_store_for_business_last_successful_sync_date_time,
                                               managed_e_books=managed_e_books,
                                               mobile_app_categories=mobile_app_categories,
                                               mobile_app_configurations=mobile_app_configurations,
                                               mobile_apps=mobile_apps,
                                               vpp_tokens=vpp_tokens,
                                               android_managed_app_protections=android_managed_app_protections,
                                               default_managed_app_protections=default_managed_app_protections,
                                               ios_managed_app_protections=ios_managed_app_protections,
                                               managed_app_policies=managed_app_policies,
                                               managed_app_registrations=managed_app_registrations,
                                               managed_app_statuses=managed_app_statuses,
                                               mdm_windows_information_protection_policies=mdm_windows_information_protection_policies,
                                               targeted_managed_app_configurations=targeted_managed_app_configurations,
                                               windows_information_protection_policies=windows_information_protection_policies)


def devicescorporatemanagement_delete(client,
                                      android_managed_app_protection_id=None,
                                      if_match=None,
                                      default_managed_app_protection_id=None,
                                      ios_managed_app_protection_id=None,
                                      managed_app_policy_id=None,
                                      managed_app_registration_id=None,
                                      managed_app_status_id=None,
                                      managed_e_book_id=None,
                                      mdm_windows_information_protection_policy_id=None,
                                      mobile_app_category_id=None,
                                      managed_device_mobile_app_configuration_id=None,
                                      mobile_app_id=None,
                                      targeted_managed_app_configuration_id=None,
                                      vpp_token_id=None,
                                      windows_information_protection_policy_id=None):
    if android_managed_app_protection_id is not None:
        return client.delete_android_managed_app_protection(android_managed_app_protection_id=android_managed_app_protection_id,
                                                            if_match=if_match)
    elif default_managed_app_protection_id is not None:
        return client.delete_default_managed_app_protection(default_managed_app_protection_id=default_managed_app_protection_id,
                                                            if_match=if_match)
    elif ios_managed_app_protection_id is not None:
        return client.delete_io_managed_app_protection(ios_managed_app_protection_id=ios_managed_app_protection_id,
                                                       if_match=if_match)
    elif managed_app_policy_id is not None:
        return client.delete_managed_app_policy(managed_app_policy_id=managed_app_policy_id,
                                                if_match=if_match)
    elif managed_app_registration_id is not None:
        return client.delete_managed_app_registration(managed_app_registration_id=managed_app_registration_id,
                                                      if_match=if_match)
    elif managed_app_status_id is not None:
        return client.delete_managed_app_statuses(managed_app_status_id=managed_app_status_id,
                                                  if_match=if_match)
    elif managed_e_book_id is not None:
        return client.delete_managed_e_book(managed_e_book_id=managed_e_book_id,
                                            if_match=if_match)
    elif mdm_windows_information_protection_policy_id is not None:
        return client.delete_mdm_window_information_protection_policy(mdm_windows_information_protection_policy_id=mdm_windows_information_protection_policy_id,
                                                                      if_match=if_match)
    elif mobile_app_category_id is not None:
        return client.delete_mobile_app_category(mobile_app_category_id=mobile_app_category_id,
                                                 if_match=if_match)
    elif managed_device_mobile_app_configuration_id is not None:
        return client.delete_mobile_app_configuration(managed_device_mobile_app_configuration_id=managed_device_mobile_app_configuration_id,
                                                      if_match=if_match)
    elif mobile_app_id is not None:
        return client.delete_mobile_app(mobile_app_id=mobile_app_id,
                                        if_match=if_match)
    elif targeted_managed_app_configuration_id is not None:
        return client.delete_targeted_managed_app_configuration(targeted_managed_app_configuration_id=targeted_managed_app_configuration_id,
                                                                if_match=if_match)
    elif vpp_token_id is not None:
        return client.delete_vpp_token(vpp_token_id=vpp_token_id,
                                       if_match=if_match)
    return client.delete_window_information_protection_policy(windows_information_protection_policy_id=windows_information_protection_policy_id,
                                                              if_match=if_match)


def devicescorporatemanagement_create_android_managed_app_protection(client,
                                                                     body):
    return client.create_android_managed_app_protection(body=body)


def devicescorporatemanagement_create_default_managed_app_protection(client,
                                                                     body):
    return client.create_default_managed_app_protection(body=body)


def devicescorporatemanagement_create_io_managed_app_protection(client,
                                                                body):
    return client.create_io_managed_app_protection(body=body)


def devicescorporatemanagement_create_managed_app_policy(client,
                                                         id_=None,
                                                         created_date_time=None,
                                                         description=None,
                                                         display_name=None,
                                                         last_modified_date_time=None,
                                                         version=None):
    return client.create_managed_app_policy(id=id_,
                                            created_date_time=created_date_time,
                                            description=description,
                                            display_name=display_name,
                                            last_modified_date_time=last_modified_date_time,
                                            version=version)


def devicescorporatemanagement_create_managed_app_registration(client,
                                                               id_=None,
                                                               app_identifier=None,
                                                               application_version=None,
                                                               created_date_time=None,
                                                               device_name=None,
                                                               device_tag=None,
                                                               device_type=None,
                                                               flagged_reasons=None,
                                                               last_sync_date_time=None,
                                                               management_sdk_version=None,
                                                               platform_version=None,
                                                               user_id=None,
                                                               version=None,
                                                               applied_policies=None,
                                                               intended_policies=None,
                                                               operations=None):
    return client.create_managed_app_registration(id=id_,
                                                  app_identifier=app_identifier,
                                                  application_version=application_version,
                                                  created_date_time=created_date_time,
                                                  device_name=device_name,
                                                  device_tag=device_tag,
                                                  device_type=device_type,
                                                  flagged_reasons=flagged_reasons,
                                                  last_sync_date_time=last_sync_date_time,
                                                  management_sdk_version=management_sdk_version,
                                                  platform_version=platform_version,
                                                  user_id=user_id,
                                                  version=version,
                                                  applied_policies=applied_policies,
                                                  intended_policies=intended_policies,
                                                  operations=operations)


def devicescorporatemanagement_create_managed_app_statuses(client,
                                                           id_=None,
                                                           display_name=None,
                                                           version=None):
    return client.create_managed_app_statuses(id=id_,
                                              display_name=display_name,
                                              version=version)


def devicescorporatemanagement_create_managed_e_book(client,
                                                     id_=None,
                                                     created_date_time=None,
                                                     description=None,
                                                     display_name=None,
                                                     information_url=None,
                                                     large_cover=None,
                                                     last_modified_date_time=None,
                                                     privacy_information_url=None,
                                                     published_date_time=None,
                                                     publisher=None,
                                                     assignments=None,
                                                     device_states=None,
                                                     install_summary=None,
                                                     user_state_summary=None):
    return client.create_managed_e_book(id=id_,
                                        created_date_time=created_date_time,
                                        description=description,
                                        display_name=display_name,
                                        information_url=information_url,
                                        large_cover=large_cover,
                                        last_modified_date_time=last_modified_date_time,
                                        privacy_information_url=privacy_information_url,
                                        published_date_time=published_date_time,
                                        publisher=publisher,
                                        assignments=assignments,
                                        device_states=device_states,
                                        install_summary=install_summary,
                                        user_state_summary=user_state_summary)


def devicescorporatemanagement_create_mdm_window_information_protection_policy(client,
                                                                               id_=None,
                                                                               created_date_time=None,
                                                                               description=None,
                                                                               display_name=None,
                                                                               last_modified_date_time=None,
                                                                               version=None,
                                                                               azure_rights_management_services_allowed=None,
                                                                               data_recovery_certificate=None,
                                                                               enforcement_level=None,
                                                                               enterprise_domain=None,
                                                                               enterprise_internal_proxy_servers=None,
                                                                               enterprise_ip_ranges=None,
                                                                               enterprise_ip_ranges_are_authoritative=None,
                                                                               enterprise_network_domain_names=None,
                                                                               enterprise_protected_domain_names=None,
                                                                               enterprise_proxied_domains=None,
                                                                               enterprise_proxy_servers=None,
                                                                               enterprise_proxy_servers_are_authoritative=None,
                                                                               exempt_apps=None,
                                                                               icons_visible=None,
                                                                               indexing_encrypted_stores_or_items_blocked=None,
                                                                               is_assigned=None,
                                                                               neutral_domain_resources=None,
                                                                               protected_apps=None,
                                                                               protection_under_lock_config_required=None,
                                                                               revoke_on_unenroll_disabled=None,
                                                                               rights_management_services_template_id=None,
                                                                               smb_auto_encrypted_file_extensions=None,
                                                                               assignments=None,
                                                                               exempt_app_locker_files=None,
                                                                               protected_app_locker_files=None):
    return client.create_mdm_window_information_protection_policy(id=id_,
                                                                  created_date_time=created_date_time,
                                                                  description=description,
                                                                  display_name=display_name,
                                                                  last_modified_date_time=last_modified_date_time,
                                                                  version=version,
                                                                  azure_rights_management_services_allowed=azure_rights_management_services_allowed,
                                                                  data_recovery_certificate=data_recovery_certificate,
                                                                  enforcement_level=enforcement_level,
                                                                  enterprise_domain=enterprise_domain,
                                                                  enterprise_internal_proxy_servers=enterprise_internal_proxy_servers,
                                                                  enterprise_ip_ranges=enterprise_ip_ranges,
                                                                  enterprise_ip_ranges_are_authoritative=enterprise_ip_ranges_are_authoritative,
                                                                  enterprise_network_domain_names=enterprise_network_domain_names,
                                                                  enterprise_protected_domain_names=enterprise_protected_domain_names,
                                                                  enterprise_proxied_domains=enterprise_proxied_domains,
                                                                  enterprise_proxy_servers=enterprise_proxy_servers,
                                                                  enterprise_proxy_servers_are_authoritative=enterprise_proxy_servers_are_authoritative,
                                                                  exempt_apps=exempt_apps,
                                                                  icons_visible=icons_visible,
                                                                  indexing_encrypted_stores_or_items_blocked=indexing_encrypted_stores_or_items_blocked,
                                                                  is_assigned=is_assigned,
                                                                  neutral_domain_resources=neutral_domain_resources,
                                                                  protected_apps=protected_apps,
                                                                  protection_under_lock_config_required=protection_under_lock_config_required,
                                                                  revoke_on_unenroll_disabled=revoke_on_unenroll_disabled,
                                                                  rights_management_services_template_id=rights_management_services_template_id,
                                                                  smb_auto_encrypted_file_extensions=smb_auto_encrypted_file_extensions,
                                                                  assignments=assignments,
                                                                  exempt_app_locker_files=exempt_app_locker_files,
                                                                  protected_app_locker_files=protected_app_locker_files)


def devicescorporatemanagement_create_mobile_app(client,
                                                 id_=None,
                                                 created_date_time=None,
                                                 description=None,
                                                 developer=None,
                                                 display_name=None,
                                                 information_url=None,
                                                 is_featured=None,
                                                 large_icon=None,
                                                 last_modified_date_time=None,
                                                 notes=None,
                                                 owner=None,
                                                 privacy_information_url=None,
                                                 publisher=None,
                                                 publishing_state=None,
                                                 assignments=None,
                                                 categories=None):
    return client.create_mobile_app(id=id_,
                                    created_date_time=created_date_time,
                                    description=description,
                                    developer=developer,
                                    display_name=display_name,
                                    information_url=information_url,
                                    is_featured=is_featured,
                                    large_icon=large_icon,
                                    last_modified_date_time=last_modified_date_time,
                                    notes=notes,
                                    owner=owner,
                                    privacy_information_url=privacy_information_url,
                                    publisher=publisher,
                                    publishing_state=publishing_state,
                                    assignments=assignments,
                                    categories=categories)


def devicescorporatemanagement_create_mobile_app_category(client,
                                                          id_=None,
                                                          display_name=None,
                                                          last_modified_date_time=None):
    return client.create_mobile_app_category(id=id_,
                                             display_name=display_name,
                                             last_modified_date_time=last_modified_date_time)


def devicescorporatemanagement_create_mobile_app_configuration(client,
                                                               id_=None,
                                                               created_date_time=None,
                                                               description=None,
                                                               display_name=None,
                                                               last_modified_date_time=None,
                                                               targeted_mobile_apps=None,
                                                               version=None,
                                                               assignments=None,
                                                               device_statuses=None,
                                                               device_status_summary=None,
                                                               user_statuses=None,
                                                               user_status_summary=None):
    return client.create_mobile_app_configuration(id=id_,
                                                  created_date_time=created_date_time,
                                                  description=description,
                                                  display_name=display_name,
                                                  last_modified_date_time=last_modified_date_time,
                                                  targeted_mobile_apps=targeted_mobile_apps,
                                                  version=version,
                                                  assignments=assignments,
                                                  device_statuses=device_statuses,
                                                  device_status_summary=device_status_summary,
                                                  user_statuses=user_statuses,
                                                  user_status_summary=user_status_summary)


def devicescorporatemanagement_create_targeted_managed_app_configuration(client,
                                                                         id_=None,
                                                                         created_date_time=None,
                                                                         description=None,
                                                                         display_name=None,
                                                                         last_modified_date_time=None,
                                                                         version=None,
                                                                         custom_settings=None,
                                                                         deployed_app_count=None,
                                                                         is_assigned=None,
                                                                         apps=None,
                                                                         assignments=None,
                                                                         deployment_summary_id=None,
                                                                         deployment_summary_configuration_deployed_user_count=None,
                                                                         deployment_summary_configuration_deployment_summary_per_app=None,
                                                                         deployment_summary_display_name=None,
                                                                         deployment_summary_last_refresh_time=None,
                                                                         deployment_summary_version=None):
    return client.create_targeted_managed_app_configuration(id=id_,
                                                            created_date_time=created_date_time,
                                                            description=description,
                                                            display_name=display_name,
                                                            last_modified_date_time=last_modified_date_time,
                                                            version=version,
                                                            custom_settings=custom_settings,
                                                            deployed_app_count=deployed_app_count,
                                                            is_assigned=is_assigned,
                                                            apps=apps,
                                                            assignments=assignments,
                                                            microsoft_graph_entity_id=deployment_summary_id,
                                                            configuration_deployed_user_count=deployment_summary_configuration_deployed_user_count,
                                                            configuration_deployment_summary_per_app=deployment_summary_configuration_deployment_summary_per_app,
                                                            microsoft_graph_managed_app_policy_deployment_summary_display_name=deployment_summary_display_name,
                                                            last_refresh_time=deployment_summary_last_refresh_time,
                                                            microsoft_graph_managed_app_policy_deployment_summary_version=deployment_summary_version)


def devicescorporatemanagement_create_vpp_token(client,
                                                id_=None,
                                                apple_id=None,
                                                automatically_update_apps=None,
                                                country_or_region=None,
                                                expiration_date_time=None,
                                                last_modified_date_time=None,
                                                last_sync_date_time=None,
                                                last_sync_status=None,
                                                organization_name=None,
                                                state=None,
                                                token=None,
                                                vpp_token_account_type=None):
    return client.create_vpp_token(id=id_,
                                   apple_id=apple_id,
                                   automatically_update_apps=automatically_update_apps,
                                   country_or_region=country_or_region,
                                   expiration_date_time=expiration_date_time,
                                   last_modified_date_time=last_modified_date_time,
                                   last_sync_date_time=last_sync_date_time,
                                   last_sync_status=last_sync_status,
                                   organization_name=organization_name,
                                   state=state,
                                   token=token,
                                   vpp_token_account_type=vpp_token_account_type)


def devicescorporatemanagement_create_window_information_protection_policy(client,
                                                                           id_=None,
                                                                           created_date_time=None,
                                                                           description=None,
                                                                           display_name=None,
                                                                           last_modified_date_time=None,
                                                                           version=None,
                                                                           azure_rights_management_services_allowed=None,
                                                                           data_recovery_certificate=None,
                                                                           enforcement_level=None,
                                                                           enterprise_domain=None,
                                                                           enterprise_internal_proxy_servers=None,
                                                                           enterprise_ip_ranges=None,
                                                                           enterprise_ip_ranges_are_authoritative=None,
                                                                           enterprise_network_domain_names=None,
                                                                           enterprise_protected_domain_names=None,
                                                                           enterprise_proxied_domains=None,
                                                                           enterprise_proxy_servers=None,
                                                                           enterprise_proxy_servers_are_authoritative=None,
                                                                           exempt_apps=None,
                                                                           icons_visible=None,
                                                                           indexing_encrypted_stores_or_items_blocked=None,
                                                                           is_assigned=None,
                                                                           neutral_domain_resources=None,
                                                                           protected_apps=None,
                                                                           protection_under_lock_config_required=None,
                                                                           revoke_on_unenroll_disabled=None,
                                                                           rights_management_services_template_id=None,
                                                                           smb_auto_encrypted_file_extensions=None,
                                                                           assignments=None,
                                                                           exempt_app_locker_files=None,
                                                                           protected_app_locker_files=None,
                                                                           days_without_contact_before_unenroll=None,
                                                                           mdm_enrollment_url=None,
                                                                           minutes_of_inactivity_before_device_lock=None,
                                                                           number_of_past_pins_remembered=None,
                                                                           password_maximum_attempt_count=None,
                                                                           pin_expiration_days=None,
                                                                           pin_lowercase_letters=None,
                                                                           pin_minimum_length=None,
                                                                           pin_special_characters=None,
                                                                           pin_uppercase_letters=None,
                                                                           revoke_on_mdm_handoff_disabled=None,
                                                                           windows_hello_for_business_blocked=None):
    return client.create_window_information_protection_policy(id=id_,
                                                              created_date_time=created_date_time,
                                                              description=description,
                                                              display_name=display_name,
                                                              last_modified_date_time=last_modified_date_time,
                                                              version=version,
                                                              azure_rights_management_services_allowed=azure_rights_management_services_allowed,
                                                              data_recovery_certificate=data_recovery_certificate,
                                                              enforcement_level=enforcement_level,
                                                              enterprise_domain=enterprise_domain,
                                                              enterprise_internal_proxy_servers=enterprise_internal_proxy_servers,
                                                              enterprise_ip_ranges=enterprise_ip_ranges,
                                                              enterprise_ip_ranges_are_authoritative=enterprise_ip_ranges_are_authoritative,
                                                              enterprise_network_domain_names=enterprise_network_domain_names,
                                                              enterprise_protected_domain_names=enterprise_protected_domain_names,
                                                              enterprise_proxied_domains=enterprise_proxied_domains,
                                                              enterprise_proxy_servers=enterprise_proxy_servers,
                                                              enterprise_proxy_servers_are_authoritative=enterprise_proxy_servers_are_authoritative,
                                                              exempt_apps=exempt_apps,
                                                              icons_visible=icons_visible,
                                                              indexing_encrypted_stores_or_items_blocked=indexing_encrypted_stores_or_items_blocked,
                                                              is_assigned=is_assigned,
                                                              neutral_domain_resources=neutral_domain_resources,
                                                              protected_apps=protected_apps,
                                                              protection_under_lock_config_required=protection_under_lock_config_required,
                                                              revoke_on_unenroll_disabled=revoke_on_unenroll_disabled,
                                                              rights_management_services_template_id=rights_management_services_template_id,
                                                              smb_auto_encrypted_file_extensions=smb_auto_encrypted_file_extensions,
                                                              assignments=assignments,
                                                              exempt_app_locker_files=exempt_app_locker_files,
                                                              protected_app_locker_files=protected_app_locker_files,
                                                              days_without_contact_before_unenroll=days_without_contact_before_unenroll,
                                                              mdm_enrollment_url=mdm_enrollment_url,
                                                              minutes_of_inactivity_before_device_lock=minutes_of_inactivity_before_device_lock,
                                                              number_of_past_pins_remembered=number_of_past_pins_remembered,
                                                              password_maximum_attempt_count=password_maximum_attempt_count,
                                                              pin_expiration_days=pin_expiration_days,
                                                              pin_lowercase_letters=pin_lowercase_letters,
                                                              pin_minimum_length=pin_minimum_length,
                                                              pin_special_characters=pin_special_characters,
                                                              pin_uppercase_letters=pin_uppercase_letters,
                                                              revoke_on_mdm_handoff_disabled=revoke_on_mdm_handoff_disabled,
                                                              windows_hello_for_business_blocked=windows_hello_for_business_blocked)


def devicescorporatemanagement_get_android_managed_app_protection(client,
                                                                  android_managed_app_protection_id,
                                                                  select=None,
                                                                  expand=None):
    return client.get_android_managed_app_protection(android_managed_app_protection_id=android_managed_app_protection_id,
                                                     select=select,
                                                     expand=expand)


def devicescorporatemanagement_get_default_managed_app_protection(client,
                                                                  default_managed_app_protection_id,
                                                                  select=None,
                                                                  expand=None):
    return client.get_default_managed_app_protection(default_managed_app_protection_id=default_managed_app_protection_id,
                                                     select=select,
                                                     expand=expand)


def devicescorporatemanagement_get_io_managed_app_protection(client,
                                                             ios_managed_app_protection_id,
                                                             select=None,
                                                             expand=None):
    return client.get_io_managed_app_protection(ios_managed_app_protection_id=ios_managed_app_protection_id,
                                                select=select,
                                                expand=expand)


def devicescorporatemanagement_get_managed_app_policy(client,
                                                      managed_app_policy_id,
                                                      select=None,
                                                      expand=None):
    return client.get_managed_app_policy(managed_app_policy_id=managed_app_policy_id,
                                         select=select,
                                         expand=expand)


def devicescorporatemanagement_get_managed_app_registration(client,
                                                            managed_app_registration_id,
                                                            select=None,
                                                            expand=None):
    return client.get_managed_app_registration(managed_app_registration_id=managed_app_registration_id,
                                               select=select,
                                               expand=expand)


def devicescorporatemanagement_get_managed_app_statuses(client,
                                                        managed_app_status_id,
                                                        select=None,
                                                        expand=None):
    return client.get_managed_app_statuses(managed_app_status_id=managed_app_status_id,
                                           select=select,
                                           expand=expand)


def devicescorporatemanagement_get_managed_e_book(client,
                                                  managed_e_book_id,
                                                  select=None,
                                                  expand=None):
    return client.get_managed_e_book(managed_e_book_id=managed_e_book_id,
                                     select=select,
                                     expand=expand)


def devicescorporatemanagement_get_mdm_window_information_protection_policy(client,
                                                                            mdm_windows_information_protection_policy_id,
                                                                            select=None,
                                                                            expand=None):
    return client.get_mdm_window_information_protection_policy(mdm_windows_information_protection_policy_id=mdm_windows_information_protection_policy_id,
                                                               select=select,
                                                               expand=expand)


def devicescorporatemanagement_get_mobile_app(client,
                                              mobile_app_id,
                                              select=None,
                                              expand=None):
    return client.get_mobile_app(mobile_app_id=mobile_app_id,
                                 select=select,
                                 expand=expand)


def devicescorporatemanagement_get_mobile_app_category(client,
                                                       mobile_app_category_id,
                                                       select=None,
                                                       expand=None):
    return client.get_mobile_app_category(mobile_app_category_id=mobile_app_category_id,
                                          select=select,
                                          expand=expand)


def devicescorporatemanagement_get_mobile_app_configuration(client,
                                                            managed_device_mobile_app_configuration_id,
                                                            select=None,
                                                            expand=None):
    return client.get_mobile_app_configuration(managed_device_mobile_app_configuration_id=managed_device_mobile_app_configuration_id,
                                               select=select,
                                               expand=expand)


def devicescorporatemanagement_get_targeted_managed_app_configuration(client,
                                                                      targeted_managed_app_configuration_id,
                                                                      select=None,
                                                                      expand=None):
    return client.get_targeted_managed_app_configuration(targeted_managed_app_configuration_id=targeted_managed_app_configuration_id,
                                                         select=select,
                                                         expand=expand)


def devicescorporatemanagement_get_vpp_token(client,
                                             vpp_token_id,
                                             select=None,
                                             expand=None):
    return client.get_vpp_token(vpp_token_id=vpp_token_id,
                                select=select,
                                expand=expand)


def devicescorporatemanagement_get_window_information_protection_policy(client,
                                                                        windows_information_protection_policy_id,
                                                                        select=None,
                                                                        expand=None):
    return client.get_window_information_protection_policy(windows_information_protection_policy_id=windows_information_protection_policy_id,
                                                           select=select,
                                                           expand=expand)


def devicescorporatemanagement_list_android_managed_app_protection(client,
                                                                   orderby=None,
                                                                   select=None,
                                                                   expand=None):
    return client.list_android_managed_app_protection(orderby=orderby,
                                                      select=select,
                                                      expand=expand)


def devicescorporatemanagement_list_default_managed_app_protection(client,
                                                                   orderby=None,
                                                                   select=None,
                                                                   expand=None):
    return client.list_default_managed_app_protection(orderby=orderby,
                                                      select=select,
                                                      expand=expand)


def devicescorporatemanagement_list_io_managed_app_protection(client,
                                                              orderby=None,
                                                              select=None,
                                                              expand=None):
    return client.list_io_managed_app_protection(orderby=orderby,
                                                 select=select,
                                                 expand=expand)


def devicescorporatemanagement_list_managed_app_policy(client,
                                                       orderby=None,
                                                       select=None,
                                                       expand=None):
    return client.list_managed_app_policy(orderby=orderby,
                                          select=select,
                                          expand=expand)


def devicescorporatemanagement_list_managed_app_registration(client,
                                                             orderby=None,
                                                             select=None,
                                                             expand=None):
    return client.list_managed_app_registration(orderby=orderby,
                                                select=select,
                                                expand=expand)


def devicescorporatemanagement_list_managed_app_statuses(client,
                                                         orderby=None,
                                                         select=None,
                                                         expand=None):
    return client.list_managed_app_statuses(orderby=orderby,
                                            select=select,
                                            expand=expand)


def devicescorporatemanagement_list_managed_e_book(client,
                                                   orderby=None,
                                                   select=None,
                                                   expand=None):
    return client.list_managed_e_book(orderby=orderby,
                                      select=select,
                                      expand=expand)


def devicescorporatemanagement_list_mdm_window_information_protection_policy(client,
                                                                             orderby=None,
                                                                             select=None,
                                                                             expand=None):
    return client.list_mdm_window_information_protection_policy(orderby=orderby,
                                                                select=select,
                                                                expand=expand)


def devicescorporatemanagement_list_mobile_app(client,
                                               orderby=None,
                                               select=None,
                                               expand=None):
    return client.list_mobile_app(orderby=orderby,
                                  select=select,
                                  expand=expand)


def devicescorporatemanagement_list_mobile_app_category(client,
                                                        orderby=None,
                                                        select=None,
                                                        expand=None):
    return client.list_mobile_app_category(orderby=orderby,
                                           select=select,
                                           expand=expand)


def devicescorporatemanagement_list_mobile_app_configuration(client,
                                                             orderby=None,
                                                             select=None,
                                                             expand=None):
    return client.list_mobile_app_configuration(orderby=orderby,
                                                select=select,
                                                expand=expand)


def devicescorporatemanagement_list_targeted_managed_app_configuration(client,
                                                                       orderby=None,
                                                                       select=None,
                                                                       expand=None):
    return client.list_targeted_managed_app_configuration(orderby=orderby,
                                                          select=select,
                                                          expand=expand)


def devicescorporatemanagement_list_vpp_token(client,
                                              orderby=None,
                                              select=None,
                                              expand=None):
    return client.list_vpp_token(orderby=orderby,
                                 select=select,
                                 expand=expand)


def devicescorporatemanagement_list_window_information_protection_policy(client,
                                                                         orderby=None,
                                                                         select=None,
                                                                         expand=None):
    return client.list_window_information_protection_policy(orderby=orderby,
                                                            select=select,
                                                            expand=expand)


def devicescorporatemanagement_sync_microsoft_store_for_business_app(client):
    return client.sync_microsoft_store_for_business_app()


def devicescorporatemanagement_update_android_managed_app_protection(client,
                                                                     android_managed_app_protection_id,
                                                                     body):
    return client.update_android_managed_app_protection(android_managed_app_protection_id=android_managed_app_protection_id,
                                                        body=body)


def devicescorporatemanagement_update_default_managed_app_protection(client,
                                                                     default_managed_app_protection_id,
                                                                     body):
    return client.update_default_managed_app_protection(default_managed_app_protection_id=default_managed_app_protection_id,
                                                        body=body)


def devicescorporatemanagement_update_io_managed_app_protection(client,
                                                                ios_managed_app_protection_id,
                                                                body):
    return client.update_io_managed_app_protection(ios_managed_app_protection_id=ios_managed_app_protection_id,
                                                   body=body)


def devicescorporatemanagement_update_managed_app_policy(client,
                                                         managed_app_policy_id,
                                                         id_=None,
                                                         created_date_time=None,
                                                         description=None,
                                                         display_name=None,
                                                         last_modified_date_time=None,
                                                         version=None):
    return client.update_managed_app_policy(managed_app_policy_id=managed_app_policy_id,
                                            id=id_,
                                            created_date_time=created_date_time,
                                            description=description,
                                            display_name=display_name,
                                            last_modified_date_time=last_modified_date_time,
                                            version=version)


def devicescorporatemanagement_update_managed_app_registration(client,
                                                               managed_app_registration_id,
                                                               id_=None,
                                                               app_identifier=None,
                                                               application_version=None,
                                                               created_date_time=None,
                                                               device_name=None,
                                                               device_tag=None,
                                                               device_type=None,
                                                               flagged_reasons=None,
                                                               last_sync_date_time=None,
                                                               management_sdk_version=None,
                                                               platform_version=None,
                                                               user_id=None,
                                                               version=None,
                                                               applied_policies=None,
                                                               intended_policies=None,
                                                               operations=None):
    return client.update_managed_app_registration(managed_app_registration_id=managed_app_registration_id,
                                                  id=id_,
                                                  app_identifier=app_identifier,
                                                  application_version=application_version,
                                                  created_date_time=created_date_time,
                                                  device_name=device_name,
                                                  device_tag=device_tag,
                                                  device_type=device_type,
                                                  flagged_reasons=flagged_reasons,
                                                  last_sync_date_time=last_sync_date_time,
                                                  management_sdk_version=management_sdk_version,
                                                  platform_version=platform_version,
                                                  user_id=user_id,
                                                  version=version,
                                                  applied_policies=applied_policies,
                                                  intended_policies=intended_policies,
                                                  operations=operations)


def devicescorporatemanagement_update_managed_app_statuses(client,
                                                           managed_app_status_id,
                                                           id_=None,
                                                           display_name=None,
                                                           version=None):
    return client.update_managed_app_statuses(managed_app_status_id=managed_app_status_id,
                                              id=id_,
                                              display_name=display_name,
                                              version=version)


def devicescorporatemanagement_update_managed_e_book(client,
                                                     managed_e_book_id,
                                                     id_=None,
                                                     created_date_time=None,
                                                     description=None,
                                                     display_name=None,
                                                     information_url=None,
                                                     large_cover=None,
                                                     last_modified_date_time=None,
                                                     privacy_information_url=None,
                                                     published_date_time=None,
                                                     publisher=None,
                                                     assignments=None,
                                                     device_states=None,
                                                     install_summary=None,
                                                     user_state_summary=None):
    return client.update_managed_e_book(managed_e_book_id=managed_e_book_id,
                                        id=id_,
                                        created_date_time=created_date_time,
                                        description=description,
                                        display_name=display_name,
                                        information_url=information_url,
                                        large_cover=large_cover,
                                        last_modified_date_time=last_modified_date_time,
                                        privacy_information_url=privacy_information_url,
                                        published_date_time=published_date_time,
                                        publisher=publisher,
                                        assignments=assignments,
                                        device_states=device_states,
                                        install_summary=install_summary,
                                        user_state_summary=user_state_summary)


def devicescorporatemanagement_update_mdm_window_information_protection_policy(client,
                                                                               mdm_windows_information_protection_policy_id,
                                                                               id_=None,
                                                                               created_date_time=None,
                                                                               description=None,
                                                                               display_name=None,
                                                                               last_modified_date_time=None,
                                                                               version=None,
                                                                               azure_rights_management_services_allowed=None,
                                                                               data_recovery_certificate=None,
                                                                               enforcement_level=None,
                                                                               enterprise_domain=None,
                                                                               enterprise_internal_proxy_servers=None,
                                                                               enterprise_ip_ranges=None,
                                                                               enterprise_ip_ranges_are_authoritative=None,
                                                                               enterprise_network_domain_names=None,
                                                                               enterprise_protected_domain_names=None,
                                                                               enterprise_proxied_domains=None,
                                                                               enterprise_proxy_servers=None,
                                                                               enterprise_proxy_servers_are_authoritative=None,
                                                                               exempt_apps=None,
                                                                               icons_visible=None,
                                                                               indexing_encrypted_stores_or_items_blocked=None,
                                                                               is_assigned=None,
                                                                               neutral_domain_resources=None,
                                                                               protected_apps=None,
                                                                               protection_under_lock_config_required=None,
                                                                               revoke_on_unenroll_disabled=None,
                                                                               rights_management_services_template_id=None,
                                                                               smb_auto_encrypted_file_extensions=None,
                                                                               assignments=None,
                                                                               exempt_app_locker_files=None,
                                                                               protected_app_locker_files=None):
    return client.update_mdm_window_information_protection_policy(mdm_windows_information_protection_policy_id=mdm_windows_information_protection_policy_id,
                                                                  id=id_,
                                                                  created_date_time=created_date_time,
                                                                  description=description,
                                                                  display_name=display_name,
                                                                  last_modified_date_time=last_modified_date_time,
                                                                  version=version,
                                                                  azure_rights_management_services_allowed=azure_rights_management_services_allowed,
                                                                  data_recovery_certificate=data_recovery_certificate,
                                                                  enforcement_level=enforcement_level,
                                                                  enterprise_domain=enterprise_domain,
                                                                  enterprise_internal_proxy_servers=enterprise_internal_proxy_servers,
                                                                  enterprise_ip_ranges=enterprise_ip_ranges,
                                                                  enterprise_ip_ranges_are_authoritative=enterprise_ip_ranges_are_authoritative,
                                                                  enterprise_network_domain_names=enterprise_network_domain_names,
                                                                  enterprise_protected_domain_names=enterprise_protected_domain_names,
                                                                  enterprise_proxied_domains=enterprise_proxied_domains,
                                                                  enterprise_proxy_servers=enterprise_proxy_servers,
                                                                  enterprise_proxy_servers_are_authoritative=enterprise_proxy_servers_are_authoritative,
                                                                  exempt_apps=exempt_apps,
                                                                  icons_visible=icons_visible,
                                                                  indexing_encrypted_stores_or_items_blocked=indexing_encrypted_stores_or_items_blocked,
                                                                  is_assigned=is_assigned,
                                                                  neutral_domain_resources=neutral_domain_resources,
                                                                  protected_apps=protected_apps,
                                                                  protection_under_lock_config_required=protection_under_lock_config_required,
                                                                  revoke_on_unenroll_disabled=revoke_on_unenroll_disabled,
                                                                  rights_management_services_template_id=rights_management_services_template_id,
                                                                  smb_auto_encrypted_file_extensions=smb_auto_encrypted_file_extensions,
                                                                  assignments=assignments,
                                                                  exempt_app_locker_files=exempt_app_locker_files,
                                                                  protected_app_locker_files=protected_app_locker_files)


def devicescorporatemanagement_update_mobile_app(client,
                                                 mobile_app_id,
                                                 id_=None,
                                                 created_date_time=None,
                                                 description=None,
                                                 developer=None,
                                                 display_name=None,
                                                 information_url=None,
                                                 is_featured=None,
                                                 large_icon=None,
                                                 last_modified_date_time=None,
                                                 notes=None,
                                                 owner=None,
                                                 privacy_information_url=None,
                                                 publisher=None,
                                                 publishing_state=None,
                                                 assignments=None,
                                                 categories=None):
    return client.update_mobile_app(mobile_app_id=mobile_app_id,
                                    id=id_,
                                    created_date_time=created_date_time,
                                    description=description,
                                    developer=developer,
                                    display_name=display_name,
                                    information_url=information_url,
                                    is_featured=is_featured,
                                    large_icon=large_icon,
                                    last_modified_date_time=last_modified_date_time,
                                    notes=notes,
                                    owner=owner,
                                    privacy_information_url=privacy_information_url,
                                    publisher=publisher,
                                    publishing_state=publishing_state,
                                    assignments=assignments,
                                    categories=categories)


def devicescorporatemanagement_update_mobile_app_category(client,
                                                          mobile_app_category_id,
                                                          id_=None,
                                                          display_name=None,
                                                          last_modified_date_time=None):
    return client.update_mobile_app_category(mobile_app_category_id=mobile_app_category_id,
                                             id=id_,
                                             display_name=display_name,
                                             last_modified_date_time=last_modified_date_time)


def devicescorporatemanagement_update_mobile_app_configuration(client,
                                                               managed_device_mobile_app_configuration_id,
                                                               id_=None,
                                                               created_date_time=None,
                                                               description=None,
                                                               display_name=None,
                                                               last_modified_date_time=None,
                                                               targeted_mobile_apps=None,
                                                               version=None,
                                                               assignments=None,
                                                               device_statuses=None,
                                                               device_status_summary=None,
                                                               user_statuses=None,
                                                               user_status_summary=None):
    return client.update_mobile_app_configuration(managed_device_mobile_app_configuration_id=managed_device_mobile_app_configuration_id,
                                                  id=id_,
                                                  created_date_time=created_date_time,
                                                  description=description,
                                                  display_name=display_name,
                                                  last_modified_date_time=last_modified_date_time,
                                                  targeted_mobile_apps=targeted_mobile_apps,
                                                  version=version,
                                                  assignments=assignments,
                                                  device_statuses=device_statuses,
                                                  device_status_summary=device_status_summary,
                                                  user_statuses=user_statuses,
                                                  user_status_summary=user_status_summary)


def devicescorporatemanagement_update_targeted_managed_app_configuration(client,
                                                                         targeted_managed_app_configuration_id,
                                                                         id_=None,
                                                                         created_date_time=None,
                                                                         description=None,
                                                                         display_name=None,
                                                                         last_modified_date_time=None,
                                                                         version=None,
                                                                         custom_settings=None,
                                                                         deployed_app_count=None,
                                                                         is_assigned=None,
                                                                         apps=None,
                                                                         assignments=None,
                                                                         deployment_summary_id=None,
                                                                         deployment_summary_configuration_deployed_user_count=None,
                                                                         deployment_summary_configuration_deployment_summary_per_app=None,
                                                                         deployment_summary_display_name=None,
                                                                         deployment_summary_last_refresh_time=None,
                                                                         deployment_summary_version=None):
    return client.update_targeted_managed_app_configuration(targeted_managed_app_configuration_id=targeted_managed_app_configuration_id,
                                                            id=id_,
                                                            created_date_time=created_date_time,
                                                            description=description,
                                                            display_name=display_name,
                                                            last_modified_date_time=last_modified_date_time,
                                                            version=version,
                                                            custom_settings=custom_settings,
                                                            deployed_app_count=deployed_app_count,
                                                            is_assigned=is_assigned,
                                                            apps=apps,
                                                            assignments=assignments,
                                                            microsoft_graph_entity_id=deployment_summary_id,
                                                            configuration_deployed_user_count=deployment_summary_configuration_deployed_user_count,
                                                            configuration_deployment_summary_per_app=deployment_summary_configuration_deployment_summary_per_app,
                                                            microsoft_graph_managed_app_policy_deployment_summary_display_name=deployment_summary_display_name,
                                                            last_refresh_time=deployment_summary_last_refresh_time,
                                                            microsoft_graph_managed_app_policy_deployment_summary_version=deployment_summary_version)


def devicescorporatemanagement_update_vpp_token(client,
                                                vpp_token_id,
                                                id_=None,
                                                apple_id=None,
                                                automatically_update_apps=None,
                                                country_or_region=None,
                                                expiration_date_time=None,
                                                last_modified_date_time=None,
                                                last_sync_date_time=None,
                                                last_sync_status=None,
                                                organization_name=None,
                                                state=None,
                                                token=None,
                                                vpp_token_account_type=None):
    return client.update_vpp_token(vpp_token_id=vpp_token_id,
                                   id=id_,
                                   apple_id=apple_id,
                                   automatically_update_apps=automatically_update_apps,
                                   country_or_region=country_or_region,
                                   expiration_date_time=expiration_date_time,
                                   last_modified_date_time=last_modified_date_time,
                                   last_sync_date_time=last_sync_date_time,
                                   last_sync_status=last_sync_status,
                                   organization_name=organization_name,
                                   state=state,
                                   token=token,
                                   vpp_token_account_type=vpp_token_account_type)


def devicescorporatemanagement_update_window_information_protection_policy(client,
                                                                           windows_information_protection_policy_id,
                                                                           id_=None,
                                                                           created_date_time=None,
                                                                           description=None,
                                                                           display_name=None,
                                                                           last_modified_date_time=None,
                                                                           version=None,
                                                                           azure_rights_management_services_allowed=None,
                                                                           data_recovery_certificate=None,
                                                                           enforcement_level=None,
                                                                           enterprise_domain=None,
                                                                           enterprise_internal_proxy_servers=None,
                                                                           enterprise_ip_ranges=None,
                                                                           enterprise_ip_ranges_are_authoritative=None,
                                                                           enterprise_network_domain_names=None,
                                                                           enterprise_protected_domain_names=None,
                                                                           enterprise_proxied_domains=None,
                                                                           enterprise_proxy_servers=None,
                                                                           enterprise_proxy_servers_are_authoritative=None,
                                                                           exempt_apps=None,
                                                                           icons_visible=None,
                                                                           indexing_encrypted_stores_or_items_blocked=None,
                                                                           is_assigned=None,
                                                                           neutral_domain_resources=None,
                                                                           protected_apps=None,
                                                                           protection_under_lock_config_required=None,
                                                                           revoke_on_unenroll_disabled=None,
                                                                           rights_management_services_template_id=None,
                                                                           smb_auto_encrypted_file_extensions=None,
                                                                           assignments=None,
                                                                           exempt_app_locker_files=None,
                                                                           protected_app_locker_files=None,
                                                                           days_without_contact_before_unenroll=None,
                                                                           mdm_enrollment_url=None,
                                                                           minutes_of_inactivity_before_device_lock=None,
                                                                           number_of_past_pins_remembered=None,
                                                                           password_maximum_attempt_count=None,
                                                                           pin_expiration_days=None,
                                                                           pin_lowercase_letters=None,
                                                                           pin_minimum_length=None,
                                                                           pin_special_characters=None,
                                                                           pin_uppercase_letters=None,
                                                                           revoke_on_mdm_handoff_disabled=None,
                                                                           windows_hello_for_business_blocked=None):
    return client.update_window_information_protection_policy(windows_information_protection_policy_id=windows_information_protection_policy_id,
                                                              id=id_,
                                                              created_date_time=created_date_time,
                                                              description=description,
                                                              display_name=display_name,
                                                              last_modified_date_time=last_modified_date_time,
                                                              version=version,
                                                              azure_rights_management_services_allowed=azure_rights_management_services_allowed,
                                                              data_recovery_certificate=data_recovery_certificate,
                                                              enforcement_level=enforcement_level,
                                                              enterprise_domain=enterprise_domain,
                                                              enterprise_internal_proxy_servers=enterprise_internal_proxy_servers,
                                                              enterprise_ip_ranges=enterprise_ip_ranges,
                                                              enterprise_ip_ranges_are_authoritative=enterprise_ip_ranges_are_authoritative,
                                                              enterprise_network_domain_names=enterprise_network_domain_names,
                                                              enterprise_protected_domain_names=enterprise_protected_domain_names,
                                                              enterprise_proxied_domains=enterprise_proxied_domains,
                                                              enterprise_proxy_servers=enterprise_proxy_servers,
                                                              enterprise_proxy_servers_are_authoritative=enterprise_proxy_servers_are_authoritative,
                                                              exempt_apps=exempt_apps,
                                                              icons_visible=icons_visible,
                                                              indexing_encrypted_stores_or_items_blocked=indexing_encrypted_stores_or_items_blocked,
                                                              is_assigned=is_assigned,
                                                              neutral_domain_resources=neutral_domain_resources,
                                                              protected_apps=protected_apps,
                                                              protection_under_lock_config_required=protection_under_lock_config_required,
                                                              revoke_on_unenroll_disabled=revoke_on_unenroll_disabled,
                                                              rights_management_services_template_id=rights_management_services_template_id,
                                                              smb_auto_encrypted_file_extensions=smb_auto_encrypted_file_extensions,
                                                              assignments=assignments,
                                                              exempt_app_locker_files=exempt_app_locker_files,
                                                              protected_app_locker_files=protected_app_locker_files,
                                                              days_without_contact_before_unenroll=days_without_contact_before_unenroll,
                                                              mdm_enrollment_url=mdm_enrollment_url,
                                                              minutes_of_inactivity_before_device_lock=minutes_of_inactivity_before_device_lock,
                                                              number_of_past_pins_remembered=number_of_past_pins_remembered,
                                                              password_maximum_attempt_count=password_maximum_attempt_count,
                                                              pin_expiration_days=pin_expiration_days,
                                                              pin_lowercase_letters=pin_lowercase_letters,
                                                              pin_minimum_length=pin_minimum_length,
                                                              pin_special_characters=pin_special_characters,
                                                              pin_uppercase_letters=pin_uppercase_letters,
                                                              revoke_on_mdm_handoff_disabled=revoke_on_mdm_handoff_disabled,
                                                              windows_hello_for_business_blocked=windows_hello_for_business_blocked)


def devicescorporatemanagement_delete(client,
                                      android_managed_app_protection_id,
                                      managed_mobile_app_id=None,
                                      if_match=None):
    if android_managed_app_protection_id is not None and managed_mobile_app_id is not None:
        return client.delete_app(android_managed_app_protection_id=android_managed_app_protection_id,
                                 managed_mobile_app_id=managed_mobile_app_id,
                                 if_match=if_match)
    return client.delete_deployment_summary(android_managed_app_protection_id=android_managed_app_protection_id,
                                            if_match=if_match)


def devicescorporatemanagement_create_app(client,
                                          android_managed_app_protection_id,
                                          id_=None,
                                          mobile_app_identifier=None,
                                          version=None):
    return client.create_app(android_managed_app_protection_id=android_managed_app_protection_id,
                             id=id_,
                             mobile_app_identifier=mobile_app_identifier,
                             version=version)


def devicescorporatemanagement_get_app(client,
                                       android_managed_app_protection_id,
                                       managed_mobile_app_id,
                                       select=None,
                                       expand=None):
    return client.get_app(android_managed_app_protection_id=android_managed_app_protection_id,
                          managed_mobile_app_id=managed_mobile_app_id,
                          select=select,
                          expand=expand)


def devicescorporatemanagement_get_deployment_summary(client,
                                                      android_managed_app_protection_id,
                                                      select=None,
                                                      expand=None):
    return client.get_deployment_summary(android_managed_app_protection_id=android_managed_app_protection_id,
                                         select=select,
                                         expand=expand)


def devicescorporatemanagement_list_app(client,
                                        android_managed_app_protection_id,
                                        orderby=None,
                                        select=None,
                                        expand=None):
    return client.list_app(android_managed_app_protection_id=android_managed_app_protection_id,
                           orderby=orderby,
                           select=select,
                           expand=expand)


def devicescorporatemanagement_update_app(client,
                                          android_managed_app_protection_id,
                                          managed_mobile_app_id,
                                          id_=None,
                                          mobile_app_identifier=None,
                                          version=None):
    return client.update_app(android_managed_app_protection_id=android_managed_app_protection_id,
                             managed_mobile_app_id=managed_mobile_app_id,
                             id=id_,
                             mobile_app_identifier=mobile_app_identifier,
                             version=version)


def devicescorporatemanagement_update_deployment_summary(client,
                                                         android_managed_app_protection_id,
                                                         id_=None,
                                                         configuration_deployed_user_count=None,
                                                         configuration_deployment_summary_per_app=None,
                                                         display_name=None,
                                                         last_refresh_time=None,
                                                         version=None):
    return client.update_deployment_summary(android_managed_app_protection_id=android_managed_app_protection_id,
                                            id=id_,
                                            configuration_deployed_user_count=configuration_deployed_user_count,
                                            configuration_deployment_summary_per_app=configuration_deployment_summary_per_app,
                                            display_name=display_name,
                                            last_refresh_time=last_refresh_time,
                                            version=version)


def devicescorporatemanagement_delete(client,
                                      default_managed_app_protection_id,
                                      managed_mobile_app_id=None,
                                      if_match=None):
    if default_managed_app_protection_id is not None and managed_mobile_app_id is not None:
        return client.delete_app(default_managed_app_protection_id=default_managed_app_protection_id,
                                 managed_mobile_app_id=managed_mobile_app_id,
                                 if_match=if_match)
    return client.delete_deployment_summary(default_managed_app_protection_id=default_managed_app_protection_id,
                                            if_match=if_match)


def devicescorporatemanagement_create_app(client,
                                          default_managed_app_protection_id,
                                          id_=None,
                                          mobile_app_identifier=None,
                                          version=None):
    return client.create_app(default_managed_app_protection_id=default_managed_app_protection_id,
                             id=id_,
                             mobile_app_identifier=mobile_app_identifier,
                             version=version)


def devicescorporatemanagement_get_app(client,
                                       default_managed_app_protection_id,
                                       managed_mobile_app_id,
                                       select=None,
                                       expand=None):
    return client.get_app(default_managed_app_protection_id=default_managed_app_protection_id,
                          managed_mobile_app_id=managed_mobile_app_id,
                          select=select,
                          expand=expand)


def devicescorporatemanagement_get_deployment_summary(client,
                                                      default_managed_app_protection_id,
                                                      select=None,
                                                      expand=None):
    return client.get_deployment_summary(default_managed_app_protection_id=default_managed_app_protection_id,
                                         select=select,
                                         expand=expand)


def devicescorporatemanagement_list_app(client,
                                        default_managed_app_protection_id,
                                        orderby=None,
                                        select=None,
                                        expand=None):
    return client.list_app(default_managed_app_protection_id=default_managed_app_protection_id,
                           orderby=orderby,
                           select=select,
                           expand=expand)


def devicescorporatemanagement_update_app(client,
                                          default_managed_app_protection_id,
                                          managed_mobile_app_id,
                                          id_=None,
                                          mobile_app_identifier=None,
                                          version=None):
    return client.update_app(default_managed_app_protection_id=default_managed_app_protection_id,
                             managed_mobile_app_id=managed_mobile_app_id,
                             id=id_,
                             mobile_app_identifier=mobile_app_identifier,
                             version=version)


def devicescorporatemanagement_update_deployment_summary(client,
                                                         default_managed_app_protection_id,
                                                         id_=None,
                                                         configuration_deployed_user_count=None,
                                                         configuration_deployment_summary_per_app=None,
                                                         display_name=None,
                                                         last_refresh_time=None,
                                                         version=None):
    return client.update_deployment_summary(default_managed_app_protection_id=default_managed_app_protection_id,
                                            id=id_,
                                            configuration_deployed_user_count=configuration_deployed_user_count,
                                            configuration_deployment_summary_per_app=configuration_deployment_summary_per_app,
                                            display_name=display_name,
                                            last_refresh_time=last_refresh_time,
                                            version=version)


def devicescorporatemanagement_delete(client,
                                      ios_managed_app_protection_id,
                                      managed_mobile_app_id=None,
                                      if_match=None):
    if ios_managed_app_protection_id is not None and managed_mobile_app_id is not None:
        return client.delete_app(ios_managed_app_protection_id=ios_managed_app_protection_id,
                                 managed_mobile_app_id=managed_mobile_app_id,
                                 if_match=if_match)
    return client.delete_deployment_summary(ios_managed_app_protection_id=ios_managed_app_protection_id,
                                            if_match=if_match)


def devicescorporatemanagement_create_app(client,
                                          ios_managed_app_protection_id,
                                          id_=None,
                                          mobile_app_identifier=None,
                                          version=None):
    return client.create_app(ios_managed_app_protection_id=ios_managed_app_protection_id,
                             id=id_,
                             mobile_app_identifier=mobile_app_identifier,
                             version=version)


def devicescorporatemanagement_get_app(client,
                                       ios_managed_app_protection_id,
                                       managed_mobile_app_id,
                                       select=None,
                                       expand=None):
    return client.get_app(ios_managed_app_protection_id=ios_managed_app_protection_id,
                          managed_mobile_app_id=managed_mobile_app_id,
                          select=select,
                          expand=expand)


def devicescorporatemanagement_get_deployment_summary(client,
                                                      ios_managed_app_protection_id,
                                                      select=None,
                                                      expand=None):
    return client.get_deployment_summary(ios_managed_app_protection_id=ios_managed_app_protection_id,
                                         select=select,
                                         expand=expand)


def devicescorporatemanagement_list_app(client,
                                        ios_managed_app_protection_id,
                                        orderby=None,
                                        select=None,
                                        expand=None):
    return client.list_app(ios_managed_app_protection_id=ios_managed_app_protection_id,
                           orderby=orderby,
                           select=select,
                           expand=expand)


def devicescorporatemanagement_update_app(client,
                                          ios_managed_app_protection_id,
                                          managed_mobile_app_id,
                                          id_=None,
                                          mobile_app_identifier=None,
                                          version=None):
    return client.update_app(ios_managed_app_protection_id=ios_managed_app_protection_id,
                             managed_mobile_app_id=managed_mobile_app_id,
                             id=id_,
                             mobile_app_identifier=mobile_app_identifier,
                             version=version)


def devicescorporatemanagement_update_deployment_summary(client,
                                                         ios_managed_app_protection_id,
                                                         id_=None,
                                                         configuration_deployed_user_count=None,
                                                         configuration_deployment_summary_per_app=None,
                                                         display_name=None,
                                                         last_refresh_time=None,
                                                         version=None):
    return client.update_deployment_summary(ios_managed_app_protection_id=ios_managed_app_protection_id,
                                            id=id_,
                                            configuration_deployed_user_count=configuration_deployed_user_count,
                                            configuration_deployment_summary_per_app=configuration_deployment_summary_per_app,
                                            display_name=display_name,
                                            last_refresh_time=last_refresh_time,
                                            version=version)


def devicescorporatemanagement_target_app(client,
                                          managed_app_policy_id,
                                          apps=None):
    return client.target_app(managed_app_policy_id=managed_app_policy_id,
                             apps=apps)


def devicescorporatemanagement_delete(client,
                                      managed_app_registration_id,
                                      managed_app_policy_id=None,
                                      if_match=None,
                                      managed_app_operation_id=None):
    if managed_app_registration_id is not None and managed_app_policy_id is not None:
        return client.delete_applied_policy(managed_app_registration_id=managed_app_registration_id,
                                            managed_app_policy_id=managed_app_policy_id,
                                            if_match=if_match)
    elif managed_app_registration_id is not None and managed_app_policy_id is not None:
        return client.delete_intended_policy(managed_app_registration_id=managed_app_registration_id,
                                             managed_app_policy_id=managed_app_policy_id,
                                             if_match=if_match)
    return client.delete_operation(managed_app_registration_id=managed_app_registration_id,
                                   managed_app_operation_id=managed_app_operation_id,
                                   if_match=if_match)


def devicescorporatemanagement_create_applied_policy(client,
                                                     managed_app_registration_id,
                                                     id_=None,
                                                     created_date_time=None,
                                                     description=None,
                                                     display_name=None,
                                                     last_modified_date_time=None,
                                                     version=None):
    return client.create_applied_policy(managed_app_registration_id=managed_app_registration_id,
                                        id=id_,
                                        created_date_time=created_date_time,
                                        description=description,
                                        display_name=display_name,
                                        last_modified_date_time=last_modified_date_time,
                                        version=version)


def devicescorporatemanagement_create_intended_policy(client,
                                                      managed_app_registration_id,
                                                      id_=None,
                                                      created_date_time=None,
                                                      description=None,
                                                      display_name=None,
                                                      last_modified_date_time=None,
                                                      version=None):
    return client.create_intended_policy(managed_app_registration_id=managed_app_registration_id,
                                         id=id_,
                                         created_date_time=created_date_time,
                                         description=description,
                                         display_name=display_name,
                                         last_modified_date_time=last_modified_date_time,
                                         version=version)


def devicescorporatemanagement_create_operation(client,
                                                managed_app_registration_id,
                                                id_=None,
                                                display_name=None,
                                                last_modified_date_time=None,
                                                state=None,
                                                version=None):
    return client.create_operation(managed_app_registration_id=managed_app_registration_id,
                                   id=id_,
                                   display_name=display_name,
                                   last_modified_date_time=last_modified_date_time,
                                   state=state,
                                   version=version)


def devicescorporatemanagement_get_applied_policy(client,
                                                  managed_app_registration_id,
                                                  managed_app_policy_id,
                                                  select=None,
                                                  expand=None):
    return client.get_applied_policy(managed_app_registration_id=managed_app_registration_id,
                                     managed_app_policy_id=managed_app_policy_id,
                                     select=select,
                                     expand=expand)


def devicescorporatemanagement_get_intended_policy(client,
                                                   managed_app_registration_id,
                                                   managed_app_policy_id,
                                                   select=None,
                                                   expand=None):
    return client.get_intended_policy(managed_app_registration_id=managed_app_registration_id,
                                      managed_app_policy_id=managed_app_policy_id,
                                      select=select,
                                      expand=expand)


def devicescorporatemanagement_get_operation(client,
                                             managed_app_registration_id,
                                             managed_app_operation_id,
                                             select=None,
                                             expand=None):
    return client.get_operation(managed_app_registration_id=managed_app_registration_id,
                                managed_app_operation_id=managed_app_operation_id,
                                select=select,
                                expand=expand)


def devicescorporatemanagement_get_user_id_with_flagged_app_registration(client):
    return client.get_user_id_with_flagged_app_registration()


def devicescorporatemanagement_list_applied_policy(client,
                                                   managed_app_registration_id,
                                                   orderby=None,
                                                   select=None,
                                                   expand=None):
    return client.list_applied_policy(managed_app_registration_id=managed_app_registration_id,
                                      orderby=orderby,
                                      select=select,
                                      expand=expand)


def devicescorporatemanagement_list_intended_policy(client,
                                                    managed_app_registration_id,
                                                    orderby=None,
                                                    select=None,
                                                    expand=None):
    return client.list_intended_policy(managed_app_registration_id=managed_app_registration_id,
                                       orderby=orderby,
                                       select=select,
                                       expand=expand)


def devicescorporatemanagement_list_operation(client,
                                              managed_app_registration_id,
                                              orderby=None,
                                              select=None,
                                              expand=None):
    return client.list_operation(managed_app_registration_id=managed_app_registration_id,
                                 orderby=orderby,
                                 select=select,
                                 expand=expand)


def devicescorporatemanagement_update_applied_policy(client,
                                                     managed_app_registration_id,
                                                     managed_app_policy_id,
                                                     id_=None,
                                                     created_date_time=None,
                                                     description=None,
                                                     display_name=None,
                                                     last_modified_date_time=None,
                                                     version=None):
    return client.update_applied_policy(managed_app_registration_id=managed_app_registration_id,
                                        managed_app_policy_id=managed_app_policy_id,
                                        id=id_,
                                        created_date_time=created_date_time,
                                        description=description,
                                        display_name=display_name,
                                        last_modified_date_time=last_modified_date_time,
                                        version=version)


def devicescorporatemanagement_update_intended_policy(client,
                                                      managed_app_registration_id,
                                                      managed_app_policy_id,
                                                      id_=None,
                                                      created_date_time=None,
                                                      description=None,
                                                      display_name=None,
                                                      last_modified_date_time=None,
                                                      version=None):
    return client.update_intended_policy(managed_app_registration_id=managed_app_registration_id,
                                         managed_app_policy_id=managed_app_policy_id,
                                         id=id_,
                                         created_date_time=created_date_time,
                                         description=description,
                                         display_name=display_name,
                                         last_modified_date_time=last_modified_date_time,
                                         version=version)


def devicescorporatemanagement_update_operation(client,
                                                managed_app_registration_id,
                                                managed_app_operation_id,
                                                id_=None,
                                                display_name=None,
                                                last_modified_date_time=None,
                                                state=None,
                                                version=None):
    return client.update_operation(managed_app_registration_id=managed_app_registration_id,
                                   managed_app_operation_id=managed_app_operation_id,
                                   id=id_,
                                   display_name=display_name,
                                   last_modified_date_time=last_modified_date_time,
                                   state=state,
                                   version=version)


def devicescorporatemanagement_target_app(client,
                                          managed_app_registration_id,
                                          managed_app_policy_id,
                                          apps=None):
    return client.target_app(managed_app_registration_id=managed_app_registration_id,
                             managed_app_policy_id=managed_app_policy_id,
                             apps=apps)


def devicescorporatemanagement_target_app(client,
                                          managed_app_registration_id,
                                          managed_app_policy_id,
                                          apps=None):
    return client.target_app(managed_app_registration_id=managed_app_registration_id,
                             managed_app_policy_id=managed_app_policy_id,
                             apps=apps)


def devicescorporatemanagement_delete(client,
                                      managed_e_book_id,
                                      managed_e_book_assignment_id=None,
                                      if_match=None,
                                      device_install_state_id=None,
                                      user_install_state_summary_id=None):
    if managed_e_book_id is not None and managed_e_book_assignment_id is not None:
        return client.delete_assignment(managed_e_book_id=managed_e_book_id,
                                        managed_e_book_assignment_id=managed_e_book_assignment_id,
                                        if_match=if_match)
    elif managed_e_book_id is not None and device_install_state_id is not None:
        return client.delete_device_state(managed_e_book_id=managed_e_book_id,
                                          device_install_state_id=device_install_state_id,
                                          if_match=if_match)
    elif managed_e_book_id is not None and user_install_state_summary_id is not None:
        return client.delete_user_state_summary(managed_e_book_id=managed_e_book_id,
                                                user_install_state_summary_id=user_install_state_summary_id,
                                                if_match=if_match)
    return client.delete_install_summary(managed_e_book_id=managed_e_book_id,
                                         if_match=if_match)


def devicescorporatemanagement_assign(client,
                                      managed_e_book_id,
                                      managed_e_book_assignments=None):
    return client.assign(managed_e_book_id=managed_e_book_id,
                         managed_e_book_assignments=managed_e_book_assignments)


def devicescorporatemanagement_create_assignment(client,
                                                 managed_e_book_id,
                                                 id_=None,
                                                 install_intent=None,
                                                 target=None):
    return client.create_assignment(managed_e_book_id=managed_e_book_id,
                                    id=id_,
                                    install_intent=install_intent,
                                    target=target)


def devicescorporatemanagement_create_device_state(client,
                                                   managed_e_book_id,
                                                   id_=None,
                                                   device_id=None,
                                                   device_name=None,
                                                   error_code=None,
                                                   install_state=None,
                                                   last_sync_date_time=None,
                                                   os_description=None,
                                                   os_version=None,
                                                   user_name=None):
    return client.create_device_state(managed_e_book_id=managed_e_book_id,
                                      id=id_,
                                      device_id=device_id,
                                      device_name=device_name,
                                      error_code=error_code,
                                      install_state=install_state,
                                      last_sync_date_time=last_sync_date_time,
                                      os_description=os_description,
                                      os_version=os_version,
                                      user_name=user_name)


def devicescorporatemanagement_create_user_state_summary(client,
                                                         managed_e_book_id,
                                                         id_=None,
                                                         failed_device_count=None,
                                                         installed_device_count=None,
                                                         not_installed_device_count=None,
                                                         user_name=None,
                                                         device_states=None):
    return client.create_user_state_summary(managed_e_book_id=managed_e_book_id,
                                            id=id_,
                                            failed_device_count=failed_device_count,
                                            installed_device_count=installed_device_count,
                                            not_installed_device_count=not_installed_device_count,
                                            user_name=user_name,
                                            device_states=device_states)


def devicescorporatemanagement_get_assignment(client,
                                              managed_e_book_id,
                                              managed_e_book_assignment_id,
                                              select=None,
                                              expand=None):
    return client.get_assignment(managed_e_book_id=managed_e_book_id,
                                 managed_e_book_assignment_id=managed_e_book_assignment_id,
                                 select=select,
                                 expand=expand)


def devicescorporatemanagement_get_device_state(client,
                                                managed_e_book_id,
                                                device_install_state_id,
                                                select=None,
                                                expand=None):
    return client.get_device_state(managed_e_book_id=managed_e_book_id,
                                   device_install_state_id=device_install_state_id,
                                   select=select,
                                   expand=expand)


def devicescorporatemanagement_get_install_summary(client,
                                                   managed_e_book_id,
                                                   select=None,
                                                   expand=None):
    return client.get_install_summary(managed_e_book_id=managed_e_book_id,
                                      select=select,
                                      expand=expand)


def devicescorporatemanagement_get_user_state_summary(client,
                                                      managed_e_book_id,
                                                      user_install_state_summary_id,
                                                      select=None,
                                                      expand=None):
    return client.get_user_state_summary(managed_e_book_id=managed_e_book_id,
                                         user_install_state_summary_id=user_install_state_summary_id,
                                         select=select,
                                         expand=expand)


def devicescorporatemanagement_list_assignment(client,
                                               managed_e_book_id,
                                               orderby=None,
                                               select=None,
                                               expand=None):
    return client.list_assignment(managed_e_book_id=managed_e_book_id,
                                  orderby=orderby,
                                  select=select,
                                  expand=expand)


def devicescorporatemanagement_list_device_state(client,
                                                 managed_e_book_id,
                                                 orderby=None,
                                                 select=None,
                                                 expand=None):
    return client.list_device_state(managed_e_book_id=managed_e_book_id,
                                    orderby=orderby,
                                    select=select,
                                    expand=expand)


def devicescorporatemanagement_list_user_state_summary(client,
                                                       managed_e_book_id,
                                                       orderby=None,
                                                       select=None,
                                                       expand=None):
    return client.list_user_state_summary(managed_e_book_id=managed_e_book_id,
                                          orderby=orderby,
                                          select=select,
                                          expand=expand)


def devicescorporatemanagement_update_assignment(client,
                                                 managed_e_book_id,
                                                 managed_e_book_assignment_id,
                                                 id_=None,
                                                 install_intent=None,
                                                 target=None):
    return client.update_assignment(managed_e_book_id=managed_e_book_id,
                                    managed_e_book_assignment_id=managed_e_book_assignment_id,
                                    id=id_,
                                    install_intent=install_intent,
                                    target=target)


def devicescorporatemanagement_update_device_state(client,
                                                   managed_e_book_id,
                                                   device_install_state_id,
                                                   id_=None,
                                                   device_id=None,
                                                   device_name=None,
                                                   error_code=None,
                                                   install_state=None,
                                                   last_sync_date_time=None,
                                                   os_description=None,
                                                   os_version=None,
                                                   user_name=None):
    return client.update_device_state(managed_e_book_id=managed_e_book_id,
                                      device_install_state_id=device_install_state_id,
                                      id=id_,
                                      device_id=device_id,
                                      device_name=device_name,
                                      error_code=error_code,
                                      install_state=install_state,
                                      last_sync_date_time=last_sync_date_time,
                                      os_description=os_description,
                                      os_version=os_version,
                                      user_name=user_name)


def devicescorporatemanagement_update_install_summary(client,
                                                      managed_e_book_id,
                                                      id_=None,
                                                      failed_device_count=None,
                                                      failed_user_count=None,
                                                      installed_device_count=None,
                                                      installed_user_count=None,
                                                      not_installed_device_count=None,
                                                      not_installed_user_count=None):
    return client.update_install_summary(managed_e_book_id=managed_e_book_id,
                                         id=id_,
                                         failed_device_count=failed_device_count,
                                         failed_user_count=failed_user_count,
                                         installed_device_count=installed_device_count,
                                         installed_user_count=installed_user_count,
                                         not_installed_device_count=not_installed_device_count,
                                         not_installed_user_count=not_installed_user_count)


def devicescorporatemanagement_update_user_state_summary(client,
                                                         managed_e_book_id,
                                                         user_install_state_summary_id,
                                                         id_=None,
                                                         failed_device_count=None,
                                                         installed_device_count=None,
                                                         not_installed_device_count=None,
                                                         user_name=None,
                                                         device_states=None):
    return client.update_user_state_summary(managed_e_book_id=managed_e_book_id,
                                            user_install_state_summary_id=user_install_state_summary_id,
                                            id=id_,
                                            failed_device_count=failed_device_count,
                                            installed_device_count=installed_device_count,
                                            not_installed_device_count=not_installed_device_count,
                                            user_name=user_name,
                                            device_states=device_states)


def devicescorporatemanagement_delete(client,
                                      managed_e_book_id,
                                      user_install_state_summary_id,
                                      device_install_state_id,
                                      if_match=None):
    return client.delete_device_state(managed_e_book_id=managed_e_book_id,
                                      user_install_state_summary_id=user_install_state_summary_id,
                                      device_install_state_id=device_install_state_id,
                                      if_match=if_match)


def devicescorporatemanagement_create_device_state(client,
                                                   managed_e_book_id,
                                                   user_install_state_summary_id,
                                                   id_=None,
                                                   device_id=None,
                                                   device_name=None,
                                                   error_code=None,
                                                   install_state=None,
                                                   last_sync_date_time=None,
                                                   os_description=None,
                                                   os_version=None,
                                                   user_name=None):
    return client.create_device_state(managed_e_book_id=managed_e_book_id,
                                      user_install_state_summary_id=user_install_state_summary_id,
                                      id=id_,
                                      device_id=device_id,
                                      device_name=device_name,
                                      error_code=error_code,
                                      install_state=install_state,
                                      last_sync_date_time=last_sync_date_time,
                                      os_description=os_description,
                                      os_version=os_version,
                                      user_name=user_name)


def devicescorporatemanagement_get_device_state(client,
                                                managed_e_book_id,
                                                user_install_state_summary_id,
                                                device_install_state_id,
                                                select=None,
                                                expand=None):
    return client.get_device_state(managed_e_book_id=managed_e_book_id,
                                   user_install_state_summary_id=user_install_state_summary_id,
                                   device_install_state_id=device_install_state_id,
                                   select=select,
                                   expand=expand)


def devicescorporatemanagement_list_device_state(client,
                                                 managed_e_book_id,
                                                 user_install_state_summary_id,
                                                 orderby=None,
                                                 select=None,
                                                 expand=None):
    return client.list_device_state(managed_e_book_id=managed_e_book_id,
                                    user_install_state_summary_id=user_install_state_summary_id,
                                    orderby=orderby,
                                    select=select,
                                    expand=expand)


def devicescorporatemanagement_update_device_state(client,
                                                   managed_e_book_id,
                                                   user_install_state_summary_id,
                                                   device_install_state_id,
                                                   id_=None,
                                                   device_id=None,
                                                   device_name=None,
                                                   error_code=None,
                                                   install_state=None,
                                                   last_sync_date_time=None,
                                                   os_description=None,
                                                   os_version=None,
                                                   user_name=None):
    return client.update_device_state(managed_e_book_id=managed_e_book_id,
                                      user_install_state_summary_id=user_install_state_summary_id,
                                      device_install_state_id=device_install_state_id,
                                      id=id_,
                                      device_id=device_id,
                                      device_name=device_name,
                                      error_code=error_code,
                                      install_state=install_state,
                                      last_sync_date_time=last_sync_date_time,
                                      os_description=os_description,
                                      os_version=os_version,
                                      user_name=user_name)


def devicescorporatemanagement_delete(client,
                                      managed_device_mobile_app_configuration_id,
                                      managed_device_mobile_app_configuration_assignment_id=None,
                                      if_match=None,
                                      managed_device_mobile_app_configuration_device_status_id=None,
                                      managed_device_mobile_app_configuration_user_status_id=None):
    if managed_device_mobile_app_configuration_id is not None and managed_device_mobile_app_configuration_assignment_id is not None:
        return client.delete_assignment(managed_device_mobile_app_configuration_id=managed_device_mobile_app_configuration_id,
                                        managed_device_mobile_app_configuration_assignment_id=managed_device_mobile_app_configuration_assignment_id,
                                        if_match=if_match)
    elif managed_device_mobile_app_configuration_id is not None and managed_device_mobile_app_configuration_device_status_id is not None:
        return client.delete_device_statuses(managed_device_mobile_app_configuration_id=managed_device_mobile_app_configuration_id,
                                             managed_device_mobile_app_configuration_device_status_id=managed_device_mobile_app_configuration_device_status_id,
                                             if_match=if_match)
    elif managed_device_mobile_app_configuration_id is not None and managed_device_mobile_app_configuration_user_status_id is not None:
        return client.delete_user_statuses(managed_device_mobile_app_configuration_id=managed_device_mobile_app_configuration_id,
                                           managed_device_mobile_app_configuration_user_status_id=managed_device_mobile_app_configuration_user_status_id,
                                           if_match=if_match)
    elif managed_device_mobile_app_configuration_id is not None:
        return client.delete_device_status_summary(managed_device_mobile_app_configuration_id=managed_device_mobile_app_configuration_id,
                                                   if_match=if_match)
    return client.delete_user_status_summary(managed_device_mobile_app_configuration_id=managed_device_mobile_app_configuration_id,
                                             if_match=if_match)


def devicescorporatemanagement_assign(client,
                                      managed_device_mobile_app_configuration_id,
                                      assignments=None):
    return client.assign(managed_device_mobile_app_configuration_id=managed_device_mobile_app_configuration_id,
                         assignments=assignments)


def devicescorporatemanagement_create_assignment(client,
                                                 managed_device_mobile_app_configuration_id,
                                                 id_=None,
                                                 target=None):
    return client.create_assignment(managed_device_mobile_app_configuration_id=managed_device_mobile_app_configuration_id,
                                    id=id_,
                                    target=target)


def devicescorporatemanagement_create_device_statuses(client,
                                                      managed_device_mobile_app_configuration_id,
                                                      id_=None,
                                                      compliance_grace_period_expiration_date_time=None,
                                                      device_display_name=None,
                                                      device_model=None,
                                                      last_reported_date_time=None,
                                                      status=None,
                                                      user_name=None,
                                                      user_principal_name=None):
    return client.create_device_statuses(managed_device_mobile_app_configuration_id=managed_device_mobile_app_configuration_id,
                                         id=id_,
                                         compliance_grace_period_expiration_date_time=compliance_grace_period_expiration_date_time,
                                         device_display_name=device_display_name,
                                         device_model=device_model,
                                         last_reported_date_time=last_reported_date_time,
                                         status=status,
                                         user_name=user_name,
                                         user_principal_name=user_principal_name)


def devicescorporatemanagement_create_user_statuses(client,
                                                    managed_device_mobile_app_configuration_id,
                                                    id_=None,
                                                    devices_count=None,
                                                    last_reported_date_time=None,
                                                    status=None,
                                                    user_display_name=None,
                                                    user_principal_name=None):
    return client.create_user_statuses(managed_device_mobile_app_configuration_id=managed_device_mobile_app_configuration_id,
                                       id=id_,
                                       devices_count=devices_count,
                                       last_reported_date_time=last_reported_date_time,
                                       status=status,
                                       user_display_name=user_display_name,
                                       user_principal_name=user_principal_name)


def devicescorporatemanagement_get_assignment(client,
                                              managed_device_mobile_app_configuration_id,
                                              managed_device_mobile_app_configuration_assignment_id,
                                              select=None,
                                              expand=None):
    return client.get_assignment(managed_device_mobile_app_configuration_id=managed_device_mobile_app_configuration_id,
                                 managed_device_mobile_app_configuration_assignment_id=managed_device_mobile_app_configuration_assignment_id,
                                 select=select,
                                 expand=expand)


def devicescorporatemanagement_get_device_status_summary(client,
                                                         managed_device_mobile_app_configuration_id,
                                                         select=None,
                                                         expand=None):
    return client.get_device_status_summary(managed_device_mobile_app_configuration_id=managed_device_mobile_app_configuration_id,
                                            select=select,
                                            expand=expand)


def devicescorporatemanagement_get_device_statuses(client,
                                                   managed_device_mobile_app_configuration_id,
                                                   managed_device_mobile_app_configuration_device_status_id,
                                                   select=None,
                                                   expand=None):
    return client.get_device_statuses(managed_device_mobile_app_configuration_id=managed_device_mobile_app_configuration_id,
                                      managed_device_mobile_app_configuration_device_status_id=managed_device_mobile_app_configuration_device_status_id,
                                      select=select,
                                      expand=expand)


def devicescorporatemanagement_get_user_status_summary(client,
                                                       managed_device_mobile_app_configuration_id,
                                                       select=None,
                                                       expand=None):
    return client.get_user_status_summary(managed_device_mobile_app_configuration_id=managed_device_mobile_app_configuration_id,
                                          select=select,
                                          expand=expand)


def devicescorporatemanagement_get_user_statuses(client,
                                                 managed_device_mobile_app_configuration_id,
                                                 managed_device_mobile_app_configuration_user_status_id,
                                                 select=None,
                                                 expand=None):
    return client.get_user_statuses(managed_device_mobile_app_configuration_id=managed_device_mobile_app_configuration_id,
                                    managed_device_mobile_app_configuration_user_status_id=managed_device_mobile_app_configuration_user_status_id,
                                    select=select,
                                    expand=expand)


def devicescorporatemanagement_list_assignment(client,
                                               managed_device_mobile_app_configuration_id,
                                               orderby=None,
                                               select=None,
                                               expand=None):
    return client.list_assignment(managed_device_mobile_app_configuration_id=managed_device_mobile_app_configuration_id,
                                  orderby=orderby,
                                  select=select,
                                  expand=expand)


def devicescorporatemanagement_list_device_statuses(client,
                                                    managed_device_mobile_app_configuration_id,
                                                    orderby=None,
                                                    select=None,
                                                    expand=None):
    return client.list_device_statuses(managed_device_mobile_app_configuration_id=managed_device_mobile_app_configuration_id,
                                       orderby=orderby,
                                       select=select,
                                       expand=expand)


def devicescorporatemanagement_list_user_statuses(client,
                                                  managed_device_mobile_app_configuration_id,
                                                  orderby=None,
                                                  select=None,
                                                  expand=None):
    return client.list_user_statuses(managed_device_mobile_app_configuration_id=managed_device_mobile_app_configuration_id,
                                     orderby=orderby,
                                     select=select,
                                     expand=expand)


def devicescorporatemanagement_update_assignment(client,
                                                 managed_device_mobile_app_configuration_id,
                                                 managed_device_mobile_app_configuration_assignment_id,
                                                 id_=None,
                                                 target=None):
    return client.update_assignment(managed_device_mobile_app_configuration_id=managed_device_mobile_app_configuration_id,
                                    managed_device_mobile_app_configuration_assignment_id=managed_device_mobile_app_configuration_assignment_id,
                                    id=id_,
                                    target=target)


def devicescorporatemanagement_update_device_status_summary(client,
                                                            managed_device_mobile_app_configuration_id,
                                                            id_=None,
                                                            configuration_version=None,
                                                            error_count=None,
                                                            failed_count=None,
                                                            last_update_date_time=None,
                                                            not_applicable_count=None,
                                                            pending_count=None,
                                                            success_count=None):
    return client.update_device_status_summary(managed_device_mobile_app_configuration_id=managed_device_mobile_app_configuration_id,
                                               id=id_,
                                               configuration_version=configuration_version,
                                               error_count=error_count,
                                               failed_count=failed_count,
                                               last_update_date_time=last_update_date_time,
                                               not_applicable_count=not_applicable_count,
                                               pending_count=pending_count,
                                               success_count=success_count)


def devicescorporatemanagement_update_device_statuses(client,
                                                      managed_device_mobile_app_configuration_id,
                                                      managed_device_mobile_app_configuration_device_status_id,
                                                      id_=None,
                                                      compliance_grace_period_expiration_date_time=None,
                                                      device_display_name=None,
                                                      device_model=None,
                                                      last_reported_date_time=None,
                                                      status=None,
                                                      user_name=None,
                                                      user_principal_name=None):
    return client.update_device_statuses(managed_device_mobile_app_configuration_id=managed_device_mobile_app_configuration_id,
                                         managed_device_mobile_app_configuration_device_status_id=managed_device_mobile_app_configuration_device_status_id,
                                         id=id_,
                                         compliance_grace_period_expiration_date_time=compliance_grace_period_expiration_date_time,
                                         device_display_name=device_display_name,
                                         device_model=device_model,
                                         last_reported_date_time=last_reported_date_time,
                                         status=status,
                                         user_name=user_name,
                                         user_principal_name=user_principal_name)


def devicescorporatemanagement_update_user_status_summary(client,
                                                          managed_device_mobile_app_configuration_id,
                                                          id_=None,
                                                          configuration_version=None,
                                                          error_count=None,
                                                          failed_count=None,
                                                          last_update_date_time=None,
                                                          not_applicable_count=None,
                                                          pending_count=None,
                                                          success_count=None):
    return client.update_user_status_summary(managed_device_mobile_app_configuration_id=managed_device_mobile_app_configuration_id,
                                             id=id_,
                                             configuration_version=configuration_version,
                                             error_count=error_count,
                                             failed_count=failed_count,
                                             last_update_date_time=last_update_date_time,
                                             not_applicable_count=not_applicable_count,
                                             pending_count=pending_count,
                                             success_count=success_count)


def devicescorporatemanagement_update_user_statuses(client,
                                                    managed_device_mobile_app_configuration_id,
                                                    managed_device_mobile_app_configuration_user_status_id,
                                                    id_=None,
                                                    devices_count=None,
                                                    last_reported_date_time=None,
                                                    status=None,
                                                    user_display_name=None,
                                                    user_principal_name=None):
    return client.update_user_statuses(managed_device_mobile_app_configuration_id=managed_device_mobile_app_configuration_id,
                                       managed_device_mobile_app_configuration_user_status_id=managed_device_mobile_app_configuration_user_status_id,
                                       id=id_,
                                       devices_count=devices_count,
                                       last_reported_date_time=last_reported_date_time,
                                       status=status,
                                       user_display_name=user_display_name,
                                       user_principal_name=user_principal_name)


def devicescorporatemanagement_delete(client,
                                      mobile_app_id,
                                      mobile_app_assignment_id,
                                      if_match=None):
    return client.delete_assignment(mobile_app_id=mobile_app_id,
                                    mobile_app_assignment_id=mobile_app_assignment_id,
                                    if_match=if_match)


def devicescorporatemanagement_assign(client,
                                      mobile_app_id,
                                      mobile_app_assignments=None):
    return client.assign(mobile_app_id=mobile_app_id,
                         mobile_app_assignments=mobile_app_assignments)


def devicescorporatemanagement_create_assignment(client,
                                                 mobile_app_id,
                                                 id_=None,
                                                 intent=None,
                                                 settings=None,
                                                 target=None):
    return client.create_assignment(mobile_app_id=mobile_app_id,
                                    id=id_,
                                    intent=intent,
                                    settings=settings,
                                    target=target)


def devicescorporatemanagement_create_ref_category(client,
                                                   mobile_app_id,
                                                   body):
    return client.create_ref_category(mobile_app_id=mobile_app_id,
                                      body=body)


def devicescorporatemanagement_get_assignment(client,
                                              mobile_app_id,
                                              mobile_app_assignment_id,
                                              select=None,
                                              expand=None):
    return client.get_assignment(mobile_app_id=mobile_app_id,
                                 mobile_app_assignment_id=mobile_app_assignment_id,
                                 select=select,
                                 expand=expand)


def devicescorporatemanagement_list_assignment(client,
                                               mobile_app_id,
                                               orderby=None,
                                               select=None,
                                               expand=None):
    return client.list_assignment(mobile_app_id=mobile_app_id,
                                  orderby=orderby,
                                  select=select,
                                  expand=expand)


def devicescorporatemanagement_list_category(client,
                                             mobile_app_id,
                                             orderby=None,
                                             select=None,
                                             expand=None):
    return client.list_category(mobile_app_id=mobile_app_id,
                                orderby=orderby,
                                select=select,
                                expand=expand)


def devicescorporatemanagement_list_ref_category(client,
                                                 mobile_app_id,
                                                 orderby=None):
    return client.list_ref_category(mobile_app_id=mobile_app_id,
                                    orderby=orderby)


def devicescorporatemanagement_update_assignment(client,
                                                 mobile_app_id,
                                                 mobile_app_assignment_id,
                                                 id_=None,
                                                 intent=None,
                                                 settings=None,
                                                 target=None):
    return client.update_assignment(mobile_app_id=mobile_app_id,
                                    mobile_app_assignment_id=mobile_app_assignment_id,
                                    id=id_,
                                    intent=intent,
                                    settings=settings,
                                    target=target)


def devicescorporatemanagement_delete(client,
                                      targeted_managed_app_configuration_id,
                                      managed_mobile_app_id=None,
                                      if_match=None,
                                      targeted_managed_app_policy_assignment_id=None):
    if targeted_managed_app_configuration_id is not None and managed_mobile_app_id is not None:
        return client.delete_app(targeted_managed_app_configuration_id=targeted_managed_app_configuration_id,
                                 managed_mobile_app_id=managed_mobile_app_id,
                                 if_match=if_match)
    elif targeted_managed_app_configuration_id is not None and targeted_managed_app_policy_assignment_id is not None:
        return client.delete_assignment(targeted_managed_app_configuration_id=targeted_managed_app_configuration_id,
                                        targeted_managed_app_policy_assignment_id=targeted_managed_app_policy_assignment_id,
                                        if_match=if_match)
    return client.delete_deployment_summary(targeted_managed_app_configuration_id=targeted_managed_app_configuration_id,
                                            if_match=if_match)


def devicescorporatemanagement_assign(client,
                                      targeted_managed_app_configuration_id,
                                      assignments=None):
    return client.assign(targeted_managed_app_configuration_id=targeted_managed_app_configuration_id,
                         assignments=assignments)


def devicescorporatemanagement_create_app(client,
                                          targeted_managed_app_configuration_id,
                                          id_=None,
                                          mobile_app_identifier=None,
                                          version=None):
    return client.create_app(targeted_managed_app_configuration_id=targeted_managed_app_configuration_id,
                             id=id_,
                             mobile_app_identifier=mobile_app_identifier,
                             version=version)


def devicescorporatemanagement_create_assignment(client,
                                                 targeted_managed_app_configuration_id,
                                                 id_=None,
                                                 target=None):
    return client.create_assignment(targeted_managed_app_configuration_id=targeted_managed_app_configuration_id,
                                    id=id_,
                                    target=target)


def devicescorporatemanagement_get_app(client,
                                       targeted_managed_app_configuration_id,
                                       managed_mobile_app_id,
                                       select=None,
                                       expand=None):
    return client.get_app(targeted_managed_app_configuration_id=targeted_managed_app_configuration_id,
                          managed_mobile_app_id=managed_mobile_app_id,
                          select=select,
                          expand=expand)


def devicescorporatemanagement_get_assignment(client,
                                              targeted_managed_app_configuration_id,
                                              targeted_managed_app_policy_assignment_id,
                                              select=None,
                                              expand=None):
    return client.get_assignment(targeted_managed_app_configuration_id=targeted_managed_app_configuration_id,
                                 targeted_managed_app_policy_assignment_id=targeted_managed_app_policy_assignment_id,
                                 select=select,
                                 expand=expand)


def devicescorporatemanagement_get_deployment_summary(client,
                                                      targeted_managed_app_configuration_id,
                                                      select=None,
                                                      expand=None):
    return client.get_deployment_summary(targeted_managed_app_configuration_id=targeted_managed_app_configuration_id,
                                         select=select,
                                         expand=expand)


def devicescorporatemanagement_list_app(client,
                                        targeted_managed_app_configuration_id,
                                        orderby=None,
                                        select=None,
                                        expand=None):
    return client.list_app(targeted_managed_app_configuration_id=targeted_managed_app_configuration_id,
                           orderby=orderby,
                           select=select,
                           expand=expand)


def devicescorporatemanagement_list_assignment(client,
                                               targeted_managed_app_configuration_id,
                                               orderby=None,
                                               select=None,
                                               expand=None):
    return client.list_assignment(targeted_managed_app_configuration_id=targeted_managed_app_configuration_id,
                                  orderby=orderby,
                                  select=select,
                                  expand=expand)


def devicescorporatemanagement_target_app(client,
                                          targeted_managed_app_configuration_id,
                                          apps=None):
    return client.target_app(targeted_managed_app_configuration_id=targeted_managed_app_configuration_id,
                             apps=apps)


def devicescorporatemanagement_update_app(client,
                                          targeted_managed_app_configuration_id,
                                          managed_mobile_app_id,
                                          id_=None,
                                          mobile_app_identifier=None,
                                          version=None):
    return client.update_app(targeted_managed_app_configuration_id=targeted_managed_app_configuration_id,
                             managed_mobile_app_id=managed_mobile_app_id,
                             id=id_,
                             mobile_app_identifier=mobile_app_identifier,
                             version=version)


def devicescorporatemanagement_update_assignment(client,
                                                 targeted_managed_app_configuration_id,
                                                 targeted_managed_app_policy_assignment_id,
                                                 id_=None,
                                                 target=None):
    return client.update_assignment(targeted_managed_app_configuration_id=targeted_managed_app_configuration_id,
                                    targeted_managed_app_policy_assignment_id=targeted_managed_app_policy_assignment_id,
                                    id=id_,
                                    target=target)


def devicescorporatemanagement_update_deployment_summary(client,
                                                         targeted_managed_app_configuration_id,
                                                         id_=None,
                                                         configuration_deployed_user_count=None,
                                                         configuration_deployment_summary_per_app=None,
                                                         display_name=None,
                                                         last_refresh_time=None,
                                                         version=None):
    return client.update_deployment_summary(targeted_managed_app_configuration_id=targeted_managed_app_configuration_id,
                                            id=id_,
                                            configuration_deployed_user_count=configuration_deployed_user_count,
                                            configuration_deployment_summary_per_app=configuration_deployment_summary_per_app,
                                            display_name=display_name,
                                            last_refresh_time=last_refresh_time,
                                            version=version)


def devicescorporatemanagement_sync_license(client,
                                            vpp_token_id):
    return client.sync_license(vpp_token_id=vpp_token_id)


def devicescorporatemanagement_delete(client,
                                      user_id,
                                      device_management_troubleshooting_event_id=None,
                                      if_match=None,
                                      managed_device_id=None):
    if user_id is not None and device_management_troubleshooting_event_id is not None:
        return client.delete_device_management_troubleshooting_event(user_id=user_id,
                                                                     device_management_troubleshooting_event_id=device_management_troubleshooting_event_id,
                                                                     if_match=if_match)
    return client.delete_managed_device(user_id=user_id,
                                        managed_device_id=managed_device_id,
                                        if_match=if_match)


def devicescorporatemanagement_create_device_management_troubleshooting_event(client,
                                                                              user_id,
                                                                              id_=None,
                                                                              correlation_id=None,
                                                                              event_date_time=None):
    return client.create_device_management_troubleshooting_event(user_id=user_id,
                                                                 id=id_,
                                                                 correlation_id=correlation_id,
                                                                 event_date_time=event_date_time)


def devicescorporatemanagement_create_managed_device(client,
                                                     user_id,
                                                     body):
    return client.create_managed_device(user_id=user_id,
                                        body=body)


def devicescorporatemanagement_create_ref_managed_app_registration(client,
                                                                   user_id,
                                                                   body):
    return client.create_ref_managed_app_registration(user_id=user_id,
                                                      body=body)


def devicescorporatemanagement_get_device_management_troubleshooting_event(client,
                                                                           user_id,
                                                                           device_management_troubleshooting_event_id,
                                                                           select=None,
                                                                           expand=None):
    return client.get_device_management_troubleshooting_event(user_id=user_id,
                                                              device_management_troubleshooting_event_id=device_management_troubleshooting_event_id,
                                                              select=select,
                                                              expand=expand)


def devicescorporatemanagement_get_managed_device(client,
                                                  user_id,
                                                  managed_device_id,
                                                  select=None,
                                                  expand=None):
    return client.get_managed_device(user_id=user_id,
                                     managed_device_id=managed_device_id,
                                     select=select,
                                     expand=expand)


def devicescorporatemanagement_list_device_management_troubleshooting_event(client,
                                                                            user_id,
                                                                            orderby=None,
                                                                            select=None,
                                                                            expand=None):
    return client.list_device_management_troubleshooting_event(user_id=user_id,
                                                               orderby=orderby,
                                                               select=select,
                                                               expand=expand)


def devicescorporatemanagement_list_managed_app_registration(client,
                                                             user_id,
                                                             orderby=None,
                                                             select=None,
                                                             expand=None):
    return client.list_managed_app_registration(user_id=user_id,
                                                orderby=orderby,
                                                select=select,
                                                expand=expand)


def devicescorporatemanagement_list_managed_device(client,
                                                   user_id,
                                                   orderby=None,
                                                   select=None,
                                                   expand=None):
    return client.list_managed_device(user_id=user_id,
                                      orderby=orderby,
                                      select=select,
                                      expand=expand)


def devicescorporatemanagement_list_ref_managed_app_registration(client,
                                                                 user_id,
                                                                 orderby=None):
    return client.list_ref_managed_app_registration(user_id=user_id,
                                                    orderby=orderby)


def devicescorporatemanagement_update_device_management_troubleshooting_event(client,
                                                                              user_id,
                                                                              device_management_troubleshooting_event_id,
                                                                              id_=None,
                                                                              correlation_id=None,
                                                                              event_date_time=None):
    return client.update_device_management_troubleshooting_event(user_id=user_id,
                                                                 device_management_troubleshooting_event_id=device_management_troubleshooting_event_id,
                                                                 id=id_,
                                                                 correlation_id=correlation_id,
                                                                 event_date_time=event_date_time)


def devicescorporatemanagement_update_managed_device(client,
                                                     user_id,
                                                     managed_device_id,
                                                     body):
    return client.update_managed_device(user_id=user_id,
                                        managed_device_id=managed_device_id,
                                        body=body)


def devicescorporatemanagement_delete(client,
                                      user_id,
                                      managed_device_id,
                                      device_compliance_policy_state_id=None,
                                      if_match=None,
                                      device_configuration_state_id=None):
    if user_id is not None and managed_device_id is not None and device_compliance_policy_state_id is not None:
        return client.delete_device_compliance_policy_state(user_id=user_id,
                                                            managed_device_id=managed_device_id,
                                                            device_compliance_policy_state_id=device_compliance_policy_state_id,
                                                            if_match=if_match)
    elif user_id is not None and managed_device_id is not None and device_configuration_state_id is not None:
        return client.delete_device_configuration_state(user_id=user_id,
                                                        managed_device_id=managed_device_id,
                                                        device_configuration_state_id=device_configuration_state_id,
                                                        if_match=if_match)
    return client.delete_device_category(user_id=user_id,
                                         managed_device_id=managed_device_id,
                                         if_match=if_match)


def devicescorporatemanagement_create_device_compliance_policy_state(client,
                                                                     user_id,
                                                                     managed_device_id,
                                                                     id_=None,
                                                                     display_name=None,
                                                                     platform_type=None,
                                                                     setting_count=None,
                                                                     setting_states=None,
                                                                     state=None,
                                                                     version=None):
    return client.create_device_compliance_policy_state(user_id=user_id,
                                                        managed_device_id=managed_device_id,
                                                        id=id_,
                                                        display_name=display_name,
                                                        platform_type=platform_type,
                                                        setting_count=setting_count,
                                                        setting_states=setting_states,
                                                        state=state,
                                                        version=version)


def devicescorporatemanagement_create_device_configuration_state(client,
                                                                 user_id,
                                                                 managed_device_id,
                                                                 id_=None,
                                                                 display_name=None,
                                                                 platform_type=None,
                                                                 setting_count=None,
                                                                 setting_states=None,
                                                                 state=None,
                                                                 version=None):
    return client.create_device_configuration_state(user_id=user_id,
                                                    managed_device_id=managed_device_id,
                                                    id=id_,
                                                    display_name=display_name,
                                                    platform_type=platform_type,
                                                    setting_count=setting_count,
                                                    setting_states=setting_states,
                                                    state=state,
                                                    version=version)


def devicescorporatemanagement_get_device_category(client,
                                                   user_id,
                                                   managed_device_id,
                                                   select=None,
                                                   expand=None):
    return client.get_device_category(user_id=user_id,
                                      managed_device_id=managed_device_id,
                                      select=select,
                                      expand=expand)


def devicescorporatemanagement_get_device_compliance_policy_state(client,
                                                                  user_id,
                                                                  managed_device_id,
                                                                  device_compliance_policy_state_id,
                                                                  select=None,
                                                                  expand=None):
    return client.get_device_compliance_policy_state(user_id=user_id,
                                                     managed_device_id=managed_device_id,
                                                     device_compliance_policy_state_id=device_compliance_policy_state_id,
                                                     select=select,
                                                     expand=expand)


def devicescorporatemanagement_get_device_configuration_state(client,
                                                              user_id,
                                                              managed_device_id,
                                                              device_configuration_state_id,
                                                              select=None,
                                                              expand=None):
    return client.get_device_configuration_state(user_id=user_id,
                                                 managed_device_id=managed_device_id,
                                                 device_configuration_state_id=device_configuration_state_id,
                                                 select=select,
                                                 expand=expand)


def devicescorporatemanagement_list_device_compliance_policy_state(client,
                                                                   user_id,
                                                                   managed_device_id,
                                                                   orderby=None,
                                                                   select=None,
                                                                   expand=None):
    return client.list_device_compliance_policy_state(user_id=user_id,
                                                      managed_device_id=managed_device_id,
                                                      orderby=orderby,
                                                      select=select,
                                                      expand=expand)


def devicescorporatemanagement_list_device_configuration_state(client,
                                                               user_id,
                                                               managed_device_id,
                                                               orderby=None,
                                                               select=None,
                                                               expand=None):
    return client.list_device_configuration_state(user_id=user_id,
                                                  managed_device_id=managed_device_id,
                                                  orderby=orderby,
                                                  select=select,
                                                  expand=expand)


def devicescorporatemanagement_update_device_category(client,
                                                      user_id,
                                                      managed_device_id,
                                                      id_=None,
                                                      description=None,
                                                      display_name=None):
    return client.update_device_category(user_id=user_id,
                                         managed_device_id=managed_device_id,
                                         id=id_,
                                         description=description,
                                         display_name=display_name)


def devicescorporatemanagement_update_device_compliance_policy_state(client,
                                                                     user_id,
                                                                     managed_device_id,
                                                                     device_compliance_policy_state_id,
                                                                     id_=None,
                                                                     display_name=None,
                                                                     platform_type=None,
                                                                     setting_count=None,
                                                                     setting_states=None,
                                                                     state=None,
                                                                     version=None):
    return client.update_device_compliance_policy_state(user_id=user_id,
                                                        managed_device_id=managed_device_id,
                                                        device_compliance_policy_state_id=device_compliance_policy_state_id,
                                                        id=id_,
                                                        display_name=display_name,
                                                        platform_type=platform_type,
                                                        setting_count=setting_count,
                                                        setting_states=setting_states,
                                                        state=state,
                                                        version=version)


def devicescorporatemanagement_update_device_configuration_state(client,
                                                                 user_id,
                                                                 managed_device_id,
                                                                 device_configuration_state_id,
                                                                 id_=None,
                                                                 display_name=None,
                                                                 platform_type=None,
                                                                 setting_count=None,
                                                                 setting_states=None,
                                                                 state=None,
                                                                 version=None):
    return client.update_device_configuration_state(user_id=user_id,
                                                    managed_device_id=managed_device_id,
                                                    device_configuration_state_id=device_configuration_state_id,
                                                    id=id_,
                                                    display_name=display_name,
                                                    platform_type=platform_type,
                                                    setting_count=setting_count,
                                                    setting_states=setting_states,
                                                    state=state,
                                                    version=version)
