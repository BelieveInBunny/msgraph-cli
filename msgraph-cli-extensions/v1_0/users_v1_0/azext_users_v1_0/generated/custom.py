# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=line-too-long
# pylint: disable=too-many-lines


def users_usersuser_create_user(client,
                                body):
    return client.create_user(body=body)


def users_usersuser_delete_user(client,
                                user_id,
                                if_match=None):
    return client.delete_user(user_id=user_id,
                              if_match=if_match)


def users_usersuser_list_user(client,
                              orderby=None,
                              select=None,
                              expand=None):
    return client.list_user(orderby=orderby,
                            select=select,
                            expand=expand)


def users_usersuser_show_user(client,
                              user_id,
                              select=None,
                              expand=None):
    return client.get_user(user_id=user_id,
                           select=select,
                           expand=expand)


def users_usersuser_update_user(client,
                                user_id,
                                body):
    return client.update_user(user_id=user_id,
                              body=body)


def users_user_create_extension(client,
                                user_id,
                                id_=None):
    body = {}
    body['id'] = id_
    return client.create_extensions(user_id=user_id,
                                    body=body)


def users_user_create_license_detail(client,
                                     user_id,
                                     id_=None,
                                     service_plans=None,
                                     sku_id=None,
                                     sku_part_number=None):
    body = {}
    body['id'] = id_
    body['service_plans'] = service_plans
    body['sku_id'] = sku_id
    body['sku_part_number'] = sku_part_number
    return client.create_license_details(user_id=user_id,
                                         body=body)


def users_user_create_photo(client,
                            user_id,
                            id_=None,
                            height=None,
                            width=None):
    body = {}
    body['id'] = id_
    body['height'] = height
    body['width'] = width
    return client.create_photos(user_id=user_id,
                                body=body)


def users_user_create_ref_created_object(client,
                                         user_id,
                                         body):
    return client.create_ref_created_objects(user_id=user_id,
                                             body=body)


def users_user_create_ref_direct_report(client,
                                        user_id,
                                        body):
    return client.create_ref_direct_reports(user_id=user_id,
                                            body=body)


def users_user_create_ref_member_of(client,
                                    user_id,
                                    body):
    return client.create_ref_member_of(user_id=user_id,
                                       body=body)


def users_user_create_ref_oauth2_permission_grant(client,
                                                  user_id,
                                                  body):
    return client.create_ref_oauth2_permission_grants(user_id=user_id,
                                                      body=body)


def users_user_create_ref_owned_device(client,
                                       user_id,
                                       body):
    return client.create_ref_owned_devices(user_id=user_id,
                                           body=body)


def users_user_create_ref_owned_object(client,
                                       user_id,
                                       body):
    return client.create_ref_owned_objects(user_id=user_id,
                                           body=body)


def users_user_create_ref_registered_device(client,
                                            user_id,
                                            body):
    return client.create_ref_registered_devices(user_id=user_id,
                                                body=body)


def users_user_create_ref_transitive_member_of(client,
                                               user_id,
                                               body):
    return client.create_ref_transitive_member_of(user_id=user_id,
                                                  body=body)


def users_user_delete_extension(client,
                                user_id,
                                extension_id,
                                if_match=None):
    return client.delete_extensions(user_id=user_id,
                                    extension_id=extension_id,
                                    if_match=if_match)


def users_user_delete_license_detail(client,
                                     user_id,
                                     license_details_id,
                                     if_match=None):
    return client.delete_license_details(user_id=user_id,
                                         license_details_id=license_details_id,
                                         if_match=if_match)


def users_user_delete_outlook(client,
                              user_id,
                              if_match=None):
    return client.delete_outlook(user_id=user_id,
                                 if_match=if_match)


def users_user_delete_photo(client,
                            user_id,
                            profile_photo_id=None,
                            if_match=None):
    if user_id is not None and profile_photo_id is not None:
        return client.delete_photos(user_id=user_id,
                                    profile_photo_id=profile_photo_id,
                                    if_match=if_match)
    return client.delete_photo(user_id=user_id,
                               if_match=if_match)


def users_user_delete_ref_manager(client,
                                  user_id,
                                  if_match=None):
    return client.delete_ref_manager(user_id=user_id,
                                     if_match=if_match)


def users_user_delete_setting(client,
                              user_id,
                              if_match=None):
    return client.delete_settings(user_id=user_id,
                                  if_match=if_match)


def users_user_list_created_object(client,
                                   user_id,
                                   orderby=None,
                                   select=None,
                                   expand=None):
    return client.list_created_objects(user_id=user_id,
                                       orderby=orderby,
                                       select=select,
                                       expand=expand)


def users_user_list_direct_report(client,
                                  user_id,
                                  orderby=None,
                                  select=None,
                                  expand=None):
    return client.list_direct_reports(user_id=user_id,
                                      orderby=orderby,
                                      select=select,
                                      expand=expand)


def users_user_list_extension(client,
                              user_id,
                              orderby=None,
                              select=None,
                              expand=None):
    return client.list_extensions(user_id=user_id,
                                  orderby=orderby,
                                  select=select,
                                  expand=expand)


def users_user_list_license_detail(client,
                                   user_id,
                                   orderby=None,
                                   select=None,
                                   expand=None):
    return client.list_license_details(user_id=user_id,
                                       orderby=orderby,
                                       select=select,
                                       expand=expand)


def users_user_list_member_of(client,
                              user_id,
                              orderby=None,
                              select=None,
                              expand=None):
    return client.list_member_of(user_id=user_id,
                                 orderby=orderby,
                                 select=select,
                                 expand=expand)


def users_user_list_oauth2_permission_grant(client,
                                            user_id,
                                            orderby=None,
                                            select=None,
                                            expand=None):
    return client.list_oauth2_permission_grants(user_id=user_id,
                                                orderby=orderby,
                                                select=select,
                                                expand=expand)


def users_user_list_owned_device(client,
                                 user_id,
                                 orderby=None,
                                 select=None,
                                 expand=None):
    return client.list_owned_devices(user_id=user_id,
                                     orderby=orderby,
                                     select=select,
                                     expand=expand)


def users_user_list_owned_object(client,
                                 user_id,
                                 orderby=None,
                                 select=None,
                                 expand=None):
    return client.list_owned_objects(user_id=user_id,
                                     orderby=orderby,
                                     select=select,
                                     expand=expand)


def users_user_list_photo(client,
                          user_id,
                          orderby=None,
                          select=None,
                          expand=None):
    return client.list_photos(user_id=user_id,
                              orderby=orderby,
                              select=select,
                              expand=expand)


def users_user_list_ref_created_object(client,
                                       user_id,
                                       orderby=None):
    return client.list_ref_created_objects(user_id=user_id,
                                           orderby=orderby)


def users_user_list_ref_direct_report(client,
                                      user_id,
                                      orderby=None):
    return client.list_ref_direct_reports(user_id=user_id,
                                          orderby=orderby)


def users_user_list_ref_member_of(client,
                                  user_id,
                                  orderby=None):
    return client.list_ref_member_of(user_id=user_id,
                                     orderby=orderby)


def users_user_list_ref_oauth2_permission_grant(client,
                                                user_id,
                                                orderby=None):
    return client.list_ref_oauth2_permission_grants(user_id=user_id,
                                                    orderby=orderby)


def users_user_list_ref_owned_device(client,
                                     user_id,
                                     orderby=None):
    return client.list_ref_owned_devices(user_id=user_id,
                                         orderby=orderby)


def users_user_list_ref_owned_object(client,
                                     user_id,
                                     orderby=None):
    return client.list_ref_owned_objects(user_id=user_id,
                                         orderby=orderby)


def users_user_list_ref_registered_device(client,
                                          user_id,
                                          orderby=None):
    return client.list_ref_registered_devices(user_id=user_id,
                                              orderby=orderby)


def users_user_list_ref_transitive_member_of(client,
                                             user_id,
                                             orderby=None):
    return client.list_ref_transitive_member_of(user_id=user_id,
                                                orderby=orderby)


def users_user_list_registered_device(client,
                                      user_id,
                                      orderby=None,
                                      select=None,
                                      expand=None):
    return client.list_registered_devices(user_id=user_id,
                                          orderby=orderby,
                                          select=select,
                                          expand=expand)


def users_user_list_transitive_member_of(client,
                                         user_id,
                                         orderby=None,
                                         select=None,
                                         expand=None):
    return client.list_transitive_member_of(user_id=user_id,
                                            orderby=orderby,
                                            select=select,
                                            expand=expand)


def users_user_set_ref_manager(client,
                               user_id,
                               body):
    return client.set_ref_manager(user_id=user_id,
                                  body=body)


def users_user_show_extension(client,
                              user_id,
                              extension_id,
                              select=None,
                              expand=None):
    return client.get_extensions(user_id=user_id,
                                 extension_id=extension_id,
                                 select=select,
                                 expand=expand)


def users_user_show_license_detail(client,
                                   user_id,
                                   license_details_id,
                                   select=None,
                                   expand=None):
    return client.get_license_details(user_id=user_id,
                                      license_details_id=license_details_id,
                                      select=select,
                                      expand=expand)


def users_user_show_manager(client,
                            user_id,
                            select=None,
                            expand=None):
    return client.get_manager(user_id=user_id,
                              select=select,
                              expand=expand)


def users_user_show_outlook(client,
                            user_id,
                            select=None,
                            expand=None):
    return client.get_outlook(user_id=user_id,
                              select=select,
                              expand=expand)


def users_user_show_photo(client,
                          user_id,
                          profile_photo_id=None,
                          select=None,
                          expand=None):
    if user_id is not None and profile_photo_id is not None:
        return client.get_photos(user_id=user_id,
                                 profile_photo_id=profile_photo_id,
                                 select=select,
                                 expand=expand)
    return client.get_photo(user_id=user_id,
                            select=select,
                            expand=expand)


def users_user_show_ref_manager(client,
                                user_id):
    return client.get_ref_manager(user_id=user_id)


def users_user_show_setting(client,
                            user_id,
                            select=None,
                            expand=None):
    return client.get_settings(user_id=user_id,
                               select=select,
                               expand=expand)


def users_user_update_extension(client,
                                user_id,
                                extension_id,
                                id_=None):
    body = {}
    body['id'] = id_
    return client.update_extensions(user_id=user_id,
                                    extension_id=extension_id,
                                    body=body)


def users_user_update_license_detail(client,
                                     user_id,
                                     license_details_id,
                                     id_=None,
                                     service_plans=None,
                                     sku_id=None,
                                     sku_part_number=None):
    body = {}
    body['id'] = id_
    body['service_plans'] = service_plans
    body['sku_id'] = sku_id
    body['sku_part_number'] = sku_part_number
    return client.update_license_details(user_id=user_id,
                                         license_details_id=license_details_id,
                                         body=body)


def users_user_update_outlook(client,
                              user_id,
                              id_=None,
                              master_categories=None):
    body = {}
    body['id'] = id_
    body['master_categories'] = master_categories
    return client.update_outlook(user_id=user_id,
                                 body=body)


def users_user_update_photo(client,
                            user_id,
                            profile_photo_id=None,
                            id_=None,
                            height=None,
                            width=None):
    body = {}
    body['id'] = id_
    body['height'] = height
    body['width'] = width
    if user_id is not None and profile_photo_id is not None:
        return client.update_photos(user_id=user_id,
                                    profile_photo_id=profile_photo_id,
                                    body=body)
    return client.update_photo(user_id=user_id,
                               body=body)


def users_user_update_setting(client,
                              user_id,
                              id_=None,
                              contribution_to_content_discovery_as_organization_disabled=None,
                              contribution_to_content_discovery_disabled=None,
                              microsoft_graph_entity_id=None,
                              created_date_time=None,
                              last_modified_date_time=None,
                              application=None,
                              device=None,
                              user=None,
                              availability=None):
    body = {}
    body['id'] = id_
    body['contribution_to_content_discovery_as_organization_disabled'] = contribution_to_content_discovery_as_organization_disabled
    body['contribution_to_content_discovery_disabled'] = contribution_to_content_discovery_disabled
    body['shift_preferences'] = {}
    body['shift_preferences']['id'] = microsoft_graph_entity_id
    body['shift_preferences']['created_date_time'] = created_date_time
    body['shift_preferences']['last_modified_date_time'] = last_modified_date_time
    body['shift_preferences']['last_modified_by'] = {}
    body['shift_preferences']['last_modified_by']['application'] = application
    body['shift_preferences']['last_modified_by']['device'] = device
    body['shift_preferences']['last_modified_by']['user'] = user
    body['shift_preferences']['availability'] = availability
    return client.update_settings(user_id=user_id,
                                  body=body)


def users_usersoutlook_create_master_category(client,
                                              user_id,
                                              id_=None,
                                              color=None,
                                              display_name=None):
    body = {}
    body['id'] = id_
    body['color'] = color
    body['display_name'] = display_name
    return client.create_master_categories(user_id=user_id,
                                           body=body)


def users_usersoutlook_delete_master_category(client,
                                              user_id,
                                              outlook_category_id,
                                              if_match=None):
    return client.delete_master_categories(user_id=user_id,
                                           outlook_category_id=outlook_category_id,
                                           if_match=if_match)


def users_usersoutlook_list_master_category(client,
                                            user_id,
                                            orderby=None,
                                            select=None,
                                            expand=None):
    return client.list_master_categories(user_id=user_id,
                                         orderby=orderby,
                                         select=select,
                                         expand=expand)


def users_usersoutlook_show_master_category(client,
                                            user_id,
                                            outlook_category_id,
                                            select=None,
                                            expand=None):
    return client.get_master_categories(user_id=user_id,
                                        outlook_category_id=outlook_category_id,
                                        select=select,
                                        expand=expand)


def users_usersoutlook_update_master_category(client,
                                              user_id,
                                              outlook_category_id,
                                              id_=None,
                                              color=None,
                                              display_name=None):
    body = {}
    body['id'] = id_
    body['color'] = color
    body['display_name'] = display_name
    return client.update_master_categories(user_id=user_id,
                                           outlook_category_id=outlook_category_id,
                                           body=body)


def users_userssetting_delete_shift_preference(client,
                                               user_id,
                                               if_match=None):
    return client.delete_shift_preferences(user_id=user_id,
                                           if_match=if_match)


def users_userssetting_show_shift_preference(client,
                                             user_id,
                                             select=None,
                                             expand=None):
    return client.get_shift_preferences(user_id=user_id,
                                        select=select,
                                        expand=expand)


def users_userssetting_update_shift_preference(client,
                                               user_id,
                                               id_=None,
                                               created_date_time=None,
                                               last_modified_date_time=None,
                                               application=None,
                                               device=None,
                                               user=None,
                                               availability=None):
    body = {}
    body['id'] = id_
    body['created_date_time'] = created_date_time
    body['last_modified_date_time'] = last_modified_date_time
    body['last_modified_by'] = {}
    body['last_modified_by']['application'] = application
    body['last_modified_by']['device'] = device
    body['last_modified_by']['user'] = user
    body['availability'] = availability
    return client.update_shift_preferences(user_id=user_id,
                                           body=body)
