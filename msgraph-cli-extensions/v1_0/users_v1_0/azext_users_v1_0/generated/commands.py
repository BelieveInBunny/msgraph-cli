# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=too-many-statements
# pylint: disable=too-many-locals

from msgraph.cli.core.commands import CliCommandType


def load_command_table(self, _):

    from azext_users_v1_0.generated._client_factory import cf_user_user
    users_v1_0_user_user = CliCommandType(
        operations_tmpl='azext_users_v1_0.vendored_sdks.users.operations._user_user_operations#UserUserOperations.{}',
        client_factory=cf_user_user)
    with self.command_group('users', users_v1_0_user_user, client_factory=cf_user_user) as g:
        g.custom_command('delete', 'users_delete', confirmation=True)
        g.custom_command('create-user', 'users_create_user')
        g.custom_command('get-user', 'users_get_user')
        g.custom_command('list-user', 'users_list_user')
        g.custom_command('update-user', 'users_update_user')

    from azext_users_v1_0.generated._client_factory import cf_user
    users_v1_0_user = CliCommandType(
        operations_tmpl='azext_users_v1_0.vendored_sdks.users.operations._user_operations#UserOperations.{}',
        client_factory=cf_user)
    with self.command_group('users', users_v1_0_user, client_factory=cf_user) as g:
        g.custom_command('delete', 'users_delete', confirmation=True)
        g.custom_command('create-extension', 'users_create_extension')
        g.custom_command('create-license-detail', 'users_create_license_detail')
        g.custom_command('create-photo', 'users_create_photo')
        g.custom_command('create-ref-created-object', 'users_create_ref_created_object')
        g.custom_command('create-ref-direct-report', 'users_create_ref_direct_report')
        g.custom_command('create-ref-member-of', 'users_create_ref_member_of')
        g.custom_command('create-ref-oauth2-permission-grant', 'users_create_ref_oauth2_permission_grant')
        g.custom_command('create-ref-owned-device', 'users_create_ref_owned_device')
        g.custom_command('create-ref-owned-object', 'users_create_ref_owned_object')
        g.custom_command('create-ref-registered-device', 'users_create_ref_registered_device')
        g.custom_command('create-ref-transitive-member-of', 'users_create_ref_transitive_member_of')
        g.custom_command('get-extension', 'users_get_extension')
        g.custom_command('get-license-detail', 'users_get_license_detail')
        g.custom_command('get-manager', 'users_get_manager')
        g.custom_command('get-outlook', 'users_get_outlook')
        g.custom_command('get-photo', 'users_get_photo')
        g.custom_command('get-ref-manager', 'users_get_ref_manager')
        g.custom_command('get-setting', 'users_get_setting')
        g.custom_command('list-created-object', 'users_list_created_object')
        g.custom_command('list-direct-report', 'users_list_direct_report')
        g.custom_command('list-extension', 'users_list_extension')
        g.custom_command('list-license-detail', 'users_list_license_detail')
        g.custom_command('list-member-of', 'users_list_member_of')
        g.custom_command('list-oauth2-permission-grant', 'users_list_oauth2_permission_grant')
        g.custom_command('list-owned-device', 'users_list_owned_device')
        g.custom_command('list-owned-object', 'users_list_owned_object')
        g.custom_command('list-photo', 'users_list_photo')
        g.custom_command('list-ref-created-object', 'users_list_ref_created_object')
        g.custom_command('list-ref-direct-report', 'users_list_ref_direct_report')
        g.custom_command('list-ref-member-of', 'users_list_ref_member_of')
        g.custom_command('list-ref-oauth2-permission-grant', 'users_list_ref_oauth2_permission_grant')
        g.custom_command('list-ref-owned-device', 'users_list_ref_owned_device')
        g.custom_command('list-ref-owned-object', 'users_list_ref_owned_object')
        g.custom_command('list-ref-registered-device', 'users_list_ref_registered_device')
        g.custom_command('list-ref-transitive-member-of', 'users_list_ref_transitive_member_of')
        g.custom_command('list-registered-device', 'users_list_registered_device')
        g.custom_command('list-transitive-member-of', 'users_list_transitive_member_of')
        g.custom_command('set-ref-manager', 'users_set_ref_manager')
        g.custom_command('update-extension', 'users_update_extension')
        g.custom_command('update-license-detail', 'users_update_license_detail')
        g.custom_command('update-outlook', 'users_update_outlook')
        g.custom_command('update-photo', 'users_update_photo')
        g.custom_command('update-setting', 'users_update_setting')

    from azext_users_v1_0.generated._client_factory import cf_user_outlook
    users_v1_0_user_outlook = CliCommandType(
        operations_tmpl='azext_users_v1_0.vendored_sdks.users.operations._user_outlook_operations#UserOutlookOperations'
        '.{}',
        client_factory=cf_user_outlook)
    with self.command_group('users', users_v1_0_user_outlook, client_factory=cf_user_outlook) as g:
        g.custom_command('delete', 'users_delete', confirmation=True)
        g.custom_command('create-master-category', 'users_create_master_category')
        g.custom_command('get-master-category', 'users_get_master_category')
        g.custom_command('list-master-category', 'users_list_master_category')
        g.custom_command('update-master-category', 'users_update_master_category')

    from azext_users_v1_0.generated._client_factory import cf_user_setting
    users_v1_0_user_setting = CliCommandType(
        operations_tmpl='azext_users_v1_0.vendored_sdks.users.operations._user_setting_operations#UserSettingOperations'
        '.{}',
        client_factory=cf_user_setting)
    with self.command_group('users', users_v1_0_user_setting, client_factory=cf_user_setting) as g:
        g.custom_command('delete', 'users_delete', confirmation=True)
        g.custom_command('get-shift-preference', 'users_get_shift_preference')
        g.custom_command('update-shift-preference', 'users_update_shift_preference')
