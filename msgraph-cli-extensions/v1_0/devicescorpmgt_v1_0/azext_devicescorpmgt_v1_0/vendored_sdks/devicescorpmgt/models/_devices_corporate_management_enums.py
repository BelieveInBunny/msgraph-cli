# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from enum import Enum, EnumMeta
from six import with_metaclass

class _CaseInsensitiveEnumMeta(EnumMeta):
    def __getitem__(self, name):
        return super().__getitem__(name.upper())

    def __getattr__(cls, name):
        """Return the enum member matching `name`
        We use __getattr__ instead of descriptors or inserting into the enum
        class' __dict__ in order to support `name` and `value` being both
        properties for enum members (which live in the class' __dict__) and
        enum members themselves.
        """
        try:
            return cls._member_map_[name.upper()]
        except KeyError:
            raise AttributeError(name)


class Enum100(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    TARGET = "target"

class Enum101(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    COMPLIANCE_GRACE_PERIOD_EXPIRATION_DATE_TIME = "complianceGracePeriodExpirationDateTime"
    COMPLIANCE_GRACE_PERIOD_EXPIRATION_DATE_TIME_DESC = "complianceGracePeriodExpirationDateTime desc"
    DEVICE_DISPLAY_NAME = "deviceDisplayName"
    DEVICE_DISPLAY_NAME_DESC = "deviceDisplayName desc"
    DEVICE_MODEL = "deviceModel"
    DEVICE_MODEL_DESC = "deviceModel desc"
    LAST_REPORTED_DATE_TIME = "lastReportedDateTime"
    LAST_REPORTED_DATE_TIME_DESC = "lastReportedDateTime desc"
    STATUS = "status"
    STATUS_DESC = "status desc"
    USER_NAME = "userName"
    USER_NAME_DESC = "userName desc"
    USER_PRINCIPAL_NAME = "userPrincipalName"
    USER_PRINCIPAL_NAME_DESC = "userPrincipalName desc"

class Enum102(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    COMPLIANCE_GRACE_PERIOD_EXPIRATION_DATE_TIME = "complianceGracePeriodExpirationDateTime"
    DEVICE_DISPLAY_NAME = "deviceDisplayName"
    DEVICE_MODEL = "deviceModel"
    LAST_REPORTED_DATE_TIME = "lastReportedDateTime"
    STATUS = "status"
    USER_NAME = "userName"
    USER_PRINCIPAL_NAME = "userPrincipalName"

class Enum103(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    COMPLIANCE_GRACE_PERIOD_EXPIRATION_DATE_TIME = "complianceGracePeriodExpirationDateTime"
    DEVICE_DISPLAY_NAME = "deviceDisplayName"
    DEVICE_MODEL = "deviceModel"
    LAST_REPORTED_DATE_TIME = "lastReportedDateTime"
    STATUS = "status"
    USER_NAME = "userName"
    USER_PRINCIPAL_NAME = "userPrincipalName"

class Enum104(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CONFIGURATION_VERSION = "configurationVersion"
    ERROR_COUNT = "errorCount"
    FAILED_COUNT = "failedCount"
    LAST_UPDATE_DATE_TIME = "lastUpdateDateTime"
    NOT_APPLICABLE_COUNT = "notApplicableCount"
    PENDING_COUNT = "pendingCount"
    SUCCESS_COUNT = "successCount"

class Enum105(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    DEVICES_COUNT = "devicesCount"
    DEVICES_COUNT_DESC = "devicesCount desc"
    LAST_REPORTED_DATE_TIME = "lastReportedDateTime"
    LAST_REPORTED_DATE_TIME_DESC = "lastReportedDateTime desc"
    STATUS = "status"
    STATUS_DESC = "status desc"
    USER_DISPLAY_NAME = "userDisplayName"
    USER_DISPLAY_NAME_DESC = "userDisplayName desc"
    USER_PRINCIPAL_NAME = "userPrincipalName"
    USER_PRINCIPAL_NAME_DESC = "userPrincipalName desc"

class Enum106(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    DEVICES_COUNT = "devicesCount"
    LAST_REPORTED_DATE_TIME = "lastReportedDateTime"
    STATUS = "status"
    USER_DISPLAY_NAME = "userDisplayName"
    USER_PRINCIPAL_NAME = "userPrincipalName"

class Enum107(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    DEVICES_COUNT = "devicesCount"
    LAST_REPORTED_DATE_TIME = "lastReportedDateTime"
    STATUS = "status"
    USER_DISPLAY_NAME = "userDisplayName"
    USER_PRINCIPAL_NAME = "userPrincipalName"

class Enum108(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CONFIGURATION_VERSION = "configurationVersion"
    ERROR_COUNT = "errorCount"
    FAILED_COUNT = "failedCount"
    LAST_UPDATE_DATE_TIME = "lastUpdateDateTime"
    NOT_APPLICABLE_COUNT = "notApplicableCount"
    PENDING_COUNT = "pendingCount"
    SUCCESS_COUNT = "successCount"

class Enum109(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    CREATED_DATE_TIME = "createdDateTime"
    CREATED_DATE_TIME_DESC = "createdDateTime desc"
    DESCRIPTION = "description"
    DESCRIPTION_DESC = "description desc"
    DEVELOPER = "developer"
    DEVELOPER_DESC = "developer desc"
    DISPLAY_NAME = "displayName"
    DISPLAY_NAME_DESC = "displayName desc"
    INFORMATION_URL = "informationUrl"
    INFORMATION_URL_DESC = "informationUrl desc"
    IS_FEATURED = "isFeatured"
    IS_FEATURED_DESC = "isFeatured desc"
    LARGE_ICON = "largeIcon"
    LARGE_ICON_DESC = "largeIcon desc"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    LAST_MODIFIED_DATE_TIME_DESC = "lastModifiedDateTime desc"
    NOTES = "notes"
    NOTES_DESC = "notes desc"
    OWNER = "owner"
    OWNER_DESC = "owner desc"
    PRIVACY_INFORMATION_URL = "privacyInformationUrl"
    PRIVACY_INFORMATION_URL_DESC = "privacyInformationUrl desc"
    PUBLISHER = "publisher"
    PUBLISHER_DESC = "publisher desc"
    PUBLISHING_STATE = "publishingState"
    PUBLISHING_STATE_DESC = "publishingState desc"

class Enum110(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CREATED_DATE_TIME = "createdDateTime"
    DESCRIPTION = "description"
    DEVELOPER = "developer"
    DISPLAY_NAME = "displayName"
    INFORMATION_URL = "informationUrl"
    IS_FEATURED = "isFeatured"
    LARGE_ICON = "largeIcon"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    NOTES = "notes"
    OWNER = "owner"
    PRIVACY_INFORMATION_URL = "privacyInformationUrl"
    PUBLISHER = "publisher"
    PUBLISHING_STATE = "publishingState"
    ASSIGNMENTS = "assignments"
    CATEGORIES = "categories"

class Enum111(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    ASSIGNMENTS = "assignments"
    CATEGORIES = "categories"

class Enum112(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CREATED_DATE_TIME = "createdDateTime"
    DESCRIPTION = "description"
    DEVELOPER = "developer"
    DISPLAY_NAME = "displayName"
    INFORMATION_URL = "informationUrl"
    IS_FEATURED = "isFeatured"
    LARGE_ICON = "largeIcon"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    NOTES = "notes"
    OWNER = "owner"
    PRIVACY_INFORMATION_URL = "privacyInformationUrl"
    PUBLISHER = "publisher"
    PUBLISHING_STATE = "publishingState"
    ASSIGNMENTS = "assignments"
    CATEGORIES = "categories"

class Enum113(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    ASSIGNMENTS = "assignments"
    CATEGORIES = "categories"

class Enum114(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    INTENT = "intent"
    INTENT_DESC = "intent desc"
    SETTINGS = "settings"
    SETTINGS_DESC = "settings desc"
    TARGET = "target"
    TARGET_DESC = "target desc"

class Enum115(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    INTENT = "intent"
    SETTINGS = "settings"
    TARGET = "target"

class Enum116(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    INTENT = "intent"
    SETTINGS = "settings"
    TARGET = "target"

class Enum117(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    DISPLAY_NAME = "displayName"
    DISPLAY_NAME_DESC = "displayName desc"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    LAST_MODIFIED_DATE_TIME_DESC = "lastModifiedDateTime desc"

class Enum118(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"

class Enum119(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    DISPLAY_NAME = "displayName"
    DISPLAY_NAME_DESC = "displayName desc"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    LAST_MODIFIED_DATE_TIME_DESC = "lastModifiedDateTime desc"

class Enum120(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    CREATED_DATE_TIME = "createdDateTime"
    CREATED_DATE_TIME_DESC = "createdDateTime desc"
    DESCRIPTION = "description"
    DESCRIPTION_DESC = "description desc"
    DISPLAY_NAME = "displayName"
    DISPLAY_NAME_DESC = "displayName desc"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    LAST_MODIFIED_DATE_TIME_DESC = "lastModifiedDateTime desc"
    VERSION = "version"
    VERSION_DESC = "version desc"
    CUSTOM_SETTINGS = "customSettings"
    CUSTOM_SETTINGS_DESC = "customSettings desc"
    DEPLOYED_APP_COUNT = "deployedAppCount"
    DEPLOYED_APP_COUNT_DESC = "deployedAppCount desc"
    IS_ASSIGNED = "isAssigned"
    IS_ASSIGNED_DESC = "isAssigned desc"

class Enum121(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CREATED_DATE_TIME = "createdDateTime"
    DESCRIPTION = "description"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    VERSION = "version"
    CUSTOM_SETTINGS = "customSettings"
    DEPLOYED_APP_COUNT = "deployedAppCount"
    IS_ASSIGNED = "isAssigned"
    APPS = "apps"
    ASSIGNMENTS = "assignments"
    DEPLOYMENT_SUMMARY = "deploymentSummary"

class Enum122(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    APPS = "apps"
    ASSIGNMENTS = "assignments"
    DEPLOYMENT_SUMMARY = "deploymentSummary"

class Enum123(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CREATED_DATE_TIME = "createdDateTime"
    DESCRIPTION = "description"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    VERSION = "version"
    CUSTOM_SETTINGS = "customSettings"
    DEPLOYED_APP_COUNT = "deployedAppCount"
    IS_ASSIGNED = "isAssigned"
    APPS = "apps"
    ASSIGNMENTS = "assignments"
    DEPLOYMENT_SUMMARY = "deploymentSummary"

class Enum124(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    APPS = "apps"
    ASSIGNMENTS = "assignments"
    DEPLOYMENT_SUMMARY = "deploymentSummary"

class Enum125(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    MOBILE_APP_IDENTIFIER = "mobileAppIdentifier"
    MOBILE_APP_IDENTIFIER_DESC = "mobileAppIdentifier desc"
    VERSION = "version"
    VERSION_DESC = "version desc"

class Enum126(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    MOBILE_APP_IDENTIFIER = "mobileAppIdentifier"
    VERSION = "version"

class Enum127(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    MOBILE_APP_IDENTIFIER = "mobileAppIdentifier"
    VERSION = "version"

class Enum128(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    TARGET = "target"
    TARGET_DESC = "target desc"

class Enum129(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    TARGET = "target"

class Enum130(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    TARGET = "target"

class Enum131(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CONFIGURATION_DEPLOYED_USER_COUNT = "configurationDeployedUserCount"
    CONFIGURATION_DEPLOYMENT_SUMMARY_PER_APP = "configurationDeploymentSummaryPerApp"
    DISPLAY_NAME = "displayName"
    LAST_REFRESH_TIME = "lastRefreshTime"
    VERSION = "version"

class Enum132(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    APPLE_ID = "appleId"
    APPLE_ID_DESC = "appleId desc"
    AUTOMATICALLY_UPDATE_APPS = "automaticallyUpdateApps"
    AUTOMATICALLY_UPDATE_APPS_DESC = "automaticallyUpdateApps desc"
    COUNTRY_OR_REGION = "countryOrRegion"
    COUNTRY_OR_REGION_DESC = "countryOrRegion desc"
    EXPIRATION_DATE_TIME = "expirationDateTime"
    EXPIRATION_DATE_TIME_DESC = "expirationDateTime desc"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    LAST_MODIFIED_DATE_TIME_DESC = "lastModifiedDateTime desc"
    LAST_SYNC_DATE_TIME = "lastSyncDateTime"
    LAST_SYNC_DATE_TIME_DESC = "lastSyncDateTime desc"
    LAST_SYNC_STATUS = "lastSyncStatus"
    LAST_SYNC_STATUS_DESC = "lastSyncStatus desc"
    ORGANIZATION_NAME = "organizationName"
    ORGANIZATION_NAME_DESC = "organizationName desc"
    STATE = "state"
    STATE_DESC = "state desc"
    TOKEN = "token"
    TOKEN_DESC = "token desc"
    VPP_TOKEN_ACCOUNT_TYPE = "vppTokenAccountType"
    VPP_TOKEN_ACCOUNT_TYPE_DESC = "vppTokenAccountType desc"

class Enum133(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    APPLE_ID = "appleId"
    AUTOMATICALLY_UPDATE_APPS = "automaticallyUpdateApps"
    COUNTRY_OR_REGION = "countryOrRegion"
    EXPIRATION_DATE_TIME = "expirationDateTime"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    LAST_SYNC_DATE_TIME = "lastSyncDateTime"
    LAST_SYNC_STATUS = "lastSyncStatus"
    ORGANIZATION_NAME = "organizationName"
    STATE = "state"
    TOKEN = "token"
    VPP_TOKEN_ACCOUNT_TYPE = "vppTokenAccountType"

class Enum134(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    APPLE_ID = "appleId"
    AUTOMATICALLY_UPDATE_APPS = "automaticallyUpdateApps"
    COUNTRY_OR_REGION = "countryOrRegion"
    EXPIRATION_DATE_TIME = "expirationDateTime"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    LAST_SYNC_DATE_TIME = "lastSyncDateTime"
    LAST_SYNC_STATUS = "lastSyncStatus"
    ORGANIZATION_NAME = "organizationName"
    STATE = "state"
    TOKEN = "token"
    VPP_TOKEN_ACCOUNT_TYPE = "vppTokenAccountType"

class Enum135(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    CREATED_DATE_TIME = "createdDateTime"
    CREATED_DATE_TIME_DESC = "createdDateTime desc"
    DESCRIPTION = "description"
    DESCRIPTION_DESC = "description desc"
    DISPLAY_NAME = "displayName"
    DISPLAY_NAME_DESC = "displayName desc"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    LAST_MODIFIED_DATE_TIME_DESC = "lastModifiedDateTime desc"
    VERSION = "version"
    VERSION_DESC = "version desc"
    AZURE_RIGHTS_MANAGEMENT_SERVICES_ALLOWED = "azureRightsManagementServicesAllowed"
    AZURE_RIGHTS_MANAGEMENT_SERVICES_ALLOWED_DESC = "azureRightsManagementServicesAllowed desc"
    DATA_RECOVERY_CERTIFICATE = "dataRecoveryCertificate"
    DATA_RECOVERY_CERTIFICATE_DESC = "dataRecoveryCertificate desc"
    ENFORCEMENT_LEVEL = "enforcementLevel"
    ENFORCEMENT_LEVEL_DESC = "enforcementLevel desc"
    ENTERPRISE_DOMAIN = "enterpriseDomain"
    ENTERPRISE_DOMAIN_DESC = "enterpriseDomain desc"
    ENTERPRISE_INTERNAL_PROXY_SERVERS = "enterpriseInternalProxyServers"
    ENTERPRISE_INTERNAL_PROXY_SERVERS_DESC = "enterpriseInternalProxyServers desc"
    ENTERPRISE_IP_RANGES = "enterpriseIPRanges"
    ENTERPRISE_IP_RANGES_DESC = "enterpriseIPRanges desc"
    ENTERPRISE_IP_RANGES_ARE_AUTHORITATIVE = "enterpriseIPRangesAreAuthoritative"
    ENTERPRISE_IP_RANGES_ARE_AUTHORITATIVE_DESC = "enterpriseIPRangesAreAuthoritative desc"
    ENTERPRISE_NETWORK_DOMAIN_NAMES = "enterpriseNetworkDomainNames"
    ENTERPRISE_NETWORK_DOMAIN_NAMES_DESC = "enterpriseNetworkDomainNames desc"
    ENTERPRISE_PROTECTED_DOMAIN_NAMES = "enterpriseProtectedDomainNames"
    ENTERPRISE_PROTECTED_DOMAIN_NAMES_DESC = "enterpriseProtectedDomainNames desc"
    ENTERPRISE_PROXIED_DOMAINS = "enterpriseProxiedDomains"
    ENTERPRISE_PROXIED_DOMAINS_DESC = "enterpriseProxiedDomains desc"
    ENTERPRISE_PROXY_SERVERS = "enterpriseProxyServers"
    ENTERPRISE_PROXY_SERVERS_DESC = "enterpriseProxyServers desc"
    ENTERPRISE_PROXY_SERVERS_ARE_AUTHORITATIVE = "enterpriseProxyServersAreAuthoritative"
    ENTERPRISE_PROXY_SERVERS_ARE_AUTHORITATIVE_DESC = "enterpriseProxyServersAreAuthoritative desc"
    EXEMPT_APPS = "exemptApps"
    EXEMPT_APPS_DESC = "exemptApps desc"
    ICONS_VISIBLE = "iconsVisible"
    ICONS_VISIBLE_DESC = "iconsVisible desc"
    INDEXING_ENCRYPTED_STORES_OR_ITEMS_BLOCKED = "indexingEncryptedStoresOrItemsBlocked"
    INDEXING_ENCRYPTED_STORES_OR_ITEMS_BLOCKED_DESC = "indexingEncryptedStoresOrItemsBlocked desc"
    IS_ASSIGNED = "isAssigned"
    IS_ASSIGNED_DESC = "isAssigned desc"
    NEUTRAL_DOMAIN_RESOURCES = "neutralDomainResources"
    NEUTRAL_DOMAIN_RESOURCES_DESC = "neutralDomainResources desc"
    PROTECTED_APPS = "protectedApps"
    PROTECTED_APPS_DESC = "protectedApps desc"
    PROTECTION_UNDER_LOCK_CONFIG_REQUIRED = "protectionUnderLockConfigRequired"
    PROTECTION_UNDER_LOCK_CONFIG_REQUIRED_DESC = "protectionUnderLockConfigRequired desc"
    REVOKE_ON_UNENROLL_DISABLED = "revokeOnUnenrollDisabled"
    REVOKE_ON_UNENROLL_DISABLED_DESC = "revokeOnUnenrollDisabled desc"
    RIGHTS_MANAGEMENT_SERVICES_TEMPLATE_ID = "rightsManagementServicesTemplateId"
    RIGHTS_MANAGEMENT_SERVICES_TEMPLATE_ID_DESC = "rightsManagementServicesTemplateId desc"
    SMB_AUTO_ENCRYPTED_FILE_EXTENSIONS = "smbAutoEncryptedFileExtensions"
    SMB_AUTO_ENCRYPTED_FILE_EXTENSIONS_DESC = "smbAutoEncryptedFileExtensions desc"
    DAYS_WITHOUT_CONTACT_BEFORE_UNENROLL = "daysWithoutContactBeforeUnenroll"
    DAYS_WITHOUT_CONTACT_BEFORE_UNENROLL_DESC = "daysWithoutContactBeforeUnenroll desc"
    MDM_ENROLLMENT_URL = "mdmEnrollmentUrl"
    MDM_ENROLLMENT_URL_DESC = "mdmEnrollmentUrl desc"
    MINUTES_OF_INACTIVITY_BEFORE_DEVICE_LOCK = "minutesOfInactivityBeforeDeviceLock"
    MINUTES_OF_INACTIVITY_BEFORE_DEVICE_LOCK_DESC = "minutesOfInactivityBeforeDeviceLock desc"
    NUMBER_OF_PAST_PINS_REMEMBERED = "numberOfPastPinsRemembered"
    NUMBER_OF_PAST_PINS_REMEMBERED_DESC = "numberOfPastPinsRemembered desc"
    PASSWORD_MAXIMUM_ATTEMPT_COUNT = "passwordMaximumAttemptCount"
    PASSWORD_MAXIMUM_ATTEMPT_COUNT_DESC = "passwordMaximumAttemptCount desc"
    PIN_EXPIRATION_DAYS = "pinExpirationDays"
    PIN_EXPIRATION_DAYS_DESC = "pinExpirationDays desc"
    PIN_LOWERCASE_LETTERS = "pinLowercaseLetters"
    PIN_LOWERCASE_LETTERS_DESC = "pinLowercaseLetters desc"
    PIN_MINIMUM_LENGTH = "pinMinimumLength"
    PIN_MINIMUM_LENGTH_DESC = "pinMinimumLength desc"
    PIN_SPECIAL_CHARACTERS = "pinSpecialCharacters"
    PIN_SPECIAL_CHARACTERS_DESC = "pinSpecialCharacters desc"
    PIN_UPPERCASE_LETTERS = "pinUppercaseLetters"
    PIN_UPPERCASE_LETTERS_DESC = "pinUppercaseLetters desc"
    REVOKE_ON_MDM_HANDOFF_DISABLED = "revokeOnMdmHandoffDisabled"
    REVOKE_ON_MDM_HANDOFF_DISABLED_DESC = "revokeOnMdmHandoffDisabled desc"
    WINDOWS_HELLO_FOR_BUSINESS_BLOCKED = "windowsHelloForBusinessBlocked"
    WINDOWS_HELLO_FOR_BUSINESS_BLOCKED_DESC = "windowsHelloForBusinessBlocked desc"

class Enum136(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CREATED_DATE_TIME = "createdDateTime"
    DESCRIPTION = "description"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    VERSION = "version"
    AZURE_RIGHTS_MANAGEMENT_SERVICES_ALLOWED = "azureRightsManagementServicesAllowed"
    DATA_RECOVERY_CERTIFICATE = "dataRecoveryCertificate"
    ENFORCEMENT_LEVEL = "enforcementLevel"
    ENTERPRISE_DOMAIN = "enterpriseDomain"
    ENTERPRISE_INTERNAL_PROXY_SERVERS = "enterpriseInternalProxyServers"
    ENTERPRISE_IP_RANGES = "enterpriseIPRanges"
    ENTERPRISE_IP_RANGES_ARE_AUTHORITATIVE = "enterpriseIPRangesAreAuthoritative"
    ENTERPRISE_NETWORK_DOMAIN_NAMES = "enterpriseNetworkDomainNames"
    ENTERPRISE_PROTECTED_DOMAIN_NAMES = "enterpriseProtectedDomainNames"
    ENTERPRISE_PROXIED_DOMAINS = "enterpriseProxiedDomains"
    ENTERPRISE_PROXY_SERVERS = "enterpriseProxyServers"
    ENTERPRISE_PROXY_SERVERS_ARE_AUTHORITATIVE = "enterpriseProxyServersAreAuthoritative"
    EXEMPT_APPS = "exemptApps"
    ICONS_VISIBLE = "iconsVisible"
    INDEXING_ENCRYPTED_STORES_OR_ITEMS_BLOCKED = "indexingEncryptedStoresOrItemsBlocked"
    IS_ASSIGNED = "isAssigned"
    NEUTRAL_DOMAIN_RESOURCES = "neutralDomainResources"
    PROTECTED_APPS = "protectedApps"
    PROTECTION_UNDER_LOCK_CONFIG_REQUIRED = "protectionUnderLockConfigRequired"
    REVOKE_ON_UNENROLL_DISABLED = "revokeOnUnenrollDisabled"
    RIGHTS_MANAGEMENT_SERVICES_TEMPLATE_ID = "rightsManagementServicesTemplateId"
    SMB_AUTO_ENCRYPTED_FILE_EXTENSIONS = "smbAutoEncryptedFileExtensions"
    DAYS_WITHOUT_CONTACT_BEFORE_UNENROLL = "daysWithoutContactBeforeUnenroll"
    MDM_ENROLLMENT_URL = "mdmEnrollmentUrl"
    MINUTES_OF_INACTIVITY_BEFORE_DEVICE_LOCK = "minutesOfInactivityBeforeDeviceLock"
    NUMBER_OF_PAST_PINS_REMEMBERED = "numberOfPastPinsRemembered"
    PASSWORD_MAXIMUM_ATTEMPT_COUNT = "passwordMaximumAttemptCount"
    PIN_EXPIRATION_DAYS = "pinExpirationDays"
    PIN_LOWERCASE_LETTERS = "pinLowercaseLetters"
    PIN_MINIMUM_LENGTH = "pinMinimumLength"
    PIN_SPECIAL_CHARACTERS = "pinSpecialCharacters"
    PIN_UPPERCASE_LETTERS = "pinUppercaseLetters"
    REVOKE_ON_MDM_HANDOFF_DISABLED = "revokeOnMdmHandoffDisabled"
    WINDOWS_HELLO_FOR_BUSINESS_BLOCKED = "windowsHelloForBusinessBlocked"
    ASSIGNMENTS = "assignments"
    EXEMPT_APP_LOCKER_FILES = "exemptAppLockerFiles"
    PROTECTED_APP_LOCKER_FILES = "protectedAppLockerFiles"

class Enum137(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    ASSIGNMENTS = "assignments"
    EXEMPT_APP_LOCKER_FILES = "exemptAppLockerFiles"
    PROTECTED_APP_LOCKER_FILES = "protectedAppLockerFiles"

class Enum138(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CREATED_DATE_TIME = "createdDateTime"
    DESCRIPTION = "description"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    VERSION = "version"
    AZURE_RIGHTS_MANAGEMENT_SERVICES_ALLOWED = "azureRightsManagementServicesAllowed"
    DATA_RECOVERY_CERTIFICATE = "dataRecoveryCertificate"
    ENFORCEMENT_LEVEL = "enforcementLevel"
    ENTERPRISE_DOMAIN = "enterpriseDomain"
    ENTERPRISE_INTERNAL_PROXY_SERVERS = "enterpriseInternalProxyServers"
    ENTERPRISE_IP_RANGES = "enterpriseIPRanges"
    ENTERPRISE_IP_RANGES_ARE_AUTHORITATIVE = "enterpriseIPRangesAreAuthoritative"
    ENTERPRISE_NETWORK_DOMAIN_NAMES = "enterpriseNetworkDomainNames"
    ENTERPRISE_PROTECTED_DOMAIN_NAMES = "enterpriseProtectedDomainNames"
    ENTERPRISE_PROXIED_DOMAINS = "enterpriseProxiedDomains"
    ENTERPRISE_PROXY_SERVERS = "enterpriseProxyServers"
    ENTERPRISE_PROXY_SERVERS_ARE_AUTHORITATIVE = "enterpriseProxyServersAreAuthoritative"
    EXEMPT_APPS = "exemptApps"
    ICONS_VISIBLE = "iconsVisible"
    INDEXING_ENCRYPTED_STORES_OR_ITEMS_BLOCKED = "indexingEncryptedStoresOrItemsBlocked"
    IS_ASSIGNED = "isAssigned"
    NEUTRAL_DOMAIN_RESOURCES = "neutralDomainResources"
    PROTECTED_APPS = "protectedApps"
    PROTECTION_UNDER_LOCK_CONFIG_REQUIRED = "protectionUnderLockConfigRequired"
    REVOKE_ON_UNENROLL_DISABLED = "revokeOnUnenrollDisabled"
    RIGHTS_MANAGEMENT_SERVICES_TEMPLATE_ID = "rightsManagementServicesTemplateId"
    SMB_AUTO_ENCRYPTED_FILE_EXTENSIONS = "smbAutoEncryptedFileExtensions"
    DAYS_WITHOUT_CONTACT_BEFORE_UNENROLL = "daysWithoutContactBeforeUnenroll"
    MDM_ENROLLMENT_URL = "mdmEnrollmentUrl"
    MINUTES_OF_INACTIVITY_BEFORE_DEVICE_LOCK = "minutesOfInactivityBeforeDeviceLock"
    NUMBER_OF_PAST_PINS_REMEMBERED = "numberOfPastPinsRemembered"
    PASSWORD_MAXIMUM_ATTEMPT_COUNT = "passwordMaximumAttemptCount"
    PIN_EXPIRATION_DAYS = "pinExpirationDays"
    PIN_LOWERCASE_LETTERS = "pinLowercaseLetters"
    PIN_MINIMUM_LENGTH = "pinMinimumLength"
    PIN_SPECIAL_CHARACTERS = "pinSpecialCharacters"
    PIN_UPPERCASE_LETTERS = "pinUppercaseLetters"
    REVOKE_ON_MDM_HANDOFF_DISABLED = "revokeOnMdmHandoffDisabled"
    WINDOWS_HELLO_FOR_BUSINESS_BLOCKED = "windowsHelloForBusinessBlocked"
    ASSIGNMENTS = "assignments"
    EXEMPT_APP_LOCKER_FILES = "exemptAppLockerFiles"
    PROTECTED_APP_LOCKER_FILES = "protectedAppLockerFiles"

class Enum139(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    ASSIGNMENTS = "assignments"
    EXEMPT_APP_LOCKER_FILES = "exemptAppLockerFiles"
    PROTECTED_APP_LOCKER_FILES = "protectedAppLockerFiles"

class Enum140(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    CORRELATION_ID = "correlationId"
    CORRELATION_ID_DESC = "correlationId desc"
    EVENT_DATE_TIME = "eventDateTime"
    EVENT_DATE_TIME_DESC = "eventDateTime desc"

class Enum141(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CORRELATION_ID = "correlationId"
    EVENT_DATE_TIME = "eventDateTime"

class Enum142(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CORRELATION_ID = "correlationId"
    EVENT_DATE_TIME = "eventDateTime"

class Enum143(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    APP_IDENTIFIER = "appIdentifier"
    APP_IDENTIFIER_DESC = "appIdentifier desc"
    APPLICATION_VERSION = "applicationVersion"
    APPLICATION_VERSION_DESC = "applicationVersion desc"
    CREATED_DATE_TIME = "createdDateTime"
    CREATED_DATE_TIME_DESC = "createdDateTime desc"
    DEVICE_NAME = "deviceName"
    DEVICE_NAME_DESC = "deviceName desc"
    DEVICE_TAG = "deviceTag"
    DEVICE_TAG_DESC = "deviceTag desc"
    DEVICE_TYPE = "deviceType"
    DEVICE_TYPE_DESC = "deviceType desc"
    FLAGGED_REASONS = "flaggedReasons"
    FLAGGED_REASONS_DESC = "flaggedReasons desc"
    LAST_SYNC_DATE_TIME = "lastSyncDateTime"
    LAST_SYNC_DATE_TIME_DESC = "lastSyncDateTime desc"
    MANAGEMENT_SDK_VERSION = "managementSdkVersion"
    MANAGEMENT_SDK_VERSION_DESC = "managementSdkVersion desc"
    PLATFORM_VERSION = "platformVersion"
    PLATFORM_VERSION_DESC = "platformVersion desc"
    USER_ID = "userId"
    USER_ID_DESC = "userId desc"
    VERSION = "version"
    VERSION_DESC = "version desc"

class Enum144(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    APP_IDENTIFIER = "appIdentifier"
    APPLICATION_VERSION = "applicationVersion"
    CREATED_DATE_TIME = "createdDateTime"
    DEVICE_NAME = "deviceName"
    DEVICE_TAG = "deviceTag"
    DEVICE_TYPE = "deviceType"
    FLAGGED_REASONS = "flaggedReasons"
    LAST_SYNC_DATE_TIME = "lastSyncDateTime"
    MANAGEMENT_SDK_VERSION = "managementSdkVersion"
    PLATFORM_VERSION = "platformVersion"
    USER_ID = "userId"
    VERSION = "version"
    APPLIED_POLICIES = "appliedPolicies"
    INTENDED_POLICIES = "intendedPolicies"
    OPERATIONS = "operations"

class Enum145(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    APPLIED_POLICIES = "appliedPolicies"
    INTENDED_POLICIES = "intendedPolicies"
    OPERATIONS = "operations"

class Enum146(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    APP_IDENTIFIER = "appIdentifier"
    APP_IDENTIFIER_DESC = "appIdentifier desc"
    APPLICATION_VERSION = "applicationVersion"
    APPLICATION_VERSION_DESC = "applicationVersion desc"
    CREATED_DATE_TIME = "createdDateTime"
    CREATED_DATE_TIME_DESC = "createdDateTime desc"
    DEVICE_NAME = "deviceName"
    DEVICE_NAME_DESC = "deviceName desc"
    DEVICE_TAG = "deviceTag"
    DEVICE_TAG_DESC = "deviceTag desc"
    DEVICE_TYPE = "deviceType"
    DEVICE_TYPE_DESC = "deviceType desc"
    FLAGGED_REASONS = "flaggedReasons"
    FLAGGED_REASONS_DESC = "flaggedReasons desc"
    LAST_SYNC_DATE_TIME = "lastSyncDateTime"
    LAST_SYNC_DATE_TIME_DESC = "lastSyncDateTime desc"
    MANAGEMENT_SDK_VERSION = "managementSdkVersion"
    MANAGEMENT_SDK_VERSION_DESC = "managementSdkVersion desc"
    PLATFORM_VERSION = "platformVersion"
    PLATFORM_VERSION_DESC = "platformVersion desc"
    USER_ID = "userId"
    USER_ID_DESC = "userId desc"
    VERSION = "version"
    VERSION_DESC = "version desc"

class Enum147(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    ACTIVATION_LOCK_BYPASS_CODE = "activationLockBypassCode"
    ACTIVATION_LOCK_BYPASS_CODE_DESC = "activationLockBypassCode desc"
    ANDROID_SECURITY_PATCH_LEVEL = "androidSecurityPatchLevel"
    ANDROID_SECURITY_PATCH_LEVEL_DESC = "androidSecurityPatchLevel desc"
    AZURE_AD_DEVICE_ID = "azureADDeviceId"
    AZURE_AD_DEVICE_ID_DESC = "azureADDeviceId desc"
    AZURE_AD_REGISTERED = "azureADRegistered"
    AZURE_AD_REGISTERED_DESC = "azureADRegistered desc"
    COMPLIANCE_GRACE_PERIOD_EXPIRATION_DATE_TIME = "complianceGracePeriodExpirationDateTime"
    COMPLIANCE_GRACE_PERIOD_EXPIRATION_DATE_TIME_DESC = "complianceGracePeriodExpirationDateTime desc"
    COMPLIANCE_STATE = "complianceState"
    COMPLIANCE_STATE_DESC = "complianceState desc"
    CONFIGURATION_MANAGER_CLIENT_ENABLED_FEATURES = "configurationManagerClientEnabledFeatures"
    CONFIGURATION_MANAGER_CLIENT_ENABLED_FEATURES_DESC = "configurationManagerClientEnabledFeatures desc"
    DEVICE_ACTION_RESULTS = "deviceActionResults"
    DEVICE_ACTION_RESULTS_DESC = "deviceActionResults desc"
    DEVICE_CATEGORY_DISPLAY_NAME = "deviceCategoryDisplayName"
    DEVICE_CATEGORY_DISPLAY_NAME_DESC = "deviceCategoryDisplayName desc"
    DEVICE_ENROLLMENT_TYPE = "deviceEnrollmentType"
    DEVICE_ENROLLMENT_TYPE_DESC = "deviceEnrollmentType desc"
    DEVICE_HEALTH_ATTESTATION_STATE = "deviceHealthAttestationState"
    DEVICE_HEALTH_ATTESTATION_STATE_DESC = "deviceHealthAttestationState desc"
    DEVICE_NAME = "deviceName"
    DEVICE_NAME_DESC = "deviceName desc"
    DEVICE_REGISTRATION_STATE = "deviceRegistrationState"
    DEVICE_REGISTRATION_STATE_DESC = "deviceRegistrationState desc"
    EAS_ACTIVATED = "easActivated"
    EAS_ACTIVATED_DESC = "easActivated desc"
    EAS_ACTIVATION_DATE_TIME = "easActivationDateTime"
    EAS_ACTIVATION_DATE_TIME_DESC = "easActivationDateTime desc"
    EAS_DEVICE_ID = "easDeviceId"
    EAS_DEVICE_ID_DESC = "easDeviceId desc"
    EMAIL_ADDRESS = "emailAddress"
    EMAIL_ADDRESS_DESC = "emailAddress desc"
    ENROLLED_DATE_TIME = "enrolledDateTime"
    ENROLLED_DATE_TIME_DESC = "enrolledDateTime desc"
    EXCHANGE_ACCESS_STATE = "exchangeAccessState"
    EXCHANGE_ACCESS_STATE_DESC = "exchangeAccessState desc"
    EXCHANGE_ACCESS_STATE_REASON = "exchangeAccessStateReason"
    EXCHANGE_ACCESS_STATE_REASON_DESC = "exchangeAccessStateReason desc"
    EXCHANGE_LAST_SUCCESSFUL_SYNC_DATE_TIME = "exchangeLastSuccessfulSyncDateTime"
    EXCHANGE_LAST_SUCCESSFUL_SYNC_DATE_TIME_DESC = "exchangeLastSuccessfulSyncDateTime desc"
    FREE_STORAGE_SPACE_IN_BYTES = "freeStorageSpaceInBytes"
    FREE_STORAGE_SPACE_IN_BYTES_DESC = "freeStorageSpaceInBytes desc"
    IMEI = "imei"
    IMEI_DESC = "imei desc"
    IS_ENCRYPTED = "isEncrypted"
    IS_ENCRYPTED_DESC = "isEncrypted desc"
    IS_SUPERVISED = "isSupervised"
    IS_SUPERVISED_DESC = "isSupervised desc"
    JAIL_BROKEN = "jailBroken"
    JAIL_BROKEN_DESC = "jailBroken desc"
    LAST_SYNC_DATE_TIME = "lastSyncDateTime"
    LAST_SYNC_DATE_TIME_DESC = "lastSyncDateTime desc"
    MANAGED_DEVICE_NAME = "managedDeviceName"
    MANAGED_DEVICE_NAME_DESC = "managedDeviceName desc"
    MANAGED_DEVICE_OWNER_TYPE = "managedDeviceOwnerType"
    MANAGED_DEVICE_OWNER_TYPE_DESC = "managedDeviceOwnerType desc"
    MANAGEMENT_AGENT = "managementAgent"
    MANAGEMENT_AGENT_DESC = "managementAgent desc"
    MANUFACTURER = "manufacturer"
    MANUFACTURER_DESC = "manufacturer desc"
    MEID = "meid"
    MEID_DESC = "meid desc"
    MODEL = "model"
    MODEL_DESC = "model desc"
    OPERATING_SYSTEM = "operatingSystem"
    OPERATING_SYSTEM_DESC = "operatingSystem desc"
    OS_VERSION = "osVersion"
    OS_VERSION_DESC = "osVersion desc"
    PARTNER_REPORTED_THREAT_STATE = "partnerReportedThreatState"
    PARTNER_REPORTED_THREAT_STATE_DESC = "partnerReportedThreatState desc"
    PHONE_NUMBER = "phoneNumber"
    PHONE_NUMBER_DESC = "phoneNumber desc"
    REMOTE_ASSISTANCE_SESSION_ERROR_DETAILS = "remoteAssistanceSessionErrorDetails"
    REMOTE_ASSISTANCE_SESSION_ERROR_DETAILS_DESC = "remoteAssistanceSessionErrorDetails desc"
    REMOTE_ASSISTANCE_SESSION_URL = "remoteAssistanceSessionUrl"
    REMOTE_ASSISTANCE_SESSION_URL_DESC = "remoteAssistanceSessionUrl desc"
    SERIAL_NUMBER = "serialNumber"
    SERIAL_NUMBER_DESC = "serialNumber desc"
    SUBSCRIBER_CARRIER = "subscriberCarrier"
    SUBSCRIBER_CARRIER_DESC = "subscriberCarrier desc"
    TOTAL_STORAGE_SPACE_IN_BYTES = "totalStorageSpaceInBytes"
    TOTAL_STORAGE_SPACE_IN_BYTES_DESC = "totalStorageSpaceInBytes desc"
    USER_DISPLAY_NAME = "userDisplayName"
    USER_DISPLAY_NAME_DESC = "userDisplayName desc"
    USER_ID = "userId"
    USER_ID_DESC = "userId desc"
    USER_PRINCIPAL_NAME = "userPrincipalName"
    USER_PRINCIPAL_NAME_DESC = "userPrincipalName desc"
    WI_FI_MAC_ADDRESS = "wiFiMacAddress"
    WI_FI_MAC_ADDRESS_DESC = "wiFiMacAddress desc"

class Enum148(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ACTIVATION_LOCK_BYPASS_CODE = "activationLockBypassCode"
    ANDROID_SECURITY_PATCH_LEVEL = "androidSecurityPatchLevel"
    AZURE_AD_DEVICE_ID = "azureADDeviceId"
    AZURE_AD_REGISTERED = "azureADRegistered"
    COMPLIANCE_GRACE_PERIOD_EXPIRATION_DATE_TIME = "complianceGracePeriodExpirationDateTime"
    COMPLIANCE_STATE = "complianceState"
    CONFIGURATION_MANAGER_CLIENT_ENABLED_FEATURES = "configurationManagerClientEnabledFeatures"
    DEVICE_ACTION_RESULTS = "deviceActionResults"
    DEVICE_CATEGORY_DISPLAY_NAME = "deviceCategoryDisplayName"
    DEVICE_ENROLLMENT_TYPE = "deviceEnrollmentType"
    DEVICE_HEALTH_ATTESTATION_STATE = "deviceHealthAttestationState"
    DEVICE_NAME = "deviceName"
    DEVICE_REGISTRATION_STATE = "deviceRegistrationState"
    EAS_ACTIVATED = "easActivated"
    EAS_ACTIVATION_DATE_TIME = "easActivationDateTime"
    EAS_DEVICE_ID = "easDeviceId"
    EMAIL_ADDRESS = "emailAddress"
    ENROLLED_DATE_TIME = "enrolledDateTime"
    EXCHANGE_ACCESS_STATE = "exchangeAccessState"
    EXCHANGE_ACCESS_STATE_REASON = "exchangeAccessStateReason"
    EXCHANGE_LAST_SUCCESSFUL_SYNC_DATE_TIME = "exchangeLastSuccessfulSyncDateTime"
    FREE_STORAGE_SPACE_IN_BYTES = "freeStorageSpaceInBytes"
    IMEI = "imei"
    IS_ENCRYPTED = "isEncrypted"
    IS_SUPERVISED = "isSupervised"
    JAIL_BROKEN = "jailBroken"
    LAST_SYNC_DATE_TIME = "lastSyncDateTime"
    MANAGED_DEVICE_NAME = "managedDeviceName"
    MANAGED_DEVICE_OWNER_TYPE = "managedDeviceOwnerType"
    MANAGEMENT_AGENT = "managementAgent"
    MANUFACTURER = "manufacturer"
    MEID = "meid"
    MODEL = "model"
    OPERATING_SYSTEM = "operatingSystem"
    OS_VERSION = "osVersion"
    PARTNER_REPORTED_THREAT_STATE = "partnerReportedThreatState"
    PHONE_NUMBER = "phoneNumber"
    REMOTE_ASSISTANCE_SESSION_ERROR_DETAILS = "remoteAssistanceSessionErrorDetails"
    REMOTE_ASSISTANCE_SESSION_URL = "remoteAssistanceSessionUrl"
    SERIAL_NUMBER = "serialNumber"
    SUBSCRIBER_CARRIER = "subscriberCarrier"
    TOTAL_STORAGE_SPACE_IN_BYTES = "totalStorageSpaceInBytes"
    USER_DISPLAY_NAME = "userDisplayName"
    USER_ID = "userId"
    USER_PRINCIPAL_NAME = "userPrincipalName"
    WI_FI_MAC_ADDRESS = "wiFiMacAddress"
    DEVICE_COMPLIANCE_POLICY_STATES = "deviceCompliancePolicyStates"
    DEVICE_CONFIGURATION_STATES = "deviceConfigurationStates"
    DEVICE_CATEGORY = "deviceCategory"

class Enum149(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    DEVICE_COMPLIANCE_POLICY_STATES = "deviceCompliancePolicyStates"
    DEVICE_CONFIGURATION_STATES = "deviceConfigurationStates"
    DEVICE_CATEGORY = "deviceCategory"

class Enum160(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ACTIVATION_LOCK_BYPASS_CODE = "activationLockBypassCode"
    ANDROID_SECURITY_PATCH_LEVEL = "androidSecurityPatchLevel"
    AZURE_AD_DEVICE_ID = "azureADDeviceId"
    AZURE_AD_REGISTERED = "azureADRegistered"
    COMPLIANCE_GRACE_PERIOD_EXPIRATION_DATE_TIME = "complianceGracePeriodExpirationDateTime"
    COMPLIANCE_STATE = "complianceState"
    CONFIGURATION_MANAGER_CLIENT_ENABLED_FEATURES = "configurationManagerClientEnabledFeatures"
    DEVICE_ACTION_RESULTS = "deviceActionResults"
    DEVICE_CATEGORY_DISPLAY_NAME = "deviceCategoryDisplayName"
    DEVICE_ENROLLMENT_TYPE = "deviceEnrollmentType"
    DEVICE_HEALTH_ATTESTATION_STATE = "deviceHealthAttestationState"
    DEVICE_NAME = "deviceName"
    DEVICE_REGISTRATION_STATE = "deviceRegistrationState"
    EAS_ACTIVATED = "easActivated"
    EAS_ACTIVATION_DATE_TIME = "easActivationDateTime"
    EAS_DEVICE_ID = "easDeviceId"
    EMAIL_ADDRESS = "emailAddress"
    ENROLLED_DATE_TIME = "enrolledDateTime"
    EXCHANGE_ACCESS_STATE = "exchangeAccessState"
    EXCHANGE_ACCESS_STATE_REASON = "exchangeAccessStateReason"
    EXCHANGE_LAST_SUCCESSFUL_SYNC_DATE_TIME = "exchangeLastSuccessfulSyncDateTime"
    FREE_STORAGE_SPACE_IN_BYTES = "freeStorageSpaceInBytes"
    IMEI = "imei"
    IS_ENCRYPTED = "isEncrypted"
    IS_SUPERVISED = "isSupervised"
    JAIL_BROKEN = "jailBroken"
    LAST_SYNC_DATE_TIME = "lastSyncDateTime"
    MANAGED_DEVICE_NAME = "managedDeviceName"
    MANAGED_DEVICE_OWNER_TYPE = "managedDeviceOwnerType"
    MANAGEMENT_AGENT = "managementAgent"
    MANUFACTURER = "manufacturer"
    MEID = "meid"
    MODEL = "model"
    OPERATING_SYSTEM = "operatingSystem"
    OS_VERSION = "osVersion"
    PARTNER_REPORTED_THREAT_STATE = "partnerReportedThreatState"
    PHONE_NUMBER = "phoneNumber"
    REMOTE_ASSISTANCE_SESSION_ERROR_DETAILS = "remoteAssistanceSessionErrorDetails"
    REMOTE_ASSISTANCE_SESSION_URL = "remoteAssistanceSessionUrl"
    SERIAL_NUMBER = "serialNumber"
    SUBSCRIBER_CARRIER = "subscriberCarrier"
    TOTAL_STORAGE_SPACE_IN_BYTES = "totalStorageSpaceInBytes"
    USER_DISPLAY_NAME = "userDisplayName"
    USER_ID = "userId"
    USER_PRINCIPAL_NAME = "userPrincipalName"
    WI_FI_MAC_ADDRESS = "wiFiMacAddress"
    DEVICE_COMPLIANCE_POLICY_STATES = "deviceCompliancePolicyStates"
    DEVICE_CONFIGURATION_STATES = "deviceConfigurationStates"
    DEVICE_CATEGORY = "deviceCategory"

class Enum161(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    DEVICE_COMPLIANCE_POLICY_STATES = "deviceCompliancePolicyStates"
    DEVICE_CONFIGURATION_STATES = "deviceConfigurationStates"
    DEVICE_CATEGORY = "deviceCategory"

class Enum162(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    DESCRIPTION = "description"
    DISPLAY_NAME = "displayName"

class Enum163(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    DISPLAY_NAME = "displayName"
    DISPLAY_NAME_DESC = "displayName desc"
    PLATFORM_TYPE = "platformType"
    PLATFORM_TYPE_DESC = "platformType desc"
    SETTING_COUNT = "settingCount"
    SETTING_COUNT_DESC = "settingCount desc"
    SETTING_STATES = "settingStates"
    SETTING_STATES_DESC = "settingStates desc"
    STATE = "state"
    STATE_DESC = "state desc"
    VERSION = "version"
    VERSION_DESC = "version desc"

class Enum164(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    DISPLAY_NAME = "displayName"
    PLATFORM_TYPE = "platformType"
    SETTING_COUNT = "settingCount"
    SETTING_STATES = "settingStates"
    STATE = "state"
    VERSION = "version"

class Enum165(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    DISPLAY_NAME = "displayName"
    PLATFORM_TYPE = "platformType"
    SETTING_COUNT = "settingCount"
    SETTING_STATES = "settingStates"
    STATE = "state"
    VERSION = "version"

class Enum166(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    DISPLAY_NAME = "displayName"
    DISPLAY_NAME_DESC = "displayName desc"
    PLATFORM_TYPE = "platformType"
    PLATFORM_TYPE_DESC = "platformType desc"
    SETTING_COUNT = "settingCount"
    SETTING_COUNT_DESC = "settingCount desc"
    SETTING_STATES = "settingStates"
    SETTING_STATES_DESC = "settingStates desc"
    STATE = "state"
    STATE_DESC = "state desc"
    VERSION = "version"
    VERSION_DESC = "version desc"

class Enum167(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    DISPLAY_NAME = "displayName"
    PLATFORM_TYPE = "platformType"
    SETTING_COUNT = "settingCount"
    SETTING_STATES = "settingStates"
    STATE = "state"
    VERSION = "version"

class Enum168(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    DISPLAY_NAME = "displayName"
    PLATFORM_TYPE = "platformType"
    SETTING_COUNT = "settingCount"
    SETTING_STATES = "settingStates"
    STATE = "state"
    VERSION = "version"

class Enum21(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CREATED_DATE_TIME = "createdDateTime"
    DESCRIPTION = "description"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    VERSION = "version"
    ALLOWED_DATA_STORAGE_LOCATIONS = "allowedDataStorageLocations"
    ALLOWED_INBOUND_DATA_TRANSFER_SOURCES = "allowedInboundDataTransferSources"
    ALLOWED_OUTBOUND_CLIPBOARD_SHARING_LEVEL = "allowedOutboundClipboardSharingLevel"
    ALLOWED_OUTBOUND_DATA_TRANSFER_DESTINATIONS = "allowedOutboundDataTransferDestinations"
    CONTACT_SYNC_BLOCKED = "contactSyncBlocked"
    DATA_BACKUP_BLOCKED = "dataBackupBlocked"
    DEVICE_COMPLIANCE_REQUIRED = "deviceComplianceRequired"
    DISABLE_APP_PIN_IF_DEVICE_PIN_IS_SET = "disableAppPinIfDevicePinIsSet"
    FINGERPRINT_BLOCKED = "fingerprintBlocked"
    MANAGED_BROWSER = "managedBrowser"
    MANAGED_BROWSER_TO_OPEN_LINKS_REQUIRED = "managedBrowserToOpenLinksRequired"
    MAXIMUM_PIN_RETRIES = "maximumPinRetries"
    MINIMUM_PIN_LENGTH = "minimumPinLength"
    MINIMUM_REQUIRED_APP_VERSION = "minimumRequiredAppVersion"
    MINIMUM_REQUIRED_OS_VERSION = "minimumRequiredOsVersion"
    MINIMUM_WARNING_APP_VERSION = "minimumWarningAppVersion"
    MINIMUM_WARNING_OS_VERSION = "minimumWarningOsVersion"
    ORGANIZATIONAL_CREDENTIALS_REQUIRED = "organizationalCredentialsRequired"
    PERIOD_BEFORE_PIN_RESET = "periodBeforePinReset"
    PERIOD_OFFLINE_BEFORE_ACCESS_CHECK = "periodOfflineBeforeAccessCheck"
    PERIOD_OFFLINE_BEFORE_WIPE_IS_ENFORCED = "periodOfflineBeforeWipeIsEnforced"
    PERIOD_ONLINE_BEFORE_ACCESS_CHECK = "periodOnlineBeforeAccessCheck"
    PIN_CHARACTER_SET = "pinCharacterSet"
    PIN_REQUIRED = "pinRequired"
    PRINT_BLOCKED = "printBlocked"
    SAVE_AS_BLOCKED = "saveAsBlocked"
    SIMPLE_PIN_BLOCKED = "simplePinBlocked"
    IS_ASSIGNED = "isAssigned"
    CUSTOM_BROWSER_DISPLAY_NAME = "customBrowserDisplayName"
    CUSTOM_BROWSER_PACKAGE_ID = "customBrowserPackageId"
    DEPLOYED_APP_COUNT = "deployedAppCount"
    DISABLE_APP_ENCRYPTION_IF_DEVICE_ENCRYPTION_IS_ENABLED = "disableAppEncryptionIfDeviceEncryptionIsEnabled"
    ENCRYPT_APP_DATA = "encryptAppData"
    MINIMUM_REQUIRED_PATCH_VERSION = "minimumRequiredPatchVersion"
    MINIMUM_WARNING_PATCH_VERSION = "minimumWarningPatchVersion"
    SCREEN_CAPTURE_BLOCKED = "screenCaptureBlocked"
    ASSIGNMENTS = "assignments"
    APPS = "apps"
    DEPLOYMENT_SUMMARY = "deploymentSummary"

class Enum23(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    MOBILE_APP_IDENTIFIER = "mobileAppIdentifier"
    MOBILE_APP_IDENTIFIER_DESC = "mobileAppIdentifier desc"
    VERSION = "version"
    VERSION_DESC = "version desc"

class Enum24(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    MOBILE_APP_IDENTIFIER = "mobileAppIdentifier"
    VERSION = "version"

class Enum25(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    MOBILE_APP_IDENTIFIER = "mobileAppIdentifier"
    VERSION = "version"

class Enum26(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CONFIGURATION_DEPLOYED_USER_COUNT = "configurationDeployedUserCount"
    CONFIGURATION_DEPLOYMENT_SUMMARY_PER_APP = "configurationDeploymentSummaryPerApp"
    DISPLAY_NAME = "displayName"
    LAST_REFRESH_TIME = "lastRefreshTime"
    VERSION = "version"

class Enum27(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    CREATED_DATE_TIME = "createdDateTime"
    CREATED_DATE_TIME_DESC = "createdDateTime desc"
    DESCRIPTION = "description"
    DESCRIPTION_DESC = "description desc"
    DISPLAY_NAME = "displayName"
    DISPLAY_NAME_DESC = "displayName desc"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    LAST_MODIFIED_DATE_TIME_DESC = "lastModifiedDateTime desc"
    VERSION = "version"
    VERSION_DESC = "version desc"
    ALLOWED_DATA_STORAGE_LOCATIONS = "allowedDataStorageLocations"
    ALLOWED_DATA_STORAGE_LOCATIONS_DESC = "allowedDataStorageLocations desc"
    ALLOWED_INBOUND_DATA_TRANSFER_SOURCES = "allowedInboundDataTransferSources"
    ALLOWED_INBOUND_DATA_TRANSFER_SOURCES_DESC = "allowedInboundDataTransferSources desc"
    ALLOWED_OUTBOUND_CLIPBOARD_SHARING_LEVEL = "allowedOutboundClipboardSharingLevel"
    ALLOWED_OUTBOUND_CLIPBOARD_SHARING_LEVEL_DESC = "allowedOutboundClipboardSharingLevel desc"
    ALLOWED_OUTBOUND_DATA_TRANSFER_DESTINATIONS = "allowedOutboundDataTransferDestinations"
    ALLOWED_OUTBOUND_DATA_TRANSFER_DESTINATIONS_DESC = "allowedOutboundDataTransferDestinations desc"
    CONTACT_SYNC_BLOCKED = "contactSyncBlocked"
    CONTACT_SYNC_BLOCKED_DESC = "contactSyncBlocked desc"
    DATA_BACKUP_BLOCKED = "dataBackupBlocked"
    DATA_BACKUP_BLOCKED_DESC = "dataBackupBlocked desc"
    DEVICE_COMPLIANCE_REQUIRED = "deviceComplianceRequired"
    DEVICE_COMPLIANCE_REQUIRED_DESC = "deviceComplianceRequired desc"
    DISABLE_APP_PIN_IF_DEVICE_PIN_IS_SET = "disableAppPinIfDevicePinIsSet"
    DISABLE_APP_PIN_IF_DEVICE_PIN_IS_SET_DESC = "disableAppPinIfDevicePinIsSet desc"
    FINGERPRINT_BLOCKED = "fingerprintBlocked"
    FINGERPRINT_BLOCKED_DESC = "fingerprintBlocked desc"
    MANAGED_BROWSER = "managedBrowser"
    MANAGED_BROWSER_DESC = "managedBrowser desc"
    MANAGED_BROWSER_TO_OPEN_LINKS_REQUIRED = "managedBrowserToOpenLinksRequired"
    MANAGED_BROWSER_TO_OPEN_LINKS_REQUIRED_DESC = "managedBrowserToOpenLinksRequired desc"
    MAXIMUM_PIN_RETRIES = "maximumPinRetries"
    MAXIMUM_PIN_RETRIES_DESC = "maximumPinRetries desc"
    MINIMUM_PIN_LENGTH = "minimumPinLength"
    MINIMUM_PIN_LENGTH_DESC = "minimumPinLength desc"
    MINIMUM_REQUIRED_APP_VERSION = "minimumRequiredAppVersion"
    MINIMUM_REQUIRED_APP_VERSION_DESC = "minimumRequiredAppVersion desc"
    MINIMUM_REQUIRED_OS_VERSION = "minimumRequiredOsVersion"
    MINIMUM_REQUIRED_OS_VERSION_DESC = "minimumRequiredOsVersion desc"
    MINIMUM_WARNING_APP_VERSION = "minimumWarningAppVersion"
    MINIMUM_WARNING_APP_VERSION_DESC = "minimumWarningAppVersion desc"
    MINIMUM_WARNING_OS_VERSION = "minimumWarningOsVersion"
    MINIMUM_WARNING_OS_VERSION_DESC = "minimumWarningOsVersion desc"
    ORGANIZATIONAL_CREDENTIALS_REQUIRED = "organizationalCredentialsRequired"
    ORGANIZATIONAL_CREDENTIALS_REQUIRED_DESC = "organizationalCredentialsRequired desc"
    PERIOD_BEFORE_PIN_RESET = "periodBeforePinReset"
    PERIOD_BEFORE_PIN_RESET_DESC = "periodBeforePinReset desc"
    PERIOD_OFFLINE_BEFORE_ACCESS_CHECK = "periodOfflineBeforeAccessCheck"
    PERIOD_OFFLINE_BEFORE_ACCESS_CHECK_DESC = "periodOfflineBeforeAccessCheck desc"
    PERIOD_OFFLINE_BEFORE_WIPE_IS_ENFORCED = "periodOfflineBeforeWipeIsEnforced"
    PERIOD_OFFLINE_BEFORE_WIPE_IS_ENFORCED_DESC = "periodOfflineBeforeWipeIsEnforced desc"
    PERIOD_ONLINE_BEFORE_ACCESS_CHECK = "periodOnlineBeforeAccessCheck"
    PERIOD_ONLINE_BEFORE_ACCESS_CHECK_DESC = "periodOnlineBeforeAccessCheck desc"
    PIN_CHARACTER_SET = "pinCharacterSet"
    PIN_CHARACTER_SET_DESC = "pinCharacterSet desc"
    PIN_REQUIRED = "pinRequired"
    PIN_REQUIRED_DESC = "pinRequired desc"
    PRINT_BLOCKED = "printBlocked"
    PRINT_BLOCKED_DESC = "printBlocked desc"
    SAVE_AS_BLOCKED = "saveAsBlocked"
    SAVE_AS_BLOCKED_DESC = "saveAsBlocked desc"
    SIMPLE_PIN_BLOCKED = "simplePinBlocked"
    SIMPLE_PIN_BLOCKED_DESC = "simplePinBlocked desc"
    APP_DATA_ENCRYPTION_TYPE = "appDataEncryptionType"
    APP_DATA_ENCRYPTION_TYPE_DESC = "appDataEncryptionType desc"
    CUSTOM_SETTINGS = "customSettings"
    CUSTOM_SETTINGS_DESC = "customSettings desc"
    DEPLOYED_APP_COUNT = "deployedAppCount"
    DEPLOYED_APP_COUNT_DESC = "deployedAppCount desc"
    DISABLE_APP_ENCRYPTION_IF_DEVICE_ENCRYPTION_IS_ENABLED = "disableAppEncryptionIfDeviceEncryptionIsEnabled"
    DISABLE_APP_ENCRYPTION_IF_DEVICE_ENCRYPTION_IS_ENABLED_DESC = "disableAppEncryptionIfDeviceEncryptionIsEnabled desc"
    ENCRYPT_APP_DATA = "encryptAppData"
    ENCRYPT_APP_DATA_DESC = "encryptAppData desc"
    FACE_ID_BLOCKED = "faceIdBlocked"
    FACE_ID_BLOCKED_DESC = "faceIdBlocked desc"
    MINIMUM_REQUIRED_PATCH_VERSION = "minimumRequiredPatchVersion"
    MINIMUM_REQUIRED_PATCH_VERSION_DESC = "minimumRequiredPatchVersion desc"
    MINIMUM_REQUIRED_SDK_VERSION = "minimumRequiredSdkVersion"
    MINIMUM_REQUIRED_SDK_VERSION_DESC = "minimumRequiredSdkVersion desc"
    MINIMUM_WARNING_PATCH_VERSION = "minimumWarningPatchVersion"
    MINIMUM_WARNING_PATCH_VERSION_DESC = "minimumWarningPatchVersion desc"
    SCREEN_CAPTURE_BLOCKED = "screenCaptureBlocked"
    SCREEN_CAPTURE_BLOCKED_DESC = "screenCaptureBlocked desc"

class Enum28(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CREATED_DATE_TIME = "createdDateTime"
    DESCRIPTION = "description"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    VERSION = "version"
    ALLOWED_DATA_STORAGE_LOCATIONS = "allowedDataStorageLocations"
    ALLOWED_INBOUND_DATA_TRANSFER_SOURCES = "allowedInboundDataTransferSources"
    ALLOWED_OUTBOUND_CLIPBOARD_SHARING_LEVEL = "allowedOutboundClipboardSharingLevel"
    ALLOWED_OUTBOUND_DATA_TRANSFER_DESTINATIONS = "allowedOutboundDataTransferDestinations"
    CONTACT_SYNC_BLOCKED = "contactSyncBlocked"
    DATA_BACKUP_BLOCKED = "dataBackupBlocked"
    DEVICE_COMPLIANCE_REQUIRED = "deviceComplianceRequired"
    DISABLE_APP_PIN_IF_DEVICE_PIN_IS_SET = "disableAppPinIfDevicePinIsSet"
    FINGERPRINT_BLOCKED = "fingerprintBlocked"
    MANAGED_BROWSER = "managedBrowser"
    MANAGED_BROWSER_TO_OPEN_LINKS_REQUIRED = "managedBrowserToOpenLinksRequired"
    MAXIMUM_PIN_RETRIES = "maximumPinRetries"
    MINIMUM_PIN_LENGTH = "minimumPinLength"
    MINIMUM_REQUIRED_APP_VERSION = "minimumRequiredAppVersion"
    MINIMUM_REQUIRED_OS_VERSION = "minimumRequiredOsVersion"
    MINIMUM_WARNING_APP_VERSION = "minimumWarningAppVersion"
    MINIMUM_WARNING_OS_VERSION = "minimumWarningOsVersion"
    ORGANIZATIONAL_CREDENTIALS_REQUIRED = "organizationalCredentialsRequired"
    PERIOD_BEFORE_PIN_RESET = "periodBeforePinReset"
    PERIOD_OFFLINE_BEFORE_ACCESS_CHECK = "periodOfflineBeforeAccessCheck"
    PERIOD_OFFLINE_BEFORE_WIPE_IS_ENFORCED = "periodOfflineBeforeWipeIsEnforced"
    PERIOD_ONLINE_BEFORE_ACCESS_CHECK = "periodOnlineBeforeAccessCheck"
    PIN_CHARACTER_SET = "pinCharacterSet"
    PIN_REQUIRED = "pinRequired"
    PRINT_BLOCKED = "printBlocked"
    SAVE_AS_BLOCKED = "saveAsBlocked"
    SIMPLE_PIN_BLOCKED = "simplePinBlocked"
    APP_DATA_ENCRYPTION_TYPE = "appDataEncryptionType"
    CUSTOM_SETTINGS = "customSettings"
    DEPLOYED_APP_COUNT = "deployedAppCount"
    DISABLE_APP_ENCRYPTION_IF_DEVICE_ENCRYPTION_IS_ENABLED = "disableAppEncryptionIfDeviceEncryptionIsEnabled"
    ENCRYPT_APP_DATA = "encryptAppData"
    FACE_ID_BLOCKED = "faceIdBlocked"
    MINIMUM_REQUIRED_PATCH_VERSION = "minimumRequiredPatchVersion"
    MINIMUM_REQUIRED_SDK_VERSION = "minimumRequiredSdkVersion"
    MINIMUM_WARNING_PATCH_VERSION = "minimumWarningPatchVersion"
    SCREEN_CAPTURE_BLOCKED = "screenCaptureBlocked"
    APPS = "apps"
    DEPLOYMENT_SUMMARY = "deploymentSummary"

class Enum29(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    APPS = "apps"
    DEPLOYMENT_SUMMARY = "deploymentSummary"

class Enum30(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CREATED_DATE_TIME = "createdDateTime"
    DESCRIPTION = "description"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    VERSION = "version"
    ALLOWED_DATA_STORAGE_LOCATIONS = "allowedDataStorageLocations"
    ALLOWED_INBOUND_DATA_TRANSFER_SOURCES = "allowedInboundDataTransferSources"
    ALLOWED_OUTBOUND_CLIPBOARD_SHARING_LEVEL = "allowedOutboundClipboardSharingLevel"
    ALLOWED_OUTBOUND_DATA_TRANSFER_DESTINATIONS = "allowedOutboundDataTransferDestinations"
    CONTACT_SYNC_BLOCKED = "contactSyncBlocked"
    DATA_BACKUP_BLOCKED = "dataBackupBlocked"
    DEVICE_COMPLIANCE_REQUIRED = "deviceComplianceRequired"
    DISABLE_APP_PIN_IF_DEVICE_PIN_IS_SET = "disableAppPinIfDevicePinIsSet"
    FINGERPRINT_BLOCKED = "fingerprintBlocked"
    MANAGED_BROWSER = "managedBrowser"
    MANAGED_BROWSER_TO_OPEN_LINKS_REQUIRED = "managedBrowserToOpenLinksRequired"
    MAXIMUM_PIN_RETRIES = "maximumPinRetries"
    MINIMUM_PIN_LENGTH = "minimumPinLength"
    MINIMUM_REQUIRED_APP_VERSION = "minimumRequiredAppVersion"
    MINIMUM_REQUIRED_OS_VERSION = "minimumRequiredOsVersion"
    MINIMUM_WARNING_APP_VERSION = "minimumWarningAppVersion"
    MINIMUM_WARNING_OS_VERSION = "minimumWarningOsVersion"
    ORGANIZATIONAL_CREDENTIALS_REQUIRED = "organizationalCredentialsRequired"
    PERIOD_BEFORE_PIN_RESET = "periodBeforePinReset"
    PERIOD_OFFLINE_BEFORE_ACCESS_CHECK = "periodOfflineBeforeAccessCheck"
    PERIOD_OFFLINE_BEFORE_WIPE_IS_ENFORCED = "periodOfflineBeforeWipeIsEnforced"
    PERIOD_ONLINE_BEFORE_ACCESS_CHECK = "periodOnlineBeforeAccessCheck"
    PIN_CHARACTER_SET = "pinCharacterSet"
    PIN_REQUIRED = "pinRequired"
    PRINT_BLOCKED = "printBlocked"
    SAVE_AS_BLOCKED = "saveAsBlocked"
    SIMPLE_PIN_BLOCKED = "simplePinBlocked"
    APP_DATA_ENCRYPTION_TYPE = "appDataEncryptionType"
    CUSTOM_SETTINGS = "customSettings"
    DEPLOYED_APP_COUNT = "deployedAppCount"
    DISABLE_APP_ENCRYPTION_IF_DEVICE_ENCRYPTION_IS_ENABLED = "disableAppEncryptionIfDeviceEncryptionIsEnabled"
    ENCRYPT_APP_DATA = "encryptAppData"
    FACE_ID_BLOCKED = "faceIdBlocked"
    MINIMUM_REQUIRED_PATCH_VERSION = "minimumRequiredPatchVersion"
    MINIMUM_REQUIRED_SDK_VERSION = "minimumRequiredSdkVersion"
    MINIMUM_WARNING_PATCH_VERSION = "minimumWarningPatchVersion"
    SCREEN_CAPTURE_BLOCKED = "screenCaptureBlocked"
    APPS = "apps"
    DEPLOYMENT_SUMMARY = "deploymentSummary"

class Enum31(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    APPS = "apps"
    DEPLOYMENT_SUMMARY = "deploymentSummary"

class Enum32(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    MOBILE_APP_IDENTIFIER = "mobileAppIdentifier"
    MOBILE_APP_IDENTIFIER_DESC = "mobileAppIdentifier desc"
    VERSION = "version"
    VERSION_DESC = "version desc"

class Enum33(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    MOBILE_APP_IDENTIFIER = "mobileAppIdentifier"
    VERSION = "version"

class Enum34(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    MOBILE_APP_IDENTIFIER = "mobileAppIdentifier"
    VERSION = "version"

class Enum35(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CONFIGURATION_DEPLOYED_USER_COUNT = "configurationDeployedUserCount"
    CONFIGURATION_DEPLOYMENT_SUMMARY_PER_APP = "configurationDeploymentSummaryPerApp"
    DISPLAY_NAME = "displayName"
    LAST_REFRESH_TIME = "lastRefreshTime"
    VERSION = "version"

class Enum36(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    CREATED_DATE_TIME = "createdDateTime"
    CREATED_DATE_TIME_DESC = "createdDateTime desc"
    DESCRIPTION = "description"
    DESCRIPTION_DESC = "description desc"
    DISPLAY_NAME = "displayName"
    DISPLAY_NAME_DESC = "displayName desc"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    LAST_MODIFIED_DATE_TIME_DESC = "lastModifiedDateTime desc"
    VERSION = "version"
    VERSION_DESC = "version desc"
    ALLOWED_DATA_STORAGE_LOCATIONS = "allowedDataStorageLocations"
    ALLOWED_DATA_STORAGE_LOCATIONS_DESC = "allowedDataStorageLocations desc"
    ALLOWED_INBOUND_DATA_TRANSFER_SOURCES = "allowedInboundDataTransferSources"
    ALLOWED_INBOUND_DATA_TRANSFER_SOURCES_DESC = "allowedInboundDataTransferSources desc"
    ALLOWED_OUTBOUND_CLIPBOARD_SHARING_LEVEL = "allowedOutboundClipboardSharingLevel"
    ALLOWED_OUTBOUND_CLIPBOARD_SHARING_LEVEL_DESC = "allowedOutboundClipboardSharingLevel desc"
    ALLOWED_OUTBOUND_DATA_TRANSFER_DESTINATIONS = "allowedOutboundDataTransferDestinations"
    ALLOWED_OUTBOUND_DATA_TRANSFER_DESTINATIONS_DESC = "allowedOutboundDataTransferDestinations desc"
    CONTACT_SYNC_BLOCKED = "contactSyncBlocked"
    CONTACT_SYNC_BLOCKED_DESC = "contactSyncBlocked desc"
    DATA_BACKUP_BLOCKED = "dataBackupBlocked"
    DATA_BACKUP_BLOCKED_DESC = "dataBackupBlocked desc"
    DEVICE_COMPLIANCE_REQUIRED = "deviceComplianceRequired"
    DEVICE_COMPLIANCE_REQUIRED_DESC = "deviceComplianceRequired desc"
    DISABLE_APP_PIN_IF_DEVICE_PIN_IS_SET = "disableAppPinIfDevicePinIsSet"
    DISABLE_APP_PIN_IF_DEVICE_PIN_IS_SET_DESC = "disableAppPinIfDevicePinIsSet desc"
    FINGERPRINT_BLOCKED = "fingerprintBlocked"
    FINGERPRINT_BLOCKED_DESC = "fingerprintBlocked desc"
    MANAGED_BROWSER = "managedBrowser"
    MANAGED_BROWSER_DESC = "managedBrowser desc"
    MANAGED_BROWSER_TO_OPEN_LINKS_REQUIRED = "managedBrowserToOpenLinksRequired"
    MANAGED_BROWSER_TO_OPEN_LINKS_REQUIRED_DESC = "managedBrowserToOpenLinksRequired desc"
    MAXIMUM_PIN_RETRIES = "maximumPinRetries"
    MAXIMUM_PIN_RETRIES_DESC = "maximumPinRetries desc"
    MINIMUM_PIN_LENGTH = "minimumPinLength"
    MINIMUM_PIN_LENGTH_DESC = "minimumPinLength desc"
    MINIMUM_REQUIRED_APP_VERSION = "minimumRequiredAppVersion"
    MINIMUM_REQUIRED_APP_VERSION_DESC = "minimumRequiredAppVersion desc"
    MINIMUM_REQUIRED_OS_VERSION = "minimumRequiredOsVersion"
    MINIMUM_REQUIRED_OS_VERSION_DESC = "minimumRequiredOsVersion desc"
    MINIMUM_WARNING_APP_VERSION = "minimumWarningAppVersion"
    MINIMUM_WARNING_APP_VERSION_DESC = "minimumWarningAppVersion desc"
    MINIMUM_WARNING_OS_VERSION = "minimumWarningOsVersion"
    MINIMUM_WARNING_OS_VERSION_DESC = "minimumWarningOsVersion desc"
    ORGANIZATIONAL_CREDENTIALS_REQUIRED = "organizationalCredentialsRequired"
    ORGANIZATIONAL_CREDENTIALS_REQUIRED_DESC = "organizationalCredentialsRequired desc"
    PERIOD_BEFORE_PIN_RESET = "periodBeforePinReset"
    PERIOD_BEFORE_PIN_RESET_DESC = "periodBeforePinReset desc"
    PERIOD_OFFLINE_BEFORE_ACCESS_CHECK = "periodOfflineBeforeAccessCheck"
    PERIOD_OFFLINE_BEFORE_ACCESS_CHECK_DESC = "periodOfflineBeforeAccessCheck desc"
    PERIOD_OFFLINE_BEFORE_WIPE_IS_ENFORCED = "periodOfflineBeforeWipeIsEnforced"
    PERIOD_OFFLINE_BEFORE_WIPE_IS_ENFORCED_DESC = "periodOfflineBeforeWipeIsEnforced desc"
    PERIOD_ONLINE_BEFORE_ACCESS_CHECK = "periodOnlineBeforeAccessCheck"
    PERIOD_ONLINE_BEFORE_ACCESS_CHECK_DESC = "periodOnlineBeforeAccessCheck desc"
    PIN_CHARACTER_SET = "pinCharacterSet"
    PIN_CHARACTER_SET_DESC = "pinCharacterSet desc"
    PIN_REQUIRED = "pinRequired"
    PIN_REQUIRED_DESC = "pinRequired desc"
    PRINT_BLOCKED = "printBlocked"
    PRINT_BLOCKED_DESC = "printBlocked desc"
    SAVE_AS_BLOCKED = "saveAsBlocked"
    SAVE_AS_BLOCKED_DESC = "saveAsBlocked desc"
    SIMPLE_PIN_BLOCKED = "simplePinBlocked"
    SIMPLE_PIN_BLOCKED_DESC = "simplePinBlocked desc"
    IS_ASSIGNED = "isAssigned"
    IS_ASSIGNED_DESC = "isAssigned desc"
    APP_DATA_ENCRYPTION_TYPE = "appDataEncryptionType"
    APP_DATA_ENCRYPTION_TYPE_DESC = "appDataEncryptionType desc"
    CUSTOM_BROWSER_PROTOCOL = "customBrowserProtocol"
    CUSTOM_BROWSER_PROTOCOL_DESC = "customBrowserProtocol desc"
    DEPLOYED_APP_COUNT = "deployedAppCount"
    DEPLOYED_APP_COUNT_DESC = "deployedAppCount desc"
    FACE_ID_BLOCKED = "faceIdBlocked"
    FACE_ID_BLOCKED_DESC = "faceIdBlocked desc"
    MINIMUM_REQUIRED_SDK_VERSION = "minimumRequiredSdkVersion"
    MINIMUM_REQUIRED_SDK_VERSION_DESC = "minimumRequiredSdkVersion desc"

class Enum37(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CREATED_DATE_TIME = "createdDateTime"
    DESCRIPTION = "description"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    VERSION = "version"
    ALLOWED_DATA_STORAGE_LOCATIONS = "allowedDataStorageLocations"
    ALLOWED_INBOUND_DATA_TRANSFER_SOURCES = "allowedInboundDataTransferSources"
    ALLOWED_OUTBOUND_CLIPBOARD_SHARING_LEVEL = "allowedOutboundClipboardSharingLevel"
    ALLOWED_OUTBOUND_DATA_TRANSFER_DESTINATIONS = "allowedOutboundDataTransferDestinations"
    CONTACT_SYNC_BLOCKED = "contactSyncBlocked"
    DATA_BACKUP_BLOCKED = "dataBackupBlocked"
    DEVICE_COMPLIANCE_REQUIRED = "deviceComplianceRequired"
    DISABLE_APP_PIN_IF_DEVICE_PIN_IS_SET = "disableAppPinIfDevicePinIsSet"
    FINGERPRINT_BLOCKED = "fingerprintBlocked"
    MANAGED_BROWSER = "managedBrowser"
    MANAGED_BROWSER_TO_OPEN_LINKS_REQUIRED = "managedBrowserToOpenLinksRequired"
    MAXIMUM_PIN_RETRIES = "maximumPinRetries"
    MINIMUM_PIN_LENGTH = "minimumPinLength"
    MINIMUM_REQUIRED_APP_VERSION = "minimumRequiredAppVersion"
    MINIMUM_REQUIRED_OS_VERSION = "minimumRequiredOsVersion"
    MINIMUM_WARNING_APP_VERSION = "minimumWarningAppVersion"
    MINIMUM_WARNING_OS_VERSION = "minimumWarningOsVersion"
    ORGANIZATIONAL_CREDENTIALS_REQUIRED = "organizationalCredentialsRequired"
    PERIOD_BEFORE_PIN_RESET = "periodBeforePinReset"
    PERIOD_OFFLINE_BEFORE_ACCESS_CHECK = "periodOfflineBeforeAccessCheck"
    PERIOD_OFFLINE_BEFORE_WIPE_IS_ENFORCED = "periodOfflineBeforeWipeIsEnforced"
    PERIOD_ONLINE_BEFORE_ACCESS_CHECK = "periodOnlineBeforeAccessCheck"
    PIN_CHARACTER_SET = "pinCharacterSet"
    PIN_REQUIRED = "pinRequired"
    PRINT_BLOCKED = "printBlocked"
    SAVE_AS_BLOCKED = "saveAsBlocked"
    SIMPLE_PIN_BLOCKED = "simplePinBlocked"
    IS_ASSIGNED = "isAssigned"
    APP_DATA_ENCRYPTION_TYPE = "appDataEncryptionType"
    CUSTOM_BROWSER_PROTOCOL = "customBrowserProtocol"
    DEPLOYED_APP_COUNT = "deployedAppCount"
    FACE_ID_BLOCKED = "faceIdBlocked"
    MINIMUM_REQUIRED_SDK_VERSION = "minimumRequiredSdkVersion"
    ASSIGNMENTS = "assignments"
    APPS = "apps"
    DEPLOYMENT_SUMMARY = "deploymentSummary"

class Enum38(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    ASSIGNMENTS = "assignments"
    APPS = "apps"
    DEPLOYMENT_SUMMARY = "deploymentSummary"

class Enum39(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CREATED_DATE_TIME = "createdDateTime"
    DESCRIPTION = "description"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    VERSION = "version"
    ALLOWED_DATA_STORAGE_LOCATIONS = "allowedDataStorageLocations"
    ALLOWED_INBOUND_DATA_TRANSFER_SOURCES = "allowedInboundDataTransferSources"
    ALLOWED_OUTBOUND_CLIPBOARD_SHARING_LEVEL = "allowedOutboundClipboardSharingLevel"
    ALLOWED_OUTBOUND_DATA_TRANSFER_DESTINATIONS = "allowedOutboundDataTransferDestinations"
    CONTACT_SYNC_BLOCKED = "contactSyncBlocked"
    DATA_BACKUP_BLOCKED = "dataBackupBlocked"
    DEVICE_COMPLIANCE_REQUIRED = "deviceComplianceRequired"
    DISABLE_APP_PIN_IF_DEVICE_PIN_IS_SET = "disableAppPinIfDevicePinIsSet"
    FINGERPRINT_BLOCKED = "fingerprintBlocked"
    MANAGED_BROWSER = "managedBrowser"
    MANAGED_BROWSER_TO_OPEN_LINKS_REQUIRED = "managedBrowserToOpenLinksRequired"
    MAXIMUM_PIN_RETRIES = "maximumPinRetries"
    MINIMUM_PIN_LENGTH = "minimumPinLength"
    MINIMUM_REQUIRED_APP_VERSION = "minimumRequiredAppVersion"
    MINIMUM_REQUIRED_OS_VERSION = "minimumRequiredOsVersion"
    MINIMUM_WARNING_APP_VERSION = "minimumWarningAppVersion"
    MINIMUM_WARNING_OS_VERSION = "minimumWarningOsVersion"
    ORGANIZATIONAL_CREDENTIALS_REQUIRED = "organizationalCredentialsRequired"
    PERIOD_BEFORE_PIN_RESET = "periodBeforePinReset"
    PERIOD_OFFLINE_BEFORE_ACCESS_CHECK = "periodOfflineBeforeAccessCheck"
    PERIOD_OFFLINE_BEFORE_WIPE_IS_ENFORCED = "periodOfflineBeforeWipeIsEnforced"
    PERIOD_ONLINE_BEFORE_ACCESS_CHECK = "periodOnlineBeforeAccessCheck"
    PIN_CHARACTER_SET = "pinCharacterSet"
    PIN_REQUIRED = "pinRequired"
    PRINT_BLOCKED = "printBlocked"
    SAVE_AS_BLOCKED = "saveAsBlocked"
    SIMPLE_PIN_BLOCKED = "simplePinBlocked"
    IS_ASSIGNED = "isAssigned"
    APP_DATA_ENCRYPTION_TYPE = "appDataEncryptionType"
    CUSTOM_BROWSER_PROTOCOL = "customBrowserProtocol"
    DEPLOYED_APP_COUNT = "deployedAppCount"
    FACE_ID_BLOCKED = "faceIdBlocked"
    MINIMUM_REQUIRED_SDK_VERSION = "minimumRequiredSdkVersion"
    ASSIGNMENTS = "assignments"
    APPS = "apps"
    DEPLOYMENT_SUMMARY = "deploymentSummary"

class Enum40(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    ASSIGNMENTS = "assignments"
    APPS = "apps"
    DEPLOYMENT_SUMMARY = "deploymentSummary"

class Enum41(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    MOBILE_APP_IDENTIFIER = "mobileAppIdentifier"
    MOBILE_APP_IDENTIFIER_DESC = "mobileAppIdentifier desc"
    VERSION = "version"
    VERSION_DESC = "version desc"

class Enum42(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    MOBILE_APP_IDENTIFIER = "mobileAppIdentifier"
    VERSION = "version"

class Enum43(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    MOBILE_APP_IDENTIFIER = "mobileAppIdentifier"
    VERSION = "version"

class Enum44(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CONFIGURATION_DEPLOYED_USER_COUNT = "configurationDeployedUserCount"
    CONFIGURATION_DEPLOYMENT_SUMMARY_PER_APP = "configurationDeploymentSummaryPerApp"
    DISPLAY_NAME = "displayName"
    LAST_REFRESH_TIME = "lastRefreshTime"
    VERSION = "version"

class Enum45(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    CREATED_DATE_TIME = "createdDateTime"
    CREATED_DATE_TIME_DESC = "createdDateTime desc"
    DESCRIPTION = "description"
    DESCRIPTION_DESC = "description desc"
    DISPLAY_NAME = "displayName"
    DISPLAY_NAME_DESC = "displayName desc"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    LAST_MODIFIED_DATE_TIME_DESC = "lastModifiedDateTime desc"
    VERSION = "version"
    VERSION_DESC = "version desc"

class Enum46(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CREATED_DATE_TIME = "createdDateTime"
    DESCRIPTION = "description"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    VERSION = "version"

class Enum47(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CREATED_DATE_TIME = "createdDateTime"
    DESCRIPTION = "description"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    VERSION = "version"

class Enum48(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    APP_IDENTIFIER = "appIdentifier"
    APP_IDENTIFIER_DESC = "appIdentifier desc"
    APPLICATION_VERSION = "applicationVersion"
    APPLICATION_VERSION_DESC = "applicationVersion desc"
    CREATED_DATE_TIME = "createdDateTime"
    CREATED_DATE_TIME_DESC = "createdDateTime desc"
    DEVICE_NAME = "deviceName"
    DEVICE_NAME_DESC = "deviceName desc"
    DEVICE_TAG = "deviceTag"
    DEVICE_TAG_DESC = "deviceTag desc"
    DEVICE_TYPE = "deviceType"
    DEVICE_TYPE_DESC = "deviceType desc"
    FLAGGED_REASONS = "flaggedReasons"
    FLAGGED_REASONS_DESC = "flaggedReasons desc"
    LAST_SYNC_DATE_TIME = "lastSyncDateTime"
    LAST_SYNC_DATE_TIME_DESC = "lastSyncDateTime desc"
    MANAGEMENT_SDK_VERSION = "managementSdkVersion"
    MANAGEMENT_SDK_VERSION_DESC = "managementSdkVersion desc"
    PLATFORM_VERSION = "platformVersion"
    PLATFORM_VERSION_DESC = "platformVersion desc"
    USER_ID = "userId"
    USER_ID_DESC = "userId desc"
    VERSION = "version"
    VERSION_DESC = "version desc"

class Enum49(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    APP_IDENTIFIER = "appIdentifier"
    APPLICATION_VERSION = "applicationVersion"
    CREATED_DATE_TIME = "createdDateTime"
    DEVICE_NAME = "deviceName"
    DEVICE_TAG = "deviceTag"
    DEVICE_TYPE = "deviceType"
    FLAGGED_REASONS = "flaggedReasons"
    LAST_SYNC_DATE_TIME = "lastSyncDateTime"
    MANAGEMENT_SDK_VERSION = "managementSdkVersion"
    PLATFORM_VERSION = "platformVersion"
    USER_ID = "userId"
    VERSION = "version"
    APPLIED_POLICIES = "appliedPolicies"
    INTENDED_POLICIES = "intendedPolicies"
    OPERATIONS = "operations"

class Enum50(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    APPLIED_POLICIES = "appliedPolicies"
    INTENDED_POLICIES = "intendedPolicies"
    OPERATIONS = "operations"

class Enum51(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    APP_IDENTIFIER = "appIdentifier"
    APPLICATION_VERSION = "applicationVersion"
    CREATED_DATE_TIME = "createdDateTime"
    DEVICE_NAME = "deviceName"
    DEVICE_TAG = "deviceTag"
    DEVICE_TYPE = "deviceType"
    FLAGGED_REASONS = "flaggedReasons"
    LAST_SYNC_DATE_TIME = "lastSyncDateTime"
    MANAGEMENT_SDK_VERSION = "managementSdkVersion"
    PLATFORM_VERSION = "platformVersion"
    USER_ID = "userId"
    VERSION = "version"
    APPLIED_POLICIES = "appliedPolicies"
    INTENDED_POLICIES = "intendedPolicies"
    OPERATIONS = "operations"

class Enum52(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    APPLIED_POLICIES = "appliedPolicies"
    INTENDED_POLICIES = "intendedPolicies"
    OPERATIONS = "operations"

class Enum53(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    CREATED_DATE_TIME = "createdDateTime"
    CREATED_DATE_TIME_DESC = "createdDateTime desc"
    DESCRIPTION = "description"
    DESCRIPTION_DESC = "description desc"
    DISPLAY_NAME = "displayName"
    DISPLAY_NAME_DESC = "displayName desc"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    LAST_MODIFIED_DATE_TIME_DESC = "lastModifiedDateTime desc"
    VERSION = "version"
    VERSION_DESC = "version desc"

class Enum54(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CREATED_DATE_TIME = "createdDateTime"
    DESCRIPTION = "description"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    VERSION = "version"

class Enum55(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CREATED_DATE_TIME = "createdDateTime"
    DESCRIPTION = "description"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    VERSION = "version"

class Enum56(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    CREATED_DATE_TIME = "createdDateTime"
    CREATED_DATE_TIME_DESC = "createdDateTime desc"
    DESCRIPTION = "description"
    DESCRIPTION_DESC = "description desc"
    DISPLAY_NAME = "displayName"
    DISPLAY_NAME_DESC = "displayName desc"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    LAST_MODIFIED_DATE_TIME_DESC = "lastModifiedDateTime desc"
    VERSION = "version"
    VERSION_DESC = "version desc"

class Enum57(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CREATED_DATE_TIME = "createdDateTime"
    DESCRIPTION = "description"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    VERSION = "version"

class Enum58(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CREATED_DATE_TIME = "createdDateTime"
    DESCRIPTION = "description"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    VERSION = "version"

class Enum59(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    DISPLAY_NAME = "displayName"
    DISPLAY_NAME_DESC = "displayName desc"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    LAST_MODIFIED_DATE_TIME_DESC = "lastModifiedDateTime desc"
    STATE = "state"
    STATE_DESC = "state desc"
    VERSION = "version"
    VERSION_DESC = "version desc"

class Enum60(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    STATE = "state"
    VERSION = "version"

class Enum61(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    STATE = "state"
    VERSION = "version"

class Enum62(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    DISPLAY_NAME = "displayName"
    DISPLAY_NAME_DESC = "displayName desc"
    VERSION = "version"
    VERSION_DESC = "version desc"

class Enum63(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    DISPLAY_NAME = "displayName"
    VERSION = "version"

class Enum64(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    DISPLAY_NAME = "displayName"
    VERSION = "version"

class Enum65(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    CREATED_DATE_TIME = "createdDateTime"
    CREATED_DATE_TIME_DESC = "createdDateTime desc"
    DESCRIPTION = "description"
    DESCRIPTION_DESC = "description desc"
    DISPLAY_NAME = "displayName"
    DISPLAY_NAME_DESC = "displayName desc"
    INFORMATION_URL = "informationUrl"
    INFORMATION_URL_DESC = "informationUrl desc"
    LARGE_COVER = "largeCover"
    LARGE_COVER_DESC = "largeCover desc"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    LAST_MODIFIED_DATE_TIME_DESC = "lastModifiedDateTime desc"
    PRIVACY_INFORMATION_URL = "privacyInformationUrl"
    PRIVACY_INFORMATION_URL_DESC = "privacyInformationUrl desc"
    PUBLISHED_DATE_TIME = "publishedDateTime"
    PUBLISHED_DATE_TIME_DESC = "publishedDateTime desc"
    PUBLISHER = "publisher"
    PUBLISHER_DESC = "publisher desc"

class Enum66(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CREATED_DATE_TIME = "createdDateTime"
    DESCRIPTION = "description"
    DISPLAY_NAME = "displayName"
    INFORMATION_URL = "informationUrl"
    LARGE_COVER = "largeCover"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    PRIVACY_INFORMATION_URL = "privacyInformationUrl"
    PUBLISHED_DATE_TIME = "publishedDateTime"
    PUBLISHER = "publisher"
    ASSIGNMENTS = "assignments"
    DEVICE_STATES = "deviceStates"
    INSTALL_SUMMARY = "installSummary"
    USER_STATE_SUMMARY = "userStateSummary"

class Enum67(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    ASSIGNMENTS = "assignments"
    DEVICE_STATES = "deviceStates"
    INSTALL_SUMMARY = "installSummary"
    USER_STATE_SUMMARY = "userStateSummary"

class Enum68(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CREATED_DATE_TIME = "createdDateTime"
    DESCRIPTION = "description"
    DISPLAY_NAME = "displayName"
    INFORMATION_URL = "informationUrl"
    LARGE_COVER = "largeCover"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    PRIVACY_INFORMATION_URL = "privacyInformationUrl"
    PUBLISHED_DATE_TIME = "publishedDateTime"
    PUBLISHER = "publisher"
    ASSIGNMENTS = "assignments"
    DEVICE_STATES = "deviceStates"
    INSTALL_SUMMARY = "installSummary"
    USER_STATE_SUMMARY = "userStateSummary"

class Enum69(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    ASSIGNMENTS = "assignments"
    DEVICE_STATES = "deviceStates"
    INSTALL_SUMMARY = "installSummary"
    USER_STATE_SUMMARY = "userStateSummary"

class Enum70(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    INSTALL_INTENT = "installIntent"
    INSTALL_INTENT_DESC = "installIntent desc"
    TARGET = "target"
    TARGET_DESC = "target desc"

class Enum71(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    INSTALL_INTENT = "installIntent"
    TARGET = "target"

class Enum72(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    INSTALL_INTENT = "installIntent"
    TARGET = "target"

class Enum73(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    DEVICE_ID = "deviceId"
    DEVICE_ID_DESC = "deviceId desc"
    DEVICE_NAME = "deviceName"
    DEVICE_NAME_DESC = "deviceName desc"
    ERROR_CODE = "errorCode"
    ERROR_CODE_DESC = "errorCode desc"
    INSTALL_STATE = "installState"
    INSTALL_STATE_DESC = "installState desc"
    LAST_SYNC_DATE_TIME = "lastSyncDateTime"
    LAST_SYNC_DATE_TIME_DESC = "lastSyncDateTime desc"
    OS_DESCRIPTION = "osDescription"
    OS_DESCRIPTION_DESC = "osDescription desc"
    OS_VERSION = "osVersion"
    OS_VERSION_DESC = "osVersion desc"
    USER_NAME = "userName"
    USER_NAME_DESC = "userName desc"

class Enum74(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    DEVICE_ID = "deviceId"
    DEVICE_NAME = "deviceName"
    ERROR_CODE = "errorCode"
    INSTALL_STATE = "installState"
    LAST_SYNC_DATE_TIME = "lastSyncDateTime"
    OS_DESCRIPTION = "osDescription"
    OS_VERSION = "osVersion"
    USER_NAME = "userName"

class Enum75(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    DEVICE_ID = "deviceId"
    DEVICE_NAME = "deviceName"
    ERROR_CODE = "errorCode"
    INSTALL_STATE = "installState"
    LAST_SYNC_DATE_TIME = "lastSyncDateTime"
    OS_DESCRIPTION = "osDescription"
    OS_VERSION = "osVersion"
    USER_NAME = "userName"

class Enum76(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    FAILED_DEVICE_COUNT = "failedDeviceCount"
    FAILED_USER_COUNT = "failedUserCount"
    INSTALLED_DEVICE_COUNT = "installedDeviceCount"
    INSTALLED_USER_COUNT = "installedUserCount"
    NOT_INSTALLED_DEVICE_COUNT = "notInstalledDeviceCount"
    NOT_INSTALLED_USER_COUNT = "notInstalledUserCount"

class Enum77(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    FAILED_DEVICE_COUNT = "failedDeviceCount"
    FAILED_DEVICE_COUNT_DESC = "failedDeviceCount desc"
    INSTALLED_DEVICE_COUNT = "installedDeviceCount"
    INSTALLED_DEVICE_COUNT_DESC = "installedDeviceCount desc"
    NOT_INSTALLED_DEVICE_COUNT = "notInstalledDeviceCount"
    NOT_INSTALLED_DEVICE_COUNT_DESC = "notInstalledDeviceCount desc"
    USER_NAME = "userName"
    USER_NAME_DESC = "userName desc"

class Enum78(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    FAILED_DEVICE_COUNT = "failedDeviceCount"
    INSTALLED_DEVICE_COUNT = "installedDeviceCount"
    NOT_INSTALLED_DEVICE_COUNT = "notInstalledDeviceCount"
    USER_NAME = "userName"
    DEVICE_STATES = "deviceStates"

class Enum79(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    DEVICE_STATES = "deviceStates"

class Enum80(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    FAILED_DEVICE_COUNT = "failedDeviceCount"
    INSTALLED_DEVICE_COUNT = "installedDeviceCount"
    NOT_INSTALLED_DEVICE_COUNT = "notInstalledDeviceCount"
    USER_NAME = "userName"
    DEVICE_STATES = "deviceStates"

class Enum81(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    DEVICE_STATES = "deviceStates"

class Enum82(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    DEVICE_ID = "deviceId"
    DEVICE_ID_DESC = "deviceId desc"
    DEVICE_NAME = "deviceName"
    DEVICE_NAME_DESC = "deviceName desc"
    ERROR_CODE = "errorCode"
    ERROR_CODE_DESC = "errorCode desc"
    INSTALL_STATE = "installState"
    INSTALL_STATE_DESC = "installState desc"
    LAST_SYNC_DATE_TIME = "lastSyncDateTime"
    LAST_SYNC_DATE_TIME_DESC = "lastSyncDateTime desc"
    OS_DESCRIPTION = "osDescription"
    OS_DESCRIPTION_DESC = "osDescription desc"
    OS_VERSION = "osVersion"
    OS_VERSION_DESC = "osVersion desc"
    USER_NAME = "userName"
    USER_NAME_DESC = "userName desc"

class Enum83(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    DEVICE_ID = "deviceId"
    DEVICE_NAME = "deviceName"
    ERROR_CODE = "errorCode"
    INSTALL_STATE = "installState"
    LAST_SYNC_DATE_TIME = "lastSyncDateTime"
    OS_DESCRIPTION = "osDescription"
    OS_VERSION = "osVersion"
    USER_NAME = "userName"

class Enum84(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    DEVICE_ID = "deviceId"
    DEVICE_NAME = "deviceName"
    ERROR_CODE = "errorCode"
    INSTALL_STATE = "installState"
    LAST_SYNC_DATE_TIME = "lastSyncDateTime"
    OS_DESCRIPTION = "osDescription"
    OS_VERSION = "osVersion"
    USER_NAME = "userName"

class Enum85(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    CREATED_DATE_TIME = "createdDateTime"
    CREATED_DATE_TIME_DESC = "createdDateTime desc"
    DESCRIPTION = "description"
    DESCRIPTION_DESC = "description desc"
    DISPLAY_NAME = "displayName"
    DISPLAY_NAME_DESC = "displayName desc"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    LAST_MODIFIED_DATE_TIME_DESC = "lastModifiedDateTime desc"
    VERSION = "version"
    VERSION_DESC = "version desc"
    AZURE_RIGHTS_MANAGEMENT_SERVICES_ALLOWED = "azureRightsManagementServicesAllowed"
    AZURE_RIGHTS_MANAGEMENT_SERVICES_ALLOWED_DESC = "azureRightsManagementServicesAllowed desc"
    DATA_RECOVERY_CERTIFICATE = "dataRecoveryCertificate"
    DATA_RECOVERY_CERTIFICATE_DESC = "dataRecoveryCertificate desc"
    ENFORCEMENT_LEVEL = "enforcementLevel"
    ENFORCEMENT_LEVEL_DESC = "enforcementLevel desc"
    ENTERPRISE_DOMAIN = "enterpriseDomain"
    ENTERPRISE_DOMAIN_DESC = "enterpriseDomain desc"
    ENTERPRISE_INTERNAL_PROXY_SERVERS = "enterpriseInternalProxyServers"
    ENTERPRISE_INTERNAL_PROXY_SERVERS_DESC = "enterpriseInternalProxyServers desc"
    ENTERPRISE_IP_RANGES = "enterpriseIPRanges"
    ENTERPRISE_IP_RANGES_DESC = "enterpriseIPRanges desc"
    ENTERPRISE_IP_RANGES_ARE_AUTHORITATIVE = "enterpriseIPRangesAreAuthoritative"
    ENTERPRISE_IP_RANGES_ARE_AUTHORITATIVE_DESC = "enterpriseIPRangesAreAuthoritative desc"
    ENTERPRISE_NETWORK_DOMAIN_NAMES = "enterpriseNetworkDomainNames"
    ENTERPRISE_NETWORK_DOMAIN_NAMES_DESC = "enterpriseNetworkDomainNames desc"
    ENTERPRISE_PROTECTED_DOMAIN_NAMES = "enterpriseProtectedDomainNames"
    ENTERPRISE_PROTECTED_DOMAIN_NAMES_DESC = "enterpriseProtectedDomainNames desc"
    ENTERPRISE_PROXIED_DOMAINS = "enterpriseProxiedDomains"
    ENTERPRISE_PROXIED_DOMAINS_DESC = "enterpriseProxiedDomains desc"
    ENTERPRISE_PROXY_SERVERS = "enterpriseProxyServers"
    ENTERPRISE_PROXY_SERVERS_DESC = "enterpriseProxyServers desc"
    ENTERPRISE_PROXY_SERVERS_ARE_AUTHORITATIVE = "enterpriseProxyServersAreAuthoritative"
    ENTERPRISE_PROXY_SERVERS_ARE_AUTHORITATIVE_DESC = "enterpriseProxyServersAreAuthoritative desc"
    EXEMPT_APPS = "exemptApps"
    EXEMPT_APPS_DESC = "exemptApps desc"
    ICONS_VISIBLE = "iconsVisible"
    ICONS_VISIBLE_DESC = "iconsVisible desc"
    INDEXING_ENCRYPTED_STORES_OR_ITEMS_BLOCKED = "indexingEncryptedStoresOrItemsBlocked"
    INDEXING_ENCRYPTED_STORES_OR_ITEMS_BLOCKED_DESC = "indexingEncryptedStoresOrItemsBlocked desc"
    IS_ASSIGNED = "isAssigned"
    IS_ASSIGNED_DESC = "isAssigned desc"
    NEUTRAL_DOMAIN_RESOURCES = "neutralDomainResources"
    NEUTRAL_DOMAIN_RESOURCES_DESC = "neutralDomainResources desc"
    PROTECTED_APPS = "protectedApps"
    PROTECTED_APPS_DESC = "protectedApps desc"
    PROTECTION_UNDER_LOCK_CONFIG_REQUIRED = "protectionUnderLockConfigRequired"
    PROTECTION_UNDER_LOCK_CONFIG_REQUIRED_DESC = "protectionUnderLockConfigRequired desc"
    REVOKE_ON_UNENROLL_DISABLED = "revokeOnUnenrollDisabled"
    REVOKE_ON_UNENROLL_DISABLED_DESC = "revokeOnUnenrollDisabled desc"
    RIGHTS_MANAGEMENT_SERVICES_TEMPLATE_ID = "rightsManagementServicesTemplateId"
    RIGHTS_MANAGEMENT_SERVICES_TEMPLATE_ID_DESC = "rightsManagementServicesTemplateId desc"
    SMB_AUTO_ENCRYPTED_FILE_EXTENSIONS = "smbAutoEncryptedFileExtensions"
    SMB_AUTO_ENCRYPTED_FILE_EXTENSIONS_DESC = "smbAutoEncryptedFileExtensions desc"

class Enum86(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CREATED_DATE_TIME = "createdDateTime"
    DESCRIPTION = "description"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    VERSION = "version"
    AZURE_RIGHTS_MANAGEMENT_SERVICES_ALLOWED = "azureRightsManagementServicesAllowed"
    DATA_RECOVERY_CERTIFICATE = "dataRecoveryCertificate"
    ENFORCEMENT_LEVEL = "enforcementLevel"
    ENTERPRISE_DOMAIN = "enterpriseDomain"
    ENTERPRISE_INTERNAL_PROXY_SERVERS = "enterpriseInternalProxyServers"
    ENTERPRISE_IP_RANGES = "enterpriseIPRanges"
    ENTERPRISE_IP_RANGES_ARE_AUTHORITATIVE = "enterpriseIPRangesAreAuthoritative"
    ENTERPRISE_NETWORK_DOMAIN_NAMES = "enterpriseNetworkDomainNames"
    ENTERPRISE_PROTECTED_DOMAIN_NAMES = "enterpriseProtectedDomainNames"
    ENTERPRISE_PROXIED_DOMAINS = "enterpriseProxiedDomains"
    ENTERPRISE_PROXY_SERVERS = "enterpriseProxyServers"
    ENTERPRISE_PROXY_SERVERS_ARE_AUTHORITATIVE = "enterpriseProxyServersAreAuthoritative"
    EXEMPT_APPS = "exemptApps"
    ICONS_VISIBLE = "iconsVisible"
    INDEXING_ENCRYPTED_STORES_OR_ITEMS_BLOCKED = "indexingEncryptedStoresOrItemsBlocked"
    IS_ASSIGNED = "isAssigned"
    NEUTRAL_DOMAIN_RESOURCES = "neutralDomainResources"
    PROTECTED_APPS = "protectedApps"
    PROTECTION_UNDER_LOCK_CONFIG_REQUIRED = "protectionUnderLockConfigRequired"
    REVOKE_ON_UNENROLL_DISABLED = "revokeOnUnenrollDisabled"
    RIGHTS_MANAGEMENT_SERVICES_TEMPLATE_ID = "rightsManagementServicesTemplateId"
    SMB_AUTO_ENCRYPTED_FILE_EXTENSIONS = "smbAutoEncryptedFileExtensions"
    ASSIGNMENTS = "assignments"
    EXEMPT_APP_LOCKER_FILES = "exemptAppLockerFiles"
    PROTECTED_APP_LOCKER_FILES = "protectedAppLockerFiles"

class Enum87(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    ASSIGNMENTS = "assignments"
    EXEMPT_APP_LOCKER_FILES = "exemptAppLockerFiles"
    PROTECTED_APP_LOCKER_FILES = "protectedAppLockerFiles"

class Enum88(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CREATED_DATE_TIME = "createdDateTime"
    DESCRIPTION = "description"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    VERSION = "version"
    AZURE_RIGHTS_MANAGEMENT_SERVICES_ALLOWED = "azureRightsManagementServicesAllowed"
    DATA_RECOVERY_CERTIFICATE = "dataRecoveryCertificate"
    ENFORCEMENT_LEVEL = "enforcementLevel"
    ENTERPRISE_DOMAIN = "enterpriseDomain"
    ENTERPRISE_INTERNAL_PROXY_SERVERS = "enterpriseInternalProxyServers"
    ENTERPRISE_IP_RANGES = "enterpriseIPRanges"
    ENTERPRISE_IP_RANGES_ARE_AUTHORITATIVE = "enterpriseIPRangesAreAuthoritative"
    ENTERPRISE_NETWORK_DOMAIN_NAMES = "enterpriseNetworkDomainNames"
    ENTERPRISE_PROTECTED_DOMAIN_NAMES = "enterpriseProtectedDomainNames"
    ENTERPRISE_PROXIED_DOMAINS = "enterpriseProxiedDomains"
    ENTERPRISE_PROXY_SERVERS = "enterpriseProxyServers"
    ENTERPRISE_PROXY_SERVERS_ARE_AUTHORITATIVE = "enterpriseProxyServersAreAuthoritative"
    EXEMPT_APPS = "exemptApps"
    ICONS_VISIBLE = "iconsVisible"
    INDEXING_ENCRYPTED_STORES_OR_ITEMS_BLOCKED = "indexingEncryptedStoresOrItemsBlocked"
    IS_ASSIGNED = "isAssigned"
    NEUTRAL_DOMAIN_RESOURCES = "neutralDomainResources"
    PROTECTED_APPS = "protectedApps"
    PROTECTION_UNDER_LOCK_CONFIG_REQUIRED = "protectionUnderLockConfigRequired"
    REVOKE_ON_UNENROLL_DISABLED = "revokeOnUnenrollDisabled"
    RIGHTS_MANAGEMENT_SERVICES_TEMPLATE_ID = "rightsManagementServicesTemplateId"
    SMB_AUTO_ENCRYPTED_FILE_EXTENSIONS = "smbAutoEncryptedFileExtensions"
    ASSIGNMENTS = "assignments"
    EXEMPT_APP_LOCKER_FILES = "exemptAppLockerFiles"
    PROTECTED_APP_LOCKER_FILES = "protectedAppLockerFiles"

class Enum89(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    ASSIGNMENTS = "assignments"
    EXEMPT_APP_LOCKER_FILES = "exemptAppLockerFiles"
    PROTECTED_APP_LOCKER_FILES = "protectedAppLockerFiles"

class Enum90(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    DISPLAY_NAME = "displayName"
    DISPLAY_NAME_DESC = "displayName desc"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    LAST_MODIFIED_DATE_TIME_DESC = "lastModifiedDateTime desc"

class Enum91(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"

class Enum92(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"

class Enum93(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    CREATED_DATE_TIME = "createdDateTime"
    CREATED_DATE_TIME_DESC = "createdDateTime desc"
    DESCRIPTION = "description"
    DESCRIPTION_DESC = "description desc"
    DISPLAY_NAME = "displayName"
    DISPLAY_NAME_DESC = "displayName desc"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    LAST_MODIFIED_DATE_TIME_DESC = "lastModifiedDateTime desc"
    TARGETED_MOBILE_APPS = "targetedMobileApps"
    TARGETED_MOBILE_APPS_DESC = "targetedMobileApps desc"
    VERSION = "version"
    VERSION_DESC = "version desc"

class Enum94(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CREATED_DATE_TIME = "createdDateTime"
    DESCRIPTION = "description"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    TARGETED_MOBILE_APPS = "targetedMobileApps"
    VERSION = "version"
    ASSIGNMENTS = "assignments"
    DEVICE_STATUSES = "deviceStatuses"
    DEVICE_STATUS_SUMMARY = "deviceStatusSummary"
    USER_STATUSES = "userStatuses"
    USER_STATUS_SUMMARY = "userStatusSummary"

class Enum95(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    ASSIGNMENTS = "assignments"
    DEVICE_STATUSES = "deviceStatuses"
    DEVICE_STATUS_SUMMARY = "deviceStatusSummary"
    USER_STATUSES = "userStatuses"
    USER_STATUS_SUMMARY = "userStatusSummary"

class Enum96(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CREATED_DATE_TIME = "createdDateTime"
    DESCRIPTION = "description"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    TARGETED_MOBILE_APPS = "targetedMobileApps"
    VERSION = "version"
    ASSIGNMENTS = "assignments"
    DEVICE_STATUSES = "deviceStatuses"
    DEVICE_STATUS_SUMMARY = "deviceStatusSummary"
    USER_STATUSES = "userStatuses"
    USER_STATUS_SUMMARY = "userStatusSummary"

class Enum97(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    ASSIGNMENTS = "assignments"
    DEVICE_STATUSES = "deviceStatuses"
    DEVICE_STATUS_SUMMARY = "deviceStatusSummary"
    USER_STATUSES = "userStatuses"
    USER_STATUS_SUMMARY = "userStatusSummary"

class Enum98(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    TARGET = "target"
    TARGET_DESC = "target desc"

class Enum99(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    TARGET = "target"

class Get0ItemsItem(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    IS_ENABLED_FOR_MICROSOFT_STORE_FOR_BUSINESS = "isEnabledForMicrosoftStoreForBusiness"
    MICROSOFT_STORE_FOR_BUSINESS_LANGUAGE = "microsoftStoreForBusinessLanguage"
    MICROSOFT_STORE_FOR_BUSINESS_LAST_COMPLETED_APPLICATION_SYNC_TIME = "microsoftStoreForBusinessLastCompletedApplicationSyncTime"
    MICROSOFT_STORE_FOR_BUSINESS_LAST_SUCCESSFUL_SYNC_DATE_TIME = "microsoftStoreForBusinessLastSuccessfulSyncDateTime"
    MANAGED_E_BOOKS = "managedEBooks"
    MOBILE_APP_CATEGORIES = "mobileAppCategories"
    MOBILE_APP_CONFIGURATIONS = "mobileAppConfigurations"
    MOBILE_APPS = "mobileApps"
    VPP_TOKENS = "vppTokens"
    ANDROID_MANAGED_APP_PROTECTIONS = "androidManagedAppProtections"
    DEFAULT_MANAGED_APP_PROTECTIONS = "defaultManagedAppProtections"
    IOS_MANAGED_APP_PROTECTIONS = "iosManagedAppProtections"
    MANAGED_APP_POLICIES = "managedAppPolicies"
    MANAGED_APP_REGISTRATIONS = "managedAppRegistrations"
    MANAGED_APP_STATUSES = "managedAppStatuses"
    MDM_WINDOWS_INFORMATION_PROTECTION_POLICIES = "mdmWindowsInformationProtectionPolicies"
    TARGETED_MANAGED_APP_CONFIGURATIONS = "targetedManagedAppConfigurations"
    WINDOWS_INFORMATION_PROTECTION_POLICIES = "windowsInformationProtectionPolicies"

class Get1ItemsItem(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    MANAGED_E_BOOKS = "managedEBooks"
    MOBILE_APP_CATEGORIES = "mobileAppCategories"
    MOBILE_APP_CONFIGURATIONS = "mobileAppConfigurations"
    MOBILE_APPS = "mobileApps"
    VPP_TOKENS = "vppTokens"
    ANDROID_MANAGED_APP_PROTECTIONS = "androidManagedAppProtections"
    DEFAULT_MANAGED_APP_PROTECTIONS = "defaultManagedAppProtections"
    IOS_MANAGED_APP_PROTECTIONS = "iosManagedAppProtections"
    MANAGED_APP_POLICIES = "managedAppPolicies"
    MANAGED_APP_REGISTRATIONS = "managedAppRegistrations"
    MANAGED_APP_STATUSES = "managedAppStatuses"
    MDM_WINDOWS_INFORMATION_PROTECTION_POLICIES = "mdmWindowsInformationProtectionPolicies"
    TARGETED_MANAGED_APP_CONFIGURATIONS = "targetedManagedAppConfigurations"
    WINDOWS_INFORMATION_PROTECTION_POLICIES = "windowsInformationProtectionPolicies"

class Get2ItemsItem(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    ASSIGNMENTS = "assignments"
    APPS = "apps"
    DEPLOYMENT_SUMMARY = "deploymentSummary"

class Get5ItemsItem(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    CREATED_DATE_TIME = "createdDateTime"
    CREATED_DATE_TIME_DESC = "createdDateTime desc"
    DESCRIPTION = "description"
    DESCRIPTION_DESC = "description desc"
    DISPLAY_NAME = "displayName"
    DISPLAY_NAME_DESC = "displayName desc"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    LAST_MODIFIED_DATE_TIME_DESC = "lastModifiedDateTime desc"
    VERSION = "version"
    VERSION_DESC = "version desc"
    ALLOWED_DATA_STORAGE_LOCATIONS = "allowedDataStorageLocations"
    ALLOWED_DATA_STORAGE_LOCATIONS_DESC = "allowedDataStorageLocations desc"
    ALLOWED_INBOUND_DATA_TRANSFER_SOURCES = "allowedInboundDataTransferSources"
    ALLOWED_INBOUND_DATA_TRANSFER_SOURCES_DESC = "allowedInboundDataTransferSources desc"
    ALLOWED_OUTBOUND_CLIPBOARD_SHARING_LEVEL = "allowedOutboundClipboardSharingLevel"
    ALLOWED_OUTBOUND_CLIPBOARD_SHARING_LEVEL_DESC = "allowedOutboundClipboardSharingLevel desc"
    ALLOWED_OUTBOUND_DATA_TRANSFER_DESTINATIONS = "allowedOutboundDataTransferDestinations"
    ALLOWED_OUTBOUND_DATA_TRANSFER_DESTINATIONS_DESC = "allowedOutboundDataTransferDestinations desc"
    CONTACT_SYNC_BLOCKED = "contactSyncBlocked"
    CONTACT_SYNC_BLOCKED_DESC = "contactSyncBlocked desc"
    DATA_BACKUP_BLOCKED = "dataBackupBlocked"
    DATA_BACKUP_BLOCKED_DESC = "dataBackupBlocked desc"
    DEVICE_COMPLIANCE_REQUIRED = "deviceComplianceRequired"
    DEVICE_COMPLIANCE_REQUIRED_DESC = "deviceComplianceRequired desc"
    DISABLE_APP_PIN_IF_DEVICE_PIN_IS_SET = "disableAppPinIfDevicePinIsSet"
    DISABLE_APP_PIN_IF_DEVICE_PIN_IS_SET_DESC = "disableAppPinIfDevicePinIsSet desc"
    FINGERPRINT_BLOCKED = "fingerprintBlocked"
    FINGERPRINT_BLOCKED_DESC = "fingerprintBlocked desc"
    MANAGED_BROWSER = "managedBrowser"
    MANAGED_BROWSER_DESC = "managedBrowser desc"
    MANAGED_BROWSER_TO_OPEN_LINKS_REQUIRED = "managedBrowserToOpenLinksRequired"
    MANAGED_BROWSER_TO_OPEN_LINKS_REQUIRED_DESC = "managedBrowserToOpenLinksRequired desc"
    MAXIMUM_PIN_RETRIES = "maximumPinRetries"
    MAXIMUM_PIN_RETRIES_DESC = "maximumPinRetries desc"
    MINIMUM_PIN_LENGTH = "minimumPinLength"
    MINIMUM_PIN_LENGTH_DESC = "minimumPinLength desc"
    MINIMUM_REQUIRED_APP_VERSION = "minimumRequiredAppVersion"
    MINIMUM_REQUIRED_APP_VERSION_DESC = "minimumRequiredAppVersion desc"
    MINIMUM_REQUIRED_OS_VERSION = "minimumRequiredOsVersion"
    MINIMUM_REQUIRED_OS_VERSION_DESC = "minimumRequiredOsVersion desc"
    MINIMUM_WARNING_APP_VERSION = "minimumWarningAppVersion"
    MINIMUM_WARNING_APP_VERSION_DESC = "minimumWarningAppVersion desc"
    MINIMUM_WARNING_OS_VERSION = "minimumWarningOsVersion"
    MINIMUM_WARNING_OS_VERSION_DESC = "minimumWarningOsVersion desc"
    ORGANIZATIONAL_CREDENTIALS_REQUIRED = "organizationalCredentialsRequired"
    ORGANIZATIONAL_CREDENTIALS_REQUIRED_DESC = "organizationalCredentialsRequired desc"
    PERIOD_BEFORE_PIN_RESET = "periodBeforePinReset"
    PERIOD_BEFORE_PIN_RESET_DESC = "periodBeforePinReset desc"
    PERIOD_OFFLINE_BEFORE_ACCESS_CHECK = "periodOfflineBeforeAccessCheck"
    PERIOD_OFFLINE_BEFORE_ACCESS_CHECK_DESC = "periodOfflineBeforeAccessCheck desc"
    PERIOD_OFFLINE_BEFORE_WIPE_IS_ENFORCED = "periodOfflineBeforeWipeIsEnforced"
    PERIOD_OFFLINE_BEFORE_WIPE_IS_ENFORCED_DESC = "periodOfflineBeforeWipeIsEnforced desc"
    PERIOD_ONLINE_BEFORE_ACCESS_CHECK = "periodOnlineBeforeAccessCheck"
    PERIOD_ONLINE_BEFORE_ACCESS_CHECK_DESC = "periodOnlineBeforeAccessCheck desc"
    PIN_CHARACTER_SET = "pinCharacterSet"
    PIN_CHARACTER_SET_DESC = "pinCharacterSet desc"
    PIN_REQUIRED = "pinRequired"
    PIN_REQUIRED_DESC = "pinRequired desc"
    PRINT_BLOCKED = "printBlocked"
    PRINT_BLOCKED_DESC = "printBlocked desc"
    SAVE_AS_BLOCKED = "saveAsBlocked"
    SAVE_AS_BLOCKED_DESC = "saveAsBlocked desc"
    SIMPLE_PIN_BLOCKED = "simplePinBlocked"
    SIMPLE_PIN_BLOCKED_DESC = "simplePinBlocked desc"
    IS_ASSIGNED = "isAssigned"
    IS_ASSIGNED_DESC = "isAssigned desc"
    CUSTOM_BROWSER_DISPLAY_NAME = "customBrowserDisplayName"
    CUSTOM_BROWSER_DISPLAY_NAME_DESC = "customBrowserDisplayName desc"
    CUSTOM_BROWSER_PACKAGE_ID = "customBrowserPackageId"
    CUSTOM_BROWSER_PACKAGE_ID_DESC = "customBrowserPackageId desc"
    DEPLOYED_APP_COUNT = "deployedAppCount"
    DEPLOYED_APP_COUNT_DESC = "deployedAppCount desc"
    DISABLE_APP_ENCRYPTION_IF_DEVICE_ENCRYPTION_IS_ENABLED = "disableAppEncryptionIfDeviceEncryptionIsEnabled"
    DISABLE_APP_ENCRYPTION_IF_DEVICE_ENCRYPTION_IS_ENABLED_DESC = "disableAppEncryptionIfDeviceEncryptionIsEnabled desc"
    ENCRYPT_APP_DATA = "encryptAppData"
    ENCRYPT_APP_DATA_DESC = "encryptAppData desc"
    MINIMUM_REQUIRED_PATCH_VERSION = "minimumRequiredPatchVersion"
    MINIMUM_REQUIRED_PATCH_VERSION_DESC = "minimumRequiredPatchVersion desc"
    MINIMUM_WARNING_PATCH_VERSION = "minimumWarningPatchVersion"
    MINIMUM_WARNING_PATCH_VERSION_DESC = "minimumWarningPatchVersion desc"
    SCREEN_CAPTURE_BLOCKED = "screenCaptureBlocked"
    SCREEN_CAPTURE_BLOCKED_DESC = "screenCaptureBlocked desc"

class Get6ItemsItem(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    CREATED_DATE_TIME = "createdDateTime"
    DESCRIPTION = "description"
    DISPLAY_NAME = "displayName"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    VERSION = "version"
    ALLOWED_DATA_STORAGE_LOCATIONS = "allowedDataStorageLocations"
    ALLOWED_INBOUND_DATA_TRANSFER_SOURCES = "allowedInboundDataTransferSources"
    ALLOWED_OUTBOUND_CLIPBOARD_SHARING_LEVEL = "allowedOutboundClipboardSharingLevel"
    ALLOWED_OUTBOUND_DATA_TRANSFER_DESTINATIONS = "allowedOutboundDataTransferDestinations"
    CONTACT_SYNC_BLOCKED = "contactSyncBlocked"
    DATA_BACKUP_BLOCKED = "dataBackupBlocked"
    DEVICE_COMPLIANCE_REQUIRED = "deviceComplianceRequired"
    DISABLE_APP_PIN_IF_DEVICE_PIN_IS_SET = "disableAppPinIfDevicePinIsSet"
    FINGERPRINT_BLOCKED = "fingerprintBlocked"
    MANAGED_BROWSER = "managedBrowser"
    MANAGED_BROWSER_TO_OPEN_LINKS_REQUIRED = "managedBrowserToOpenLinksRequired"
    MAXIMUM_PIN_RETRIES = "maximumPinRetries"
    MINIMUM_PIN_LENGTH = "minimumPinLength"
    MINIMUM_REQUIRED_APP_VERSION = "minimumRequiredAppVersion"
    MINIMUM_REQUIRED_OS_VERSION = "minimumRequiredOsVersion"
    MINIMUM_WARNING_APP_VERSION = "minimumWarningAppVersion"
    MINIMUM_WARNING_OS_VERSION = "minimumWarningOsVersion"
    ORGANIZATIONAL_CREDENTIALS_REQUIRED = "organizationalCredentialsRequired"
    PERIOD_BEFORE_PIN_RESET = "periodBeforePinReset"
    PERIOD_OFFLINE_BEFORE_ACCESS_CHECK = "periodOfflineBeforeAccessCheck"
    PERIOD_OFFLINE_BEFORE_WIPE_IS_ENFORCED = "periodOfflineBeforeWipeIsEnforced"
    PERIOD_ONLINE_BEFORE_ACCESS_CHECK = "periodOnlineBeforeAccessCheck"
    PIN_CHARACTER_SET = "pinCharacterSet"
    PIN_REQUIRED = "pinRequired"
    PRINT_BLOCKED = "printBlocked"
    SAVE_AS_BLOCKED = "saveAsBlocked"
    SIMPLE_PIN_BLOCKED = "simplePinBlocked"
    IS_ASSIGNED = "isAssigned"
    CUSTOM_BROWSER_DISPLAY_NAME = "customBrowserDisplayName"
    CUSTOM_BROWSER_PACKAGE_ID = "customBrowserPackageId"
    DEPLOYED_APP_COUNT = "deployedAppCount"
    DISABLE_APP_ENCRYPTION_IF_DEVICE_ENCRYPTION_IS_ENABLED = "disableAppEncryptionIfDeviceEncryptionIsEnabled"
    ENCRYPT_APP_DATA = "encryptAppData"
    MINIMUM_REQUIRED_PATCH_VERSION = "minimumRequiredPatchVersion"
    MINIMUM_WARNING_PATCH_VERSION = "minimumWarningPatchVersion"
    SCREEN_CAPTURE_BLOCKED = "screenCaptureBlocked"
    ASSIGNMENTS = "assignments"
    APPS = "apps"
    DEPLOYMENT_SUMMARY = "deploymentSummary"

class Get7ItemsItem(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    ASSIGNMENTS = "assignments"
    APPS = "apps"
    DEPLOYMENT_SUMMARY = "deploymentSummary"

class MicrosoftGraphActionState(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    NONE = "none"
    PENDING = "pending"
    CANCELED = "canceled"
    ACTIVE = "active"
    DONE = "done"
    FAILED = "failed"
    NOT_SUPPORTED = "notSupported"

class MicrosoftGraphComplianceState(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    UNKNOWN = "unknown"
    COMPLIANT = "compliant"
    NONCOMPLIANT = "noncompliant"
    CONFLICT = "conflict"
    ERROR = "error"
    IN_GRACE_PERIOD = "inGracePeriod"
    CONFIG_MANAGER = "configManager"

class MicrosoftGraphComplianceStatus(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    UNKNOWN = "unknown"
    NOT_APPLICABLE = "notApplicable"
    COMPLIANT = "compliant"
    REMEDIATED = "remediated"
    NON_COMPLIANT = "nonCompliant"
    ERROR = "error"
    CONFLICT = "conflict"
    NOT_ASSIGNED = "notAssigned"

class MicrosoftGraphDeviceEnrollmentType(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    UNKNOWN = "unknown"
    USER_ENROLLMENT = "userEnrollment"
    DEVICE_ENROLLMENT_MANAGER = "deviceEnrollmentManager"
    APPLE_BULK_WITH_USER = "appleBulkWithUser"
    APPLE_BULK_WITHOUT_USER = "appleBulkWithoutUser"
    WINDOWS_AZURE_AD_JOIN = "windowsAzureADJoin"
    WINDOWS_BULK_USERLESS = "windowsBulkUserless"
    WINDOWS_AUTO_ENROLLMENT = "windowsAutoEnrollment"
    WINDOWS_BULK_AZURE_DOMAIN_JOIN = "windowsBulkAzureDomainJoin"
    WINDOWS_CO_MANAGEMENT = "windowsCoManagement"

class MicrosoftGraphDeviceManagementExchangeAccessState(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    NONE = "none"
    UNKNOWN = "unknown"
    ALLOWED = "allowed"
    BLOCKED = "blocked"
    QUARANTINED = "quarantined"

class MicrosoftGraphDeviceManagementExchangeAccessStateReason(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    NONE = "none"
    UNKNOWN = "unknown"
    EXCHANGE_GLOBAL_RULE = "exchangeGlobalRule"
    EXCHANGE_INDIVIDUAL_RULE = "exchangeIndividualRule"
    EXCHANGE_DEVICE_RULE = "exchangeDeviceRule"
    EXCHANGE_UPGRADE = "exchangeUpgrade"
    EXCHANGE_MAILBOX_POLICY = "exchangeMailboxPolicy"
    OTHER = "other"
    COMPLIANT = "compliant"
    NOT_COMPLIANT = "notCompliant"
    NOT_ENROLLED = "notEnrolled"
    UNKNOWN_LOCATION = "unknownLocation"
    MFA_REQUIRED = "mfaRequired"
    AZURE_AD_BLOCK_DUE_TO_ACCESS_POLICY = "azureADBlockDueToAccessPolicy"
    COMPROMISED_PASSWORD = "compromisedPassword"
    DEVICE_NOT_KNOWN_WITH_MANAGED_APP = "deviceNotKnownWithManagedApp"

class MicrosoftGraphDeviceRegistrationState(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    NOT_REGISTERED = "notRegistered"
    REGISTERED = "registered"
    REVOKED = "revoked"
    KEY_CONFLICT = "keyConflict"
    APPROVAL_PENDING = "approvalPending"
    CERTIFICATE_RESET = "certificateReset"
    NOT_REGISTERED_PENDING_ENROLLMENT = "notRegisteredPendingEnrollment"
    UNKNOWN = "unknown"

class MicrosoftGraphInstallIntent(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    AVAILABLE = "available"
    REQUIRED = "required"
    UNINSTALL = "uninstall"
    AVAILABLE_WITHOUT_ENROLLMENT = "availableWithoutEnrollment"

class MicrosoftGraphInstallState(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    NOT_APPLICABLE = "notApplicable"
    INSTALLED = "installed"
    FAILED = "failed"
    NOT_INSTALLED = "notInstalled"
    UNINSTALL_FAILED = "uninstallFailed"
    UNKNOWN = "unknown"

class MicrosoftGraphManagedAppClipboardSharingLevel(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ALL_APPS = "allApps"
    MANAGED_APPS_WITH_PASTE_IN = "managedAppsWithPasteIn"
    MANAGED_APPS = "managedApps"
    BLOCKED = "blocked"

class MicrosoftGraphManagedAppDataEncryptionType(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    USE_DEVICE_SETTINGS = "useDeviceSettings"
    AFTER_DEVICE_RESTART = "afterDeviceRestart"
    WHEN_DEVICE_LOCKED_EXCEPT_OPEN_FILES = "whenDeviceLockedExceptOpenFiles"
    WHEN_DEVICE_LOCKED = "whenDeviceLocked"

class MicrosoftGraphManagedAppDataStorageLocation(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ONE_DRIVE_FOR_BUSINESS = "oneDriveForBusiness"
    SHARE_POINT = "sharePoint"
    LOCAL_STORAGE = "localStorage"

class MicrosoftGraphManagedAppDataTransferLevel(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ALL_APPS = "allApps"
    MANAGED_APPS = "managedApps"
    NONE = "none"

class MicrosoftGraphManagedAppFlaggedReason(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    NONE = "none"
    ROOTED_DEVICE = "rootedDevice"

class MicrosoftGraphManagedAppPinCharacterSet(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    NUMERIC = "numeric"
    ALPHANUMERIC_AND_SYMBOL = "alphanumericAndSymbol"

class MicrosoftGraphManagedBrowserType(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    NOT_CONFIGURED = "notConfigured"
    MICROSOFT_EDGE = "microsoftEdge"

class MicrosoftGraphManagedDeviceOwnerType(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    UNKNOWN = "unknown"
    COMPANY = "company"
    PERSONAL = "personal"

class MicrosoftGraphManagedDevicePartnerReportedHealthState(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    UNKNOWN = "unknown"
    ACTIVATED = "activated"
    DEACTIVATED = "deactivated"
    SECURED = "secured"
    LOW_SEVERITY = "lowSeverity"
    MEDIUM_SEVERITY = "mediumSeverity"
    HIGH_SEVERITY = "highSeverity"
    UNRESPONSIVE = "unresponsive"
    COMPROMISED = "compromised"
    MISCONFIGURED = "misconfigured"

class MicrosoftGraphManagementAgentType(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    EAS = "eas"
    MDM = "mdm"
    EAS_MDM = "easMdm"
    INTUNE_CLIENT = "intuneClient"
    EAS_INTUNE_CLIENT = "easIntuneClient"
    CONFIGURATION_MANAGER_CLIENT = "configurationManagerClient"
    CONFIGURATION_MANAGER_CLIENT_MDM = "configurationManagerClientMdm"
    CONFIGURATION_MANAGER_CLIENT_MDM_EAS = "configurationManagerClientMdmEas"
    UNKNOWN = "unknown"
    JAMF = "jamf"
    GOOGLE_CLOUD_DEVICE_POLICY_CONTROLLER = "googleCloudDevicePolicyController"

class MicrosoftGraphMobileAppPublishingState(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    NOT_PUBLISHED = "notPublished"
    PROCESSING = "processing"
    PUBLISHED = "published"

class MicrosoftGraphPolicyPlatformType(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ANDROID = "android"
    I_OS = "iOS"
    MAC_OS = "macOS"
    WINDOWS_PHONE81 = "windowsPhone81"
    WINDOWS81_AND_LATER = "windows81AndLater"
    WINDOWS10_AND_LATER = "windows10AndLater"
    ANDROID_WORK_PROFILE = "androidWorkProfile"
    ALL = "all"

class MicrosoftGraphVppTokenAccountType(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    BUSINESS = "business"
    EDUCATION = "education"

class MicrosoftGraphVppTokenState(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    UNKNOWN = "unknown"
    VALID = "valid"
    EXPIRED = "expired"
    INVALID = "invalid"
    ASSIGNED_TO_EXTERNAL_MDM = "assignedToExternalMDM"

class MicrosoftGraphVppTokenSyncStatus(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    NONE = "none"
    IN_PROGRESS = "inProgress"
    COMPLETED = "completed"
    FAILED = "failed"

class MicrosoftGraphWindowsInformationProtectionEnforcementLevel(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    NO_PROTECTION = "noProtection"
    ENCRYPT_AND_AUDIT_ONLY = "encryptAndAuditOnly"
    ENCRYPT_AUDIT_AND_PROMPT = "encryptAuditAndPrompt"
    ENCRYPT_AUDIT_AND_BLOCK = "encryptAuditAndBlock"

class MicrosoftGraphWindowsInformationProtectionPinCharacterRequirements(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    NOT_ALLOW = "notAllow"
    REQUIRE_AT_LEAST_ONE = "requireAtLeastOne"
    ALLOW = "allow"
