# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------


def cf_planner_v1_0_cl(cli_ctx, *_):
    from msgraph.cli.core.commands.client_factory import get_mgmt_service_client
    from azext_planner_v1_0.vendored_sdks.planner import Planner
    return get_mgmt_service_client(cli_ctx,
                                   Planner,
                                   subscription_bound=False,
                                   base_url_bound=False)


def cf_group(cli_ctx, *_):
    return cf_planner_v1_0_cl(cli_ctx).groups


def cf_groupsplanner(cli_ctx, *_):
    return cf_planner_v1_0_cl(cli_ctx).groupsplanner


def cf_groupsplannerplan(cli_ctx, *_):
    return cf_planner_v1_0_cl(cli_ctx).groupsplannerplans


def cf_groupsplannerplansbucket(cli_ctx, *_):
    return cf_planner_v1_0_cl(cli_ctx).groupsplannerplansbuckets


def cf_groupsplannerplansbucketstask(cli_ctx, *_):
    return cf_planner_v1_0_cl(cli_ctx).groupsplannerplansbucketstasks


def cf_groupsplannerplanstask(cli_ctx, *_):
    return cf_planner_v1_0_cl(cli_ctx).groupsplannerplanstasks


def cf_planner(cli_ctx, *_):
    return cf_planner_v1_0_cl(cli_ctx).plannerplanner


def cf_planner(cli_ctx, *_):
    return cf_planner_v1_0_cl(cli_ctx).planner


def cf_plannerbucket(cli_ctx, *_):
    return cf_planner_v1_0_cl(cli_ctx).plannerbuckets


def cf_plannerbucketstask(cli_ctx, *_):
    return cf_planner_v1_0_cl(cli_ctx).plannerbucketstasks


def cf_plannerplan(cli_ctx, *_):
    return cf_planner_v1_0_cl(cli_ctx).plannerplans


def cf_plannerplansbucket(cli_ctx, *_):
    return cf_planner_v1_0_cl(cli_ctx).plannerplansbuckets


def cf_plannerplansbucketstask(cli_ctx, *_):
    return cf_planner_v1_0_cl(cli_ctx).plannerplansbucketstasks


def cf_plannerplanstask(cli_ctx, *_):
    return cf_planner_v1_0_cl(cli_ctx).plannerplanstasks


def cf_plannertask(cli_ctx, *_):
    return cf_planner_v1_0_cl(cli_ctx).plannertasks


def cf_user(cli_ctx, *_):
    return cf_planner_v1_0_cl(cli_ctx).users


def cf_usersplanner(cli_ctx, *_):
    return cf_planner_v1_0_cl(cli_ctx).usersplanner


def cf_usersplannerplan(cli_ctx, *_):
    return cf_planner_v1_0_cl(cli_ctx).usersplannerplans


def cf_usersplannerplansbucket(cli_ctx, *_):
    return cf_planner_v1_0_cl(cli_ctx).usersplannerplansbuckets


def cf_usersplannerplansbucketstask(cli_ctx, *_):
    return cf_planner_v1_0_cl(cli_ctx).usersplannerplansbucketstasks


def cf_usersplannerplanstask(cli_ctx, *_):
    return cf_planner_v1_0_cl(cli_ctx).usersplannerplanstasks


def cf_usersplannertask(cli_ctx, *_):
    return cf_planner_v1_0_cl(cli_ctx).usersplannertasks
