# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
import datetime
from typing import Any, AsyncIterable, Callable, Dict, Generic, List, Optional, TypeVar, Union
import warnings

from azure.core.async_paging import AsyncItemPaged, AsyncList
from azure.core.exceptions import HttpResponseError, ResourceExistsError, ResourceNotFoundError, map_error
from azure.core.pipeline import PipelineResponse
from azure.core.pipeline.transport import AsyncHttpResponse, HttpRequest
from azure.mgmt.core.exceptions import ARMErrorFormat

from ... import models

T = TypeVar('T')
ClsType = Optional[Callable[[PipelineResponse[HttpRequest, AsyncHttpResponse], T, Dict[str, Any]], Any]]

class UserOperations:
    """UserOperations async operations.

    You should not instantiate this class directly. Instead, you should create a Client instance that
    instantiates it for you and attaches it as an attribute.

    :ivar models: Alias to model classes used in this operation group.
    :type models: ~files.models
    :param client: Client for service requests.
    :param config: Configuration of service client.
    :param serializer: An object model serializer.
    :param deserializer: An object model deserializer.
    """

    models = models

    def __init__(self, client, config, serializer, deserializer) -> None:
        self._client = client
        self._serialize = serializer
        self._deserialize = deserializer
        self._config = config

    async def get_drive(
        self,
        user_id: str,
        select: Optional[List[Union[str, "models.Enum180"]]] = None,
        expand: Optional[List[Union[str, "models.Enum181"]]] = None,
        **kwargs
    ) -> "models.MicrosoftGraphDrive":
        """Get drive from users.

        Get drive from users.

        :param user_id: key: id of user.
        :type user_id: str
        :param select: Select properties to be returned.
        :type select: list[str or ~files.models.Enum180]
        :param expand: Expand related entities.
        :type expand: list[str or ~files.models.Enum181]
        :keyword callable cls: A custom type or function that will be passed the direct response
        :return: MicrosoftGraphDrive, or the result of cls(response)
        :rtype: ~files.models.MicrosoftGraphDrive
        :raises: ~azure.core.exceptions.HttpResponseError
        """
        cls = kwargs.pop('cls', None)  # type: ClsType["models.MicrosoftGraphDrive"]
        error_map = {404: ResourceNotFoundError, 409: ResourceExistsError}
        error_map.update(kwargs.pop('error_map', {}))
        accept = "application/json"

        # Construct URL
        url = self.get_drive.metadata['url']  # type: ignore
        path_format_arguments = {
            'user-id': self._serialize.url("user_id", user_id, 'str'),
        }
        url = self._client.format_url(url, **path_format_arguments)

        # Construct parameters
        query_parameters = {}  # type: Dict[str, Any]
        if select is not None:
            query_parameters['$select'] = self._serialize.query("select", select, '[str]', div=',')
        if expand is not None:
            query_parameters['$expand'] = self._serialize.query("expand", expand, '[str]', div=',')

        # Construct headers
        header_parameters = {}  # type: Dict[str, Any]
        header_parameters['Accept'] = self._serialize.header("accept", accept, 'str')
        header_parameters['Accept'] = 'application/json'

        request = self._client.get(url, query_parameters, header_parameters)
        pipeline_response = await self._client._pipeline.run(request, stream=False, **kwargs)
        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            error = self._deserialize(models.OdataError, response)
            raise HttpResponseError(response=response, model=error, error_format=ARMErrorFormat)

        deserialized = self._deserialize('MicrosoftGraphDrive', pipeline_response)

        if cls:
            return cls(pipeline_response, deserialized, {})

        return deserialized
    get_drive.metadata = {'url': '/users/{user-id}/drive'}  # type: ignore

    async def update_drive(
        self,
        user_id: str,
        id: Optional[str] = None,
        created_date_time: Optional[datetime.datetime] = None,
        description: Optional[str] = None,
        e_tag: Optional[str] = None,
        last_modified_date_time: Optional[datetime.datetime] = None,
        name: Optional[str] = None,
        web_url: Optional[str] = None,
        created_by_user: Optional["models.MicrosoftGraphUser"] = None,
        last_modified_by_user: Optional["models.MicrosoftGraphUser"] = None,
        drive_id: Optional[str] = None,
        drive_type: Optional[str] = None,
        microsoft_graph_item_reference_id: Optional[str] = None,
        microsoft_graph_item_reference_name: Optional[str] = None,
        path: Optional[str] = None,
        share_id: Optional[str] = None,
        sharepoint_ids: Optional["models.MicrosoftGraphSharepointIds"] = None,
        site_id: Optional[str] = None,
        display_name: Optional[str] = None,
        microsoft_graph_identity_id: Optional[str] = None,
        microsoft_graph_identity_display_name: Optional[str] = None,
        id1: Optional[str] = None,
        display_name1: Optional[str] = None,
        id2: Optional[str] = None,
        display_name2: Optional[str] = None,
        id3: Optional[str] = None,
        display_name3: Optional[str] = None,
        id4: Optional[str] = None,
        display_name4: Optional[str] = None,
        id5: Optional[str] = None,
        microsoft_graph_drive_type: Optional[str] = None,
        share_point_ids: Optional["models.MicrosoftGraphSharepointIds"] = None,
        system: Optional[Dict[str, object]] = None,
        following: Optional[List["models.MicrosoftGraphDriveItem"]] = None,
        items: Optional[List["models.MicrosoftGraphDriveItem"]] = None,
        root: Optional["models.MicrosoftGraphDriveItem"] = None,
        special: Optional[List["models.MicrosoftGraphDriveItem"]] = None,
        microsoft_graph_entity_id: Optional[str] = None,
        microsoft_graph_base_item_created_date_time_created_date_time: Optional[datetime.datetime] = None,
        microsoft_graph_base_item_description: Optional[str] = None,
        microsoft_graph_base_item_e_tag: Optional[str] = None,
        microsoft_graph_base_item_last_modified_date_time_last_modified_date_time: Optional[datetime.datetime] = None,
        microsoft_graph_base_item_name: Optional[str] = None,
        microsoft_graph_base_item_web_url: Optional[str] = None,
        microsoft_graph_user_created_by_user: Optional["models.MicrosoftGraphUser"] = None,
        microsoft_graph_user_last_modified_by_user: Optional["models.MicrosoftGraphUser"] = None,
        microsoft_graph_item_reference_drive_id: Optional[str] = None,
        microsoft_graph_item_reference_drive_type: Optional[str] = None,
        id6: Optional[str] = None,
        name1: Optional[str] = None,
        microsoft_graph_item_reference_path: Optional[str] = None,
        microsoft_graph_item_reference_share_id: Optional[str] = None,
        microsoft_graph_sharepoint_ids: Optional["models.MicrosoftGraphSharepointIds"] = None,
        microsoft_graph_item_reference_site_id: Optional[str] = None,
        display_name5: Optional[str] = None,
        id7: Optional[str] = None,
        display_name6: Optional[str] = None,
        id8: Optional[str] = None,
        display_name7: Optional[str] = None,
        id9: Optional[str] = None,
        display_name8: Optional[str] = None,
        id10: Optional[str] = None,
        display_name9: Optional[str] = None,
        id11: Optional[str] = None,
        display_name10: Optional[str] = None,
        id12: Optional[str] = None,
        microsoft_graph_list_display_name: Optional[str] = None,
        list: Optional["models.MicrosoftGraphListInfo"] = None,
        sharepoint_ids1: Optional["models.MicrosoftGraphSharepointIds"] = None,
        microsoft_graph_system_facet_system: Optional[Dict[str, object]] = None,
        columns: Optional[List["models.MicrosoftGraphColumnDefinition"]] = None,
        content_types: Optional[List["models.MicrosoftGraphContentType"]] = None,
        drive: Optional["models.MicrosoftGraphDrive"] = None,
        microsoft_graph_list_items: Optional[List["models.MicrosoftGraphListItem"]] = None,
        subscriptions: Optional[List["models.MicrosoftGraphSubscription"]] = None,
        deleted: Optional[int] = None,
        remaining: Optional[int] = None,
        state: Optional[str] = None,
        storage_plan_information: Optional["models.MicrosoftGraphStoragePlanInformation"] = None,
        total: Optional[int] = None,
        used: Optional[int] = None,
        display_name11: Optional[str] = None,
        id13: Optional[str] = None,
        display_name12: Optional[str] = None,
        id14: Optional[str] = None,
        display_name13: Optional[str] = None,
        id15: Optional[str] = None,
        **kwargs
    ) -> None:
        """Update the navigation property drive in users.

        Update the navigation property drive in users.

        :param user_id: key: id of user.
        :type user_id: str
        :param id: Read-only.
        :type id: str
        :param created_date_time: Date and time of item creation. Read-only.
        :type created_date_time: ~datetime.datetime
        :param description: Provides a user-visible description of the item. Optional.
        :type description: str
        :param e_tag: ETag for the item. Read-only.
        :type e_tag: str
        :param last_modified_date_time: Date and time the item was last modified. Read-only.
        :type last_modified_date_time: ~datetime.datetime
        :param name: The name of the item. Read-write.
        :type name: str
        :param web_url: URL that displays the resource in the browser. Read-only.
        :type web_url: str
        :param created_by_user: Represents an Azure Active Directory user object.
        :type created_by_user: ~files.models.MicrosoftGraphUser
        :param last_modified_by_user: Represents an Azure Active Directory user object.
        :type last_modified_by_user: ~files.models.MicrosoftGraphUser
        :param drive_id: Unique identifier of the drive instance that contains the item. Read-only.
        :type drive_id: str
        :param drive_type: Identifies the type of drive. See [drive][] resource for values.
        :type drive_type: str
        :param microsoft_graph_item_reference_id: Unique identifier of the item in the drive. Read-
         only.
        :type microsoft_graph_item_reference_id: str
        :param microsoft_graph_item_reference_name: The name of the item being referenced. Read-only.
        :type microsoft_graph_item_reference_name: str
        :param path: Path that can be used to navigate to the item. Read-only.
        :type path: str
        :param share_id: A unique identifier for a shared resource that can be accessed via the
         [Shares][] API.
        :type share_id: str
        :param sharepoint_ids: sharepointIds.
        :type sharepoint_ids: ~files.models.MicrosoftGraphSharepointIds
        :param site_id:
        :type site_id: str
        :param display_name: The identity's display name. Note that this may not always be available or
         up to date. For example, if a user changes their display name, the API may show the new value
         in a future response, but the items associated with the user won't show up as having changed
         when using delta.
        :type display_name: str
        :param microsoft_graph_identity_id: Unique identifier for the identity.
        :type microsoft_graph_identity_id: str
        :param microsoft_graph_identity_display_name: The identity's display name. Note that this may
         not always be available or up to date. For example, if a user changes their display name, the
         API may show the new value in a future response, but the items associated with the user won't
         show up as having changed when using delta.
        :type microsoft_graph_identity_display_name: str
        :param id1: Unique identifier for the identity.
        :type id1: str
        :param display_name1: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name1: str
        :param id2: Unique identifier for the identity.
        :type id2: str
        :param display_name2: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name2: str
        :param id3: Unique identifier for the identity.
        :type id3: str
        :param display_name3: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name3: str
        :param id4: Unique identifier for the identity.
        :type id4: str
        :param display_name4: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name4: str
        :param id5: Unique identifier for the identity.
        :type id5: str
        :param microsoft_graph_drive_type: Describes the type of drive represented by this resource.
         OneDrive personal drives will return personal. OneDrive for Business will return business.
         SharePoint document libraries will return documentLibrary. Read-only.
        :type microsoft_graph_drive_type: str
        :param share_point_ids: sharepointIds.
        :type share_point_ids: ~files.models.MicrosoftGraphSharepointIds
        :param system: systemFacet.
        :type system: dict[str, object]
        :param following: The list of items the user is following. Only in OneDrive for Business.
        :type following: list[~files.models.MicrosoftGraphDriveItem]
        :param items: All items contained in the drive. Read-only. Nullable.
        :type items: list[~files.models.MicrosoftGraphDriveItem]
        :param root: driveItem.
        :type root: ~files.models.MicrosoftGraphDriveItem
        :param special: Collection of common folders available in OneDrive. Read-only. Nullable.
        :type special: list[~files.models.MicrosoftGraphDriveItem]
        :param microsoft_graph_entity_id: Read-only.
        :type microsoft_graph_entity_id: str
        :param microsoft_graph_base_item_created_date_time_created_date_time: Date and time of item
         creation. Read-only.
        :type microsoft_graph_base_item_created_date_time_created_date_time: ~datetime.datetime
        :param microsoft_graph_base_item_description: Provides a user-visible description of the item.
         Optional.
        :type microsoft_graph_base_item_description: str
        :param microsoft_graph_base_item_e_tag: ETag for the item. Read-only.
        :type microsoft_graph_base_item_e_tag: str
        :param microsoft_graph_base_item_last_modified_date_time_last_modified_date_time: Date and time
         the item was last modified. Read-only.
        :type microsoft_graph_base_item_last_modified_date_time_last_modified_date_time: ~datetime.datetime
        :param microsoft_graph_base_item_name: The name of the item. Read-write.
        :type microsoft_graph_base_item_name: str
        :param microsoft_graph_base_item_web_url: URL that displays the resource in the browser. Read-
         only.
        :type microsoft_graph_base_item_web_url: str
        :param microsoft_graph_user_created_by_user: Represents an Azure Active Directory user object.
        :type microsoft_graph_user_created_by_user: ~files.models.MicrosoftGraphUser
        :param microsoft_graph_user_last_modified_by_user: Represents an Azure Active Directory user
         object.
        :type microsoft_graph_user_last_modified_by_user: ~files.models.MicrosoftGraphUser
        :param microsoft_graph_item_reference_drive_id: Unique identifier of the drive instance that
         contains the item. Read-only.
        :type microsoft_graph_item_reference_drive_id: str
        :param microsoft_graph_item_reference_drive_type: Identifies the type of drive. See [drive][]
         resource for values.
        :type microsoft_graph_item_reference_drive_type: str
        :param id6: Unique identifier of the item in the drive. Read-only.
        :type id6: str
        :param name1: The name of the item being referenced. Read-only.
        :type name1: str
        :param microsoft_graph_item_reference_path: Path that can be used to navigate to the item.
         Read-only.
        :type microsoft_graph_item_reference_path: str
        :param microsoft_graph_item_reference_share_id: A unique identifier for a shared resource that
         can be accessed via the [Shares][] API.
        :type microsoft_graph_item_reference_share_id: str
        :param microsoft_graph_sharepoint_ids: sharepointIds.
        :type microsoft_graph_sharepoint_ids: ~files.models.MicrosoftGraphSharepointIds
        :param microsoft_graph_item_reference_site_id:
        :type microsoft_graph_item_reference_site_id: str
        :param display_name5: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name5: str
        :param id7: Unique identifier for the identity.
        :type id7: str
        :param display_name6: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name6: str
        :param id8: Unique identifier for the identity.
        :type id8: str
        :param display_name7: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name7: str
        :param id9: Unique identifier for the identity.
        :type id9: str
        :param display_name8: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name8: str
        :param id10: Unique identifier for the identity.
        :type id10: str
        :param display_name9: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name9: str
        :param id11: Unique identifier for the identity.
        :type id11: str
        :param display_name10: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name10: str
        :param id12: Unique identifier for the identity.
        :type id12: str
        :param microsoft_graph_list_display_name: The displayable title of the list.
        :type microsoft_graph_list_display_name: str
        :param list: listInfo.
        :type list: ~files.models.MicrosoftGraphListInfo
        :param sharepoint_ids1: sharepointIds.
        :type sharepoint_ids1: ~files.models.MicrosoftGraphSharepointIds
        :param microsoft_graph_system_facet_system: systemFacet.
        :type microsoft_graph_system_facet_system: dict[str, object]
        :param columns: The collection of field definitions for this list.
        :type columns: list[~files.models.MicrosoftGraphColumnDefinition]
        :param content_types: The collection of content types present in this list.
        :type content_types: list[~files.models.MicrosoftGraphContentType]
        :param drive: drive.
        :type drive: ~files.models.MicrosoftGraphDrive
        :param microsoft_graph_list_items: All items contained in the list.
        :type microsoft_graph_list_items: list[~files.models.MicrosoftGraphListItem]
        :param subscriptions: The set of subscriptions on the list.
        :type subscriptions: list[~files.models.MicrosoftGraphSubscription]
        :param deleted: Total space consumed by files in the recycle bin, in bytes. Read-only.
        :type deleted: long
        :param remaining: Total space remaining before reaching the quota limit, in bytes. Read-only.
        :type remaining: long
        :param state: Enumeration value that indicates the state of the storage space. Read-only.
        :type state: str
        :param storage_plan_information: storagePlanInformation.
        :type storage_plan_information: ~files.models.MicrosoftGraphStoragePlanInformation
        :param total: Total allowed storage space, in bytes. Read-only.
        :type total: long
        :param used: Total space used, in bytes. Read-only.
        :type used: long
        :param display_name11: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name11: str
        :param id13: Unique identifier for the identity.
        :type id13: str
        :param display_name12: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name12: str
        :param id14: Unique identifier for the identity.
        :type id14: str
        :param display_name13: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name13: str
        :param id15: Unique identifier for the identity.
        :type id15: str
        :keyword callable cls: A custom type or function that will be passed the direct response
        :return: None, or the result of cls(response)
        :rtype: None
        :raises: ~azure.core.exceptions.HttpResponseError
        """
        cls = kwargs.pop('cls', None)  # type: ClsType[None]
        error_map = {404: ResourceNotFoundError, 409: ResourceExistsError}
        error_map.update(kwargs.pop('error_map', {}))

        _body = models.MicrosoftGraphDrive(id=id, created_date_time=created_date_time, description=description, e_tag=e_tag, last_modified_date_time=last_modified_date_time, name=name, web_url=web_url, created_by_user=created_by_user, last_modified_by_user=last_modified_by_user, drive_id=drive_id, drive_type=drive_type, id_parent_reference_id=microsoft_graph_item_reference_id, name_parent_reference_name=microsoft_graph_item_reference_name, path=path, share_id=share_id, sharepoint_ids=sharepoint_ids, site_id=site_id, display_name_last_modified_by_user_display_name=display_name, id_last_modified_by_user_id=microsoft_graph_identity_id, display_name_last_modified_by_device_display_name=microsoft_graph_identity_display_name, id_last_modified_by_device_id=id1, display_name_last_modified_by_application_display_name=display_name1, id_last_modified_by_application_id=id2, display_name_created_by_user_display_name=display_name2, id_created_by_user_id=id3, display_name_created_by_device_display_name=display_name3, id_created_by_device_id=id4, display_name_created_by_application_display_name=display_name4, id_created_by_application_id=id5, drive_type=microsoft_graph_drive_type, share_point_ids=share_point_ids, system=system, following=following, items=items, root=root, special=special, id_list_id=microsoft_graph_entity_id, created_date_time_list_created_date_time=microsoft_graph_base_item_created_date_time_created_date_time, description_list_description=microsoft_graph_base_item_description, e_tag_list_e_tag=microsoft_graph_base_item_e_tag, last_modified_date_time_list_last_modified_date_time=microsoft_graph_base_item_last_modified_date_time_last_modified_date_time, name_list_name=microsoft_graph_base_item_name, web_url_list_web_url=microsoft_graph_base_item_web_url, created_by_user_list_created_by_user=microsoft_graph_user_created_by_user, last_modified_by_user_list_last_modified_by_user=microsoft_graph_user_last_modified_by_user, drive_id_list_parent_reference_drive_id=microsoft_graph_item_reference_drive_id, drive_type_list_parent_reference_drive_type=microsoft_graph_item_reference_drive_type, id_list_parent_reference_id=id6, name_list_parent_reference_name=name1, path_list_parent_reference_path=microsoft_graph_item_reference_path, share_id_list_parent_reference_share_id=microsoft_graph_item_reference_share_id, sharepoint_ids_list_parent_reference_sharepoint_ids=microsoft_graph_sharepoint_ids, site_id_list_parent_reference_site_id=microsoft_graph_item_reference_site_id, display_name_list_last_modified_by_user_display_name=display_name5, id_list_last_modified_by_user_id=id7, display_name_list_last_modified_by_device_display_name=display_name6, id_list_last_modified_by_device_id=id8, display_name_list_last_modified_by_application_display_name=display_name7, id_list_last_modified_by_application_id=id9, display_name_list_created_by_user_display_name=display_name8, id_list_created_by_user_id=id10, display_name_list_created_by_device_display_name=display_name9, id_list_created_by_device_id=id11, display_name_list_created_by_application_display_name=display_name10, id_list_created_by_application_id=id12, display_name_list_display_name=microsoft_graph_list_display_name, list=list, sharepoint_ids_list_sharepoint_ids=sharepoint_ids1, system_list_system=microsoft_graph_system_facet_system, columns=columns, content_types=content_types, drive=drive, items_list_items=microsoft_graph_list_items, subscriptions=subscriptions, deleted=deleted, remaining=remaining, state=state, storage_plan_information=storage_plan_information, total=total, used=used, display_name_owner_user_display_name=display_name11, id_owner_user_id=id13, display_name_owner_device_display_name=display_name12, id_owner_device_id=id14, display_name_owner_application_display_name=display_name13, id_owner_application_id=id15)
        content_type = kwargs.pop("content_type", "application/json")
        accept = "application/json"

        # Construct URL
        url = self.update_drive.metadata['url']  # type: ignore
        path_format_arguments = {
            'user-id': self._serialize.url("user_id", user_id, 'str'),
        }
        url = self._client.format_url(url, **path_format_arguments)

        # Construct parameters
        query_parameters = {}  # type: Dict[str, Any]

        # Construct headers
        header_parameters = {}  # type: Dict[str, Any]
        header_parameters['Content-Type'] = self._serialize.header("content_type", content_type, 'str')
        header_parameters['Accept'] = self._serialize.header("accept", accept, 'str')

        body_content_kwargs = {}  # type: Dict[str, Any]
        body_content = self._serialize.body(_body, 'MicrosoftGraphDrive')
        body_content_kwargs['content'] = body_content
        request = self._client.patch(url, query_parameters, header_parameters, **body_content_kwargs)

        pipeline_response = await self._client._pipeline.run(request, stream=False, **kwargs)
        response = pipeline_response.http_response

        if response.status_code not in [204]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            error = self._deserialize(models.OdataError, response)
            raise HttpResponseError(response=response, model=error, error_format=ARMErrorFormat)

        if cls:
            return cls(pipeline_response, None, {})

    update_drive.metadata = {'url': '/users/{user-id}/drive'}  # type: ignore

    async def delete_drive(
        self,
        user_id: str,
        if_match: Optional[str] = None,
        **kwargs
    ) -> None:
        """Delete navigation property drive for users.

        Delete navigation property drive for users.

        :param user_id: key: id of user.
        :type user_id: str
        :param if_match: ETag.
        :type if_match: str
        :keyword callable cls: A custom type or function that will be passed the direct response
        :return: None, or the result of cls(response)
        :rtype: None
        :raises: ~azure.core.exceptions.HttpResponseError
        """
        cls = kwargs.pop('cls', None)  # type: ClsType[None]
        error_map = {404: ResourceNotFoundError, 409: ResourceExistsError}
        error_map.update(kwargs.pop('error_map', {}))
        accept = "application/json"

        # Construct URL
        url = self.delete_drive.metadata['url']  # type: ignore
        path_format_arguments = {
            'user-id': self._serialize.url("user_id", user_id, 'str'),
        }
        url = self._client.format_url(url, **path_format_arguments)

        # Construct parameters
        query_parameters = {}  # type: Dict[str, Any]

        # Construct headers
        header_parameters = {}  # type: Dict[str, Any]
        if if_match is not None:
            header_parameters['If-Match'] = self._serialize.header("if_match", if_match, 'str')
        header_parameters['Accept'] = self._serialize.header("accept", accept, 'str')

        request = self._client.delete(url, query_parameters, header_parameters)
        pipeline_response = await self._client._pipeline.run(request, stream=False, **kwargs)
        response = pipeline_response.http_response

        if response.status_code not in [204]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            error = self._deserialize(models.OdataError, response)
            raise HttpResponseError(response=response, model=error, error_format=ARMErrorFormat)

        if cls:
            return cls(pipeline_response, None, {})

    delete_drive.metadata = {'url': '/users/{user-id}/drive'}  # type: ignore

    def list_drive(
        self,
        user_id: str,
        orderby: Optional[List[Union[str, "models.Enum182"]]] = None,
        select: Optional[List[Union[str, "models.Enum183"]]] = None,
        expand: Optional[List[Union[str, "models.Enum184"]]] = None,
        **kwargs
    ) -> AsyncIterable["models.CollectionOfDrive1"]:
        """Get drives from users.

        Get drives from users.

        :param user_id: key: id of user.
        :type user_id: str
        :param orderby: Order items by property values.
        :type orderby: list[str or ~files.models.Enum182]
        :param select: Select properties to be returned.
        :type select: list[str or ~files.models.Enum183]
        :param expand: Expand related entities.
        :type expand: list[str or ~files.models.Enum184]
        :keyword callable cls: A custom type or function that will be passed the direct response
        :return: An iterator like instance of either CollectionOfDrive1 or the result of cls(response)
        :rtype: ~azure.core.async_paging.AsyncItemPaged[~files.models.CollectionOfDrive1]
        :raises: ~azure.core.exceptions.HttpResponseError
        """
        cls = kwargs.pop('cls', None)  # type: ClsType["models.CollectionOfDrive1"]
        error_map = {404: ResourceNotFoundError, 409: ResourceExistsError}
        error_map.update(kwargs.pop('error_map', {}))
        accept = "application/json"

        def prepare_request(next_link=None):
            # Construct headers
            header_parameters = {}  # type: Dict[str, Any]
            header_parameters['Accept'] = self._serialize.header("accept", accept, 'str')
            header_parameters['Accept'] = 'application/json'

            if not next_link:
                # Construct URL
                url = self.list_drive.metadata['url']  # type: ignore
                path_format_arguments = {
                    'user-id': self._serialize.url("user_id", user_id, 'str'),
                }
                url = self._client.format_url(url, **path_format_arguments)
                # Construct parameters
                query_parameters = {}  # type: Dict[str, Any]
                if self._config.top is not None:
                    query_parameters['$top'] = self._serialize.query("self._config.top", self._config.top, 'int', minimum=0)
                if self._config.skip is not None:
                    query_parameters['$skip'] = self._serialize.query("self._config.skip", self._config.skip, 'int', minimum=0)
                if self._config.search is not None:
                    query_parameters['$search'] = self._serialize.query("self._config.search", self._config.search, 'str')
                if self._config.filter is not None:
                    query_parameters['$filter'] = self._serialize.query("self._config.filter", self._config.filter, 'str')
                if self._config.count is not None:
                    query_parameters['$count'] = self._serialize.query("self._config.count", self._config.count, 'bool')
                if orderby is not None:
                    query_parameters['$orderby'] = self._serialize.query("orderby", orderby, '[str]', div=',')
                if select is not None:
                    query_parameters['$select'] = self._serialize.query("select", select, '[str]', div=',')
                if expand is not None:
                    query_parameters['$expand'] = self._serialize.query("expand", expand, '[str]', div=',')

                request = self._client.get(url, query_parameters, header_parameters)
            else:
                url = next_link
                query_parameters = {}  # type: Dict[str, Any]
                request = self._client.get(url, query_parameters, header_parameters)
            return request

        async def extract_data(pipeline_response):
            deserialized = self._deserialize('CollectionOfDrive1', pipeline_response)
            list_of_elem = deserialized.value
            if cls:
                list_of_elem = cls(list_of_elem)
            return deserialized.odata_next_link or None, AsyncList(list_of_elem)

        async def get_next(next_link=None):
            request = prepare_request(next_link)

            pipeline_response = await self._client._pipeline.run(request, stream=False, **kwargs)
            response = pipeline_response.http_response

            if response.status_code not in [200]:
                error = self._deserialize(models.OdataError, response)
                map_error(status_code=response.status_code, response=response, error_map=error_map)
                raise HttpResponseError(response=response, model=error, error_format=ARMErrorFormat)

            return pipeline_response

        return AsyncItemPaged(
            get_next, extract_data
        )
    list_drive.metadata = {'url': '/users/{user-id}/drives'}  # type: ignore

    async def create_drive(
        self,
        user_id: str,
        id: Optional[str] = None,
        created_date_time: Optional[datetime.datetime] = None,
        description: Optional[str] = None,
        e_tag: Optional[str] = None,
        last_modified_date_time: Optional[datetime.datetime] = None,
        name: Optional[str] = None,
        web_url: Optional[str] = None,
        created_by_user: Optional["models.MicrosoftGraphUser"] = None,
        last_modified_by_user: Optional["models.MicrosoftGraphUser"] = None,
        drive_id: Optional[str] = None,
        drive_type: Optional[str] = None,
        microsoft_graph_item_reference_id: Optional[str] = None,
        microsoft_graph_item_reference_name: Optional[str] = None,
        path: Optional[str] = None,
        share_id: Optional[str] = None,
        sharepoint_ids: Optional["models.MicrosoftGraphSharepointIds"] = None,
        site_id: Optional[str] = None,
        display_name: Optional[str] = None,
        microsoft_graph_identity_id: Optional[str] = None,
        microsoft_graph_identity_display_name: Optional[str] = None,
        id1: Optional[str] = None,
        display_name1: Optional[str] = None,
        id2: Optional[str] = None,
        display_name2: Optional[str] = None,
        id3: Optional[str] = None,
        display_name3: Optional[str] = None,
        id4: Optional[str] = None,
        display_name4: Optional[str] = None,
        id5: Optional[str] = None,
        microsoft_graph_drive_type: Optional[str] = None,
        share_point_ids: Optional["models.MicrosoftGraphSharepointIds"] = None,
        system: Optional[Dict[str, object]] = None,
        following: Optional[List["models.MicrosoftGraphDriveItem"]] = None,
        items: Optional[List["models.MicrosoftGraphDriveItem"]] = None,
        root: Optional["models.MicrosoftGraphDriveItem"] = None,
        special: Optional[List["models.MicrosoftGraphDriveItem"]] = None,
        microsoft_graph_entity_id: Optional[str] = None,
        microsoft_graph_base_item_created_date_time_created_date_time: Optional[datetime.datetime] = None,
        microsoft_graph_base_item_description: Optional[str] = None,
        microsoft_graph_base_item_e_tag: Optional[str] = None,
        microsoft_graph_base_item_last_modified_date_time_last_modified_date_time: Optional[datetime.datetime] = None,
        microsoft_graph_base_item_name: Optional[str] = None,
        microsoft_graph_base_item_web_url: Optional[str] = None,
        microsoft_graph_user_created_by_user: Optional["models.MicrosoftGraphUser"] = None,
        microsoft_graph_user_last_modified_by_user: Optional["models.MicrosoftGraphUser"] = None,
        microsoft_graph_item_reference_drive_id: Optional[str] = None,
        microsoft_graph_item_reference_drive_type: Optional[str] = None,
        id6: Optional[str] = None,
        name1: Optional[str] = None,
        microsoft_graph_item_reference_path: Optional[str] = None,
        microsoft_graph_item_reference_share_id: Optional[str] = None,
        microsoft_graph_sharepoint_ids: Optional["models.MicrosoftGraphSharepointIds"] = None,
        microsoft_graph_item_reference_site_id: Optional[str] = None,
        display_name5: Optional[str] = None,
        id7: Optional[str] = None,
        display_name6: Optional[str] = None,
        id8: Optional[str] = None,
        display_name7: Optional[str] = None,
        id9: Optional[str] = None,
        display_name8: Optional[str] = None,
        id10: Optional[str] = None,
        display_name9: Optional[str] = None,
        id11: Optional[str] = None,
        display_name10: Optional[str] = None,
        id12: Optional[str] = None,
        microsoft_graph_list_display_name: Optional[str] = None,
        list: Optional["models.MicrosoftGraphListInfo"] = None,
        sharepoint_ids1: Optional["models.MicrosoftGraphSharepointIds"] = None,
        microsoft_graph_system_facet_system: Optional[Dict[str, object]] = None,
        columns: Optional[List["models.MicrosoftGraphColumnDefinition"]] = None,
        content_types: Optional[List["models.MicrosoftGraphContentType"]] = None,
        drive: Optional["models.MicrosoftGraphDrive"] = None,
        microsoft_graph_list_items: Optional[List["models.MicrosoftGraphListItem"]] = None,
        subscriptions: Optional[List["models.MicrosoftGraphSubscription"]] = None,
        deleted: Optional[int] = None,
        remaining: Optional[int] = None,
        state: Optional[str] = None,
        storage_plan_information: Optional["models.MicrosoftGraphStoragePlanInformation"] = None,
        total: Optional[int] = None,
        used: Optional[int] = None,
        display_name11: Optional[str] = None,
        id13: Optional[str] = None,
        display_name12: Optional[str] = None,
        id14: Optional[str] = None,
        display_name13: Optional[str] = None,
        id15: Optional[str] = None,
        **kwargs
    ) -> "models.MicrosoftGraphDrive":
        """Create new navigation property to drives for users.

        Create new navigation property to drives for users.

        :param user_id: key: id of user.
        :type user_id: str
        :param id: Read-only.
        :type id: str
        :param created_date_time: Date and time of item creation. Read-only.
        :type created_date_time: ~datetime.datetime
        :param description: Provides a user-visible description of the item. Optional.
        :type description: str
        :param e_tag: ETag for the item. Read-only.
        :type e_tag: str
        :param last_modified_date_time: Date and time the item was last modified. Read-only.
        :type last_modified_date_time: ~datetime.datetime
        :param name: The name of the item. Read-write.
        :type name: str
        :param web_url: URL that displays the resource in the browser. Read-only.
        :type web_url: str
        :param created_by_user: Represents an Azure Active Directory user object.
        :type created_by_user: ~files.models.MicrosoftGraphUser
        :param last_modified_by_user: Represents an Azure Active Directory user object.
        :type last_modified_by_user: ~files.models.MicrosoftGraphUser
        :param drive_id: Unique identifier of the drive instance that contains the item. Read-only.
        :type drive_id: str
        :param drive_type: Identifies the type of drive. See [drive][] resource for values.
        :type drive_type: str
        :param microsoft_graph_item_reference_id: Unique identifier of the item in the drive. Read-
         only.
        :type microsoft_graph_item_reference_id: str
        :param microsoft_graph_item_reference_name: The name of the item being referenced. Read-only.
        :type microsoft_graph_item_reference_name: str
        :param path: Path that can be used to navigate to the item. Read-only.
        :type path: str
        :param share_id: A unique identifier for a shared resource that can be accessed via the
         [Shares][] API.
        :type share_id: str
        :param sharepoint_ids: sharepointIds.
        :type sharepoint_ids: ~files.models.MicrosoftGraphSharepointIds
        :param site_id:
        :type site_id: str
        :param display_name: The identity's display name. Note that this may not always be available or
         up to date. For example, if a user changes their display name, the API may show the new value
         in a future response, but the items associated with the user won't show up as having changed
         when using delta.
        :type display_name: str
        :param microsoft_graph_identity_id: Unique identifier for the identity.
        :type microsoft_graph_identity_id: str
        :param microsoft_graph_identity_display_name: The identity's display name. Note that this may
         not always be available or up to date. For example, if a user changes their display name, the
         API may show the new value in a future response, but the items associated with the user won't
         show up as having changed when using delta.
        :type microsoft_graph_identity_display_name: str
        :param id1: Unique identifier for the identity.
        :type id1: str
        :param display_name1: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name1: str
        :param id2: Unique identifier for the identity.
        :type id2: str
        :param display_name2: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name2: str
        :param id3: Unique identifier for the identity.
        :type id3: str
        :param display_name3: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name3: str
        :param id4: Unique identifier for the identity.
        :type id4: str
        :param display_name4: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name4: str
        :param id5: Unique identifier for the identity.
        :type id5: str
        :param microsoft_graph_drive_type: Describes the type of drive represented by this resource.
         OneDrive personal drives will return personal. OneDrive for Business will return business.
         SharePoint document libraries will return documentLibrary. Read-only.
        :type microsoft_graph_drive_type: str
        :param share_point_ids: sharepointIds.
        :type share_point_ids: ~files.models.MicrosoftGraphSharepointIds
        :param system: systemFacet.
        :type system: dict[str, object]
        :param following: The list of items the user is following. Only in OneDrive for Business.
        :type following: list[~files.models.MicrosoftGraphDriveItem]
        :param items: All items contained in the drive. Read-only. Nullable.
        :type items: list[~files.models.MicrosoftGraphDriveItem]
        :param root: driveItem.
        :type root: ~files.models.MicrosoftGraphDriveItem
        :param special: Collection of common folders available in OneDrive. Read-only. Nullable.
        :type special: list[~files.models.MicrosoftGraphDriveItem]
        :param microsoft_graph_entity_id: Read-only.
        :type microsoft_graph_entity_id: str
        :param microsoft_graph_base_item_created_date_time_created_date_time: Date and time of item
         creation. Read-only.
        :type microsoft_graph_base_item_created_date_time_created_date_time: ~datetime.datetime
        :param microsoft_graph_base_item_description: Provides a user-visible description of the item.
         Optional.
        :type microsoft_graph_base_item_description: str
        :param microsoft_graph_base_item_e_tag: ETag for the item. Read-only.
        :type microsoft_graph_base_item_e_tag: str
        :param microsoft_graph_base_item_last_modified_date_time_last_modified_date_time: Date and time
         the item was last modified. Read-only.
        :type microsoft_graph_base_item_last_modified_date_time_last_modified_date_time: ~datetime.datetime
        :param microsoft_graph_base_item_name: The name of the item. Read-write.
        :type microsoft_graph_base_item_name: str
        :param microsoft_graph_base_item_web_url: URL that displays the resource in the browser. Read-
         only.
        :type microsoft_graph_base_item_web_url: str
        :param microsoft_graph_user_created_by_user: Represents an Azure Active Directory user object.
        :type microsoft_graph_user_created_by_user: ~files.models.MicrosoftGraphUser
        :param microsoft_graph_user_last_modified_by_user: Represents an Azure Active Directory user
         object.
        :type microsoft_graph_user_last_modified_by_user: ~files.models.MicrosoftGraphUser
        :param microsoft_graph_item_reference_drive_id: Unique identifier of the drive instance that
         contains the item. Read-only.
        :type microsoft_graph_item_reference_drive_id: str
        :param microsoft_graph_item_reference_drive_type: Identifies the type of drive. See [drive][]
         resource for values.
        :type microsoft_graph_item_reference_drive_type: str
        :param id6: Unique identifier of the item in the drive. Read-only.
        :type id6: str
        :param name1: The name of the item being referenced. Read-only.
        :type name1: str
        :param microsoft_graph_item_reference_path: Path that can be used to navigate to the item.
         Read-only.
        :type microsoft_graph_item_reference_path: str
        :param microsoft_graph_item_reference_share_id: A unique identifier for a shared resource that
         can be accessed via the [Shares][] API.
        :type microsoft_graph_item_reference_share_id: str
        :param microsoft_graph_sharepoint_ids: sharepointIds.
        :type microsoft_graph_sharepoint_ids: ~files.models.MicrosoftGraphSharepointIds
        :param microsoft_graph_item_reference_site_id:
        :type microsoft_graph_item_reference_site_id: str
        :param display_name5: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name5: str
        :param id7: Unique identifier for the identity.
        :type id7: str
        :param display_name6: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name6: str
        :param id8: Unique identifier for the identity.
        :type id8: str
        :param display_name7: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name7: str
        :param id9: Unique identifier for the identity.
        :type id9: str
        :param display_name8: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name8: str
        :param id10: Unique identifier for the identity.
        :type id10: str
        :param display_name9: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name9: str
        :param id11: Unique identifier for the identity.
        :type id11: str
        :param display_name10: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name10: str
        :param id12: Unique identifier for the identity.
        :type id12: str
        :param microsoft_graph_list_display_name: The displayable title of the list.
        :type microsoft_graph_list_display_name: str
        :param list: listInfo.
        :type list: ~files.models.MicrosoftGraphListInfo
        :param sharepoint_ids1: sharepointIds.
        :type sharepoint_ids1: ~files.models.MicrosoftGraphSharepointIds
        :param microsoft_graph_system_facet_system: systemFacet.
        :type microsoft_graph_system_facet_system: dict[str, object]
        :param columns: The collection of field definitions for this list.
        :type columns: list[~files.models.MicrosoftGraphColumnDefinition]
        :param content_types: The collection of content types present in this list.
        :type content_types: list[~files.models.MicrosoftGraphContentType]
        :param drive: drive.
        :type drive: ~files.models.MicrosoftGraphDrive
        :param microsoft_graph_list_items: All items contained in the list.
        :type microsoft_graph_list_items: list[~files.models.MicrosoftGraphListItem]
        :param subscriptions: The set of subscriptions on the list.
        :type subscriptions: list[~files.models.MicrosoftGraphSubscription]
        :param deleted: Total space consumed by files in the recycle bin, in bytes. Read-only.
        :type deleted: long
        :param remaining: Total space remaining before reaching the quota limit, in bytes. Read-only.
        :type remaining: long
        :param state: Enumeration value that indicates the state of the storage space. Read-only.
        :type state: str
        :param storage_plan_information: storagePlanInformation.
        :type storage_plan_information: ~files.models.MicrosoftGraphStoragePlanInformation
        :param total: Total allowed storage space, in bytes. Read-only.
        :type total: long
        :param used: Total space used, in bytes. Read-only.
        :type used: long
        :param display_name11: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name11: str
        :param id13: Unique identifier for the identity.
        :type id13: str
        :param display_name12: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name12: str
        :param id14: Unique identifier for the identity.
        :type id14: str
        :param display_name13: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name13: str
        :param id15: Unique identifier for the identity.
        :type id15: str
        :keyword callable cls: A custom type or function that will be passed the direct response
        :return: MicrosoftGraphDrive, or the result of cls(response)
        :rtype: ~files.models.MicrosoftGraphDrive
        :raises: ~azure.core.exceptions.HttpResponseError
        """
        cls = kwargs.pop('cls', None)  # type: ClsType["models.MicrosoftGraphDrive"]
        error_map = {404: ResourceNotFoundError, 409: ResourceExistsError}
        error_map.update(kwargs.pop('error_map', {}))

        _body = models.MicrosoftGraphDrive(id=id, created_date_time=created_date_time, description=description, e_tag=e_tag, last_modified_date_time=last_modified_date_time, name=name, web_url=web_url, created_by_user=created_by_user, last_modified_by_user=last_modified_by_user, drive_id=drive_id, drive_type=drive_type, id_parent_reference_id=microsoft_graph_item_reference_id, name_parent_reference_name=microsoft_graph_item_reference_name, path=path, share_id=share_id, sharepoint_ids=sharepoint_ids, site_id=site_id, display_name_last_modified_by_user_display_name=display_name, id_last_modified_by_user_id=microsoft_graph_identity_id, display_name_last_modified_by_device_display_name=microsoft_graph_identity_display_name, id_last_modified_by_device_id=id1, display_name_last_modified_by_application_display_name=display_name1, id_last_modified_by_application_id=id2, display_name_created_by_user_display_name=display_name2, id_created_by_user_id=id3, display_name_created_by_device_display_name=display_name3, id_created_by_device_id=id4, display_name_created_by_application_display_name=display_name4, id_created_by_application_id=id5, drive_type=microsoft_graph_drive_type, share_point_ids=share_point_ids, system=system, following=following, items=items, root=root, special=special, id_list_id=microsoft_graph_entity_id, created_date_time_list_created_date_time=microsoft_graph_base_item_created_date_time_created_date_time, description_list_description=microsoft_graph_base_item_description, e_tag_list_e_tag=microsoft_graph_base_item_e_tag, last_modified_date_time_list_last_modified_date_time=microsoft_graph_base_item_last_modified_date_time_last_modified_date_time, name_list_name=microsoft_graph_base_item_name, web_url_list_web_url=microsoft_graph_base_item_web_url, created_by_user_list_created_by_user=microsoft_graph_user_created_by_user, last_modified_by_user_list_last_modified_by_user=microsoft_graph_user_last_modified_by_user, drive_id_list_parent_reference_drive_id=microsoft_graph_item_reference_drive_id, drive_type_list_parent_reference_drive_type=microsoft_graph_item_reference_drive_type, id_list_parent_reference_id=id6, name_list_parent_reference_name=name1, path_list_parent_reference_path=microsoft_graph_item_reference_path, share_id_list_parent_reference_share_id=microsoft_graph_item_reference_share_id, sharepoint_ids_list_parent_reference_sharepoint_ids=microsoft_graph_sharepoint_ids, site_id_list_parent_reference_site_id=microsoft_graph_item_reference_site_id, display_name_list_last_modified_by_user_display_name=display_name5, id_list_last_modified_by_user_id=id7, display_name_list_last_modified_by_device_display_name=display_name6, id_list_last_modified_by_device_id=id8, display_name_list_last_modified_by_application_display_name=display_name7, id_list_last_modified_by_application_id=id9, display_name_list_created_by_user_display_name=display_name8, id_list_created_by_user_id=id10, display_name_list_created_by_device_display_name=display_name9, id_list_created_by_device_id=id11, display_name_list_created_by_application_display_name=display_name10, id_list_created_by_application_id=id12, display_name_list_display_name=microsoft_graph_list_display_name, list=list, sharepoint_ids_list_sharepoint_ids=sharepoint_ids1, system_list_system=microsoft_graph_system_facet_system, columns=columns, content_types=content_types, drive=drive, items_list_items=microsoft_graph_list_items, subscriptions=subscriptions, deleted=deleted, remaining=remaining, state=state, storage_plan_information=storage_plan_information, total=total, used=used, display_name_owner_user_display_name=display_name11, id_owner_user_id=id13, display_name_owner_device_display_name=display_name12, id_owner_device_id=id14, display_name_owner_application_display_name=display_name13, id_owner_application_id=id15)
        content_type = kwargs.pop("content_type", "application/json")
        accept = "application/json"

        # Construct URL
        url = self.create_drive.metadata['url']  # type: ignore
        path_format_arguments = {
            'user-id': self._serialize.url("user_id", user_id, 'str'),
        }
        url = self._client.format_url(url, **path_format_arguments)

        # Construct parameters
        query_parameters = {}  # type: Dict[str, Any]

        # Construct headers
        header_parameters = {}  # type: Dict[str, Any]
        header_parameters['Content-Type'] = self._serialize.header("content_type", content_type, 'str')
        header_parameters['Accept'] = self._serialize.header("accept", accept, 'str')
        header_parameters['Accept'] = 'application/json'

        body_content_kwargs = {}  # type: Dict[str, Any]
        body_content = self._serialize.body(_body, 'MicrosoftGraphDrive')
        body_content_kwargs['content'] = body_content
        request = self._client.post(url, query_parameters, header_parameters, **body_content_kwargs)

        pipeline_response = await self._client._pipeline.run(request, stream=False, **kwargs)
        response = pipeline_response.http_response

        if response.status_code not in [201]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            error = self._deserialize(models.OdataError, response)
            raise HttpResponseError(response=response, model=error, error_format=ARMErrorFormat)

        deserialized = self._deserialize('MicrosoftGraphDrive', pipeline_response)

        if cls:
            return cls(pipeline_response, deserialized, {})

        return deserialized
    create_drive.metadata = {'url': '/users/{user-id}/drives'}  # type: ignore

    async def get_drive(
        self,
        user_id: str,
        drive_id: str,
        select: Optional[List[Union[str, "models.Enum185"]]] = None,
        expand: Optional[List[Union[str, "models.Enum186"]]] = None,
        **kwargs
    ) -> "models.MicrosoftGraphDrive":
        """Get drives from users.

        Get drives from users.

        :param user_id: key: id of user.
        :type user_id: str
        :param drive_id: key: id of drive.
        :type drive_id: str
        :param select: Select properties to be returned.
        :type select: list[str or ~files.models.Enum185]
        :param expand: Expand related entities.
        :type expand: list[str or ~files.models.Enum186]
        :keyword callable cls: A custom type or function that will be passed the direct response
        :return: MicrosoftGraphDrive, or the result of cls(response)
        :rtype: ~files.models.MicrosoftGraphDrive
        :raises: ~azure.core.exceptions.HttpResponseError
        """
        cls = kwargs.pop('cls', None)  # type: ClsType["models.MicrosoftGraphDrive"]
        error_map = {404: ResourceNotFoundError, 409: ResourceExistsError}
        error_map.update(kwargs.pop('error_map', {}))
        accept = "application/json"

        # Construct URL
        url = self.get_drive.metadata['url']  # type: ignore
        path_format_arguments = {
            'user-id': self._serialize.url("user_id", user_id, 'str'),
            'drive-id': self._serialize.url("drive_id", drive_id, 'str'),
        }
        url = self._client.format_url(url, **path_format_arguments)

        # Construct parameters
        query_parameters = {}  # type: Dict[str, Any]
        if select is not None:
            query_parameters['$select'] = self._serialize.query("select", select, '[str]', div=',')
        if expand is not None:
            query_parameters['$expand'] = self._serialize.query("expand", expand, '[str]', div=',')

        # Construct headers
        header_parameters = {}  # type: Dict[str, Any]
        header_parameters['Accept'] = self._serialize.header("accept", accept, 'str')
        header_parameters['Accept'] = 'application/json'

        request = self._client.get(url, query_parameters, header_parameters)
        pipeline_response = await self._client._pipeline.run(request, stream=False, **kwargs)
        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            error = self._deserialize(models.OdataError, response)
            raise HttpResponseError(response=response, model=error, error_format=ARMErrorFormat)

        deserialized = self._deserialize('MicrosoftGraphDrive', pipeline_response)

        if cls:
            return cls(pipeline_response, deserialized, {})

        return deserialized
    get_drive.metadata = {'url': '/users/{user-id}/drives/{drive-id}'}  # type: ignore

    async def update_drive(
        self,
        user_id: str,
        drive_id: str,
        id: Optional[str] = None,
        created_date_time: Optional[datetime.datetime] = None,
        description: Optional[str] = None,
        e_tag: Optional[str] = None,
        last_modified_date_time: Optional[datetime.datetime] = None,
        name: Optional[str] = None,
        web_url: Optional[str] = None,
        created_by_user: Optional["models.MicrosoftGraphUser"] = None,
        last_modified_by_user: Optional["models.MicrosoftGraphUser"] = None,
        microsoft_graph_item_reference_drive_id: Optional[str] = None,
        drive_type: Optional[str] = None,
        microsoft_graph_item_reference_id: Optional[str] = None,
        microsoft_graph_item_reference_name: Optional[str] = None,
        path: Optional[str] = None,
        share_id: Optional[str] = None,
        sharepoint_ids: Optional["models.MicrosoftGraphSharepointIds"] = None,
        site_id: Optional[str] = None,
        display_name: Optional[str] = None,
        microsoft_graph_identity_id: Optional[str] = None,
        microsoft_graph_identity_display_name: Optional[str] = None,
        id1: Optional[str] = None,
        display_name1: Optional[str] = None,
        id2: Optional[str] = None,
        display_name2: Optional[str] = None,
        id3: Optional[str] = None,
        display_name3: Optional[str] = None,
        id4: Optional[str] = None,
        display_name4: Optional[str] = None,
        id5: Optional[str] = None,
        microsoft_graph_drive_type: Optional[str] = None,
        share_point_ids: Optional["models.MicrosoftGraphSharepointIds"] = None,
        system: Optional[Dict[str, object]] = None,
        following: Optional[List["models.MicrosoftGraphDriveItem"]] = None,
        items: Optional[List["models.MicrosoftGraphDriveItem"]] = None,
        root: Optional["models.MicrosoftGraphDriveItem"] = None,
        special: Optional[List["models.MicrosoftGraphDriveItem"]] = None,
        microsoft_graph_entity_id: Optional[str] = None,
        microsoft_graph_base_item_created_date_time_created_date_time: Optional[datetime.datetime] = None,
        microsoft_graph_base_item_description: Optional[str] = None,
        microsoft_graph_base_item_e_tag: Optional[str] = None,
        microsoft_graph_base_item_last_modified_date_time_last_modified_date_time: Optional[datetime.datetime] = None,
        microsoft_graph_base_item_name: Optional[str] = None,
        microsoft_graph_base_item_web_url: Optional[str] = None,
        microsoft_graph_user_created_by_user: Optional["models.MicrosoftGraphUser"] = None,
        microsoft_graph_user_last_modified_by_user: Optional["models.MicrosoftGraphUser"] = None,
        drive_id1: Optional[str] = None,
        microsoft_graph_item_reference_drive_type: Optional[str] = None,
        id6: Optional[str] = None,
        name1: Optional[str] = None,
        microsoft_graph_item_reference_path: Optional[str] = None,
        microsoft_graph_item_reference_share_id: Optional[str] = None,
        microsoft_graph_sharepoint_ids: Optional["models.MicrosoftGraphSharepointIds"] = None,
        microsoft_graph_item_reference_site_id: Optional[str] = None,
        display_name5: Optional[str] = None,
        id7: Optional[str] = None,
        display_name6: Optional[str] = None,
        id8: Optional[str] = None,
        display_name7: Optional[str] = None,
        id9: Optional[str] = None,
        display_name8: Optional[str] = None,
        id10: Optional[str] = None,
        display_name9: Optional[str] = None,
        id11: Optional[str] = None,
        display_name10: Optional[str] = None,
        id12: Optional[str] = None,
        microsoft_graph_list_display_name: Optional[str] = None,
        list: Optional["models.MicrosoftGraphListInfo"] = None,
        sharepoint_ids1: Optional["models.MicrosoftGraphSharepointIds"] = None,
        microsoft_graph_system_facet_system: Optional[Dict[str, object]] = None,
        columns: Optional[List["models.MicrosoftGraphColumnDefinition"]] = None,
        content_types: Optional[List["models.MicrosoftGraphContentType"]] = None,
        drive: Optional["models.MicrosoftGraphDrive"] = None,
        microsoft_graph_list_items: Optional[List["models.MicrosoftGraphListItem"]] = None,
        subscriptions: Optional[List["models.MicrosoftGraphSubscription"]] = None,
        deleted: Optional[int] = None,
        remaining: Optional[int] = None,
        state: Optional[str] = None,
        storage_plan_information: Optional["models.MicrosoftGraphStoragePlanInformation"] = None,
        total: Optional[int] = None,
        used: Optional[int] = None,
        display_name11: Optional[str] = None,
        id13: Optional[str] = None,
        display_name12: Optional[str] = None,
        id14: Optional[str] = None,
        display_name13: Optional[str] = None,
        id15: Optional[str] = None,
        **kwargs
    ) -> None:
        """Update the navigation property drives in users.

        Update the navigation property drives in users.

        :param user_id: key: id of user.
        :type user_id: str
        :param drive_id: key: id of drive.
        :type drive_id: str
        :param id: Read-only.
        :type id: str
        :param created_date_time: Date and time of item creation. Read-only.
        :type created_date_time: ~datetime.datetime
        :param description: Provides a user-visible description of the item. Optional.
        :type description: str
        :param e_tag: ETag for the item. Read-only.
        :type e_tag: str
        :param last_modified_date_time: Date and time the item was last modified. Read-only.
        :type last_modified_date_time: ~datetime.datetime
        :param name: The name of the item. Read-write.
        :type name: str
        :param web_url: URL that displays the resource in the browser. Read-only.
        :type web_url: str
        :param created_by_user: Represents an Azure Active Directory user object.
        :type created_by_user: ~files.models.MicrosoftGraphUser
        :param last_modified_by_user: Represents an Azure Active Directory user object.
        :type last_modified_by_user: ~files.models.MicrosoftGraphUser
        :param microsoft_graph_item_reference_drive_id: Unique identifier of the drive instance that
         contains the item. Read-only.
        :type microsoft_graph_item_reference_drive_id: str
        :param drive_type: Identifies the type of drive. See [drive][] resource for values.
        :type drive_type: str
        :param microsoft_graph_item_reference_id: Unique identifier of the item in the drive. Read-
         only.
        :type microsoft_graph_item_reference_id: str
        :param microsoft_graph_item_reference_name: The name of the item being referenced. Read-only.
        :type microsoft_graph_item_reference_name: str
        :param path: Path that can be used to navigate to the item. Read-only.
        :type path: str
        :param share_id: A unique identifier for a shared resource that can be accessed via the
         [Shares][] API.
        :type share_id: str
        :param sharepoint_ids: sharepointIds.
        :type sharepoint_ids: ~files.models.MicrosoftGraphSharepointIds
        :param site_id:
        :type site_id: str
        :param display_name: The identity's display name. Note that this may not always be available or
         up to date. For example, if a user changes their display name, the API may show the new value
         in a future response, but the items associated with the user won't show up as having changed
         when using delta.
        :type display_name: str
        :param microsoft_graph_identity_id: Unique identifier for the identity.
        :type microsoft_graph_identity_id: str
        :param microsoft_graph_identity_display_name: The identity's display name. Note that this may
         not always be available or up to date. For example, if a user changes their display name, the
         API may show the new value in a future response, but the items associated with the user won't
         show up as having changed when using delta.
        :type microsoft_graph_identity_display_name: str
        :param id1: Unique identifier for the identity.
        :type id1: str
        :param display_name1: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name1: str
        :param id2: Unique identifier for the identity.
        :type id2: str
        :param display_name2: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name2: str
        :param id3: Unique identifier for the identity.
        :type id3: str
        :param display_name3: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name3: str
        :param id4: Unique identifier for the identity.
        :type id4: str
        :param display_name4: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name4: str
        :param id5: Unique identifier for the identity.
        :type id5: str
        :param microsoft_graph_drive_type: Describes the type of drive represented by this resource.
         OneDrive personal drives will return personal. OneDrive for Business will return business.
         SharePoint document libraries will return documentLibrary. Read-only.
        :type microsoft_graph_drive_type: str
        :param share_point_ids: sharepointIds.
        :type share_point_ids: ~files.models.MicrosoftGraphSharepointIds
        :param system: systemFacet.
        :type system: dict[str, object]
        :param following: The list of items the user is following. Only in OneDrive for Business.
        :type following: list[~files.models.MicrosoftGraphDriveItem]
        :param items: All items contained in the drive. Read-only. Nullable.
        :type items: list[~files.models.MicrosoftGraphDriveItem]
        :param root: driveItem.
        :type root: ~files.models.MicrosoftGraphDriveItem
        :param special: Collection of common folders available in OneDrive. Read-only. Nullable.
        :type special: list[~files.models.MicrosoftGraphDriveItem]
        :param microsoft_graph_entity_id: Read-only.
        :type microsoft_graph_entity_id: str
        :param microsoft_graph_base_item_created_date_time_created_date_time: Date and time of item
         creation. Read-only.
        :type microsoft_graph_base_item_created_date_time_created_date_time: ~datetime.datetime
        :param microsoft_graph_base_item_description: Provides a user-visible description of the item.
         Optional.
        :type microsoft_graph_base_item_description: str
        :param microsoft_graph_base_item_e_tag: ETag for the item. Read-only.
        :type microsoft_graph_base_item_e_tag: str
        :param microsoft_graph_base_item_last_modified_date_time_last_modified_date_time: Date and time
         the item was last modified. Read-only.
        :type microsoft_graph_base_item_last_modified_date_time_last_modified_date_time: ~datetime.datetime
        :param microsoft_graph_base_item_name: The name of the item. Read-write.
        :type microsoft_graph_base_item_name: str
        :param microsoft_graph_base_item_web_url: URL that displays the resource in the browser. Read-
         only.
        :type microsoft_graph_base_item_web_url: str
        :param microsoft_graph_user_created_by_user: Represents an Azure Active Directory user object.
        :type microsoft_graph_user_created_by_user: ~files.models.MicrosoftGraphUser
        :param microsoft_graph_user_last_modified_by_user: Represents an Azure Active Directory user
         object.
        :type microsoft_graph_user_last_modified_by_user: ~files.models.MicrosoftGraphUser
        :param drive_id1: Unique identifier of the drive instance that contains the item. Read-only.
        :type drive_id1: str
        :param microsoft_graph_item_reference_drive_type: Identifies the type of drive. See [drive][]
         resource for values.
        :type microsoft_graph_item_reference_drive_type: str
        :param id6: Unique identifier of the item in the drive. Read-only.
        :type id6: str
        :param name1: The name of the item being referenced. Read-only.
        :type name1: str
        :param microsoft_graph_item_reference_path: Path that can be used to navigate to the item.
         Read-only.
        :type microsoft_graph_item_reference_path: str
        :param microsoft_graph_item_reference_share_id: A unique identifier for a shared resource that
         can be accessed via the [Shares][] API.
        :type microsoft_graph_item_reference_share_id: str
        :param microsoft_graph_sharepoint_ids: sharepointIds.
        :type microsoft_graph_sharepoint_ids: ~files.models.MicrosoftGraphSharepointIds
        :param microsoft_graph_item_reference_site_id:
        :type microsoft_graph_item_reference_site_id: str
        :param display_name5: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name5: str
        :param id7: Unique identifier for the identity.
        :type id7: str
        :param display_name6: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name6: str
        :param id8: Unique identifier for the identity.
        :type id8: str
        :param display_name7: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name7: str
        :param id9: Unique identifier for the identity.
        :type id9: str
        :param display_name8: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name8: str
        :param id10: Unique identifier for the identity.
        :type id10: str
        :param display_name9: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name9: str
        :param id11: Unique identifier for the identity.
        :type id11: str
        :param display_name10: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name10: str
        :param id12: Unique identifier for the identity.
        :type id12: str
        :param microsoft_graph_list_display_name: The displayable title of the list.
        :type microsoft_graph_list_display_name: str
        :param list: listInfo.
        :type list: ~files.models.MicrosoftGraphListInfo
        :param sharepoint_ids1: sharepointIds.
        :type sharepoint_ids1: ~files.models.MicrosoftGraphSharepointIds
        :param microsoft_graph_system_facet_system: systemFacet.
        :type microsoft_graph_system_facet_system: dict[str, object]
        :param columns: The collection of field definitions for this list.
        :type columns: list[~files.models.MicrosoftGraphColumnDefinition]
        :param content_types: The collection of content types present in this list.
        :type content_types: list[~files.models.MicrosoftGraphContentType]
        :param drive: drive.
        :type drive: ~files.models.MicrosoftGraphDrive
        :param microsoft_graph_list_items: All items contained in the list.
        :type microsoft_graph_list_items: list[~files.models.MicrosoftGraphListItem]
        :param subscriptions: The set of subscriptions on the list.
        :type subscriptions: list[~files.models.MicrosoftGraphSubscription]
        :param deleted: Total space consumed by files in the recycle bin, in bytes. Read-only.
        :type deleted: long
        :param remaining: Total space remaining before reaching the quota limit, in bytes. Read-only.
        :type remaining: long
        :param state: Enumeration value that indicates the state of the storage space. Read-only.
        :type state: str
        :param storage_plan_information: storagePlanInformation.
        :type storage_plan_information: ~files.models.MicrosoftGraphStoragePlanInformation
        :param total: Total allowed storage space, in bytes. Read-only.
        :type total: long
        :param used: Total space used, in bytes. Read-only.
        :type used: long
        :param display_name11: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name11: str
        :param id13: Unique identifier for the identity.
        :type id13: str
        :param display_name12: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name12: str
        :param id14: Unique identifier for the identity.
        :type id14: str
        :param display_name13: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name13: str
        :param id15: Unique identifier for the identity.
        :type id15: str
        :keyword callable cls: A custom type or function that will be passed the direct response
        :return: None, or the result of cls(response)
        :rtype: None
        :raises: ~azure.core.exceptions.HttpResponseError
        """
        cls = kwargs.pop('cls', None)  # type: ClsType[None]
        error_map = {404: ResourceNotFoundError, 409: ResourceExistsError}
        error_map.update(kwargs.pop('error_map', {}))

        _body = models.MicrosoftGraphDrive(id=id, created_date_time=created_date_time, description=description, e_tag=e_tag, last_modified_date_time=last_modified_date_time, name=name, web_url=web_url, created_by_user=created_by_user, last_modified_by_user=last_modified_by_user, drive_id=microsoft_graph_item_reference_drive_id, drive_type=drive_type, id_parent_reference_id=microsoft_graph_item_reference_id, name_parent_reference_name=microsoft_graph_item_reference_name, path=path, share_id=share_id, sharepoint_ids=sharepoint_ids, site_id=site_id, display_name_last_modified_by_user_display_name=display_name, id_last_modified_by_user_id=microsoft_graph_identity_id, display_name_last_modified_by_device_display_name=microsoft_graph_identity_display_name, id_last_modified_by_device_id=id1, display_name_last_modified_by_application_display_name=display_name1, id_last_modified_by_application_id=id2, display_name_created_by_user_display_name=display_name2, id_created_by_user_id=id3, display_name_created_by_device_display_name=display_name3, id_created_by_device_id=id4, display_name_created_by_application_display_name=display_name4, id_created_by_application_id=id5, drive_type=microsoft_graph_drive_type, share_point_ids=share_point_ids, system=system, following=following, items=items, root=root, special=special, id_list_id=microsoft_graph_entity_id, created_date_time_list_created_date_time=microsoft_graph_base_item_created_date_time_created_date_time, description_list_description=microsoft_graph_base_item_description, e_tag_list_e_tag=microsoft_graph_base_item_e_tag, last_modified_date_time_list_last_modified_date_time=microsoft_graph_base_item_last_modified_date_time_last_modified_date_time, name_list_name=microsoft_graph_base_item_name, web_url_list_web_url=microsoft_graph_base_item_web_url, created_by_user_list_created_by_user=microsoft_graph_user_created_by_user, last_modified_by_user_list_last_modified_by_user=microsoft_graph_user_last_modified_by_user, drive_id_list_parent_reference_drive_id=drive_id1, drive_type_list_parent_reference_drive_type=microsoft_graph_item_reference_drive_type, id_list_parent_reference_id=id6, name_list_parent_reference_name=name1, path_list_parent_reference_path=microsoft_graph_item_reference_path, share_id_list_parent_reference_share_id=microsoft_graph_item_reference_share_id, sharepoint_ids_list_parent_reference_sharepoint_ids=microsoft_graph_sharepoint_ids, site_id_list_parent_reference_site_id=microsoft_graph_item_reference_site_id, display_name_list_last_modified_by_user_display_name=display_name5, id_list_last_modified_by_user_id=id7, display_name_list_last_modified_by_device_display_name=display_name6, id_list_last_modified_by_device_id=id8, display_name_list_last_modified_by_application_display_name=display_name7, id_list_last_modified_by_application_id=id9, display_name_list_created_by_user_display_name=display_name8, id_list_created_by_user_id=id10, display_name_list_created_by_device_display_name=display_name9, id_list_created_by_device_id=id11, display_name_list_created_by_application_display_name=display_name10, id_list_created_by_application_id=id12, display_name_list_display_name=microsoft_graph_list_display_name, list=list, sharepoint_ids_list_sharepoint_ids=sharepoint_ids1, system_list_system=microsoft_graph_system_facet_system, columns=columns, content_types=content_types, drive=drive, items_list_items=microsoft_graph_list_items, subscriptions=subscriptions, deleted=deleted, remaining=remaining, state=state, storage_plan_information=storage_plan_information, total=total, used=used, display_name_owner_user_display_name=display_name11, id_owner_user_id=id13, display_name_owner_device_display_name=display_name12, id_owner_device_id=id14, display_name_owner_application_display_name=display_name13, id_owner_application_id=id15)
        content_type = kwargs.pop("content_type", "application/json")
        accept = "application/json"

        # Construct URL
        url = self.update_drive.metadata['url']  # type: ignore
        path_format_arguments = {
            'user-id': self._serialize.url("user_id", user_id, 'str'),
            'drive-id': self._serialize.url("drive_id", drive_id, 'str'),
        }
        url = self._client.format_url(url, **path_format_arguments)

        # Construct parameters
        query_parameters = {}  # type: Dict[str, Any]

        # Construct headers
        header_parameters = {}  # type: Dict[str, Any]
        header_parameters['Content-Type'] = self._serialize.header("content_type", content_type, 'str')
        header_parameters['Accept'] = self._serialize.header("accept", accept, 'str')

        body_content_kwargs = {}  # type: Dict[str, Any]
        body_content = self._serialize.body(_body, 'MicrosoftGraphDrive')
        body_content_kwargs['content'] = body_content
        request = self._client.patch(url, query_parameters, header_parameters, **body_content_kwargs)

        pipeline_response = await self._client._pipeline.run(request, stream=False, **kwargs)
        response = pipeline_response.http_response

        if response.status_code not in [204]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            error = self._deserialize(models.OdataError, response)
            raise HttpResponseError(response=response, model=error, error_format=ARMErrorFormat)

        if cls:
            return cls(pipeline_response, None, {})

    update_drive.metadata = {'url': '/users/{user-id}/drives/{drive-id}'}  # type: ignore

    async def delete_drive(
        self,
        user_id: str,
        drive_id: str,
        if_match: Optional[str] = None,
        **kwargs
    ) -> None:
        """Delete navigation property drives for users.

        Delete navigation property drives for users.

        :param user_id: key: id of user.
        :type user_id: str
        :param drive_id: key: id of drive.
        :type drive_id: str
        :param if_match: ETag.
        :type if_match: str
        :keyword callable cls: A custom type or function that will be passed the direct response
        :return: None, or the result of cls(response)
        :rtype: None
        :raises: ~azure.core.exceptions.HttpResponseError
        """
        cls = kwargs.pop('cls', None)  # type: ClsType[None]
        error_map = {404: ResourceNotFoundError, 409: ResourceExistsError}
        error_map.update(kwargs.pop('error_map', {}))
        accept = "application/json"

        # Construct URL
        url = self.delete_drive.metadata['url']  # type: ignore
        path_format_arguments = {
            'user-id': self._serialize.url("user_id", user_id, 'str'),
            'drive-id': self._serialize.url("drive_id", drive_id, 'str'),
        }
        url = self._client.format_url(url, **path_format_arguments)

        # Construct parameters
        query_parameters = {}  # type: Dict[str, Any]

        # Construct headers
        header_parameters = {}  # type: Dict[str, Any]
        if if_match is not None:
            header_parameters['If-Match'] = self._serialize.header("if_match", if_match, 'str')
        header_parameters['Accept'] = self._serialize.header("accept", accept, 'str')

        request = self._client.delete(url, query_parameters, header_parameters)
        pipeline_response = await self._client._pipeline.run(request, stream=False, **kwargs)
        response = pipeline_response.http_response

        if response.status_code not in [204]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            error = self._deserialize(models.OdataError, response)
            raise HttpResponseError(response=response, model=error, error_format=ARMErrorFormat)

        if cls:
            return cls(pipeline_response, None, {})

    delete_drive.metadata = {'url': '/users/{user-id}/drives/{drive-id}'}  # type: ignore
