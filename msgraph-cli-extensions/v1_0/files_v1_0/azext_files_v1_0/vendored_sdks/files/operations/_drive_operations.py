# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
import datetime
from typing import TYPE_CHECKING
import warnings

from azure.core.exceptions import HttpResponseError, ResourceExistsError, ResourceNotFoundError, map_error
from azure.core.paging import ItemPaged
from azure.core.pipeline import PipelineResponse
from azure.core.pipeline.transport import HttpRequest, HttpResponse
from azure.mgmt.core.exceptions import ARMErrorFormat

from .. import models

if TYPE_CHECKING:
    # pylint: disable=unused-import,ungrouped-imports
    from typing import Any, Callable, Dict, Generic, Iterable, List, Optional, TypeVar, Union

    T = TypeVar('T')
    ClsType = Optional[Callable[[PipelineResponse[HttpRequest, HttpResponse], T, Dict[str, Any]], Any]]

class DriveOperations(object):
    """DriveOperations operations.

    You should not instantiate this class directly. Instead, you should create a Client instance that
    instantiates it for you and attaches it as an attribute.

    :ivar models: Alias to model classes used in this operation group.
    :type models: ~files.models
    :param client: Client for service requests.
    :param config: Configuration of service client.
    :param serializer: An object model serializer.
    :param deserializer: An object model deserializer.
    """

    models = models

    def __init__(self, client, config, serializer, deserializer):
        self._client = client
        self._serialize = serializer
        self._deserialize = deserializer
        self._config = config

    def list_following(
        self,
        drive_id,  # type: str
        orderby=None,  # type: Optional[List[Union[str, "models.Enum64"]]]
        select=None,  # type: Optional[List[Union[str, "models.Enum65"]]]
        expand=None,  # type: Optional[List[Union[str, "models.Get8ItemsItem"]]]
        **kwargs  # type: Any
    ):
        # type: (...) -> Iterable["models.CollectionOfDriveItem"]
        """Get following from drives.

        Get following from drives.

        :param drive_id: key: id of drive.
        :type drive_id: str
        :param orderby: Order items by property values.
        :type orderby: list[str or ~files.models.Enum64]
        :param select: Select properties to be returned.
        :type select: list[str or ~files.models.Enum65]
        :param expand: Expand related entities.
        :type expand: list[str or ~files.models.Get8ItemsItem]
        :keyword callable cls: A custom type or function that will be passed the direct response
        :return: An iterator like instance of either CollectionOfDriveItem or the result of cls(response)
        :rtype: ~azure.core.paging.ItemPaged[~files.models.CollectionOfDriveItem]
        :raises: ~azure.core.exceptions.HttpResponseError
        """
        cls = kwargs.pop('cls', None)  # type: ClsType["models.CollectionOfDriveItem"]
        error_map = {404: ResourceNotFoundError, 409: ResourceExistsError}
        error_map.update(kwargs.pop('error_map', {}))
        accept = "application/json"

        def prepare_request(next_link=None):
            # Construct headers
            header_parameters = {}  # type: Dict[str, Any]
            header_parameters['Accept'] = self._serialize.header("accept", accept, 'str')
            header_parameters['Accept'] = 'application/json'

            if not next_link:
                # Construct URL
                url = self.list_following.metadata['url']  # type: ignore
                path_format_arguments = {
                    'drive-id': self._serialize.url("drive_id", drive_id, 'str'),
                }
                url = self._client.format_url(url, **path_format_arguments)
                # Construct parameters
                query_parameters = {}  # type: Dict[str, Any]
                if self._config.top is not None:
                    query_parameters['$top'] = self._serialize.query("self._config.top", self._config.top, 'int', minimum=0)
                if self._config.skip is not None:
                    query_parameters['$skip'] = self._serialize.query("self._config.skip", self._config.skip, 'int', minimum=0)
                if self._config.search is not None:
                    query_parameters['$search'] = self._serialize.query("self._config.search", self._config.search, 'str')
                if self._config.filter is not None:
                    query_parameters['$filter'] = self._serialize.query("self._config.filter", self._config.filter, 'str')
                if self._config.count is not None:
                    query_parameters['$count'] = self._serialize.query("self._config.count", self._config.count, 'bool')
                if orderby is not None:
                    query_parameters['$orderby'] = self._serialize.query("orderby", orderby, '[str]', div=',')
                if select is not None:
                    query_parameters['$select'] = self._serialize.query("select", select, '[str]', div=',')
                if expand is not None:
                    query_parameters['$expand'] = self._serialize.query("expand", expand, '[str]', div=',')

                request = self._client.get(url, query_parameters, header_parameters)
            else:
                url = next_link
                query_parameters = {}  # type: Dict[str, Any]
                request = self._client.get(url, query_parameters, header_parameters)
            return request

        def extract_data(pipeline_response):
            deserialized = self._deserialize('CollectionOfDriveItem', pipeline_response)
            list_of_elem = deserialized.value
            if cls:
                list_of_elem = cls(list_of_elem)
            return deserialized.odata_next_link or None, iter(list_of_elem)

        def get_next(next_link=None):
            request = prepare_request(next_link)

            pipeline_response = self._client._pipeline.run(request, stream=False, **kwargs)
            response = pipeline_response.http_response

            if response.status_code not in [200]:
                error = self._deserialize(models.OdataError, response)
                map_error(status_code=response.status_code, response=response, error_map=error_map)
                raise HttpResponseError(response=response, model=error, error_format=ARMErrorFormat)

            return pipeline_response

        return ItemPaged(
            get_next, extract_data
        )
    list_following.metadata = {'url': '/drives/{drive-id}/following'}  # type: ignore

    def create_following(
        self,
        drive_id,  # type: str
        id=None,  # type: Optional[str]
        created_date_time=None,  # type: Optional[datetime.datetime]
        description=None,  # type: Optional[str]
        e_tag=None,  # type: Optional[str]
        last_modified_date_time=None,  # type: Optional[datetime.datetime]
        name=None,  # type: Optional[str]
        web_url=None,  # type: Optional[str]
        created_by_user=None,  # type: Optional["models.MicrosoftGraphUser"]
        last_modified_by_user=None,  # type: Optional["models.MicrosoftGraphUser"]
        microsoft_graph_item_reference_drive_id=None,  # type: Optional[str]
        drive_type=None,  # type: Optional[str]
        microsoft_graph_item_reference_id=None,  # type: Optional[str]
        microsoft_graph_item_reference_name=None,  # type: Optional[str]
        path=None,  # type: Optional[str]
        share_id=None,  # type: Optional[str]
        sharepoint_ids=None,  # type: Optional["models.MicrosoftGraphSharepointIds"]
        site_id=None,  # type: Optional[str]
        display_name=None,  # type: Optional[str]
        microsoft_graph_identity_id=None,  # type: Optional[str]
        microsoft_graph_identity_display_name=None,  # type: Optional[str]
        id1=None,  # type: Optional[str]
        display_name1=None,  # type: Optional[str]
        id2=None,  # type: Optional[str]
        display_name2=None,  # type: Optional[str]
        id3=None,  # type: Optional[str]
        display_name3=None,  # type: Optional[str]
        id4=None,  # type: Optional[str]
        display_name4=None,  # type: Optional[str]
        id5=None,  # type: Optional[str]
        audio=None,  # type: Optional["models.MicrosoftGraphAudio"]
        content=None,  # type: Optional[bytes]
        c_tag=None,  # type: Optional[str]
        file_system_info=None,  # type: Optional["models.MicrosoftGraphFileSystemInfo"]
        image=None,  # type: Optional["models.MicrosoftGraphImage"]
        location=None,  # type: Optional["models.MicrosoftGraphGeoCoordinates"]
        photo=None,  # type: Optional["models.MicrosoftGraphPhoto"]
        publication=None,  # type: Optional["models.MicrosoftGraphPublicationFacet"]
        root=None,  # type: Optional[Dict[str, object]]
        microsoft_graph_sharepoint_ids=None,  # type: Optional["models.MicrosoftGraphSharepointIds"]
        size=None,  # type: Optional[int]
        video=None,  # type: Optional["models.MicrosoftGraphVideo"]
        web_dav_url=None,  # type: Optional[str]
        analytics=None,  # type: Optional["models.MicrosoftGraphItemAnalytics"]
        children=None,  # type: Optional[List["models.MicrosoftGraphDriveItem"]]
        permissions=None,  # type: Optional[List["models.MicrosoftGraphPermission"]]
        subscriptions=None,  # type: Optional[List["models.MicrosoftGraphSubscription"]]
        thumbnails=None,  # type: Optional[List["models.MicrosoftGraphThumbnailSet"]]
        versions=None,  # type: Optional[List["models.MicrosoftGraphDriveItemVersion"]]
        microsoft_graph_entity_id=None,  # type: Optional[str]
        microsoft_graph_base_item_created_date_time_created_date_time=None,  # type: Optional[datetime.datetime]
        microsoft_graph_base_item_description=None,  # type: Optional[str]
        microsoft_graph_base_item_e_tag=None,  # type: Optional[str]
        microsoft_graph_base_item_last_modified_date_time_last_modified_date_time=None,  # type: Optional[datetime.datetime]
        microsoft_graph_base_item_name=None,  # type: Optional[str]
        microsoft_graph_base_item_web_url=None,  # type: Optional[str]
        microsoft_graph_user_created_by_user=None,  # type: Optional["models.MicrosoftGraphUser"]
        microsoft_graph_user_last_modified_by_user=None,  # type: Optional["models.MicrosoftGraphUser"]
        drive_id1=None,  # type: Optional[str]
        microsoft_graph_item_reference_drive_type=None,  # type: Optional[str]
        id6=None,  # type: Optional[str]
        name1=None,  # type: Optional[str]
        microsoft_graph_item_reference_path=None,  # type: Optional[str]
        microsoft_graph_item_reference_share_id=None,  # type: Optional[str]
        sharepoint_ids1=None,  # type: Optional["models.MicrosoftGraphSharepointIds"]
        microsoft_graph_item_reference_site_id=None,  # type: Optional[str]
        display_name5=None,  # type: Optional[str]
        id7=None,  # type: Optional[str]
        display_name6=None,  # type: Optional[str]
        id8=None,  # type: Optional[str]
        display_name7=None,  # type: Optional[str]
        id9=None,  # type: Optional[str]
        display_name8=None,  # type: Optional[str]
        id10=None,  # type: Optional[str]
        display_name9=None,  # type: Optional[str]
        id11=None,  # type: Optional[str]
        display_name10=None,  # type: Optional[str]
        id12=None,  # type: Optional[str]
        content_type_parameter=None,  # type: Optional["models.MicrosoftGraphContentTypeInfo"]
        sharepoint_ids2=None,  # type: Optional["models.MicrosoftGraphSharepointIds"]
        microsoft_graph_item_analytics=None,  # type: Optional["models.MicrosoftGraphItemAnalytics"]
        drive_item=None,  # type: Optional["models.MicrosoftGraphDriveItem"]
        microsoft_graph_list_item_versions=None,  # type: Optional[List["models.MicrosoftGraphListItemVersion"]]
        id13=None,  # type: Optional[str]
        id14=None,  # type: Optional[str]
        application=None,  # type: Optional["models.MicrosoftGraphWorkbookApplication"]
        comments=None,  # type: Optional[List["models.MicrosoftGraphWorkbookComment"]]
        functions=None,  # type: Optional["models.MicrosoftGraphWorkbookFunctions"]
        names=None,  # type: Optional[List["models.MicrosoftGraphWorkbookNamedItem"]]
        operations=None,  # type: Optional[List["models.MicrosoftGraphWorkbookOperation"]]
        tables=None,  # type: Optional[List["models.MicrosoftGraphWorkbookTable"]]
        worksheets=None,  # type: Optional[List["models.MicrosoftGraphWorkbookWorksheet"]]
        microsoft_graph_special_folder_name=None,  # type: Optional[str]
        owner=None,  # type: Optional["models.MicrosoftGraphIdentitySet"]
        scope=None,  # type: Optional[str]
        shared_by=None,  # type: Optional["models.MicrosoftGraphIdentitySet"]
        shared_date_time=None,  # type: Optional[datetime.datetime]
        on_click_telemetry_url=None,  # type: Optional[str]
        created_by=None,  # type: Optional["models.MicrosoftGraphIdentitySet"]
        microsoft_graph_remote_item_created_date_time_created_date_time=None,  # type: Optional[datetime.datetime]
        file=None,  # type: Optional["models.MicrosoftGraphFile"]
        microsoft_graph_file_system_info_file_system_info=None,  # type: Optional["models.MicrosoftGraphFileSystemInfo"]
        folder=None,  # type: Optional["models.MicrosoftGraphFolder"]
        microsoft_graph_remote_item_id=None,  # type: Optional[str]
        microsoft_graph_image=None,  # type: Optional["models.MicrosoftGraphImage"]
        last_modified_by=None,  # type: Optional["models.MicrosoftGraphIdentitySet"]
        microsoft_graph_remote_item_last_modified_date_time_last_modified_date_time=None,  # type: Optional[datetime.datetime]
        microsoft_graph_remote_item_name=None,  # type: Optional[str]
        package=None,  # type: Optional["models.MicrosoftGraphPackage"]
        parent_reference=None,  # type: Optional["models.MicrosoftGraphItemReference"]
        shared=None,  # type: Optional["models.MicrosoftGraphShared"]
        sharepoint_ids3=None,  # type: Optional["models.MicrosoftGraphSharepointIds"]
        integer_size=None,  # type: Optional[int]
        special_folder=None,  # type: Optional["models.MicrosoftGraphSpecialFolder"]
        microsoft_graph_video=None,  # type: Optional["models.MicrosoftGraphVideo"]
        microsoft_graph_remote_item_web_dav_url_web_dav_url=None,  # type: Optional[str]
        microsoft_graph_remote_item_web_url=None,  # type: Optional[str]
        queued_date_time=None,  # type: Optional[datetime.datetime]
        type=None,  # type: Optional[str]
        child_count=None,  # type: Optional[int]
        view=None,  # type: Optional["models.MicrosoftGraphFolderView"]
        hashes=None,  # type: Optional["models.MicrosoftGraphHashes"]
        mime_type=None,  # type: Optional[str]
        processing_metadata=None,  # type: Optional[bool]
        state=None,  # type: Optional[str]
        **kwargs  # type: Any
    ):
        # type: (...) -> "models.MicrosoftGraphDriveItem"
        """Create new navigation property to following for drives.

        Create new navigation property to following for drives.

        :param drive_id: key: id of drive.
        :type drive_id: str
        :param id: Read-only.
        :type id: str
        :param created_date_time: Date and time of item creation. Read-only.
        :type created_date_time: ~datetime.datetime
        :param description: Provides a user-visible description of the item. Optional.
        :type description: str
        :param e_tag: ETag for the item. Read-only.
        :type e_tag: str
        :param last_modified_date_time: Date and time the item was last modified. Read-only.
        :type last_modified_date_time: ~datetime.datetime
        :param name: The name of the item. Read-write.
        :type name: str
        :param web_url: URL that displays the resource in the browser. Read-only.
        :type web_url: str
        :param created_by_user: Represents an Azure Active Directory user object.
        :type created_by_user: ~files.models.MicrosoftGraphUser
        :param last_modified_by_user: Represents an Azure Active Directory user object.
        :type last_modified_by_user: ~files.models.MicrosoftGraphUser
        :param microsoft_graph_item_reference_drive_id: Unique identifier of the drive instance that
         contains the item. Read-only.
        :type microsoft_graph_item_reference_drive_id: str
        :param drive_type: Identifies the type of drive. See [drive][] resource for values.
        :type drive_type: str
        :param microsoft_graph_item_reference_id: Unique identifier of the item in the drive. Read-
         only.
        :type microsoft_graph_item_reference_id: str
        :param microsoft_graph_item_reference_name: The name of the item being referenced. Read-only.
        :type microsoft_graph_item_reference_name: str
        :param path: Path that can be used to navigate to the item. Read-only.
        :type path: str
        :param share_id: A unique identifier for a shared resource that can be accessed via the
         [Shares][] API.
        :type share_id: str
        :param sharepoint_ids: sharepointIds.
        :type sharepoint_ids: ~files.models.MicrosoftGraphSharepointIds
        :param site_id:
        :type site_id: str
        :param display_name: The identity's display name. Note that this may not always be available or
         up to date. For example, if a user changes their display name, the API may show the new value
         in a future response, but the items associated with the user won't show up as having changed
         when using delta.
        :type display_name: str
        :param microsoft_graph_identity_id: Unique identifier for the identity.
        :type microsoft_graph_identity_id: str
        :param microsoft_graph_identity_display_name: The identity's display name. Note that this may
         not always be available or up to date. For example, if a user changes their display name, the
         API may show the new value in a future response, but the items associated with the user won't
         show up as having changed when using delta.
        :type microsoft_graph_identity_display_name: str
        :param id1: Unique identifier for the identity.
        :type id1: str
        :param display_name1: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name1: str
        :param id2: Unique identifier for the identity.
        :type id2: str
        :param display_name2: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name2: str
        :param id3: Unique identifier for the identity.
        :type id3: str
        :param display_name3: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name3: str
        :param id4: Unique identifier for the identity.
        :type id4: str
        :param display_name4: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name4: str
        :param id5: Unique identifier for the identity.
        :type id5: str
        :param audio: audio.
        :type audio: ~files.models.MicrosoftGraphAudio
        :param content: The content stream, if the item represents a file.
        :type content: bytes
        :param c_tag: An eTag for the content of the item. This eTag is not changed if only the
         metadata is changed. Note This property is not returned if the item is a folder. Read-only.
        :type c_tag: str
        :param file_system_info: fileSystemInfo.
        :type file_system_info: ~files.models.MicrosoftGraphFileSystemInfo
        :param image: image.
        :type image: ~files.models.MicrosoftGraphImage
        :param location: geoCoordinates.
        :type location: ~files.models.MicrosoftGraphGeoCoordinates
        :param photo: photo.
        :type photo: ~files.models.MicrosoftGraphPhoto
        :param publication: publicationFacet.
        :type publication: ~files.models.MicrosoftGraphPublicationFacet
        :param root: root.
        :type root: dict[str, object]
        :param microsoft_graph_sharepoint_ids: sharepointIds.
        :type microsoft_graph_sharepoint_ids: ~files.models.MicrosoftGraphSharepointIds
        :param size: Size of the item in bytes. Read-only.
        :type size: long
        :param video: video.
        :type video: ~files.models.MicrosoftGraphVideo
        :param web_dav_url: WebDAV compatible URL for the item.
        :type web_dav_url: str
        :param analytics: itemAnalytics.
        :type analytics: ~files.models.MicrosoftGraphItemAnalytics
        :param children: Collection containing Item objects for the immediate children of Item. Only
         items representing folders have children. Read-only. Nullable.
        :type children: list[~files.models.MicrosoftGraphDriveItem]
        :param permissions: The set of permissions for the item. Read-only. Nullable.
        :type permissions: list[~files.models.MicrosoftGraphPermission]
        :param subscriptions: The set of subscriptions on the item. Only supported on the root of a
         drive.
        :type subscriptions: list[~files.models.MicrosoftGraphSubscription]
        :param thumbnails: Collection containing [ThumbnailSet][] objects associated with the item. For
         more info, see [getting thumbnails][]. Read-only. Nullable.
        :type thumbnails: list[~files.models.MicrosoftGraphThumbnailSet]
        :param versions: The list of previous versions of the item. For more info, see [getting
         previous versions][]. Read-only. Nullable.
        :type versions: list[~files.models.MicrosoftGraphDriveItemVersion]
        :param microsoft_graph_entity_id: Read-only.
        :type microsoft_graph_entity_id: str
        :param microsoft_graph_base_item_created_date_time_created_date_time: Date and time of item
         creation. Read-only.
        :type microsoft_graph_base_item_created_date_time_created_date_time: ~datetime.datetime
        :param microsoft_graph_base_item_description: Provides a user-visible description of the item.
         Optional.
        :type microsoft_graph_base_item_description: str
        :param microsoft_graph_base_item_e_tag: ETag for the item. Read-only.
        :type microsoft_graph_base_item_e_tag: str
        :param microsoft_graph_base_item_last_modified_date_time_last_modified_date_time: Date and time
         the item was last modified. Read-only.
        :type microsoft_graph_base_item_last_modified_date_time_last_modified_date_time: ~datetime.datetime
        :param microsoft_graph_base_item_name: The name of the item. Read-write.
        :type microsoft_graph_base_item_name: str
        :param microsoft_graph_base_item_web_url: URL that displays the resource in the browser. Read-
         only.
        :type microsoft_graph_base_item_web_url: str
        :param microsoft_graph_user_created_by_user: Represents an Azure Active Directory user object.
        :type microsoft_graph_user_created_by_user: ~files.models.MicrosoftGraphUser
        :param microsoft_graph_user_last_modified_by_user: Represents an Azure Active Directory user
         object.
        :type microsoft_graph_user_last_modified_by_user: ~files.models.MicrosoftGraphUser
        :param drive_id1: Unique identifier of the drive instance that contains the item. Read-only.
        :type drive_id1: str
        :param microsoft_graph_item_reference_drive_type: Identifies the type of drive. See [drive][]
         resource for values.
        :type microsoft_graph_item_reference_drive_type: str
        :param id6: Unique identifier of the item in the drive. Read-only.
        :type id6: str
        :param name1: The name of the item being referenced. Read-only.
        :type name1: str
        :param microsoft_graph_item_reference_path: Path that can be used to navigate to the item.
         Read-only.
        :type microsoft_graph_item_reference_path: str
        :param microsoft_graph_item_reference_share_id: A unique identifier for a shared resource that
         can be accessed via the [Shares][] API.
        :type microsoft_graph_item_reference_share_id: str
        :param sharepoint_ids1: sharepointIds.
        :type sharepoint_ids1: ~files.models.MicrosoftGraphSharepointIds
        :param microsoft_graph_item_reference_site_id:
        :type microsoft_graph_item_reference_site_id: str
        :param display_name5: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name5: str
        :param id7: Unique identifier for the identity.
        :type id7: str
        :param display_name6: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name6: str
        :param id8: Unique identifier for the identity.
        :type id8: str
        :param display_name7: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name7: str
        :param id9: Unique identifier for the identity.
        :type id9: str
        :param display_name8: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name8: str
        :param id10: Unique identifier for the identity.
        :type id10: str
        :param display_name9: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name9: str
        :param id11: Unique identifier for the identity.
        :type id11: str
        :param display_name10: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name10: str
        :param id12: Unique identifier for the identity.
        :type id12: str
        :param content_type_parameter: contentTypeInfo.
        :type content_type_parameter: ~files.models.MicrosoftGraphContentTypeInfo
        :param sharepoint_ids2: sharepointIds.
        :type sharepoint_ids2: ~files.models.MicrosoftGraphSharepointIds
        :param microsoft_graph_item_analytics: itemAnalytics.
        :type microsoft_graph_item_analytics: ~files.models.MicrosoftGraphItemAnalytics
        :param drive_item: driveItem.
        :type drive_item: ~files.models.MicrosoftGraphDriveItem
        :param microsoft_graph_list_item_versions: The list of previous versions of the list item.
        :type microsoft_graph_list_item_versions: list[~files.models.MicrosoftGraphListItemVersion]
        :param id13: Read-only.
        :type id13: str
        :param id14: Read-only.
        :type id14: str
        :param application: workbookApplication.
        :type application: ~files.models.MicrosoftGraphWorkbookApplication
        :param comments:
        :type comments: list[~files.models.MicrosoftGraphWorkbookComment]
        :param functions: workbookFunctions.
        :type functions: ~files.models.MicrosoftGraphWorkbookFunctions
        :param names: Represents a collection of workbook scoped named items (named ranges and
         constants). Read-only.
        :type names: list[~files.models.MicrosoftGraphWorkbookNamedItem]
        :param operations: The status of workbook operations. Getting an operation collection is not
         supported, but you can get the status of a long-running operation if the Location header is
         returned in the response. Read-only.
        :type operations: list[~files.models.MicrosoftGraphWorkbookOperation]
        :param tables: Represents a collection of tables associated with the workbook. Read-only.
        :type tables: list[~files.models.MicrosoftGraphWorkbookTable]
        :param worksheets: Represents a collection of worksheets associated with the workbook. Read-
         only.
        :type worksheets: list[~files.models.MicrosoftGraphWorkbookWorksheet]
        :param microsoft_graph_special_folder_name: The unique identifier for this item in the
         /drive/special collection.
        :type microsoft_graph_special_folder_name: str
        :param owner: identitySet.
        :type owner: ~files.models.MicrosoftGraphIdentitySet
        :param scope: Indicates the scope of how the item is shared: anonymous, organization, or users.
         Read-only.
        :type scope: str
        :param shared_by: identitySet.
        :type shared_by: ~files.models.MicrosoftGraphIdentitySet
        :param shared_date_time: The UTC date and time when the item was shared. Read-only.
        :type shared_date_time: ~datetime.datetime
        :param on_click_telemetry_url: A callback URL that can be used to record telemetry information.
         The application should issue a GET on this URL if the user interacts with this item to improve
         the quality of results.
        :type on_click_telemetry_url: str
        :param created_by: identitySet.
        :type created_by: ~files.models.MicrosoftGraphIdentitySet
        :param microsoft_graph_remote_item_created_date_time_created_date_time: Date and time of item
         creation. Read-only.
        :type microsoft_graph_remote_item_created_date_time_created_date_time: ~datetime.datetime
        :param file: file.
        :type file: ~files.models.MicrosoftGraphFile
        :param microsoft_graph_file_system_info_file_system_info: fileSystemInfo.
        :type microsoft_graph_file_system_info_file_system_info: ~files.models.MicrosoftGraphFileSystemInfo
        :param folder: folder.
        :type folder: ~files.models.MicrosoftGraphFolder
        :param microsoft_graph_remote_item_id: Unique identifier for the remote item in its drive.
         Read-only.
        :type microsoft_graph_remote_item_id: str
        :param microsoft_graph_image: image.
        :type microsoft_graph_image: ~files.models.MicrosoftGraphImage
        :param last_modified_by: identitySet.
        :type last_modified_by: ~files.models.MicrosoftGraphIdentitySet
        :param microsoft_graph_remote_item_last_modified_date_time_last_modified_date_time: Date and
         time the item was last modified. Read-only.
        :type microsoft_graph_remote_item_last_modified_date_time_last_modified_date_time: ~datetime.datetime
        :param microsoft_graph_remote_item_name: Optional. Filename of the remote item. Read-only.
        :type microsoft_graph_remote_item_name: str
        :param package: package.
        :type package: ~files.models.MicrosoftGraphPackage
        :param parent_reference: itemReference.
        :type parent_reference: ~files.models.MicrosoftGraphItemReference
        :param shared: shared.
        :type shared: ~files.models.MicrosoftGraphShared
        :param sharepoint_ids3: sharepointIds.
        :type sharepoint_ids3: ~files.models.MicrosoftGraphSharepointIds
        :param integer_size: Size of the remote item. Read-only.
        :type integer_size: long
        :param special_folder: specialFolder.
        :type special_folder: ~files.models.MicrosoftGraphSpecialFolder
        :param microsoft_graph_video: video.
        :type microsoft_graph_video: ~files.models.MicrosoftGraphVideo
        :param microsoft_graph_remote_item_web_dav_url_web_dav_url: DAV compatible URL for the item.
        :type microsoft_graph_remote_item_web_dav_url_web_dav_url: str
        :param microsoft_graph_remote_item_web_url: URL that displays the resource in the browser.
         Read-only.
        :type microsoft_graph_remote_item_web_url: str
        :param queued_date_time: Date and time the pending binary operation was queued in UTC time.
         Read-only.
        :type queued_date_time: ~datetime.datetime
        :param type: A string indicating the type of package. While oneNote is the only currently
         defined value, you should expect other package types to be returned and handle them
         accordingly.
        :type type: str
        :param child_count: Number of children contained immediately within this container.
        :type child_count: int
        :param view: folderView.
        :type view: ~files.models.MicrosoftGraphFolderView
        :param hashes: hashes.
        :type hashes: ~files.models.MicrosoftGraphHashes
        :param mime_type: The MIME type for the file. This is determined by logic on the server and
         might not be the value provided when the file was uploaded. Read-only.
        :type mime_type: str
        :param processing_metadata:
        :type processing_metadata: bool
        :param state: Represents the state of the deleted item.
        :type state: str
        :keyword callable cls: A custom type or function that will be passed the direct response
        :return: MicrosoftGraphDriveItem, or the result of cls(response)
        :rtype: ~files.models.MicrosoftGraphDriveItem
        :raises: ~azure.core.exceptions.HttpResponseError
        """
        cls = kwargs.pop('cls', None)  # type: ClsType["models.MicrosoftGraphDriveItem"]
        error_map = {404: ResourceNotFoundError, 409: ResourceExistsError}
        error_map.update(kwargs.pop('error_map', {}))

        _body = models.MicrosoftGraphDriveItem(id=id, created_date_time=created_date_time, description=description, e_tag=e_tag, last_modified_date_time=last_modified_date_time, name=name, web_url=web_url, created_by_user=created_by_user, last_modified_by_user=last_modified_by_user, drive_id=microsoft_graph_item_reference_drive_id, drive_type=drive_type, id_parent_reference_id=microsoft_graph_item_reference_id, name_parent_reference_name=microsoft_graph_item_reference_name, path=path, share_id=share_id, sharepoint_ids=sharepoint_ids, site_id=site_id, display_name_last_modified_by_user_display_name=display_name, id_last_modified_by_user_id=microsoft_graph_identity_id, display_name_last_modified_by_device_display_name=microsoft_graph_identity_display_name, id_last_modified_by_device_id=id1, display_name_last_modified_by_application_display_name=display_name1, id_last_modified_by_application_id=id2, display_name_created_by_user_display_name=display_name2, id_created_by_user_id=id3, display_name_created_by_device_display_name=display_name3, id_created_by_device_id=id4, display_name_created_by_application_display_name=display_name4, id_created_by_application_id=id5, audio=audio, content=content, c_tag=c_tag, file_system_info=file_system_info, image=image, location=location, photo=photo, publication=publication, root=root, sharepoint_ids=microsoft_graph_sharepoint_ids, size=size, video=video, web_dav_url=web_dav_url, analytics=analytics, children=children, permissions=permissions, subscriptions=subscriptions, thumbnails=thumbnails, versions=versions, id_list_item_id=microsoft_graph_entity_id, created_date_time_list_item_created_date_time=microsoft_graph_base_item_created_date_time_created_date_time, description_list_item_description=microsoft_graph_base_item_description, e_tag_list_item_e_tag=microsoft_graph_base_item_e_tag, last_modified_date_time_list_item_last_modified_date_time=microsoft_graph_base_item_last_modified_date_time_last_modified_date_time, name_list_item_name=microsoft_graph_base_item_name, web_url_list_item_web_url=microsoft_graph_base_item_web_url, created_by_user_list_item_created_by_user=microsoft_graph_user_created_by_user, last_modified_by_user_list_item_last_modified_by_user=microsoft_graph_user_last_modified_by_user, drive_id_list_item_parent_reference_drive_id=drive_id1, drive_type_list_item_parent_reference_drive_type=microsoft_graph_item_reference_drive_type, id_list_item_parent_reference_id=id6, name_list_item_parent_reference_name=name1, path_list_item_parent_reference_path=microsoft_graph_item_reference_path, share_id_list_item_parent_reference_share_id=microsoft_graph_item_reference_share_id, sharepoint_ids_list_item_parent_reference_sharepoint_ids=sharepoint_ids1, site_id_list_item_parent_reference_site_id=microsoft_graph_item_reference_site_id, display_name_list_item_last_modified_by_user_display_name=display_name5, id_list_item_last_modified_by_user_id=id7, display_name_list_item_last_modified_by_device_display_name=display_name6, id_list_item_last_modified_by_device_id=id8, display_name_list_item_last_modified_by_application_display_name=display_name7, id_list_item_last_modified_by_application_id=id9, display_name_list_item_created_by_user_display_name=display_name8, id_list_item_created_by_user_id=id10, display_name_list_item_created_by_device_display_name=display_name9, id_list_item_created_by_device_id=id11, display_name_list_item_created_by_application_display_name=display_name10, id_list_item_created_by_application_id=id12, content_type=content_type_parameter, sharepoint_ids_list_item_sharepoint_ids=sharepoint_ids2, analytics_list_item_analytics=microsoft_graph_item_analytics, drive_item=drive_item, versions_list_item_versions=microsoft_graph_list_item_versions, id_list_item_fields_id=id13, id_workbook_id=id14, application=application, comments=comments, functions=functions, names=names, operations=operations, tables=tables, worksheets=worksheets, name_special_folder_name=microsoft_graph_special_folder_name, owner=owner, scope=scope, shared_by=shared_by, shared_date_time=shared_date_time, on_click_telemetry_url=on_click_telemetry_url, created_by=created_by, created_date_time_remote_item_created_date_time=microsoft_graph_remote_item_created_date_time_created_date_time, file=file, file_system_info_remote_item_file_system_info=microsoft_graph_file_system_info_file_system_info, folder=folder, id_remote_item_id=microsoft_graph_remote_item_id, image_remote_item_image=microsoft_graph_image, last_modified_by=last_modified_by, last_modified_date_time_remote_item_last_modified_date_time=microsoft_graph_remote_item_last_modified_date_time_last_modified_date_time, name_remote_item_name=microsoft_graph_remote_item_name, package=package, parent_reference=parent_reference, shared=shared, sharepoint_ids_remote_item_sharepoint_ids=sharepoint_ids3, size_remote_item_size=integer_size, special_folder=special_folder, video_remote_item_video=microsoft_graph_video, web_dav_url_remote_item_web_dav_url=microsoft_graph_remote_item_web_dav_url_web_dav_url, web_url_remote_item_web_url=microsoft_graph_remote_item_web_url, queued_date_time=queued_date_time, type=type, child_count=child_count, view=view, hashes=hashes, mime_type=mime_type, processing_metadata=processing_metadata, state=state)
        content_type = kwargs.pop("content_type", "application/json")
        accept = "application/json"

        # Construct URL
        url = self.create_following.metadata['url']  # type: ignore
        path_format_arguments = {
            'drive-id': self._serialize.url("drive_id", drive_id, 'str'),
        }
        url = self._client.format_url(url, **path_format_arguments)

        # Construct parameters
        query_parameters = {}  # type: Dict[str, Any]

        # Construct headers
        header_parameters = {}  # type: Dict[str, Any]
        header_parameters['Content-Type'] = self._serialize.header("content_type", content_type, 'str')
        header_parameters['Accept'] = self._serialize.header("accept", accept, 'str')
        header_parameters['Accept'] = 'application/json'

        body_content_kwargs = {}  # type: Dict[str, Any]
        body_content = self._serialize.body(_body, 'MicrosoftGraphDriveItem')
        body_content_kwargs['content'] = body_content
        request = self._client.post(url, query_parameters, header_parameters, **body_content_kwargs)

        pipeline_response = self._client._pipeline.run(request, stream=False, **kwargs)
        response = pipeline_response.http_response

        if response.status_code not in [201]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            error = self._deserialize(models.OdataError, response)
            raise HttpResponseError(response=response, model=error, error_format=ARMErrorFormat)

        deserialized = self._deserialize('MicrosoftGraphDriveItem', pipeline_response)

        if cls:
            return cls(pipeline_response, deserialized, {})

        return deserialized
    create_following.metadata = {'url': '/drives/{drive-id}/following'}  # type: ignore

    def get_following(
        self,
        drive_id,  # type: str
        drive_item_id,  # type: str
        select=None,  # type: Optional[List[Union[str, "models.Enum67"]]]
        expand=None,  # type: Optional[List[Union[str, "models.Get3ItemsItem"]]]
        **kwargs  # type: Any
    ):
        # type: (...) -> "models.MicrosoftGraphDriveItem"
        """Get following from drives.

        Get following from drives.

        :param drive_id: key: id of drive.
        :type drive_id: str
        :param drive_item_id: key: id of driveItem.
        :type drive_item_id: str
        :param select: Select properties to be returned.
        :type select: list[str or ~files.models.Enum67]
        :param expand: Expand related entities.
        :type expand: list[str or ~files.models.Get3ItemsItem]
        :keyword callable cls: A custom type or function that will be passed the direct response
        :return: MicrosoftGraphDriveItem, or the result of cls(response)
        :rtype: ~files.models.MicrosoftGraphDriveItem
        :raises: ~azure.core.exceptions.HttpResponseError
        """
        cls = kwargs.pop('cls', None)  # type: ClsType["models.MicrosoftGraphDriveItem"]
        error_map = {404: ResourceNotFoundError, 409: ResourceExistsError}
        error_map.update(kwargs.pop('error_map', {}))
        accept = "application/json"

        # Construct URL
        url = self.get_following.metadata['url']  # type: ignore
        path_format_arguments = {
            'drive-id': self._serialize.url("drive_id", drive_id, 'str'),
            'driveItem-id': self._serialize.url("drive_item_id", drive_item_id, 'str'),
        }
        url = self._client.format_url(url, **path_format_arguments)

        # Construct parameters
        query_parameters = {}  # type: Dict[str, Any]
        if select is not None:
            query_parameters['$select'] = self._serialize.query("select", select, '[str]', div=',')
        if expand is not None:
            query_parameters['$expand'] = self._serialize.query("expand", expand, '[str]', div=',')

        # Construct headers
        header_parameters = {}  # type: Dict[str, Any]
        header_parameters['Accept'] = self._serialize.header("accept", accept, 'str')
        header_parameters['Accept'] = 'application/json'

        request = self._client.get(url, query_parameters, header_parameters)
        pipeline_response = self._client._pipeline.run(request, stream=False, **kwargs)
        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            error = self._deserialize(models.OdataError, response)
            raise HttpResponseError(response=response, model=error, error_format=ARMErrorFormat)

        deserialized = self._deserialize('MicrosoftGraphDriveItem', pipeline_response)

        if cls:
            return cls(pipeline_response, deserialized, {})

        return deserialized
    get_following.metadata = {'url': '/drives/{drive-id}/following/{driveItem-id}'}  # type: ignore

    def update_following(
        self,
        drive_id,  # type: str
        drive_item_id,  # type: str
        id=None,  # type: Optional[str]
        created_date_time=None,  # type: Optional[datetime.datetime]
        description=None,  # type: Optional[str]
        e_tag=None,  # type: Optional[str]
        last_modified_date_time=None,  # type: Optional[datetime.datetime]
        name=None,  # type: Optional[str]
        web_url=None,  # type: Optional[str]
        created_by_user=None,  # type: Optional["models.MicrosoftGraphUser"]
        last_modified_by_user=None,  # type: Optional["models.MicrosoftGraphUser"]
        microsoft_graph_item_reference_drive_id=None,  # type: Optional[str]
        drive_type=None,  # type: Optional[str]
        microsoft_graph_item_reference_id=None,  # type: Optional[str]
        microsoft_graph_item_reference_name=None,  # type: Optional[str]
        path=None,  # type: Optional[str]
        share_id=None,  # type: Optional[str]
        sharepoint_ids=None,  # type: Optional["models.MicrosoftGraphSharepointIds"]
        site_id=None,  # type: Optional[str]
        display_name=None,  # type: Optional[str]
        microsoft_graph_identity_id=None,  # type: Optional[str]
        microsoft_graph_identity_display_name=None,  # type: Optional[str]
        id1=None,  # type: Optional[str]
        display_name1=None,  # type: Optional[str]
        id2=None,  # type: Optional[str]
        display_name2=None,  # type: Optional[str]
        id3=None,  # type: Optional[str]
        display_name3=None,  # type: Optional[str]
        id4=None,  # type: Optional[str]
        display_name4=None,  # type: Optional[str]
        id5=None,  # type: Optional[str]
        audio=None,  # type: Optional["models.MicrosoftGraphAudio"]
        content=None,  # type: Optional[bytes]
        c_tag=None,  # type: Optional[str]
        file_system_info=None,  # type: Optional["models.MicrosoftGraphFileSystemInfo"]
        image=None,  # type: Optional["models.MicrosoftGraphImage"]
        location=None,  # type: Optional["models.MicrosoftGraphGeoCoordinates"]
        photo=None,  # type: Optional["models.MicrosoftGraphPhoto"]
        publication=None,  # type: Optional["models.MicrosoftGraphPublicationFacet"]
        root=None,  # type: Optional[Dict[str, object]]
        microsoft_graph_sharepoint_ids=None,  # type: Optional["models.MicrosoftGraphSharepointIds"]
        size=None,  # type: Optional[int]
        video=None,  # type: Optional["models.MicrosoftGraphVideo"]
        web_dav_url=None,  # type: Optional[str]
        analytics=None,  # type: Optional["models.MicrosoftGraphItemAnalytics"]
        children=None,  # type: Optional[List["models.MicrosoftGraphDriveItem"]]
        permissions=None,  # type: Optional[List["models.MicrosoftGraphPermission"]]
        subscriptions=None,  # type: Optional[List["models.MicrosoftGraphSubscription"]]
        thumbnails=None,  # type: Optional[List["models.MicrosoftGraphThumbnailSet"]]
        versions=None,  # type: Optional[List["models.MicrosoftGraphDriveItemVersion"]]
        microsoft_graph_entity_id=None,  # type: Optional[str]
        microsoft_graph_base_item_created_date_time_created_date_time=None,  # type: Optional[datetime.datetime]
        microsoft_graph_base_item_description=None,  # type: Optional[str]
        microsoft_graph_base_item_e_tag=None,  # type: Optional[str]
        microsoft_graph_base_item_last_modified_date_time_last_modified_date_time=None,  # type: Optional[datetime.datetime]
        microsoft_graph_base_item_name=None,  # type: Optional[str]
        microsoft_graph_base_item_web_url=None,  # type: Optional[str]
        microsoft_graph_user_created_by_user=None,  # type: Optional["models.MicrosoftGraphUser"]
        microsoft_graph_user_last_modified_by_user=None,  # type: Optional["models.MicrosoftGraphUser"]
        drive_id1=None,  # type: Optional[str]
        microsoft_graph_item_reference_drive_type=None,  # type: Optional[str]
        id6=None,  # type: Optional[str]
        name1=None,  # type: Optional[str]
        microsoft_graph_item_reference_path=None,  # type: Optional[str]
        microsoft_graph_item_reference_share_id=None,  # type: Optional[str]
        sharepoint_ids1=None,  # type: Optional["models.MicrosoftGraphSharepointIds"]
        microsoft_graph_item_reference_site_id=None,  # type: Optional[str]
        display_name5=None,  # type: Optional[str]
        id7=None,  # type: Optional[str]
        display_name6=None,  # type: Optional[str]
        id8=None,  # type: Optional[str]
        display_name7=None,  # type: Optional[str]
        id9=None,  # type: Optional[str]
        display_name8=None,  # type: Optional[str]
        id10=None,  # type: Optional[str]
        display_name9=None,  # type: Optional[str]
        id11=None,  # type: Optional[str]
        display_name10=None,  # type: Optional[str]
        id12=None,  # type: Optional[str]
        content_type_parameter=None,  # type: Optional["models.MicrosoftGraphContentTypeInfo"]
        sharepoint_ids2=None,  # type: Optional["models.MicrosoftGraphSharepointIds"]
        microsoft_graph_item_analytics=None,  # type: Optional["models.MicrosoftGraphItemAnalytics"]
        drive_item=None,  # type: Optional["models.MicrosoftGraphDriveItem"]
        microsoft_graph_list_item_versions=None,  # type: Optional[List["models.MicrosoftGraphListItemVersion"]]
        id13=None,  # type: Optional[str]
        id14=None,  # type: Optional[str]
        application=None,  # type: Optional["models.MicrosoftGraphWorkbookApplication"]
        comments=None,  # type: Optional[List["models.MicrosoftGraphWorkbookComment"]]
        functions=None,  # type: Optional["models.MicrosoftGraphWorkbookFunctions"]
        names=None,  # type: Optional[List["models.MicrosoftGraphWorkbookNamedItem"]]
        operations=None,  # type: Optional[List["models.MicrosoftGraphWorkbookOperation"]]
        tables=None,  # type: Optional[List["models.MicrosoftGraphWorkbookTable"]]
        worksheets=None,  # type: Optional[List["models.MicrosoftGraphWorkbookWorksheet"]]
        microsoft_graph_special_folder_name=None,  # type: Optional[str]
        owner=None,  # type: Optional["models.MicrosoftGraphIdentitySet"]
        scope=None,  # type: Optional[str]
        shared_by=None,  # type: Optional["models.MicrosoftGraphIdentitySet"]
        shared_date_time=None,  # type: Optional[datetime.datetime]
        on_click_telemetry_url=None,  # type: Optional[str]
        created_by=None,  # type: Optional["models.MicrosoftGraphIdentitySet"]
        microsoft_graph_remote_item_created_date_time_created_date_time=None,  # type: Optional[datetime.datetime]
        file=None,  # type: Optional["models.MicrosoftGraphFile"]
        microsoft_graph_file_system_info_file_system_info=None,  # type: Optional["models.MicrosoftGraphFileSystemInfo"]
        folder=None,  # type: Optional["models.MicrosoftGraphFolder"]
        microsoft_graph_remote_item_id=None,  # type: Optional[str]
        microsoft_graph_image=None,  # type: Optional["models.MicrosoftGraphImage"]
        last_modified_by=None,  # type: Optional["models.MicrosoftGraphIdentitySet"]
        microsoft_graph_remote_item_last_modified_date_time_last_modified_date_time=None,  # type: Optional[datetime.datetime]
        microsoft_graph_remote_item_name=None,  # type: Optional[str]
        package=None,  # type: Optional["models.MicrosoftGraphPackage"]
        parent_reference=None,  # type: Optional["models.MicrosoftGraphItemReference"]
        shared=None,  # type: Optional["models.MicrosoftGraphShared"]
        sharepoint_ids3=None,  # type: Optional["models.MicrosoftGraphSharepointIds"]
        integer_size=None,  # type: Optional[int]
        special_folder=None,  # type: Optional["models.MicrosoftGraphSpecialFolder"]
        microsoft_graph_video=None,  # type: Optional["models.MicrosoftGraphVideo"]
        microsoft_graph_remote_item_web_dav_url_web_dav_url=None,  # type: Optional[str]
        microsoft_graph_remote_item_web_url=None,  # type: Optional[str]
        queued_date_time=None,  # type: Optional[datetime.datetime]
        type=None,  # type: Optional[str]
        child_count=None,  # type: Optional[int]
        view=None,  # type: Optional["models.MicrosoftGraphFolderView"]
        hashes=None,  # type: Optional["models.MicrosoftGraphHashes"]
        mime_type=None,  # type: Optional[str]
        processing_metadata=None,  # type: Optional[bool]
        state=None,  # type: Optional[str]
        **kwargs  # type: Any
    ):
        # type: (...) -> None
        """Update the navigation property following in drives.

        Update the navigation property following in drives.

        :param drive_id: key: id of drive.
        :type drive_id: str
        :param drive_item_id: key: id of driveItem.
        :type drive_item_id: str
        :param id: Read-only.
        :type id: str
        :param created_date_time: Date and time of item creation. Read-only.
        :type created_date_time: ~datetime.datetime
        :param description: Provides a user-visible description of the item. Optional.
        :type description: str
        :param e_tag: ETag for the item. Read-only.
        :type e_tag: str
        :param last_modified_date_time: Date and time the item was last modified. Read-only.
        :type last_modified_date_time: ~datetime.datetime
        :param name: The name of the item. Read-write.
        :type name: str
        :param web_url: URL that displays the resource in the browser. Read-only.
        :type web_url: str
        :param created_by_user: Represents an Azure Active Directory user object.
        :type created_by_user: ~files.models.MicrosoftGraphUser
        :param last_modified_by_user: Represents an Azure Active Directory user object.
        :type last_modified_by_user: ~files.models.MicrosoftGraphUser
        :param microsoft_graph_item_reference_drive_id: Unique identifier of the drive instance that
         contains the item. Read-only.
        :type microsoft_graph_item_reference_drive_id: str
        :param drive_type: Identifies the type of drive. See [drive][] resource for values.
        :type drive_type: str
        :param microsoft_graph_item_reference_id: Unique identifier of the item in the drive. Read-
         only.
        :type microsoft_graph_item_reference_id: str
        :param microsoft_graph_item_reference_name: The name of the item being referenced. Read-only.
        :type microsoft_graph_item_reference_name: str
        :param path: Path that can be used to navigate to the item. Read-only.
        :type path: str
        :param share_id: A unique identifier for a shared resource that can be accessed via the
         [Shares][] API.
        :type share_id: str
        :param sharepoint_ids: sharepointIds.
        :type sharepoint_ids: ~files.models.MicrosoftGraphSharepointIds
        :param site_id:
        :type site_id: str
        :param display_name: The identity's display name. Note that this may not always be available or
         up to date. For example, if a user changes their display name, the API may show the new value
         in a future response, but the items associated with the user won't show up as having changed
         when using delta.
        :type display_name: str
        :param microsoft_graph_identity_id: Unique identifier for the identity.
        :type microsoft_graph_identity_id: str
        :param microsoft_graph_identity_display_name: The identity's display name. Note that this may
         not always be available or up to date. For example, if a user changes their display name, the
         API may show the new value in a future response, but the items associated with the user won't
         show up as having changed when using delta.
        :type microsoft_graph_identity_display_name: str
        :param id1: Unique identifier for the identity.
        :type id1: str
        :param display_name1: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name1: str
        :param id2: Unique identifier for the identity.
        :type id2: str
        :param display_name2: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name2: str
        :param id3: Unique identifier for the identity.
        :type id3: str
        :param display_name3: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name3: str
        :param id4: Unique identifier for the identity.
        :type id4: str
        :param display_name4: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name4: str
        :param id5: Unique identifier for the identity.
        :type id5: str
        :param audio: audio.
        :type audio: ~files.models.MicrosoftGraphAudio
        :param content: The content stream, if the item represents a file.
        :type content: bytes
        :param c_tag: An eTag for the content of the item. This eTag is not changed if only the
         metadata is changed. Note This property is not returned if the item is a folder. Read-only.
        :type c_tag: str
        :param file_system_info: fileSystemInfo.
        :type file_system_info: ~files.models.MicrosoftGraphFileSystemInfo
        :param image: image.
        :type image: ~files.models.MicrosoftGraphImage
        :param location: geoCoordinates.
        :type location: ~files.models.MicrosoftGraphGeoCoordinates
        :param photo: photo.
        :type photo: ~files.models.MicrosoftGraphPhoto
        :param publication: publicationFacet.
        :type publication: ~files.models.MicrosoftGraphPublicationFacet
        :param root: root.
        :type root: dict[str, object]
        :param microsoft_graph_sharepoint_ids: sharepointIds.
        :type microsoft_graph_sharepoint_ids: ~files.models.MicrosoftGraphSharepointIds
        :param size: Size of the item in bytes. Read-only.
        :type size: long
        :param video: video.
        :type video: ~files.models.MicrosoftGraphVideo
        :param web_dav_url: WebDAV compatible URL for the item.
        :type web_dav_url: str
        :param analytics: itemAnalytics.
        :type analytics: ~files.models.MicrosoftGraphItemAnalytics
        :param children: Collection containing Item objects for the immediate children of Item. Only
         items representing folders have children. Read-only. Nullable.
        :type children: list[~files.models.MicrosoftGraphDriveItem]
        :param permissions: The set of permissions for the item. Read-only. Nullable.
        :type permissions: list[~files.models.MicrosoftGraphPermission]
        :param subscriptions: The set of subscriptions on the item. Only supported on the root of a
         drive.
        :type subscriptions: list[~files.models.MicrosoftGraphSubscription]
        :param thumbnails: Collection containing [ThumbnailSet][] objects associated with the item. For
         more info, see [getting thumbnails][]. Read-only. Nullable.
        :type thumbnails: list[~files.models.MicrosoftGraphThumbnailSet]
        :param versions: The list of previous versions of the item. For more info, see [getting
         previous versions][]. Read-only. Nullable.
        :type versions: list[~files.models.MicrosoftGraphDriveItemVersion]
        :param microsoft_graph_entity_id: Read-only.
        :type microsoft_graph_entity_id: str
        :param microsoft_graph_base_item_created_date_time_created_date_time: Date and time of item
         creation. Read-only.
        :type microsoft_graph_base_item_created_date_time_created_date_time: ~datetime.datetime
        :param microsoft_graph_base_item_description: Provides a user-visible description of the item.
         Optional.
        :type microsoft_graph_base_item_description: str
        :param microsoft_graph_base_item_e_tag: ETag for the item. Read-only.
        :type microsoft_graph_base_item_e_tag: str
        :param microsoft_graph_base_item_last_modified_date_time_last_modified_date_time: Date and time
         the item was last modified. Read-only.
        :type microsoft_graph_base_item_last_modified_date_time_last_modified_date_time: ~datetime.datetime
        :param microsoft_graph_base_item_name: The name of the item. Read-write.
        :type microsoft_graph_base_item_name: str
        :param microsoft_graph_base_item_web_url: URL that displays the resource in the browser. Read-
         only.
        :type microsoft_graph_base_item_web_url: str
        :param microsoft_graph_user_created_by_user: Represents an Azure Active Directory user object.
        :type microsoft_graph_user_created_by_user: ~files.models.MicrosoftGraphUser
        :param microsoft_graph_user_last_modified_by_user: Represents an Azure Active Directory user
         object.
        :type microsoft_graph_user_last_modified_by_user: ~files.models.MicrosoftGraphUser
        :param drive_id1: Unique identifier of the drive instance that contains the item. Read-only.
        :type drive_id1: str
        :param microsoft_graph_item_reference_drive_type: Identifies the type of drive. See [drive][]
         resource for values.
        :type microsoft_graph_item_reference_drive_type: str
        :param id6: Unique identifier of the item in the drive. Read-only.
        :type id6: str
        :param name1: The name of the item being referenced. Read-only.
        :type name1: str
        :param microsoft_graph_item_reference_path: Path that can be used to navigate to the item.
         Read-only.
        :type microsoft_graph_item_reference_path: str
        :param microsoft_graph_item_reference_share_id: A unique identifier for a shared resource that
         can be accessed via the [Shares][] API.
        :type microsoft_graph_item_reference_share_id: str
        :param sharepoint_ids1: sharepointIds.
        :type sharepoint_ids1: ~files.models.MicrosoftGraphSharepointIds
        :param microsoft_graph_item_reference_site_id:
        :type microsoft_graph_item_reference_site_id: str
        :param display_name5: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name5: str
        :param id7: Unique identifier for the identity.
        :type id7: str
        :param display_name6: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name6: str
        :param id8: Unique identifier for the identity.
        :type id8: str
        :param display_name7: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name7: str
        :param id9: Unique identifier for the identity.
        :type id9: str
        :param display_name8: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name8: str
        :param id10: Unique identifier for the identity.
        :type id10: str
        :param display_name9: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name9: str
        :param id11: Unique identifier for the identity.
        :type id11: str
        :param display_name10: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name10: str
        :param id12: Unique identifier for the identity.
        :type id12: str
        :param content_type_parameter: contentTypeInfo.
        :type content_type_parameter: ~files.models.MicrosoftGraphContentTypeInfo
        :param sharepoint_ids2: sharepointIds.
        :type sharepoint_ids2: ~files.models.MicrosoftGraphSharepointIds
        :param microsoft_graph_item_analytics: itemAnalytics.
        :type microsoft_graph_item_analytics: ~files.models.MicrosoftGraphItemAnalytics
        :param drive_item: driveItem.
        :type drive_item: ~files.models.MicrosoftGraphDriveItem
        :param microsoft_graph_list_item_versions: The list of previous versions of the list item.
        :type microsoft_graph_list_item_versions: list[~files.models.MicrosoftGraphListItemVersion]
        :param id13: Read-only.
        :type id13: str
        :param id14: Read-only.
        :type id14: str
        :param application: workbookApplication.
        :type application: ~files.models.MicrosoftGraphWorkbookApplication
        :param comments:
        :type comments: list[~files.models.MicrosoftGraphWorkbookComment]
        :param functions: workbookFunctions.
        :type functions: ~files.models.MicrosoftGraphWorkbookFunctions
        :param names: Represents a collection of workbook scoped named items (named ranges and
         constants). Read-only.
        :type names: list[~files.models.MicrosoftGraphWorkbookNamedItem]
        :param operations: The status of workbook operations. Getting an operation collection is not
         supported, but you can get the status of a long-running operation if the Location header is
         returned in the response. Read-only.
        :type operations: list[~files.models.MicrosoftGraphWorkbookOperation]
        :param tables: Represents a collection of tables associated with the workbook. Read-only.
        :type tables: list[~files.models.MicrosoftGraphWorkbookTable]
        :param worksheets: Represents a collection of worksheets associated with the workbook. Read-
         only.
        :type worksheets: list[~files.models.MicrosoftGraphWorkbookWorksheet]
        :param microsoft_graph_special_folder_name: The unique identifier for this item in the
         /drive/special collection.
        :type microsoft_graph_special_folder_name: str
        :param owner: identitySet.
        :type owner: ~files.models.MicrosoftGraphIdentitySet
        :param scope: Indicates the scope of how the item is shared: anonymous, organization, or users.
         Read-only.
        :type scope: str
        :param shared_by: identitySet.
        :type shared_by: ~files.models.MicrosoftGraphIdentitySet
        :param shared_date_time: The UTC date and time when the item was shared. Read-only.
        :type shared_date_time: ~datetime.datetime
        :param on_click_telemetry_url: A callback URL that can be used to record telemetry information.
         The application should issue a GET on this URL if the user interacts with this item to improve
         the quality of results.
        :type on_click_telemetry_url: str
        :param created_by: identitySet.
        :type created_by: ~files.models.MicrosoftGraphIdentitySet
        :param microsoft_graph_remote_item_created_date_time_created_date_time: Date and time of item
         creation. Read-only.
        :type microsoft_graph_remote_item_created_date_time_created_date_time: ~datetime.datetime
        :param file: file.
        :type file: ~files.models.MicrosoftGraphFile
        :param microsoft_graph_file_system_info_file_system_info: fileSystemInfo.
        :type microsoft_graph_file_system_info_file_system_info: ~files.models.MicrosoftGraphFileSystemInfo
        :param folder: folder.
        :type folder: ~files.models.MicrosoftGraphFolder
        :param microsoft_graph_remote_item_id: Unique identifier for the remote item in its drive.
         Read-only.
        :type microsoft_graph_remote_item_id: str
        :param microsoft_graph_image: image.
        :type microsoft_graph_image: ~files.models.MicrosoftGraphImage
        :param last_modified_by: identitySet.
        :type last_modified_by: ~files.models.MicrosoftGraphIdentitySet
        :param microsoft_graph_remote_item_last_modified_date_time_last_modified_date_time: Date and
         time the item was last modified. Read-only.
        :type microsoft_graph_remote_item_last_modified_date_time_last_modified_date_time: ~datetime.datetime
        :param microsoft_graph_remote_item_name: Optional. Filename of the remote item. Read-only.
        :type microsoft_graph_remote_item_name: str
        :param package: package.
        :type package: ~files.models.MicrosoftGraphPackage
        :param parent_reference: itemReference.
        :type parent_reference: ~files.models.MicrosoftGraphItemReference
        :param shared: shared.
        :type shared: ~files.models.MicrosoftGraphShared
        :param sharepoint_ids3: sharepointIds.
        :type sharepoint_ids3: ~files.models.MicrosoftGraphSharepointIds
        :param integer_size: Size of the remote item. Read-only.
        :type integer_size: long
        :param special_folder: specialFolder.
        :type special_folder: ~files.models.MicrosoftGraphSpecialFolder
        :param microsoft_graph_video: video.
        :type microsoft_graph_video: ~files.models.MicrosoftGraphVideo
        :param microsoft_graph_remote_item_web_dav_url_web_dav_url: DAV compatible URL for the item.
        :type microsoft_graph_remote_item_web_dav_url_web_dav_url: str
        :param microsoft_graph_remote_item_web_url: URL that displays the resource in the browser.
         Read-only.
        :type microsoft_graph_remote_item_web_url: str
        :param queued_date_time: Date and time the pending binary operation was queued in UTC time.
         Read-only.
        :type queued_date_time: ~datetime.datetime
        :param type: A string indicating the type of package. While oneNote is the only currently
         defined value, you should expect other package types to be returned and handle them
         accordingly.
        :type type: str
        :param child_count: Number of children contained immediately within this container.
        :type child_count: int
        :param view: folderView.
        :type view: ~files.models.MicrosoftGraphFolderView
        :param hashes: hashes.
        :type hashes: ~files.models.MicrosoftGraphHashes
        :param mime_type: The MIME type for the file. This is determined by logic on the server and
         might not be the value provided when the file was uploaded. Read-only.
        :type mime_type: str
        :param processing_metadata:
        :type processing_metadata: bool
        :param state: Represents the state of the deleted item.
        :type state: str
        :keyword callable cls: A custom type or function that will be passed the direct response
        :return: None, or the result of cls(response)
        :rtype: None
        :raises: ~azure.core.exceptions.HttpResponseError
        """
        cls = kwargs.pop('cls', None)  # type: ClsType[None]
        error_map = {404: ResourceNotFoundError, 409: ResourceExistsError}
        error_map.update(kwargs.pop('error_map', {}))

        _body = models.MicrosoftGraphDriveItem(id=id, created_date_time=created_date_time, description=description, e_tag=e_tag, last_modified_date_time=last_modified_date_time, name=name, web_url=web_url, created_by_user=created_by_user, last_modified_by_user=last_modified_by_user, drive_id=microsoft_graph_item_reference_drive_id, drive_type=drive_type, id_parent_reference_id=microsoft_graph_item_reference_id, name_parent_reference_name=microsoft_graph_item_reference_name, path=path, share_id=share_id, sharepoint_ids=sharepoint_ids, site_id=site_id, display_name_last_modified_by_user_display_name=display_name, id_last_modified_by_user_id=microsoft_graph_identity_id, display_name_last_modified_by_device_display_name=microsoft_graph_identity_display_name, id_last_modified_by_device_id=id1, display_name_last_modified_by_application_display_name=display_name1, id_last_modified_by_application_id=id2, display_name_created_by_user_display_name=display_name2, id_created_by_user_id=id3, display_name_created_by_device_display_name=display_name3, id_created_by_device_id=id4, display_name_created_by_application_display_name=display_name4, id_created_by_application_id=id5, audio=audio, content=content, c_tag=c_tag, file_system_info=file_system_info, image=image, location=location, photo=photo, publication=publication, root=root, sharepoint_ids=microsoft_graph_sharepoint_ids, size=size, video=video, web_dav_url=web_dav_url, analytics=analytics, children=children, permissions=permissions, subscriptions=subscriptions, thumbnails=thumbnails, versions=versions, id_list_item_id=microsoft_graph_entity_id, created_date_time_list_item_created_date_time=microsoft_graph_base_item_created_date_time_created_date_time, description_list_item_description=microsoft_graph_base_item_description, e_tag_list_item_e_tag=microsoft_graph_base_item_e_tag, last_modified_date_time_list_item_last_modified_date_time=microsoft_graph_base_item_last_modified_date_time_last_modified_date_time, name_list_item_name=microsoft_graph_base_item_name, web_url_list_item_web_url=microsoft_graph_base_item_web_url, created_by_user_list_item_created_by_user=microsoft_graph_user_created_by_user, last_modified_by_user_list_item_last_modified_by_user=microsoft_graph_user_last_modified_by_user, drive_id_list_item_parent_reference_drive_id=drive_id1, drive_type_list_item_parent_reference_drive_type=microsoft_graph_item_reference_drive_type, id_list_item_parent_reference_id=id6, name_list_item_parent_reference_name=name1, path_list_item_parent_reference_path=microsoft_graph_item_reference_path, share_id_list_item_parent_reference_share_id=microsoft_graph_item_reference_share_id, sharepoint_ids_list_item_parent_reference_sharepoint_ids=sharepoint_ids1, site_id_list_item_parent_reference_site_id=microsoft_graph_item_reference_site_id, display_name_list_item_last_modified_by_user_display_name=display_name5, id_list_item_last_modified_by_user_id=id7, display_name_list_item_last_modified_by_device_display_name=display_name6, id_list_item_last_modified_by_device_id=id8, display_name_list_item_last_modified_by_application_display_name=display_name7, id_list_item_last_modified_by_application_id=id9, display_name_list_item_created_by_user_display_name=display_name8, id_list_item_created_by_user_id=id10, display_name_list_item_created_by_device_display_name=display_name9, id_list_item_created_by_device_id=id11, display_name_list_item_created_by_application_display_name=display_name10, id_list_item_created_by_application_id=id12, content_type=content_type_parameter, sharepoint_ids_list_item_sharepoint_ids=sharepoint_ids2, analytics_list_item_analytics=microsoft_graph_item_analytics, drive_item=drive_item, versions_list_item_versions=microsoft_graph_list_item_versions, id_list_item_fields_id=id13, id_workbook_id=id14, application=application, comments=comments, functions=functions, names=names, operations=operations, tables=tables, worksheets=worksheets, name_special_folder_name=microsoft_graph_special_folder_name, owner=owner, scope=scope, shared_by=shared_by, shared_date_time=shared_date_time, on_click_telemetry_url=on_click_telemetry_url, created_by=created_by, created_date_time_remote_item_created_date_time=microsoft_graph_remote_item_created_date_time_created_date_time, file=file, file_system_info_remote_item_file_system_info=microsoft_graph_file_system_info_file_system_info, folder=folder, id_remote_item_id=microsoft_graph_remote_item_id, image_remote_item_image=microsoft_graph_image, last_modified_by=last_modified_by, last_modified_date_time_remote_item_last_modified_date_time=microsoft_graph_remote_item_last_modified_date_time_last_modified_date_time, name_remote_item_name=microsoft_graph_remote_item_name, package=package, parent_reference=parent_reference, shared=shared, sharepoint_ids_remote_item_sharepoint_ids=sharepoint_ids3, size_remote_item_size=integer_size, special_folder=special_folder, video_remote_item_video=microsoft_graph_video, web_dav_url_remote_item_web_dav_url=microsoft_graph_remote_item_web_dav_url_web_dav_url, web_url_remote_item_web_url=microsoft_graph_remote_item_web_url, queued_date_time=queued_date_time, type=type, child_count=child_count, view=view, hashes=hashes, mime_type=mime_type, processing_metadata=processing_metadata, state=state)
        content_type = kwargs.pop("content_type", "application/json")
        accept = "application/json"

        # Construct URL
        url = self.update_following.metadata['url']  # type: ignore
        path_format_arguments = {
            'drive-id': self._serialize.url("drive_id", drive_id, 'str'),
            'driveItem-id': self._serialize.url("drive_item_id", drive_item_id, 'str'),
        }
        url = self._client.format_url(url, **path_format_arguments)

        # Construct parameters
        query_parameters = {}  # type: Dict[str, Any]

        # Construct headers
        header_parameters = {}  # type: Dict[str, Any]
        header_parameters['Content-Type'] = self._serialize.header("content_type", content_type, 'str')
        header_parameters['Accept'] = self._serialize.header("accept", accept, 'str')

        body_content_kwargs = {}  # type: Dict[str, Any]
        body_content = self._serialize.body(_body, 'MicrosoftGraphDriveItem')
        body_content_kwargs['content'] = body_content
        request = self._client.patch(url, query_parameters, header_parameters, **body_content_kwargs)

        pipeline_response = self._client._pipeline.run(request, stream=False, **kwargs)
        response = pipeline_response.http_response

        if response.status_code not in [204]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            error = self._deserialize(models.OdataError, response)
            raise HttpResponseError(response=response, model=error, error_format=ARMErrorFormat)

        if cls:
            return cls(pipeline_response, None, {})

    update_following.metadata = {'url': '/drives/{drive-id}/following/{driveItem-id}'}  # type: ignore

    def delete_following(
        self,
        drive_id,  # type: str
        drive_item_id,  # type: str
        if_match=None,  # type: Optional[str]
        **kwargs  # type: Any
    ):
        # type: (...) -> None
        """Delete navigation property following for drives.

        Delete navigation property following for drives.

        :param drive_id: key: id of drive.
        :type drive_id: str
        :param drive_item_id: key: id of driveItem.
        :type drive_item_id: str
        :param if_match: ETag.
        :type if_match: str
        :keyword callable cls: A custom type or function that will be passed the direct response
        :return: None, or the result of cls(response)
        :rtype: None
        :raises: ~azure.core.exceptions.HttpResponseError
        """
        cls = kwargs.pop('cls', None)  # type: ClsType[None]
        error_map = {404: ResourceNotFoundError, 409: ResourceExistsError}
        error_map.update(kwargs.pop('error_map', {}))
        accept = "application/json"

        # Construct URL
        url = self.delete_following.metadata['url']  # type: ignore
        path_format_arguments = {
            'drive-id': self._serialize.url("drive_id", drive_id, 'str'),
            'driveItem-id': self._serialize.url("drive_item_id", drive_item_id, 'str'),
        }
        url = self._client.format_url(url, **path_format_arguments)

        # Construct parameters
        query_parameters = {}  # type: Dict[str, Any]

        # Construct headers
        header_parameters = {}  # type: Dict[str, Any]
        if if_match is not None:
            header_parameters['If-Match'] = self._serialize.header("if_match", if_match, 'str')
        header_parameters['Accept'] = self._serialize.header("accept", accept, 'str')

        request = self._client.delete(url, query_parameters, header_parameters)
        pipeline_response = self._client._pipeline.run(request, stream=False, **kwargs)
        response = pipeline_response.http_response

        if response.status_code not in [204]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            error = self._deserialize(models.OdataError, response)
            raise HttpResponseError(response=response, model=error, error_format=ARMErrorFormat)

        if cls:
            return cls(pipeline_response, None, {})

    delete_following.metadata = {'url': '/drives/{drive-id}/following/{driveItem-id}'}  # type: ignore

    def list_item(
        self,
        drive_id,  # type: str
        orderby=None,  # type: Optional[List[Union[str, "models.Enum69"]]]
        select=None,  # type: Optional[List[Union[str, "models.Enum70"]]]
        expand=None,  # type: Optional[List[Union[str, "models.Enum71"]]]
        **kwargs  # type: Any
    ):
        # type: (...) -> Iterable["models.CollectionOfDriveItem0"]
        """Get items from drives.

        Get items from drives.

        :param drive_id: key: id of drive.
        :type drive_id: str
        :param orderby: Order items by property values.
        :type orderby: list[str or ~files.models.Enum69]
        :param select: Select properties to be returned.
        :type select: list[str or ~files.models.Enum70]
        :param expand: Expand related entities.
        :type expand: list[str or ~files.models.Enum71]
        :keyword callable cls: A custom type or function that will be passed the direct response
        :return: An iterator like instance of either CollectionOfDriveItem0 or the result of cls(response)
        :rtype: ~azure.core.paging.ItemPaged[~files.models.CollectionOfDriveItem0]
        :raises: ~azure.core.exceptions.HttpResponseError
        """
        cls = kwargs.pop('cls', None)  # type: ClsType["models.CollectionOfDriveItem0"]
        error_map = {404: ResourceNotFoundError, 409: ResourceExistsError}
        error_map.update(kwargs.pop('error_map', {}))
        accept = "application/json"

        def prepare_request(next_link=None):
            # Construct headers
            header_parameters = {}  # type: Dict[str, Any]
            header_parameters['Accept'] = self._serialize.header("accept", accept, 'str')
            header_parameters['Accept'] = 'application/json'

            if not next_link:
                # Construct URL
                url = self.list_item.metadata['url']  # type: ignore
                path_format_arguments = {
                    'drive-id': self._serialize.url("drive_id", drive_id, 'str'),
                }
                url = self._client.format_url(url, **path_format_arguments)
                # Construct parameters
                query_parameters = {}  # type: Dict[str, Any]
                if self._config.top is not None:
                    query_parameters['$top'] = self._serialize.query("self._config.top", self._config.top, 'int', minimum=0)
                if self._config.skip is not None:
                    query_parameters['$skip'] = self._serialize.query("self._config.skip", self._config.skip, 'int', minimum=0)
                if self._config.search is not None:
                    query_parameters['$search'] = self._serialize.query("self._config.search", self._config.search, 'str')
                if self._config.filter is not None:
                    query_parameters['$filter'] = self._serialize.query("self._config.filter", self._config.filter, 'str')
                if self._config.count is not None:
                    query_parameters['$count'] = self._serialize.query("self._config.count", self._config.count, 'bool')
                if orderby is not None:
                    query_parameters['$orderby'] = self._serialize.query("orderby", orderby, '[str]', div=',')
                if select is not None:
                    query_parameters['$select'] = self._serialize.query("select", select, '[str]', div=',')
                if expand is not None:
                    query_parameters['$expand'] = self._serialize.query("expand", expand, '[str]', div=',')

                request = self._client.get(url, query_parameters, header_parameters)
            else:
                url = next_link
                query_parameters = {}  # type: Dict[str, Any]
                request = self._client.get(url, query_parameters, header_parameters)
            return request

        def extract_data(pipeline_response):
            deserialized = self._deserialize('CollectionOfDriveItem0', pipeline_response)
            list_of_elem = deserialized.value
            if cls:
                list_of_elem = cls(list_of_elem)
            return deserialized.odata_next_link or None, iter(list_of_elem)

        def get_next(next_link=None):
            request = prepare_request(next_link)

            pipeline_response = self._client._pipeline.run(request, stream=False, **kwargs)
            response = pipeline_response.http_response

            if response.status_code not in [200]:
                error = self._deserialize(models.OdataError, response)
                map_error(status_code=response.status_code, response=response, error_map=error_map)
                raise HttpResponseError(response=response, model=error, error_format=ARMErrorFormat)

            return pipeline_response

        return ItemPaged(
            get_next, extract_data
        )
    list_item.metadata = {'url': '/drives/{drive-id}/items'}  # type: ignore

    def create_item(
        self,
        drive_id,  # type: str
        id=None,  # type: Optional[str]
        created_date_time=None,  # type: Optional[datetime.datetime]
        description=None,  # type: Optional[str]
        e_tag=None,  # type: Optional[str]
        last_modified_date_time=None,  # type: Optional[datetime.datetime]
        name=None,  # type: Optional[str]
        web_url=None,  # type: Optional[str]
        created_by_user=None,  # type: Optional["models.MicrosoftGraphUser"]
        last_modified_by_user=None,  # type: Optional["models.MicrosoftGraphUser"]
        microsoft_graph_item_reference_drive_id=None,  # type: Optional[str]
        drive_type=None,  # type: Optional[str]
        microsoft_graph_item_reference_id=None,  # type: Optional[str]
        microsoft_graph_item_reference_name=None,  # type: Optional[str]
        path=None,  # type: Optional[str]
        share_id=None,  # type: Optional[str]
        sharepoint_ids=None,  # type: Optional["models.MicrosoftGraphSharepointIds"]
        site_id=None,  # type: Optional[str]
        display_name=None,  # type: Optional[str]
        microsoft_graph_identity_id=None,  # type: Optional[str]
        microsoft_graph_identity_display_name=None,  # type: Optional[str]
        id1=None,  # type: Optional[str]
        display_name1=None,  # type: Optional[str]
        id2=None,  # type: Optional[str]
        display_name2=None,  # type: Optional[str]
        id3=None,  # type: Optional[str]
        display_name3=None,  # type: Optional[str]
        id4=None,  # type: Optional[str]
        display_name4=None,  # type: Optional[str]
        id5=None,  # type: Optional[str]
        audio=None,  # type: Optional["models.MicrosoftGraphAudio"]
        content=None,  # type: Optional[bytes]
        c_tag=None,  # type: Optional[str]
        file_system_info=None,  # type: Optional["models.MicrosoftGraphFileSystemInfo"]
        image=None,  # type: Optional["models.MicrosoftGraphImage"]
        location=None,  # type: Optional["models.MicrosoftGraphGeoCoordinates"]
        photo=None,  # type: Optional["models.MicrosoftGraphPhoto"]
        publication=None,  # type: Optional["models.MicrosoftGraphPublicationFacet"]
        root=None,  # type: Optional[Dict[str, object]]
        microsoft_graph_sharepoint_ids=None,  # type: Optional["models.MicrosoftGraphSharepointIds"]
        size=None,  # type: Optional[int]
        video=None,  # type: Optional["models.MicrosoftGraphVideo"]
        web_dav_url=None,  # type: Optional[str]
        analytics=None,  # type: Optional["models.MicrosoftGraphItemAnalytics"]
        children=None,  # type: Optional[List["models.MicrosoftGraphDriveItem"]]
        permissions=None,  # type: Optional[List["models.MicrosoftGraphPermission"]]
        subscriptions=None,  # type: Optional[List["models.MicrosoftGraphSubscription"]]
        thumbnails=None,  # type: Optional[List["models.MicrosoftGraphThumbnailSet"]]
        versions=None,  # type: Optional[List["models.MicrosoftGraphDriveItemVersion"]]
        microsoft_graph_entity_id=None,  # type: Optional[str]
        microsoft_graph_base_item_created_date_time_created_date_time=None,  # type: Optional[datetime.datetime]
        microsoft_graph_base_item_description=None,  # type: Optional[str]
        microsoft_graph_base_item_e_tag=None,  # type: Optional[str]
        microsoft_graph_base_item_last_modified_date_time_last_modified_date_time=None,  # type: Optional[datetime.datetime]
        microsoft_graph_base_item_name=None,  # type: Optional[str]
        microsoft_graph_base_item_web_url=None,  # type: Optional[str]
        microsoft_graph_user_created_by_user=None,  # type: Optional["models.MicrosoftGraphUser"]
        microsoft_graph_user_last_modified_by_user=None,  # type: Optional["models.MicrosoftGraphUser"]
        drive_id1=None,  # type: Optional[str]
        microsoft_graph_item_reference_drive_type=None,  # type: Optional[str]
        id6=None,  # type: Optional[str]
        name1=None,  # type: Optional[str]
        microsoft_graph_item_reference_path=None,  # type: Optional[str]
        microsoft_graph_item_reference_share_id=None,  # type: Optional[str]
        sharepoint_ids1=None,  # type: Optional["models.MicrosoftGraphSharepointIds"]
        microsoft_graph_item_reference_site_id=None,  # type: Optional[str]
        display_name5=None,  # type: Optional[str]
        id7=None,  # type: Optional[str]
        display_name6=None,  # type: Optional[str]
        id8=None,  # type: Optional[str]
        display_name7=None,  # type: Optional[str]
        id9=None,  # type: Optional[str]
        display_name8=None,  # type: Optional[str]
        id10=None,  # type: Optional[str]
        display_name9=None,  # type: Optional[str]
        id11=None,  # type: Optional[str]
        display_name10=None,  # type: Optional[str]
        id12=None,  # type: Optional[str]
        content_type_parameter=None,  # type: Optional["models.MicrosoftGraphContentTypeInfo"]
        sharepoint_ids2=None,  # type: Optional["models.MicrosoftGraphSharepointIds"]
        microsoft_graph_item_analytics=None,  # type: Optional["models.MicrosoftGraphItemAnalytics"]
        drive_item=None,  # type: Optional["models.MicrosoftGraphDriveItem"]
        microsoft_graph_list_item_versions=None,  # type: Optional[List["models.MicrosoftGraphListItemVersion"]]
        id13=None,  # type: Optional[str]
        id14=None,  # type: Optional[str]
        application=None,  # type: Optional["models.MicrosoftGraphWorkbookApplication"]
        comments=None,  # type: Optional[List["models.MicrosoftGraphWorkbookComment"]]
        functions=None,  # type: Optional["models.MicrosoftGraphWorkbookFunctions"]
        names=None,  # type: Optional[List["models.MicrosoftGraphWorkbookNamedItem"]]
        operations=None,  # type: Optional[List["models.MicrosoftGraphWorkbookOperation"]]
        tables=None,  # type: Optional[List["models.MicrosoftGraphWorkbookTable"]]
        worksheets=None,  # type: Optional[List["models.MicrosoftGraphWorkbookWorksheet"]]
        microsoft_graph_special_folder_name=None,  # type: Optional[str]
        owner=None,  # type: Optional["models.MicrosoftGraphIdentitySet"]
        scope=None,  # type: Optional[str]
        shared_by=None,  # type: Optional["models.MicrosoftGraphIdentitySet"]
        shared_date_time=None,  # type: Optional[datetime.datetime]
        on_click_telemetry_url=None,  # type: Optional[str]
        created_by=None,  # type: Optional["models.MicrosoftGraphIdentitySet"]
        microsoft_graph_remote_item_created_date_time_created_date_time=None,  # type: Optional[datetime.datetime]
        file=None,  # type: Optional["models.MicrosoftGraphFile"]
        microsoft_graph_file_system_info_file_system_info=None,  # type: Optional["models.MicrosoftGraphFileSystemInfo"]
        folder=None,  # type: Optional["models.MicrosoftGraphFolder"]
        microsoft_graph_remote_item_id=None,  # type: Optional[str]
        microsoft_graph_image=None,  # type: Optional["models.MicrosoftGraphImage"]
        last_modified_by=None,  # type: Optional["models.MicrosoftGraphIdentitySet"]
        microsoft_graph_remote_item_last_modified_date_time_last_modified_date_time=None,  # type: Optional[datetime.datetime]
        microsoft_graph_remote_item_name=None,  # type: Optional[str]
        package=None,  # type: Optional["models.MicrosoftGraphPackage"]
        parent_reference=None,  # type: Optional["models.MicrosoftGraphItemReference"]
        shared=None,  # type: Optional["models.MicrosoftGraphShared"]
        sharepoint_ids3=None,  # type: Optional["models.MicrosoftGraphSharepointIds"]
        integer_size=None,  # type: Optional[int]
        special_folder=None,  # type: Optional["models.MicrosoftGraphSpecialFolder"]
        microsoft_graph_video=None,  # type: Optional["models.MicrosoftGraphVideo"]
        microsoft_graph_remote_item_web_dav_url_web_dav_url=None,  # type: Optional[str]
        microsoft_graph_remote_item_web_url=None,  # type: Optional[str]
        queued_date_time=None,  # type: Optional[datetime.datetime]
        type=None,  # type: Optional[str]
        child_count=None,  # type: Optional[int]
        view=None,  # type: Optional["models.MicrosoftGraphFolderView"]
        hashes=None,  # type: Optional["models.MicrosoftGraphHashes"]
        mime_type=None,  # type: Optional[str]
        processing_metadata=None,  # type: Optional[bool]
        state=None,  # type: Optional[str]
        **kwargs  # type: Any
    ):
        # type: (...) -> "models.MicrosoftGraphDriveItem"
        """Create new navigation property to items for drives.

        Create new navigation property to items for drives.

        :param drive_id: key: id of drive.
        :type drive_id: str
        :param id: Read-only.
        :type id: str
        :param created_date_time: Date and time of item creation. Read-only.
        :type created_date_time: ~datetime.datetime
        :param description: Provides a user-visible description of the item. Optional.
        :type description: str
        :param e_tag: ETag for the item. Read-only.
        :type e_tag: str
        :param last_modified_date_time: Date and time the item was last modified. Read-only.
        :type last_modified_date_time: ~datetime.datetime
        :param name: The name of the item. Read-write.
        :type name: str
        :param web_url: URL that displays the resource in the browser. Read-only.
        :type web_url: str
        :param created_by_user: Represents an Azure Active Directory user object.
        :type created_by_user: ~files.models.MicrosoftGraphUser
        :param last_modified_by_user: Represents an Azure Active Directory user object.
        :type last_modified_by_user: ~files.models.MicrosoftGraphUser
        :param microsoft_graph_item_reference_drive_id: Unique identifier of the drive instance that
         contains the item. Read-only.
        :type microsoft_graph_item_reference_drive_id: str
        :param drive_type: Identifies the type of drive. See [drive][] resource for values.
        :type drive_type: str
        :param microsoft_graph_item_reference_id: Unique identifier of the item in the drive. Read-
         only.
        :type microsoft_graph_item_reference_id: str
        :param microsoft_graph_item_reference_name: The name of the item being referenced. Read-only.
        :type microsoft_graph_item_reference_name: str
        :param path: Path that can be used to navigate to the item. Read-only.
        :type path: str
        :param share_id: A unique identifier for a shared resource that can be accessed via the
         [Shares][] API.
        :type share_id: str
        :param sharepoint_ids: sharepointIds.
        :type sharepoint_ids: ~files.models.MicrosoftGraphSharepointIds
        :param site_id:
        :type site_id: str
        :param display_name: The identity's display name. Note that this may not always be available or
         up to date. For example, if a user changes their display name, the API may show the new value
         in a future response, but the items associated with the user won't show up as having changed
         when using delta.
        :type display_name: str
        :param microsoft_graph_identity_id: Unique identifier for the identity.
        :type microsoft_graph_identity_id: str
        :param microsoft_graph_identity_display_name: The identity's display name. Note that this may
         not always be available or up to date. For example, if a user changes their display name, the
         API may show the new value in a future response, but the items associated with the user won't
         show up as having changed when using delta.
        :type microsoft_graph_identity_display_name: str
        :param id1: Unique identifier for the identity.
        :type id1: str
        :param display_name1: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name1: str
        :param id2: Unique identifier for the identity.
        :type id2: str
        :param display_name2: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name2: str
        :param id3: Unique identifier for the identity.
        :type id3: str
        :param display_name3: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name3: str
        :param id4: Unique identifier for the identity.
        :type id4: str
        :param display_name4: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name4: str
        :param id5: Unique identifier for the identity.
        :type id5: str
        :param audio: audio.
        :type audio: ~files.models.MicrosoftGraphAudio
        :param content: The content stream, if the item represents a file.
        :type content: bytes
        :param c_tag: An eTag for the content of the item. This eTag is not changed if only the
         metadata is changed. Note This property is not returned if the item is a folder. Read-only.
        :type c_tag: str
        :param file_system_info: fileSystemInfo.
        :type file_system_info: ~files.models.MicrosoftGraphFileSystemInfo
        :param image: image.
        :type image: ~files.models.MicrosoftGraphImage
        :param location: geoCoordinates.
        :type location: ~files.models.MicrosoftGraphGeoCoordinates
        :param photo: photo.
        :type photo: ~files.models.MicrosoftGraphPhoto
        :param publication: publicationFacet.
        :type publication: ~files.models.MicrosoftGraphPublicationFacet
        :param root: root.
        :type root: dict[str, object]
        :param microsoft_graph_sharepoint_ids: sharepointIds.
        :type microsoft_graph_sharepoint_ids: ~files.models.MicrosoftGraphSharepointIds
        :param size: Size of the item in bytes. Read-only.
        :type size: long
        :param video: video.
        :type video: ~files.models.MicrosoftGraphVideo
        :param web_dav_url: WebDAV compatible URL for the item.
        :type web_dav_url: str
        :param analytics: itemAnalytics.
        :type analytics: ~files.models.MicrosoftGraphItemAnalytics
        :param children: Collection containing Item objects for the immediate children of Item. Only
         items representing folders have children. Read-only. Nullable.
        :type children: list[~files.models.MicrosoftGraphDriveItem]
        :param permissions: The set of permissions for the item. Read-only. Nullable.
        :type permissions: list[~files.models.MicrosoftGraphPermission]
        :param subscriptions: The set of subscriptions on the item. Only supported on the root of a
         drive.
        :type subscriptions: list[~files.models.MicrosoftGraphSubscription]
        :param thumbnails: Collection containing [ThumbnailSet][] objects associated with the item. For
         more info, see [getting thumbnails][]. Read-only. Nullable.
        :type thumbnails: list[~files.models.MicrosoftGraphThumbnailSet]
        :param versions: The list of previous versions of the item. For more info, see [getting
         previous versions][]. Read-only. Nullable.
        :type versions: list[~files.models.MicrosoftGraphDriveItemVersion]
        :param microsoft_graph_entity_id: Read-only.
        :type microsoft_graph_entity_id: str
        :param microsoft_graph_base_item_created_date_time_created_date_time: Date and time of item
         creation. Read-only.
        :type microsoft_graph_base_item_created_date_time_created_date_time: ~datetime.datetime
        :param microsoft_graph_base_item_description: Provides a user-visible description of the item.
         Optional.
        :type microsoft_graph_base_item_description: str
        :param microsoft_graph_base_item_e_tag: ETag for the item. Read-only.
        :type microsoft_graph_base_item_e_tag: str
        :param microsoft_graph_base_item_last_modified_date_time_last_modified_date_time: Date and time
         the item was last modified. Read-only.
        :type microsoft_graph_base_item_last_modified_date_time_last_modified_date_time: ~datetime.datetime
        :param microsoft_graph_base_item_name: The name of the item. Read-write.
        :type microsoft_graph_base_item_name: str
        :param microsoft_graph_base_item_web_url: URL that displays the resource in the browser. Read-
         only.
        :type microsoft_graph_base_item_web_url: str
        :param microsoft_graph_user_created_by_user: Represents an Azure Active Directory user object.
        :type microsoft_graph_user_created_by_user: ~files.models.MicrosoftGraphUser
        :param microsoft_graph_user_last_modified_by_user: Represents an Azure Active Directory user
         object.
        :type microsoft_graph_user_last_modified_by_user: ~files.models.MicrosoftGraphUser
        :param drive_id1: Unique identifier of the drive instance that contains the item. Read-only.
        :type drive_id1: str
        :param microsoft_graph_item_reference_drive_type: Identifies the type of drive. See [drive][]
         resource for values.
        :type microsoft_graph_item_reference_drive_type: str
        :param id6: Unique identifier of the item in the drive. Read-only.
        :type id6: str
        :param name1: The name of the item being referenced. Read-only.
        :type name1: str
        :param microsoft_graph_item_reference_path: Path that can be used to navigate to the item.
         Read-only.
        :type microsoft_graph_item_reference_path: str
        :param microsoft_graph_item_reference_share_id: A unique identifier for a shared resource that
         can be accessed via the [Shares][] API.
        :type microsoft_graph_item_reference_share_id: str
        :param sharepoint_ids1: sharepointIds.
        :type sharepoint_ids1: ~files.models.MicrosoftGraphSharepointIds
        :param microsoft_graph_item_reference_site_id:
        :type microsoft_graph_item_reference_site_id: str
        :param display_name5: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name5: str
        :param id7: Unique identifier for the identity.
        :type id7: str
        :param display_name6: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name6: str
        :param id8: Unique identifier for the identity.
        :type id8: str
        :param display_name7: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name7: str
        :param id9: Unique identifier for the identity.
        :type id9: str
        :param display_name8: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name8: str
        :param id10: Unique identifier for the identity.
        :type id10: str
        :param display_name9: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name9: str
        :param id11: Unique identifier for the identity.
        :type id11: str
        :param display_name10: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name10: str
        :param id12: Unique identifier for the identity.
        :type id12: str
        :param content_type_parameter: contentTypeInfo.
        :type content_type_parameter: ~files.models.MicrosoftGraphContentTypeInfo
        :param sharepoint_ids2: sharepointIds.
        :type sharepoint_ids2: ~files.models.MicrosoftGraphSharepointIds
        :param microsoft_graph_item_analytics: itemAnalytics.
        :type microsoft_graph_item_analytics: ~files.models.MicrosoftGraphItemAnalytics
        :param drive_item: driveItem.
        :type drive_item: ~files.models.MicrosoftGraphDriveItem
        :param microsoft_graph_list_item_versions: The list of previous versions of the list item.
        :type microsoft_graph_list_item_versions: list[~files.models.MicrosoftGraphListItemVersion]
        :param id13: Read-only.
        :type id13: str
        :param id14: Read-only.
        :type id14: str
        :param application: workbookApplication.
        :type application: ~files.models.MicrosoftGraphWorkbookApplication
        :param comments:
        :type comments: list[~files.models.MicrosoftGraphWorkbookComment]
        :param functions: workbookFunctions.
        :type functions: ~files.models.MicrosoftGraphWorkbookFunctions
        :param names: Represents a collection of workbook scoped named items (named ranges and
         constants). Read-only.
        :type names: list[~files.models.MicrosoftGraphWorkbookNamedItem]
        :param operations: The status of workbook operations. Getting an operation collection is not
         supported, but you can get the status of a long-running operation if the Location header is
         returned in the response. Read-only.
        :type operations: list[~files.models.MicrosoftGraphWorkbookOperation]
        :param tables: Represents a collection of tables associated with the workbook. Read-only.
        :type tables: list[~files.models.MicrosoftGraphWorkbookTable]
        :param worksheets: Represents a collection of worksheets associated with the workbook. Read-
         only.
        :type worksheets: list[~files.models.MicrosoftGraphWorkbookWorksheet]
        :param microsoft_graph_special_folder_name: The unique identifier for this item in the
         /drive/special collection.
        :type microsoft_graph_special_folder_name: str
        :param owner: identitySet.
        :type owner: ~files.models.MicrosoftGraphIdentitySet
        :param scope: Indicates the scope of how the item is shared: anonymous, organization, or users.
         Read-only.
        :type scope: str
        :param shared_by: identitySet.
        :type shared_by: ~files.models.MicrosoftGraphIdentitySet
        :param shared_date_time: The UTC date and time when the item was shared. Read-only.
        :type shared_date_time: ~datetime.datetime
        :param on_click_telemetry_url: A callback URL that can be used to record telemetry information.
         The application should issue a GET on this URL if the user interacts with this item to improve
         the quality of results.
        :type on_click_telemetry_url: str
        :param created_by: identitySet.
        :type created_by: ~files.models.MicrosoftGraphIdentitySet
        :param microsoft_graph_remote_item_created_date_time_created_date_time: Date and time of item
         creation. Read-only.
        :type microsoft_graph_remote_item_created_date_time_created_date_time: ~datetime.datetime
        :param file: file.
        :type file: ~files.models.MicrosoftGraphFile
        :param microsoft_graph_file_system_info_file_system_info: fileSystemInfo.
        :type microsoft_graph_file_system_info_file_system_info: ~files.models.MicrosoftGraphFileSystemInfo
        :param folder: folder.
        :type folder: ~files.models.MicrosoftGraphFolder
        :param microsoft_graph_remote_item_id: Unique identifier for the remote item in its drive.
         Read-only.
        :type microsoft_graph_remote_item_id: str
        :param microsoft_graph_image: image.
        :type microsoft_graph_image: ~files.models.MicrosoftGraphImage
        :param last_modified_by: identitySet.
        :type last_modified_by: ~files.models.MicrosoftGraphIdentitySet
        :param microsoft_graph_remote_item_last_modified_date_time_last_modified_date_time: Date and
         time the item was last modified. Read-only.
        :type microsoft_graph_remote_item_last_modified_date_time_last_modified_date_time: ~datetime.datetime
        :param microsoft_graph_remote_item_name: Optional. Filename of the remote item. Read-only.
        :type microsoft_graph_remote_item_name: str
        :param package: package.
        :type package: ~files.models.MicrosoftGraphPackage
        :param parent_reference: itemReference.
        :type parent_reference: ~files.models.MicrosoftGraphItemReference
        :param shared: shared.
        :type shared: ~files.models.MicrosoftGraphShared
        :param sharepoint_ids3: sharepointIds.
        :type sharepoint_ids3: ~files.models.MicrosoftGraphSharepointIds
        :param integer_size: Size of the remote item. Read-only.
        :type integer_size: long
        :param special_folder: specialFolder.
        :type special_folder: ~files.models.MicrosoftGraphSpecialFolder
        :param microsoft_graph_video: video.
        :type microsoft_graph_video: ~files.models.MicrosoftGraphVideo
        :param microsoft_graph_remote_item_web_dav_url_web_dav_url: DAV compatible URL for the item.
        :type microsoft_graph_remote_item_web_dav_url_web_dav_url: str
        :param microsoft_graph_remote_item_web_url: URL that displays the resource in the browser.
         Read-only.
        :type microsoft_graph_remote_item_web_url: str
        :param queued_date_time: Date and time the pending binary operation was queued in UTC time.
         Read-only.
        :type queued_date_time: ~datetime.datetime
        :param type: A string indicating the type of package. While oneNote is the only currently
         defined value, you should expect other package types to be returned and handle them
         accordingly.
        :type type: str
        :param child_count: Number of children contained immediately within this container.
        :type child_count: int
        :param view: folderView.
        :type view: ~files.models.MicrosoftGraphFolderView
        :param hashes: hashes.
        :type hashes: ~files.models.MicrosoftGraphHashes
        :param mime_type: The MIME type for the file. This is determined by logic on the server and
         might not be the value provided when the file was uploaded. Read-only.
        :type mime_type: str
        :param processing_metadata:
        :type processing_metadata: bool
        :param state: Represents the state of the deleted item.
        :type state: str
        :keyword callable cls: A custom type or function that will be passed the direct response
        :return: MicrosoftGraphDriveItem, or the result of cls(response)
        :rtype: ~files.models.MicrosoftGraphDriveItem
        :raises: ~azure.core.exceptions.HttpResponseError
        """
        cls = kwargs.pop('cls', None)  # type: ClsType["models.MicrosoftGraphDriveItem"]
        error_map = {404: ResourceNotFoundError, 409: ResourceExistsError}
        error_map.update(kwargs.pop('error_map', {}))

        _body = models.MicrosoftGraphDriveItem(id=id, created_date_time=created_date_time, description=description, e_tag=e_tag, last_modified_date_time=last_modified_date_time, name=name, web_url=web_url, created_by_user=created_by_user, last_modified_by_user=last_modified_by_user, drive_id=microsoft_graph_item_reference_drive_id, drive_type=drive_type, id_parent_reference_id=microsoft_graph_item_reference_id, name_parent_reference_name=microsoft_graph_item_reference_name, path=path, share_id=share_id, sharepoint_ids=sharepoint_ids, site_id=site_id, display_name_last_modified_by_user_display_name=display_name, id_last_modified_by_user_id=microsoft_graph_identity_id, display_name_last_modified_by_device_display_name=microsoft_graph_identity_display_name, id_last_modified_by_device_id=id1, display_name_last_modified_by_application_display_name=display_name1, id_last_modified_by_application_id=id2, display_name_created_by_user_display_name=display_name2, id_created_by_user_id=id3, display_name_created_by_device_display_name=display_name3, id_created_by_device_id=id4, display_name_created_by_application_display_name=display_name4, id_created_by_application_id=id5, audio=audio, content=content, c_tag=c_tag, file_system_info=file_system_info, image=image, location=location, photo=photo, publication=publication, root=root, sharepoint_ids=microsoft_graph_sharepoint_ids, size=size, video=video, web_dav_url=web_dav_url, analytics=analytics, children=children, permissions=permissions, subscriptions=subscriptions, thumbnails=thumbnails, versions=versions, id_list_item_id=microsoft_graph_entity_id, created_date_time_list_item_created_date_time=microsoft_graph_base_item_created_date_time_created_date_time, description_list_item_description=microsoft_graph_base_item_description, e_tag_list_item_e_tag=microsoft_graph_base_item_e_tag, last_modified_date_time_list_item_last_modified_date_time=microsoft_graph_base_item_last_modified_date_time_last_modified_date_time, name_list_item_name=microsoft_graph_base_item_name, web_url_list_item_web_url=microsoft_graph_base_item_web_url, created_by_user_list_item_created_by_user=microsoft_graph_user_created_by_user, last_modified_by_user_list_item_last_modified_by_user=microsoft_graph_user_last_modified_by_user, drive_id_list_item_parent_reference_drive_id=drive_id1, drive_type_list_item_parent_reference_drive_type=microsoft_graph_item_reference_drive_type, id_list_item_parent_reference_id=id6, name_list_item_parent_reference_name=name1, path_list_item_parent_reference_path=microsoft_graph_item_reference_path, share_id_list_item_parent_reference_share_id=microsoft_graph_item_reference_share_id, sharepoint_ids_list_item_parent_reference_sharepoint_ids=sharepoint_ids1, site_id_list_item_parent_reference_site_id=microsoft_graph_item_reference_site_id, display_name_list_item_last_modified_by_user_display_name=display_name5, id_list_item_last_modified_by_user_id=id7, display_name_list_item_last_modified_by_device_display_name=display_name6, id_list_item_last_modified_by_device_id=id8, display_name_list_item_last_modified_by_application_display_name=display_name7, id_list_item_last_modified_by_application_id=id9, display_name_list_item_created_by_user_display_name=display_name8, id_list_item_created_by_user_id=id10, display_name_list_item_created_by_device_display_name=display_name9, id_list_item_created_by_device_id=id11, display_name_list_item_created_by_application_display_name=display_name10, id_list_item_created_by_application_id=id12, content_type=content_type_parameter, sharepoint_ids_list_item_sharepoint_ids=sharepoint_ids2, analytics_list_item_analytics=microsoft_graph_item_analytics, drive_item=drive_item, versions_list_item_versions=microsoft_graph_list_item_versions, id_list_item_fields_id=id13, id_workbook_id=id14, application=application, comments=comments, functions=functions, names=names, operations=operations, tables=tables, worksheets=worksheets, name_special_folder_name=microsoft_graph_special_folder_name, owner=owner, scope=scope, shared_by=shared_by, shared_date_time=shared_date_time, on_click_telemetry_url=on_click_telemetry_url, created_by=created_by, created_date_time_remote_item_created_date_time=microsoft_graph_remote_item_created_date_time_created_date_time, file=file, file_system_info_remote_item_file_system_info=microsoft_graph_file_system_info_file_system_info, folder=folder, id_remote_item_id=microsoft_graph_remote_item_id, image_remote_item_image=microsoft_graph_image, last_modified_by=last_modified_by, last_modified_date_time_remote_item_last_modified_date_time=microsoft_graph_remote_item_last_modified_date_time_last_modified_date_time, name_remote_item_name=microsoft_graph_remote_item_name, package=package, parent_reference=parent_reference, shared=shared, sharepoint_ids_remote_item_sharepoint_ids=sharepoint_ids3, size_remote_item_size=integer_size, special_folder=special_folder, video_remote_item_video=microsoft_graph_video, web_dav_url_remote_item_web_dav_url=microsoft_graph_remote_item_web_dav_url_web_dav_url, web_url_remote_item_web_url=microsoft_graph_remote_item_web_url, queued_date_time=queued_date_time, type=type, child_count=child_count, view=view, hashes=hashes, mime_type=mime_type, processing_metadata=processing_metadata, state=state)
        content_type = kwargs.pop("content_type", "application/json")
        accept = "application/json"

        # Construct URL
        url = self.create_item.metadata['url']  # type: ignore
        path_format_arguments = {
            'drive-id': self._serialize.url("drive_id", drive_id, 'str'),
        }
        url = self._client.format_url(url, **path_format_arguments)

        # Construct parameters
        query_parameters = {}  # type: Dict[str, Any]

        # Construct headers
        header_parameters = {}  # type: Dict[str, Any]
        header_parameters['Content-Type'] = self._serialize.header("content_type", content_type, 'str')
        header_parameters['Accept'] = self._serialize.header("accept", accept, 'str')
        header_parameters['Accept'] = 'application/json'

        body_content_kwargs = {}  # type: Dict[str, Any]
        body_content = self._serialize.body(_body, 'MicrosoftGraphDriveItem')
        body_content_kwargs['content'] = body_content
        request = self._client.post(url, query_parameters, header_parameters, **body_content_kwargs)

        pipeline_response = self._client._pipeline.run(request, stream=False, **kwargs)
        response = pipeline_response.http_response

        if response.status_code not in [201]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            error = self._deserialize(models.OdataError, response)
            raise HttpResponseError(response=response, model=error, error_format=ARMErrorFormat)

        deserialized = self._deserialize('MicrosoftGraphDriveItem', pipeline_response)

        if cls:
            return cls(pipeline_response, deserialized, {})

        return deserialized
    create_item.metadata = {'url': '/drives/{drive-id}/items'}  # type: ignore

    def get_item(
        self,
        drive_id,  # type: str
        drive_item_id,  # type: str
        select=None,  # type: Optional[List[Union[str, "models.Enum72"]]]
        expand=None,  # type: Optional[List[Union[str, "models.Enum73"]]]
        **kwargs  # type: Any
    ):
        # type: (...) -> "models.MicrosoftGraphDriveItem"
        """Get items from drives.

        Get items from drives.

        :param drive_id: key: id of drive.
        :type drive_id: str
        :param drive_item_id: key: id of driveItem.
        :type drive_item_id: str
        :param select: Select properties to be returned.
        :type select: list[str or ~files.models.Enum72]
        :param expand: Expand related entities.
        :type expand: list[str or ~files.models.Enum73]
        :keyword callable cls: A custom type or function that will be passed the direct response
        :return: MicrosoftGraphDriveItem, or the result of cls(response)
        :rtype: ~files.models.MicrosoftGraphDriveItem
        :raises: ~azure.core.exceptions.HttpResponseError
        """
        cls = kwargs.pop('cls', None)  # type: ClsType["models.MicrosoftGraphDriveItem"]
        error_map = {404: ResourceNotFoundError, 409: ResourceExistsError}
        error_map.update(kwargs.pop('error_map', {}))
        accept = "application/json"

        # Construct URL
        url = self.get_item.metadata['url']  # type: ignore
        path_format_arguments = {
            'drive-id': self._serialize.url("drive_id", drive_id, 'str'),
            'driveItem-id': self._serialize.url("drive_item_id", drive_item_id, 'str'),
        }
        url = self._client.format_url(url, **path_format_arguments)

        # Construct parameters
        query_parameters = {}  # type: Dict[str, Any]
        if select is not None:
            query_parameters['$select'] = self._serialize.query("select", select, '[str]', div=',')
        if expand is not None:
            query_parameters['$expand'] = self._serialize.query("expand", expand, '[str]', div=',')

        # Construct headers
        header_parameters = {}  # type: Dict[str, Any]
        header_parameters['Accept'] = self._serialize.header("accept", accept, 'str')
        header_parameters['Accept'] = 'application/json'

        request = self._client.get(url, query_parameters, header_parameters)
        pipeline_response = self._client._pipeline.run(request, stream=False, **kwargs)
        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            error = self._deserialize(models.OdataError, response)
            raise HttpResponseError(response=response, model=error, error_format=ARMErrorFormat)

        deserialized = self._deserialize('MicrosoftGraphDriveItem', pipeline_response)

        if cls:
            return cls(pipeline_response, deserialized, {})

        return deserialized
    get_item.metadata = {'url': '/drives/{drive-id}/items/{driveItem-id}'}  # type: ignore

    def update_item(
        self,
        drive_id,  # type: str
        drive_item_id,  # type: str
        id=None,  # type: Optional[str]
        created_date_time=None,  # type: Optional[datetime.datetime]
        description=None,  # type: Optional[str]
        e_tag=None,  # type: Optional[str]
        last_modified_date_time=None,  # type: Optional[datetime.datetime]
        name=None,  # type: Optional[str]
        web_url=None,  # type: Optional[str]
        created_by_user=None,  # type: Optional["models.MicrosoftGraphUser"]
        last_modified_by_user=None,  # type: Optional["models.MicrosoftGraphUser"]
        microsoft_graph_item_reference_drive_id=None,  # type: Optional[str]
        drive_type=None,  # type: Optional[str]
        microsoft_graph_item_reference_id=None,  # type: Optional[str]
        microsoft_graph_item_reference_name=None,  # type: Optional[str]
        path=None,  # type: Optional[str]
        share_id=None,  # type: Optional[str]
        sharepoint_ids=None,  # type: Optional["models.MicrosoftGraphSharepointIds"]
        site_id=None,  # type: Optional[str]
        display_name=None,  # type: Optional[str]
        microsoft_graph_identity_id=None,  # type: Optional[str]
        microsoft_graph_identity_display_name=None,  # type: Optional[str]
        id1=None,  # type: Optional[str]
        display_name1=None,  # type: Optional[str]
        id2=None,  # type: Optional[str]
        display_name2=None,  # type: Optional[str]
        id3=None,  # type: Optional[str]
        display_name3=None,  # type: Optional[str]
        id4=None,  # type: Optional[str]
        display_name4=None,  # type: Optional[str]
        id5=None,  # type: Optional[str]
        audio=None,  # type: Optional["models.MicrosoftGraphAudio"]
        content=None,  # type: Optional[bytes]
        c_tag=None,  # type: Optional[str]
        file_system_info=None,  # type: Optional["models.MicrosoftGraphFileSystemInfo"]
        image=None,  # type: Optional["models.MicrosoftGraphImage"]
        location=None,  # type: Optional["models.MicrosoftGraphGeoCoordinates"]
        photo=None,  # type: Optional["models.MicrosoftGraphPhoto"]
        publication=None,  # type: Optional["models.MicrosoftGraphPublicationFacet"]
        root=None,  # type: Optional[Dict[str, object]]
        microsoft_graph_sharepoint_ids=None,  # type: Optional["models.MicrosoftGraphSharepointIds"]
        size=None,  # type: Optional[int]
        video=None,  # type: Optional["models.MicrosoftGraphVideo"]
        web_dav_url=None,  # type: Optional[str]
        analytics=None,  # type: Optional["models.MicrosoftGraphItemAnalytics"]
        children=None,  # type: Optional[List["models.MicrosoftGraphDriveItem"]]
        permissions=None,  # type: Optional[List["models.MicrosoftGraphPermission"]]
        subscriptions=None,  # type: Optional[List["models.MicrosoftGraphSubscription"]]
        thumbnails=None,  # type: Optional[List["models.MicrosoftGraphThumbnailSet"]]
        versions=None,  # type: Optional[List["models.MicrosoftGraphDriveItemVersion"]]
        microsoft_graph_entity_id=None,  # type: Optional[str]
        microsoft_graph_base_item_created_date_time_created_date_time=None,  # type: Optional[datetime.datetime]
        microsoft_graph_base_item_description=None,  # type: Optional[str]
        microsoft_graph_base_item_e_tag=None,  # type: Optional[str]
        microsoft_graph_base_item_last_modified_date_time_last_modified_date_time=None,  # type: Optional[datetime.datetime]
        microsoft_graph_base_item_name=None,  # type: Optional[str]
        microsoft_graph_base_item_web_url=None,  # type: Optional[str]
        microsoft_graph_user_created_by_user=None,  # type: Optional["models.MicrosoftGraphUser"]
        microsoft_graph_user_last_modified_by_user=None,  # type: Optional["models.MicrosoftGraphUser"]
        drive_id1=None,  # type: Optional[str]
        microsoft_graph_item_reference_drive_type=None,  # type: Optional[str]
        id6=None,  # type: Optional[str]
        name1=None,  # type: Optional[str]
        microsoft_graph_item_reference_path=None,  # type: Optional[str]
        microsoft_graph_item_reference_share_id=None,  # type: Optional[str]
        sharepoint_ids1=None,  # type: Optional["models.MicrosoftGraphSharepointIds"]
        microsoft_graph_item_reference_site_id=None,  # type: Optional[str]
        display_name5=None,  # type: Optional[str]
        id7=None,  # type: Optional[str]
        display_name6=None,  # type: Optional[str]
        id8=None,  # type: Optional[str]
        display_name7=None,  # type: Optional[str]
        id9=None,  # type: Optional[str]
        display_name8=None,  # type: Optional[str]
        id10=None,  # type: Optional[str]
        display_name9=None,  # type: Optional[str]
        id11=None,  # type: Optional[str]
        display_name10=None,  # type: Optional[str]
        id12=None,  # type: Optional[str]
        content_type_parameter=None,  # type: Optional["models.MicrosoftGraphContentTypeInfo"]
        sharepoint_ids2=None,  # type: Optional["models.MicrosoftGraphSharepointIds"]
        microsoft_graph_item_analytics=None,  # type: Optional["models.MicrosoftGraphItemAnalytics"]
        drive_item=None,  # type: Optional["models.MicrosoftGraphDriveItem"]
        microsoft_graph_list_item_versions=None,  # type: Optional[List["models.MicrosoftGraphListItemVersion"]]
        id13=None,  # type: Optional[str]
        id14=None,  # type: Optional[str]
        application=None,  # type: Optional["models.MicrosoftGraphWorkbookApplication"]
        comments=None,  # type: Optional[List["models.MicrosoftGraphWorkbookComment"]]
        functions=None,  # type: Optional["models.MicrosoftGraphWorkbookFunctions"]
        names=None,  # type: Optional[List["models.MicrosoftGraphWorkbookNamedItem"]]
        operations=None,  # type: Optional[List["models.MicrosoftGraphWorkbookOperation"]]
        tables=None,  # type: Optional[List["models.MicrosoftGraphWorkbookTable"]]
        worksheets=None,  # type: Optional[List["models.MicrosoftGraphWorkbookWorksheet"]]
        microsoft_graph_special_folder_name=None,  # type: Optional[str]
        owner=None,  # type: Optional["models.MicrosoftGraphIdentitySet"]
        scope=None,  # type: Optional[str]
        shared_by=None,  # type: Optional["models.MicrosoftGraphIdentitySet"]
        shared_date_time=None,  # type: Optional[datetime.datetime]
        on_click_telemetry_url=None,  # type: Optional[str]
        created_by=None,  # type: Optional["models.MicrosoftGraphIdentitySet"]
        microsoft_graph_remote_item_created_date_time_created_date_time=None,  # type: Optional[datetime.datetime]
        file=None,  # type: Optional["models.MicrosoftGraphFile"]
        microsoft_graph_file_system_info_file_system_info=None,  # type: Optional["models.MicrosoftGraphFileSystemInfo"]
        folder=None,  # type: Optional["models.MicrosoftGraphFolder"]
        microsoft_graph_remote_item_id=None,  # type: Optional[str]
        microsoft_graph_image=None,  # type: Optional["models.MicrosoftGraphImage"]
        last_modified_by=None,  # type: Optional["models.MicrosoftGraphIdentitySet"]
        microsoft_graph_remote_item_last_modified_date_time_last_modified_date_time=None,  # type: Optional[datetime.datetime]
        microsoft_graph_remote_item_name=None,  # type: Optional[str]
        package=None,  # type: Optional["models.MicrosoftGraphPackage"]
        parent_reference=None,  # type: Optional["models.MicrosoftGraphItemReference"]
        shared=None,  # type: Optional["models.MicrosoftGraphShared"]
        sharepoint_ids3=None,  # type: Optional["models.MicrosoftGraphSharepointIds"]
        integer_size=None,  # type: Optional[int]
        special_folder=None,  # type: Optional["models.MicrosoftGraphSpecialFolder"]
        microsoft_graph_video=None,  # type: Optional["models.MicrosoftGraphVideo"]
        microsoft_graph_remote_item_web_dav_url_web_dav_url=None,  # type: Optional[str]
        microsoft_graph_remote_item_web_url=None,  # type: Optional[str]
        queued_date_time=None,  # type: Optional[datetime.datetime]
        type=None,  # type: Optional[str]
        child_count=None,  # type: Optional[int]
        view=None,  # type: Optional["models.MicrosoftGraphFolderView"]
        hashes=None,  # type: Optional["models.MicrosoftGraphHashes"]
        mime_type=None,  # type: Optional[str]
        processing_metadata=None,  # type: Optional[bool]
        state=None,  # type: Optional[str]
        **kwargs  # type: Any
    ):
        # type: (...) -> None
        """Update the navigation property items in drives.

        Update the navigation property items in drives.

        :param drive_id: key: id of drive.
        :type drive_id: str
        :param drive_item_id: key: id of driveItem.
        :type drive_item_id: str
        :param id: Read-only.
        :type id: str
        :param created_date_time: Date and time of item creation. Read-only.
        :type created_date_time: ~datetime.datetime
        :param description: Provides a user-visible description of the item. Optional.
        :type description: str
        :param e_tag: ETag for the item. Read-only.
        :type e_tag: str
        :param last_modified_date_time: Date and time the item was last modified. Read-only.
        :type last_modified_date_time: ~datetime.datetime
        :param name: The name of the item. Read-write.
        :type name: str
        :param web_url: URL that displays the resource in the browser. Read-only.
        :type web_url: str
        :param created_by_user: Represents an Azure Active Directory user object.
        :type created_by_user: ~files.models.MicrosoftGraphUser
        :param last_modified_by_user: Represents an Azure Active Directory user object.
        :type last_modified_by_user: ~files.models.MicrosoftGraphUser
        :param microsoft_graph_item_reference_drive_id: Unique identifier of the drive instance that
         contains the item. Read-only.
        :type microsoft_graph_item_reference_drive_id: str
        :param drive_type: Identifies the type of drive. See [drive][] resource for values.
        :type drive_type: str
        :param microsoft_graph_item_reference_id: Unique identifier of the item in the drive. Read-
         only.
        :type microsoft_graph_item_reference_id: str
        :param microsoft_graph_item_reference_name: The name of the item being referenced. Read-only.
        :type microsoft_graph_item_reference_name: str
        :param path: Path that can be used to navigate to the item. Read-only.
        :type path: str
        :param share_id: A unique identifier for a shared resource that can be accessed via the
         [Shares][] API.
        :type share_id: str
        :param sharepoint_ids: sharepointIds.
        :type sharepoint_ids: ~files.models.MicrosoftGraphSharepointIds
        :param site_id:
        :type site_id: str
        :param display_name: The identity's display name. Note that this may not always be available or
         up to date. For example, if a user changes their display name, the API may show the new value
         in a future response, but the items associated with the user won't show up as having changed
         when using delta.
        :type display_name: str
        :param microsoft_graph_identity_id: Unique identifier for the identity.
        :type microsoft_graph_identity_id: str
        :param microsoft_graph_identity_display_name: The identity's display name. Note that this may
         not always be available or up to date. For example, if a user changes their display name, the
         API may show the new value in a future response, but the items associated with the user won't
         show up as having changed when using delta.
        :type microsoft_graph_identity_display_name: str
        :param id1: Unique identifier for the identity.
        :type id1: str
        :param display_name1: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name1: str
        :param id2: Unique identifier for the identity.
        :type id2: str
        :param display_name2: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name2: str
        :param id3: Unique identifier for the identity.
        :type id3: str
        :param display_name3: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name3: str
        :param id4: Unique identifier for the identity.
        :type id4: str
        :param display_name4: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name4: str
        :param id5: Unique identifier for the identity.
        :type id5: str
        :param audio: audio.
        :type audio: ~files.models.MicrosoftGraphAudio
        :param content: The content stream, if the item represents a file.
        :type content: bytes
        :param c_tag: An eTag for the content of the item. This eTag is not changed if only the
         metadata is changed. Note This property is not returned if the item is a folder. Read-only.
        :type c_tag: str
        :param file_system_info: fileSystemInfo.
        :type file_system_info: ~files.models.MicrosoftGraphFileSystemInfo
        :param image: image.
        :type image: ~files.models.MicrosoftGraphImage
        :param location: geoCoordinates.
        :type location: ~files.models.MicrosoftGraphGeoCoordinates
        :param photo: photo.
        :type photo: ~files.models.MicrosoftGraphPhoto
        :param publication: publicationFacet.
        :type publication: ~files.models.MicrosoftGraphPublicationFacet
        :param root: root.
        :type root: dict[str, object]
        :param microsoft_graph_sharepoint_ids: sharepointIds.
        :type microsoft_graph_sharepoint_ids: ~files.models.MicrosoftGraphSharepointIds
        :param size: Size of the item in bytes. Read-only.
        :type size: long
        :param video: video.
        :type video: ~files.models.MicrosoftGraphVideo
        :param web_dav_url: WebDAV compatible URL for the item.
        :type web_dav_url: str
        :param analytics: itemAnalytics.
        :type analytics: ~files.models.MicrosoftGraphItemAnalytics
        :param children: Collection containing Item objects for the immediate children of Item. Only
         items representing folders have children. Read-only. Nullable.
        :type children: list[~files.models.MicrosoftGraphDriveItem]
        :param permissions: The set of permissions for the item. Read-only. Nullable.
        :type permissions: list[~files.models.MicrosoftGraphPermission]
        :param subscriptions: The set of subscriptions on the item. Only supported on the root of a
         drive.
        :type subscriptions: list[~files.models.MicrosoftGraphSubscription]
        :param thumbnails: Collection containing [ThumbnailSet][] objects associated with the item. For
         more info, see [getting thumbnails][]. Read-only. Nullable.
        :type thumbnails: list[~files.models.MicrosoftGraphThumbnailSet]
        :param versions: The list of previous versions of the item. For more info, see [getting
         previous versions][]. Read-only. Nullable.
        :type versions: list[~files.models.MicrosoftGraphDriveItemVersion]
        :param microsoft_graph_entity_id: Read-only.
        :type microsoft_graph_entity_id: str
        :param microsoft_graph_base_item_created_date_time_created_date_time: Date and time of item
         creation. Read-only.
        :type microsoft_graph_base_item_created_date_time_created_date_time: ~datetime.datetime
        :param microsoft_graph_base_item_description: Provides a user-visible description of the item.
         Optional.
        :type microsoft_graph_base_item_description: str
        :param microsoft_graph_base_item_e_tag: ETag for the item. Read-only.
        :type microsoft_graph_base_item_e_tag: str
        :param microsoft_graph_base_item_last_modified_date_time_last_modified_date_time: Date and time
         the item was last modified. Read-only.
        :type microsoft_graph_base_item_last_modified_date_time_last_modified_date_time: ~datetime.datetime
        :param microsoft_graph_base_item_name: The name of the item. Read-write.
        :type microsoft_graph_base_item_name: str
        :param microsoft_graph_base_item_web_url: URL that displays the resource in the browser. Read-
         only.
        :type microsoft_graph_base_item_web_url: str
        :param microsoft_graph_user_created_by_user: Represents an Azure Active Directory user object.
        :type microsoft_graph_user_created_by_user: ~files.models.MicrosoftGraphUser
        :param microsoft_graph_user_last_modified_by_user: Represents an Azure Active Directory user
         object.
        :type microsoft_graph_user_last_modified_by_user: ~files.models.MicrosoftGraphUser
        :param drive_id1: Unique identifier of the drive instance that contains the item. Read-only.
        :type drive_id1: str
        :param microsoft_graph_item_reference_drive_type: Identifies the type of drive. See [drive][]
         resource for values.
        :type microsoft_graph_item_reference_drive_type: str
        :param id6: Unique identifier of the item in the drive. Read-only.
        :type id6: str
        :param name1: The name of the item being referenced. Read-only.
        :type name1: str
        :param microsoft_graph_item_reference_path: Path that can be used to navigate to the item.
         Read-only.
        :type microsoft_graph_item_reference_path: str
        :param microsoft_graph_item_reference_share_id: A unique identifier for a shared resource that
         can be accessed via the [Shares][] API.
        :type microsoft_graph_item_reference_share_id: str
        :param sharepoint_ids1: sharepointIds.
        :type sharepoint_ids1: ~files.models.MicrosoftGraphSharepointIds
        :param microsoft_graph_item_reference_site_id:
        :type microsoft_graph_item_reference_site_id: str
        :param display_name5: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name5: str
        :param id7: Unique identifier for the identity.
        :type id7: str
        :param display_name6: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name6: str
        :param id8: Unique identifier for the identity.
        :type id8: str
        :param display_name7: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name7: str
        :param id9: Unique identifier for the identity.
        :type id9: str
        :param display_name8: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name8: str
        :param id10: Unique identifier for the identity.
        :type id10: str
        :param display_name9: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name9: str
        :param id11: Unique identifier for the identity.
        :type id11: str
        :param display_name10: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name10: str
        :param id12: Unique identifier for the identity.
        :type id12: str
        :param content_type_parameter: contentTypeInfo.
        :type content_type_parameter: ~files.models.MicrosoftGraphContentTypeInfo
        :param sharepoint_ids2: sharepointIds.
        :type sharepoint_ids2: ~files.models.MicrosoftGraphSharepointIds
        :param microsoft_graph_item_analytics: itemAnalytics.
        :type microsoft_graph_item_analytics: ~files.models.MicrosoftGraphItemAnalytics
        :param drive_item: driveItem.
        :type drive_item: ~files.models.MicrosoftGraphDriveItem
        :param microsoft_graph_list_item_versions: The list of previous versions of the list item.
        :type microsoft_graph_list_item_versions: list[~files.models.MicrosoftGraphListItemVersion]
        :param id13: Read-only.
        :type id13: str
        :param id14: Read-only.
        :type id14: str
        :param application: workbookApplication.
        :type application: ~files.models.MicrosoftGraphWorkbookApplication
        :param comments:
        :type comments: list[~files.models.MicrosoftGraphWorkbookComment]
        :param functions: workbookFunctions.
        :type functions: ~files.models.MicrosoftGraphWorkbookFunctions
        :param names: Represents a collection of workbook scoped named items (named ranges and
         constants). Read-only.
        :type names: list[~files.models.MicrosoftGraphWorkbookNamedItem]
        :param operations: The status of workbook operations. Getting an operation collection is not
         supported, but you can get the status of a long-running operation if the Location header is
         returned in the response. Read-only.
        :type operations: list[~files.models.MicrosoftGraphWorkbookOperation]
        :param tables: Represents a collection of tables associated with the workbook. Read-only.
        :type tables: list[~files.models.MicrosoftGraphWorkbookTable]
        :param worksheets: Represents a collection of worksheets associated with the workbook. Read-
         only.
        :type worksheets: list[~files.models.MicrosoftGraphWorkbookWorksheet]
        :param microsoft_graph_special_folder_name: The unique identifier for this item in the
         /drive/special collection.
        :type microsoft_graph_special_folder_name: str
        :param owner: identitySet.
        :type owner: ~files.models.MicrosoftGraphIdentitySet
        :param scope: Indicates the scope of how the item is shared: anonymous, organization, or users.
         Read-only.
        :type scope: str
        :param shared_by: identitySet.
        :type shared_by: ~files.models.MicrosoftGraphIdentitySet
        :param shared_date_time: The UTC date and time when the item was shared. Read-only.
        :type shared_date_time: ~datetime.datetime
        :param on_click_telemetry_url: A callback URL that can be used to record telemetry information.
         The application should issue a GET on this URL if the user interacts with this item to improve
         the quality of results.
        :type on_click_telemetry_url: str
        :param created_by: identitySet.
        :type created_by: ~files.models.MicrosoftGraphIdentitySet
        :param microsoft_graph_remote_item_created_date_time_created_date_time: Date and time of item
         creation. Read-only.
        :type microsoft_graph_remote_item_created_date_time_created_date_time: ~datetime.datetime
        :param file: file.
        :type file: ~files.models.MicrosoftGraphFile
        :param microsoft_graph_file_system_info_file_system_info: fileSystemInfo.
        :type microsoft_graph_file_system_info_file_system_info: ~files.models.MicrosoftGraphFileSystemInfo
        :param folder: folder.
        :type folder: ~files.models.MicrosoftGraphFolder
        :param microsoft_graph_remote_item_id: Unique identifier for the remote item in its drive.
         Read-only.
        :type microsoft_graph_remote_item_id: str
        :param microsoft_graph_image: image.
        :type microsoft_graph_image: ~files.models.MicrosoftGraphImage
        :param last_modified_by: identitySet.
        :type last_modified_by: ~files.models.MicrosoftGraphIdentitySet
        :param microsoft_graph_remote_item_last_modified_date_time_last_modified_date_time: Date and
         time the item was last modified. Read-only.
        :type microsoft_graph_remote_item_last_modified_date_time_last_modified_date_time: ~datetime.datetime
        :param microsoft_graph_remote_item_name: Optional. Filename of the remote item. Read-only.
        :type microsoft_graph_remote_item_name: str
        :param package: package.
        :type package: ~files.models.MicrosoftGraphPackage
        :param parent_reference: itemReference.
        :type parent_reference: ~files.models.MicrosoftGraphItemReference
        :param shared: shared.
        :type shared: ~files.models.MicrosoftGraphShared
        :param sharepoint_ids3: sharepointIds.
        :type sharepoint_ids3: ~files.models.MicrosoftGraphSharepointIds
        :param integer_size: Size of the remote item. Read-only.
        :type integer_size: long
        :param special_folder: specialFolder.
        :type special_folder: ~files.models.MicrosoftGraphSpecialFolder
        :param microsoft_graph_video: video.
        :type microsoft_graph_video: ~files.models.MicrosoftGraphVideo
        :param microsoft_graph_remote_item_web_dav_url_web_dav_url: DAV compatible URL for the item.
        :type microsoft_graph_remote_item_web_dav_url_web_dav_url: str
        :param microsoft_graph_remote_item_web_url: URL that displays the resource in the browser.
         Read-only.
        :type microsoft_graph_remote_item_web_url: str
        :param queued_date_time: Date and time the pending binary operation was queued in UTC time.
         Read-only.
        :type queued_date_time: ~datetime.datetime
        :param type: A string indicating the type of package. While oneNote is the only currently
         defined value, you should expect other package types to be returned and handle them
         accordingly.
        :type type: str
        :param child_count: Number of children contained immediately within this container.
        :type child_count: int
        :param view: folderView.
        :type view: ~files.models.MicrosoftGraphFolderView
        :param hashes: hashes.
        :type hashes: ~files.models.MicrosoftGraphHashes
        :param mime_type: The MIME type for the file. This is determined by logic on the server and
         might not be the value provided when the file was uploaded. Read-only.
        :type mime_type: str
        :param processing_metadata:
        :type processing_metadata: bool
        :param state: Represents the state of the deleted item.
        :type state: str
        :keyword callable cls: A custom type or function that will be passed the direct response
        :return: None, or the result of cls(response)
        :rtype: None
        :raises: ~azure.core.exceptions.HttpResponseError
        """
        cls = kwargs.pop('cls', None)  # type: ClsType[None]
        error_map = {404: ResourceNotFoundError, 409: ResourceExistsError}
        error_map.update(kwargs.pop('error_map', {}))

        _body = models.MicrosoftGraphDriveItem(id=id, created_date_time=created_date_time, description=description, e_tag=e_tag, last_modified_date_time=last_modified_date_time, name=name, web_url=web_url, created_by_user=created_by_user, last_modified_by_user=last_modified_by_user, drive_id=microsoft_graph_item_reference_drive_id, drive_type=drive_type, id_parent_reference_id=microsoft_graph_item_reference_id, name_parent_reference_name=microsoft_graph_item_reference_name, path=path, share_id=share_id, sharepoint_ids=sharepoint_ids, site_id=site_id, display_name_last_modified_by_user_display_name=display_name, id_last_modified_by_user_id=microsoft_graph_identity_id, display_name_last_modified_by_device_display_name=microsoft_graph_identity_display_name, id_last_modified_by_device_id=id1, display_name_last_modified_by_application_display_name=display_name1, id_last_modified_by_application_id=id2, display_name_created_by_user_display_name=display_name2, id_created_by_user_id=id3, display_name_created_by_device_display_name=display_name3, id_created_by_device_id=id4, display_name_created_by_application_display_name=display_name4, id_created_by_application_id=id5, audio=audio, content=content, c_tag=c_tag, file_system_info=file_system_info, image=image, location=location, photo=photo, publication=publication, root=root, sharepoint_ids=microsoft_graph_sharepoint_ids, size=size, video=video, web_dav_url=web_dav_url, analytics=analytics, children=children, permissions=permissions, subscriptions=subscriptions, thumbnails=thumbnails, versions=versions, id_list_item_id=microsoft_graph_entity_id, created_date_time_list_item_created_date_time=microsoft_graph_base_item_created_date_time_created_date_time, description_list_item_description=microsoft_graph_base_item_description, e_tag_list_item_e_tag=microsoft_graph_base_item_e_tag, last_modified_date_time_list_item_last_modified_date_time=microsoft_graph_base_item_last_modified_date_time_last_modified_date_time, name_list_item_name=microsoft_graph_base_item_name, web_url_list_item_web_url=microsoft_graph_base_item_web_url, created_by_user_list_item_created_by_user=microsoft_graph_user_created_by_user, last_modified_by_user_list_item_last_modified_by_user=microsoft_graph_user_last_modified_by_user, drive_id_list_item_parent_reference_drive_id=drive_id1, drive_type_list_item_parent_reference_drive_type=microsoft_graph_item_reference_drive_type, id_list_item_parent_reference_id=id6, name_list_item_parent_reference_name=name1, path_list_item_parent_reference_path=microsoft_graph_item_reference_path, share_id_list_item_parent_reference_share_id=microsoft_graph_item_reference_share_id, sharepoint_ids_list_item_parent_reference_sharepoint_ids=sharepoint_ids1, site_id_list_item_parent_reference_site_id=microsoft_graph_item_reference_site_id, display_name_list_item_last_modified_by_user_display_name=display_name5, id_list_item_last_modified_by_user_id=id7, display_name_list_item_last_modified_by_device_display_name=display_name6, id_list_item_last_modified_by_device_id=id8, display_name_list_item_last_modified_by_application_display_name=display_name7, id_list_item_last_modified_by_application_id=id9, display_name_list_item_created_by_user_display_name=display_name8, id_list_item_created_by_user_id=id10, display_name_list_item_created_by_device_display_name=display_name9, id_list_item_created_by_device_id=id11, display_name_list_item_created_by_application_display_name=display_name10, id_list_item_created_by_application_id=id12, content_type=content_type_parameter, sharepoint_ids_list_item_sharepoint_ids=sharepoint_ids2, analytics_list_item_analytics=microsoft_graph_item_analytics, drive_item=drive_item, versions_list_item_versions=microsoft_graph_list_item_versions, id_list_item_fields_id=id13, id_workbook_id=id14, application=application, comments=comments, functions=functions, names=names, operations=operations, tables=tables, worksheets=worksheets, name_special_folder_name=microsoft_graph_special_folder_name, owner=owner, scope=scope, shared_by=shared_by, shared_date_time=shared_date_time, on_click_telemetry_url=on_click_telemetry_url, created_by=created_by, created_date_time_remote_item_created_date_time=microsoft_graph_remote_item_created_date_time_created_date_time, file=file, file_system_info_remote_item_file_system_info=microsoft_graph_file_system_info_file_system_info, folder=folder, id_remote_item_id=microsoft_graph_remote_item_id, image_remote_item_image=microsoft_graph_image, last_modified_by=last_modified_by, last_modified_date_time_remote_item_last_modified_date_time=microsoft_graph_remote_item_last_modified_date_time_last_modified_date_time, name_remote_item_name=microsoft_graph_remote_item_name, package=package, parent_reference=parent_reference, shared=shared, sharepoint_ids_remote_item_sharepoint_ids=sharepoint_ids3, size_remote_item_size=integer_size, special_folder=special_folder, video_remote_item_video=microsoft_graph_video, web_dav_url_remote_item_web_dav_url=microsoft_graph_remote_item_web_dav_url_web_dav_url, web_url_remote_item_web_url=microsoft_graph_remote_item_web_url, queued_date_time=queued_date_time, type=type, child_count=child_count, view=view, hashes=hashes, mime_type=mime_type, processing_metadata=processing_metadata, state=state)
        content_type = kwargs.pop("content_type", "application/json")
        accept = "application/json"

        # Construct URL
        url = self.update_item.metadata['url']  # type: ignore
        path_format_arguments = {
            'drive-id': self._serialize.url("drive_id", drive_id, 'str'),
            'driveItem-id': self._serialize.url("drive_item_id", drive_item_id, 'str'),
        }
        url = self._client.format_url(url, **path_format_arguments)

        # Construct parameters
        query_parameters = {}  # type: Dict[str, Any]

        # Construct headers
        header_parameters = {}  # type: Dict[str, Any]
        header_parameters['Content-Type'] = self._serialize.header("content_type", content_type, 'str')
        header_parameters['Accept'] = self._serialize.header("accept", accept, 'str')

        body_content_kwargs = {}  # type: Dict[str, Any]
        body_content = self._serialize.body(_body, 'MicrosoftGraphDriveItem')
        body_content_kwargs['content'] = body_content
        request = self._client.patch(url, query_parameters, header_parameters, **body_content_kwargs)

        pipeline_response = self._client._pipeline.run(request, stream=False, **kwargs)
        response = pipeline_response.http_response

        if response.status_code not in [204]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            error = self._deserialize(models.OdataError, response)
            raise HttpResponseError(response=response, model=error, error_format=ARMErrorFormat)

        if cls:
            return cls(pipeline_response, None, {})

    update_item.metadata = {'url': '/drives/{drive-id}/items/{driveItem-id}'}  # type: ignore

    def delete_item(
        self,
        drive_id,  # type: str
        drive_item_id,  # type: str
        if_match=None,  # type: Optional[str]
        **kwargs  # type: Any
    ):
        # type: (...) -> None
        """Delete navigation property items for drives.

        Delete navigation property items for drives.

        :param drive_id: key: id of drive.
        :type drive_id: str
        :param drive_item_id: key: id of driveItem.
        :type drive_item_id: str
        :param if_match: ETag.
        :type if_match: str
        :keyword callable cls: A custom type or function that will be passed the direct response
        :return: None, or the result of cls(response)
        :rtype: None
        :raises: ~azure.core.exceptions.HttpResponseError
        """
        cls = kwargs.pop('cls', None)  # type: ClsType[None]
        error_map = {404: ResourceNotFoundError, 409: ResourceExistsError}
        error_map.update(kwargs.pop('error_map', {}))
        accept = "application/json"

        # Construct URL
        url = self.delete_item.metadata['url']  # type: ignore
        path_format_arguments = {
            'drive-id': self._serialize.url("drive_id", drive_id, 'str'),
            'driveItem-id': self._serialize.url("drive_item_id", drive_item_id, 'str'),
        }
        url = self._client.format_url(url, **path_format_arguments)

        # Construct parameters
        query_parameters = {}  # type: Dict[str, Any]

        # Construct headers
        header_parameters = {}  # type: Dict[str, Any]
        if if_match is not None:
            header_parameters['If-Match'] = self._serialize.header("if_match", if_match, 'str')
        header_parameters['Accept'] = self._serialize.header("accept", accept, 'str')

        request = self._client.delete(url, query_parameters, header_parameters)
        pipeline_response = self._client._pipeline.run(request, stream=False, **kwargs)
        response = pipeline_response.http_response

        if response.status_code not in [204]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            error = self._deserialize(models.OdataError, response)
            raise HttpResponseError(response=response, model=error, error_format=ARMErrorFormat)

        if cls:
            return cls(pipeline_response, None, {})

    delete_item.metadata = {'url': '/drives/{drive-id}/items/{driveItem-id}'}  # type: ignore

    def get_list(
        self,
        drive_id,  # type: str
        select=None,  # type: Optional[List[Union[str, "models.Enum74"]]]
        expand=None,  # type: Optional[List[Union[str, "models.Enum75"]]]
        **kwargs  # type: Any
    ):
        # type: (...) -> "models.MicrosoftGraphList"
        """Get list from drives.

        Get list from drives.

        :param drive_id: key: id of drive.
        :type drive_id: str
        :param select: Select properties to be returned.
        :type select: list[str or ~files.models.Enum74]
        :param expand: Expand related entities.
        :type expand: list[str or ~files.models.Enum75]
        :keyword callable cls: A custom type or function that will be passed the direct response
        :return: MicrosoftGraphList, or the result of cls(response)
        :rtype: ~files.models.MicrosoftGraphList
        :raises: ~azure.core.exceptions.HttpResponseError
        """
        cls = kwargs.pop('cls', None)  # type: ClsType["models.MicrosoftGraphList"]
        error_map = {404: ResourceNotFoundError, 409: ResourceExistsError}
        error_map.update(kwargs.pop('error_map', {}))
        accept = "application/json"

        # Construct URL
        url = self.get_list.metadata['url']  # type: ignore
        path_format_arguments = {
            'drive-id': self._serialize.url("drive_id", drive_id, 'str'),
        }
        url = self._client.format_url(url, **path_format_arguments)

        # Construct parameters
        query_parameters = {}  # type: Dict[str, Any]
        if select is not None:
            query_parameters['$select'] = self._serialize.query("select", select, '[str]', div=',')
        if expand is not None:
            query_parameters['$expand'] = self._serialize.query("expand", expand, '[str]', div=',')

        # Construct headers
        header_parameters = {}  # type: Dict[str, Any]
        header_parameters['Accept'] = self._serialize.header("accept", accept, 'str')
        header_parameters['Accept'] = 'application/json'

        request = self._client.get(url, query_parameters, header_parameters)
        pipeline_response = self._client._pipeline.run(request, stream=False, **kwargs)
        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            error = self._deserialize(models.OdataError, response)
            raise HttpResponseError(response=response, model=error, error_format=ARMErrorFormat)

        deserialized = self._deserialize('MicrosoftGraphList', pipeline_response)

        if cls:
            return cls(pipeline_response, deserialized, {})

        return deserialized
    get_list.metadata = {'url': '/drives/{drive-id}/list'}  # type: ignore

    def update_list(
        self,
        drive_id,  # type: str
        id=None,  # type: Optional[str]
        created_date_time=None,  # type: Optional[datetime.datetime]
        description=None,  # type: Optional[str]
        e_tag=None,  # type: Optional[str]
        last_modified_date_time=None,  # type: Optional[datetime.datetime]
        name=None,  # type: Optional[str]
        web_url=None,  # type: Optional[str]
        created_by_user=None,  # type: Optional["models.MicrosoftGraphUser"]
        last_modified_by_user=None,  # type: Optional["models.MicrosoftGraphUser"]
        microsoft_graph_item_reference_drive_id=None,  # type: Optional[str]
        drive_type=None,  # type: Optional[str]
        microsoft_graph_item_reference_id=None,  # type: Optional[str]
        microsoft_graph_item_reference_name=None,  # type: Optional[str]
        path=None,  # type: Optional[str]
        share_id=None,  # type: Optional[str]
        sharepoint_ids=None,  # type: Optional["models.MicrosoftGraphSharepointIds"]
        site_id=None,  # type: Optional[str]
        display_name=None,  # type: Optional[str]
        microsoft_graph_identity_id=None,  # type: Optional[str]
        microsoft_graph_identity_display_name=None,  # type: Optional[str]
        id1=None,  # type: Optional[str]
        display_name1=None,  # type: Optional[str]
        id2=None,  # type: Optional[str]
        display_name2=None,  # type: Optional[str]
        id3=None,  # type: Optional[str]
        display_name3=None,  # type: Optional[str]
        id4=None,  # type: Optional[str]
        display_name4=None,  # type: Optional[str]
        id5=None,  # type: Optional[str]
        microsoft_graph_list_display_name=None,  # type: Optional[str]
        list=None,  # type: Optional["models.MicrosoftGraphListInfo"]
        microsoft_graph_sharepoint_ids=None,  # type: Optional["models.MicrosoftGraphSharepointIds"]
        system=None,  # type: Optional[Dict[str, object]]
        columns=None,  # type: Optional[List["models.MicrosoftGraphColumnDefinition"]]
        content_types=None,  # type: Optional[List["models.MicrosoftGraphContentType"]]
        drive=None,  # type: Optional["models.MicrosoftGraphDrive"]
        items=None,  # type: Optional[List["models.MicrosoftGraphListItem"]]
        subscriptions=None,  # type: Optional[List["models.MicrosoftGraphSubscription"]]
        **kwargs  # type: Any
    ):
        # type: (...) -> None
        """Update the navigation property list in drives.

        Update the navigation property list in drives.

        :param drive_id: key: id of drive.
        :type drive_id: str
        :param id: Read-only.
        :type id: str
        :param created_date_time: Date and time of item creation. Read-only.
        :type created_date_time: ~datetime.datetime
        :param description: Provides a user-visible description of the item. Optional.
        :type description: str
        :param e_tag: ETag for the item. Read-only.
        :type e_tag: str
        :param last_modified_date_time: Date and time the item was last modified. Read-only.
        :type last_modified_date_time: ~datetime.datetime
        :param name: The name of the item. Read-write.
        :type name: str
        :param web_url: URL that displays the resource in the browser. Read-only.
        :type web_url: str
        :param created_by_user: Represents an Azure Active Directory user object.
        :type created_by_user: ~files.models.MicrosoftGraphUser
        :param last_modified_by_user: Represents an Azure Active Directory user object.
        :type last_modified_by_user: ~files.models.MicrosoftGraphUser
        :param microsoft_graph_item_reference_drive_id: Unique identifier of the drive instance that
         contains the item. Read-only.
        :type microsoft_graph_item_reference_drive_id: str
        :param drive_type: Identifies the type of drive. See [drive][] resource for values.
        :type drive_type: str
        :param microsoft_graph_item_reference_id: Unique identifier of the item in the drive. Read-
         only.
        :type microsoft_graph_item_reference_id: str
        :param microsoft_graph_item_reference_name: The name of the item being referenced. Read-only.
        :type microsoft_graph_item_reference_name: str
        :param path: Path that can be used to navigate to the item. Read-only.
        :type path: str
        :param share_id: A unique identifier for a shared resource that can be accessed via the
         [Shares][] API.
        :type share_id: str
        :param sharepoint_ids: sharepointIds.
        :type sharepoint_ids: ~files.models.MicrosoftGraphSharepointIds
        :param site_id:
        :type site_id: str
        :param display_name: The identity's display name. Note that this may not always be available or
         up to date. For example, if a user changes their display name, the API may show the new value
         in a future response, but the items associated with the user won't show up as having changed
         when using delta.
        :type display_name: str
        :param microsoft_graph_identity_id: Unique identifier for the identity.
        :type microsoft_graph_identity_id: str
        :param microsoft_graph_identity_display_name: The identity's display name. Note that this may
         not always be available or up to date. For example, if a user changes their display name, the
         API may show the new value in a future response, but the items associated with the user won't
         show up as having changed when using delta.
        :type microsoft_graph_identity_display_name: str
        :param id1: Unique identifier for the identity.
        :type id1: str
        :param display_name1: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name1: str
        :param id2: Unique identifier for the identity.
        :type id2: str
        :param display_name2: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name2: str
        :param id3: Unique identifier for the identity.
        :type id3: str
        :param display_name3: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name3: str
        :param id4: Unique identifier for the identity.
        :type id4: str
        :param display_name4: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name4: str
        :param id5: Unique identifier for the identity.
        :type id5: str
        :param microsoft_graph_list_display_name: The displayable title of the list.
        :type microsoft_graph_list_display_name: str
        :param list: listInfo.
        :type list: ~files.models.MicrosoftGraphListInfo
        :param microsoft_graph_sharepoint_ids: sharepointIds.
        :type microsoft_graph_sharepoint_ids: ~files.models.MicrosoftGraphSharepointIds
        :param system: systemFacet.
        :type system: dict[str, object]
        :param columns: The collection of field definitions for this list.
        :type columns: list[~files.models.MicrosoftGraphColumnDefinition]
        :param content_types: The collection of content types present in this list.
        :type content_types: list[~files.models.MicrosoftGraphContentType]
        :param drive: drive.
        :type drive: ~files.models.MicrosoftGraphDrive
        :param items: All items contained in the list.
        :type items: list[~files.models.MicrosoftGraphListItem]
        :param subscriptions: The set of subscriptions on the list.
        :type subscriptions: list[~files.models.MicrosoftGraphSubscription]
        :keyword callable cls: A custom type or function that will be passed the direct response
        :return: None, or the result of cls(response)
        :rtype: None
        :raises: ~azure.core.exceptions.HttpResponseError
        """
        cls = kwargs.pop('cls', None)  # type: ClsType[None]
        error_map = {404: ResourceNotFoundError, 409: ResourceExistsError}
        error_map.update(kwargs.pop('error_map', {}))

        _body = models.MicrosoftGraphList(id=id, created_date_time=created_date_time, description=description, e_tag=e_tag, last_modified_date_time=last_modified_date_time, name=name, web_url=web_url, created_by_user=created_by_user, last_modified_by_user=last_modified_by_user, drive_id=microsoft_graph_item_reference_drive_id, drive_type=drive_type, id_parent_reference_id=microsoft_graph_item_reference_id, name_parent_reference_name=microsoft_graph_item_reference_name, path=path, share_id=share_id, sharepoint_ids=sharepoint_ids, site_id=site_id, display_name_last_modified_by_user_display_name=display_name, id_last_modified_by_user_id=microsoft_graph_identity_id, display_name_last_modified_by_device_display_name=microsoft_graph_identity_display_name, id_last_modified_by_device_id=id1, display_name_last_modified_by_application_display_name=display_name1, id_last_modified_by_application_id=id2, display_name_created_by_user_display_name=display_name2, id_created_by_user_id=id3, display_name_created_by_device_display_name=display_name3, id_created_by_device_id=id4, display_name_created_by_application_display_name=display_name4, id_created_by_application_id=id5, display_name=microsoft_graph_list_display_name, list=list, sharepoint_ids=microsoft_graph_sharepoint_ids, system=system, columns=columns, content_types=content_types, drive=drive, items=items, subscriptions=subscriptions)
        content_type = kwargs.pop("content_type", "application/json")
        accept = "application/json"

        # Construct URL
        url = self.update_list.metadata['url']  # type: ignore
        path_format_arguments = {
            'drive-id': self._serialize.url("drive_id", drive_id, 'str'),
        }
        url = self._client.format_url(url, **path_format_arguments)

        # Construct parameters
        query_parameters = {}  # type: Dict[str, Any]

        # Construct headers
        header_parameters = {}  # type: Dict[str, Any]
        header_parameters['Content-Type'] = self._serialize.header("content_type", content_type, 'str')
        header_parameters['Accept'] = self._serialize.header("accept", accept, 'str')

        body_content_kwargs = {}  # type: Dict[str, Any]
        body_content = self._serialize.body(_body, 'MicrosoftGraphList')
        body_content_kwargs['content'] = body_content
        request = self._client.patch(url, query_parameters, header_parameters, **body_content_kwargs)

        pipeline_response = self._client._pipeline.run(request, stream=False, **kwargs)
        response = pipeline_response.http_response

        if response.status_code not in [204]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            error = self._deserialize(models.OdataError, response)
            raise HttpResponseError(response=response, model=error, error_format=ARMErrorFormat)

        if cls:
            return cls(pipeline_response, None, {})

    update_list.metadata = {'url': '/drives/{drive-id}/list'}  # type: ignore

    def delete_list(
        self,
        drive_id,  # type: str
        if_match=None,  # type: Optional[str]
        **kwargs  # type: Any
    ):
        # type: (...) -> None
        """Delete navigation property list for drives.

        Delete navigation property list for drives.

        :param drive_id: key: id of drive.
        :type drive_id: str
        :param if_match: ETag.
        :type if_match: str
        :keyword callable cls: A custom type or function that will be passed the direct response
        :return: None, or the result of cls(response)
        :rtype: None
        :raises: ~azure.core.exceptions.HttpResponseError
        """
        cls = kwargs.pop('cls', None)  # type: ClsType[None]
        error_map = {404: ResourceNotFoundError, 409: ResourceExistsError}
        error_map.update(kwargs.pop('error_map', {}))
        accept = "application/json"

        # Construct URL
        url = self.delete_list.metadata['url']  # type: ignore
        path_format_arguments = {
            'drive-id': self._serialize.url("drive_id", drive_id, 'str'),
        }
        url = self._client.format_url(url, **path_format_arguments)

        # Construct parameters
        query_parameters = {}  # type: Dict[str, Any]

        # Construct headers
        header_parameters = {}  # type: Dict[str, Any]
        if if_match is not None:
            header_parameters['If-Match'] = self._serialize.header("if_match", if_match, 'str')
        header_parameters['Accept'] = self._serialize.header("accept", accept, 'str')

        request = self._client.delete(url, query_parameters, header_parameters)
        pipeline_response = self._client._pipeline.run(request, stream=False, **kwargs)
        response = pipeline_response.http_response

        if response.status_code not in [204]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            error = self._deserialize(models.OdataError, response)
            raise HttpResponseError(response=response, model=error, error_format=ARMErrorFormat)

        if cls:
            return cls(pipeline_response, None, {})

    delete_list.metadata = {'url': '/drives/{drive-id}/list'}  # type: ignore

    def recent(
        self,
        drive_id,  # type: str
        **kwargs  # type: Any
    ):
        # type: (...) -> List["models.MicrosoftGraphDriveItem"]
        """Invoke function recent.

        Invoke function recent.

        :param drive_id: key: id of drive.
        :type drive_id: str
        :keyword callable cls: A custom type or function that will be passed the direct response
        :return: list of MicrosoftGraphDriveItem, or the result of cls(response)
        :rtype: list[~files.models.MicrosoftGraphDriveItem]
        :raises: ~azure.core.exceptions.HttpResponseError
        """
        cls = kwargs.pop('cls', None)  # type: ClsType[List["models.MicrosoftGraphDriveItem"]]
        error_map = {404: ResourceNotFoundError, 409: ResourceExistsError}
        error_map.update(kwargs.pop('error_map', {}))
        accept = "application/json"

        # Construct URL
        url = self.recent.metadata['url']  # type: ignore
        path_format_arguments = {
            'drive-id': self._serialize.url("drive_id", drive_id, 'str'),
        }
        url = self._client.format_url(url, **path_format_arguments)

        # Construct parameters
        query_parameters = {}  # type: Dict[str, Any]

        # Construct headers
        header_parameters = {}  # type: Dict[str, Any]
        header_parameters['Accept'] = self._serialize.header("accept", accept, 'str')
        header_parameters['Accept'] = 'application/json'

        request = self._client.get(url, query_parameters, header_parameters)
        pipeline_response = self._client._pipeline.run(request, stream=False, **kwargs)
        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            error = self._deserialize(models.OdataError, response)
            raise HttpResponseError(response=response, model=error, error_format=ARMErrorFormat)

        deserialized = self._deserialize('[MicrosoftGraphDriveItem]', pipeline_response)

        if cls:
            return cls(pipeline_response, deserialized, {})

        return deserialized
    recent.metadata = {'url': '/drives/{drive-id}/microsoft.graph.recent()'}  # type: ignore

    def search(
        self,
        drive_id,  # type: str
        q,  # type: str
        **kwargs  # type: Any
    ):
        # type: (...) -> List["models.MicrosoftGraphDriveItem"]
        """Invoke function search.

        Invoke function search.

        :param drive_id: key: id of drive.
        :type drive_id: str
        :param q:
        :type q: str
        :keyword callable cls: A custom type or function that will be passed the direct response
        :return: list of MicrosoftGraphDriveItem, or the result of cls(response)
        :rtype: list[~files.models.MicrosoftGraphDriveItem]
        :raises: ~azure.core.exceptions.HttpResponseError
        """
        cls = kwargs.pop('cls', None)  # type: ClsType[List["models.MicrosoftGraphDriveItem"]]
        error_map = {404: ResourceNotFoundError, 409: ResourceExistsError}
        error_map.update(kwargs.pop('error_map', {}))
        accept = "application/json"

        # Construct URL
        url = self.search.metadata['url']  # type: ignore
        path_format_arguments = {
            'drive-id': self._serialize.url("drive_id", drive_id, 'str'),
            'q': self._serialize.url("q", q, 'str'),
        }
        url = self._client.format_url(url, **path_format_arguments)

        # Construct parameters
        query_parameters = {}  # type: Dict[str, Any]

        # Construct headers
        header_parameters = {}  # type: Dict[str, Any]
        header_parameters['Accept'] = self._serialize.header("accept", accept, 'str')
        header_parameters['Accept'] = 'application/json'

        request = self._client.get(url, query_parameters, header_parameters)
        pipeline_response = self._client._pipeline.run(request, stream=False, **kwargs)
        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            error = self._deserialize(models.OdataError, response)
            raise HttpResponseError(response=response, model=error, error_format=ARMErrorFormat)

        deserialized = self._deserialize('[MicrosoftGraphDriveItem]', pipeline_response)

        if cls:
            return cls(pipeline_response, deserialized, {})

        return deserialized
    search.metadata = {'url': '/drives/{drive-id}/microsoft.graph.search(q=\'{q}\')'}  # type: ignore

    def shared_with_me(
        self,
        drive_id,  # type: str
        **kwargs  # type: Any
    ):
        # type: (...) -> List["models.MicrosoftGraphDriveItem"]
        """Invoke function sharedWithMe.

        Invoke function sharedWithMe.

        :param drive_id: key: id of drive.
        :type drive_id: str
        :keyword callable cls: A custom type or function that will be passed the direct response
        :return: list of MicrosoftGraphDriveItem, or the result of cls(response)
        :rtype: list[~files.models.MicrosoftGraphDriveItem]
        :raises: ~azure.core.exceptions.HttpResponseError
        """
        cls = kwargs.pop('cls', None)  # type: ClsType[List["models.MicrosoftGraphDriveItem"]]
        error_map = {404: ResourceNotFoundError, 409: ResourceExistsError}
        error_map.update(kwargs.pop('error_map', {}))
        accept = "application/json"

        # Construct URL
        url = self.shared_with_me.metadata['url']  # type: ignore
        path_format_arguments = {
            'drive-id': self._serialize.url("drive_id", drive_id, 'str'),
        }
        url = self._client.format_url(url, **path_format_arguments)

        # Construct parameters
        query_parameters = {}  # type: Dict[str, Any]

        # Construct headers
        header_parameters = {}  # type: Dict[str, Any]
        header_parameters['Accept'] = self._serialize.header("accept", accept, 'str')
        header_parameters['Accept'] = 'application/json'

        request = self._client.get(url, query_parameters, header_parameters)
        pipeline_response = self._client._pipeline.run(request, stream=False, **kwargs)
        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            error = self._deserialize(models.OdataError, response)
            raise HttpResponseError(response=response, model=error, error_format=ARMErrorFormat)

        deserialized = self._deserialize('[MicrosoftGraphDriveItem]', pipeline_response)

        if cls:
            return cls(pipeline_response, deserialized, {})

        return deserialized
    shared_with_me.metadata = {'url': '/drives/{drive-id}/microsoft.graph.sharedWithMe()'}  # type: ignore

    def get_root(
        self,
        drive_id,  # type: str
        select=None,  # type: Optional[List[Union[str, "models.Enum106"]]]
        expand=None,  # type: Optional[List[Union[str, "models.Enum107"]]]
        **kwargs  # type: Any
    ):
        # type: (...) -> "models.MicrosoftGraphDriveItem"
        """Get root from drives.

        Get root from drives.

        :param drive_id: key: id of drive.
        :type drive_id: str
        :param select: Select properties to be returned.
        :type select: list[str or ~files.models.Enum106]
        :param expand: Expand related entities.
        :type expand: list[str or ~files.models.Enum107]
        :keyword callable cls: A custom type or function that will be passed the direct response
        :return: MicrosoftGraphDriveItem, or the result of cls(response)
        :rtype: ~files.models.MicrosoftGraphDriveItem
        :raises: ~azure.core.exceptions.HttpResponseError
        """
        cls = kwargs.pop('cls', None)  # type: ClsType["models.MicrosoftGraphDriveItem"]
        error_map = {404: ResourceNotFoundError, 409: ResourceExistsError}
        error_map.update(kwargs.pop('error_map', {}))
        accept = "application/json"

        # Construct URL
        url = self.get_root.metadata['url']  # type: ignore
        path_format_arguments = {
            'drive-id': self._serialize.url("drive_id", drive_id, 'str'),
        }
        url = self._client.format_url(url, **path_format_arguments)

        # Construct parameters
        query_parameters = {}  # type: Dict[str, Any]
        if select is not None:
            query_parameters['$select'] = self._serialize.query("select", select, '[str]', div=',')
        if expand is not None:
            query_parameters['$expand'] = self._serialize.query("expand", expand, '[str]', div=',')

        # Construct headers
        header_parameters = {}  # type: Dict[str, Any]
        header_parameters['Accept'] = self._serialize.header("accept", accept, 'str')
        header_parameters['Accept'] = 'application/json'

        request = self._client.get(url, query_parameters, header_parameters)
        pipeline_response = self._client._pipeline.run(request, stream=False, **kwargs)
        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            error = self._deserialize(models.OdataError, response)
            raise HttpResponseError(response=response, model=error, error_format=ARMErrorFormat)

        deserialized = self._deserialize('MicrosoftGraphDriveItem', pipeline_response)

        if cls:
            return cls(pipeline_response, deserialized, {})

        return deserialized
    get_root.metadata = {'url': '/drives/{drive-id}/root'}  # type: ignore

    def update_root(
        self,
        drive_id,  # type: str
        id=None,  # type: Optional[str]
        created_date_time=None,  # type: Optional[datetime.datetime]
        description=None,  # type: Optional[str]
        e_tag=None,  # type: Optional[str]
        last_modified_date_time=None,  # type: Optional[datetime.datetime]
        name=None,  # type: Optional[str]
        web_url=None,  # type: Optional[str]
        created_by_user=None,  # type: Optional["models.MicrosoftGraphUser"]
        last_modified_by_user=None,  # type: Optional["models.MicrosoftGraphUser"]
        microsoft_graph_item_reference_drive_id=None,  # type: Optional[str]
        drive_type=None,  # type: Optional[str]
        microsoft_graph_item_reference_id=None,  # type: Optional[str]
        microsoft_graph_item_reference_name=None,  # type: Optional[str]
        path=None,  # type: Optional[str]
        share_id=None,  # type: Optional[str]
        sharepoint_ids=None,  # type: Optional["models.MicrosoftGraphSharepointIds"]
        site_id=None,  # type: Optional[str]
        display_name=None,  # type: Optional[str]
        microsoft_graph_identity_id=None,  # type: Optional[str]
        microsoft_graph_identity_display_name=None,  # type: Optional[str]
        id1=None,  # type: Optional[str]
        display_name1=None,  # type: Optional[str]
        id2=None,  # type: Optional[str]
        display_name2=None,  # type: Optional[str]
        id3=None,  # type: Optional[str]
        display_name3=None,  # type: Optional[str]
        id4=None,  # type: Optional[str]
        display_name4=None,  # type: Optional[str]
        id5=None,  # type: Optional[str]
        audio=None,  # type: Optional["models.MicrosoftGraphAudio"]
        content=None,  # type: Optional[bytes]
        c_tag=None,  # type: Optional[str]
        file_system_info=None,  # type: Optional["models.MicrosoftGraphFileSystemInfo"]
        image=None,  # type: Optional["models.MicrosoftGraphImage"]
        location=None,  # type: Optional["models.MicrosoftGraphGeoCoordinates"]
        photo=None,  # type: Optional["models.MicrosoftGraphPhoto"]
        publication=None,  # type: Optional["models.MicrosoftGraphPublicationFacet"]
        root=None,  # type: Optional[Dict[str, object]]
        microsoft_graph_sharepoint_ids=None,  # type: Optional["models.MicrosoftGraphSharepointIds"]
        size=None,  # type: Optional[int]
        video=None,  # type: Optional["models.MicrosoftGraphVideo"]
        web_dav_url=None,  # type: Optional[str]
        analytics=None,  # type: Optional["models.MicrosoftGraphItemAnalytics"]
        children=None,  # type: Optional[List["models.MicrosoftGraphDriveItem"]]
        permissions=None,  # type: Optional[List["models.MicrosoftGraphPermission"]]
        subscriptions=None,  # type: Optional[List["models.MicrosoftGraphSubscription"]]
        thumbnails=None,  # type: Optional[List["models.MicrosoftGraphThumbnailSet"]]
        versions=None,  # type: Optional[List["models.MicrosoftGraphDriveItemVersion"]]
        microsoft_graph_entity_id=None,  # type: Optional[str]
        microsoft_graph_base_item_created_date_time_created_date_time=None,  # type: Optional[datetime.datetime]
        microsoft_graph_base_item_description=None,  # type: Optional[str]
        microsoft_graph_base_item_e_tag=None,  # type: Optional[str]
        microsoft_graph_base_item_last_modified_date_time_last_modified_date_time=None,  # type: Optional[datetime.datetime]
        microsoft_graph_base_item_name=None,  # type: Optional[str]
        microsoft_graph_base_item_web_url=None,  # type: Optional[str]
        microsoft_graph_user_created_by_user=None,  # type: Optional["models.MicrosoftGraphUser"]
        microsoft_graph_user_last_modified_by_user=None,  # type: Optional["models.MicrosoftGraphUser"]
        drive_id1=None,  # type: Optional[str]
        microsoft_graph_item_reference_drive_type=None,  # type: Optional[str]
        id6=None,  # type: Optional[str]
        name1=None,  # type: Optional[str]
        microsoft_graph_item_reference_path=None,  # type: Optional[str]
        microsoft_graph_item_reference_share_id=None,  # type: Optional[str]
        sharepoint_ids1=None,  # type: Optional["models.MicrosoftGraphSharepointIds"]
        microsoft_graph_item_reference_site_id=None,  # type: Optional[str]
        display_name5=None,  # type: Optional[str]
        id7=None,  # type: Optional[str]
        display_name6=None,  # type: Optional[str]
        id8=None,  # type: Optional[str]
        display_name7=None,  # type: Optional[str]
        id9=None,  # type: Optional[str]
        display_name8=None,  # type: Optional[str]
        id10=None,  # type: Optional[str]
        display_name9=None,  # type: Optional[str]
        id11=None,  # type: Optional[str]
        display_name10=None,  # type: Optional[str]
        id12=None,  # type: Optional[str]
        content_type_parameter=None,  # type: Optional["models.MicrosoftGraphContentTypeInfo"]
        sharepoint_ids2=None,  # type: Optional["models.MicrosoftGraphSharepointIds"]
        microsoft_graph_item_analytics=None,  # type: Optional["models.MicrosoftGraphItemAnalytics"]
        drive_item=None,  # type: Optional["models.MicrosoftGraphDriveItem"]
        microsoft_graph_list_item_versions=None,  # type: Optional[List["models.MicrosoftGraphListItemVersion"]]
        id13=None,  # type: Optional[str]
        id14=None,  # type: Optional[str]
        application=None,  # type: Optional["models.MicrosoftGraphWorkbookApplication"]
        comments=None,  # type: Optional[List["models.MicrosoftGraphWorkbookComment"]]
        functions=None,  # type: Optional["models.MicrosoftGraphWorkbookFunctions"]
        names=None,  # type: Optional[List["models.MicrosoftGraphWorkbookNamedItem"]]
        operations=None,  # type: Optional[List["models.MicrosoftGraphWorkbookOperation"]]
        tables=None,  # type: Optional[List["models.MicrosoftGraphWorkbookTable"]]
        worksheets=None,  # type: Optional[List["models.MicrosoftGraphWorkbookWorksheet"]]
        microsoft_graph_special_folder_name=None,  # type: Optional[str]
        owner=None,  # type: Optional["models.MicrosoftGraphIdentitySet"]
        scope=None,  # type: Optional[str]
        shared_by=None,  # type: Optional["models.MicrosoftGraphIdentitySet"]
        shared_date_time=None,  # type: Optional[datetime.datetime]
        on_click_telemetry_url=None,  # type: Optional[str]
        created_by=None,  # type: Optional["models.MicrosoftGraphIdentitySet"]
        microsoft_graph_remote_item_created_date_time_created_date_time=None,  # type: Optional[datetime.datetime]
        file=None,  # type: Optional["models.MicrosoftGraphFile"]
        microsoft_graph_file_system_info_file_system_info=None,  # type: Optional["models.MicrosoftGraphFileSystemInfo"]
        folder=None,  # type: Optional["models.MicrosoftGraphFolder"]
        microsoft_graph_remote_item_id=None,  # type: Optional[str]
        microsoft_graph_image=None,  # type: Optional["models.MicrosoftGraphImage"]
        last_modified_by=None,  # type: Optional["models.MicrosoftGraphIdentitySet"]
        microsoft_graph_remote_item_last_modified_date_time_last_modified_date_time=None,  # type: Optional[datetime.datetime]
        microsoft_graph_remote_item_name=None,  # type: Optional[str]
        package=None,  # type: Optional["models.MicrosoftGraphPackage"]
        parent_reference=None,  # type: Optional["models.MicrosoftGraphItemReference"]
        shared=None,  # type: Optional["models.MicrosoftGraphShared"]
        sharepoint_ids3=None,  # type: Optional["models.MicrosoftGraphSharepointIds"]
        integer_size=None,  # type: Optional[int]
        special_folder=None,  # type: Optional["models.MicrosoftGraphSpecialFolder"]
        microsoft_graph_video=None,  # type: Optional["models.MicrosoftGraphVideo"]
        microsoft_graph_remote_item_web_dav_url_web_dav_url=None,  # type: Optional[str]
        microsoft_graph_remote_item_web_url=None,  # type: Optional[str]
        queued_date_time=None,  # type: Optional[datetime.datetime]
        type=None,  # type: Optional[str]
        child_count=None,  # type: Optional[int]
        view=None,  # type: Optional["models.MicrosoftGraphFolderView"]
        hashes=None,  # type: Optional["models.MicrosoftGraphHashes"]
        mime_type=None,  # type: Optional[str]
        processing_metadata=None,  # type: Optional[bool]
        state=None,  # type: Optional[str]
        **kwargs  # type: Any
    ):
        # type: (...) -> None
        """Update the navigation property root in drives.

        Update the navigation property root in drives.

        :param drive_id: key: id of drive.
        :type drive_id: str
        :param id: Read-only.
        :type id: str
        :param created_date_time: Date and time of item creation. Read-only.
        :type created_date_time: ~datetime.datetime
        :param description: Provides a user-visible description of the item. Optional.
        :type description: str
        :param e_tag: ETag for the item. Read-only.
        :type e_tag: str
        :param last_modified_date_time: Date and time the item was last modified. Read-only.
        :type last_modified_date_time: ~datetime.datetime
        :param name: The name of the item. Read-write.
        :type name: str
        :param web_url: URL that displays the resource in the browser. Read-only.
        :type web_url: str
        :param created_by_user: Represents an Azure Active Directory user object.
        :type created_by_user: ~files.models.MicrosoftGraphUser
        :param last_modified_by_user: Represents an Azure Active Directory user object.
        :type last_modified_by_user: ~files.models.MicrosoftGraphUser
        :param microsoft_graph_item_reference_drive_id: Unique identifier of the drive instance that
         contains the item. Read-only.
        :type microsoft_graph_item_reference_drive_id: str
        :param drive_type: Identifies the type of drive. See [drive][] resource for values.
        :type drive_type: str
        :param microsoft_graph_item_reference_id: Unique identifier of the item in the drive. Read-
         only.
        :type microsoft_graph_item_reference_id: str
        :param microsoft_graph_item_reference_name: The name of the item being referenced. Read-only.
        :type microsoft_graph_item_reference_name: str
        :param path: Path that can be used to navigate to the item. Read-only.
        :type path: str
        :param share_id: A unique identifier for a shared resource that can be accessed via the
         [Shares][] API.
        :type share_id: str
        :param sharepoint_ids: sharepointIds.
        :type sharepoint_ids: ~files.models.MicrosoftGraphSharepointIds
        :param site_id:
        :type site_id: str
        :param display_name: The identity's display name. Note that this may not always be available or
         up to date. For example, if a user changes their display name, the API may show the new value
         in a future response, but the items associated with the user won't show up as having changed
         when using delta.
        :type display_name: str
        :param microsoft_graph_identity_id: Unique identifier for the identity.
        :type microsoft_graph_identity_id: str
        :param microsoft_graph_identity_display_name: The identity's display name. Note that this may
         not always be available or up to date. For example, if a user changes their display name, the
         API may show the new value in a future response, but the items associated with the user won't
         show up as having changed when using delta.
        :type microsoft_graph_identity_display_name: str
        :param id1: Unique identifier for the identity.
        :type id1: str
        :param display_name1: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name1: str
        :param id2: Unique identifier for the identity.
        :type id2: str
        :param display_name2: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name2: str
        :param id3: Unique identifier for the identity.
        :type id3: str
        :param display_name3: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name3: str
        :param id4: Unique identifier for the identity.
        :type id4: str
        :param display_name4: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name4: str
        :param id5: Unique identifier for the identity.
        :type id5: str
        :param audio: audio.
        :type audio: ~files.models.MicrosoftGraphAudio
        :param content: The content stream, if the item represents a file.
        :type content: bytes
        :param c_tag: An eTag for the content of the item. This eTag is not changed if only the
         metadata is changed. Note This property is not returned if the item is a folder. Read-only.
        :type c_tag: str
        :param file_system_info: fileSystemInfo.
        :type file_system_info: ~files.models.MicrosoftGraphFileSystemInfo
        :param image: image.
        :type image: ~files.models.MicrosoftGraphImage
        :param location: geoCoordinates.
        :type location: ~files.models.MicrosoftGraphGeoCoordinates
        :param photo: photo.
        :type photo: ~files.models.MicrosoftGraphPhoto
        :param publication: publicationFacet.
        :type publication: ~files.models.MicrosoftGraphPublicationFacet
        :param root: root.
        :type root: dict[str, object]
        :param microsoft_graph_sharepoint_ids: sharepointIds.
        :type microsoft_graph_sharepoint_ids: ~files.models.MicrosoftGraphSharepointIds
        :param size: Size of the item in bytes. Read-only.
        :type size: long
        :param video: video.
        :type video: ~files.models.MicrosoftGraphVideo
        :param web_dav_url: WebDAV compatible URL for the item.
        :type web_dav_url: str
        :param analytics: itemAnalytics.
        :type analytics: ~files.models.MicrosoftGraphItemAnalytics
        :param children: Collection containing Item objects for the immediate children of Item. Only
         items representing folders have children. Read-only. Nullable.
        :type children: list[~files.models.MicrosoftGraphDriveItem]
        :param permissions: The set of permissions for the item. Read-only. Nullable.
        :type permissions: list[~files.models.MicrosoftGraphPermission]
        :param subscriptions: The set of subscriptions on the item. Only supported on the root of a
         drive.
        :type subscriptions: list[~files.models.MicrosoftGraphSubscription]
        :param thumbnails: Collection containing [ThumbnailSet][] objects associated with the item. For
         more info, see [getting thumbnails][]. Read-only. Nullable.
        :type thumbnails: list[~files.models.MicrosoftGraphThumbnailSet]
        :param versions: The list of previous versions of the item. For more info, see [getting
         previous versions][]. Read-only. Nullable.
        :type versions: list[~files.models.MicrosoftGraphDriveItemVersion]
        :param microsoft_graph_entity_id: Read-only.
        :type microsoft_graph_entity_id: str
        :param microsoft_graph_base_item_created_date_time_created_date_time: Date and time of item
         creation. Read-only.
        :type microsoft_graph_base_item_created_date_time_created_date_time: ~datetime.datetime
        :param microsoft_graph_base_item_description: Provides a user-visible description of the item.
         Optional.
        :type microsoft_graph_base_item_description: str
        :param microsoft_graph_base_item_e_tag: ETag for the item. Read-only.
        :type microsoft_graph_base_item_e_tag: str
        :param microsoft_graph_base_item_last_modified_date_time_last_modified_date_time: Date and time
         the item was last modified. Read-only.
        :type microsoft_graph_base_item_last_modified_date_time_last_modified_date_time: ~datetime.datetime
        :param microsoft_graph_base_item_name: The name of the item. Read-write.
        :type microsoft_graph_base_item_name: str
        :param microsoft_graph_base_item_web_url: URL that displays the resource in the browser. Read-
         only.
        :type microsoft_graph_base_item_web_url: str
        :param microsoft_graph_user_created_by_user: Represents an Azure Active Directory user object.
        :type microsoft_graph_user_created_by_user: ~files.models.MicrosoftGraphUser
        :param microsoft_graph_user_last_modified_by_user: Represents an Azure Active Directory user
         object.
        :type microsoft_graph_user_last_modified_by_user: ~files.models.MicrosoftGraphUser
        :param drive_id1: Unique identifier of the drive instance that contains the item. Read-only.
        :type drive_id1: str
        :param microsoft_graph_item_reference_drive_type: Identifies the type of drive. See [drive][]
         resource for values.
        :type microsoft_graph_item_reference_drive_type: str
        :param id6: Unique identifier of the item in the drive. Read-only.
        :type id6: str
        :param name1: The name of the item being referenced. Read-only.
        :type name1: str
        :param microsoft_graph_item_reference_path: Path that can be used to navigate to the item.
         Read-only.
        :type microsoft_graph_item_reference_path: str
        :param microsoft_graph_item_reference_share_id: A unique identifier for a shared resource that
         can be accessed via the [Shares][] API.
        :type microsoft_graph_item_reference_share_id: str
        :param sharepoint_ids1: sharepointIds.
        :type sharepoint_ids1: ~files.models.MicrosoftGraphSharepointIds
        :param microsoft_graph_item_reference_site_id:
        :type microsoft_graph_item_reference_site_id: str
        :param display_name5: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name5: str
        :param id7: Unique identifier for the identity.
        :type id7: str
        :param display_name6: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name6: str
        :param id8: Unique identifier for the identity.
        :type id8: str
        :param display_name7: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name7: str
        :param id9: Unique identifier for the identity.
        :type id9: str
        :param display_name8: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name8: str
        :param id10: Unique identifier for the identity.
        :type id10: str
        :param display_name9: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name9: str
        :param id11: Unique identifier for the identity.
        :type id11: str
        :param display_name10: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name10: str
        :param id12: Unique identifier for the identity.
        :type id12: str
        :param content_type_parameter: contentTypeInfo.
        :type content_type_parameter: ~files.models.MicrosoftGraphContentTypeInfo
        :param sharepoint_ids2: sharepointIds.
        :type sharepoint_ids2: ~files.models.MicrosoftGraphSharepointIds
        :param microsoft_graph_item_analytics: itemAnalytics.
        :type microsoft_graph_item_analytics: ~files.models.MicrosoftGraphItemAnalytics
        :param drive_item: driveItem.
        :type drive_item: ~files.models.MicrosoftGraphDriveItem
        :param microsoft_graph_list_item_versions: The list of previous versions of the list item.
        :type microsoft_graph_list_item_versions: list[~files.models.MicrosoftGraphListItemVersion]
        :param id13: Read-only.
        :type id13: str
        :param id14: Read-only.
        :type id14: str
        :param application: workbookApplication.
        :type application: ~files.models.MicrosoftGraphWorkbookApplication
        :param comments:
        :type comments: list[~files.models.MicrosoftGraphWorkbookComment]
        :param functions: workbookFunctions.
        :type functions: ~files.models.MicrosoftGraphWorkbookFunctions
        :param names: Represents a collection of workbook scoped named items (named ranges and
         constants). Read-only.
        :type names: list[~files.models.MicrosoftGraphWorkbookNamedItem]
        :param operations: The status of workbook operations. Getting an operation collection is not
         supported, but you can get the status of a long-running operation if the Location header is
         returned in the response. Read-only.
        :type operations: list[~files.models.MicrosoftGraphWorkbookOperation]
        :param tables: Represents a collection of tables associated with the workbook. Read-only.
        :type tables: list[~files.models.MicrosoftGraphWorkbookTable]
        :param worksheets: Represents a collection of worksheets associated with the workbook. Read-
         only.
        :type worksheets: list[~files.models.MicrosoftGraphWorkbookWorksheet]
        :param microsoft_graph_special_folder_name: The unique identifier for this item in the
         /drive/special collection.
        :type microsoft_graph_special_folder_name: str
        :param owner: identitySet.
        :type owner: ~files.models.MicrosoftGraphIdentitySet
        :param scope: Indicates the scope of how the item is shared: anonymous, organization, or users.
         Read-only.
        :type scope: str
        :param shared_by: identitySet.
        :type shared_by: ~files.models.MicrosoftGraphIdentitySet
        :param shared_date_time: The UTC date and time when the item was shared. Read-only.
        :type shared_date_time: ~datetime.datetime
        :param on_click_telemetry_url: A callback URL that can be used to record telemetry information.
         The application should issue a GET on this URL if the user interacts with this item to improve
         the quality of results.
        :type on_click_telemetry_url: str
        :param created_by: identitySet.
        :type created_by: ~files.models.MicrosoftGraphIdentitySet
        :param microsoft_graph_remote_item_created_date_time_created_date_time: Date and time of item
         creation. Read-only.
        :type microsoft_graph_remote_item_created_date_time_created_date_time: ~datetime.datetime
        :param file: file.
        :type file: ~files.models.MicrosoftGraphFile
        :param microsoft_graph_file_system_info_file_system_info: fileSystemInfo.
        :type microsoft_graph_file_system_info_file_system_info: ~files.models.MicrosoftGraphFileSystemInfo
        :param folder: folder.
        :type folder: ~files.models.MicrosoftGraphFolder
        :param microsoft_graph_remote_item_id: Unique identifier for the remote item in its drive.
         Read-only.
        :type microsoft_graph_remote_item_id: str
        :param microsoft_graph_image: image.
        :type microsoft_graph_image: ~files.models.MicrosoftGraphImage
        :param last_modified_by: identitySet.
        :type last_modified_by: ~files.models.MicrosoftGraphIdentitySet
        :param microsoft_graph_remote_item_last_modified_date_time_last_modified_date_time: Date and
         time the item was last modified. Read-only.
        :type microsoft_graph_remote_item_last_modified_date_time_last_modified_date_time: ~datetime.datetime
        :param microsoft_graph_remote_item_name: Optional. Filename of the remote item. Read-only.
        :type microsoft_graph_remote_item_name: str
        :param package: package.
        :type package: ~files.models.MicrosoftGraphPackage
        :param parent_reference: itemReference.
        :type parent_reference: ~files.models.MicrosoftGraphItemReference
        :param shared: shared.
        :type shared: ~files.models.MicrosoftGraphShared
        :param sharepoint_ids3: sharepointIds.
        :type sharepoint_ids3: ~files.models.MicrosoftGraphSharepointIds
        :param integer_size: Size of the remote item. Read-only.
        :type integer_size: long
        :param special_folder: specialFolder.
        :type special_folder: ~files.models.MicrosoftGraphSpecialFolder
        :param microsoft_graph_video: video.
        :type microsoft_graph_video: ~files.models.MicrosoftGraphVideo
        :param microsoft_graph_remote_item_web_dav_url_web_dav_url: DAV compatible URL for the item.
        :type microsoft_graph_remote_item_web_dav_url_web_dav_url: str
        :param microsoft_graph_remote_item_web_url: URL that displays the resource in the browser.
         Read-only.
        :type microsoft_graph_remote_item_web_url: str
        :param queued_date_time: Date and time the pending binary operation was queued in UTC time.
         Read-only.
        :type queued_date_time: ~datetime.datetime
        :param type: A string indicating the type of package. While oneNote is the only currently
         defined value, you should expect other package types to be returned and handle them
         accordingly.
        :type type: str
        :param child_count: Number of children contained immediately within this container.
        :type child_count: int
        :param view: folderView.
        :type view: ~files.models.MicrosoftGraphFolderView
        :param hashes: hashes.
        :type hashes: ~files.models.MicrosoftGraphHashes
        :param mime_type: The MIME type for the file. This is determined by logic on the server and
         might not be the value provided when the file was uploaded. Read-only.
        :type mime_type: str
        :param processing_metadata:
        :type processing_metadata: bool
        :param state: Represents the state of the deleted item.
        :type state: str
        :keyword callable cls: A custom type or function that will be passed the direct response
        :return: None, or the result of cls(response)
        :rtype: None
        :raises: ~azure.core.exceptions.HttpResponseError
        """
        cls = kwargs.pop('cls', None)  # type: ClsType[None]
        error_map = {404: ResourceNotFoundError, 409: ResourceExistsError}
        error_map.update(kwargs.pop('error_map', {}))

        _body = models.MicrosoftGraphDriveItem(id=id, created_date_time=created_date_time, description=description, e_tag=e_tag, last_modified_date_time=last_modified_date_time, name=name, web_url=web_url, created_by_user=created_by_user, last_modified_by_user=last_modified_by_user, drive_id=microsoft_graph_item_reference_drive_id, drive_type=drive_type, id_parent_reference_id=microsoft_graph_item_reference_id, name_parent_reference_name=microsoft_graph_item_reference_name, path=path, share_id=share_id, sharepoint_ids=sharepoint_ids, site_id=site_id, display_name_last_modified_by_user_display_name=display_name, id_last_modified_by_user_id=microsoft_graph_identity_id, display_name_last_modified_by_device_display_name=microsoft_graph_identity_display_name, id_last_modified_by_device_id=id1, display_name_last_modified_by_application_display_name=display_name1, id_last_modified_by_application_id=id2, display_name_created_by_user_display_name=display_name2, id_created_by_user_id=id3, display_name_created_by_device_display_name=display_name3, id_created_by_device_id=id4, display_name_created_by_application_display_name=display_name4, id_created_by_application_id=id5, audio=audio, content=content, c_tag=c_tag, file_system_info=file_system_info, image=image, location=location, photo=photo, publication=publication, root=root, sharepoint_ids=microsoft_graph_sharepoint_ids, size=size, video=video, web_dav_url=web_dav_url, analytics=analytics, children=children, permissions=permissions, subscriptions=subscriptions, thumbnails=thumbnails, versions=versions, id_list_item_id=microsoft_graph_entity_id, created_date_time_list_item_created_date_time=microsoft_graph_base_item_created_date_time_created_date_time, description_list_item_description=microsoft_graph_base_item_description, e_tag_list_item_e_tag=microsoft_graph_base_item_e_tag, last_modified_date_time_list_item_last_modified_date_time=microsoft_graph_base_item_last_modified_date_time_last_modified_date_time, name_list_item_name=microsoft_graph_base_item_name, web_url_list_item_web_url=microsoft_graph_base_item_web_url, created_by_user_list_item_created_by_user=microsoft_graph_user_created_by_user, last_modified_by_user_list_item_last_modified_by_user=microsoft_graph_user_last_modified_by_user, drive_id_list_item_parent_reference_drive_id=drive_id1, drive_type_list_item_parent_reference_drive_type=microsoft_graph_item_reference_drive_type, id_list_item_parent_reference_id=id6, name_list_item_parent_reference_name=name1, path_list_item_parent_reference_path=microsoft_graph_item_reference_path, share_id_list_item_parent_reference_share_id=microsoft_graph_item_reference_share_id, sharepoint_ids_list_item_parent_reference_sharepoint_ids=sharepoint_ids1, site_id_list_item_parent_reference_site_id=microsoft_graph_item_reference_site_id, display_name_list_item_last_modified_by_user_display_name=display_name5, id_list_item_last_modified_by_user_id=id7, display_name_list_item_last_modified_by_device_display_name=display_name6, id_list_item_last_modified_by_device_id=id8, display_name_list_item_last_modified_by_application_display_name=display_name7, id_list_item_last_modified_by_application_id=id9, display_name_list_item_created_by_user_display_name=display_name8, id_list_item_created_by_user_id=id10, display_name_list_item_created_by_device_display_name=display_name9, id_list_item_created_by_device_id=id11, display_name_list_item_created_by_application_display_name=display_name10, id_list_item_created_by_application_id=id12, content_type=content_type_parameter, sharepoint_ids_list_item_sharepoint_ids=sharepoint_ids2, analytics_list_item_analytics=microsoft_graph_item_analytics, drive_item=drive_item, versions_list_item_versions=microsoft_graph_list_item_versions, id_list_item_fields_id=id13, id_workbook_id=id14, application=application, comments=comments, functions=functions, names=names, operations=operations, tables=tables, worksheets=worksheets, name_special_folder_name=microsoft_graph_special_folder_name, owner=owner, scope=scope, shared_by=shared_by, shared_date_time=shared_date_time, on_click_telemetry_url=on_click_telemetry_url, created_by=created_by, created_date_time_remote_item_created_date_time=microsoft_graph_remote_item_created_date_time_created_date_time, file=file, file_system_info_remote_item_file_system_info=microsoft_graph_file_system_info_file_system_info, folder=folder, id_remote_item_id=microsoft_graph_remote_item_id, image_remote_item_image=microsoft_graph_image, last_modified_by=last_modified_by, last_modified_date_time_remote_item_last_modified_date_time=microsoft_graph_remote_item_last_modified_date_time_last_modified_date_time, name_remote_item_name=microsoft_graph_remote_item_name, package=package, parent_reference=parent_reference, shared=shared, sharepoint_ids_remote_item_sharepoint_ids=sharepoint_ids3, size_remote_item_size=integer_size, special_folder=special_folder, video_remote_item_video=microsoft_graph_video, web_dav_url_remote_item_web_dav_url=microsoft_graph_remote_item_web_dav_url_web_dav_url, web_url_remote_item_web_url=microsoft_graph_remote_item_web_url, queued_date_time=queued_date_time, type=type, child_count=child_count, view=view, hashes=hashes, mime_type=mime_type, processing_metadata=processing_metadata, state=state)
        content_type = kwargs.pop("content_type", "application/json")
        accept = "application/json"

        # Construct URL
        url = self.update_root.metadata['url']  # type: ignore
        path_format_arguments = {
            'drive-id': self._serialize.url("drive_id", drive_id, 'str'),
        }
        url = self._client.format_url(url, **path_format_arguments)

        # Construct parameters
        query_parameters = {}  # type: Dict[str, Any]

        # Construct headers
        header_parameters = {}  # type: Dict[str, Any]
        header_parameters['Content-Type'] = self._serialize.header("content_type", content_type, 'str')
        header_parameters['Accept'] = self._serialize.header("accept", accept, 'str')

        body_content_kwargs = {}  # type: Dict[str, Any]
        body_content = self._serialize.body(_body, 'MicrosoftGraphDriveItem')
        body_content_kwargs['content'] = body_content
        request = self._client.patch(url, query_parameters, header_parameters, **body_content_kwargs)

        pipeline_response = self._client._pipeline.run(request, stream=False, **kwargs)
        response = pipeline_response.http_response

        if response.status_code not in [204]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            error = self._deserialize(models.OdataError, response)
            raise HttpResponseError(response=response, model=error, error_format=ARMErrorFormat)

        if cls:
            return cls(pipeline_response, None, {})

    update_root.metadata = {'url': '/drives/{drive-id}/root'}  # type: ignore

    def delete_root(
        self,
        drive_id,  # type: str
        if_match=None,  # type: Optional[str]
        **kwargs  # type: Any
    ):
        # type: (...) -> None
        """Delete navigation property root for drives.

        Delete navigation property root for drives.

        :param drive_id: key: id of drive.
        :type drive_id: str
        :param if_match: ETag.
        :type if_match: str
        :keyword callable cls: A custom type or function that will be passed the direct response
        :return: None, or the result of cls(response)
        :rtype: None
        :raises: ~azure.core.exceptions.HttpResponseError
        """
        cls = kwargs.pop('cls', None)  # type: ClsType[None]
        error_map = {404: ResourceNotFoundError, 409: ResourceExistsError}
        error_map.update(kwargs.pop('error_map', {}))
        accept = "application/json"

        # Construct URL
        url = self.delete_root.metadata['url']  # type: ignore
        path_format_arguments = {
            'drive-id': self._serialize.url("drive_id", drive_id, 'str'),
        }
        url = self._client.format_url(url, **path_format_arguments)

        # Construct parameters
        query_parameters = {}  # type: Dict[str, Any]

        # Construct headers
        header_parameters = {}  # type: Dict[str, Any]
        if if_match is not None:
            header_parameters['If-Match'] = self._serialize.header("if_match", if_match, 'str')
        header_parameters['Accept'] = self._serialize.header("accept", accept, 'str')

        request = self._client.delete(url, query_parameters, header_parameters)
        pipeline_response = self._client._pipeline.run(request, stream=False, **kwargs)
        response = pipeline_response.http_response

        if response.status_code not in [204]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            error = self._deserialize(models.OdataError, response)
            raise HttpResponseError(response=response, model=error, error_format=ARMErrorFormat)

        if cls:
            return cls(pipeline_response, None, {})

    delete_root.metadata = {'url': '/drives/{drive-id}/root'}  # type: ignore

    def list_special(
        self,
        drive_id,  # type: str
        orderby=None,  # type: Optional[List[Union[str, "models.Enum108"]]]
        select=None,  # type: Optional[List[Union[str, "models.Enum109"]]]
        expand=None,  # type: Optional[List[Union[str, "models.Enum110"]]]
        **kwargs  # type: Any
    ):
        # type: (...) -> Iterable["models.CollectionOfDriveItem1"]
        """Get special from drives.

        Get special from drives.

        :param drive_id: key: id of drive.
        :type drive_id: str
        :param orderby: Order items by property values.
        :type orderby: list[str or ~files.models.Enum108]
        :param select: Select properties to be returned.
        :type select: list[str or ~files.models.Enum109]
        :param expand: Expand related entities.
        :type expand: list[str or ~files.models.Enum110]
        :keyword callable cls: A custom type or function that will be passed the direct response
        :return: An iterator like instance of either CollectionOfDriveItem1 or the result of cls(response)
        :rtype: ~azure.core.paging.ItemPaged[~files.models.CollectionOfDriveItem1]
        :raises: ~azure.core.exceptions.HttpResponseError
        """
        cls = kwargs.pop('cls', None)  # type: ClsType["models.CollectionOfDriveItem1"]
        error_map = {404: ResourceNotFoundError, 409: ResourceExistsError}
        error_map.update(kwargs.pop('error_map', {}))
        accept = "application/json"

        def prepare_request(next_link=None):
            # Construct headers
            header_parameters = {}  # type: Dict[str, Any]
            header_parameters['Accept'] = self._serialize.header("accept", accept, 'str')
            header_parameters['Accept'] = 'application/json'

            if not next_link:
                # Construct URL
                url = self.list_special.metadata['url']  # type: ignore
                path_format_arguments = {
                    'drive-id': self._serialize.url("drive_id", drive_id, 'str'),
                }
                url = self._client.format_url(url, **path_format_arguments)
                # Construct parameters
                query_parameters = {}  # type: Dict[str, Any]
                if self._config.top is not None:
                    query_parameters['$top'] = self._serialize.query("self._config.top", self._config.top, 'int', minimum=0)
                if self._config.skip is not None:
                    query_parameters['$skip'] = self._serialize.query("self._config.skip", self._config.skip, 'int', minimum=0)
                if self._config.search is not None:
                    query_parameters['$search'] = self._serialize.query("self._config.search", self._config.search, 'str')
                if self._config.filter is not None:
                    query_parameters['$filter'] = self._serialize.query("self._config.filter", self._config.filter, 'str')
                if self._config.count is not None:
                    query_parameters['$count'] = self._serialize.query("self._config.count", self._config.count, 'bool')
                if orderby is not None:
                    query_parameters['$orderby'] = self._serialize.query("orderby", orderby, '[str]', div=',')
                if select is not None:
                    query_parameters['$select'] = self._serialize.query("select", select, '[str]', div=',')
                if expand is not None:
                    query_parameters['$expand'] = self._serialize.query("expand", expand, '[str]', div=',')

                request = self._client.get(url, query_parameters, header_parameters)
            else:
                url = next_link
                query_parameters = {}  # type: Dict[str, Any]
                request = self._client.get(url, query_parameters, header_parameters)
            return request

        def extract_data(pipeline_response):
            deserialized = self._deserialize('CollectionOfDriveItem1', pipeline_response)
            list_of_elem = deserialized.value
            if cls:
                list_of_elem = cls(list_of_elem)
            return deserialized.odata_next_link or None, iter(list_of_elem)

        def get_next(next_link=None):
            request = prepare_request(next_link)

            pipeline_response = self._client._pipeline.run(request, stream=False, **kwargs)
            response = pipeline_response.http_response

            if response.status_code not in [200]:
                error = self._deserialize(models.OdataError, response)
                map_error(status_code=response.status_code, response=response, error_map=error_map)
                raise HttpResponseError(response=response, model=error, error_format=ARMErrorFormat)

            return pipeline_response

        return ItemPaged(
            get_next, extract_data
        )
    list_special.metadata = {'url': '/drives/{drive-id}/special'}  # type: ignore

    def create_special(
        self,
        drive_id,  # type: str
        id=None,  # type: Optional[str]
        created_date_time=None,  # type: Optional[datetime.datetime]
        description=None,  # type: Optional[str]
        e_tag=None,  # type: Optional[str]
        last_modified_date_time=None,  # type: Optional[datetime.datetime]
        name=None,  # type: Optional[str]
        web_url=None,  # type: Optional[str]
        created_by_user=None,  # type: Optional["models.MicrosoftGraphUser"]
        last_modified_by_user=None,  # type: Optional["models.MicrosoftGraphUser"]
        microsoft_graph_item_reference_drive_id=None,  # type: Optional[str]
        drive_type=None,  # type: Optional[str]
        microsoft_graph_item_reference_id=None,  # type: Optional[str]
        microsoft_graph_item_reference_name=None,  # type: Optional[str]
        path=None,  # type: Optional[str]
        share_id=None,  # type: Optional[str]
        sharepoint_ids=None,  # type: Optional["models.MicrosoftGraphSharepointIds"]
        site_id=None,  # type: Optional[str]
        display_name=None,  # type: Optional[str]
        microsoft_graph_identity_id=None,  # type: Optional[str]
        microsoft_graph_identity_display_name=None,  # type: Optional[str]
        id1=None,  # type: Optional[str]
        display_name1=None,  # type: Optional[str]
        id2=None,  # type: Optional[str]
        display_name2=None,  # type: Optional[str]
        id3=None,  # type: Optional[str]
        display_name3=None,  # type: Optional[str]
        id4=None,  # type: Optional[str]
        display_name4=None,  # type: Optional[str]
        id5=None,  # type: Optional[str]
        audio=None,  # type: Optional["models.MicrosoftGraphAudio"]
        content=None,  # type: Optional[bytes]
        c_tag=None,  # type: Optional[str]
        file_system_info=None,  # type: Optional["models.MicrosoftGraphFileSystemInfo"]
        image=None,  # type: Optional["models.MicrosoftGraphImage"]
        location=None,  # type: Optional["models.MicrosoftGraphGeoCoordinates"]
        photo=None,  # type: Optional["models.MicrosoftGraphPhoto"]
        publication=None,  # type: Optional["models.MicrosoftGraphPublicationFacet"]
        root=None,  # type: Optional[Dict[str, object]]
        microsoft_graph_sharepoint_ids=None,  # type: Optional["models.MicrosoftGraphSharepointIds"]
        size=None,  # type: Optional[int]
        video=None,  # type: Optional["models.MicrosoftGraphVideo"]
        web_dav_url=None,  # type: Optional[str]
        analytics=None,  # type: Optional["models.MicrosoftGraphItemAnalytics"]
        children=None,  # type: Optional[List["models.MicrosoftGraphDriveItem"]]
        permissions=None,  # type: Optional[List["models.MicrosoftGraphPermission"]]
        subscriptions=None,  # type: Optional[List["models.MicrosoftGraphSubscription"]]
        thumbnails=None,  # type: Optional[List["models.MicrosoftGraphThumbnailSet"]]
        versions=None,  # type: Optional[List["models.MicrosoftGraphDriveItemVersion"]]
        microsoft_graph_entity_id=None,  # type: Optional[str]
        microsoft_graph_base_item_created_date_time_created_date_time=None,  # type: Optional[datetime.datetime]
        microsoft_graph_base_item_description=None,  # type: Optional[str]
        microsoft_graph_base_item_e_tag=None,  # type: Optional[str]
        microsoft_graph_base_item_last_modified_date_time_last_modified_date_time=None,  # type: Optional[datetime.datetime]
        microsoft_graph_base_item_name=None,  # type: Optional[str]
        microsoft_graph_base_item_web_url=None,  # type: Optional[str]
        microsoft_graph_user_created_by_user=None,  # type: Optional["models.MicrosoftGraphUser"]
        microsoft_graph_user_last_modified_by_user=None,  # type: Optional["models.MicrosoftGraphUser"]
        drive_id1=None,  # type: Optional[str]
        microsoft_graph_item_reference_drive_type=None,  # type: Optional[str]
        id6=None,  # type: Optional[str]
        name1=None,  # type: Optional[str]
        microsoft_graph_item_reference_path=None,  # type: Optional[str]
        microsoft_graph_item_reference_share_id=None,  # type: Optional[str]
        sharepoint_ids1=None,  # type: Optional["models.MicrosoftGraphSharepointIds"]
        microsoft_graph_item_reference_site_id=None,  # type: Optional[str]
        display_name5=None,  # type: Optional[str]
        id7=None,  # type: Optional[str]
        display_name6=None,  # type: Optional[str]
        id8=None,  # type: Optional[str]
        display_name7=None,  # type: Optional[str]
        id9=None,  # type: Optional[str]
        display_name8=None,  # type: Optional[str]
        id10=None,  # type: Optional[str]
        display_name9=None,  # type: Optional[str]
        id11=None,  # type: Optional[str]
        display_name10=None,  # type: Optional[str]
        id12=None,  # type: Optional[str]
        content_type_parameter=None,  # type: Optional["models.MicrosoftGraphContentTypeInfo"]
        sharepoint_ids2=None,  # type: Optional["models.MicrosoftGraphSharepointIds"]
        microsoft_graph_item_analytics=None,  # type: Optional["models.MicrosoftGraphItemAnalytics"]
        drive_item=None,  # type: Optional["models.MicrosoftGraphDriveItem"]
        microsoft_graph_list_item_versions=None,  # type: Optional[List["models.MicrosoftGraphListItemVersion"]]
        id13=None,  # type: Optional[str]
        id14=None,  # type: Optional[str]
        application=None,  # type: Optional["models.MicrosoftGraphWorkbookApplication"]
        comments=None,  # type: Optional[List["models.MicrosoftGraphWorkbookComment"]]
        functions=None,  # type: Optional["models.MicrosoftGraphWorkbookFunctions"]
        names=None,  # type: Optional[List["models.MicrosoftGraphWorkbookNamedItem"]]
        operations=None,  # type: Optional[List["models.MicrosoftGraphWorkbookOperation"]]
        tables=None,  # type: Optional[List["models.MicrosoftGraphWorkbookTable"]]
        worksheets=None,  # type: Optional[List["models.MicrosoftGraphWorkbookWorksheet"]]
        microsoft_graph_special_folder_name=None,  # type: Optional[str]
        owner=None,  # type: Optional["models.MicrosoftGraphIdentitySet"]
        scope=None,  # type: Optional[str]
        shared_by=None,  # type: Optional["models.MicrosoftGraphIdentitySet"]
        shared_date_time=None,  # type: Optional[datetime.datetime]
        on_click_telemetry_url=None,  # type: Optional[str]
        created_by=None,  # type: Optional["models.MicrosoftGraphIdentitySet"]
        microsoft_graph_remote_item_created_date_time_created_date_time=None,  # type: Optional[datetime.datetime]
        file=None,  # type: Optional["models.MicrosoftGraphFile"]
        microsoft_graph_file_system_info_file_system_info=None,  # type: Optional["models.MicrosoftGraphFileSystemInfo"]
        folder=None,  # type: Optional["models.MicrosoftGraphFolder"]
        microsoft_graph_remote_item_id=None,  # type: Optional[str]
        microsoft_graph_image=None,  # type: Optional["models.MicrosoftGraphImage"]
        last_modified_by=None,  # type: Optional["models.MicrosoftGraphIdentitySet"]
        microsoft_graph_remote_item_last_modified_date_time_last_modified_date_time=None,  # type: Optional[datetime.datetime]
        microsoft_graph_remote_item_name=None,  # type: Optional[str]
        package=None,  # type: Optional["models.MicrosoftGraphPackage"]
        parent_reference=None,  # type: Optional["models.MicrosoftGraphItemReference"]
        shared=None,  # type: Optional["models.MicrosoftGraphShared"]
        sharepoint_ids3=None,  # type: Optional["models.MicrosoftGraphSharepointIds"]
        integer_size=None,  # type: Optional[int]
        special_folder=None,  # type: Optional["models.MicrosoftGraphSpecialFolder"]
        microsoft_graph_video=None,  # type: Optional["models.MicrosoftGraphVideo"]
        microsoft_graph_remote_item_web_dav_url_web_dav_url=None,  # type: Optional[str]
        microsoft_graph_remote_item_web_url=None,  # type: Optional[str]
        queued_date_time=None,  # type: Optional[datetime.datetime]
        type=None,  # type: Optional[str]
        child_count=None,  # type: Optional[int]
        view=None,  # type: Optional["models.MicrosoftGraphFolderView"]
        hashes=None,  # type: Optional["models.MicrosoftGraphHashes"]
        mime_type=None,  # type: Optional[str]
        processing_metadata=None,  # type: Optional[bool]
        state=None,  # type: Optional[str]
        **kwargs  # type: Any
    ):
        # type: (...) -> "models.MicrosoftGraphDriveItem"
        """Create new navigation property to special for drives.

        Create new navigation property to special for drives.

        :param drive_id: key: id of drive.
        :type drive_id: str
        :param id: Read-only.
        :type id: str
        :param created_date_time: Date and time of item creation. Read-only.
        :type created_date_time: ~datetime.datetime
        :param description: Provides a user-visible description of the item. Optional.
        :type description: str
        :param e_tag: ETag for the item. Read-only.
        :type e_tag: str
        :param last_modified_date_time: Date and time the item was last modified. Read-only.
        :type last_modified_date_time: ~datetime.datetime
        :param name: The name of the item. Read-write.
        :type name: str
        :param web_url: URL that displays the resource in the browser. Read-only.
        :type web_url: str
        :param created_by_user: Represents an Azure Active Directory user object.
        :type created_by_user: ~files.models.MicrosoftGraphUser
        :param last_modified_by_user: Represents an Azure Active Directory user object.
        :type last_modified_by_user: ~files.models.MicrosoftGraphUser
        :param microsoft_graph_item_reference_drive_id: Unique identifier of the drive instance that
         contains the item. Read-only.
        :type microsoft_graph_item_reference_drive_id: str
        :param drive_type: Identifies the type of drive. See [drive][] resource for values.
        :type drive_type: str
        :param microsoft_graph_item_reference_id: Unique identifier of the item in the drive. Read-
         only.
        :type microsoft_graph_item_reference_id: str
        :param microsoft_graph_item_reference_name: The name of the item being referenced. Read-only.
        :type microsoft_graph_item_reference_name: str
        :param path: Path that can be used to navigate to the item. Read-only.
        :type path: str
        :param share_id: A unique identifier for a shared resource that can be accessed via the
         [Shares][] API.
        :type share_id: str
        :param sharepoint_ids: sharepointIds.
        :type sharepoint_ids: ~files.models.MicrosoftGraphSharepointIds
        :param site_id:
        :type site_id: str
        :param display_name: The identity's display name. Note that this may not always be available or
         up to date. For example, if a user changes their display name, the API may show the new value
         in a future response, but the items associated with the user won't show up as having changed
         when using delta.
        :type display_name: str
        :param microsoft_graph_identity_id: Unique identifier for the identity.
        :type microsoft_graph_identity_id: str
        :param microsoft_graph_identity_display_name: The identity's display name. Note that this may
         not always be available or up to date. For example, if a user changes their display name, the
         API may show the new value in a future response, but the items associated with the user won't
         show up as having changed when using delta.
        :type microsoft_graph_identity_display_name: str
        :param id1: Unique identifier for the identity.
        :type id1: str
        :param display_name1: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name1: str
        :param id2: Unique identifier for the identity.
        :type id2: str
        :param display_name2: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name2: str
        :param id3: Unique identifier for the identity.
        :type id3: str
        :param display_name3: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name3: str
        :param id4: Unique identifier for the identity.
        :type id4: str
        :param display_name4: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name4: str
        :param id5: Unique identifier for the identity.
        :type id5: str
        :param audio: audio.
        :type audio: ~files.models.MicrosoftGraphAudio
        :param content: The content stream, if the item represents a file.
        :type content: bytes
        :param c_tag: An eTag for the content of the item. This eTag is not changed if only the
         metadata is changed. Note This property is not returned if the item is a folder. Read-only.
        :type c_tag: str
        :param file_system_info: fileSystemInfo.
        :type file_system_info: ~files.models.MicrosoftGraphFileSystemInfo
        :param image: image.
        :type image: ~files.models.MicrosoftGraphImage
        :param location: geoCoordinates.
        :type location: ~files.models.MicrosoftGraphGeoCoordinates
        :param photo: photo.
        :type photo: ~files.models.MicrosoftGraphPhoto
        :param publication: publicationFacet.
        :type publication: ~files.models.MicrosoftGraphPublicationFacet
        :param root: root.
        :type root: dict[str, object]
        :param microsoft_graph_sharepoint_ids: sharepointIds.
        :type microsoft_graph_sharepoint_ids: ~files.models.MicrosoftGraphSharepointIds
        :param size: Size of the item in bytes. Read-only.
        :type size: long
        :param video: video.
        :type video: ~files.models.MicrosoftGraphVideo
        :param web_dav_url: WebDAV compatible URL for the item.
        :type web_dav_url: str
        :param analytics: itemAnalytics.
        :type analytics: ~files.models.MicrosoftGraphItemAnalytics
        :param children: Collection containing Item objects for the immediate children of Item. Only
         items representing folders have children. Read-only. Nullable.
        :type children: list[~files.models.MicrosoftGraphDriveItem]
        :param permissions: The set of permissions for the item. Read-only. Nullable.
        :type permissions: list[~files.models.MicrosoftGraphPermission]
        :param subscriptions: The set of subscriptions on the item. Only supported on the root of a
         drive.
        :type subscriptions: list[~files.models.MicrosoftGraphSubscription]
        :param thumbnails: Collection containing [ThumbnailSet][] objects associated with the item. For
         more info, see [getting thumbnails][]. Read-only. Nullable.
        :type thumbnails: list[~files.models.MicrosoftGraphThumbnailSet]
        :param versions: The list of previous versions of the item. For more info, see [getting
         previous versions][]. Read-only. Nullable.
        :type versions: list[~files.models.MicrosoftGraphDriveItemVersion]
        :param microsoft_graph_entity_id: Read-only.
        :type microsoft_graph_entity_id: str
        :param microsoft_graph_base_item_created_date_time_created_date_time: Date and time of item
         creation. Read-only.
        :type microsoft_graph_base_item_created_date_time_created_date_time: ~datetime.datetime
        :param microsoft_graph_base_item_description: Provides a user-visible description of the item.
         Optional.
        :type microsoft_graph_base_item_description: str
        :param microsoft_graph_base_item_e_tag: ETag for the item. Read-only.
        :type microsoft_graph_base_item_e_tag: str
        :param microsoft_graph_base_item_last_modified_date_time_last_modified_date_time: Date and time
         the item was last modified. Read-only.
        :type microsoft_graph_base_item_last_modified_date_time_last_modified_date_time: ~datetime.datetime
        :param microsoft_graph_base_item_name: The name of the item. Read-write.
        :type microsoft_graph_base_item_name: str
        :param microsoft_graph_base_item_web_url: URL that displays the resource in the browser. Read-
         only.
        :type microsoft_graph_base_item_web_url: str
        :param microsoft_graph_user_created_by_user: Represents an Azure Active Directory user object.
        :type microsoft_graph_user_created_by_user: ~files.models.MicrosoftGraphUser
        :param microsoft_graph_user_last_modified_by_user: Represents an Azure Active Directory user
         object.
        :type microsoft_graph_user_last_modified_by_user: ~files.models.MicrosoftGraphUser
        :param drive_id1: Unique identifier of the drive instance that contains the item. Read-only.
        :type drive_id1: str
        :param microsoft_graph_item_reference_drive_type: Identifies the type of drive. See [drive][]
         resource for values.
        :type microsoft_graph_item_reference_drive_type: str
        :param id6: Unique identifier of the item in the drive. Read-only.
        :type id6: str
        :param name1: The name of the item being referenced. Read-only.
        :type name1: str
        :param microsoft_graph_item_reference_path: Path that can be used to navigate to the item.
         Read-only.
        :type microsoft_graph_item_reference_path: str
        :param microsoft_graph_item_reference_share_id: A unique identifier for a shared resource that
         can be accessed via the [Shares][] API.
        :type microsoft_graph_item_reference_share_id: str
        :param sharepoint_ids1: sharepointIds.
        :type sharepoint_ids1: ~files.models.MicrosoftGraphSharepointIds
        :param microsoft_graph_item_reference_site_id:
        :type microsoft_graph_item_reference_site_id: str
        :param display_name5: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name5: str
        :param id7: Unique identifier for the identity.
        :type id7: str
        :param display_name6: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name6: str
        :param id8: Unique identifier for the identity.
        :type id8: str
        :param display_name7: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name7: str
        :param id9: Unique identifier for the identity.
        :type id9: str
        :param display_name8: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name8: str
        :param id10: Unique identifier for the identity.
        :type id10: str
        :param display_name9: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name9: str
        :param id11: Unique identifier for the identity.
        :type id11: str
        :param display_name10: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name10: str
        :param id12: Unique identifier for the identity.
        :type id12: str
        :param content_type_parameter: contentTypeInfo.
        :type content_type_parameter: ~files.models.MicrosoftGraphContentTypeInfo
        :param sharepoint_ids2: sharepointIds.
        :type sharepoint_ids2: ~files.models.MicrosoftGraphSharepointIds
        :param microsoft_graph_item_analytics: itemAnalytics.
        :type microsoft_graph_item_analytics: ~files.models.MicrosoftGraphItemAnalytics
        :param drive_item: driveItem.
        :type drive_item: ~files.models.MicrosoftGraphDriveItem
        :param microsoft_graph_list_item_versions: The list of previous versions of the list item.
        :type microsoft_graph_list_item_versions: list[~files.models.MicrosoftGraphListItemVersion]
        :param id13: Read-only.
        :type id13: str
        :param id14: Read-only.
        :type id14: str
        :param application: workbookApplication.
        :type application: ~files.models.MicrosoftGraphWorkbookApplication
        :param comments:
        :type comments: list[~files.models.MicrosoftGraphWorkbookComment]
        :param functions: workbookFunctions.
        :type functions: ~files.models.MicrosoftGraphWorkbookFunctions
        :param names: Represents a collection of workbook scoped named items (named ranges and
         constants). Read-only.
        :type names: list[~files.models.MicrosoftGraphWorkbookNamedItem]
        :param operations: The status of workbook operations. Getting an operation collection is not
         supported, but you can get the status of a long-running operation if the Location header is
         returned in the response. Read-only.
        :type operations: list[~files.models.MicrosoftGraphWorkbookOperation]
        :param tables: Represents a collection of tables associated with the workbook. Read-only.
        :type tables: list[~files.models.MicrosoftGraphWorkbookTable]
        :param worksheets: Represents a collection of worksheets associated with the workbook. Read-
         only.
        :type worksheets: list[~files.models.MicrosoftGraphWorkbookWorksheet]
        :param microsoft_graph_special_folder_name: The unique identifier for this item in the
         /drive/special collection.
        :type microsoft_graph_special_folder_name: str
        :param owner: identitySet.
        :type owner: ~files.models.MicrosoftGraphIdentitySet
        :param scope: Indicates the scope of how the item is shared: anonymous, organization, or users.
         Read-only.
        :type scope: str
        :param shared_by: identitySet.
        :type shared_by: ~files.models.MicrosoftGraphIdentitySet
        :param shared_date_time: The UTC date and time when the item was shared. Read-only.
        :type shared_date_time: ~datetime.datetime
        :param on_click_telemetry_url: A callback URL that can be used to record telemetry information.
         The application should issue a GET on this URL if the user interacts with this item to improve
         the quality of results.
        :type on_click_telemetry_url: str
        :param created_by: identitySet.
        :type created_by: ~files.models.MicrosoftGraphIdentitySet
        :param microsoft_graph_remote_item_created_date_time_created_date_time: Date and time of item
         creation. Read-only.
        :type microsoft_graph_remote_item_created_date_time_created_date_time: ~datetime.datetime
        :param file: file.
        :type file: ~files.models.MicrosoftGraphFile
        :param microsoft_graph_file_system_info_file_system_info: fileSystemInfo.
        :type microsoft_graph_file_system_info_file_system_info: ~files.models.MicrosoftGraphFileSystemInfo
        :param folder: folder.
        :type folder: ~files.models.MicrosoftGraphFolder
        :param microsoft_graph_remote_item_id: Unique identifier for the remote item in its drive.
         Read-only.
        :type microsoft_graph_remote_item_id: str
        :param microsoft_graph_image: image.
        :type microsoft_graph_image: ~files.models.MicrosoftGraphImage
        :param last_modified_by: identitySet.
        :type last_modified_by: ~files.models.MicrosoftGraphIdentitySet
        :param microsoft_graph_remote_item_last_modified_date_time_last_modified_date_time: Date and
         time the item was last modified. Read-only.
        :type microsoft_graph_remote_item_last_modified_date_time_last_modified_date_time: ~datetime.datetime
        :param microsoft_graph_remote_item_name: Optional. Filename of the remote item. Read-only.
        :type microsoft_graph_remote_item_name: str
        :param package: package.
        :type package: ~files.models.MicrosoftGraphPackage
        :param parent_reference: itemReference.
        :type parent_reference: ~files.models.MicrosoftGraphItemReference
        :param shared: shared.
        :type shared: ~files.models.MicrosoftGraphShared
        :param sharepoint_ids3: sharepointIds.
        :type sharepoint_ids3: ~files.models.MicrosoftGraphSharepointIds
        :param integer_size: Size of the remote item. Read-only.
        :type integer_size: long
        :param special_folder: specialFolder.
        :type special_folder: ~files.models.MicrosoftGraphSpecialFolder
        :param microsoft_graph_video: video.
        :type microsoft_graph_video: ~files.models.MicrosoftGraphVideo
        :param microsoft_graph_remote_item_web_dav_url_web_dav_url: DAV compatible URL for the item.
        :type microsoft_graph_remote_item_web_dav_url_web_dav_url: str
        :param microsoft_graph_remote_item_web_url: URL that displays the resource in the browser.
         Read-only.
        :type microsoft_graph_remote_item_web_url: str
        :param queued_date_time: Date and time the pending binary operation was queued in UTC time.
         Read-only.
        :type queued_date_time: ~datetime.datetime
        :param type: A string indicating the type of package. While oneNote is the only currently
         defined value, you should expect other package types to be returned and handle them
         accordingly.
        :type type: str
        :param child_count: Number of children contained immediately within this container.
        :type child_count: int
        :param view: folderView.
        :type view: ~files.models.MicrosoftGraphFolderView
        :param hashes: hashes.
        :type hashes: ~files.models.MicrosoftGraphHashes
        :param mime_type: The MIME type for the file. This is determined by logic on the server and
         might not be the value provided when the file was uploaded. Read-only.
        :type mime_type: str
        :param processing_metadata:
        :type processing_metadata: bool
        :param state: Represents the state of the deleted item.
        :type state: str
        :keyword callable cls: A custom type or function that will be passed the direct response
        :return: MicrosoftGraphDriveItem, or the result of cls(response)
        :rtype: ~files.models.MicrosoftGraphDriveItem
        :raises: ~azure.core.exceptions.HttpResponseError
        """
        cls = kwargs.pop('cls', None)  # type: ClsType["models.MicrosoftGraphDriveItem"]
        error_map = {404: ResourceNotFoundError, 409: ResourceExistsError}
        error_map.update(kwargs.pop('error_map', {}))

        _body = models.MicrosoftGraphDriveItem(id=id, created_date_time=created_date_time, description=description, e_tag=e_tag, last_modified_date_time=last_modified_date_time, name=name, web_url=web_url, created_by_user=created_by_user, last_modified_by_user=last_modified_by_user, drive_id=microsoft_graph_item_reference_drive_id, drive_type=drive_type, id_parent_reference_id=microsoft_graph_item_reference_id, name_parent_reference_name=microsoft_graph_item_reference_name, path=path, share_id=share_id, sharepoint_ids=sharepoint_ids, site_id=site_id, display_name_last_modified_by_user_display_name=display_name, id_last_modified_by_user_id=microsoft_graph_identity_id, display_name_last_modified_by_device_display_name=microsoft_graph_identity_display_name, id_last_modified_by_device_id=id1, display_name_last_modified_by_application_display_name=display_name1, id_last_modified_by_application_id=id2, display_name_created_by_user_display_name=display_name2, id_created_by_user_id=id3, display_name_created_by_device_display_name=display_name3, id_created_by_device_id=id4, display_name_created_by_application_display_name=display_name4, id_created_by_application_id=id5, audio=audio, content=content, c_tag=c_tag, file_system_info=file_system_info, image=image, location=location, photo=photo, publication=publication, root=root, sharepoint_ids=microsoft_graph_sharepoint_ids, size=size, video=video, web_dav_url=web_dav_url, analytics=analytics, children=children, permissions=permissions, subscriptions=subscriptions, thumbnails=thumbnails, versions=versions, id_list_item_id=microsoft_graph_entity_id, created_date_time_list_item_created_date_time=microsoft_graph_base_item_created_date_time_created_date_time, description_list_item_description=microsoft_graph_base_item_description, e_tag_list_item_e_tag=microsoft_graph_base_item_e_tag, last_modified_date_time_list_item_last_modified_date_time=microsoft_graph_base_item_last_modified_date_time_last_modified_date_time, name_list_item_name=microsoft_graph_base_item_name, web_url_list_item_web_url=microsoft_graph_base_item_web_url, created_by_user_list_item_created_by_user=microsoft_graph_user_created_by_user, last_modified_by_user_list_item_last_modified_by_user=microsoft_graph_user_last_modified_by_user, drive_id_list_item_parent_reference_drive_id=drive_id1, drive_type_list_item_parent_reference_drive_type=microsoft_graph_item_reference_drive_type, id_list_item_parent_reference_id=id6, name_list_item_parent_reference_name=name1, path_list_item_parent_reference_path=microsoft_graph_item_reference_path, share_id_list_item_parent_reference_share_id=microsoft_graph_item_reference_share_id, sharepoint_ids_list_item_parent_reference_sharepoint_ids=sharepoint_ids1, site_id_list_item_parent_reference_site_id=microsoft_graph_item_reference_site_id, display_name_list_item_last_modified_by_user_display_name=display_name5, id_list_item_last_modified_by_user_id=id7, display_name_list_item_last_modified_by_device_display_name=display_name6, id_list_item_last_modified_by_device_id=id8, display_name_list_item_last_modified_by_application_display_name=display_name7, id_list_item_last_modified_by_application_id=id9, display_name_list_item_created_by_user_display_name=display_name8, id_list_item_created_by_user_id=id10, display_name_list_item_created_by_device_display_name=display_name9, id_list_item_created_by_device_id=id11, display_name_list_item_created_by_application_display_name=display_name10, id_list_item_created_by_application_id=id12, content_type=content_type_parameter, sharepoint_ids_list_item_sharepoint_ids=sharepoint_ids2, analytics_list_item_analytics=microsoft_graph_item_analytics, drive_item=drive_item, versions_list_item_versions=microsoft_graph_list_item_versions, id_list_item_fields_id=id13, id_workbook_id=id14, application=application, comments=comments, functions=functions, names=names, operations=operations, tables=tables, worksheets=worksheets, name_special_folder_name=microsoft_graph_special_folder_name, owner=owner, scope=scope, shared_by=shared_by, shared_date_time=shared_date_time, on_click_telemetry_url=on_click_telemetry_url, created_by=created_by, created_date_time_remote_item_created_date_time=microsoft_graph_remote_item_created_date_time_created_date_time, file=file, file_system_info_remote_item_file_system_info=microsoft_graph_file_system_info_file_system_info, folder=folder, id_remote_item_id=microsoft_graph_remote_item_id, image_remote_item_image=microsoft_graph_image, last_modified_by=last_modified_by, last_modified_date_time_remote_item_last_modified_date_time=microsoft_graph_remote_item_last_modified_date_time_last_modified_date_time, name_remote_item_name=microsoft_graph_remote_item_name, package=package, parent_reference=parent_reference, shared=shared, sharepoint_ids_remote_item_sharepoint_ids=sharepoint_ids3, size_remote_item_size=integer_size, special_folder=special_folder, video_remote_item_video=microsoft_graph_video, web_dav_url_remote_item_web_dav_url=microsoft_graph_remote_item_web_dav_url_web_dav_url, web_url_remote_item_web_url=microsoft_graph_remote_item_web_url, queued_date_time=queued_date_time, type=type, child_count=child_count, view=view, hashes=hashes, mime_type=mime_type, processing_metadata=processing_metadata, state=state)
        content_type = kwargs.pop("content_type", "application/json")
        accept = "application/json"

        # Construct URL
        url = self.create_special.metadata['url']  # type: ignore
        path_format_arguments = {
            'drive-id': self._serialize.url("drive_id", drive_id, 'str'),
        }
        url = self._client.format_url(url, **path_format_arguments)

        # Construct parameters
        query_parameters = {}  # type: Dict[str, Any]

        # Construct headers
        header_parameters = {}  # type: Dict[str, Any]
        header_parameters['Content-Type'] = self._serialize.header("content_type", content_type, 'str')
        header_parameters['Accept'] = self._serialize.header("accept", accept, 'str')
        header_parameters['Accept'] = 'application/json'

        body_content_kwargs = {}  # type: Dict[str, Any]
        body_content = self._serialize.body(_body, 'MicrosoftGraphDriveItem')
        body_content_kwargs['content'] = body_content
        request = self._client.post(url, query_parameters, header_parameters, **body_content_kwargs)

        pipeline_response = self._client._pipeline.run(request, stream=False, **kwargs)
        response = pipeline_response.http_response

        if response.status_code not in [201]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            error = self._deserialize(models.OdataError, response)
            raise HttpResponseError(response=response, model=error, error_format=ARMErrorFormat)

        deserialized = self._deserialize('MicrosoftGraphDriveItem', pipeline_response)

        if cls:
            return cls(pipeline_response, deserialized, {})

        return deserialized
    create_special.metadata = {'url': '/drives/{drive-id}/special'}  # type: ignore

    def get_special(
        self,
        drive_id,  # type: str
        drive_item_id,  # type: str
        select=None,  # type: Optional[List[Union[str, "models.Enum111"]]]
        expand=None,  # type: Optional[List[Union[str, "models.Enum112"]]]
        **kwargs  # type: Any
    ):
        # type: (...) -> "models.MicrosoftGraphDriveItem"
        """Get special from drives.

        Get special from drives.

        :param drive_id: key: id of drive.
        :type drive_id: str
        :param drive_item_id: key: id of driveItem.
        :type drive_item_id: str
        :param select: Select properties to be returned.
        :type select: list[str or ~files.models.Enum111]
        :param expand: Expand related entities.
        :type expand: list[str or ~files.models.Enum112]
        :keyword callable cls: A custom type or function that will be passed the direct response
        :return: MicrosoftGraphDriveItem, or the result of cls(response)
        :rtype: ~files.models.MicrosoftGraphDriveItem
        :raises: ~azure.core.exceptions.HttpResponseError
        """
        cls = kwargs.pop('cls', None)  # type: ClsType["models.MicrosoftGraphDriveItem"]
        error_map = {404: ResourceNotFoundError, 409: ResourceExistsError}
        error_map.update(kwargs.pop('error_map', {}))
        accept = "application/json"

        # Construct URL
        url = self.get_special.metadata['url']  # type: ignore
        path_format_arguments = {
            'drive-id': self._serialize.url("drive_id", drive_id, 'str'),
            'driveItem-id': self._serialize.url("drive_item_id", drive_item_id, 'str'),
        }
        url = self._client.format_url(url, **path_format_arguments)

        # Construct parameters
        query_parameters = {}  # type: Dict[str, Any]
        if select is not None:
            query_parameters['$select'] = self._serialize.query("select", select, '[str]', div=',')
        if expand is not None:
            query_parameters['$expand'] = self._serialize.query("expand", expand, '[str]', div=',')

        # Construct headers
        header_parameters = {}  # type: Dict[str, Any]
        header_parameters['Accept'] = self._serialize.header("accept", accept, 'str')
        header_parameters['Accept'] = 'application/json'

        request = self._client.get(url, query_parameters, header_parameters)
        pipeline_response = self._client._pipeline.run(request, stream=False, **kwargs)
        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            error = self._deserialize(models.OdataError, response)
            raise HttpResponseError(response=response, model=error, error_format=ARMErrorFormat)

        deserialized = self._deserialize('MicrosoftGraphDriveItem', pipeline_response)

        if cls:
            return cls(pipeline_response, deserialized, {})

        return deserialized
    get_special.metadata = {'url': '/drives/{drive-id}/special/{driveItem-id}'}  # type: ignore

    def update_special(
        self,
        drive_id,  # type: str
        drive_item_id,  # type: str
        id=None,  # type: Optional[str]
        created_date_time=None,  # type: Optional[datetime.datetime]
        description=None,  # type: Optional[str]
        e_tag=None,  # type: Optional[str]
        last_modified_date_time=None,  # type: Optional[datetime.datetime]
        name=None,  # type: Optional[str]
        web_url=None,  # type: Optional[str]
        created_by_user=None,  # type: Optional["models.MicrosoftGraphUser"]
        last_modified_by_user=None,  # type: Optional["models.MicrosoftGraphUser"]
        microsoft_graph_item_reference_drive_id=None,  # type: Optional[str]
        drive_type=None,  # type: Optional[str]
        microsoft_graph_item_reference_id=None,  # type: Optional[str]
        microsoft_graph_item_reference_name=None,  # type: Optional[str]
        path=None,  # type: Optional[str]
        share_id=None,  # type: Optional[str]
        sharepoint_ids=None,  # type: Optional["models.MicrosoftGraphSharepointIds"]
        site_id=None,  # type: Optional[str]
        display_name=None,  # type: Optional[str]
        microsoft_graph_identity_id=None,  # type: Optional[str]
        microsoft_graph_identity_display_name=None,  # type: Optional[str]
        id1=None,  # type: Optional[str]
        display_name1=None,  # type: Optional[str]
        id2=None,  # type: Optional[str]
        display_name2=None,  # type: Optional[str]
        id3=None,  # type: Optional[str]
        display_name3=None,  # type: Optional[str]
        id4=None,  # type: Optional[str]
        display_name4=None,  # type: Optional[str]
        id5=None,  # type: Optional[str]
        audio=None,  # type: Optional["models.MicrosoftGraphAudio"]
        content=None,  # type: Optional[bytes]
        c_tag=None,  # type: Optional[str]
        file_system_info=None,  # type: Optional["models.MicrosoftGraphFileSystemInfo"]
        image=None,  # type: Optional["models.MicrosoftGraphImage"]
        location=None,  # type: Optional["models.MicrosoftGraphGeoCoordinates"]
        photo=None,  # type: Optional["models.MicrosoftGraphPhoto"]
        publication=None,  # type: Optional["models.MicrosoftGraphPublicationFacet"]
        root=None,  # type: Optional[Dict[str, object]]
        microsoft_graph_sharepoint_ids=None,  # type: Optional["models.MicrosoftGraphSharepointIds"]
        size=None,  # type: Optional[int]
        video=None,  # type: Optional["models.MicrosoftGraphVideo"]
        web_dav_url=None,  # type: Optional[str]
        analytics=None,  # type: Optional["models.MicrosoftGraphItemAnalytics"]
        children=None,  # type: Optional[List["models.MicrosoftGraphDriveItem"]]
        permissions=None,  # type: Optional[List["models.MicrosoftGraphPermission"]]
        subscriptions=None,  # type: Optional[List["models.MicrosoftGraphSubscription"]]
        thumbnails=None,  # type: Optional[List["models.MicrosoftGraphThumbnailSet"]]
        versions=None,  # type: Optional[List["models.MicrosoftGraphDriveItemVersion"]]
        microsoft_graph_entity_id=None,  # type: Optional[str]
        microsoft_graph_base_item_created_date_time_created_date_time=None,  # type: Optional[datetime.datetime]
        microsoft_graph_base_item_description=None,  # type: Optional[str]
        microsoft_graph_base_item_e_tag=None,  # type: Optional[str]
        microsoft_graph_base_item_last_modified_date_time_last_modified_date_time=None,  # type: Optional[datetime.datetime]
        microsoft_graph_base_item_name=None,  # type: Optional[str]
        microsoft_graph_base_item_web_url=None,  # type: Optional[str]
        microsoft_graph_user_created_by_user=None,  # type: Optional["models.MicrosoftGraphUser"]
        microsoft_graph_user_last_modified_by_user=None,  # type: Optional["models.MicrosoftGraphUser"]
        drive_id1=None,  # type: Optional[str]
        microsoft_graph_item_reference_drive_type=None,  # type: Optional[str]
        id6=None,  # type: Optional[str]
        name1=None,  # type: Optional[str]
        microsoft_graph_item_reference_path=None,  # type: Optional[str]
        microsoft_graph_item_reference_share_id=None,  # type: Optional[str]
        sharepoint_ids1=None,  # type: Optional["models.MicrosoftGraphSharepointIds"]
        microsoft_graph_item_reference_site_id=None,  # type: Optional[str]
        display_name5=None,  # type: Optional[str]
        id7=None,  # type: Optional[str]
        display_name6=None,  # type: Optional[str]
        id8=None,  # type: Optional[str]
        display_name7=None,  # type: Optional[str]
        id9=None,  # type: Optional[str]
        display_name8=None,  # type: Optional[str]
        id10=None,  # type: Optional[str]
        display_name9=None,  # type: Optional[str]
        id11=None,  # type: Optional[str]
        display_name10=None,  # type: Optional[str]
        id12=None,  # type: Optional[str]
        content_type_parameter=None,  # type: Optional["models.MicrosoftGraphContentTypeInfo"]
        sharepoint_ids2=None,  # type: Optional["models.MicrosoftGraphSharepointIds"]
        microsoft_graph_item_analytics=None,  # type: Optional["models.MicrosoftGraphItemAnalytics"]
        drive_item=None,  # type: Optional["models.MicrosoftGraphDriveItem"]
        microsoft_graph_list_item_versions=None,  # type: Optional[List["models.MicrosoftGraphListItemVersion"]]
        id13=None,  # type: Optional[str]
        id14=None,  # type: Optional[str]
        application=None,  # type: Optional["models.MicrosoftGraphWorkbookApplication"]
        comments=None,  # type: Optional[List["models.MicrosoftGraphWorkbookComment"]]
        functions=None,  # type: Optional["models.MicrosoftGraphWorkbookFunctions"]
        names=None,  # type: Optional[List["models.MicrosoftGraphWorkbookNamedItem"]]
        operations=None,  # type: Optional[List["models.MicrosoftGraphWorkbookOperation"]]
        tables=None,  # type: Optional[List["models.MicrosoftGraphWorkbookTable"]]
        worksheets=None,  # type: Optional[List["models.MicrosoftGraphWorkbookWorksheet"]]
        microsoft_graph_special_folder_name=None,  # type: Optional[str]
        owner=None,  # type: Optional["models.MicrosoftGraphIdentitySet"]
        scope=None,  # type: Optional[str]
        shared_by=None,  # type: Optional["models.MicrosoftGraphIdentitySet"]
        shared_date_time=None,  # type: Optional[datetime.datetime]
        on_click_telemetry_url=None,  # type: Optional[str]
        created_by=None,  # type: Optional["models.MicrosoftGraphIdentitySet"]
        microsoft_graph_remote_item_created_date_time_created_date_time=None,  # type: Optional[datetime.datetime]
        file=None,  # type: Optional["models.MicrosoftGraphFile"]
        microsoft_graph_file_system_info_file_system_info=None,  # type: Optional["models.MicrosoftGraphFileSystemInfo"]
        folder=None,  # type: Optional["models.MicrosoftGraphFolder"]
        microsoft_graph_remote_item_id=None,  # type: Optional[str]
        microsoft_graph_image=None,  # type: Optional["models.MicrosoftGraphImage"]
        last_modified_by=None,  # type: Optional["models.MicrosoftGraphIdentitySet"]
        microsoft_graph_remote_item_last_modified_date_time_last_modified_date_time=None,  # type: Optional[datetime.datetime]
        microsoft_graph_remote_item_name=None,  # type: Optional[str]
        package=None,  # type: Optional["models.MicrosoftGraphPackage"]
        parent_reference=None,  # type: Optional["models.MicrosoftGraphItemReference"]
        shared=None,  # type: Optional["models.MicrosoftGraphShared"]
        sharepoint_ids3=None,  # type: Optional["models.MicrosoftGraphSharepointIds"]
        integer_size=None,  # type: Optional[int]
        special_folder=None,  # type: Optional["models.MicrosoftGraphSpecialFolder"]
        microsoft_graph_video=None,  # type: Optional["models.MicrosoftGraphVideo"]
        microsoft_graph_remote_item_web_dav_url_web_dav_url=None,  # type: Optional[str]
        microsoft_graph_remote_item_web_url=None,  # type: Optional[str]
        queued_date_time=None,  # type: Optional[datetime.datetime]
        type=None,  # type: Optional[str]
        child_count=None,  # type: Optional[int]
        view=None,  # type: Optional["models.MicrosoftGraphFolderView"]
        hashes=None,  # type: Optional["models.MicrosoftGraphHashes"]
        mime_type=None,  # type: Optional[str]
        processing_metadata=None,  # type: Optional[bool]
        state=None,  # type: Optional[str]
        **kwargs  # type: Any
    ):
        # type: (...) -> None
        """Update the navigation property special in drives.

        Update the navigation property special in drives.

        :param drive_id: key: id of drive.
        :type drive_id: str
        :param drive_item_id: key: id of driveItem.
        :type drive_item_id: str
        :param id: Read-only.
        :type id: str
        :param created_date_time: Date and time of item creation. Read-only.
        :type created_date_time: ~datetime.datetime
        :param description: Provides a user-visible description of the item. Optional.
        :type description: str
        :param e_tag: ETag for the item. Read-only.
        :type e_tag: str
        :param last_modified_date_time: Date and time the item was last modified. Read-only.
        :type last_modified_date_time: ~datetime.datetime
        :param name: The name of the item. Read-write.
        :type name: str
        :param web_url: URL that displays the resource in the browser. Read-only.
        :type web_url: str
        :param created_by_user: Represents an Azure Active Directory user object.
        :type created_by_user: ~files.models.MicrosoftGraphUser
        :param last_modified_by_user: Represents an Azure Active Directory user object.
        :type last_modified_by_user: ~files.models.MicrosoftGraphUser
        :param microsoft_graph_item_reference_drive_id: Unique identifier of the drive instance that
         contains the item. Read-only.
        :type microsoft_graph_item_reference_drive_id: str
        :param drive_type: Identifies the type of drive. See [drive][] resource for values.
        :type drive_type: str
        :param microsoft_graph_item_reference_id: Unique identifier of the item in the drive. Read-
         only.
        :type microsoft_graph_item_reference_id: str
        :param microsoft_graph_item_reference_name: The name of the item being referenced. Read-only.
        :type microsoft_graph_item_reference_name: str
        :param path: Path that can be used to navigate to the item. Read-only.
        :type path: str
        :param share_id: A unique identifier for a shared resource that can be accessed via the
         [Shares][] API.
        :type share_id: str
        :param sharepoint_ids: sharepointIds.
        :type sharepoint_ids: ~files.models.MicrosoftGraphSharepointIds
        :param site_id:
        :type site_id: str
        :param display_name: The identity's display name. Note that this may not always be available or
         up to date. For example, if a user changes their display name, the API may show the new value
         in a future response, but the items associated with the user won't show up as having changed
         when using delta.
        :type display_name: str
        :param microsoft_graph_identity_id: Unique identifier for the identity.
        :type microsoft_graph_identity_id: str
        :param microsoft_graph_identity_display_name: The identity's display name. Note that this may
         not always be available or up to date. For example, if a user changes their display name, the
         API may show the new value in a future response, but the items associated with the user won't
         show up as having changed when using delta.
        :type microsoft_graph_identity_display_name: str
        :param id1: Unique identifier for the identity.
        :type id1: str
        :param display_name1: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name1: str
        :param id2: Unique identifier for the identity.
        :type id2: str
        :param display_name2: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name2: str
        :param id3: Unique identifier for the identity.
        :type id3: str
        :param display_name3: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name3: str
        :param id4: Unique identifier for the identity.
        :type id4: str
        :param display_name4: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name4: str
        :param id5: Unique identifier for the identity.
        :type id5: str
        :param audio: audio.
        :type audio: ~files.models.MicrosoftGraphAudio
        :param content: The content stream, if the item represents a file.
        :type content: bytes
        :param c_tag: An eTag for the content of the item. This eTag is not changed if only the
         metadata is changed. Note This property is not returned if the item is a folder. Read-only.
        :type c_tag: str
        :param file_system_info: fileSystemInfo.
        :type file_system_info: ~files.models.MicrosoftGraphFileSystemInfo
        :param image: image.
        :type image: ~files.models.MicrosoftGraphImage
        :param location: geoCoordinates.
        :type location: ~files.models.MicrosoftGraphGeoCoordinates
        :param photo: photo.
        :type photo: ~files.models.MicrosoftGraphPhoto
        :param publication: publicationFacet.
        :type publication: ~files.models.MicrosoftGraphPublicationFacet
        :param root: root.
        :type root: dict[str, object]
        :param microsoft_graph_sharepoint_ids: sharepointIds.
        :type microsoft_graph_sharepoint_ids: ~files.models.MicrosoftGraphSharepointIds
        :param size: Size of the item in bytes. Read-only.
        :type size: long
        :param video: video.
        :type video: ~files.models.MicrosoftGraphVideo
        :param web_dav_url: WebDAV compatible URL for the item.
        :type web_dav_url: str
        :param analytics: itemAnalytics.
        :type analytics: ~files.models.MicrosoftGraphItemAnalytics
        :param children: Collection containing Item objects for the immediate children of Item. Only
         items representing folders have children. Read-only. Nullable.
        :type children: list[~files.models.MicrosoftGraphDriveItem]
        :param permissions: The set of permissions for the item. Read-only. Nullable.
        :type permissions: list[~files.models.MicrosoftGraphPermission]
        :param subscriptions: The set of subscriptions on the item. Only supported on the root of a
         drive.
        :type subscriptions: list[~files.models.MicrosoftGraphSubscription]
        :param thumbnails: Collection containing [ThumbnailSet][] objects associated with the item. For
         more info, see [getting thumbnails][]. Read-only. Nullable.
        :type thumbnails: list[~files.models.MicrosoftGraphThumbnailSet]
        :param versions: The list of previous versions of the item. For more info, see [getting
         previous versions][]. Read-only. Nullable.
        :type versions: list[~files.models.MicrosoftGraphDriveItemVersion]
        :param microsoft_graph_entity_id: Read-only.
        :type microsoft_graph_entity_id: str
        :param microsoft_graph_base_item_created_date_time_created_date_time: Date and time of item
         creation. Read-only.
        :type microsoft_graph_base_item_created_date_time_created_date_time: ~datetime.datetime
        :param microsoft_graph_base_item_description: Provides a user-visible description of the item.
         Optional.
        :type microsoft_graph_base_item_description: str
        :param microsoft_graph_base_item_e_tag: ETag for the item. Read-only.
        :type microsoft_graph_base_item_e_tag: str
        :param microsoft_graph_base_item_last_modified_date_time_last_modified_date_time: Date and time
         the item was last modified. Read-only.
        :type microsoft_graph_base_item_last_modified_date_time_last_modified_date_time: ~datetime.datetime
        :param microsoft_graph_base_item_name: The name of the item. Read-write.
        :type microsoft_graph_base_item_name: str
        :param microsoft_graph_base_item_web_url: URL that displays the resource in the browser. Read-
         only.
        :type microsoft_graph_base_item_web_url: str
        :param microsoft_graph_user_created_by_user: Represents an Azure Active Directory user object.
        :type microsoft_graph_user_created_by_user: ~files.models.MicrosoftGraphUser
        :param microsoft_graph_user_last_modified_by_user: Represents an Azure Active Directory user
         object.
        :type microsoft_graph_user_last_modified_by_user: ~files.models.MicrosoftGraphUser
        :param drive_id1: Unique identifier of the drive instance that contains the item. Read-only.
        :type drive_id1: str
        :param microsoft_graph_item_reference_drive_type: Identifies the type of drive. See [drive][]
         resource for values.
        :type microsoft_graph_item_reference_drive_type: str
        :param id6: Unique identifier of the item in the drive. Read-only.
        :type id6: str
        :param name1: The name of the item being referenced. Read-only.
        :type name1: str
        :param microsoft_graph_item_reference_path: Path that can be used to navigate to the item.
         Read-only.
        :type microsoft_graph_item_reference_path: str
        :param microsoft_graph_item_reference_share_id: A unique identifier for a shared resource that
         can be accessed via the [Shares][] API.
        :type microsoft_graph_item_reference_share_id: str
        :param sharepoint_ids1: sharepointIds.
        :type sharepoint_ids1: ~files.models.MicrosoftGraphSharepointIds
        :param microsoft_graph_item_reference_site_id:
        :type microsoft_graph_item_reference_site_id: str
        :param display_name5: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name5: str
        :param id7: Unique identifier for the identity.
        :type id7: str
        :param display_name6: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name6: str
        :param id8: Unique identifier for the identity.
        :type id8: str
        :param display_name7: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name7: str
        :param id9: Unique identifier for the identity.
        :type id9: str
        :param display_name8: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name8: str
        :param id10: Unique identifier for the identity.
        :type id10: str
        :param display_name9: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name9: str
        :param id11: Unique identifier for the identity.
        :type id11: str
        :param display_name10: The identity's display name. Note that this may not always be available
         or up to date. For example, if a user changes their display name, the API may show the new
         value in a future response, but the items associated with the user won't show up as having
         changed when using delta.
        :type display_name10: str
        :param id12: Unique identifier for the identity.
        :type id12: str
        :param content_type_parameter: contentTypeInfo.
        :type content_type_parameter: ~files.models.MicrosoftGraphContentTypeInfo
        :param sharepoint_ids2: sharepointIds.
        :type sharepoint_ids2: ~files.models.MicrosoftGraphSharepointIds
        :param microsoft_graph_item_analytics: itemAnalytics.
        :type microsoft_graph_item_analytics: ~files.models.MicrosoftGraphItemAnalytics
        :param drive_item: driveItem.
        :type drive_item: ~files.models.MicrosoftGraphDriveItem
        :param microsoft_graph_list_item_versions: The list of previous versions of the list item.
        :type microsoft_graph_list_item_versions: list[~files.models.MicrosoftGraphListItemVersion]
        :param id13: Read-only.
        :type id13: str
        :param id14: Read-only.
        :type id14: str
        :param application: workbookApplication.
        :type application: ~files.models.MicrosoftGraphWorkbookApplication
        :param comments:
        :type comments: list[~files.models.MicrosoftGraphWorkbookComment]
        :param functions: workbookFunctions.
        :type functions: ~files.models.MicrosoftGraphWorkbookFunctions
        :param names: Represents a collection of workbook scoped named items (named ranges and
         constants). Read-only.
        :type names: list[~files.models.MicrosoftGraphWorkbookNamedItem]
        :param operations: The status of workbook operations. Getting an operation collection is not
         supported, but you can get the status of a long-running operation if the Location header is
         returned in the response. Read-only.
        :type operations: list[~files.models.MicrosoftGraphWorkbookOperation]
        :param tables: Represents a collection of tables associated with the workbook. Read-only.
        :type tables: list[~files.models.MicrosoftGraphWorkbookTable]
        :param worksheets: Represents a collection of worksheets associated with the workbook. Read-
         only.
        :type worksheets: list[~files.models.MicrosoftGraphWorkbookWorksheet]
        :param microsoft_graph_special_folder_name: The unique identifier for this item in the
         /drive/special collection.
        :type microsoft_graph_special_folder_name: str
        :param owner: identitySet.
        :type owner: ~files.models.MicrosoftGraphIdentitySet
        :param scope: Indicates the scope of how the item is shared: anonymous, organization, or users.
         Read-only.
        :type scope: str
        :param shared_by: identitySet.
        :type shared_by: ~files.models.MicrosoftGraphIdentitySet
        :param shared_date_time: The UTC date and time when the item was shared. Read-only.
        :type shared_date_time: ~datetime.datetime
        :param on_click_telemetry_url: A callback URL that can be used to record telemetry information.
         The application should issue a GET on this URL if the user interacts with this item to improve
         the quality of results.
        :type on_click_telemetry_url: str
        :param created_by: identitySet.
        :type created_by: ~files.models.MicrosoftGraphIdentitySet
        :param microsoft_graph_remote_item_created_date_time_created_date_time: Date and time of item
         creation. Read-only.
        :type microsoft_graph_remote_item_created_date_time_created_date_time: ~datetime.datetime
        :param file: file.
        :type file: ~files.models.MicrosoftGraphFile
        :param microsoft_graph_file_system_info_file_system_info: fileSystemInfo.
        :type microsoft_graph_file_system_info_file_system_info: ~files.models.MicrosoftGraphFileSystemInfo
        :param folder: folder.
        :type folder: ~files.models.MicrosoftGraphFolder
        :param microsoft_graph_remote_item_id: Unique identifier for the remote item in its drive.
         Read-only.
        :type microsoft_graph_remote_item_id: str
        :param microsoft_graph_image: image.
        :type microsoft_graph_image: ~files.models.MicrosoftGraphImage
        :param last_modified_by: identitySet.
        :type last_modified_by: ~files.models.MicrosoftGraphIdentitySet
        :param microsoft_graph_remote_item_last_modified_date_time_last_modified_date_time: Date and
         time the item was last modified. Read-only.
        :type microsoft_graph_remote_item_last_modified_date_time_last_modified_date_time: ~datetime.datetime
        :param microsoft_graph_remote_item_name: Optional. Filename of the remote item. Read-only.
        :type microsoft_graph_remote_item_name: str
        :param package: package.
        :type package: ~files.models.MicrosoftGraphPackage
        :param parent_reference: itemReference.
        :type parent_reference: ~files.models.MicrosoftGraphItemReference
        :param shared: shared.
        :type shared: ~files.models.MicrosoftGraphShared
        :param sharepoint_ids3: sharepointIds.
        :type sharepoint_ids3: ~files.models.MicrosoftGraphSharepointIds
        :param integer_size: Size of the remote item. Read-only.
        :type integer_size: long
        :param special_folder: specialFolder.
        :type special_folder: ~files.models.MicrosoftGraphSpecialFolder
        :param microsoft_graph_video: video.
        :type microsoft_graph_video: ~files.models.MicrosoftGraphVideo
        :param microsoft_graph_remote_item_web_dav_url_web_dav_url: DAV compatible URL for the item.
        :type microsoft_graph_remote_item_web_dav_url_web_dav_url: str
        :param microsoft_graph_remote_item_web_url: URL that displays the resource in the browser.
         Read-only.
        :type microsoft_graph_remote_item_web_url: str
        :param queued_date_time: Date and time the pending binary operation was queued in UTC time.
         Read-only.
        :type queued_date_time: ~datetime.datetime
        :param type: A string indicating the type of package. While oneNote is the only currently
         defined value, you should expect other package types to be returned and handle them
         accordingly.
        :type type: str
        :param child_count: Number of children contained immediately within this container.
        :type child_count: int
        :param view: folderView.
        :type view: ~files.models.MicrosoftGraphFolderView
        :param hashes: hashes.
        :type hashes: ~files.models.MicrosoftGraphHashes
        :param mime_type: The MIME type for the file. This is determined by logic on the server and
         might not be the value provided when the file was uploaded. Read-only.
        :type mime_type: str
        :param processing_metadata:
        :type processing_metadata: bool
        :param state: Represents the state of the deleted item.
        :type state: str
        :keyword callable cls: A custom type or function that will be passed the direct response
        :return: None, or the result of cls(response)
        :rtype: None
        :raises: ~azure.core.exceptions.HttpResponseError
        """
        cls = kwargs.pop('cls', None)  # type: ClsType[None]
        error_map = {404: ResourceNotFoundError, 409: ResourceExistsError}
        error_map.update(kwargs.pop('error_map', {}))

        _body = models.MicrosoftGraphDriveItem(id=id, created_date_time=created_date_time, description=description, e_tag=e_tag, last_modified_date_time=last_modified_date_time, name=name, web_url=web_url, created_by_user=created_by_user, last_modified_by_user=last_modified_by_user, drive_id=microsoft_graph_item_reference_drive_id, drive_type=drive_type, id_parent_reference_id=microsoft_graph_item_reference_id, name_parent_reference_name=microsoft_graph_item_reference_name, path=path, share_id=share_id, sharepoint_ids=sharepoint_ids, site_id=site_id, display_name_last_modified_by_user_display_name=display_name, id_last_modified_by_user_id=microsoft_graph_identity_id, display_name_last_modified_by_device_display_name=microsoft_graph_identity_display_name, id_last_modified_by_device_id=id1, display_name_last_modified_by_application_display_name=display_name1, id_last_modified_by_application_id=id2, display_name_created_by_user_display_name=display_name2, id_created_by_user_id=id3, display_name_created_by_device_display_name=display_name3, id_created_by_device_id=id4, display_name_created_by_application_display_name=display_name4, id_created_by_application_id=id5, audio=audio, content=content, c_tag=c_tag, file_system_info=file_system_info, image=image, location=location, photo=photo, publication=publication, root=root, sharepoint_ids=microsoft_graph_sharepoint_ids, size=size, video=video, web_dav_url=web_dav_url, analytics=analytics, children=children, permissions=permissions, subscriptions=subscriptions, thumbnails=thumbnails, versions=versions, id_list_item_id=microsoft_graph_entity_id, created_date_time_list_item_created_date_time=microsoft_graph_base_item_created_date_time_created_date_time, description_list_item_description=microsoft_graph_base_item_description, e_tag_list_item_e_tag=microsoft_graph_base_item_e_tag, last_modified_date_time_list_item_last_modified_date_time=microsoft_graph_base_item_last_modified_date_time_last_modified_date_time, name_list_item_name=microsoft_graph_base_item_name, web_url_list_item_web_url=microsoft_graph_base_item_web_url, created_by_user_list_item_created_by_user=microsoft_graph_user_created_by_user, last_modified_by_user_list_item_last_modified_by_user=microsoft_graph_user_last_modified_by_user, drive_id_list_item_parent_reference_drive_id=drive_id1, drive_type_list_item_parent_reference_drive_type=microsoft_graph_item_reference_drive_type, id_list_item_parent_reference_id=id6, name_list_item_parent_reference_name=name1, path_list_item_parent_reference_path=microsoft_graph_item_reference_path, share_id_list_item_parent_reference_share_id=microsoft_graph_item_reference_share_id, sharepoint_ids_list_item_parent_reference_sharepoint_ids=sharepoint_ids1, site_id_list_item_parent_reference_site_id=microsoft_graph_item_reference_site_id, display_name_list_item_last_modified_by_user_display_name=display_name5, id_list_item_last_modified_by_user_id=id7, display_name_list_item_last_modified_by_device_display_name=display_name6, id_list_item_last_modified_by_device_id=id8, display_name_list_item_last_modified_by_application_display_name=display_name7, id_list_item_last_modified_by_application_id=id9, display_name_list_item_created_by_user_display_name=display_name8, id_list_item_created_by_user_id=id10, display_name_list_item_created_by_device_display_name=display_name9, id_list_item_created_by_device_id=id11, display_name_list_item_created_by_application_display_name=display_name10, id_list_item_created_by_application_id=id12, content_type=content_type_parameter, sharepoint_ids_list_item_sharepoint_ids=sharepoint_ids2, analytics_list_item_analytics=microsoft_graph_item_analytics, drive_item=drive_item, versions_list_item_versions=microsoft_graph_list_item_versions, id_list_item_fields_id=id13, id_workbook_id=id14, application=application, comments=comments, functions=functions, names=names, operations=operations, tables=tables, worksheets=worksheets, name_special_folder_name=microsoft_graph_special_folder_name, owner=owner, scope=scope, shared_by=shared_by, shared_date_time=shared_date_time, on_click_telemetry_url=on_click_telemetry_url, created_by=created_by, created_date_time_remote_item_created_date_time=microsoft_graph_remote_item_created_date_time_created_date_time, file=file, file_system_info_remote_item_file_system_info=microsoft_graph_file_system_info_file_system_info, folder=folder, id_remote_item_id=microsoft_graph_remote_item_id, image_remote_item_image=microsoft_graph_image, last_modified_by=last_modified_by, last_modified_date_time_remote_item_last_modified_date_time=microsoft_graph_remote_item_last_modified_date_time_last_modified_date_time, name_remote_item_name=microsoft_graph_remote_item_name, package=package, parent_reference=parent_reference, shared=shared, sharepoint_ids_remote_item_sharepoint_ids=sharepoint_ids3, size_remote_item_size=integer_size, special_folder=special_folder, video_remote_item_video=microsoft_graph_video, web_dav_url_remote_item_web_dav_url=microsoft_graph_remote_item_web_dav_url_web_dav_url, web_url_remote_item_web_url=microsoft_graph_remote_item_web_url, queued_date_time=queued_date_time, type=type, child_count=child_count, view=view, hashes=hashes, mime_type=mime_type, processing_metadata=processing_metadata, state=state)
        content_type = kwargs.pop("content_type", "application/json")
        accept = "application/json"

        # Construct URL
        url = self.update_special.metadata['url']  # type: ignore
        path_format_arguments = {
            'drive-id': self._serialize.url("drive_id", drive_id, 'str'),
            'driveItem-id': self._serialize.url("drive_item_id", drive_item_id, 'str'),
        }
        url = self._client.format_url(url, **path_format_arguments)

        # Construct parameters
        query_parameters = {}  # type: Dict[str, Any]

        # Construct headers
        header_parameters = {}  # type: Dict[str, Any]
        header_parameters['Content-Type'] = self._serialize.header("content_type", content_type, 'str')
        header_parameters['Accept'] = self._serialize.header("accept", accept, 'str')

        body_content_kwargs = {}  # type: Dict[str, Any]
        body_content = self._serialize.body(_body, 'MicrosoftGraphDriveItem')
        body_content_kwargs['content'] = body_content
        request = self._client.patch(url, query_parameters, header_parameters, **body_content_kwargs)

        pipeline_response = self._client._pipeline.run(request, stream=False, **kwargs)
        response = pipeline_response.http_response

        if response.status_code not in [204]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            error = self._deserialize(models.OdataError, response)
            raise HttpResponseError(response=response, model=error, error_format=ARMErrorFormat)

        if cls:
            return cls(pipeline_response, None, {})

    update_special.metadata = {'url': '/drives/{drive-id}/special/{driveItem-id}'}  # type: ignore

    def delete_special(
        self,
        drive_id,  # type: str
        drive_item_id,  # type: str
        if_match=None,  # type: Optional[str]
        **kwargs  # type: Any
    ):
        # type: (...) -> None
        """Delete navigation property special for drives.

        Delete navigation property special for drives.

        :param drive_id: key: id of drive.
        :type drive_id: str
        :param drive_item_id: key: id of driveItem.
        :type drive_item_id: str
        :param if_match: ETag.
        :type if_match: str
        :keyword callable cls: A custom type or function that will be passed the direct response
        :return: None, or the result of cls(response)
        :rtype: None
        :raises: ~azure.core.exceptions.HttpResponseError
        """
        cls = kwargs.pop('cls', None)  # type: ClsType[None]
        error_map = {404: ResourceNotFoundError, 409: ResourceExistsError}
        error_map.update(kwargs.pop('error_map', {}))
        accept = "application/json"

        # Construct URL
        url = self.delete_special.metadata['url']  # type: ignore
        path_format_arguments = {
            'drive-id': self._serialize.url("drive_id", drive_id, 'str'),
            'driveItem-id': self._serialize.url("drive_item_id", drive_item_id, 'str'),
        }
        url = self._client.format_url(url, **path_format_arguments)

        # Construct parameters
        query_parameters = {}  # type: Dict[str, Any]

        # Construct headers
        header_parameters = {}  # type: Dict[str, Any]
        if if_match is not None:
            header_parameters['If-Match'] = self._serialize.header("if_match", if_match, 'str')
        header_parameters['Accept'] = self._serialize.header("accept", accept, 'str')

        request = self._client.delete(url, query_parameters, header_parameters)
        pipeline_response = self._client._pipeline.run(request, stream=False, **kwargs)
        response = pipeline_response.http_response

        if response.status_code not in [204]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            error = self._deserialize(models.OdataError, response)
            raise HttpResponseError(response=response, model=error, error_format=ARMErrorFormat)

        if cls:
            return cls(pipeline_response, None, {})

    delete_special.metadata = {'url': '/drives/{drive-id}/special/{driveItem-id}'}  # type: ignore
