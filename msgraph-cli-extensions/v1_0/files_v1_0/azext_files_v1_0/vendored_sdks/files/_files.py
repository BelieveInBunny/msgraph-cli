# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from typing import TYPE_CHECKING

from azure.mgmt.core import ARMPipelineClient
from msrest import Deserializer, Serializer

if TYPE_CHECKING:
    # pylint: disable=unused-import,ungrouped-imports
    from typing import Any, Optional

    from azure.core.credentials import TokenCredential

from ._configuration import FilesConfiguration
from .operations import DrivesDriveOperations
from .operations import DrivesOperations
from .operations import DrivesListOperations
from .operations import DrivesListContentTypesOperations
from .operations import DrivesListItemsOperations
from .operations import DrivesListItemsVersionsOperations
from .operations import GroupsOperations
from .operations import SharesSharedDriveItemOperations
from .operations import SharesOperations
from .operations import SharesListOperations
from .operations import SharesListContentTypesOperations
from .operations import SharesListItemsOperations
from .operations import SharesListItemsVersionsOperations
from .operations import SharesListItemOperations
from .operations import SharesListItemVersionsOperations
from .operations import SharesPermissionOperations
from .operations import UsersOperations
from . import models


class Files(object):
    """Files.

    :ivar drives_drive: DrivesDriveOperations operations
    :vartype drives_drive: files.operations.DrivesDriveOperations
    :ivar drives: DrivesOperations operations
    :vartype drives: files.operations.DrivesOperations
    :ivar drives_list: DrivesListOperations operations
    :vartype drives_list: files.operations.DrivesListOperations
    :ivar drives_list_content_types: DrivesListContentTypesOperations operations
    :vartype drives_list_content_types: files.operations.DrivesListContentTypesOperations
    :ivar drives_list_items: DrivesListItemsOperations operations
    :vartype drives_list_items: files.operations.DrivesListItemsOperations
    :ivar drives_list_items_versions: DrivesListItemsVersionsOperations operations
    :vartype drives_list_items_versions: files.operations.DrivesListItemsVersionsOperations
    :ivar groups: GroupsOperations operations
    :vartype groups: files.operations.GroupsOperations
    :ivar shares_shared_drive_item: SharesSharedDriveItemOperations operations
    :vartype shares_shared_drive_item: files.operations.SharesSharedDriveItemOperations
    :ivar shares: SharesOperations operations
    :vartype shares: files.operations.SharesOperations
    :ivar shares_list: SharesListOperations operations
    :vartype shares_list: files.operations.SharesListOperations
    :ivar shares_list_content_types: SharesListContentTypesOperations operations
    :vartype shares_list_content_types: files.operations.SharesListContentTypesOperations
    :ivar shares_list_items: SharesListItemsOperations operations
    :vartype shares_list_items: files.operations.SharesListItemsOperations
    :ivar shares_list_items_versions: SharesListItemsVersionsOperations operations
    :vartype shares_list_items_versions: files.operations.SharesListItemsVersionsOperations
    :ivar shares_list_item: SharesListItemOperations operations
    :vartype shares_list_item: files.operations.SharesListItemOperations
    :ivar shares_list_item_versions: SharesListItemVersionsOperations operations
    :vartype shares_list_item_versions: files.operations.SharesListItemVersionsOperations
    :ivar shares_permission: SharesPermissionOperations operations
    :vartype shares_permission: files.operations.SharesPermissionOperations
    :ivar users: UsersOperations operations
    :vartype users: files.operations.UsersOperations
    :param credential: Credential needed for the client to connect to Azure.
    :type credential: ~azure.core.credentials.TokenCredential
    :param top: Show only the first n items.
    :type top: int
    :param skip: Skip the first n items.
    :type skip: int
    :param search: Search items by search phrases.
    :type search: str
    :param filter: Filter items by property values.
    :type filter: str
    :param count: Include count of items.
    :type count: bool
    :param str base_url: Service URL
    """

    def __init__(
        self,
        credential,  # type: "TokenCredential"
        top=None,  # type: Optional[int]
        skip=None,  # type: Optional[int]
        search=None,  # type: Optional[str]
        filter=None,  # type: Optional[str]
        count=None,  # type: Optional[bool]
        base_url=None,  # type: Optional[str]
        **kwargs  # type: Any
    ):
        # type: (...) -> None
        if not base_url:
            base_url = 'https://graph.microsoft.com/v1.0'
        self._config = FilesConfiguration(credential, top, skip, search, filter, count, **kwargs)
        self._client = ARMPipelineClient(base_url=base_url, config=self._config, **kwargs)

        client_models = {k: v for k, v in models.__dict__.items() if isinstance(v, type)}
        self._serialize = Serializer(client_models)
        self._serialize.client_side_validation = False
        self._deserialize = Deserializer(client_models)

        self.drives_drive = DrivesDriveOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.drives = DrivesOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.drives_list = DrivesListOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.drives_list_content_types = DrivesListContentTypesOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.drives_list_items = DrivesListItemsOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.drives_list_items_versions = DrivesListItemsVersionsOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.groups = GroupsOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.shares_shared_drive_item = SharesSharedDriveItemOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.shares = SharesOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.shares_list = SharesListOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.shares_list_content_types = SharesListContentTypesOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.shares_list_items = SharesListItemsOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.shares_list_items_versions = SharesListItemsVersionsOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.shares_list_item = SharesListItemOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.shares_list_item_versions = SharesListItemVersionsOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.shares_permission = SharesPermissionOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.users = UsersOperations(
            self._client, self._config, self._serialize, self._deserialize)

    def close(self):
        # type: () -> None
        self._client.close()

    def __enter__(self):
        # type: () -> Files
        self._client.__enter__()
        return self

    def __exit__(self, *exc_details):
        # type: (Any) -> None
        self._client.__exit__(*exc_details)
