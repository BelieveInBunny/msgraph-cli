# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=too-many-lines


def applications_applicationsapplication_create_application(client,
                                                            body):
    return client.create_application(body=body)


def applications_applicationsapplication_delete_application(client,
                                                            application_id,
                                                            if_match=None):
    return client.delete_application(application_id=application_id,
                                     if_match=if_match)


def applications_applicationsapplication_list_application(client,
                                                          orderby=None,
                                                          select=None,
                                                          expand=None):
    return client.list_application(orderby=orderby,
                                   select=select,
                                   expand=expand)


def applications_applicationsapplication_set_logo(client,
                                                  application_id,
                                                  data):
    return client.set_logo(application_id=application_id,
                           data=data)


def applications_applicationsapplication_show_application(client,
                                                          application_id,
                                                          select=None,
                                                          expand=None):
    return client.get_application(application_id=application_id,
                                  select=select,
                                  expand=expand)


def applications_applicationsapplication_show_logo(client,
                                                   application_id):
    return client.get_logo(application_id=application_id)


def applications_applicationsapplication_update_application(client,
                                                            application_id,
                                                            body):
    return client.update_application(application_id=application_id,
                                     body=body)


def applications_application_add_key(client,
                                     application_id,
                                     key_credential=None,
                                     password_credential=None,
                                     proof=None):
    body = {}
    body['key_credential'] = key_credential
    body['password_credential'] = password_credential
    body['proof'] = proof
    return client.add_key(application_id=application_id,
                          body=body)


def applications_application_add_password(client,
                                          application_id,
                                          password_credential=None):
    body = {}
    body['password_credential'] = password_credential
    return client.add_password(application_id=application_id,
                               body=body)


def applications_application_check_member_group(client,
                                                application_id,
                                                group_ids=None):
    body = {}
    body['group_ids'] = group_ids
    return client.check_member_groups(application_id=application_id,
                                      body=body)


def applications_application_check_member_object(client,
                                                 application_id,
                                                 ids=None):
    body = {}
    body['ids'] = ids
    return client.check_member_objects(application_id=application_id,
                                       body=body)


def applications_application_create_extension_property(client,
                                                       application_id,
                                                       id_=None,
                                                       deleted_date_time=None,
                                                       app_display_name=None,
                                                       data_type=None,
                                                       is_synced_from_on_premises=None,
                                                       name=None,
                                                       target_objects=None):
    body = {}
    body['id'] = id_
    body['deleted_date_time'] = deleted_date_time
    body['app_display_name'] = app_display_name
    body['data_type'] = data_type
    body['is_synced_from_on_premises'] = is_synced_from_on_premises
    body['name'] = name
    body['target_objects'] = target_objects
    return client.create_extension_properties(application_id=application_id,
                                              body=body)


def applications_application_create_ref_home_realm_discovery_policy(client,
                                                                    application_id,
                                                                    body):
    return client.create_ref_home_realm_discovery_policies(application_id=application_id,
                                                           body=body)


def applications_application_create_ref_owner(client,
                                              application_id,
                                              body):
    return client.create_ref_owners(application_id=application_id,
                                    body=body)


def applications_application_create_ref_token_issuance_policy(client,
                                                              application_id,
                                                              body):
    return client.create_ref_token_issuance_policies(application_id=application_id,
                                                     body=body)


def applications_application_create_ref_token_lifetime_policy(client,
                                                              application_id,
                                                              body):
    return client.create_ref_token_lifetime_policies(application_id=application_id,
                                                     body=body)


def applications_application_delete_extension_property(client,
                                                       application_id,
                                                       extension_property_id,
                                                       if_match=None):
    return client.delete_extension_properties(application_id=application_id,
                                              extension_property_id=extension_property_id,
                                              if_match=if_match)


def applications_application_delete_ref_created_on_behalf_of(client,
                                                             application_id,
                                                             if_match=None):
    return client.delete_ref_created_on_behalf_of(application_id=application_id,
                                                  if_match=if_match)


def applications_application_delta(client):
    return client.delta()


def applications_application_get_available_extension_property(client,
                                                              is_synced_from_on_premises=None):
    if is_synced_from_on_premises is None:
        is_synced_from_on_premises = False
    body = {}
    body['is_synced_from_on_premises'] = False if is_synced_from_on_premises is None else is_synced_from_on_premises
    return client.get_available_extension_properties(body=body)


def applications_application_get_by_id(client,
                                       ids=None,
                                       types=None):
    body = {}
    body['ids'] = ids
    body['types'] = types
    return client.get_by_ids(body=body)


def applications_application_get_member_group(client,
                                              application_id,
                                              security_enabled_only=None):
    if security_enabled_only is None:
        security_enabled_only = False
    body = {}
    body['security_enabled_only'] = False if security_enabled_only is None else security_enabled_only
    return client.get_member_groups(application_id=application_id,
                                    body=body)


def applications_application_get_member_object(client,
                                               application_id,
                                               security_enabled_only=None):
    if security_enabled_only is None:
        security_enabled_only = False
    body = {}
    body['security_enabled_only'] = False if security_enabled_only is None else security_enabled_only
    return client.get_member_objects(application_id=application_id,
                                     body=body)


def applications_application_list_extension_property(client,
                                                     application_id,
                                                     orderby=None,
                                                     select=None,
                                                     expand=None):
    return client.list_extension_properties(application_id=application_id,
                                            orderby=orderby,
                                            select=select,
                                            expand=expand)


def applications_application_list_home_realm_discovery_policy(client,
                                                              application_id,
                                                              orderby=None,
                                                              select=None,
                                                              expand=None):
    return client.list_home_realm_discovery_policies(application_id=application_id,
                                                     orderby=orderby,
                                                     select=select,
                                                     expand=expand)


def applications_application_list_owner(client,
                                        application_id,
                                        orderby=None,
                                        select=None,
                                        expand=None):
    return client.list_owners(application_id=application_id,
                              orderby=orderby,
                              select=select,
                              expand=expand)


def applications_application_list_ref_home_realm_discovery_policy(client,
                                                                  application_id,
                                                                  orderby=None):
    return client.list_ref_home_realm_discovery_policies(application_id=application_id,
                                                         orderby=orderby)


def applications_application_list_ref_owner(client,
                                            application_id,
                                            orderby=None):
    return client.list_ref_owners(application_id=application_id,
                                  orderby=orderby)


def applications_application_list_ref_token_issuance_policy(client,
                                                            application_id,
                                                            orderby=None):
    return client.list_ref_token_issuance_policies(application_id=application_id,
                                                   orderby=orderby)


def applications_application_list_ref_token_lifetime_policy(client,
                                                            application_id,
                                                            orderby=None):
    return client.list_ref_token_lifetime_policies(application_id=application_id,
                                                   orderby=orderby)


def applications_application_list_token_issuance_policy(client,
                                                        application_id,
                                                        orderby=None,
                                                        select=None,
                                                        expand=None):
    return client.list_token_issuance_policies(application_id=application_id,
                                               orderby=orderby,
                                               select=select,
                                               expand=expand)


def applications_application_list_token_lifetime_policy(client,
                                                        application_id,
                                                        orderby=None,
                                                        select=None,
                                                        expand=None):
    return client.list_token_lifetime_policies(application_id=application_id,
                                               orderby=orderby,
                                               select=select,
                                               expand=expand)


def applications_application_remove_key(client,
                                        application_id,
                                        key_id=None,
                                        proof=None):
    body = {}
    body['key_id'] = key_id
    body['proof'] = proof
    return client.remove_key(application_id=application_id,
                             body=body)


def applications_application_remove_password(client,
                                             application_id,
                                             key_id=None):
    body = {}
    body['key_id'] = key_id
    return client.remove_password(application_id=application_id,
                                  body=body)


def applications_application_restore(client,
                                     application_id):
    return client.restore(application_id=application_id)


def applications_application_set_ref_created_on_behalf_of(client,
                                                          application_id,
                                                          body):
    return client.set_ref_created_on_behalf_of(application_id=application_id,
                                               body=body)


def applications_application_show_created_on_behalf_of(client,
                                                       application_id,
                                                       select=None,
                                                       expand=None):
    return client.get_created_on_behalf_of(application_id=application_id,
                                           select=select,
                                           expand=expand)


def applications_application_show_extension_property(client,
                                                     application_id,
                                                     extension_property_id,
                                                     select=None,
                                                     expand=None):
    return client.get_extension_properties(application_id=application_id,
                                           extension_property_id=extension_property_id,
                                           select=select,
                                           expand=expand)


def applications_application_show_ref_created_on_behalf_of(client,
                                                           application_id):
    return client.get_ref_created_on_behalf_of(application_id=application_id)


def applications_application_update_extension_property(client,
                                                       application_id,
                                                       extension_property_id,
                                                       id_=None,
                                                       deleted_date_time=None,
                                                       app_display_name=None,
                                                       data_type=None,
                                                       is_synced_from_on_premises=None,
                                                       name=None,
                                                       target_objects=None):
    body = {}
    body['id'] = id_
    body['deleted_date_time'] = deleted_date_time
    body['app_display_name'] = app_display_name
    body['data_type'] = data_type
    body['is_synced_from_on_premises'] = is_synced_from_on_premises
    body['name'] = name
    body['target_objects'] = target_objects
    return client.update_extension_properties(application_id=application_id,
                                              extension_property_id=extension_property_id,
                                              body=body)


def applications_application_validate_property(client,
                                               entity_type=None,
                                               display_name=None,
                                               mail_nickname=None,
                                               on_behalf_of_user_id=None):
    body = {}
    body['entity_type'] = entity_type
    body['display_name'] = display_name
    body['mail_nickname'] = mail_nickname
    body['on_behalf_of_user_id'] = on_behalf_of_user_id
    return client.validate_properties(body=body)


def applications_group_create_app_role_assignment(client,
                                                  group_id,
                                                  id_=None,
                                                  deleted_date_time=None,
                                                  app_role_id=None,
                                                  created_date_time=None,
                                                  principal_display_name=None,
                                                  principal_id=None,
                                                  principal_type=None,
                                                  resource_display_name=None,
                                                  resource_id=None):
    body = {}
    body['id'] = id_
    body['deleted_date_time'] = deleted_date_time
    body['app_role_id'] = app_role_id
    body['created_date_time'] = created_date_time
    body['principal_display_name'] = principal_display_name
    body['principal_id'] = principal_id
    body['principal_type'] = principal_type
    body['resource_display_name'] = resource_display_name
    body['resource_id'] = resource_id
    return client.create_app_role_assignments(group_id=group_id,
                                              body=body)


def applications_group_delete_app_role_assignment(client,
                                                  group_id,
                                                  app_role_assignment_id,
                                                  if_match=None):
    return client.delete_app_role_assignments(group_id=group_id,
                                              app_role_assignment_id=app_role_assignment_id,
                                              if_match=if_match)


def applications_group_list_app_role_assignment(client,
                                                group_id,
                                                orderby=None,
                                                select=None,
                                                expand=None):
    return client.list_app_role_assignments(group_id=group_id,
                                            orderby=orderby,
                                            select=select,
                                            expand=expand)


def applications_group_show_app_role_assignment(client,
                                                group_id,
                                                app_role_assignment_id,
                                                select=None,
                                                expand=None):
    return client.get_app_role_assignments(group_id=group_id,
                                           app_role_assignment_id=app_role_assignment_id,
                                           select=select,
                                           expand=expand)


def applications_group_update_app_role_assignment(client,
                                                  group_id,
                                                  app_role_assignment_id,
                                                  id_=None,
                                                  deleted_date_time=None,
                                                  app_role_id=None,
                                                  created_date_time=None,
                                                  principal_display_name=None,
                                                  principal_id=None,
                                                  principal_type=None,
                                                  resource_display_name=None,
                                                  resource_id=None):
    body = {}
    body['id'] = id_
    body['deleted_date_time'] = deleted_date_time
    body['app_role_id'] = app_role_id
    body['created_date_time'] = created_date_time
    body['principal_display_name'] = principal_display_name
    body['principal_id'] = principal_id
    body['principal_type'] = principal_type
    body['resource_display_name'] = resource_display_name
    body['resource_id'] = resource_id
    return client.update_app_role_assignments(group_id=group_id,
                                              app_role_assignment_id=app_role_assignment_id,
                                              body=body)


def applications_serviceprincipalsserviceprincipal_create_service_principal(client,
                                                                            body):
    return client.create_service_principal(body=body)


def applications_serviceprincipalsserviceprincipal_delete_service_principal(client,
                                                                            service_principal_id,
                                                                            if_match=None):
    return client.delete_service_principal(service_principal_id=service_principal_id,
                                           if_match=if_match)


def applications_serviceprincipalsserviceprincipal_list_service_principal(client,
                                                                          orderby=None,
                                                                          select=None,
                                                                          expand=None):
    return client.list_service_principal(orderby=orderby,
                                         select=select,
                                         expand=expand)


def applications_serviceprincipalsserviceprincipal_show_service_principal(client,
                                                                          service_principal_id,
                                                                          select=None,
                                                                          expand=None):
    return client.get_service_principal(service_principal_id=service_principal_id,
                                        select=select,
                                        expand=expand)


def applications_serviceprincipalsserviceprincipal_update_service_principal(client,
                                                                            service_principal_id,
                                                                            body):
    return client.update_service_principal(service_principal_id=service_principal_id,
                                           body=body)


def applications_serviceprincipal_add_key(client,
                                          service_principal_id,
                                          key_credential=None,
                                          password_credential=None,
                                          proof=None):
    body = {}
    body['key_credential'] = key_credential
    body['password_credential'] = password_credential
    body['proof'] = proof
    return client.add_key(service_principal_id=service_principal_id,
                          body=body)


def applications_serviceprincipal_add_password(client,
                                               service_principal_id,
                                               password_credential=None):
    body = {}
    body['password_credential'] = password_credential
    return client.add_password(service_principal_id=service_principal_id,
                               body=body)


def applications_serviceprincipal_check_member_group(client,
                                                     service_principal_id,
                                                     group_ids=None):
    body = {}
    body['group_ids'] = group_ids
    return client.check_member_groups(service_principal_id=service_principal_id,
                                      body=body)


def applications_serviceprincipal_check_member_object(client,
                                                      service_principal_id,
                                                      ids=None):
    body = {}
    body['ids'] = ids
    return client.check_member_objects(service_principal_id=service_principal_id,
                                       body=body)


def applications_serviceprincipal_create_app_role_assigned_to(client,
                                                              service_principal_id,
                                                              id_=None,
                                                              deleted_date_time=None,
                                                              app_role_id=None,
                                                              created_date_time=None,
                                                              principal_display_name=None,
                                                              principal_id=None,
                                                              principal_type=None,
                                                              resource_display_name=None,
                                                              resource_id=None):
    body = {}
    body['id'] = id_
    body['deleted_date_time'] = deleted_date_time
    body['app_role_id'] = app_role_id
    body['created_date_time'] = created_date_time
    body['principal_display_name'] = principal_display_name
    body['principal_id'] = principal_id
    body['principal_type'] = principal_type
    body['resource_display_name'] = resource_display_name
    body['resource_id'] = resource_id
    return client.create_app_role_assigned_to(service_principal_id=service_principal_id,
                                              body=body)


def applications_serviceprincipal_create_app_role_assignment(client,
                                                             service_principal_id,
                                                             id_=None,
                                                             deleted_date_time=None,
                                                             app_role_id=None,
                                                             created_date_time=None,
                                                             principal_display_name=None,
                                                             principal_id=None,
                                                             principal_type=None,
                                                             resource_display_name=None,
                                                             resource_id=None):
    body = {}
    body['id'] = id_
    body['deleted_date_time'] = deleted_date_time
    body['app_role_id'] = app_role_id
    body['created_date_time'] = created_date_time
    body['principal_display_name'] = principal_display_name
    body['principal_id'] = principal_id
    body['principal_type'] = principal_type
    body['resource_display_name'] = resource_display_name
    body['resource_id'] = resource_id
    return client.create_app_role_assignments(service_principal_id=service_principal_id,
                                              body=body)


def applications_serviceprincipal_create_endpoint(client,
                                                  service_principal_id,
                                                  id_=None,
                                                  deleted_date_time=None,
                                                  capability=None,
                                                  provider_id=None,
                                                  provider_name=None,
                                                  provider_resource_id=None,
                                                  uri=None):
    body = {}
    body['id'] = id_
    body['deleted_date_time'] = deleted_date_time
    body['capability'] = capability
    body['provider_id'] = provider_id
    body['provider_name'] = provider_name
    body['provider_resource_id'] = provider_resource_id
    body['uri'] = uri
    return client.create_endpoints(service_principal_id=service_principal_id,
                                   body=body)


def applications_serviceprincipal_create_ref_claim_mapping_policy(client,
                                                                  service_principal_id,
                                                                  body):
    return client.create_ref_claims_mapping_policies(service_principal_id=service_principal_id,
                                                     body=body)


def applications_serviceprincipal_create_ref_created_object(client,
                                                            service_principal_id,
                                                            body):
    return client.create_ref_created_objects(service_principal_id=service_principal_id,
                                             body=body)


def applications_serviceprincipal_create_ref_home_realm_discovery_policy(client,
                                                                         service_principal_id,
                                                                         body):
    return client.create_ref_home_realm_discovery_policies(service_principal_id=service_principal_id,
                                                           body=body)


def applications_serviceprincipal_create_ref_member_of(client,
                                                       service_principal_id,
                                                       body):
    return client.create_ref_member_of(service_principal_id=service_principal_id,
                                       body=body)


def applications_serviceprincipal_create_ref_oauth2_permission_grant(client,
                                                                     service_principal_id,
                                                                     body):
    return client.create_ref_oauth2_permission_grants(service_principal_id=service_principal_id,
                                                      body=body)


def applications_serviceprincipal_create_ref_owned_object(client,
                                                          service_principal_id,
                                                          body):
    return client.create_ref_owned_objects(service_principal_id=service_principal_id,
                                           body=body)


def applications_serviceprincipal_create_ref_owner(client,
                                                   service_principal_id,
                                                   body):
    return client.create_ref_owners(service_principal_id=service_principal_id,
                                    body=body)


def applications_serviceprincipal_create_ref_token_issuance_policy(client,
                                                                   service_principal_id,
                                                                   body):
    return client.create_ref_token_issuance_policies(service_principal_id=service_principal_id,
                                                     body=body)


def applications_serviceprincipal_create_ref_token_lifetime_policy(client,
                                                                   service_principal_id,
                                                                   body):
    return client.create_ref_token_lifetime_policies(service_principal_id=service_principal_id,
                                                     body=body)


def applications_serviceprincipal_create_ref_transitive_member_of(client,
                                                                  service_principal_id,
                                                                  body):
    return client.create_ref_transitive_member_of(service_principal_id=service_principal_id,
                                                  body=body)


def applications_serviceprincipal_delete_app_role_assigned_to(client,
                                                              service_principal_id,
                                                              app_role_assignment_id,
                                                              if_match=None):
    return client.delete_app_role_assigned_to(service_principal_id=service_principal_id,
                                              app_role_assignment_id=app_role_assignment_id,
                                              if_match=if_match)


def applications_serviceprincipal_delete_app_role_assignment(client,
                                                             service_principal_id,
                                                             app_role_assignment_id,
                                                             if_match=None):
    return client.delete_app_role_assignments(service_principal_id=service_principal_id,
                                              app_role_assignment_id=app_role_assignment_id,
                                              if_match=if_match)


def applications_serviceprincipal_delete_endpoint(client,
                                                  service_principal_id,
                                                  endpoint_id,
                                                  if_match=None):
    return client.delete_endpoints(service_principal_id=service_principal_id,
                                   endpoint_id=endpoint_id,
                                   if_match=if_match)


def applications_serviceprincipal_delta(client):
    return client.delta()


def applications_serviceprincipal_get_available_extension_property(client,
                                                                   is_synced_from_on_premises=None):
    if is_synced_from_on_premises is None:
        is_synced_from_on_premises = False
    body = {}
    body['is_synced_from_on_premises'] = False if is_synced_from_on_premises is None else is_synced_from_on_premises
    return client.get_available_extension_properties(body=body)


def applications_serviceprincipal_get_by_id(client,
                                            ids=None,
                                            types=None):
    body = {}
    body['ids'] = ids
    body['types'] = types
    return client.get_by_ids(body=body)


def applications_serviceprincipal_get_member_group(client,
                                                   service_principal_id,
                                                   security_enabled_only=None):
    if security_enabled_only is None:
        security_enabled_only = False
    body = {}
    body['security_enabled_only'] = False if security_enabled_only is None else security_enabled_only
    return client.get_member_groups(service_principal_id=service_principal_id,
                                    body=body)


def applications_serviceprincipal_get_member_object(client,
                                                    service_principal_id,
                                                    security_enabled_only=None):
    if security_enabled_only is None:
        security_enabled_only = False
    body = {}
    body['security_enabled_only'] = False if security_enabled_only is None else security_enabled_only
    return client.get_member_objects(service_principal_id=service_principal_id,
                                     body=body)


def applications_serviceprincipal_list_app_role_assigned_to(client,
                                                            service_principal_id,
                                                            orderby=None,
                                                            select=None,
                                                            expand=None):
    return client.list_app_role_assigned_to(service_principal_id=service_principal_id,
                                            orderby=orderby,
                                            select=select,
                                            expand=expand)


def applications_serviceprincipal_list_app_role_assignment(client,
                                                           service_principal_id,
                                                           orderby=None,
                                                           select=None,
                                                           expand=None):
    return client.list_app_role_assignments(service_principal_id=service_principal_id,
                                            orderby=orderby,
                                            select=select,
                                            expand=expand)


def applications_serviceprincipal_list_claim_mapping_policy(client,
                                                            service_principal_id,
                                                            orderby=None,
                                                            select=None,
                                                            expand=None):
    return client.list_claims_mapping_policies(service_principal_id=service_principal_id,
                                               orderby=orderby,
                                               select=select,
                                               expand=expand)


def applications_serviceprincipal_list_created_object(client,
                                                      service_principal_id,
                                                      orderby=None,
                                                      select=None,
                                                      expand=None):
    return client.list_created_objects(service_principal_id=service_principal_id,
                                       orderby=orderby,
                                       select=select,
                                       expand=expand)


def applications_serviceprincipal_list_endpoint(client,
                                                service_principal_id,
                                                orderby=None,
                                                select=None,
                                                expand=None):
    return client.list_endpoints(service_principal_id=service_principal_id,
                                 orderby=orderby,
                                 select=select,
                                 expand=expand)


def applications_serviceprincipal_list_home_realm_discovery_policy(client,
                                                                   service_principal_id,
                                                                   orderby=None,
                                                                   select=None,
                                                                   expand=None):
    return client.list_home_realm_discovery_policies(service_principal_id=service_principal_id,
                                                     orderby=orderby,
                                                     select=select,
                                                     expand=expand)


def applications_serviceprincipal_list_member_of(client,
                                                 service_principal_id,
                                                 orderby=None,
                                                 select=None,
                                                 expand=None):
    return client.list_member_of(service_principal_id=service_principal_id,
                                 orderby=orderby,
                                 select=select,
                                 expand=expand)


def applications_serviceprincipal_list_oauth2_permission_grant(client,
                                                               service_principal_id,
                                                               orderby=None,
                                                               select=None,
                                                               expand=None):
    return client.list_oauth2_permission_grants(service_principal_id=service_principal_id,
                                                orderby=orderby,
                                                select=select,
                                                expand=expand)


def applications_serviceprincipal_list_owned_object(client,
                                                    service_principal_id,
                                                    orderby=None,
                                                    select=None,
                                                    expand=None):
    return client.list_owned_objects(service_principal_id=service_principal_id,
                                     orderby=orderby,
                                     select=select,
                                     expand=expand)


def applications_serviceprincipal_list_owner(client,
                                             service_principal_id,
                                             orderby=None,
                                             select=None,
                                             expand=None):
    return client.list_owners(service_principal_id=service_principal_id,
                              orderby=orderby,
                              select=select,
                              expand=expand)


def applications_serviceprincipal_list_ref_claim_mapping_policy(client,
                                                                service_principal_id,
                                                                orderby=None):
    return client.list_ref_claims_mapping_policies(service_principal_id=service_principal_id,
                                                   orderby=orderby)


def applications_serviceprincipal_list_ref_created_object(client,
                                                          service_principal_id,
                                                          orderby=None):
    return client.list_ref_created_objects(service_principal_id=service_principal_id,
                                           orderby=orderby)


def applications_serviceprincipal_list_ref_home_realm_discovery_policy(client,
                                                                       service_principal_id,
                                                                       orderby=None):
    return client.list_ref_home_realm_discovery_policies(service_principal_id=service_principal_id,
                                                         orderby=orderby)


def applications_serviceprincipal_list_ref_member_of(client,
                                                     service_principal_id,
                                                     orderby=None):
    return client.list_ref_member_of(service_principal_id=service_principal_id,
                                     orderby=orderby)


def applications_serviceprincipal_list_ref_oauth2_permission_grant(client,
                                                                   service_principal_id,
                                                                   orderby=None):
    return client.list_ref_oauth2_permission_grants(service_principal_id=service_principal_id,
                                                    orderby=orderby)


def applications_serviceprincipal_list_ref_owned_object(client,
                                                        service_principal_id,
                                                        orderby=None):
    return client.list_ref_owned_objects(service_principal_id=service_principal_id,
                                         orderby=orderby)


def applications_serviceprincipal_list_ref_owner(client,
                                                 service_principal_id,
                                                 orderby=None):
    return client.list_ref_owners(service_principal_id=service_principal_id,
                                  orderby=orderby)


def applications_serviceprincipal_list_ref_token_issuance_policy(client,
                                                                 service_principal_id,
                                                                 orderby=None):
    return client.list_ref_token_issuance_policies(service_principal_id=service_principal_id,
                                                   orderby=orderby)


def applications_serviceprincipal_list_ref_token_lifetime_policy(client,
                                                                 service_principal_id,
                                                                 orderby=None):
    return client.list_ref_token_lifetime_policies(service_principal_id=service_principal_id,
                                                   orderby=orderby)


def applications_serviceprincipal_list_ref_transitive_member_of(client,
                                                                service_principal_id,
                                                                orderby=None):
    return client.list_ref_transitive_member_of(service_principal_id=service_principal_id,
                                                orderby=orderby)


def applications_serviceprincipal_list_token_issuance_policy(client,
                                                             service_principal_id,
                                                             orderby=None,
                                                             select=None,
                                                             expand=None):
    return client.list_token_issuance_policies(service_principal_id=service_principal_id,
                                               orderby=orderby,
                                               select=select,
                                               expand=expand)


def applications_serviceprincipal_list_token_lifetime_policy(client,
                                                             service_principal_id,
                                                             orderby=None,
                                                             select=None,
                                                             expand=None):
    return client.list_token_lifetime_policies(service_principal_id=service_principal_id,
                                               orderby=orderby,
                                               select=select,
                                               expand=expand)


def applications_serviceprincipal_list_transitive_member_of(client,
                                                            service_principal_id,
                                                            orderby=None,
                                                            select=None,
                                                            expand=None):
    return client.list_transitive_member_of(service_principal_id=service_principal_id,
                                            orderby=orderby,
                                            select=select,
                                            expand=expand)


def applications_serviceprincipal_remove_key(client,
                                             service_principal_id,
                                             key_id=None,
                                             proof=None):
    body = {}
    body['key_id'] = key_id
    body['proof'] = proof
    return client.remove_key(service_principal_id=service_principal_id,
                             body=body)


def applications_serviceprincipal_remove_password(client,
                                                  service_principal_id,
                                                  key_id=None):
    body = {}
    body['key_id'] = key_id
    return client.remove_password(service_principal_id=service_principal_id,
                                  body=body)


def applications_serviceprincipal_restore(client,
                                          service_principal_id):
    return client.restore(service_principal_id=service_principal_id)


def applications_serviceprincipal_show_app_role_assigned_to(client,
                                                            service_principal_id,
                                                            app_role_assignment_id,
                                                            select=None,
                                                            expand=None):
    return client.get_app_role_assigned_to(service_principal_id=service_principal_id,
                                           app_role_assignment_id=app_role_assignment_id,
                                           select=select,
                                           expand=expand)


def applications_serviceprincipal_show_app_role_assignment(client,
                                                           service_principal_id,
                                                           app_role_assignment_id,
                                                           select=None,
                                                           expand=None):
    return client.get_app_role_assignments(service_principal_id=service_principal_id,
                                           app_role_assignment_id=app_role_assignment_id,
                                           select=select,
                                           expand=expand)


def applications_serviceprincipal_show_endpoint(client,
                                                service_principal_id,
                                                endpoint_id,
                                                select=None,
                                                expand=None):
    return client.get_endpoints(service_principal_id=service_principal_id,
                                endpoint_id=endpoint_id,
                                select=select,
                                expand=expand)


def applications_serviceprincipal_update_app_role_assigned_to(client,
                                                              service_principal_id,
                                                              app_role_assignment_id,
                                                              id_=None,
                                                              deleted_date_time=None,
                                                              app_role_id=None,
                                                              created_date_time=None,
                                                              principal_display_name=None,
                                                              principal_id=None,
                                                              principal_type=None,
                                                              resource_display_name=None,
                                                              resource_id=None):
    body = {}
    body['id'] = id_
    body['deleted_date_time'] = deleted_date_time
    body['app_role_id'] = app_role_id
    body['created_date_time'] = created_date_time
    body['principal_display_name'] = principal_display_name
    body['principal_id'] = principal_id
    body['principal_type'] = principal_type
    body['resource_display_name'] = resource_display_name
    body['resource_id'] = resource_id
    return client.update_app_role_assigned_to(service_principal_id=service_principal_id,
                                              app_role_assignment_id=app_role_assignment_id,
                                              body=body)


def applications_serviceprincipal_update_app_role_assignment(client,
                                                             service_principal_id,
                                                             app_role_assignment_id,
                                                             id_=None,
                                                             deleted_date_time=None,
                                                             app_role_id=None,
                                                             created_date_time=None,
                                                             principal_display_name=None,
                                                             principal_id=None,
                                                             principal_type=None,
                                                             resource_display_name=None,
                                                             resource_id=None):
    body = {}
    body['id'] = id_
    body['deleted_date_time'] = deleted_date_time
    body['app_role_id'] = app_role_id
    body['created_date_time'] = created_date_time
    body['principal_display_name'] = principal_display_name
    body['principal_id'] = principal_id
    body['principal_type'] = principal_type
    body['resource_display_name'] = resource_display_name
    body['resource_id'] = resource_id
    return client.update_app_role_assignments(service_principal_id=service_principal_id,
                                              app_role_assignment_id=app_role_assignment_id,
                                              body=body)


def applications_serviceprincipal_update_endpoint(client,
                                                  service_principal_id,
                                                  endpoint_id,
                                                  id_=None,
                                                  deleted_date_time=None,
                                                  capability=None,
                                                  provider_id=None,
                                                  provider_name=None,
                                                  provider_resource_id=None,
                                                  uri=None):
    body = {}
    body['id'] = id_
    body['deleted_date_time'] = deleted_date_time
    body['capability'] = capability
    body['provider_id'] = provider_id
    body['provider_name'] = provider_name
    body['provider_resource_id'] = provider_resource_id
    body['uri'] = uri
    return client.update_endpoints(service_principal_id=service_principal_id,
                                   endpoint_id=endpoint_id,
                                   body=body)


def applications_serviceprincipal_validate_property(client,
                                                    entity_type=None,
                                                    display_name=None,
                                                    mail_nickname=None,
                                                    on_behalf_of_user_id=None):
    body = {}
    body['entity_type'] = entity_type
    body['display_name'] = display_name
    body['mail_nickname'] = mail_nickname
    body['on_behalf_of_user_id'] = on_behalf_of_user_id
    return client.validate_properties(body=body)


def applications_user_create_app_role_assignment(client,
                                                 user_id,
                                                 id_=None,
                                                 deleted_date_time=None,
                                                 app_role_id=None,
                                                 created_date_time=None,
                                                 principal_display_name=None,
                                                 principal_id=None,
                                                 principal_type=None,
                                                 resource_display_name=None,
                                                 resource_id=None):
    body = {}
    body['id'] = id_
    body['deleted_date_time'] = deleted_date_time
    body['app_role_id'] = app_role_id
    body['created_date_time'] = created_date_time
    body['principal_display_name'] = principal_display_name
    body['principal_id'] = principal_id
    body['principal_type'] = principal_type
    body['resource_display_name'] = resource_display_name
    body['resource_id'] = resource_id
    return client.create_app_role_assignments(user_id=user_id,
                                              body=body)


def applications_user_delete_app_role_assignment(client,
                                                 user_id,
                                                 app_role_assignment_id,
                                                 if_match=None):
    return client.delete_app_role_assignments(user_id=user_id,
                                              app_role_assignment_id=app_role_assignment_id,
                                              if_match=if_match)


def applications_user_list_app_role_assignment(client,
                                               user_id,
                                               orderby=None,
                                               select=None,
                                               expand=None):
    return client.list_app_role_assignments(user_id=user_id,
                                            orderby=orderby,
                                            select=select,
                                            expand=expand)


def applications_user_show_app_role_assignment(client,
                                               user_id,
                                               app_role_assignment_id,
                                               select=None,
                                               expand=None):
    return client.get_app_role_assignments(user_id=user_id,
                                           app_role_assignment_id=app_role_assignment_id,
                                           select=select,
                                           expand=expand)


def applications_user_update_app_role_assignment(client,
                                                 user_id,
                                                 app_role_assignment_id,
                                                 id_=None,
                                                 deleted_date_time=None,
                                                 app_role_id=None,
                                                 created_date_time=None,
                                                 principal_display_name=None,
                                                 principal_id=None,
                                                 principal_type=None,
                                                 resource_display_name=None,
                                                 resource_id=None):
    body = {}
    body['id'] = id_
    body['deleted_date_time'] = deleted_date_time
    body['app_role_id'] = app_role_id
    body['created_date_time'] = created_date_time
    body['principal_display_name'] = principal_display_name
    body['principal_id'] = principal_id
    body['principal_type'] = principal_type
    body['resource_display_name'] = resource_display_name
    body['resource_id'] = resource_id
    return client.update_app_role_assignments(user_id=user_id,
                                              app_role_assignment_id=app_role_assignment_id,
                                              body=body)
