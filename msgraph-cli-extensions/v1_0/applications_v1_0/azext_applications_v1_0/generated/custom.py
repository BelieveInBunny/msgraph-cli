# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=line-too-long
# pylint: disable=too-many-lines


def applications_application_list(client,
                                  orderby=None,
                                  select=None,
                                  expand=None):
    return client.list_application(orderby=orderby,
                                   select=select,
                                   expand=expand)


def applications_application_create(client,
                                    id_=None,
                                    deleted_date_time=None,
                                    add_ins=None,
                                    app_id=None,
                                    application_template_id=None,
                                    app_roles=None,
                                    created_date_time=None,
                                    description=None,
                                    display_name=None,
                                    group_membership_claims=None,
                                    identifier_uris=None,
                                    info=None,
                                    is_device_only_auth_supported=None,
                                    is_fallback_public_client=None,
                                    key_credentials=None,
                                    logo=None,
                                    notes=None,
                                    oauth2_require_post_response=None,
                                    parental_control_settings=None,
                                    password_credentials=None,
                                    public_client=None,
                                    publisher_domain=None,
                                    required_resource_access=None,
                                    sign_in_audience=None,
                                    tags=None,
                                    token_encryption_key_id=None,
                                    created_on_behalf_of=None,
                                    extension_properties=None,
                                    home_realm_discovery_policies=None,
                                    owners=None,
                                    token_issuance_policies=None,
                                    token_lifetime_policies=None,
                                    web_home_page_url=None,
                                    web_implicit_grant_settings=None,
                                    web_logout_url=None,
                                    web_redirect_uris=None,
                                    optional_claims_access_token=None,
                                    optional_claims_id_token=None,
                                    optional_claims_saml2token=None,
                                    api_accept_mapped_claims=None,
                                    api_known_client_applications=None,
                                    api_oauth2permission_scopes=None,
                                    api_pre_authorized_applications=None,
                                    api_requested_access_token_version=None):
    return client.create_application(id=id_,
                                     deleted_date_time=deleted_date_time,
                                     add_ins=add_ins,
                                     app_id=app_id,
                                     application_template_id=application_template_id,
                                     app_roles=app_roles,
                                     created_date_time=created_date_time,
                                     description=description,
                                     display_name=display_name,
                                     group_membership_claims=group_membership_claims,
                                     identifier_uris=identifier_uris,
                                     info=info,
                                     is_device_only_auth_supported=is_device_only_auth_supported,
                                     is_fallback_public_client=is_fallback_public_client,
                                     key_credentials=key_credentials,
                                     logo=logo,
                                     notes=notes,
                                     oauth2_require_post_response=oauth2_require_post_response,
                                     parental_control_settings=parental_control_settings,
                                     password_credentials=password_credentials,
                                     public_client=public_client,
                                     publisher_domain=publisher_domain,
                                     required_resource_access=required_resource_access,
                                     sign_in_audience=sign_in_audience,
                                     tags=tags,
                                     token_encryption_key_id=token_encryption_key_id,
                                     created_on_behalf_of=created_on_behalf_of,
                                     extension_properties=extension_properties,
                                     home_realm_discovery_policies=home_realm_discovery_policies,
                                     owners=owners,
                                     token_issuance_policies=token_issuance_policies,
                                     token_lifetime_policies=token_lifetime_policies,
                                     home_page_url=web_home_page_url,
                                     implicit_grant_settings=web_implicit_grant_settings,
                                     logout_url=web_logout_url,
                                     redirect_uris=web_redirect_uris,
                                     access_token=optional_claims_access_token,
                                     id_token=optional_claims_id_token,
                                     saml2_token=optional_claims_saml2token,
                                     accept_mapped_claims=api_accept_mapped_claims,
                                     known_client_applications=api_known_client_applications,
                                     oauth2_permission_scopes=api_oauth2permission_scopes,
                                     pre_authorized_applications=api_pre_authorized_applications,
                                     requested_access_token_version=api_requested_access_token_version)


def applications_application_update(client,
                                    application_id,
                                    id_=None,
                                    deleted_date_time=None,
                                    add_ins=None,
                                    app_id=None,
                                    application_template_id=None,
                                    app_roles=None,
                                    created_date_time=None,
                                    description=None,
                                    display_name=None,
                                    group_membership_claims=None,
                                    identifier_uris=None,
                                    info=None,
                                    is_device_only_auth_supported=None,
                                    is_fallback_public_client=None,
                                    key_credentials=None,
                                    logo=None,
                                    notes=None,
                                    oauth2_require_post_response=None,
                                    parental_control_settings=None,
                                    password_credentials=None,
                                    public_client=None,
                                    publisher_domain=None,
                                    required_resource_access=None,
                                    sign_in_audience=None,
                                    tags=None,
                                    token_encryption_key_id=None,
                                    created_on_behalf_of=None,
                                    extension_properties=None,
                                    home_realm_discovery_policies=None,
                                    owners=None,
                                    token_issuance_policies=None,
                                    token_lifetime_policies=None,
                                    web_home_page_url=None,
                                    web_implicit_grant_settings=None,
                                    web_logout_url=None,
                                    web_redirect_uris=None,
                                    optional_claims_access_token=None,
                                    optional_claims_id_token=None,
                                    optional_claims_saml2token=None,
                                    api_accept_mapped_claims=None,
                                    api_known_client_applications=None,
                                    api_oauth2permission_scopes=None,
                                    api_pre_authorized_applications=None,
                                    api_requested_access_token_version=None):
    return client.update_application(application_id=application_id,
                                     id=id_,
                                     deleted_date_time=deleted_date_time,
                                     add_ins=add_ins,
                                     app_id=app_id,
                                     application_template_id=application_template_id,
                                     app_roles=app_roles,
                                     created_date_time=created_date_time,
                                     description=description,
                                     display_name=display_name,
                                     group_membership_claims=group_membership_claims,
                                     identifier_uris=identifier_uris,
                                     info=info,
                                     is_device_only_auth_supported=is_device_only_auth_supported,
                                     is_fallback_public_client=is_fallback_public_client,
                                     key_credentials=key_credentials,
                                     logo=logo,
                                     notes=notes,
                                     oauth2_require_post_response=oauth2_require_post_response,
                                     parental_control_settings=parental_control_settings,
                                     password_credentials=password_credentials,
                                     public_client=public_client,
                                     publisher_domain=publisher_domain,
                                     required_resource_access=required_resource_access,
                                     sign_in_audience=sign_in_audience,
                                     tags=tags,
                                     token_encryption_key_id=token_encryption_key_id,
                                     created_on_behalf_of=created_on_behalf_of,
                                     extension_properties=extension_properties,
                                     home_realm_discovery_policies=home_realm_discovery_policies,
                                     owners=owners,
                                     token_issuance_policies=token_issuance_policies,
                                     token_lifetime_policies=token_lifetime_policies,
                                     home_page_url=web_home_page_url,
                                     implicit_grant_settings=web_implicit_grant_settings,
                                     logout_url=web_logout_url,
                                     redirect_uris=web_redirect_uris,
                                     access_token=optional_claims_access_token,
                                     id_token=optional_claims_id_token,
                                     saml2_token=optional_claims_saml2token,
                                     accept_mapped_claims=api_accept_mapped_claims,
                                     known_client_applications=api_known_client_applications,
                                     oauth2_permission_scopes=api_oauth2permission_scopes,
                                     pre_authorized_applications=api_pre_authorized_applications,
                                     requested_access_token_version=api_requested_access_token_version)


def applications_application_delete(client,
                                    application_id,
                                    if_match=None):
    return client.delete_application(application_id=application_id,
                                     if_match=if_match)


def applications_application_get(client,
                                 application_id,
                                 select=None,
                                 expand=None):
    return client.get_application(application_id=application_id,
                                  select=select,
                                  expand=expand)


def applications_application_get_logo(client,
                                      application_id):
    return client.get_logo(application_id=application_id)


def applications_application_set_logo(client,
                                      application_id,
                                      data):
    return client.set_logo(application_id=application_id,
                           data=data)


def applications_application_delete(client,
                                    application_id,
                                    extension_property_id=None,
                                    if_match=None):
    if application_id is not None and extension_property_id is not None:
        return client.delete_extension_property(application_id=application_id,
                                                extension_property_id=extension_property_id,
                                                if_match=if_match)
    return client.delete_ref_created_on_behalf_of(application_id=application_id,
                                                  if_match=if_match)


def applications_application_add_key(client,
                                     application_id,
                                     key_credential=None,
                                     password_credential=None,
                                     proof=None):
    return client.add_key(application_id=application_id,
                          key_credential=key_credential,
                          password_credential=password_credential,
                          proof=proof)


def applications_application_add_password(client,
                                          application_id,
                                          password_credential=None):
    return client.add_password(application_id=application_id,
                               password_credential=password_credential)


def applications_application_check_member_group(client,
                                                application_id,
                                                group_ids=None):
    return client.check_member_group(application_id=application_id,
                                     group_ids=group_ids)


def applications_application_check_member_object(client,
                                                 application_id,
                                                 ids=None):
    return client.check_member_object(application_id=application_id,
                                      ids=ids)


def applications_application_create_extension_property(client,
                                                       application_id,
                                                       id_=None,
                                                       deleted_date_time=None,
                                                       app_display_name=None,
                                                       data_type=None,
                                                       is_synced_from_on_premises=None,
                                                       name=None,
                                                       target_objects=None):
    return client.create_extension_property(application_id=application_id,
                                            id=id_,
                                            deleted_date_time=deleted_date_time,
                                            app_display_name=app_display_name,
                                            data_type=data_type,
                                            is_synced_from_on_premises=is_synced_from_on_premises,
                                            name=name,
                                            target_objects=target_objects)


def applications_application_create_ref_home_realm_discovery_policy(client,
                                                                    application_id,
                                                                    body):
    return client.create_ref_home_realm_discovery_policy(application_id=application_id,
                                                         body=body)


def applications_application_create_ref_owner(client,
                                              application_id,
                                              body):
    return client.create_ref_owner(application_id=application_id,
                                   body=body)


def applications_application_create_ref_token_issuance_policy(client,
                                                              application_id,
                                                              body):
    return client.create_ref_token_issuance_policy(application_id=application_id,
                                                   body=body)


def applications_application_create_ref_token_lifetime_policy(client,
                                                              application_id,
                                                              body):
    return client.create_ref_token_lifetime_policy(application_id=application_id,
                                                   body=body)


def applications_application_delta(client):
    return client.delta()


def applications_application_get_available_extension_property(client,
                                                              is_synced_from_on_premises=None):
    if is_synced_from_on_premises is None:
        is_synced_from_on_premises = False
    return client.get_available_extension_property(is_synced_from_on_premises=is_synced_from_on_premises)


def applications_application_get_by_id(client,
                                       ids=None,
                                       types=None):
    return client.get_by_id(ids=ids,
                            types=types)


def applications_application_get_created_on_behalf_of(client,
                                                      application_id,
                                                      select=None,
                                                      expand=None):
    return client.get_created_on_behalf_of(application_id=application_id,
                                           select=select,
                                           expand=expand)


def applications_application_get_extension_property(client,
                                                    application_id,
                                                    extension_property_id,
                                                    select=None,
                                                    expand=None):
    return client.get_extension_property(application_id=application_id,
                                         extension_property_id=extension_property_id,
                                         select=select,
                                         expand=expand)


def applications_application_get_member_group(client,
                                              application_id,
                                              security_enabled_only=None):
    if security_enabled_only is None:
        security_enabled_only = False
    return client.get_member_group(application_id=application_id,
                                   security_enabled_only=security_enabled_only)


def applications_application_get_member_object(client,
                                               application_id,
                                               security_enabled_only=None):
    if security_enabled_only is None:
        security_enabled_only = False
    return client.get_member_object(application_id=application_id,
                                    security_enabled_only=security_enabled_only)


def applications_application_get_ref_created_on_behalf_of(client,
                                                          application_id):
    return client.get_ref_created_on_behalf_of(application_id=application_id)


def applications_application_list_extension_property(client,
                                                     application_id,
                                                     orderby=None,
                                                     select=None,
                                                     expand=None):
    return client.list_extension_property(application_id=application_id,
                                          orderby=orderby,
                                          select=select,
                                          expand=expand)


def applications_application_list_home_realm_discovery_policy(client,
                                                              application_id,
                                                              orderby=None,
                                                              select=None,
                                                              expand=None):
    return client.list_home_realm_discovery_policy(application_id=application_id,
                                                   orderby=orderby,
                                                   select=select,
                                                   expand=expand)


def applications_application_list_owner(client,
                                        application_id,
                                        orderby=None,
                                        select=None,
                                        expand=None):
    return client.list_owner(application_id=application_id,
                             orderby=orderby,
                             select=select,
                             expand=expand)


def applications_application_list_ref_home_realm_discovery_policy(client,
                                                                  application_id,
                                                                  orderby=None):
    return client.list_ref_home_realm_discovery_policy(application_id=application_id,
                                                       orderby=orderby)


def applications_application_list_ref_owner(client,
                                            application_id,
                                            orderby=None):
    return client.list_ref_owner(application_id=application_id,
                                 orderby=orderby)


def applications_application_list_ref_token_issuance_policy(client,
                                                            application_id,
                                                            orderby=None):
    return client.list_ref_token_issuance_policy(application_id=application_id,
                                                 orderby=orderby)


def applications_application_list_ref_token_lifetime_policy(client,
                                                            application_id,
                                                            orderby=None):
    return client.list_ref_token_lifetime_policy(application_id=application_id,
                                                 orderby=orderby)


def applications_application_list_token_issuance_policy(client,
                                                        application_id,
                                                        orderby=None,
                                                        select=None,
                                                        expand=None):
    return client.list_token_issuance_policy(application_id=application_id,
                                             orderby=orderby,
                                             select=select,
                                             expand=expand)


def applications_application_list_token_lifetime_policy(client,
                                                        application_id,
                                                        orderby=None,
                                                        select=None,
                                                        expand=None):
    return client.list_token_lifetime_policy(application_id=application_id,
                                             orderby=orderby,
                                             select=select,
                                             expand=expand)


def applications_application_remove_key(client,
                                        application_id,
                                        key_id=None,
                                        proof=None):
    return client.remove_key(application_id=application_id,
                             key_id=key_id,
                             proof=proof)


def applications_application_remove_password(client,
                                             application_id,
                                             key_id=None):
    return client.remove_password(application_id=application_id,
                                  key_id=key_id)


def applications_application_restore(client,
                                     application_id):
    return client.restore(application_id=application_id)


def applications_application_set_ref_created_on_behalf_of(client,
                                                          application_id,
                                                          body):
    return client.set_ref_created_on_behalf_of(application_id=application_id,
                                               body=body)


def applications_application_update_extension_property(client,
                                                       application_id,
                                                       extension_property_id,
                                                       id_=None,
                                                       deleted_date_time=None,
                                                       app_display_name=None,
                                                       data_type=None,
                                                       is_synced_from_on_premises=None,
                                                       name=None,
                                                       target_objects=None):
    return client.update_extension_property(application_id=application_id,
                                            extension_property_id=extension_property_id,
                                            id=id_,
                                            deleted_date_time=deleted_date_time,
                                            app_display_name=app_display_name,
                                            data_type=data_type,
                                            is_synced_from_on_premises=is_synced_from_on_premises,
                                            name=name,
                                            target_objects=target_objects)


def applications_application_validate_property(client,
                                               entity_type=None,
                                               display_name=None,
                                               mail_nickname=None,
                                               on_behalf_of_user_id=None):
    return client.validate_property(entity_type=entity_type,
                                    display_name=display_name,
                                    mail_nickname=mail_nickname,
                                    on_behalf_of_user_id=on_behalf_of_user_id)


def applications_group_delete(client,
                              group_id,
                              app_role_assignment_id,
                              if_match=None):
    return client.delete_app_role_assignment(group_id=group_id,
                                             app_role_assignment_id=app_role_assignment_id,
                                             if_match=if_match)


def applications_group_create_app_role_assignment(client,
                                                  group_id,
                                                  id_=None,
                                                  deleted_date_time=None,
                                                  app_role_id=None,
                                                  created_date_time=None,
                                                  principal_display_name=None,
                                                  principal_id=None,
                                                  principal_type=None,
                                                  resource_display_name=None,
                                                  resource_id=None):
    return client.create_app_role_assignment(group_id=group_id,
                                             id=id_,
                                             deleted_date_time=deleted_date_time,
                                             app_role_id=app_role_id,
                                             created_date_time=created_date_time,
                                             principal_display_name=principal_display_name,
                                             principal_id=principal_id,
                                             principal_type=principal_type,
                                             resource_display_name=resource_display_name,
                                             resource_id=resource_id)


def applications_group_get_app_role_assignment(client,
                                               group_id,
                                               app_role_assignment_id,
                                               select=None,
                                               expand=None):
    return client.get_app_role_assignment(group_id=group_id,
                                          app_role_assignment_id=app_role_assignment_id,
                                          select=select,
                                          expand=expand)


def applications_group_list_app_role_assignment(client,
                                                group_id,
                                                orderby=None,
                                                select=None,
                                                expand=None):
    return client.list_app_role_assignment(group_id=group_id,
                                           orderby=orderby,
                                           select=select,
                                           expand=expand)


def applications_group_update_app_role_assignment(client,
                                                  group_id,
                                                  app_role_assignment_id,
                                                  id_=None,
                                                  deleted_date_time=None,
                                                  app_role_id=None,
                                                  created_date_time=None,
                                                  principal_display_name=None,
                                                  principal_id=None,
                                                  principal_type=None,
                                                  resource_display_name=None,
                                                  resource_id=None):
    return client.update_app_role_assignment(group_id=group_id,
                                             app_role_assignment_id=app_role_assignment_id,
                                             id=id_,
                                             deleted_date_time=deleted_date_time,
                                             app_role_id=app_role_id,
                                             created_date_time=created_date_time,
                                             principal_display_name=principal_display_name,
                                             principal_id=principal_id,
                                             principal_type=principal_type,
                                             resource_display_name=resource_display_name,
                                             resource_id=resource_id)


def applications_service_principal_service_principal_delete(client,
                                                            service_principal_id,
                                                            if_match=None):
    return client.delete_service_principal(service_principal_id=service_principal_id,
                                           if_match=if_match)


def applications_service_principal_service_principal_create_service_principal(client,
                                                                              id_=None,
                                                                              deleted_date_time=None,
                                                                              account_enabled=None,
                                                                              add_ins=None,
                                                                              alternative_names=None,
                                                                              app_description=None,
                                                                              app_display_name=None,
                                                                              app_id=None,
                                                                              application_template_id=None,
                                                                              app_owner_organization_id=None,
                                                                              app_role_assignment_required=None,
                                                                              app_roles=None,
                                                                              description=None,
                                                                              display_name=None,
                                                                              homepage=None,
                                                                              info=None,
                                                                              key_credentials=None,
                                                                              login_url=None,
                                                                              logout_url=None,
                                                                              notes=None,
                                                                              notification_email_addresses=None,
                                                                              oauth2_permission_scopes=None,
                                                                              password_credentials=None,
                                                                              preferred_single_sign_on_mode=None,
                                                                              preferred_token_signing_key_thumbprint=None,
                                                                              reply_urls=None,
                                                                              service_principal_names=None,
                                                                              service_principal_type=None,
                                                                              tags=None,
                                                                              token_encryption_key_id=None,
                                                                              app_role_assigned_to=None,
                                                                              app_role_assignments=None,
                                                                              claims_mapping_policies=None,
                                                                              created_objects=None,
                                                                              endpoints=None,
                                                                              home_realm_discovery_policies=None,
                                                                              member_of=None,
                                                                              oauth2_permission_grants=None,
                                                                              owned_objects=None,
                                                                              owners=None,
                                                                              token_issuance_policies=None,
                                                                              token_lifetime_policies=None,
                                                                              transitive_member_of=None,
                                                                              saml_single_sign_on_settings_relay_state=None):
    return client.create_service_principal(id=id_,
                                           deleted_date_time=deleted_date_time,
                                           account_enabled=account_enabled,
                                           add_ins=add_ins,
                                           alternative_names=alternative_names,
                                           app_description=app_description,
                                           app_display_name=app_display_name,
                                           app_id=app_id,
                                           application_template_id=application_template_id,
                                           app_owner_organization_id=app_owner_organization_id,
                                           app_role_assignment_required=app_role_assignment_required,
                                           app_roles=app_roles,
                                           description=description,
                                           display_name=display_name,
                                           homepage=homepage,
                                           info=info,
                                           key_credentials=key_credentials,
                                           login_url=login_url,
                                           logout_url=logout_url,
                                           notes=notes,
                                           notification_email_addresses=notification_email_addresses,
                                           oauth2_permission_scopes=oauth2_permission_scopes,
                                           password_credentials=password_credentials,
                                           preferred_single_sign_on_mode=preferred_single_sign_on_mode,
                                           preferred_token_signing_key_thumbprint=preferred_token_signing_key_thumbprint,
                                           reply_urls=reply_urls,
                                           service_principal_names=service_principal_names,
                                           service_principal_type=service_principal_type,
                                           tags=tags,
                                           token_encryption_key_id=token_encryption_key_id,
                                           app_role_assigned_to=app_role_assigned_to,
                                           app_role_assignments=app_role_assignments,
                                           claims_mapping_policies=claims_mapping_policies,
                                           created_objects=created_objects,
                                           endpoints=endpoints,
                                           home_realm_discovery_policies=home_realm_discovery_policies,
                                           member_of=member_of,
                                           oauth2_permission_grants=oauth2_permission_grants,
                                           owned_objects=owned_objects,
                                           owners=owners,
                                           token_issuance_policies=token_issuance_policies,
                                           token_lifetime_policies=token_lifetime_policies,
                                           transitive_member_of=transitive_member_of,
                                           relay_state=saml_single_sign_on_settings_relay_state)


def applications_service_principal_service_principal_get_service_principal(client,
                                                                           service_principal_id,
                                                                           select=None,
                                                                           expand=None):
    return client.get_service_principal(service_principal_id=service_principal_id,
                                        select=select,
                                        expand=expand)


def applications_service_principal_service_principal_list_service_principal(client,
                                                                            orderby=None,
                                                                            select=None,
                                                                            expand=None):
    return client.list_service_principal(orderby=orderby,
                                         select=select,
                                         expand=expand)


def applications_service_principal_service_principal_update_service_principal(client,
                                                                              service_principal_id,
                                                                              id_=None,
                                                                              deleted_date_time=None,
                                                                              account_enabled=None,
                                                                              add_ins=None,
                                                                              alternative_names=None,
                                                                              app_description=None,
                                                                              app_display_name=None,
                                                                              app_id=None,
                                                                              application_template_id=None,
                                                                              app_owner_organization_id=None,
                                                                              app_role_assignment_required=None,
                                                                              app_roles=None,
                                                                              description=None,
                                                                              display_name=None,
                                                                              homepage=None,
                                                                              info=None,
                                                                              key_credentials=None,
                                                                              login_url=None,
                                                                              logout_url=None,
                                                                              notes=None,
                                                                              notification_email_addresses=None,
                                                                              oauth2_permission_scopes=None,
                                                                              password_credentials=None,
                                                                              preferred_single_sign_on_mode=None,
                                                                              preferred_token_signing_key_thumbprint=None,
                                                                              reply_urls=None,
                                                                              service_principal_names=None,
                                                                              service_principal_type=None,
                                                                              tags=None,
                                                                              token_encryption_key_id=None,
                                                                              app_role_assigned_to=None,
                                                                              app_role_assignments=None,
                                                                              claims_mapping_policies=None,
                                                                              created_objects=None,
                                                                              endpoints=None,
                                                                              home_realm_discovery_policies=None,
                                                                              member_of=None,
                                                                              oauth2_permission_grants=None,
                                                                              owned_objects=None,
                                                                              owners=None,
                                                                              token_issuance_policies=None,
                                                                              token_lifetime_policies=None,
                                                                              transitive_member_of=None,
                                                                              saml_single_sign_on_settings_relay_state=None):
    return client.update_service_principal(service_principal_id=service_principal_id,
                                           id=id_,
                                           deleted_date_time=deleted_date_time,
                                           account_enabled=account_enabled,
                                           add_ins=add_ins,
                                           alternative_names=alternative_names,
                                           app_description=app_description,
                                           app_display_name=app_display_name,
                                           app_id=app_id,
                                           application_template_id=application_template_id,
                                           app_owner_organization_id=app_owner_organization_id,
                                           app_role_assignment_required=app_role_assignment_required,
                                           app_roles=app_roles,
                                           description=description,
                                           display_name=display_name,
                                           homepage=homepage,
                                           info=info,
                                           key_credentials=key_credentials,
                                           login_url=login_url,
                                           logout_url=logout_url,
                                           notes=notes,
                                           notification_email_addresses=notification_email_addresses,
                                           oauth2_permission_scopes=oauth2_permission_scopes,
                                           password_credentials=password_credentials,
                                           preferred_single_sign_on_mode=preferred_single_sign_on_mode,
                                           preferred_token_signing_key_thumbprint=preferred_token_signing_key_thumbprint,
                                           reply_urls=reply_urls,
                                           service_principal_names=service_principal_names,
                                           service_principal_type=service_principal_type,
                                           tags=tags,
                                           token_encryption_key_id=token_encryption_key_id,
                                           app_role_assigned_to=app_role_assigned_to,
                                           app_role_assignments=app_role_assignments,
                                           claims_mapping_policies=claims_mapping_policies,
                                           created_objects=created_objects,
                                           endpoints=endpoints,
                                           home_realm_discovery_policies=home_realm_discovery_policies,
                                           member_of=member_of,
                                           oauth2_permission_grants=oauth2_permission_grants,
                                           owned_objects=owned_objects,
                                           owners=owners,
                                           token_issuance_policies=token_issuance_policies,
                                           token_lifetime_policies=token_lifetime_policies,
                                           transitive_member_of=transitive_member_of,
                                           relay_state=saml_single_sign_on_settings_relay_state)


def applications_service_principal_delete(client,
                                          service_principal_id,
                                          app_role_assignment_id=None,
                                          if_match=None,
                                          endpoint_id=None):
    if service_principal_id is not None and app_role_assignment_id is not None:
        return client.delete_app_role_assigned_to(service_principal_id=service_principal_id,
                                                  app_role_assignment_id=app_role_assignment_id,
                                                  if_match=if_match)
    elif service_principal_id is not None and app_role_assignment_id is not None:
        return client.delete_app_role_assignment(service_principal_id=service_principal_id,
                                                 app_role_assignment_id=app_role_assignment_id,
                                                 if_match=if_match)
    return client.delete_endpoint(service_principal_id=service_principal_id,
                                  endpoint_id=endpoint_id,
                                  if_match=if_match)


def applications_service_principal_add_key(client,
                                           service_principal_id,
                                           key_credential=None,
                                           password_credential=None,
                                           proof=None):
    return client.add_key(service_principal_id=service_principal_id,
                          key_credential=key_credential,
                          password_credential=password_credential,
                          proof=proof)


def applications_service_principal_add_password(client,
                                                service_principal_id,
                                                password_credential=None):
    return client.add_password(service_principal_id=service_principal_id,
                               password_credential=password_credential)


def applications_service_principal_check_member_group(client,
                                                      service_principal_id,
                                                      group_ids=None):
    return client.check_member_group(service_principal_id=service_principal_id,
                                     group_ids=group_ids)


def applications_service_principal_check_member_object(client,
                                                       service_principal_id,
                                                       ids=None):
    return client.check_member_object(service_principal_id=service_principal_id,
                                      ids=ids)


def applications_service_principal_create_app_role_assigned_to(client,
                                                               service_principal_id,
                                                               id_=None,
                                                               deleted_date_time=None,
                                                               app_role_id=None,
                                                               created_date_time=None,
                                                               principal_display_name=None,
                                                               principal_id=None,
                                                               principal_type=None,
                                                               resource_display_name=None,
                                                               resource_id=None):
    return client.create_app_role_assigned_to(service_principal_id=service_principal_id,
                                              id=id_,
                                              deleted_date_time=deleted_date_time,
                                              app_role_id=app_role_id,
                                              created_date_time=created_date_time,
                                              principal_display_name=principal_display_name,
                                              principal_id=principal_id,
                                              principal_type=principal_type,
                                              resource_display_name=resource_display_name,
                                              resource_id=resource_id)


def applications_service_principal_create_app_role_assignment(client,
                                                              service_principal_id,
                                                              id_=None,
                                                              deleted_date_time=None,
                                                              app_role_id=None,
                                                              created_date_time=None,
                                                              principal_display_name=None,
                                                              principal_id=None,
                                                              principal_type=None,
                                                              resource_display_name=None,
                                                              resource_id=None):
    return client.create_app_role_assignment(service_principal_id=service_principal_id,
                                             id=id_,
                                             deleted_date_time=deleted_date_time,
                                             app_role_id=app_role_id,
                                             created_date_time=created_date_time,
                                             principal_display_name=principal_display_name,
                                             principal_id=principal_id,
                                             principal_type=principal_type,
                                             resource_display_name=resource_display_name,
                                             resource_id=resource_id)


def applications_service_principal_create_endpoint(client,
                                                   service_principal_id,
                                                   id_=None,
                                                   deleted_date_time=None,
                                                   capability=None,
                                                   provider_id=None,
                                                   provider_name=None,
                                                   provider_resource_id=None,
                                                   uri=None):
    return client.create_endpoint(service_principal_id=service_principal_id,
                                  id=id_,
                                  deleted_date_time=deleted_date_time,
                                  capability=capability,
                                  provider_id=provider_id,
                                  provider_name=provider_name,
                                  provider_resource_id=provider_resource_id,
                                  uri=uri)


def applications_service_principal_create_ref_claim_mapping_policy(client,
                                                                   service_principal_id,
                                                                   body):
    return client.create_ref_claim_mapping_policy(service_principal_id=service_principal_id,
                                                  body=body)


def applications_service_principal_create_ref_created_object(client,
                                                             service_principal_id,
                                                             body):
    return client.create_ref_created_object(service_principal_id=service_principal_id,
                                            body=body)


def applications_service_principal_create_ref_home_realm_discovery_policy(client,
                                                                          service_principal_id,
                                                                          body):
    return client.create_ref_home_realm_discovery_policy(service_principal_id=service_principal_id,
                                                         body=body)


def applications_service_principal_create_ref_member_of(client,
                                                        service_principal_id,
                                                        body):
    return client.create_ref_member_of(service_principal_id=service_principal_id,
                                       body=body)


def applications_service_principal_create_ref_oauth2_permission_grant(client,
                                                                      service_principal_id,
                                                                      body):
    return client.create_ref_oauth2_permission_grant(service_principal_id=service_principal_id,
                                                     body=body)


def applications_service_principal_create_ref_owned_object(client,
                                                           service_principal_id,
                                                           body):
    return client.create_ref_owned_object(service_principal_id=service_principal_id,
                                          body=body)


def applications_service_principal_create_ref_owner(client,
                                                    service_principal_id,
                                                    body):
    return client.create_ref_owner(service_principal_id=service_principal_id,
                                   body=body)


def applications_service_principal_create_ref_token_issuance_policy(client,
                                                                    service_principal_id,
                                                                    body):
    return client.create_ref_token_issuance_policy(service_principal_id=service_principal_id,
                                                   body=body)


def applications_service_principal_create_ref_token_lifetime_policy(client,
                                                                    service_principal_id,
                                                                    body):
    return client.create_ref_token_lifetime_policy(service_principal_id=service_principal_id,
                                                   body=body)


def applications_service_principal_create_ref_transitive_member_of(client,
                                                                   service_principal_id,
                                                                   body):
    return client.create_ref_transitive_member_of(service_principal_id=service_principal_id,
                                                  body=body)


def applications_service_principal_delta(client):
    return client.delta()


def applications_service_principal_get_app_role_assigned_to(client,
                                                            service_principal_id,
                                                            app_role_assignment_id,
                                                            select=None,
                                                            expand=None):
    return client.get_app_role_assigned_to(service_principal_id=service_principal_id,
                                           app_role_assignment_id=app_role_assignment_id,
                                           select=select,
                                           expand=expand)


def applications_service_principal_get_app_role_assignment(client,
                                                           service_principal_id,
                                                           app_role_assignment_id,
                                                           select=None,
                                                           expand=None):
    return client.get_app_role_assignment(service_principal_id=service_principal_id,
                                          app_role_assignment_id=app_role_assignment_id,
                                          select=select,
                                          expand=expand)


def applications_service_principal_get_available_extension_property(client,
                                                                    is_synced_from_on_premises=None):
    if is_synced_from_on_premises is None:
        is_synced_from_on_premises = False
    return client.get_available_extension_property(is_synced_from_on_premises=is_synced_from_on_premises)


def applications_service_principal_get_by_id(client,
                                             ids=None,
                                             types=None):
    return client.get_by_id(ids=ids,
                            types=types)


def applications_service_principal_get_endpoint(client,
                                                service_principal_id,
                                                endpoint_id,
                                                select=None,
                                                expand=None):
    return client.get_endpoint(service_principal_id=service_principal_id,
                               endpoint_id=endpoint_id,
                               select=select,
                               expand=expand)


def applications_service_principal_get_member_group(client,
                                                    service_principal_id,
                                                    security_enabled_only=None):
    if security_enabled_only is None:
        security_enabled_only = False
    return client.get_member_group(service_principal_id=service_principal_id,
                                   security_enabled_only=security_enabled_only)


def applications_service_principal_get_member_object(client,
                                                     service_principal_id,
                                                     security_enabled_only=None):
    if security_enabled_only is None:
        security_enabled_only = False
    return client.get_member_object(service_principal_id=service_principal_id,
                                    security_enabled_only=security_enabled_only)


def applications_service_principal_list_app_role_assigned_to(client,
                                                             service_principal_id,
                                                             orderby=None,
                                                             select=None,
                                                             expand=None):
    return client.list_app_role_assigned_to(service_principal_id=service_principal_id,
                                            orderby=orderby,
                                            select=select,
                                            expand=expand)


def applications_service_principal_list_app_role_assignment(client,
                                                            service_principal_id,
                                                            orderby=None,
                                                            select=None,
                                                            expand=None):
    return client.list_app_role_assignment(service_principal_id=service_principal_id,
                                           orderby=orderby,
                                           select=select,
                                           expand=expand)


def applications_service_principal_list_claim_mapping_policy(client,
                                                             service_principal_id,
                                                             orderby=None,
                                                             select=None,
                                                             expand=None):
    return client.list_claim_mapping_policy(service_principal_id=service_principal_id,
                                            orderby=orderby,
                                            select=select,
                                            expand=expand)


def applications_service_principal_list_created_object(client,
                                                       service_principal_id,
                                                       orderby=None,
                                                       select=None,
                                                       expand=None):
    return client.list_created_object(service_principal_id=service_principal_id,
                                      orderby=orderby,
                                      select=select,
                                      expand=expand)


def applications_service_principal_list_endpoint(client,
                                                 service_principal_id,
                                                 orderby=None,
                                                 select=None,
                                                 expand=None):
    return client.list_endpoint(service_principal_id=service_principal_id,
                                orderby=orderby,
                                select=select,
                                expand=expand)


def applications_service_principal_list_home_realm_discovery_policy(client,
                                                                    service_principal_id,
                                                                    orderby=None,
                                                                    select=None,
                                                                    expand=None):
    return client.list_home_realm_discovery_policy(service_principal_id=service_principal_id,
                                                   orderby=orderby,
                                                   select=select,
                                                   expand=expand)


def applications_service_principal_list_member_of(client,
                                                  service_principal_id,
                                                  orderby=None,
                                                  select=None,
                                                  expand=None):
    return client.list_member_of(service_principal_id=service_principal_id,
                                 orderby=orderby,
                                 select=select,
                                 expand=expand)


def applications_service_principal_list_oauth2_permission_grant(client,
                                                                service_principal_id,
                                                                orderby=None,
                                                                select=None,
                                                                expand=None):
    return client.list_oauth2_permission_grant(service_principal_id=service_principal_id,
                                               orderby=orderby,
                                               select=select,
                                               expand=expand)


def applications_service_principal_list_owned_object(client,
                                                     service_principal_id,
                                                     orderby=None,
                                                     select=None,
                                                     expand=None):
    return client.list_owned_object(service_principal_id=service_principal_id,
                                    orderby=orderby,
                                    select=select,
                                    expand=expand)


def applications_service_principal_list_owner(client,
                                              service_principal_id,
                                              orderby=None,
                                              select=None,
                                              expand=None):
    return client.list_owner(service_principal_id=service_principal_id,
                             orderby=orderby,
                             select=select,
                             expand=expand)


def applications_service_principal_list_ref_claim_mapping_policy(client,
                                                                 service_principal_id,
                                                                 orderby=None):
    return client.list_ref_claim_mapping_policy(service_principal_id=service_principal_id,
                                                orderby=orderby)


def applications_service_principal_list_ref_created_object(client,
                                                           service_principal_id,
                                                           orderby=None):
    return client.list_ref_created_object(service_principal_id=service_principal_id,
                                          orderby=orderby)


def applications_service_principal_list_ref_home_realm_discovery_policy(client,
                                                                        service_principal_id,
                                                                        orderby=None):
    return client.list_ref_home_realm_discovery_policy(service_principal_id=service_principal_id,
                                                       orderby=orderby)


def applications_service_principal_list_ref_member_of(client,
                                                      service_principal_id,
                                                      orderby=None):
    return client.list_ref_member_of(service_principal_id=service_principal_id,
                                     orderby=orderby)


def applications_service_principal_list_ref_oauth2_permission_grant(client,
                                                                    service_principal_id,
                                                                    orderby=None):
    return client.list_ref_oauth2_permission_grant(service_principal_id=service_principal_id,
                                                   orderby=orderby)


def applications_service_principal_list_ref_owned_object(client,
                                                         service_principal_id,
                                                         orderby=None):
    return client.list_ref_owned_object(service_principal_id=service_principal_id,
                                        orderby=orderby)


def applications_service_principal_list_ref_owner(client,
                                                  service_principal_id,
                                                  orderby=None):
    return client.list_ref_owner(service_principal_id=service_principal_id,
                                 orderby=orderby)


def applications_service_principal_list_ref_token_issuance_policy(client,
                                                                  service_principal_id,
                                                                  orderby=None):
    return client.list_ref_token_issuance_policy(service_principal_id=service_principal_id,
                                                 orderby=orderby)


def applications_service_principal_list_ref_token_lifetime_policy(client,
                                                                  service_principal_id,
                                                                  orderby=None):
    return client.list_ref_token_lifetime_policy(service_principal_id=service_principal_id,
                                                 orderby=orderby)


def applications_service_principal_list_ref_transitive_member_of(client,
                                                                 service_principal_id,
                                                                 orderby=None):
    return client.list_ref_transitive_member_of(service_principal_id=service_principal_id,
                                                orderby=orderby)


def applications_service_principal_list_token_issuance_policy(client,
                                                              service_principal_id,
                                                              orderby=None,
                                                              select=None,
                                                              expand=None):
    return client.list_token_issuance_policy(service_principal_id=service_principal_id,
                                             orderby=orderby,
                                             select=select,
                                             expand=expand)


def applications_service_principal_list_token_lifetime_policy(client,
                                                              service_principal_id,
                                                              orderby=None,
                                                              select=None,
                                                              expand=None):
    return client.list_token_lifetime_policy(service_principal_id=service_principal_id,
                                             orderby=orderby,
                                             select=select,
                                             expand=expand)


def applications_service_principal_list_transitive_member_of(client,
                                                             service_principal_id,
                                                             orderby=None,
                                                             select=None,
                                                             expand=None):
    return client.list_transitive_member_of(service_principal_id=service_principal_id,
                                            orderby=orderby,
                                            select=select,
                                            expand=expand)


def applications_service_principal_remove_key(client,
                                              service_principal_id,
                                              key_id=None,
                                              proof=None):
    return client.remove_key(service_principal_id=service_principal_id,
                             key_id=key_id,
                             proof=proof)


def applications_service_principal_remove_password(client,
                                                   service_principal_id,
                                                   key_id=None):
    return client.remove_password(service_principal_id=service_principal_id,
                                  key_id=key_id)


def applications_service_principal_restore(client,
                                           service_principal_id):
    return client.restore(service_principal_id=service_principal_id)


def applications_service_principal_update_app_role_assigned_to(client,
                                                               service_principal_id,
                                                               app_role_assignment_id,
                                                               id_=None,
                                                               deleted_date_time=None,
                                                               app_role_id=None,
                                                               created_date_time=None,
                                                               principal_display_name=None,
                                                               principal_id=None,
                                                               principal_type=None,
                                                               resource_display_name=None,
                                                               resource_id=None):
    return client.update_app_role_assigned_to(service_principal_id=service_principal_id,
                                              app_role_assignment_id=app_role_assignment_id,
                                              id=id_,
                                              deleted_date_time=deleted_date_time,
                                              app_role_id=app_role_id,
                                              created_date_time=created_date_time,
                                              principal_display_name=principal_display_name,
                                              principal_id=principal_id,
                                              principal_type=principal_type,
                                              resource_display_name=resource_display_name,
                                              resource_id=resource_id)


def applications_service_principal_update_app_role_assignment(client,
                                                              service_principal_id,
                                                              app_role_assignment_id,
                                                              id_=None,
                                                              deleted_date_time=None,
                                                              app_role_id=None,
                                                              created_date_time=None,
                                                              principal_display_name=None,
                                                              principal_id=None,
                                                              principal_type=None,
                                                              resource_display_name=None,
                                                              resource_id=None):
    return client.update_app_role_assignment(service_principal_id=service_principal_id,
                                             app_role_assignment_id=app_role_assignment_id,
                                             id=id_,
                                             deleted_date_time=deleted_date_time,
                                             app_role_id=app_role_id,
                                             created_date_time=created_date_time,
                                             principal_display_name=principal_display_name,
                                             principal_id=principal_id,
                                             principal_type=principal_type,
                                             resource_display_name=resource_display_name,
                                             resource_id=resource_id)


def applications_service_principal_update_endpoint(client,
                                                   service_principal_id,
                                                   endpoint_id,
                                                   id_=None,
                                                   deleted_date_time=None,
                                                   capability=None,
                                                   provider_id=None,
                                                   provider_name=None,
                                                   provider_resource_id=None,
                                                   uri=None):
    return client.update_endpoint(service_principal_id=service_principal_id,
                                  endpoint_id=endpoint_id,
                                  id=id_,
                                  deleted_date_time=deleted_date_time,
                                  capability=capability,
                                  provider_id=provider_id,
                                  provider_name=provider_name,
                                  provider_resource_id=provider_resource_id,
                                  uri=uri)


def applications_service_principal_validate_property(client,
                                                     entity_type=None,
                                                     display_name=None,
                                                     mail_nickname=None,
                                                     on_behalf_of_user_id=None):
    return client.validate_property(entity_type=entity_type,
                                    display_name=display_name,
                                    mail_nickname=mail_nickname,
                                    on_behalf_of_user_id=on_behalf_of_user_id)


def applications_user_delete(client,
                             user_id,
                             app_role_assignment_id,
                             if_match=None):
    return client.delete_app_role_assignment(user_id=user_id,
                                             app_role_assignment_id=app_role_assignment_id,
                                             if_match=if_match)


def applications_user_create_app_role_assignment(client,
                                                 user_id,
                                                 id_=None,
                                                 deleted_date_time=None,
                                                 app_role_id=None,
                                                 created_date_time=None,
                                                 principal_display_name=None,
                                                 principal_id=None,
                                                 principal_type=None,
                                                 resource_display_name=None,
                                                 resource_id=None):
    return client.create_app_role_assignment(user_id=user_id,
                                             id=id_,
                                             deleted_date_time=deleted_date_time,
                                             app_role_id=app_role_id,
                                             created_date_time=created_date_time,
                                             principal_display_name=principal_display_name,
                                             principal_id=principal_id,
                                             principal_type=principal_type,
                                             resource_display_name=resource_display_name,
                                             resource_id=resource_id)


def applications_user_get_app_role_assignment(client,
                                              user_id,
                                              app_role_assignment_id,
                                              select=None,
                                              expand=None):
    return client.get_app_role_assignment(user_id=user_id,
                                          app_role_assignment_id=app_role_assignment_id,
                                          select=select,
                                          expand=expand)


def applications_user_list_app_role_assignment(client,
                                               user_id,
                                               orderby=None,
                                               select=None,
                                               expand=None):
    return client.list_app_role_assignment(user_id=user_id,
                                           orderby=orderby,
                                           select=select,
                                           expand=expand)


def applications_user_update_app_role_assignment(client,
                                                 user_id,
                                                 app_role_assignment_id,
                                                 id_=None,
                                                 deleted_date_time=None,
                                                 app_role_id=None,
                                                 created_date_time=None,
                                                 principal_display_name=None,
                                                 principal_id=None,
                                                 principal_type=None,
                                                 resource_display_name=None,
                                                 resource_id=None):
    return client.update_app_role_assignment(user_id=user_id,
                                             app_role_assignment_id=app_role_assignment_id,
                                             id=id_,
                                             deleted_date_time=deleted_date_time,
                                             app_role_id=app_role_id,
                                             created_date_time=created_date_time,
                                             principal_display_name=principal_display_name,
                                             principal_id=principal_id,
                                             principal_type=principal_type,
                                             resource_display_name=resource_display_name,
                                             resource_id=resource_id)
