# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=too-many-lines

from knack.help_files import helps


helps['applications_v1_0'] = '''
    type: group
    short-summary: Manage Applications
'''

helps['applications applicationsapplication'] = """
    type: group
    short-summary: Manage applicationsapplication with applications_v1_0
"""

helps['applications applicationsapplication create-application'] = """
    type: command
    short-summary: "Add new entity to applications."
"""

helps['applications applicationsapplication delete-application'] = """
    type: command
    short-summary: "Delete entity from applications."
"""

helps['applications applicationsapplication list-application'] = """
    type: command
    short-summary: "Get entities from applications."
"""

helps['applications applicationsapplication set-logo'] = """
    type: command
    short-summary: "Update media content for application in applications."
"""

helps['applications applicationsapplication show-application'] = """
    type: command
    short-summary: "Get entity from applications by key."
"""

helps['applications applicationsapplication show-logo'] = """
    type: command
    short-summary: "Get media content for application from applications."
"""

helps['applications applicationsapplication update-application'] = """
    type: command
    short-summary: "Update entity in applications."
"""

helps['applications application'] = """
    type: group
    short-summary: Manage application with applications_v1_0
"""

helps['applications application add-key'] = """
    type: command
    short-summary: "Invoke action addKey."
    parameters:
      - name: --key-credential
        short-summary: "keyCredential"
        long-summary: |
            Usage: --key-credential custom-key-identifier=XX display-name=XX end-date-time=XX key=XX key-id=XX \
start-date-time=XX type=XX usage=XX

            custom-key-identifier: Custom key identifier
            display-name: Friendly name for the key. Optional.
            end-date-time: The date and time at which the credential expires.The Timestamp type represents date and \
time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look \
like this: '2014-01-01T00:00:00Z'
            key: Value for the key credential. Should be a base 64 encoded value.
            key-id: The unique identifier (GUID) for the key.
            start-date-time: The date and time at which the credential becomes valid.The Timestamp type represents \
date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 \
would look like this: '2014-01-01T00:00:00Z'
            type: The type of key credential; for example, 'Symmetric'.
            usage: A string that describes the purpose for which the key can be used; for example, 'Verify'.
      - name: --password-credential
        short-summary: "passwordCredential"
        long-summary: |
            Usage: --password-credential custom-key-identifier=XX display-name=XX end-date-time=XX hint=XX key-id=XX \
secret-text=XX start-date-time=XX

            custom-key-identifier: Do not use.
            display-name: Friendly name for the password. Optional.
            end-date-time: The date and time at which the password expires represented using ISO 8601 format and is \
always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'. Optional.
            hint: Contains the first three characters of the password. Read-only.
            key-id: The unique identifier for the password.
            secret-text: Read-only; Contains the strong passwords generated by Azure AD that are 16-64 characters in \
length. The generated password value is only returned during the initial POST request to addPassword. There is no way \
to retrieve this password in the future.
            start-date-time: The date and time at which the password becomes valid. The Timestamp type represents date \
and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would \
look like this: '2014-01-01T00:00:00Z'. Optional.
"""

helps['applications application add-password'] = """
    type: command
    short-summary: "Invoke action addPassword."
    parameters:
      - name: --password-credential
        short-summary: "passwordCredential"
        long-summary: |
            Usage: --password-credential custom-key-identifier=XX display-name=XX end-date-time=XX hint=XX key-id=XX \
secret-text=XX start-date-time=XX

            custom-key-identifier: Do not use.
            display-name: Friendly name for the password. Optional.
            end-date-time: The date and time at which the password expires represented using ISO 8601 format and is \
always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'. Optional.
            hint: Contains the first three characters of the password. Read-only.
            key-id: The unique identifier for the password.
            secret-text: Read-only; Contains the strong passwords generated by Azure AD that are 16-64 characters in \
length. The generated password value is only returned during the initial POST request to addPassword. There is no way \
to retrieve this password in the future.
            start-date-time: The date and time at which the password becomes valid. The Timestamp type represents date \
and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would \
look like this: '2014-01-01T00:00:00Z'. Optional.
"""

helps['applications application check-member-group'] = """
    type: command
    short-summary: "Invoke action checkMemberGroups."
"""

helps['applications application check-member-object'] = """
    type: command
    short-summary: "Invoke action checkMemberObjects."
"""

helps['applications application create-extension-property'] = """
    type: command
    short-summary: "Create new navigation property to extensionProperties for applications."
"""

helps['applications application create-ref-home-realm-discovery-policy'] = """
    type: command
    short-summary: "Create new navigation property ref to homeRealmDiscoveryPolicies for applications."
"""

helps['applications application create-ref-owner'] = """
    type: command
    short-summary: "Create new navigation property ref to owners for applications."
"""

helps['applications application create-ref-token-issuance-policy'] = """
    type: command
    short-summary: "Create new navigation property ref to tokenIssuancePolicies for applications."
"""

helps['applications application create-ref-token-lifetime-policy'] = """
    type: command
    short-summary: "Create new navigation property ref to tokenLifetimePolicies for applications."
"""

helps['applications application delete-extension-property'] = """
    type: command
    short-summary: "Delete navigation property extensionProperties for applications."
"""

helps['applications application delete-ref-created-on-behalf-of'] = """
    type: command
    short-summary: "Delete ref of navigation property createdOnBehalfOf for applications."
"""

helps['applications application delta'] = """
    type: command
    short-summary: "Invoke function delta."
"""

helps['applications application get-available-extension-property'] = """
    type: command
    short-summary: "Invoke action getAvailableExtensionProperties."
"""

helps['applications application get-by-id'] = """
    type: command
    short-summary: "Invoke action getByIds."
"""

helps['applications application get-member-group'] = """
    type: command
    short-summary: "Invoke action getMemberGroups."
"""

helps['applications application get-member-object'] = """
    type: command
    short-summary: "Invoke action getMemberObjects."
"""

helps['applications application list-extension-property'] = """
    type: command
    short-summary: "Get extensionProperties from applications."
"""

helps['applications application list-home-realm-discovery-policy'] = """
    type: command
    short-summary: "Get homeRealmDiscoveryPolicies from applications."
"""

helps['applications application list-owner'] = """
    type: command
    short-summary: "Get owners from applications."
"""

helps['applications application list-ref-home-realm-discovery-policy'] = """
    type: command
    short-summary: "Get ref of homeRealmDiscoveryPolicies from applications."
"""

helps['applications application list-ref-owner'] = """
    type: command
    short-summary: "Get ref of owners from applications."
"""

helps['applications application list-ref-token-issuance-policy'] = """
    type: command
    short-summary: "Get ref of tokenIssuancePolicies from applications."
"""

helps['applications application list-ref-token-lifetime-policy'] = """
    type: command
    short-summary: "Get ref of tokenLifetimePolicies from applications."
"""

helps['applications application list-token-issuance-policy'] = """
    type: command
    short-summary: "Get tokenIssuancePolicies from applications."
"""

helps['applications application list-token-lifetime-policy'] = """
    type: command
    short-summary: "Get tokenLifetimePolicies from applications."
"""

helps['applications application remove-key'] = """
    type: command
    short-summary: "Invoke action removeKey."
"""

helps['applications application remove-password'] = """
    type: command
    short-summary: "Invoke action removePassword."
"""

helps['applications application restore'] = """
    type: command
    short-summary: "Invoke action restore."
"""

helps['applications application set-ref-created-on-behalf-of'] = """
    type: command
    short-summary: "Update the ref of navigation property createdOnBehalfOf in applications."
"""

helps['applications application show-created-on-behalf-of'] = """
    type: command
    short-summary: "Get createdOnBehalfOf from applications."
"""

helps['applications application show-extension-property'] = """
    type: command
    short-summary: "Get extensionProperties from applications."
"""

helps['applications application show-ref-created-on-behalf-of'] = """
    type: command
    short-summary: "Get ref of createdOnBehalfOf from applications."
"""

helps['applications application update-extension-property'] = """
    type: command
    short-summary: "Update the navigation property extensionProperties in applications."
"""

helps['applications application validate-property'] = """
    type: command
    short-summary: "Invoke action validateProperties."
"""

helps['applications group'] = """
    type: group
    short-summary: Manage group with applications_v1_0
"""

helps['applications group create-app-role-assignment'] = """
    type: command
    short-summary: "Create new navigation property to appRoleAssignments for groups."
"""

helps['applications group delete-app-role-assignment'] = """
    type: command
    short-summary: "Delete navigation property appRoleAssignments for groups."
"""

helps['applications group list-app-role-assignment'] = """
    type: command
    short-summary: "Get appRoleAssignments from groups."
"""

helps['applications group show-app-role-assignment'] = """
    type: command
    short-summary: "Get appRoleAssignments from groups."
"""

helps['applications group update-app-role-assignment'] = """
    type: command
    short-summary: "Update the navigation property appRoleAssignments in groups."
"""

helps['applications serviceprincipalsserviceprincipal'] = """
    type: group
    short-summary: Manage serviceprincipalsserviceprincipal with applications_v1_0
"""

helps['applications serviceprincipalsserviceprincipal create-service-principal'] = """
    type: command
    short-summary: "Add new entity to servicePrincipals."
"""

helps['applications serviceprincipalsserviceprincipal delete-service-principal'] = """
    type: command
    short-summary: "Delete entity from servicePrincipals."
"""

helps['applications serviceprincipalsserviceprincipal list-service-principal'] = """
    type: command
    short-summary: "Get entities from servicePrincipals."
"""

helps['applications serviceprincipalsserviceprincipal show-service-principal'] = """
    type: command
    short-summary: "Get entity from servicePrincipals by key."
"""

helps['applications serviceprincipalsserviceprincipal update-service-principal'] = """
    type: command
    short-summary: "Update entity in servicePrincipals."
"""

helps['applications serviceprincipal'] = """
    type: group
    short-summary: Manage serviceprincipal with applications_v1_0
"""

helps['applications serviceprincipal add-key'] = """
    type: command
    short-summary: "Invoke action addKey."
    parameters:
      - name: --key-credential
        short-summary: "keyCredential"
        long-summary: |
            Usage: --key-credential custom-key-identifier=XX display-name=XX end-date-time=XX key=XX key-id=XX \
start-date-time=XX type=XX usage=XX

            custom-key-identifier: Custom key identifier
            display-name: Friendly name for the key. Optional.
            end-date-time: The date and time at which the credential expires.The Timestamp type represents date and \
time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look \
like this: '2014-01-01T00:00:00Z'
            key: Value for the key credential. Should be a base 64 encoded value.
            key-id: The unique identifier (GUID) for the key.
            start-date-time: The date and time at which the credential becomes valid.The Timestamp type represents \
date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 \
would look like this: '2014-01-01T00:00:00Z'
            type: The type of key credential; for example, 'Symmetric'.
            usage: A string that describes the purpose for which the key can be used; for example, 'Verify'.
      - name: --password-credential
        short-summary: "passwordCredential"
        long-summary: |
            Usage: --password-credential custom-key-identifier=XX display-name=XX end-date-time=XX hint=XX key-id=XX \
secret-text=XX start-date-time=XX

            custom-key-identifier: Do not use.
            display-name: Friendly name for the password. Optional.
            end-date-time: The date and time at which the password expires represented using ISO 8601 format and is \
always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'. Optional.
            hint: Contains the first three characters of the password. Read-only.
            key-id: The unique identifier for the password.
            secret-text: Read-only; Contains the strong passwords generated by Azure AD that are 16-64 characters in \
length. The generated password value is only returned during the initial POST request to addPassword. There is no way \
to retrieve this password in the future.
            start-date-time: The date and time at which the password becomes valid. The Timestamp type represents date \
and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would \
look like this: '2014-01-01T00:00:00Z'. Optional.
"""

helps['applications serviceprincipal add-password'] = """
    type: command
    short-summary: "Invoke action addPassword."
    parameters:
      - name: --password-credential
        short-summary: "passwordCredential"
        long-summary: |
            Usage: --password-credential custom-key-identifier=XX display-name=XX end-date-time=XX hint=XX key-id=XX \
secret-text=XX start-date-time=XX

            custom-key-identifier: Do not use.
            display-name: Friendly name for the password. Optional.
            end-date-time: The date and time at which the password expires represented using ISO 8601 format and is \
always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'. Optional.
            hint: Contains the first three characters of the password. Read-only.
            key-id: The unique identifier for the password.
            secret-text: Read-only; Contains the strong passwords generated by Azure AD that are 16-64 characters in \
length. The generated password value is only returned during the initial POST request to addPassword. There is no way \
to retrieve this password in the future.
            start-date-time: The date and time at which the password becomes valid. The Timestamp type represents date \
and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would \
look like this: '2014-01-01T00:00:00Z'. Optional.
"""

helps['applications serviceprincipal check-member-group'] = """
    type: command
    short-summary: "Invoke action checkMemberGroups."
"""

helps['applications serviceprincipal check-member-object'] = """
    type: command
    short-summary: "Invoke action checkMemberObjects."
"""

helps['applications serviceprincipal create-app-role-assigned-to'] = """
    type: command
    short-summary: "Create new navigation property to appRoleAssignedTo for servicePrincipals."
"""

helps['applications serviceprincipal create-app-role-assignment'] = """
    type: command
    short-summary: "Create new navigation property to appRoleAssignments for servicePrincipals."
"""

helps['applications serviceprincipal create-endpoint'] = """
    type: command
    short-summary: "Create new navigation property to endpoints for servicePrincipals."
"""

helps['applications serviceprincipal create-ref-claim-mapping-policy'] = """
    type: command
    short-summary: "Create new navigation property ref to claimsMappingPolicies for servicePrincipals."
"""

helps['applications serviceprincipal create-ref-created-object'] = """
    type: command
    short-summary: "Create new navigation property ref to createdObjects for servicePrincipals."
"""

helps['applications serviceprincipal create-ref-home-realm-discovery-policy'] = """
    type: command
    short-summary: "Create new navigation property ref to homeRealmDiscoveryPolicies for servicePrincipals."
"""

helps['applications serviceprincipal create-ref-member-of'] = """
    type: command
    short-summary: "Create new navigation property ref to memberOf for servicePrincipals."
"""

helps['applications serviceprincipal create-ref-oauth2-permission-grant'] = """
    type: command
    short-summary: "Create new navigation property ref to oauth2PermissionGrants for servicePrincipals."
"""

helps['applications serviceprincipal create-ref-owned-object'] = """
    type: command
    short-summary: "Create new navigation property ref to ownedObjects for servicePrincipals."
"""

helps['applications serviceprincipal create-ref-owner'] = """
    type: command
    short-summary: "Create new navigation property ref to owners for servicePrincipals."
"""

helps['applications serviceprincipal create-ref-token-issuance-policy'] = """
    type: command
    short-summary: "Create new navigation property ref to tokenIssuancePolicies for servicePrincipals."
"""

helps['applications serviceprincipal create-ref-token-lifetime-policy'] = """
    type: command
    short-summary: "Create new navigation property ref to tokenLifetimePolicies for servicePrincipals."
"""

helps['applications serviceprincipal create-ref-transitive-member-of'] = """
    type: command
    short-summary: "Create new navigation property ref to transitiveMemberOf for servicePrincipals."
"""

helps['applications serviceprincipal delete-app-role-assigned-to'] = """
    type: command
    short-summary: "Delete navigation property appRoleAssignedTo for servicePrincipals."
"""

helps['applications serviceprincipal delete-app-role-assignment'] = """
    type: command
    short-summary: "Delete navigation property appRoleAssignments for servicePrincipals."
"""

helps['applications serviceprincipal delete-endpoint'] = """
    type: command
    short-summary: "Delete navigation property endpoints for servicePrincipals."
"""

helps['applications serviceprincipal delta'] = """
    type: command
    short-summary: "Invoke function delta."
"""

helps['applications serviceprincipal get-available-extension-property'] = """
    type: command
    short-summary: "Invoke action getAvailableExtensionProperties."
"""

helps['applications serviceprincipal get-by-id'] = """
    type: command
    short-summary: "Invoke action getByIds."
"""

helps['applications serviceprincipal get-member-group'] = """
    type: command
    short-summary: "Invoke action getMemberGroups."
"""

helps['applications serviceprincipal get-member-object'] = """
    type: command
    short-summary: "Invoke action getMemberObjects."
"""

helps['applications serviceprincipal list-app-role-assigned-to'] = """
    type: command
    short-summary: "Get appRoleAssignedTo from servicePrincipals."
"""

helps['applications serviceprincipal list-app-role-assignment'] = """
    type: command
    short-summary: "Get appRoleAssignments from servicePrincipals."
"""

helps['applications serviceprincipal list-claim-mapping-policy'] = """
    type: command
    short-summary: "Get claimsMappingPolicies from servicePrincipals."
"""

helps['applications serviceprincipal list-created-object'] = """
    type: command
    short-summary: "Get createdObjects from servicePrincipals."
"""

helps['applications serviceprincipal list-endpoint'] = """
    type: command
    short-summary: "Get endpoints from servicePrincipals."
"""

helps['applications serviceprincipal list-home-realm-discovery-policy'] = """
    type: command
    short-summary: "Get homeRealmDiscoveryPolicies from servicePrincipals."
"""

helps['applications serviceprincipal list-member-of'] = """
    type: command
    short-summary: "Get memberOf from servicePrincipals."
"""

helps['applications serviceprincipal list-oauth2-permission-grant'] = """
    type: command
    short-summary: "Get oauth2PermissionGrants from servicePrincipals."
"""

helps['applications serviceprincipal list-owned-object'] = """
    type: command
    short-summary: "Get ownedObjects from servicePrincipals."
"""

helps['applications serviceprincipal list-owner'] = """
    type: command
    short-summary: "Get owners from servicePrincipals."
"""

helps['applications serviceprincipal list-ref-claim-mapping-policy'] = """
    type: command
    short-summary: "Get ref of claimsMappingPolicies from servicePrincipals."
"""

helps['applications serviceprincipal list-ref-created-object'] = """
    type: command
    short-summary: "Get ref of createdObjects from servicePrincipals."
"""

helps['applications serviceprincipal list-ref-home-realm-discovery-policy'] = """
    type: command
    short-summary: "Get ref of homeRealmDiscoveryPolicies from servicePrincipals."
"""

helps['applications serviceprincipal list-ref-member-of'] = """
    type: command
    short-summary: "Get ref of memberOf from servicePrincipals."
"""

helps['applications serviceprincipal list-ref-oauth2-permission-grant'] = """
    type: command
    short-summary: "Get ref of oauth2PermissionGrants from servicePrincipals."
"""

helps['applications serviceprincipal list-ref-owned-object'] = """
    type: command
    short-summary: "Get ref of ownedObjects from servicePrincipals."
"""

helps['applications serviceprincipal list-ref-owner'] = """
    type: command
    short-summary: "Get ref of owners from servicePrincipals."
"""

helps['applications serviceprincipal list-ref-token-issuance-policy'] = """
    type: command
    short-summary: "Get ref of tokenIssuancePolicies from servicePrincipals."
"""

helps['applications serviceprincipal list-ref-token-lifetime-policy'] = """
    type: command
    short-summary: "Get ref of tokenLifetimePolicies from servicePrincipals."
"""

helps['applications serviceprincipal list-ref-transitive-member-of'] = """
    type: command
    short-summary: "Get ref of transitiveMemberOf from servicePrincipals."
"""

helps['applications serviceprincipal list-token-issuance-policy'] = """
    type: command
    short-summary: "Get tokenIssuancePolicies from servicePrincipals."
"""

helps['applications serviceprincipal list-token-lifetime-policy'] = """
    type: command
    short-summary: "Get tokenLifetimePolicies from servicePrincipals."
"""

helps['applications serviceprincipal list-transitive-member-of'] = """
    type: command
    short-summary: "Get transitiveMemberOf from servicePrincipals."
"""

helps['applications serviceprincipal remove-key'] = """
    type: command
    short-summary: "Invoke action removeKey."
"""

helps['applications serviceprincipal remove-password'] = """
    type: command
    short-summary: "Invoke action removePassword."
"""

helps['applications serviceprincipal restore'] = """
    type: command
    short-summary: "Invoke action restore."
"""

helps['applications serviceprincipal show-app-role-assigned-to'] = """
    type: command
    short-summary: "Get appRoleAssignedTo from servicePrincipals."
"""

helps['applications serviceprincipal show-app-role-assignment'] = """
    type: command
    short-summary: "Get appRoleAssignments from servicePrincipals."
"""

helps['applications serviceprincipal show-endpoint'] = """
    type: command
    short-summary: "Get endpoints from servicePrincipals."
"""

helps['applications serviceprincipal update-app-role-assigned-to'] = """
    type: command
    short-summary: "Update the navigation property appRoleAssignedTo in servicePrincipals."
"""

helps['applications serviceprincipal update-app-role-assignment'] = """
    type: command
    short-summary: "Update the navigation property appRoleAssignments in servicePrincipals."
"""

helps['applications serviceprincipal update-endpoint'] = """
    type: command
    short-summary: "Update the navigation property endpoints in servicePrincipals."
"""

helps['applications serviceprincipal validate-property'] = """
    type: command
    short-summary: "Invoke action validateProperties."
"""

helps['applications user'] = """
    type: group
    short-summary: Manage user with applications_v1_0
"""

helps['applications user create-app-role-assignment'] = """
    type: command
    short-summary: "Create new navigation property to appRoleAssignments for users."
"""

helps['applications user delete-app-role-assignment'] = """
    type: command
    short-summary: "Delete navigation property appRoleAssignments for users."
"""

helps['applications user list-app-role-assignment'] = """
    type: command
    short-summary: "Get appRoleAssignments from users."
"""

helps['applications user show-app-role-assignment'] = """
    type: command
    short-summary: "Get appRoleAssignments from users."
"""

helps['applications user update-app-role-assignment'] = """
    type: command
    short-summary: "Update the navigation property appRoleAssignments in users."
"""
