# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=too-many-lines

from knack.help_files import helps


helps['applications'] = """
    type: group
    short-summary: applications
"""

helps['applications delete'] = """
    type: command
    short-summary: "Delete entity from applications"
"""

helps['applications create-application'] = """
    type: command
    short-summary: "Add new entity to applications"
"""

helps['applications get-application'] = """
    type: command
    short-summary: "Get entity from applications by key"
"""

helps['applications get-logo'] = """
    type: command
    short-summary: "Get media content for application from applications"
"""

helps['applications list-application'] = """
    type: command
    short-summary: "Get entities from applications"
"""

helps['applications set-logo'] = """
    type: command
    short-summary: "Update media content for application in applications"
"""

helps['applications update-application'] = """
    type: command
    short-summary: "Update entity in applications"
"""

helps['applications'] = """
    type: group
    short-summary: applications
"""

helps['applications delete'] = """
    type: command
    short-summary: "Delete ref of navigation property createdOnBehalfOf for applications"
"""

helps['applications add-key'] = """
    type: command
    short-summary: "Invoke action addKey"
    parameters:
      - name: --key-credential
        short-summary: "keyCredential"
        long-summary: |
            Usage: --key-credential custom-key-identifier=XX display-name=XX end-date-time=XX key=XX key-id=XX \
start-date-time=XX type=XX usage=XX

            custom-key-identifier: Custom key identifier
            display-name: Friendly name for the key. Optional.
            end-date-time: The date and time at which the credential expires.The Timestamp type represents date and \
time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look \
like this: '2014-01-01T00:00:00Z'
            key: Value for the key credential. Should be a base 64 encoded value.
            key-id: The unique identifier (GUID) for the key.
            start-date-time: The date and time at which the credential becomes valid.The Timestamp type represents \
date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 \
would look like this: '2014-01-01T00:00:00Z'
            type: The type of key credential; for example, 'Symmetric'.
            usage: A string that describes the purpose for which the key can be used; for example, 'Verify'.
      - name: --password-credential
        short-summary: "passwordCredential"
        long-summary: |
            Usage: --password-credential custom-key-identifier=XX display-name=XX end-date-time=XX hint=XX key-id=XX \
secret-text=XX start-date-time=XX

            custom-key-identifier: Do not use.
            display-name: Friendly name for the password. Optional.
            end-date-time: The date and time at which the password expires represented using ISO 8601 format and is \
always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'. Optional.
            hint: Contains the first three characters of the password. Read-only.
            key-id: The unique identifier for the password.
            secret-text: Read-only; Contains the strong passwords generated by Azure AD that are 16-64 characters in \
length. The generated password value is only returned during the initial POST request to addPassword. There is no way \
to retrieve this password in the future.
            start-date-time: The date and time at which the password becomes valid. The Timestamp type represents date \
and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would \
look like this: '2014-01-01T00:00:00Z'. Optional.
"""

helps['applications add-password'] = """
    type: command
    short-summary: "Invoke action addPassword"
    parameters:
      - name: --password-credential
        short-summary: "passwordCredential"
        long-summary: |
            Usage: --password-credential custom-key-identifier=XX display-name=XX end-date-time=XX hint=XX key-id=XX \
secret-text=XX start-date-time=XX

            custom-key-identifier: Do not use.
            display-name: Friendly name for the password. Optional.
            end-date-time: The date and time at which the password expires represented using ISO 8601 format and is \
always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'. Optional.
            hint: Contains the first three characters of the password. Read-only.
            key-id: The unique identifier for the password.
            secret-text: Read-only; Contains the strong passwords generated by Azure AD that are 16-64 characters in \
length. The generated password value is only returned during the initial POST request to addPassword. There is no way \
to retrieve this password in the future.
            start-date-time: The date and time at which the password becomes valid. The Timestamp type represents date \
and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would \
look like this: '2014-01-01T00:00:00Z'. Optional.
"""

helps['applications check-member-group'] = """
    type: command
    short-summary: "Invoke action checkMemberGroups"
"""

helps['applications check-member-object'] = """
    type: command
    short-summary: "Invoke action checkMemberObjects"
"""

helps['applications create-extension-property'] = """
    type: command
    short-summary: "Create new navigation property to extensionProperties for applications"
"""

helps['applications create-ref-home-realm-discovery-policy'] = """
    type: command
    short-summary: "Create new navigation property ref to homeRealmDiscoveryPolicies for applications"
"""

helps['applications create-ref-owner'] = """
    type: command
    short-summary: "Create new navigation property ref to owners for applications"
"""

helps['applications create-ref-token-issuance-policy'] = """
    type: command
    short-summary: "Create new navigation property ref to tokenIssuancePolicies for applications"
"""

helps['applications create-ref-token-lifetime-policy'] = """
    type: command
    short-summary: "Create new navigation property ref to tokenLifetimePolicies for applications"
"""

helps['applications delta'] = """
    type: command
    short-summary: "Invoke function delta"
"""

helps['applications get-available-extension-property'] = """
    type: command
    short-summary: "Invoke action getAvailableExtensionProperties"
"""

helps['applications get-by-id'] = """
    type: command
    short-summary: "Invoke action getByIds"
"""

helps['applications get-created-on-behalf-of'] = """
    type: command
    short-summary: "Get createdOnBehalfOf from applications"
"""

helps['applications get-extension-property'] = """
    type: command
    short-summary: "Get extensionProperties from applications"
"""

helps['applications get-member-group'] = """
    type: command
    short-summary: "Invoke action getMemberGroups"
"""

helps['applications get-member-object'] = """
    type: command
    short-summary: "Invoke action getMemberObjects"
"""

helps['applications get-ref-created-on-behalf-of'] = """
    type: command
    short-summary: "Get ref of createdOnBehalfOf from applications"
"""

helps['applications list-extension-property'] = """
    type: command
    short-summary: "Get extensionProperties from applications"
"""

helps['applications list-home-realm-discovery-policy'] = """
    type: command
    short-summary: "Get homeRealmDiscoveryPolicies from applications"
"""

helps['applications list-owner'] = """
    type: command
    short-summary: "Get owners from applications"
"""

helps['applications list-ref-home-realm-discovery-policy'] = """
    type: command
    short-summary: "Get ref of homeRealmDiscoveryPolicies from applications"
"""

helps['applications list-ref-owner'] = """
    type: command
    short-summary: "Get ref of owners from applications"
"""

helps['applications list-ref-token-issuance-policy'] = """
    type: command
    short-summary: "Get ref of tokenIssuancePolicies from applications"
"""

helps['applications list-ref-token-lifetime-policy'] = """
    type: command
    short-summary: "Get ref of tokenLifetimePolicies from applications"
"""

helps['applications list-token-issuance-policy'] = """
    type: command
    short-summary: "Get tokenIssuancePolicies from applications"
"""

helps['applications list-token-lifetime-policy'] = """
    type: command
    short-summary: "Get tokenLifetimePolicies from applications"
"""

helps['applications remove-key'] = """
    type: command
    short-summary: "Invoke action removeKey"
"""

helps['applications remove-password'] = """
    type: command
    short-summary: "Invoke action removePassword"
"""

helps['applications restore'] = """
    type: command
    short-summary: "Invoke action restore"
"""

helps['applications set-ref-created-on-behalf-of'] = """
    type: command
    short-summary: "Update the ref of navigation property createdOnBehalfOf in applications"
"""

helps['applications update-extension-property'] = """
    type: command
    short-summary: "Update the navigation property extensionProperties in applications"
"""

helps['applications validate-property'] = """
    type: command
    short-summary: "Invoke action validateProperties"
"""

helps['applications'] = """
    type: group
    short-summary: applications
"""

helps['applications delete'] = """
    type: command
    short-summary: "Delete navigation property appRoleAssignments for groups"
"""

helps['applications create-app-role-assignment'] = """
    type: command
    short-summary: "Create new navigation property to appRoleAssignments for groups"
"""

helps['applications get-app-role-assignment'] = """
    type: command
    short-summary: "Get appRoleAssignments from groups"
"""

helps['applications list-app-role-assignment'] = """
    type: command
    short-summary: "Get appRoleAssignments from groups"
"""

helps['applications update-app-role-assignment'] = """
    type: command
    short-summary: "Update the navigation property appRoleAssignments in groups"
"""

helps['applications'] = """
    type: group
    short-summary: applications
"""

helps['applications delete'] = """
    type: command
    short-summary: "Delete entity from servicePrincipals"
"""

helps['applications create-service-principal'] = """
    type: command
    short-summary: "Add new entity to servicePrincipals"
"""

helps['applications get-service-principal'] = """
    type: command
    short-summary: "Get entity from servicePrincipals by key"
"""

helps['applications list-service-principal'] = """
    type: command
    short-summary: "Get entities from servicePrincipals"
"""

helps['applications update-service-principal'] = """
    type: command
    short-summary: "Update entity in servicePrincipals"
"""

helps['applications'] = """
    type: group
    short-summary: applications
"""

helps['applications delete'] = """
    type: command
    short-summary: "Delete navigation property endpoints for servicePrincipals"
"""

helps['applications add-key'] = """
    type: command
    short-summary: "Invoke action addKey"
    parameters:
      - name: --key-credential
        short-summary: "keyCredential"
        long-summary: |
            Usage: --key-credential custom-key-identifier=XX display-name=XX end-date-time=XX key=XX key-id=XX \
start-date-time=XX type=XX usage=XX

            custom-key-identifier: Custom key identifier
            display-name: Friendly name for the key. Optional.
            end-date-time: The date and time at which the credential expires.The Timestamp type represents date and \
time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look \
like this: '2014-01-01T00:00:00Z'
            key: Value for the key credential. Should be a base 64 encoded value.
            key-id: The unique identifier (GUID) for the key.
            start-date-time: The date and time at which the credential becomes valid.The Timestamp type represents \
date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 \
would look like this: '2014-01-01T00:00:00Z'
            type: The type of key credential; for example, 'Symmetric'.
            usage: A string that describes the purpose for which the key can be used; for example, 'Verify'.
      - name: --password-credential
        short-summary: "passwordCredential"
        long-summary: |
            Usage: --password-credential custom-key-identifier=XX display-name=XX end-date-time=XX hint=XX key-id=XX \
secret-text=XX start-date-time=XX

            custom-key-identifier: Do not use.
            display-name: Friendly name for the password. Optional.
            end-date-time: The date and time at which the password expires represented using ISO 8601 format and is \
always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'. Optional.
            hint: Contains the first three characters of the password. Read-only.
            key-id: The unique identifier for the password.
            secret-text: Read-only; Contains the strong passwords generated by Azure AD that are 16-64 characters in \
length. The generated password value is only returned during the initial POST request to addPassword. There is no way \
to retrieve this password in the future.
            start-date-time: The date and time at which the password becomes valid. The Timestamp type represents date \
and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would \
look like this: '2014-01-01T00:00:00Z'. Optional.
"""

helps['applications add-password'] = """
    type: command
    short-summary: "Invoke action addPassword"
    parameters:
      - name: --password-credential
        short-summary: "passwordCredential"
        long-summary: |
            Usage: --password-credential custom-key-identifier=XX display-name=XX end-date-time=XX hint=XX key-id=XX \
secret-text=XX start-date-time=XX

            custom-key-identifier: Do not use.
            display-name: Friendly name for the password. Optional.
            end-date-time: The date and time at which the password expires represented using ISO 8601 format and is \
always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'. Optional.
            hint: Contains the first three characters of the password. Read-only.
            key-id: The unique identifier for the password.
            secret-text: Read-only; Contains the strong passwords generated by Azure AD that are 16-64 characters in \
length. The generated password value is only returned during the initial POST request to addPassword. There is no way \
to retrieve this password in the future.
            start-date-time: The date and time at which the password becomes valid. The Timestamp type represents date \
and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would \
look like this: '2014-01-01T00:00:00Z'. Optional.
"""

helps['applications check-member-group'] = """
    type: command
    short-summary: "Invoke action checkMemberGroups"
"""

helps['applications check-member-object'] = """
    type: command
    short-summary: "Invoke action checkMemberObjects"
"""

helps['applications create-app-role-assigned-to'] = """
    type: command
    short-summary: "Create new navigation property to appRoleAssignedTo for servicePrincipals"
"""

helps['applications create-app-role-assignment'] = """
    type: command
    short-summary: "Create new navigation property to appRoleAssignments for servicePrincipals"
"""

helps['applications create-endpoint'] = """
    type: command
    short-summary: "Create new navigation property to endpoints for servicePrincipals"
"""

helps['applications create-ref-claim-mapping-policy'] = """
    type: command
    short-summary: "Create new navigation property ref to claimsMappingPolicies for servicePrincipals"
"""

helps['applications create-ref-created-object'] = """
    type: command
    short-summary: "Create new navigation property ref to createdObjects for servicePrincipals"
"""

helps['applications create-ref-home-realm-discovery-policy'] = """
    type: command
    short-summary: "Create new navigation property ref to homeRealmDiscoveryPolicies for servicePrincipals"
"""

helps['applications create-ref-member-of'] = """
    type: command
    short-summary: "Create new navigation property ref to memberOf for servicePrincipals"
"""

helps['applications create-ref-oauth2-permission-grant'] = """
    type: command
    short-summary: "Create new navigation property ref to oauth2PermissionGrants for servicePrincipals"
"""

helps['applications create-ref-owned-object'] = """
    type: command
    short-summary: "Create new navigation property ref to ownedObjects for servicePrincipals"
"""

helps['applications create-ref-owner'] = """
    type: command
    short-summary: "Create new navigation property ref to owners for servicePrincipals"
"""

helps['applications create-ref-token-issuance-policy'] = """
    type: command
    short-summary: "Create new navigation property ref to tokenIssuancePolicies for servicePrincipals"
"""

helps['applications create-ref-token-lifetime-policy'] = """
    type: command
    short-summary: "Create new navigation property ref to tokenLifetimePolicies for servicePrincipals"
"""

helps['applications create-ref-transitive-member-of'] = """
    type: command
    short-summary: "Create new navigation property ref to transitiveMemberOf for servicePrincipals"
"""

helps['applications delta'] = """
    type: command
    short-summary: "Invoke function delta"
"""

helps['applications get-app-role-assigned-to'] = """
    type: command
    short-summary: "Get appRoleAssignedTo from servicePrincipals"
"""

helps['applications get-app-role-assignment'] = """
    type: command
    short-summary: "Get appRoleAssignments from servicePrincipals"
"""

helps['applications get-available-extension-property'] = """
    type: command
    short-summary: "Invoke action getAvailableExtensionProperties"
"""

helps['applications get-by-id'] = """
    type: command
    short-summary: "Invoke action getByIds"
"""

helps['applications get-endpoint'] = """
    type: command
    short-summary: "Get endpoints from servicePrincipals"
"""

helps['applications get-member-group'] = """
    type: command
    short-summary: "Invoke action getMemberGroups"
"""

helps['applications get-member-object'] = """
    type: command
    short-summary: "Invoke action getMemberObjects"
"""

helps['applications list-app-role-assigned-to'] = """
    type: command
    short-summary: "Get appRoleAssignedTo from servicePrincipals"
"""

helps['applications list-app-role-assignment'] = """
    type: command
    short-summary: "Get appRoleAssignments from servicePrincipals"
"""

helps['applications list-claim-mapping-policy'] = """
    type: command
    short-summary: "Get claimsMappingPolicies from servicePrincipals"
"""

helps['applications list-created-object'] = """
    type: command
    short-summary: "Get createdObjects from servicePrincipals"
"""

helps['applications list-endpoint'] = """
    type: command
    short-summary: "Get endpoints from servicePrincipals"
"""

helps['applications list-home-realm-discovery-policy'] = """
    type: command
    short-summary: "Get homeRealmDiscoveryPolicies from servicePrincipals"
"""

helps['applications list-member-of'] = """
    type: command
    short-summary: "Get memberOf from servicePrincipals"
"""

helps['applications list-oauth2-permission-grant'] = """
    type: command
    short-summary: "Get oauth2PermissionGrants from servicePrincipals"
"""

helps['applications list-owned-object'] = """
    type: command
    short-summary: "Get ownedObjects from servicePrincipals"
"""

helps['applications list-owner'] = """
    type: command
    short-summary: "Get owners from servicePrincipals"
"""

helps['applications list-ref-claim-mapping-policy'] = """
    type: command
    short-summary: "Get ref of claimsMappingPolicies from servicePrincipals"
"""

helps['applications list-ref-created-object'] = """
    type: command
    short-summary: "Get ref of createdObjects from servicePrincipals"
"""

helps['applications list-ref-home-realm-discovery-policy'] = """
    type: command
    short-summary: "Get ref of homeRealmDiscoveryPolicies from servicePrincipals"
"""

helps['applications list-ref-member-of'] = """
    type: command
    short-summary: "Get ref of memberOf from servicePrincipals"
"""

helps['applications list-ref-oauth2-permission-grant'] = """
    type: command
    short-summary: "Get ref of oauth2PermissionGrants from servicePrincipals"
"""

helps['applications list-ref-owned-object'] = """
    type: command
    short-summary: "Get ref of ownedObjects from servicePrincipals"
"""

helps['applications list-ref-owner'] = """
    type: command
    short-summary: "Get ref of owners from servicePrincipals"
"""

helps['applications list-ref-token-issuance-policy'] = """
    type: command
    short-summary: "Get ref of tokenIssuancePolicies from servicePrincipals"
"""

helps['applications list-ref-token-lifetime-policy'] = """
    type: command
    short-summary: "Get ref of tokenLifetimePolicies from servicePrincipals"
"""

helps['applications list-ref-transitive-member-of'] = """
    type: command
    short-summary: "Get ref of transitiveMemberOf from servicePrincipals"
"""

helps['applications list-token-issuance-policy'] = """
    type: command
    short-summary: "Get tokenIssuancePolicies from servicePrincipals"
"""

helps['applications list-token-lifetime-policy'] = """
    type: command
    short-summary: "Get tokenLifetimePolicies from servicePrincipals"
"""

helps['applications list-transitive-member-of'] = """
    type: command
    short-summary: "Get transitiveMemberOf from servicePrincipals"
"""

helps['applications remove-key'] = """
    type: command
    short-summary: "Invoke action removeKey"
"""

helps['applications remove-password'] = """
    type: command
    short-summary: "Invoke action removePassword"
"""

helps['applications restore'] = """
    type: command
    short-summary: "Invoke action restore"
"""

helps['applications update-app-role-assigned-to'] = """
    type: command
    short-summary: "Update the navigation property appRoleAssignedTo in servicePrincipals"
"""

helps['applications update-app-role-assignment'] = """
    type: command
    short-summary: "Update the navigation property appRoleAssignments in servicePrincipals"
"""

helps['applications update-endpoint'] = """
    type: command
    short-summary: "Update the navigation property endpoints in servicePrincipals"
"""

helps['applications validate-property'] = """
    type: command
    short-summary: "Invoke action validateProperties"
"""

helps['applications'] = """
    type: group
    short-summary: applications
"""

helps['applications delete'] = """
    type: command
    short-summary: "Delete navigation property appRoleAssignments for users"
"""

helps['applications create-app-role-assignment'] = """
    type: command
    short-summary: "Create new navigation property to appRoleAssignments for users"
"""

helps['applications get-app-role-assignment'] = """
    type: command
    short-summary: "Get appRoleAssignments from users"
"""

helps['applications list-app-role-assignment'] = """
    type: command
    short-summary: "Get appRoleAssignments from users"
"""

helps['applications update-app-role-assignment'] = """
    type: command
    short-summary: "Update the navigation property appRoleAssignments in users"
"""
