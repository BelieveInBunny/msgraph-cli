# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=too-many-statements
# pylint: disable=too-many-locals
# pylint: disable=bad-continuation
# pylint: disable=line-too-long

from msgraph.cli.core.commands import CliCommandType
from azext_schemaextensions_v1_0.generated._client_factory import cf_schemaextensionsschemaextension


schemaextensions_v1_0_schemaextensionsschemaextension = CliCommandType(
    operations_tmpl='azext_schemaextensions_v1_0.vendored_sdks.schemaextensions.operations._schemaextensionsschemaextension_operations#schemaextensionsschemaextensionOperations.{}',
    client_factory=cf_schemaextensionsschemaextension,
)


def load_command_table(self, _):

    with self.command_group(
        'schemaextensions schemaextensionsschemaextension',
        schemaextensions_v1_0_schemaextensionsschemaextension,
        client_factory=cf_schemaextensionsschemaextension,
    ) as g:
        g.custom_command(
            'create-schema-extension', 'schemaextensions_schemaextensionsschemaextension_create_schema_extension'
        )
        g.custom_command(
            'delete-schema-extension', 'schemaextensions_schemaextensionsschemaextension_delete_schema_extension'
        )
        g.custom_command(
            'list-schema-extension', 'schemaextensions_schemaextensionsschemaextension_list_schema_extension'
        )
        g.custom_command(
            'show-schema-extension', 'schemaextensions_schemaextensionsschemaextension_show_schema_extension'
        )
        g.custom_command(
            'update-schema-extension', 'schemaextensions_schemaextensionsschemaextension_update_schema_extension'
        )

    with self.command_group('schemaextensions_v1_0', is_experimental=True):
        pass
