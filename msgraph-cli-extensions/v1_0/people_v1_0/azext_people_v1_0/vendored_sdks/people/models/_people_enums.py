# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from enum import Enum, EnumMeta
from six import with_metaclass

class _CaseInsensitiveEnumMeta(EnumMeta):
    def __getitem__(self, name):
        return super().__getitem__(name.upper())

    def __getattr__(cls, name):
        """Return the enum member matching `name`
        We use __getattr__ instead of descriptors or inserting into the enum
        class' __dict__ in order to support `name` and `value` being both
        properties for enum members (which live in the class' __dict__) and
        enum members themselves.
        """
        try:
            return cls._member_map_[name.upper()]
        except KeyError:
            raise AttributeError(name)


class Enum10(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    RESOURCE_REFERENCE = "resourceReference"
    RESOURCE_VISUALIZATION = "resourceVisualization"
    WEIGHT = "weight"
    RESOURCE = "resource"

class Enum11(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    RESOURCE = "resource"

class Enum12(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    LAST_USED = "lastUsed"
    LAST_USED_DESC = "lastUsed desc"
    RESOURCE_REFERENCE = "resourceReference"
    RESOURCE_REFERENCE_DESC = "resourceReference desc"
    RESOURCE_VISUALIZATION = "resourceVisualization"
    RESOURCE_VISUALIZATION_DESC = "resourceVisualization desc"

class Enum13(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    LAST_USED = "lastUsed"
    RESOURCE_REFERENCE = "resourceReference"
    RESOURCE_VISUALIZATION = "resourceVisualization"
    RESOURCE = "resource"

class Enum14(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    RESOURCE = "resource"

class Enum15(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    LAST_USED = "lastUsed"
    RESOURCE_REFERENCE = "resourceReference"
    RESOURCE_VISUALIZATION = "resourceVisualization"
    RESOURCE = "resource"

class Enum16(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    RESOURCE = "resource"

class Enum17(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    BIRTHDAY = "birthday"
    BIRTHDAY_DESC = "birthday desc"
    COMPANY_NAME = "companyName"
    COMPANY_NAME_DESC = "companyName desc"
    DEPARTMENT = "department"
    DEPARTMENT_DESC = "department desc"
    DISPLAY_NAME = "displayName"
    DISPLAY_NAME_DESC = "displayName desc"
    GIVEN_NAME = "givenName"
    GIVEN_NAME_DESC = "givenName desc"
    IM_ADDRESS = "imAddress"
    IM_ADDRESS_DESC = "imAddress desc"
    IS_FAVORITE = "isFavorite"
    IS_FAVORITE_DESC = "isFavorite desc"
    JOB_TITLE = "jobTitle"
    JOB_TITLE_DESC = "jobTitle desc"
    OFFICE_LOCATION = "officeLocation"
    OFFICE_LOCATION_DESC = "officeLocation desc"
    PERSON_NOTES = "personNotes"
    PERSON_NOTES_DESC = "personNotes desc"
    PERSON_TYPE = "personType"
    PERSON_TYPE_DESC = "personType desc"
    PHONES = "phones"
    PHONES_DESC = "phones desc"
    POSTAL_ADDRESSES = "postalAddresses"
    POSTAL_ADDRESSES_DESC = "postalAddresses desc"
    PROFESSION = "profession"
    PROFESSION_DESC = "profession desc"
    SCORED_EMAIL_ADDRESSES = "scoredEmailAddresses"
    SCORED_EMAIL_ADDRESSES_DESC = "scoredEmailAddresses desc"
    SURNAME = "surname"
    SURNAME_DESC = "surname desc"
    USER_PRINCIPAL_NAME = "userPrincipalName"
    USER_PRINCIPAL_NAME_DESC = "userPrincipalName desc"
    WEBSITES = "websites"
    WEBSITES_DESC = "websites desc"
    YOMI_COMPANY = "yomiCompany"
    YOMI_COMPANY_DESC = "yomiCompany desc"

class Enum18(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    BIRTHDAY = "birthday"
    COMPANY_NAME = "companyName"
    DEPARTMENT = "department"
    DISPLAY_NAME = "displayName"
    GIVEN_NAME = "givenName"
    IM_ADDRESS = "imAddress"
    IS_FAVORITE = "isFavorite"
    JOB_TITLE = "jobTitle"
    OFFICE_LOCATION = "officeLocation"
    PERSON_NOTES = "personNotes"
    PERSON_TYPE = "personType"
    PHONES = "phones"
    POSTAL_ADDRESSES = "postalAddresses"
    PROFESSION = "profession"
    SCORED_EMAIL_ADDRESSES = "scoredEmailAddresses"
    SURNAME = "surname"
    USER_PRINCIPAL_NAME = "userPrincipalName"
    WEBSITES = "websites"
    YOMI_COMPANY = "yomiCompany"

class Enum24(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    BIRTHDAY = "birthday"
    COMPANY_NAME = "companyName"
    DEPARTMENT = "department"
    DISPLAY_NAME = "displayName"
    GIVEN_NAME = "givenName"
    IM_ADDRESS = "imAddress"
    IS_FAVORITE = "isFavorite"
    JOB_TITLE = "jobTitle"
    OFFICE_LOCATION = "officeLocation"
    PERSON_NOTES = "personNotes"
    PERSON_TYPE = "personType"
    PHONES = "phones"
    POSTAL_ADDRESSES = "postalAddresses"
    PROFESSION = "profession"
    SCORED_EMAIL_ADDRESSES = "scoredEmailAddresses"
    SURNAME = "surname"
    USER_PRINCIPAL_NAME = "userPrincipalName"
    WEBSITES = "websites"
    YOMI_COMPANY = "yomiCompany"

class Enum5(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    LAST_SHARED = "lastShared"
    RESOURCE_REFERENCE = "resourceReference"
    RESOURCE_VISUALIZATION = "resourceVisualization"
    SHARING_HISTORY = "sharingHistory"
    LAST_SHARED_METHOD = "lastSharedMethod"
    RESOURCE = "resource"

class Enum7(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    LAST_MODIFIED_DATE_TIME_DESC = "lastModifiedDateTime desc"
    RESOURCE_REFERENCE = "resourceReference"
    RESOURCE_REFERENCE_DESC = "resourceReference desc"
    RESOURCE_VISUALIZATION = "resourceVisualization"
    RESOURCE_VISUALIZATION_DESC = "resourceVisualization desc"
    WEIGHT = "weight"
    WEIGHT_DESC = "weight desc"

class Enum8(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    LAST_MODIFIED_DATE_TIME = "lastModifiedDateTime"
    RESOURCE_REFERENCE = "resourceReference"
    RESOURCE_VISUALIZATION = "resourceVisualization"
    WEIGHT = "weight"
    RESOURCE = "resource"

class Enum9(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    RESOURCE = "resource"

class Get1ItemsItem(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    SHARED = "shared"
    TRENDING = "trending"
    USED = "used"

class Get2ItemsItem(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    SHARED = "shared"
    TRENDING = "trending"
    USED = "used"

class Get3ItemsItem(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    LAST_SHARED_METHOD = "lastSharedMethod"
    RESOURCE = "resource"

class Get6ItemsItem(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    ID_DESC = "id desc"
    LAST_SHARED = "lastShared"
    LAST_SHARED_DESC = "lastShared desc"
    RESOURCE_REFERENCE = "resourceReference"
    RESOURCE_REFERENCE_DESC = "resourceReference desc"
    RESOURCE_VISUALIZATION = "resourceVisualization"
    RESOURCE_VISUALIZATION_DESC = "resourceVisualization desc"
    SHARING_HISTORY = "sharingHistory"
    SHARING_HISTORY_DESC = "sharingHistory desc"

class Get7ItemsItem(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ID = "id"
    LAST_SHARED = "lastShared"
    RESOURCE_REFERENCE = "resourceReference"
    RESOURCE_VISUALIZATION = "resourceVisualization"
    SHARING_HISTORY = "sharingHistory"
    LAST_SHARED_METHOD = "lastSharedMethod"
    RESOURCE = "resource"

class Get8ItemsItem(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    ASTERISK = "*"
    LAST_SHARED_METHOD = "lastSharedMethod"
    RESOURCE = "resource"

class MicrosoftGraphLocationType(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    DEFAULT = "default"
    CONFERENCE_ROOM = "conferenceRoom"
    HOME_ADDRESS = "homeAddress"
    BUSINESS_ADDRESS = "businessAddress"
    GEO_COORDINATES = "geoCoordinates"
    STREET_ADDRESS = "streetAddress"
    HOTEL = "hotel"
    RESTAURANT = "restaurant"
    LOCAL_BUSINESS = "localBusiness"
    POSTAL_ADDRESS = "postalAddress"

class MicrosoftGraphLocationUniqueIdType(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    UNKNOWN = "unknown"
    LOCATION_STORE = "locationStore"
    DIRECTORY = "directory"
    PRIVATE = "private"
    BING = "bing"

class MicrosoftGraphPhoneType(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    HOME = "home"
    BUSINESS = "business"
    MOBILE = "mobile"
    OTHER = "other"
    ASSISTANT = "assistant"
    HOME_FAX = "homeFax"
    BUSINESS_FAX = "businessFax"
    OTHER_FAX = "otherFax"
    PAGER = "pager"
    RADIO = "radio"

class MicrosoftGraphSelectionLikelihoodInfo(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    NOT_SPECIFIED = "notSpecified"
    HIGH = "high"

class MicrosoftGraphWebsiteType(with_metaclass(_CaseInsensitiveEnumMeta, str, Enum)):

    OTHER = "other"
    HOME = "home"
    WORK = "work"
    BLOG = "blog"
    PROFILE = "profile"
