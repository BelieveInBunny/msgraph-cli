# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=too-many-statements
# pylint: disable=too-many-locals

from msgraph.cli.core.commands import CliCommandType


def load_command_table(self, _):

    from azext_teams_v1_0.generated._client_factory import cf_chat_chat
    teams_v1_0_chat_chat = CliCommandType(
        operations_tmpl='azext_teams_v1_0.vendored_sdks.teams.operations._chat_chat_operations#ChatChatOperations.{}',
        client_factory=cf_chat_chat)
    with self.command_group('teams chat-chat', teams_v1_0_chat_chat, client_factory=cf_chat_chat,
                            is_experimental=True) as g:
        g.custom_command('delete', 'teams_chat_chat_delete', confirmation=True)
        g.custom_command('create-chat', 'teams_chat_chat_create_chat')
        g.custom_command('get-chat', 'teams_chat_chat_get_chat')
        g.custom_command('list-chat', 'teams_chat_chat_list_chat')
        g.custom_command('update-chat', 'teams_chat_chat_update_chat')

    from azext_teams_v1_0.generated._client_factory import cf_chat
    teams_v1_0_chat = CliCommandType(
        operations_tmpl='azext_teams_v1_0.vendored_sdks.teams.operations._chat_operations#ChatOperations.{}',
        client_factory=cf_chat)
    with self.command_group('teams chat', teams_v1_0_chat, client_factory=cf_chat, is_experimental=True) as g:
        g.custom_command('get-all-message', 'teams_chat_get_all_message')

    from azext_teams_v1_0.generated._client_factory import cf_group
    teams_v1_0_group = CliCommandType(
        operations_tmpl='azext_teams_v1_0.vendored_sdks.teams.operations._group_operations#GroupOperations.{}',
        client_factory=cf_group)
    with self.command_group('teams group', teams_v1_0_group, client_factory=cf_group, is_experimental=True) as g:
        g.custom_command('update', 'teams_group_update')
        g.custom_command('delete', 'teams_group_delete', confirmation=True)
        g.custom_command('get', 'teams_group_get')

    from azext_teams_v1_0.generated._client_factory import cf_team_team
    teams_v1_0_team_team = CliCommandType(
        operations_tmpl='azext_teams_v1_0.vendored_sdks.teams.operations._team_team_operations#TeamTeamOperations.{}',
        client_factory=cf_team_team)
    with self.command_group('teams team', teams_v1_0_team_team, client_factory=cf_team_team,
                            is_experimental=True) as g:
        g.custom_command('list', 'teams_team_list')
        g.custom_command('create', 'teams_team_create')
        g.custom_command('update', 'teams_team_update')
        g.custom_command('delete', 'teams_team_delete', confirmation=True)
        g.custom_command('get', 'teams_team_get')

    from azext_teams_v1_0.generated._client_factory import cf_team
    teams_v1_0_team = CliCommandType(
        operations_tmpl='azext_teams_v1_0.vendored_sdks.teams.operations._team_operations#TeamOperations.{}',
        client_factory=cf_team)
    with self.command_group('teams team', teams_v1_0_team, client_factory=cf_team, is_experimental=True) as g:
        g.custom_command('delete', 'teams_team_delete', confirmation=True)
        g.custom_command('archive', 'teams_team_archive')
        g.custom_command('clone', 'teams_team_clone')
        g.custom_command('create-channel', 'teams_team_create_channel')
        g.custom_command('create-installed-app', 'teams_team_create_installed_app')
        g.custom_command('create-member', 'teams_team_create_member')
        g.custom_command('create-operation', 'teams_team_create_operation')
        g.custom_command('get-all-message', 'teams_team_get_all_message')
        g.custom_command('get-channel', 'teams_team_get_channel')
        g.custom_command('get-group', 'teams_team_get_group')
        g.custom_command('get-installed-app', 'teams_team_get_installed_app')
        g.custom_command('get-member', 'teams_team_get_member')
        g.custom_command('get-operation', 'teams_team_get_operation')
        g.custom_command('get-primary-channel', 'teams_team_get_primary_channel')
        g.custom_command('get-ref-group', 'teams_team_get_ref_group')
        g.custom_command('get-ref-template', 'teams_team_get_ref_template')
        g.custom_command('get-schedule', 'teams_team_get_schedule')
        g.custom_command('get-template', 'teams_team_get_template')
        g.custom_command('list-channel', 'teams_team_list_channel')
        g.custom_command('list-installed-app', 'teams_team_list_installed_app')
        g.custom_command('list-member', 'teams_team_list_member')
        g.custom_command('list-operation', 'teams_team_list_operation')
        g.custom_command('set-ref-group', 'teams_team_set_ref_group')
        g.custom_command('set-ref-template', 'teams_team_set_ref_template')
        g.custom_command('unarchive', 'teams_team_unarchive')
        g.custom_command('update-channel', 'teams_team_update_channel')
        g.custom_command('update-installed-app', 'teams_team_update_installed_app')
        g.custom_command('update-member', 'teams_team_update_member')
        g.custom_command('update-operation', 'teams_team_update_operation')
        g.custom_command('update-primary-channel', 'teams_team_update_primary_channel')
        g.custom_command('update-schedule', 'teams_team_update_schedule')

    from azext_teams_v1_0.generated._client_factory import cf_team_channel
    teams_v1_0_team_channel = CliCommandType(
        operations_tmpl='azext_teams_v1_0.vendored_sdks.teams.operations._team_channel_operations#TeamChannelOperations'
        '.{}',
        client_factory=cf_team_channel)
    with self.command_group('teams team-channel', teams_v1_0_team_channel, client_factory=cf_team_channel,
                            is_experimental=True) as g:
        g.custom_command('delete', 'teams_team_channel_delete', confirmation=True)
        g.custom_command('create-member', 'teams_team_channel_create_member')
        g.custom_command('create-message', 'teams_team_channel_create_message')
        g.custom_command('create-tab', 'teams_team_channel_create_tab')
        g.custom_command('get-file-folder', 'teams_team_channel_get_file_folder')
        g.custom_command('get-member', 'teams_team_channel_get_member')
        g.custom_command('get-message', 'teams_team_channel_get_message')
        g.custom_command('get-tab', 'teams_team_channel_get_tab')
        g.custom_command('list-member', 'teams_team_channel_list_member')
        g.custom_command('list-message', 'teams_team_channel_list_message')
        g.custom_command('list-tab', 'teams_team_channel_list_tab')
        g.custom_command('update-file-folder', 'teams_team_channel_update_file_folder')
        g.custom_command('update-member', 'teams_team_channel_update_member')
        g.custom_command('update-message', 'teams_team_channel_update_message')
        g.custom_command('update-tab', 'teams_team_channel_update_tab')

    from azext_teams_v1_0.generated._client_factory import cf_team_channel_message
    teams_v1_0_team_channel_message = CliCommandType(
        operations_tmpl='azext_teams_v1_0.vendored_sdks.teams.operations._team_channel_message_operations#TeamChannelMe'
        'ssageOperations.{}',
        client_factory=cf_team_channel_message)
    with self.command_group('teams team-channel-message', teams_v1_0_team_channel_message,
                            client_factory=cf_team_channel_message, is_experimental=True) as g:
        g.custom_command('delete', 'teams_team_channel_message_delete', confirmation=True)
        g.custom_command('create-hosted-content', 'teams_team_channel_message_create_hosted_content')
        g.custom_command('create-reply', 'teams_team_channel_message_create_reply')
        g.custom_command('get-hosted-content', 'teams_team_channel_message_get_hosted_content')
        g.custom_command('get-reply', 'teams_team_channel_message_get_reply')
        g.custom_command('list-hosted-content', 'teams_team_channel_message_list_hosted_content')
        g.custom_command('list-reply', 'teams_team_channel_message_list_reply')
        g.custom_command('update-hosted-content', 'teams_team_channel_message_update_hosted_content')
        g.custom_command('update-reply', 'teams_team_channel_message_update_reply')

    from azext_teams_v1_0.generated._client_factory import cf_team_channel_tab
    teams_v1_0_team_channel_tab = CliCommandType(
        operations_tmpl='azext_teams_v1_0.vendored_sdks.teams.operations._team_channel_tab_operations#TeamChannelTabOpe'
        'rations.{}',
        client_factory=cf_team_channel_tab)
    with self.command_group('teams team-channel-tab', teams_v1_0_team_channel_tab, client_factory=cf_team_channel_tab,
                            is_experimental=True) as g:
        g.custom_command('delete', 'teams_team_channel_tab_delete', confirmation=True)
        g.custom_command('get-app', 'teams_team_channel_tab_get_app')
        g.custom_command('get-ref-team-app', 'teams_team_channel_tab_get_ref_team_app')
        g.custom_command('set-ref-team-app', 'teams_team_channel_tab_set_ref_team_app')

    from azext_teams_v1_0.generated._client_factory import cf_team_installed_app
    teams_v1_0_team_installed_app = CliCommandType(
        operations_tmpl='azext_teams_v1_0.vendored_sdks.teams.operations._team_installed_app_operations#TeamInstalledAp'
        'pOperations.{}',
        client_factory=cf_team_installed_app)
    with self.command_group('teams team-installed-app', teams_v1_0_team_installed_app,
                            client_factory=cf_team_installed_app, is_experimental=True) as g:
        g.custom_command('delete', 'teams_team_installed_app_delete', confirmation=True)
        g.custom_command('get-app', 'teams_team_installed_app_get_app')
        g.custom_command('get-app-definition', 'teams_team_installed_app_get_app_definition')
        g.custom_command('get-ref-team-app', 'teams_team_installed_app_get_ref_team_app')
        g.custom_command('get-ref-team-app-definition', 'teams_team_installed_app_get_ref_team_app_definition')
        g.custom_command('set-ref-team-app', 'teams_team_installed_app_set_ref_team_app')
        g.custom_command('set-ref-team-app-definition', 'teams_team_installed_app_set_ref_team_app_definition')
        g.custom_command('upgrade', 'teams_team_installed_app_upgrade')

    from azext_teams_v1_0.generated._client_factory import cf_team_primary_channel
    teams_v1_0_team_primary_channel = CliCommandType(
        operations_tmpl='azext_teams_v1_0.vendored_sdks.teams.operations._team_primary_channel_operations#TeamPrimaryCh'
        'annelOperations.{}',
        client_factory=cf_team_primary_channel)
    with self.command_group('teams team-primary-channel', teams_v1_0_team_primary_channel,
                            client_factory=cf_team_primary_channel, is_experimental=True) as g:
        g.custom_command('delete', 'teams_team_primary_channel_delete', confirmation=True)
        g.custom_command('create-member', 'teams_team_primary_channel_create_member')
        g.custom_command('create-message', 'teams_team_primary_channel_create_message')
        g.custom_command('create-tab', 'teams_team_primary_channel_create_tab')
        g.custom_command('get-file-folder', 'teams_team_primary_channel_get_file_folder')
        g.custom_command('get-member', 'teams_team_primary_channel_get_member')
        g.custom_command('get-message', 'teams_team_primary_channel_get_message')
        g.custom_command('get-tab', 'teams_team_primary_channel_get_tab')
        g.custom_command('list-member', 'teams_team_primary_channel_list_member')
        g.custom_command('list-message', 'teams_team_primary_channel_list_message')
        g.custom_command('list-tab', 'teams_team_primary_channel_list_tab')
        g.custom_command('update-file-folder', 'teams_team_primary_channel_update_file_folder')
        g.custom_command('update-member', 'teams_team_primary_channel_update_member')
        g.custom_command('update-message', 'teams_team_primary_channel_update_message')
        g.custom_command('update-tab', 'teams_team_primary_channel_update_tab')

    from azext_teams_v1_0.generated._client_factory import cf_team_primary_channel_message
    teams_v1_0_team_primary_channel_message = CliCommandType(
        operations_tmpl='azext_teams_v1_0.vendored_sdks.teams.operations._team_primary_channel_message_operations#TeamP'
        'rimaryChannelMessageOperations.{}',
        client_factory=cf_team_primary_channel_message)
    with self.command_group('teams team-primary-channel-message', teams_v1_0_team_primary_channel_message,
                            client_factory=cf_team_primary_channel_message, is_experimental=True) as g:
        g.custom_command('delete', 'teams_team_primary_channel_message_delete', confirmation=True)
        g.custom_command('create-hosted-content', 'teams_team_primary_channel_message_create_hosted_content')
        g.custom_command('create-reply', 'teams_team_primary_channel_message_create_reply')
        g.custom_command('get-hosted-content', 'teams_team_primary_channel_message_get_hosted_content')
        g.custom_command('get-reply', 'teams_team_primary_channel_message_get_reply')
        g.custom_command('list-hosted-content', 'teams_team_primary_channel_message_list_hosted_content')
        g.custom_command('list-reply', 'teams_team_primary_channel_message_list_reply')
        g.custom_command('update-hosted-content', 'teams_team_primary_channel_message_update_hosted_content')
        g.custom_command('update-reply', 'teams_team_primary_channel_message_update_reply')

    from azext_teams_v1_0.generated._client_factory import cf_team_primary_channel_tab
    teams_v1_0_team_primary_channel_tab = CliCommandType(
        operations_tmpl='azext_teams_v1_0.vendored_sdks.teams.operations._team_primary_channel_tab_operations#TeamPrima'
        'ryChannelTabOperations.{}',
        client_factory=cf_team_primary_channel_tab)
    with self.command_group('teams team-primary-channel-tab', teams_v1_0_team_primary_channel_tab,
                            client_factory=cf_team_primary_channel_tab, is_experimental=True) as g:
        g.custom_command('delete', 'teams_team_primary_channel_tab_delete', confirmation=True)
        g.custom_command('get-app', 'teams_team_primary_channel_tab_get_app')
        g.custom_command('get-ref-team-app', 'teams_team_primary_channel_tab_get_ref_team_app')
        g.custom_command('set-ref-team-app', 'teams_team_primary_channel_tab_set_ref_team_app')

    from azext_teams_v1_0.generated._client_factory import cf_team_schedule
    teams_v1_0_team_schedule = CliCommandType(
        operations_tmpl='azext_teams_v1_0.vendored_sdks.teams.operations._team_schedule_operations#TeamScheduleOperatio'
        'ns.{}',
        client_factory=cf_team_schedule)
    with self.command_group('teams team-schedule', teams_v1_0_team_schedule, client_factory=cf_team_schedule,
                            is_experimental=True) as g:
        g.custom_command('delete', 'teams_team_schedule_delete', confirmation=True)
        g.custom_command('create-offer-shift-request', 'teams_team_schedule_create_offer_shift_request')
        g.custom_command('create-open-shift', 'teams_team_schedule_create_open_shift')
        g.custom_command('create-open-shift-change-request', 'teams_team_schedule_create_open_shift_change_request')
        g.custom_command('create-scheduling-group', 'teams_team_schedule_create_scheduling_group')
        g.custom_command('create-shift', 'teams_team_schedule_create_shift')
        g.custom_command('create-swap-shift-change-request', 'teams_team_schedule_create_swap_shift_change_request')
        g.custom_command('create-time-off', 'teams_team_schedule_create_time_off')
        g.custom_command('create-time-off-reason', 'teams_team_schedule_create_time_off_reason')
        g.custom_command('create-time-off-request', 'teams_team_schedule_create_time_off_request')
        g.custom_command('get-offer-shift-request', 'teams_team_schedule_get_offer_shift_request')
        g.custom_command('get-open-shift', 'teams_team_schedule_get_open_shift')
        g.custom_command('get-open-shift-change-request', 'teams_team_schedule_get_open_shift_change_request')
        g.custom_command('get-scheduling-group', 'teams_team_schedule_get_scheduling_group')
        g.custom_command('get-shift', 'teams_team_schedule_get_shift')
        g.custom_command('get-swap-shift-change-request', 'teams_team_schedule_get_swap_shift_change_request')
        g.custom_command('get-time-off', 'teams_team_schedule_get_time_off')
        g.custom_command('get-time-off-reason', 'teams_team_schedule_get_time_off_reason')
        g.custom_command('get-time-off-request', 'teams_team_schedule_get_time_off_request')
        g.custom_command('list-offer-shift-request', 'teams_team_schedule_list_offer_shift_request')
        g.custom_command('list-open-shift', 'teams_team_schedule_list_open_shift')
        g.custom_command('list-open-shift-change-request', 'teams_team_schedule_list_open_shift_change_request')
        g.custom_command('list-scheduling-group', 'teams_team_schedule_list_scheduling_group')
        g.custom_command('list-shift', 'teams_team_schedule_list_shift')
        g.custom_command('list-swap-shift-change-request', 'teams_team_schedule_list_swap_shift_change_request')
        g.custom_command('list-time-off', 'teams_team_schedule_list_time_off')
        g.custom_command('list-time-off-reason', 'teams_team_schedule_list_time_off_reason')
        g.custom_command('list-time-off-request', 'teams_team_schedule_list_time_off_request')
        g.custom_command('share', 'teams_team_schedule_share')
        g.custom_command('update-offer-shift-request', 'teams_team_schedule_update_offer_shift_request')
        g.custom_command('update-open-shift', 'teams_team_schedule_update_open_shift')
        g.custom_command('update-open-shift-change-request', 'teams_team_schedule_update_open_shift_change_request')
        g.custom_command('update-scheduling-group', 'teams_team_schedule_update_scheduling_group')
        g.custom_command('update-shift', 'teams_team_schedule_update_shift')
        g.custom_command('update-swap-shift-change-request', 'teams_team_schedule_update_swap_shift_change_request')
        g.custom_command('update-time-off', 'teams_team_schedule_update_time_off')
        g.custom_command('update-time-off-reason', 'teams_team_schedule_update_time_off_reason')
        g.custom_command('update-time-off-request', 'teams_team_schedule_update_time_off_request')

    from azext_teams_v1_0.generated._client_factory import cf_teamwork_teamwork
    teams_v1_0_teamwork_teamwork = CliCommandType(
        operations_tmpl='azext_teams_v1_0.vendored_sdks.teams.operations._teamwork_teamwork_operations#TeamworkTeamwork'
        'Operations.{}',
        client_factory=cf_teamwork_teamwork)
    with self.command_group('teams teamwork-teamwork', teams_v1_0_teamwork_teamwork,
                            client_factory=cf_teamwork_teamwork, is_experimental=True) as g:
        g.custom_command('getwork', 'teams_teamwork_teamwork_getwork')
        g.custom_command('updatework', 'teams_teamwork_teamwork_updatework')

    from azext_teams_v1_0.generated._client_factory import cf_teamwork
    teams_v1_0_teamwork = CliCommandType(
        operations_tmpl='azext_teams_v1_0.vendored_sdks.teams.operations._teamwork_operations#TeamworkOperations.{}',
        client_factory=cf_teamwork)
    with self.command_group('teams teamwork', teams_v1_0_teamwork, client_factory=cf_teamwork,
                            is_experimental=True) as g:
        g.custom_command('delete', 'teams_teamwork_delete', confirmation=True)
        g.custom_command('create-workforce-integration', 'teams_teamwork_create_workforce_integration')
        g.custom_command('get-workforce-integration', 'teams_teamwork_get_workforce_integration')
        g.custom_command('list-workforce-integration', 'teams_teamwork_list_workforce_integration')
        g.custom_command('update-workforce-integration', 'teams_teamwork_update_workforce_integration')

    from azext_teams_v1_0.generated._client_factory import cf_user
    teams_v1_0_user = CliCommandType(
        operations_tmpl='azext_teams_v1_0.vendored_sdks.teams.operations._user_operations#UserOperations.{}',
        client_factory=cf_user)
    with self.command_group('teams user', teams_v1_0_user, client_factory=cf_user, is_experimental=True) as g:
        g.custom_command('delete', 'teams_user_delete', confirmation=True)
        g.custom_command('create-joined-team', 'teams_user_create_joined_team')
        g.custom_command('get-joined-team', 'teams_user_get_joined_team')
        g.custom_command('list-joined-team', 'teams_user_list_joined_team')
        g.custom_command('update-joined-team', 'teams_user_update_joined_team')
