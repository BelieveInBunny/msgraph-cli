# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=line-too-long
# pylint: disable=too-many-lines


def usersactions_user_calendar_calendar_view_attachment_create_upload_session(client,
                                                                              user_id,
                                                                              event_id,
                                                                              attachment_item=None):
    return client.create_upload_session(user_id=user_id,
                                        event_id=event_id,
                                        attachment_item=attachment_item)


def usersactions_user_calendar_calendar_view_calendar_get_schedule(client,
                                                                   user_id,
                                                                   event_id,
                                                                   schedules=None,
                                                                   end_time=None,
                                                                   start_time=None,
                                                                   availability_view_interval=None):
    return client.get_schedule(user_id=user_id,
                               event_id=event_id,
                               schedules=schedules,
                               end_time=end_time,
                               start_time=start_time,
                               availability_view_interval=availability_view_interval)


def usersactions_user_calendar_calendar_view_instance_accept(client,
                                                             user_id,
                                                             event_id,
                                                             event_id1,
                                                             comment=None,
                                                             send_response=None):
    if send_response is None:
        send_response = False
    return client.accept(user_id=user_id,
                         event_id=event_id,
                         event_id1=event_id1,
                         comment=comment,
                         send_response=send_response)


def usersactions_user_calendar_calendar_view_instance_decline(client,
                                                              user_id,
                                                              event_id,
                                                              event_id1,
                                                              comment=None,
                                                              send_response=None):
    if send_response is None:
        send_response = False
    return client.decline(user_id=user_id,
                          event_id=event_id,
                          event_id1=event_id1,
                          comment=comment,
                          send_response=send_response)


def usersactions_user_calendar_calendar_view_instance_dismiss_reminder(client,
                                                                       user_id,
                                                                       event_id,
                                                                       event_id1):
    return client.dismiss_reminder(user_id=user_id,
                                   event_id=event_id,
                                   event_id1=event_id1)


def usersactions_user_calendar_calendar_view_instance_snooze_reminder(client,
                                                                      user_id,
                                                                      event_id,
                                                                      event_id1,
                                                                      new_reminder_time=None):
    return client.snooze_reminder(user_id=user_id,
                                  event_id=event_id,
                                  event_id1=event_id1,
                                  new_reminder_time=new_reminder_time)


def usersactions_user_calendar_calendar_view_instance_tentatively_accept(client,
                                                                         user_id,
                                                                         event_id,
                                                                         event_id1,
                                                                         comment=None,
                                                                         send_response=None):
    if send_response is None:
        send_response = False
    return client.tentatively_accept(user_id=user_id,
                                     event_id=event_id,
                                     event_id1=event_id1,
                                     comment=comment,
                                     send_response=send_response)


def usersactions_user_calendar_calendar_view_accept(client,
                                                    user_id,
                                                    event_id,
                                                    comment=None,
                                                    send_response=None):
    if send_response is None:
        send_response = False
    return client.accept(user_id=user_id,
                         event_id=event_id,
                         comment=comment,
                         send_response=send_response)


def usersactions_user_calendar_calendar_view_decline(client,
                                                     user_id,
                                                     event_id,
                                                     comment=None,
                                                     send_response=None):
    if send_response is None:
        send_response = False
    return client.decline(user_id=user_id,
                          event_id=event_id,
                          comment=comment,
                          send_response=send_response)


def usersactions_user_calendar_calendar_view_dismiss_reminder(client,
                                                              user_id,
                                                              event_id):
    return client.dismiss_reminder(user_id=user_id,
                                   event_id=event_id)


def usersactions_user_calendar_calendar_view_snooze_reminder(client,
                                                             user_id,
                                                             event_id,
                                                             new_reminder_time=None):
    return client.snooze_reminder(user_id=user_id,
                                  event_id=event_id,
                                  new_reminder_time=new_reminder_time)


def usersactions_user_calendar_calendar_view_tentatively_accept(client,
                                                                user_id,
                                                                event_id,
                                                                comment=None,
                                                                send_response=None):
    if send_response is None:
        send_response = False
    return client.tentatively_accept(user_id=user_id,
                                     event_id=event_id,
                                     comment=comment,
                                     send_response=send_response)


def usersactions_user_calendar_event_attachment_create_upload_session(client,
                                                                      user_id,
                                                                      event_id,
                                                                      attachment_item=None):
    return client.create_upload_session(user_id=user_id,
                                        event_id=event_id,
                                        attachment_item=attachment_item)


def usersactions_user_calendar_event_calendar_get_schedule(client,
                                                           user_id,
                                                           event_id,
                                                           schedules=None,
                                                           end_time=None,
                                                           start_time=None,
                                                           availability_view_interval=None):
    return client.get_schedule(user_id=user_id,
                               event_id=event_id,
                               schedules=schedules,
                               end_time=end_time,
                               start_time=start_time,
                               availability_view_interval=availability_view_interval)


def usersactions_user_calendar_event_instance_accept(client,
                                                     user_id,
                                                     event_id,
                                                     event_id1,
                                                     comment=None,
                                                     send_response=None):
    if send_response is None:
        send_response = False
    return client.accept(user_id=user_id,
                         event_id=event_id,
                         event_id1=event_id1,
                         comment=comment,
                         send_response=send_response)


def usersactions_user_calendar_event_instance_decline(client,
                                                      user_id,
                                                      event_id,
                                                      event_id1,
                                                      comment=None,
                                                      send_response=None):
    if send_response is None:
        send_response = False
    return client.decline(user_id=user_id,
                          event_id=event_id,
                          event_id1=event_id1,
                          comment=comment,
                          send_response=send_response)


def usersactions_user_calendar_event_instance_dismiss_reminder(client,
                                                               user_id,
                                                               event_id,
                                                               event_id1):
    return client.dismiss_reminder(user_id=user_id,
                                   event_id=event_id,
                                   event_id1=event_id1)


def usersactions_user_calendar_event_instance_snooze_reminder(client,
                                                              user_id,
                                                              event_id,
                                                              event_id1,
                                                              new_reminder_time=None):
    return client.snooze_reminder(user_id=user_id,
                                  event_id=event_id,
                                  event_id1=event_id1,
                                  new_reminder_time=new_reminder_time)


def usersactions_user_calendar_event_instance_tentatively_accept(client,
                                                                 user_id,
                                                                 event_id,
                                                                 event_id1,
                                                                 comment=None,
                                                                 send_response=None):
    if send_response is None:
        send_response = False
    return client.tentatively_accept(user_id=user_id,
                                     event_id=event_id,
                                     event_id1=event_id1,
                                     comment=comment,
                                     send_response=send_response)


def usersactions_user_calendar_event_accept(client,
                                            user_id,
                                            event_id,
                                            comment=None,
                                            send_response=None):
    if send_response is None:
        send_response = False
    return client.accept(user_id=user_id,
                         event_id=event_id,
                         comment=comment,
                         send_response=send_response)


def usersactions_user_calendar_event_decline(client,
                                             user_id,
                                             event_id,
                                             comment=None,
                                             send_response=None):
    if send_response is None:
        send_response = False
    return client.decline(user_id=user_id,
                          event_id=event_id,
                          comment=comment,
                          send_response=send_response)


def usersactions_user_calendar_event_dismiss_reminder(client,
                                                      user_id,
                                                      event_id):
    return client.dismiss_reminder(user_id=user_id,
                                   event_id=event_id)


def usersactions_user_calendar_event_snooze_reminder(client,
                                                     user_id,
                                                     event_id,
                                                     new_reminder_time=None):
    return client.snooze_reminder(user_id=user_id,
                                  event_id=event_id,
                                  new_reminder_time=new_reminder_time)


def usersactions_user_calendar_event_tentatively_accept(client,
                                                        user_id,
                                                        event_id,
                                                        comment=None,
                                                        send_response=None):
    if send_response is None:
        send_response = False
    return client.tentatively_accept(user_id=user_id,
                                     event_id=event_id,
                                     comment=comment,
                                     send_response=send_response)


def usersactions_user_calendar_get_schedule(client,
                                            user_id,
                                            schedules=None,
                                            end_time=None,
                                            start_time=None,
                                            availability_view_interval=None):
    return client.get_schedule(user_id=user_id,
                               schedules=schedules,
                               end_time=end_time,
                               start_time=start_time,
                               availability_view_interval=availability_view_interval)


def usersactions_user_calendar_group_calendar_calendar_view_attachment_create_upload_session(client,
                                                                                             user_id,
                                                                                             calendar_group_id,
                                                                                             calendar_id,
                                                                                             event_id,
                                                                                             attachment_item=None):
    return client.create_upload_session(user_id=user_id,
                                        calendar_group_id=calendar_group_id,
                                        calendar_id=calendar_id,
                                        event_id=event_id,
                                        attachment_item=attachment_item)


def usersactions_user_calendar_group_calendar_calendar_view_calendar_get_schedule(client,
                                                                                  user_id,
                                                                                  calendar_group_id,
                                                                                  calendar_id,
                                                                                  event_id,
                                                                                  schedules=None,
                                                                                  end_time=None,
                                                                                  start_time=None,
                                                                                  availability_view_interval=None):
    return client.get_schedule(user_id=user_id,
                               calendar_group_id=calendar_group_id,
                               calendar_id=calendar_id,
                               event_id=event_id,
                               schedules=schedules,
                               end_time=end_time,
                               start_time=start_time,
                               availability_view_interval=availability_view_interval)


def usersactions_user_calendar_group_calendar_calendar_view_instance_accept(client,
                                                                            user_id,
                                                                            calendar_group_id,
                                                                            calendar_id,
                                                                            event_id,
                                                                            event_id1,
                                                                            comment=None,
                                                                            send_response=None):
    if send_response is None:
        send_response = False
    return client.accept(user_id=user_id,
                         calendar_group_id=calendar_group_id,
                         calendar_id=calendar_id,
                         event_id=event_id,
                         event_id1=event_id1,
                         comment=comment,
                         send_response=send_response)


def usersactions_user_calendar_group_calendar_calendar_view_instance_decline(client,
                                                                             user_id,
                                                                             calendar_group_id,
                                                                             calendar_id,
                                                                             event_id,
                                                                             event_id1,
                                                                             comment=None,
                                                                             send_response=None):
    if send_response is None:
        send_response = False
    return client.decline(user_id=user_id,
                          calendar_group_id=calendar_group_id,
                          calendar_id=calendar_id,
                          event_id=event_id,
                          event_id1=event_id1,
                          comment=comment,
                          send_response=send_response)


def usersactions_user_calendar_group_calendar_calendar_view_instance_dismiss_reminder(client,
                                                                                      user_id,
                                                                                      calendar_group_id,
                                                                                      calendar_id,
                                                                                      event_id,
                                                                                      event_id1):
    return client.dismiss_reminder(user_id=user_id,
                                   calendar_group_id=calendar_group_id,
                                   calendar_id=calendar_id,
                                   event_id=event_id,
                                   event_id1=event_id1)


def usersactions_user_calendar_group_calendar_calendar_view_instance_snooze_reminder(client,
                                                                                     user_id,
                                                                                     calendar_group_id,
                                                                                     calendar_id,
                                                                                     event_id,
                                                                                     event_id1,
                                                                                     new_reminder_time=None):
    return client.snooze_reminder(user_id=user_id,
                                  calendar_group_id=calendar_group_id,
                                  calendar_id=calendar_id,
                                  event_id=event_id,
                                  event_id1=event_id1,
                                  new_reminder_time=new_reminder_time)


def usersactions_user_calendar_group_calendar_calendar_view_instance_tentatively_accept(client,
                                                                                        user_id,
                                                                                        calendar_group_id,
                                                                                        calendar_id,
                                                                                        event_id,
                                                                                        event_id1,
                                                                                        comment=None,
                                                                                        send_response=None):
    if send_response is None:
        send_response = False
    return client.tentatively_accept(user_id=user_id,
                                     calendar_group_id=calendar_group_id,
                                     calendar_id=calendar_id,
                                     event_id=event_id,
                                     event_id1=event_id1,
                                     comment=comment,
                                     send_response=send_response)


def usersactions_user_calendar_group_calendar_calendar_view_accept(client,
                                                                   user_id,
                                                                   calendar_group_id,
                                                                   calendar_id,
                                                                   event_id,
                                                                   comment=None,
                                                                   send_response=None):
    if send_response is None:
        send_response = False
    return client.accept(user_id=user_id,
                         calendar_group_id=calendar_group_id,
                         calendar_id=calendar_id,
                         event_id=event_id,
                         comment=comment,
                         send_response=send_response)


def usersactions_user_calendar_group_calendar_calendar_view_decline(client,
                                                                    user_id,
                                                                    calendar_group_id,
                                                                    calendar_id,
                                                                    event_id,
                                                                    comment=None,
                                                                    send_response=None):
    if send_response is None:
        send_response = False
    return client.decline(user_id=user_id,
                          calendar_group_id=calendar_group_id,
                          calendar_id=calendar_id,
                          event_id=event_id,
                          comment=comment,
                          send_response=send_response)


def usersactions_user_calendar_group_calendar_calendar_view_dismiss_reminder(client,
                                                                             user_id,
                                                                             calendar_group_id,
                                                                             calendar_id,
                                                                             event_id):
    return client.dismiss_reminder(user_id=user_id,
                                   calendar_group_id=calendar_group_id,
                                   calendar_id=calendar_id,
                                   event_id=event_id)


def usersactions_user_calendar_group_calendar_calendar_view_snooze_reminder(client,
                                                                            user_id,
                                                                            calendar_group_id,
                                                                            calendar_id,
                                                                            event_id,
                                                                            new_reminder_time=None):
    return client.snooze_reminder(user_id=user_id,
                                  calendar_group_id=calendar_group_id,
                                  calendar_id=calendar_id,
                                  event_id=event_id,
                                  new_reminder_time=new_reminder_time)


def usersactions_user_calendar_group_calendar_calendar_view_tentatively_accept(client,
                                                                               user_id,
                                                                               calendar_group_id,
                                                                               calendar_id,
                                                                               event_id,
                                                                               comment=None,
                                                                               send_response=None):
    if send_response is None:
        send_response = False
    return client.tentatively_accept(user_id=user_id,
                                     calendar_group_id=calendar_group_id,
                                     calendar_id=calendar_id,
                                     event_id=event_id,
                                     comment=comment,
                                     send_response=send_response)


def usersactions_user_calendar_group_calendar_event_attachment_create_upload_session(client,
                                                                                     user_id,
                                                                                     calendar_group_id,
                                                                                     calendar_id,
                                                                                     event_id,
                                                                                     attachment_item=None):
    return client.create_upload_session(user_id=user_id,
                                        calendar_group_id=calendar_group_id,
                                        calendar_id=calendar_id,
                                        event_id=event_id,
                                        attachment_item=attachment_item)


def usersactions_user_calendar_group_calendar_event_calendar_get_schedule(client,
                                                                          user_id,
                                                                          calendar_group_id,
                                                                          calendar_id,
                                                                          event_id,
                                                                          schedules=None,
                                                                          end_time=None,
                                                                          start_time=None,
                                                                          availability_view_interval=None):
    return client.get_schedule(user_id=user_id,
                               calendar_group_id=calendar_group_id,
                               calendar_id=calendar_id,
                               event_id=event_id,
                               schedules=schedules,
                               end_time=end_time,
                               start_time=start_time,
                               availability_view_interval=availability_view_interval)


def usersactions_user_calendar_group_calendar_event_instance_accept(client,
                                                                    user_id,
                                                                    calendar_group_id,
                                                                    calendar_id,
                                                                    event_id,
                                                                    event_id1,
                                                                    comment=None,
                                                                    send_response=None):
    if send_response is None:
        send_response = False
    return client.accept(user_id=user_id,
                         calendar_group_id=calendar_group_id,
                         calendar_id=calendar_id,
                         event_id=event_id,
                         event_id1=event_id1,
                         comment=comment,
                         send_response=send_response)


def usersactions_user_calendar_group_calendar_event_instance_decline(client,
                                                                     user_id,
                                                                     calendar_group_id,
                                                                     calendar_id,
                                                                     event_id,
                                                                     event_id1,
                                                                     comment=None,
                                                                     send_response=None):
    if send_response is None:
        send_response = False
    return client.decline(user_id=user_id,
                          calendar_group_id=calendar_group_id,
                          calendar_id=calendar_id,
                          event_id=event_id,
                          event_id1=event_id1,
                          comment=comment,
                          send_response=send_response)


def usersactions_user_calendar_group_calendar_event_instance_dismiss_reminder(client,
                                                                              user_id,
                                                                              calendar_group_id,
                                                                              calendar_id,
                                                                              event_id,
                                                                              event_id1):
    return client.dismiss_reminder(user_id=user_id,
                                   calendar_group_id=calendar_group_id,
                                   calendar_id=calendar_id,
                                   event_id=event_id,
                                   event_id1=event_id1)


def usersactions_user_calendar_group_calendar_event_instance_snooze_reminder(client,
                                                                             user_id,
                                                                             calendar_group_id,
                                                                             calendar_id,
                                                                             event_id,
                                                                             event_id1,
                                                                             new_reminder_time=None):
    return client.snooze_reminder(user_id=user_id,
                                  calendar_group_id=calendar_group_id,
                                  calendar_id=calendar_id,
                                  event_id=event_id,
                                  event_id1=event_id1,
                                  new_reminder_time=new_reminder_time)


def usersactions_user_calendar_group_calendar_event_instance_tentatively_accept(client,
                                                                                user_id,
                                                                                calendar_group_id,
                                                                                calendar_id,
                                                                                event_id,
                                                                                event_id1,
                                                                                comment=None,
                                                                                send_response=None):
    if send_response is None:
        send_response = False
    return client.tentatively_accept(user_id=user_id,
                                     calendar_group_id=calendar_group_id,
                                     calendar_id=calendar_id,
                                     event_id=event_id,
                                     event_id1=event_id1,
                                     comment=comment,
                                     send_response=send_response)


def usersactions_user_calendar_group_calendar_event_accept(client,
                                                           user_id,
                                                           calendar_group_id,
                                                           calendar_id,
                                                           event_id,
                                                           comment=None,
                                                           send_response=None):
    if send_response is None:
        send_response = False
    return client.accept(user_id=user_id,
                         calendar_group_id=calendar_group_id,
                         calendar_id=calendar_id,
                         event_id=event_id,
                         comment=comment,
                         send_response=send_response)


def usersactions_user_calendar_group_calendar_event_decline(client,
                                                            user_id,
                                                            calendar_group_id,
                                                            calendar_id,
                                                            event_id,
                                                            comment=None,
                                                            send_response=None):
    if send_response is None:
        send_response = False
    return client.decline(user_id=user_id,
                          calendar_group_id=calendar_group_id,
                          calendar_id=calendar_id,
                          event_id=event_id,
                          comment=comment,
                          send_response=send_response)


def usersactions_user_calendar_group_calendar_event_dismiss_reminder(client,
                                                                     user_id,
                                                                     calendar_group_id,
                                                                     calendar_id,
                                                                     event_id):
    return client.dismiss_reminder(user_id=user_id,
                                   calendar_group_id=calendar_group_id,
                                   calendar_id=calendar_id,
                                   event_id=event_id)


def usersactions_user_calendar_group_calendar_event_snooze_reminder(client,
                                                                    user_id,
                                                                    calendar_group_id,
                                                                    calendar_id,
                                                                    event_id,
                                                                    new_reminder_time=None):
    return client.snooze_reminder(user_id=user_id,
                                  calendar_group_id=calendar_group_id,
                                  calendar_id=calendar_id,
                                  event_id=event_id,
                                  new_reminder_time=new_reminder_time)


def usersactions_user_calendar_group_calendar_event_tentatively_accept(client,
                                                                       user_id,
                                                                       calendar_group_id,
                                                                       calendar_id,
                                                                       event_id,
                                                                       comment=None,
                                                                       send_response=None):
    if send_response is None:
        send_response = False
    return client.tentatively_accept(user_id=user_id,
                                     calendar_group_id=calendar_group_id,
                                     calendar_id=calendar_id,
                                     event_id=event_id,
                                     comment=comment,
                                     send_response=send_response)


def usersactions_user_calendar_group_calendar_get_schedule(client,
                                                           user_id,
                                                           calendar_group_id,
                                                           calendar_id,
                                                           schedules=None,
                                                           end_time=None,
                                                           start_time=None,
                                                           availability_view_interval=None):
    return client.get_schedule(user_id=user_id,
                               calendar_group_id=calendar_group_id,
                               calendar_id=calendar_id,
                               schedules=schedules,
                               end_time=end_time,
                               start_time=start_time,
                               availability_view_interval=availability_view_interval)


def usersactions_user_calendar_calendar_view_attachment_create_upload_session(client,
                                                                              user_id,
                                                                              calendar_id,
                                                                              event_id,
                                                                              attachment_item=None):
    return client.create_upload_session(user_id=user_id,
                                        calendar_id=calendar_id,
                                        event_id=event_id,
                                        attachment_item=attachment_item)


def usersactions_user_calendar_calendar_view_calendar_get_schedule(client,
                                                                   user_id,
                                                                   calendar_id,
                                                                   event_id,
                                                                   schedules=None,
                                                                   end_time=None,
                                                                   start_time=None,
                                                                   availability_view_interval=None):
    return client.get_schedule(user_id=user_id,
                               calendar_id=calendar_id,
                               event_id=event_id,
                               schedules=schedules,
                               end_time=end_time,
                               start_time=start_time,
                               availability_view_interval=availability_view_interval)


def usersactions_user_calendar_calendar_view_instance_accept(client,
                                                             user_id,
                                                             calendar_id,
                                                             event_id,
                                                             event_id1,
                                                             comment=None,
                                                             send_response=None):
    if send_response is None:
        send_response = False
    return client.accept(user_id=user_id,
                         calendar_id=calendar_id,
                         event_id=event_id,
                         event_id1=event_id1,
                         comment=comment,
                         send_response=send_response)


def usersactions_user_calendar_calendar_view_instance_decline(client,
                                                              user_id,
                                                              calendar_id,
                                                              event_id,
                                                              event_id1,
                                                              comment=None,
                                                              send_response=None):
    if send_response is None:
        send_response = False
    return client.decline(user_id=user_id,
                          calendar_id=calendar_id,
                          event_id=event_id,
                          event_id1=event_id1,
                          comment=comment,
                          send_response=send_response)


def usersactions_user_calendar_calendar_view_instance_dismiss_reminder(client,
                                                                       user_id,
                                                                       calendar_id,
                                                                       event_id,
                                                                       event_id1):
    return client.dismiss_reminder(user_id=user_id,
                                   calendar_id=calendar_id,
                                   event_id=event_id,
                                   event_id1=event_id1)


def usersactions_user_calendar_calendar_view_instance_snooze_reminder(client,
                                                                      user_id,
                                                                      calendar_id,
                                                                      event_id,
                                                                      event_id1,
                                                                      new_reminder_time=None):
    return client.snooze_reminder(user_id=user_id,
                                  calendar_id=calendar_id,
                                  event_id=event_id,
                                  event_id1=event_id1,
                                  new_reminder_time=new_reminder_time)


def usersactions_user_calendar_calendar_view_instance_tentatively_accept(client,
                                                                         user_id,
                                                                         calendar_id,
                                                                         event_id,
                                                                         event_id1,
                                                                         comment=None,
                                                                         send_response=None):
    if send_response is None:
        send_response = False
    return client.tentatively_accept(user_id=user_id,
                                     calendar_id=calendar_id,
                                     event_id=event_id,
                                     event_id1=event_id1,
                                     comment=comment,
                                     send_response=send_response)


def usersactions_user_calendar_calendar_view_accept(client,
                                                    user_id,
                                                    calendar_id,
                                                    event_id,
                                                    comment=None,
                                                    send_response=None):
    if send_response is None:
        send_response = False
    return client.accept(user_id=user_id,
                         calendar_id=calendar_id,
                         event_id=event_id,
                         comment=comment,
                         send_response=send_response)


def usersactions_user_calendar_calendar_view_decline(client,
                                                     user_id,
                                                     calendar_id,
                                                     event_id,
                                                     comment=None,
                                                     send_response=None):
    if send_response is None:
        send_response = False
    return client.decline(user_id=user_id,
                          calendar_id=calendar_id,
                          event_id=event_id,
                          comment=comment,
                          send_response=send_response)


def usersactions_user_calendar_calendar_view_dismiss_reminder(client,
                                                              user_id,
                                                              calendar_id,
                                                              event_id):
    return client.dismiss_reminder(user_id=user_id,
                                   calendar_id=calendar_id,
                                   event_id=event_id)


def usersactions_user_calendar_calendar_view_snooze_reminder(client,
                                                             user_id,
                                                             calendar_id,
                                                             event_id,
                                                             new_reminder_time=None):
    return client.snooze_reminder(user_id=user_id,
                                  calendar_id=calendar_id,
                                  event_id=event_id,
                                  new_reminder_time=new_reminder_time)


def usersactions_user_calendar_calendar_view_tentatively_accept(client,
                                                                user_id,
                                                                calendar_id,
                                                                event_id,
                                                                comment=None,
                                                                send_response=None):
    if send_response is None:
        send_response = False
    return client.tentatively_accept(user_id=user_id,
                                     calendar_id=calendar_id,
                                     event_id=event_id,
                                     comment=comment,
                                     send_response=send_response)


def usersactions_user_calendar_event_attachment_create_upload_session(client,
                                                                      user_id,
                                                                      calendar_id,
                                                                      event_id,
                                                                      attachment_item=None):
    return client.create_upload_session(user_id=user_id,
                                        calendar_id=calendar_id,
                                        event_id=event_id,
                                        attachment_item=attachment_item)


def usersactions_user_calendar_event_calendar_get_schedule(client,
                                                           user_id,
                                                           calendar_id,
                                                           event_id,
                                                           schedules=None,
                                                           end_time=None,
                                                           start_time=None,
                                                           availability_view_interval=None):
    return client.get_schedule(user_id=user_id,
                               calendar_id=calendar_id,
                               event_id=event_id,
                               schedules=schedules,
                               end_time=end_time,
                               start_time=start_time,
                               availability_view_interval=availability_view_interval)


def usersactions_user_calendar_event_instance_accept(client,
                                                     user_id,
                                                     calendar_id,
                                                     event_id,
                                                     event_id1,
                                                     comment=None,
                                                     send_response=None):
    if send_response is None:
        send_response = False
    return client.accept(user_id=user_id,
                         calendar_id=calendar_id,
                         event_id=event_id,
                         event_id1=event_id1,
                         comment=comment,
                         send_response=send_response)


def usersactions_user_calendar_event_instance_decline(client,
                                                      user_id,
                                                      calendar_id,
                                                      event_id,
                                                      event_id1,
                                                      comment=None,
                                                      send_response=None):
    if send_response is None:
        send_response = False
    return client.decline(user_id=user_id,
                          calendar_id=calendar_id,
                          event_id=event_id,
                          event_id1=event_id1,
                          comment=comment,
                          send_response=send_response)


def usersactions_user_calendar_event_instance_dismiss_reminder(client,
                                                               user_id,
                                                               calendar_id,
                                                               event_id,
                                                               event_id1):
    return client.dismiss_reminder(user_id=user_id,
                                   calendar_id=calendar_id,
                                   event_id=event_id,
                                   event_id1=event_id1)


def usersactions_user_calendar_event_instance_snooze_reminder(client,
                                                              user_id,
                                                              calendar_id,
                                                              event_id,
                                                              event_id1,
                                                              new_reminder_time=None):
    return client.snooze_reminder(user_id=user_id,
                                  calendar_id=calendar_id,
                                  event_id=event_id,
                                  event_id1=event_id1,
                                  new_reminder_time=new_reminder_time)


def usersactions_user_calendar_event_instance_tentatively_accept(client,
                                                                 user_id,
                                                                 calendar_id,
                                                                 event_id,
                                                                 event_id1,
                                                                 comment=None,
                                                                 send_response=None):
    if send_response is None:
        send_response = False
    return client.tentatively_accept(user_id=user_id,
                                     calendar_id=calendar_id,
                                     event_id=event_id,
                                     event_id1=event_id1,
                                     comment=comment,
                                     send_response=send_response)


def usersactions_user_calendar_event_accept(client,
                                            user_id,
                                            calendar_id,
                                            event_id,
                                            comment=None,
                                            send_response=None):
    if send_response is None:
        send_response = False
    return client.accept(user_id=user_id,
                         calendar_id=calendar_id,
                         event_id=event_id,
                         comment=comment,
                         send_response=send_response)


def usersactions_user_calendar_event_decline(client,
                                             user_id,
                                             calendar_id,
                                             event_id,
                                             comment=None,
                                             send_response=None):
    if send_response is None:
        send_response = False
    return client.decline(user_id=user_id,
                          calendar_id=calendar_id,
                          event_id=event_id,
                          comment=comment,
                          send_response=send_response)


def usersactions_user_calendar_event_dismiss_reminder(client,
                                                      user_id,
                                                      calendar_id,
                                                      event_id):
    return client.dismiss_reminder(user_id=user_id,
                                   calendar_id=calendar_id,
                                   event_id=event_id)


def usersactions_user_calendar_event_snooze_reminder(client,
                                                     user_id,
                                                     calendar_id,
                                                     event_id,
                                                     new_reminder_time=None):
    return client.snooze_reminder(user_id=user_id,
                                  calendar_id=calendar_id,
                                  event_id=event_id,
                                  new_reminder_time=new_reminder_time)


def usersactions_user_calendar_event_tentatively_accept(client,
                                                        user_id,
                                                        calendar_id,
                                                        event_id,
                                                        comment=None,
                                                        send_response=None):
    if send_response is None:
        send_response = False
    return client.tentatively_accept(user_id=user_id,
                                     calendar_id=calendar_id,
                                     event_id=event_id,
                                     comment=comment,
                                     send_response=send_response)


def usersactions_user_calendar_get_schedule(client,
                                            user_id,
                                            calendar_id,
                                            schedules=None,
                                            end_time=None,
                                            start_time=None,
                                            availability_view_interval=None):
    return client.get_schedule(user_id=user_id,
                               calendar_id=calendar_id,
                               schedules=schedules,
                               end_time=end_time,
                               start_time=start_time,
                               availability_view_interval=availability_view_interval)


def usersactions_user_calendar_view_attachment_create_upload_session(client,
                                                                     user_id,
                                                                     event_id,
                                                                     attachment_item=None):
    return client.create_upload_session(user_id=user_id,
                                        event_id=event_id,
                                        attachment_item=attachment_item)


def usersactions_user_calendar_view_calendar_calendar_view_accept(client,
                                                                  user_id,
                                                                  event_id,
                                                                  event_id1,
                                                                  comment=None,
                                                                  send_response=None):
    if send_response is None:
        send_response = False
    return client.accept(user_id=user_id,
                         event_id=event_id,
                         event_id1=event_id1,
                         comment=comment,
                         send_response=send_response)


def usersactions_user_calendar_view_calendar_calendar_view_decline(client,
                                                                   user_id,
                                                                   event_id,
                                                                   event_id1,
                                                                   comment=None,
                                                                   send_response=None):
    if send_response is None:
        send_response = False
    return client.decline(user_id=user_id,
                          event_id=event_id,
                          event_id1=event_id1,
                          comment=comment,
                          send_response=send_response)


def usersactions_user_calendar_view_calendar_calendar_view_dismiss_reminder(client,
                                                                            user_id,
                                                                            event_id,
                                                                            event_id1):
    return client.dismiss_reminder(user_id=user_id,
                                   event_id=event_id,
                                   event_id1=event_id1)


def usersactions_user_calendar_view_calendar_calendar_view_snooze_reminder(client,
                                                                           user_id,
                                                                           event_id,
                                                                           event_id1,
                                                                           new_reminder_time=None):
    return client.snooze_reminder(user_id=user_id,
                                  event_id=event_id,
                                  event_id1=event_id1,
                                  new_reminder_time=new_reminder_time)


def usersactions_user_calendar_view_calendar_calendar_view_tentatively_accept(client,
                                                                              user_id,
                                                                              event_id,
                                                                              event_id1,
                                                                              comment=None,
                                                                              send_response=None):
    if send_response is None:
        send_response = False
    return client.tentatively_accept(user_id=user_id,
                                     event_id=event_id,
                                     event_id1=event_id1,
                                     comment=comment,
                                     send_response=send_response)


def usersactions_user_calendar_view_calendar_event_accept(client,
                                                          user_id,
                                                          event_id,
                                                          event_id1,
                                                          comment=None,
                                                          send_response=None):
    if send_response is None:
        send_response = False
    return client.accept(user_id=user_id,
                         event_id=event_id,
                         event_id1=event_id1,
                         comment=comment,
                         send_response=send_response)


def usersactions_user_calendar_view_calendar_event_decline(client,
                                                           user_id,
                                                           event_id,
                                                           event_id1,
                                                           comment=None,
                                                           send_response=None):
    if send_response is None:
        send_response = False
    return client.decline(user_id=user_id,
                          event_id=event_id,
                          event_id1=event_id1,
                          comment=comment,
                          send_response=send_response)


def usersactions_user_calendar_view_calendar_event_dismiss_reminder(client,
                                                                    user_id,
                                                                    event_id,
                                                                    event_id1):
    return client.dismiss_reminder(user_id=user_id,
                                   event_id=event_id,
                                   event_id1=event_id1)


def usersactions_user_calendar_view_calendar_event_snooze_reminder(client,
                                                                   user_id,
                                                                   event_id,
                                                                   event_id1,
                                                                   new_reminder_time=None):
    return client.snooze_reminder(user_id=user_id,
                                  event_id=event_id,
                                  event_id1=event_id1,
                                  new_reminder_time=new_reminder_time)


def usersactions_user_calendar_view_calendar_event_tentatively_accept(client,
                                                                      user_id,
                                                                      event_id,
                                                                      event_id1,
                                                                      comment=None,
                                                                      send_response=None):
    if send_response is None:
        send_response = False
    return client.tentatively_accept(user_id=user_id,
                                     event_id=event_id,
                                     event_id1=event_id1,
                                     comment=comment,
                                     send_response=send_response)


def usersactions_user_calendar_view_calendar_get_schedule(client,
                                                          user_id,
                                                          event_id,
                                                          schedules=None,
                                                          end_time=None,
                                                          start_time=None,
                                                          availability_view_interval=None):
    return client.get_schedule(user_id=user_id,
                               event_id=event_id,
                               schedules=schedules,
                               end_time=end_time,
                               start_time=start_time,
                               availability_view_interval=availability_view_interval)


def usersactions_user_calendar_view_instance_accept(client,
                                                    user_id,
                                                    event_id,
                                                    event_id1,
                                                    comment=None,
                                                    send_response=None):
    if send_response is None:
        send_response = False
    return client.accept(user_id=user_id,
                         event_id=event_id,
                         event_id1=event_id1,
                         comment=comment,
                         send_response=send_response)


def usersactions_user_calendar_view_instance_decline(client,
                                                     user_id,
                                                     event_id,
                                                     event_id1,
                                                     comment=None,
                                                     send_response=None):
    if send_response is None:
        send_response = False
    return client.decline(user_id=user_id,
                          event_id=event_id,
                          event_id1=event_id1,
                          comment=comment,
                          send_response=send_response)


def usersactions_user_calendar_view_instance_dismiss_reminder(client,
                                                              user_id,
                                                              event_id,
                                                              event_id1):
    return client.dismiss_reminder(user_id=user_id,
                                   event_id=event_id,
                                   event_id1=event_id1)


def usersactions_user_calendar_view_instance_snooze_reminder(client,
                                                             user_id,
                                                             event_id,
                                                             event_id1,
                                                             new_reminder_time=None):
    return client.snooze_reminder(user_id=user_id,
                                  event_id=event_id,
                                  event_id1=event_id1,
                                  new_reminder_time=new_reminder_time)


def usersactions_user_calendar_view_instance_tentatively_accept(client,
                                                                user_id,
                                                                event_id,
                                                                event_id1,
                                                                comment=None,
                                                                send_response=None):
    if send_response is None:
        send_response = False
    return client.tentatively_accept(user_id=user_id,
                                     event_id=event_id,
                                     event_id1=event_id1,
                                     comment=comment,
                                     send_response=send_response)


def usersactions_user_calendar_view_accept(client,
                                           user_id,
                                           event_id,
                                           comment=None,
                                           send_response=None):
    if send_response is None:
        send_response = False
    return client.accept(user_id=user_id,
                         event_id=event_id,
                         comment=comment,
                         send_response=send_response)


def usersactions_user_calendar_view_decline(client,
                                            user_id,
                                            event_id,
                                            comment=None,
                                            send_response=None):
    if send_response is None:
        send_response = False
    return client.decline(user_id=user_id,
                          event_id=event_id,
                          comment=comment,
                          send_response=send_response)


def usersactions_user_calendar_view_dismiss_reminder(client,
                                                     user_id,
                                                     event_id):
    return client.dismiss_reminder(user_id=user_id,
                                   event_id=event_id)


def usersactions_user_calendar_view_snooze_reminder(client,
                                                    user_id,
                                                    event_id,
                                                    new_reminder_time=None):
    return client.snooze_reminder(user_id=user_id,
                                  event_id=event_id,
                                  new_reminder_time=new_reminder_time)


def usersactions_user_calendar_view_tentatively_accept(client,
                                                       user_id,
                                                       event_id,
                                                       comment=None,
                                                       send_response=None):
    if send_response is None:
        send_response = False
    return client.tentatively_accept(user_id=user_id,
                                     event_id=event_id,
                                     comment=comment,
                                     send_response=send_response)


def usersactions_user_event_attachment_create_upload_session(client,
                                                             user_id,
                                                             event_id,
                                                             attachment_item=None):
    return client.create_upload_session(user_id=user_id,
                                        event_id=event_id,
                                        attachment_item=attachment_item)


def usersactions_user_event_calendar_calendar_view_accept(client,
                                                          user_id,
                                                          event_id,
                                                          event_id1,
                                                          comment=None,
                                                          send_response=None):
    if send_response is None:
        send_response = False
    return client.accept(user_id=user_id,
                         event_id=event_id,
                         event_id1=event_id1,
                         comment=comment,
                         send_response=send_response)


def usersactions_user_event_calendar_calendar_view_decline(client,
                                                           user_id,
                                                           event_id,
                                                           event_id1,
                                                           comment=None,
                                                           send_response=None):
    if send_response is None:
        send_response = False
    return client.decline(user_id=user_id,
                          event_id=event_id,
                          event_id1=event_id1,
                          comment=comment,
                          send_response=send_response)


def usersactions_user_event_calendar_calendar_view_dismiss_reminder(client,
                                                                    user_id,
                                                                    event_id,
                                                                    event_id1):
    return client.dismiss_reminder(user_id=user_id,
                                   event_id=event_id,
                                   event_id1=event_id1)


def usersactions_user_event_calendar_calendar_view_snooze_reminder(client,
                                                                   user_id,
                                                                   event_id,
                                                                   event_id1,
                                                                   new_reminder_time=None):
    return client.snooze_reminder(user_id=user_id,
                                  event_id=event_id,
                                  event_id1=event_id1,
                                  new_reminder_time=new_reminder_time)


def usersactions_user_event_calendar_calendar_view_tentatively_accept(client,
                                                                      user_id,
                                                                      event_id,
                                                                      event_id1,
                                                                      comment=None,
                                                                      send_response=None):
    if send_response is None:
        send_response = False
    return client.tentatively_accept(user_id=user_id,
                                     event_id=event_id,
                                     event_id1=event_id1,
                                     comment=comment,
                                     send_response=send_response)


def usersactions_user_event_calendar_event_accept(client,
                                                  user_id,
                                                  event_id,
                                                  event_id1,
                                                  comment=None,
                                                  send_response=None):
    if send_response is None:
        send_response = False
    return client.accept(user_id=user_id,
                         event_id=event_id,
                         event_id1=event_id1,
                         comment=comment,
                         send_response=send_response)


def usersactions_user_event_calendar_event_decline(client,
                                                   user_id,
                                                   event_id,
                                                   event_id1,
                                                   comment=None,
                                                   send_response=None):
    if send_response is None:
        send_response = False
    return client.decline(user_id=user_id,
                          event_id=event_id,
                          event_id1=event_id1,
                          comment=comment,
                          send_response=send_response)


def usersactions_user_event_calendar_event_dismiss_reminder(client,
                                                            user_id,
                                                            event_id,
                                                            event_id1):
    return client.dismiss_reminder(user_id=user_id,
                                   event_id=event_id,
                                   event_id1=event_id1)


def usersactions_user_event_calendar_event_snooze_reminder(client,
                                                           user_id,
                                                           event_id,
                                                           event_id1,
                                                           new_reminder_time=None):
    return client.snooze_reminder(user_id=user_id,
                                  event_id=event_id,
                                  event_id1=event_id1,
                                  new_reminder_time=new_reminder_time)


def usersactions_user_event_calendar_event_tentatively_accept(client,
                                                              user_id,
                                                              event_id,
                                                              event_id1,
                                                              comment=None,
                                                              send_response=None):
    if send_response is None:
        send_response = False
    return client.tentatively_accept(user_id=user_id,
                                     event_id=event_id,
                                     event_id1=event_id1,
                                     comment=comment,
                                     send_response=send_response)


def usersactions_user_event_calendar_get_schedule(client,
                                                  user_id,
                                                  event_id,
                                                  schedules=None,
                                                  end_time=None,
                                                  start_time=None,
                                                  availability_view_interval=None):
    return client.get_schedule(user_id=user_id,
                               event_id=event_id,
                               schedules=schedules,
                               end_time=end_time,
                               start_time=start_time,
                               availability_view_interval=availability_view_interval)


def usersactions_user_event_instance_accept(client,
                                            user_id,
                                            event_id,
                                            event_id1,
                                            comment=None,
                                            send_response=None):
    if send_response is None:
        send_response = False
    return client.accept(user_id=user_id,
                         event_id=event_id,
                         event_id1=event_id1,
                         comment=comment,
                         send_response=send_response)


def usersactions_user_event_instance_decline(client,
                                             user_id,
                                             event_id,
                                             event_id1,
                                             comment=None,
                                             send_response=None):
    if send_response is None:
        send_response = False
    return client.decline(user_id=user_id,
                          event_id=event_id,
                          event_id1=event_id1,
                          comment=comment,
                          send_response=send_response)


def usersactions_user_event_instance_dismiss_reminder(client,
                                                      user_id,
                                                      event_id,
                                                      event_id1):
    return client.dismiss_reminder(user_id=user_id,
                                   event_id=event_id,
                                   event_id1=event_id1)


def usersactions_user_event_instance_snooze_reminder(client,
                                                     user_id,
                                                     event_id,
                                                     event_id1,
                                                     new_reminder_time=None):
    return client.snooze_reminder(user_id=user_id,
                                  event_id=event_id,
                                  event_id1=event_id1,
                                  new_reminder_time=new_reminder_time)


def usersactions_user_event_instance_tentatively_accept(client,
                                                        user_id,
                                                        event_id,
                                                        event_id1,
                                                        comment=None,
                                                        send_response=None):
    if send_response is None:
        send_response = False
    return client.tentatively_accept(user_id=user_id,
                                     event_id=event_id,
                                     event_id1=event_id1,
                                     comment=comment,
                                     send_response=send_response)


def usersactions_user_event_accept(client,
                                   user_id,
                                   event_id,
                                   comment=None,
                                   send_response=None):
    if send_response is None:
        send_response = False
    return client.accept(user_id=user_id,
                         event_id=event_id,
                         comment=comment,
                         send_response=send_response)


def usersactions_user_event_decline(client,
                                    user_id,
                                    event_id,
                                    comment=None,
                                    send_response=None):
    if send_response is None:
        send_response = False
    return client.decline(user_id=user_id,
                          event_id=event_id,
                          comment=comment,
                          send_response=send_response)


def usersactions_user_event_dismiss_reminder(client,
                                             user_id,
                                             event_id):
    return client.dismiss_reminder(user_id=user_id,
                                   event_id=event_id)


def usersactions_user_event_snooze_reminder(client,
                                            user_id,
                                            event_id,
                                            new_reminder_time=None):
    return client.snooze_reminder(user_id=user_id,
                                  event_id=event_id,
                                  new_reminder_time=new_reminder_time)


def usersactions_user_event_tentatively_accept(client,
                                               user_id,
                                               event_id,
                                               comment=None,
                                               send_response=None):
    if send_response is None:
        send_response = False
    return client.tentatively_accept(user_id=user_id,
                                     event_id=event_id,
                                     comment=comment,
                                     send_response=send_response)


def usersactions_user_mail_folder_child_folder_copy(client,
                                                    user_id,
                                                    mail_folder_id,
                                                    mail_folder_id1,
                                                    destination_id=None):
    return client.copy(user_id=user_id,
                       mail_folder_id=mail_folder_id,
                       mail_folder_id1=mail_folder_id1,
                       destination_id=destination_id)


def usersactions_user_mail_folder_child_folder_move(client,
                                                    user_id,
                                                    mail_folder_id,
                                                    mail_folder_id1,
                                                    destination_id=None):
    return client.move(user_id=user_id,
                       mail_folder_id=mail_folder_id,
                       mail_folder_id1=mail_folder_id1,
                       destination_id=destination_id)


def usersactions_user_mail_folder_message_attachment_create_upload_session(client,
                                                                           user_id,
                                                                           mail_folder_id,
                                                                           message_id,
                                                                           attachment_item=None):
    return client.create_upload_session(user_id=user_id,
                                        mail_folder_id=mail_folder_id,
                                        message_id=message_id,
                                        attachment_item=attachment_item)


def usersactions_user_mail_folder_message_copy(client,
                                               user_id,
                                               mail_folder_id,
                                               message_id,
                                               destination_id=None):
    return client.copy(user_id=user_id,
                       mail_folder_id=mail_folder_id,
                       message_id=message_id,
                       destination_id=destination_id)


def usersactions_user_mail_folder_message_create_forward(client,
                                                         user_id,
                                                         mail_folder_id,
                                                         message_id,
                                                         body,
                                                         to_recipients=None,
                                                         comment=None,
                                                         id_=None,
                                                         categories=None,
                                                         change_key=None,
                                                         created_date_time=None,
                                                         last_modified_date_time=None,
                                                         bcc_recipients=None,
                                                         body_preview=None,
                                                         cc_recipients=None,
                                                         conversation_id=None,
                                                         conversation_index=None,
                                                         flag=None,
                                                         from=None,
                                                         has_attachments=None,
                                                         importance=None,
                                                         inference_classification=None,
                                                         internet_message_headers=None,
                                                         internet_message_id=None,
                                                         is_delivery_receipt_requested=None,
                                                         is_draft=None,
                                                         is_read=None,
                                                         is_read_receipt_requested=None,
                                                         parent_folder_id=None,
                                                         received_date_time=None,
                                                         reply_to=None,
                                                         sender=None,
                                                         sent_date_time=None,
                                                         subject=None,
                                                         microsoft_graph_message_to_recipients=None,
                                                         unique_body=None,
                                                         web_link=None,
                                                         attachments=None,
                                                         extensions=None,
                                                         multi_value_extended_properties=None,
                                                         single_value_extended_properties=None):
    return client.create_forward(user_id=user_id,
                                 mail_folder_id=mail_folder_id,
                                 message_id=message_id,
                                 to_recipients=to_recipients,
                                 comment=comment,
                                 id=id_,
                                 categories=categories,
                                 change_key=change_key,
                                 created_date_time=created_date_time,
                                 last_modified_date_time=last_modified_date_time,
                                 bcc_recipients=bcc_recipients,
                                 body=body,
                                 body_preview=body_preview,
                                 cc_recipients=cc_recipients,
                                 conversation_id=conversation_id,
                                 conversation_index=conversation_index,
                                 flag=flag,
                                 from_parameter=from,
                                 has_attachments=has_attachments,
                                 importance=importance,
                                 inference_classification=inference_classification,
                                 internet_message_headers=internet_message_headers,
                                 internet_message_id=internet_message_id,
                                 is_delivery_receipt_requested=is_delivery_receipt_requested,
                                 is_draft=is_draft,
                                 is_read=is_read,
                                 is_read_receipt_requested=is_read_receipt_requested,
                                 parent_folder_id=parent_folder_id,
                                 received_date_time=received_date_time,
                                 reply_to=reply_to,
                                 sender=sender,
                                 sent_date_time=sent_date_time,
                                 subject=subject,
                                 microsoft_graph_message_to_recipients=microsoft_graph_message_to_recipients,
                                 unique_body=unique_body,
                                 web_link=web_link,
                                 attachments=attachments,
                                 extensions=extensions,
                                 multi_value_extended_properties=multi_value_extended_properties,
                                 single_value_extended_properties=single_value_extended_properties)


def usersactions_user_mail_folder_message_create_reply(client,
                                                       user_id,
                                                       mail_folder_id,
                                                       message_id,
                                                       body,
                                                       comment=None,
                                                       id_=None,
                                                       categories=None,
                                                       change_key=None,
                                                       created_date_time=None,
                                                       last_modified_date_time=None,
                                                       bcc_recipients=None,
                                                       body_preview=None,
                                                       cc_recipients=None,
                                                       conversation_id=None,
                                                       conversation_index=None,
                                                       flag=None,
                                                       from=None,
                                                       has_attachments=None,
                                                       importance=None,
                                                       inference_classification=None,
                                                       internet_message_headers=None,
                                                       internet_message_id=None,
                                                       is_delivery_receipt_requested=None,
                                                       is_draft=None,
                                                       is_read=None,
                                                       is_read_receipt_requested=None,
                                                       parent_folder_id=None,
                                                       received_date_time=None,
                                                       reply_to=None,
                                                       sender=None,
                                                       sent_date_time=None,
                                                       subject=None,
                                                       to_recipients=None,
                                                       unique_body=None,
                                                       web_link=None,
                                                       attachments=None,
                                                       extensions=None,
                                                       multi_value_extended_properties=None,
                                                       single_value_extended_properties=None):
    return client.create_reply(user_id=user_id,
                               mail_folder_id=mail_folder_id,
                               message_id=message_id,
                               comment=comment,
                               id=id_,
                               categories=categories,
                               change_key=change_key,
                               created_date_time=created_date_time,
                               last_modified_date_time=last_modified_date_time,
                               bcc_recipients=bcc_recipients,
                               body=body,
                               body_preview=body_preview,
                               cc_recipients=cc_recipients,
                               conversation_id=conversation_id,
                               conversation_index=conversation_index,
                               flag=flag,
                               from_parameter=from,
                               has_attachments=has_attachments,
                               importance=importance,
                               inference_classification=inference_classification,
                               internet_message_headers=internet_message_headers,
                               internet_message_id=internet_message_id,
                               is_delivery_receipt_requested=is_delivery_receipt_requested,
                               is_draft=is_draft,
                               is_read=is_read,
                               is_read_receipt_requested=is_read_receipt_requested,
                               parent_folder_id=parent_folder_id,
                               received_date_time=received_date_time,
                               reply_to=reply_to,
                               sender=sender,
                               sent_date_time=sent_date_time,
                               subject=subject,
                               to_recipients=to_recipients,
                               unique_body=unique_body,
                               web_link=web_link,
                               attachments=attachments,
                               extensions=extensions,
                               multi_value_extended_properties=multi_value_extended_properties,
                               single_value_extended_properties=single_value_extended_properties)


def usersactions_user_mail_folder_message_create_reply_all(client,
                                                           user_id,
                                                           mail_folder_id,
                                                           message_id,
                                                           body,
                                                           comment=None,
                                                           id_=None,
                                                           categories=None,
                                                           change_key=None,
                                                           created_date_time=None,
                                                           last_modified_date_time=None,
                                                           bcc_recipients=None,
                                                           body_preview=None,
                                                           cc_recipients=None,
                                                           conversation_id=None,
                                                           conversation_index=None,
                                                           flag=None,
                                                           from=None,
                                                           has_attachments=None,
                                                           importance=None,
                                                           inference_classification=None,
                                                           internet_message_headers=None,
                                                           internet_message_id=None,
                                                           is_delivery_receipt_requested=None,
                                                           is_draft=None,
                                                           is_read=None,
                                                           is_read_receipt_requested=None,
                                                           parent_folder_id=None,
                                                           received_date_time=None,
                                                           reply_to=None,
                                                           sender=None,
                                                           sent_date_time=None,
                                                           subject=None,
                                                           to_recipients=None,
                                                           unique_body=None,
                                                           web_link=None,
                                                           attachments=None,
                                                           extensions=None,
                                                           multi_value_extended_properties=None,
                                                           single_value_extended_properties=None):
    return client.create_reply_all(user_id=user_id,
                                   mail_folder_id=mail_folder_id,
                                   message_id=message_id,
                                   comment=comment,
                                   id=id_,
                                   categories=categories,
                                   change_key=change_key,
                                   created_date_time=created_date_time,
                                   last_modified_date_time=last_modified_date_time,
                                   bcc_recipients=bcc_recipients,
                                   body=body,
                                   body_preview=body_preview,
                                   cc_recipients=cc_recipients,
                                   conversation_id=conversation_id,
                                   conversation_index=conversation_index,
                                   flag=flag,
                                   from_parameter=from,
                                   has_attachments=has_attachments,
                                   importance=importance,
                                   inference_classification=inference_classification,
                                   internet_message_headers=internet_message_headers,
                                   internet_message_id=internet_message_id,
                                   is_delivery_receipt_requested=is_delivery_receipt_requested,
                                   is_draft=is_draft,
                                   is_read=is_read,
                                   is_read_receipt_requested=is_read_receipt_requested,
                                   parent_folder_id=parent_folder_id,
                                   received_date_time=received_date_time,
                                   reply_to=reply_to,
                                   sender=sender,
                                   sent_date_time=sent_date_time,
                                   subject=subject,
                                   to_recipients=to_recipients,
                                   unique_body=unique_body,
                                   web_link=web_link,
                                   attachments=attachments,
                                   extensions=extensions,
                                   multi_value_extended_properties=multi_value_extended_properties,
                                   single_value_extended_properties=single_value_extended_properties)


def usersactions_user_mail_folder_message_forward(client,
                                                  user_id,
                                                  mail_folder_id,
                                                  message_id,
                                                  body,
                                                  to_recipients=None,
                                                  comment=None,
                                                  id_=None,
                                                  categories=None,
                                                  change_key=None,
                                                  created_date_time=None,
                                                  last_modified_date_time=None,
                                                  bcc_recipients=None,
                                                  body_preview=None,
                                                  cc_recipients=None,
                                                  conversation_id=None,
                                                  conversation_index=None,
                                                  flag=None,
                                                  from=None,
                                                  has_attachments=None,
                                                  importance=None,
                                                  inference_classification=None,
                                                  internet_message_headers=None,
                                                  internet_message_id=None,
                                                  is_delivery_receipt_requested=None,
                                                  is_draft=None,
                                                  is_read=None,
                                                  is_read_receipt_requested=None,
                                                  parent_folder_id=None,
                                                  received_date_time=None,
                                                  reply_to=None,
                                                  sender=None,
                                                  sent_date_time=None,
                                                  subject=None,
                                                  microsoft_graph_message_to_recipients=None,
                                                  unique_body=None,
                                                  web_link=None,
                                                  attachments=None,
                                                  extensions=None,
                                                  multi_value_extended_properties=None,
                                                  single_value_extended_properties=None):
    return client.forward(user_id=user_id,
                          mail_folder_id=mail_folder_id,
                          message_id=message_id,
                          to_recipients=to_recipients,
                          comment=comment,
                          id=id_,
                          categories=categories,
                          change_key=change_key,
                          created_date_time=created_date_time,
                          last_modified_date_time=last_modified_date_time,
                          bcc_recipients=bcc_recipients,
                          body=body,
                          body_preview=body_preview,
                          cc_recipients=cc_recipients,
                          conversation_id=conversation_id,
                          conversation_index=conversation_index,
                          flag=flag,
                          from_parameter=from,
                          has_attachments=has_attachments,
                          importance=importance,
                          inference_classification=inference_classification,
                          internet_message_headers=internet_message_headers,
                          internet_message_id=internet_message_id,
                          is_delivery_receipt_requested=is_delivery_receipt_requested,
                          is_draft=is_draft,
                          is_read=is_read,
                          is_read_receipt_requested=is_read_receipt_requested,
                          parent_folder_id=parent_folder_id,
                          received_date_time=received_date_time,
                          reply_to=reply_to,
                          sender=sender,
                          sent_date_time=sent_date_time,
                          subject=subject,
                          microsoft_graph_message_to_recipients=microsoft_graph_message_to_recipients,
                          unique_body=unique_body,
                          web_link=web_link,
                          attachments=attachments,
                          extensions=extensions,
                          multi_value_extended_properties=multi_value_extended_properties,
                          single_value_extended_properties=single_value_extended_properties)


def usersactions_user_mail_folder_message_move(client,
                                               user_id,
                                               mail_folder_id,
                                               message_id,
                                               destination_id=None):
    return client.move(user_id=user_id,
                       mail_folder_id=mail_folder_id,
                       message_id=message_id,
                       destination_id=destination_id)


def usersactions_user_mail_folder_message_reply(client,
                                                user_id,
                                                mail_folder_id,
                                                message_id,
                                                body,
                                                comment=None,
                                                id_=None,
                                                categories=None,
                                                change_key=None,
                                                created_date_time=None,
                                                last_modified_date_time=None,
                                                bcc_recipients=None,
                                                body_preview=None,
                                                cc_recipients=None,
                                                conversation_id=None,
                                                conversation_index=None,
                                                flag=None,
                                                from=None,
                                                has_attachments=None,
                                                importance=None,
                                                inference_classification=None,
                                                internet_message_headers=None,
                                                internet_message_id=None,
                                                is_delivery_receipt_requested=None,
                                                is_draft=None,
                                                is_read=None,
                                                is_read_receipt_requested=None,
                                                parent_folder_id=None,
                                                received_date_time=None,
                                                reply_to=None,
                                                sender=None,
                                                sent_date_time=None,
                                                subject=None,
                                                to_recipients=None,
                                                unique_body=None,
                                                web_link=None,
                                                attachments=None,
                                                extensions=None,
                                                multi_value_extended_properties=None,
                                                single_value_extended_properties=None):
    return client.reply(user_id=user_id,
                        mail_folder_id=mail_folder_id,
                        message_id=message_id,
                        comment=comment,
                        id=id_,
                        categories=categories,
                        change_key=change_key,
                        created_date_time=created_date_time,
                        last_modified_date_time=last_modified_date_time,
                        bcc_recipients=bcc_recipients,
                        body=body,
                        body_preview=body_preview,
                        cc_recipients=cc_recipients,
                        conversation_id=conversation_id,
                        conversation_index=conversation_index,
                        flag=flag,
                        from_parameter=from,
                        has_attachments=has_attachments,
                        importance=importance,
                        inference_classification=inference_classification,
                        internet_message_headers=internet_message_headers,
                        internet_message_id=internet_message_id,
                        is_delivery_receipt_requested=is_delivery_receipt_requested,
                        is_draft=is_draft,
                        is_read=is_read,
                        is_read_receipt_requested=is_read_receipt_requested,
                        parent_folder_id=parent_folder_id,
                        received_date_time=received_date_time,
                        reply_to=reply_to,
                        sender=sender,
                        sent_date_time=sent_date_time,
                        subject=subject,
                        to_recipients=to_recipients,
                        unique_body=unique_body,
                        web_link=web_link,
                        attachments=attachments,
                        extensions=extensions,
                        multi_value_extended_properties=multi_value_extended_properties,
                        single_value_extended_properties=single_value_extended_properties)


def usersactions_user_mail_folder_message_reply_all(client,
                                                    user_id,
                                                    mail_folder_id,
                                                    message_id,
                                                    body,
                                                    comment=None,
                                                    id_=None,
                                                    categories=None,
                                                    change_key=None,
                                                    created_date_time=None,
                                                    last_modified_date_time=None,
                                                    bcc_recipients=None,
                                                    body_preview=None,
                                                    cc_recipients=None,
                                                    conversation_id=None,
                                                    conversation_index=None,
                                                    flag=None,
                                                    from=None,
                                                    has_attachments=None,
                                                    importance=None,
                                                    inference_classification=None,
                                                    internet_message_headers=None,
                                                    internet_message_id=None,
                                                    is_delivery_receipt_requested=None,
                                                    is_draft=None,
                                                    is_read=None,
                                                    is_read_receipt_requested=None,
                                                    parent_folder_id=None,
                                                    received_date_time=None,
                                                    reply_to=None,
                                                    sender=None,
                                                    sent_date_time=None,
                                                    subject=None,
                                                    to_recipients=None,
                                                    unique_body=None,
                                                    web_link=None,
                                                    attachments=None,
                                                    extensions=None,
                                                    multi_value_extended_properties=None,
                                                    single_value_extended_properties=None):
    return client.reply_all(user_id=user_id,
                            mail_folder_id=mail_folder_id,
                            message_id=message_id,
                            comment=comment,
                            id=id_,
                            categories=categories,
                            change_key=change_key,
                            created_date_time=created_date_time,
                            last_modified_date_time=last_modified_date_time,
                            bcc_recipients=bcc_recipients,
                            body=body,
                            body_preview=body_preview,
                            cc_recipients=cc_recipients,
                            conversation_id=conversation_id,
                            conversation_index=conversation_index,
                            flag=flag,
                            from_parameter=from,
                            has_attachments=has_attachments,
                            importance=importance,
                            inference_classification=inference_classification,
                            internet_message_headers=internet_message_headers,
                            internet_message_id=internet_message_id,
                            is_delivery_receipt_requested=is_delivery_receipt_requested,
                            is_draft=is_draft,
                            is_read=is_read,
                            is_read_receipt_requested=is_read_receipt_requested,
                            parent_folder_id=parent_folder_id,
                            received_date_time=received_date_time,
                            reply_to=reply_to,
                            sender=sender,
                            sent_date_time=sent_date_time,
                            subject=subject,
                            to_recipients=to_recipients,
                            unique_body=unique_body,
                            web_link=web_link,
                            attachments=attachments,
                            extensions=extensions,
                            multi_value_extended_properties=multi_value_extended_properties,
                            single_value_extended_properties=single_value_extended_properties)


def usersactions_user_mail_folder_message_send(client,
                                               user_id,
                                               mail_folder_id,
                                               message_id):
    return client.send(user_id=user_id,
                       mail_folder_id=mail_folder_id,
                       message_id=message_id)


def usersactions_user_mail_folder_copy(client,
                                       user_id,
                                       mail_folder_id,
                                       destination_id=None):
    return client.copy(user_id=user_id,
                       mail_folder_id=mail_folder_id,
                       destination_id=destination_id)


def usersactions_user_mail_folder_move(client,
                                       user_id,
                                       mail_folder_id,
                                       destination_id=None):
    return client.move(user_id=user_id,
                       mail_folder_id=mail_folder_id,
                       destination_id=destination_id)


def usersactions_user_managed_device_bypass_activation_lock(client,
                                                            user_id,
                                                            managed_device_id):
    return client.bypass_activation_lock(user_id=user_id,
                                         managed_device_id=managed_device_id)


def usersactions_user_managed_device_clean_window_device(client,
                                                         user_id,
                                                         managed_device_id,
                                                         keep_user_data=None):
    if keep_user_data is None:
        keep_user_data = False
    return client.clean_window_device(user_id=user_id,
                                      managed_device_id=managed_device_id,
                                      keep_user_data=keep_user_data)


def usersactions_user_managed_device_delete_user_from_shared_apple_device(client,
                                                                          user_id,
                                                                          managed_device_id,
                                                                          user_principal_name=None):
    return client.delete_user_from_shared_apple_device(user_id=user_id,
                                                       managed_device_id=managed_device_id,
                                                       user_principal_name=user_principal_name)


def usersactions_user_managed_device_disable_lost_mode(client,
                                                       user_id,
                                                       managed_device_id):
    return client.disable_lost_mode(user_id=user_id,
                                    managed_device_id=managed_device_id)


def usersactions_user_managed_device_locate_device(client,
                                                   user_id,
                                                   managed_device_id):
    return client.locate_device(user_id=user_id,
                                managed_device_id=managed_device_id)


def usersactions_user_managed_device_logout_shared_apple_device_active_user(client,
                                                                            user_id,
                                                                            managed_device_id):
    return client.logout_shared_apple_device_active_user(user_id=user_id,
                                                         managed_device_id=managed_device_id)


def usersactions_user_managed_device_reboot_now(client,
                                                user_id,
                                                managed_device_id):
    return client.reboot_now(user_id=user_id,
                             managed_device_id=managed_device_id)


def usersactions_user_managed_device_recover_passcode(client,
                                                      user_id,
                                                      managed_device_id):
    return client.recover_passcode(user_id=user_id,
                                   managed_device_id=managed_device_id)


def usersactions_user_managed_device_remote_lock(client,
                                                 user_id,
                                                 managed_device_id):
    return client.remote_lock(user_id=user_id,
                              managed_device_id=managed_device_id)


def usersactions_user_managed_device_request_remote_assistance(client,
                                                               user_id,
                                                               managed_device_id):
    return client.request_remote_assistance(user_id=user_id,
                                            managed_device_id=managed_device_id)


def usersactions_user_managed_device_reset_passcode(client,
                                                    user_id,
                                                    managed_device_id):
    return client.reset_passcode(user_id=user_id,
                                 managed_device_id=managed_device_id)


def usersactions_user_managed_device_retire(client,
                                            user_id,
                                            managed_device_id):
    return client.retire(user_id=user_id,
                         managed_device_id=managed_device_id)


def usersactions_user_managed_device_shut_down(client,
                                               user_id,
                                               managed_device_id):
    return client.shut_down(user_id=user_id,
                            managed_device_id=managed_device_id)


def usersactions_user_managed_device_sync_device(client,
                                                 user_id,
                                                 managed_device_id):
    return client.sync_device(user_id=user_id,
                              managed_device_id=managed_device_id)


def usersactions_user_managed_device_update_window_device_account(client,
                                                                  user_id,
                                                                  managed_device_id,
                                                                  calendar_sync_enabled=None,
                                                                  device_account=None,
                                                                  device_account_email=None,
                                                                  exchange_server=None,
                                                                  password_rotation_enabled=None,
                                                                  session_initiation_protocal_address=None):
    return client.update_window_device_account(user_id=user_id,
                                               managed_device_id=managed_device_id,
                                               calendar_sync_enabled=calendar_sync_enabled,
                                               device_account=device_account,
                                               device_account_email=device_account_email,
                                               exchange_server=exchange_server,
                                               password_rotation_enabled=password_rotation_enabled,
                                               session_initiation_protocal_address=session_initiation_protocal_address)


def usersactions_user_managed_device_window_defender_scan(client,
                                                          user_id,
                                                          managed_device_id,
                                                          quick_scan=None):
    if quick_scan is None:
        quick_scan = False
    return client.window_defender_scan(user_id=user_id,
                                       managed_device_id=managed_device_id,
                                       quick_scan=quick_scan)


def usersactions_user_managed_device_window_defender_update_signature(client,
                                                                      user_id,
                                                                      managed_device_id):
    return client.window_defender_update_signature(user_id=user_id,
                                                   managed_device_id=managed_device_id)


def usersactions_user_managed_device_wipe(client,
                                          user_id,
                                          managed_device_id,
                                          keep_enrollment_data=None,
                                          keep_user_data=None,
                                          mac_os_unlock_code=None):
    if keep_enrollment_data is None:
        keep_enrollment_data = False
    if keep_user_data is None:
        keep_user_data = False
    return client.wipe(user_id=user_id,
                       managed_device_id=managed_device_id,
                       keep_enrollment_data=keep_enrollment_data,
                       keep_user_data=keep_user_data,
                       mac_os_unlock_code=mac_os_unlock_code)


def usersactions_user_message_attachment_create_upload_session(client,
                                                               user_id,
                                                               message_id,
                                                               attachment_item=None):
    return client.create_upload_session(user_id=user_id,
                                        message_id=message_id,
                                        attachment_item=attachment_item)


def usersactions_user_message_copy(client,
                                   user_id,
                                   message_id,
                                   destination_id=None):
    return client.copy(user_id=user_id,
                       message_id=message_id,
                       destination_id=destination_id)


def usersactions_user_message_create_forward(client,
                                             user_id,
                                             message_id,
                                             body,
                                             to_recipients=None,
                                             comment=None,
                                             id_=None,
                                             categories=None,
                                             change_key=None,
                                             created_date_time=None,
                                             last_modified_date_time=None,
                                             bcc_recipients=None,
                                             body_preview=None,
                                             cc_recipients=None,
                                             conversation_id=None,
                                             conversation_index=None,
                                             flag=None,
                                             from=None,
                                             has_attachments=None,
                                             importance=None,
                                             inference_classification=None,
                                             internet_message_headers=None,
                                             internet_message_id=None,
                                             is_delivery_receipt_requested=None,
                                             is_draft=None,
                                             is_read=None,
                                             is_read_receipt_requested=None,
                                             parent_folder_id=None,
                                             received_date_time=None,
                                             reply_to=None,
                                             sender=None,
                                             sent_date_time=None,
                                             subject=None,
                                             microsoft_graph_message_to_recipients=None,
                                             unique_body=None,
                                             web_link=None,
                                             attachments=None,
                                             extensions=None,
                                             multi_value_extended_properties=None,
                                             single_value_extended_properties=None):
    return client.create_forward(user_id=user_id,
                                 message_id=message_id,
                                 to_recipients=to_recipients,
                                 comment=comment,
                                 id=id_,
                                 categories=categories,
                                 change_key=change_key,
                                 created_date_time=created_date_time,
                                 last_modified_date_time=last_modified_date_time,
                                 bcc_recipients=bcc_recipients,
                                 body=body,
                                 body_preview=body_preview,
                                 cc_recipients=cc_recipients,
                                 conversation_id=conversation_id,
                                 conversation_index=conversation_index,
                                 flag=flag,
                                 from_parameter=from,
                                 has_attachments=has_attachments,
                                 importance=importance,
                                 inference_classification=inference_classification,
                                 internet_message_headers=internet_message_headers,
                                 internet_message_id=internet_message_id,
                                 is_delivery_receipt_requested=is_delivery_receipt_requested,
                                 is_draft=is_draft,
                                 is_read=is_read,
                                 is_read_receipt_requested=is_read_receipt_requested,
                                 parent_folder_id=parent_folder_id,
                                 received_date_time=received_date_time,
                                 reply_to=reply_to,
                                 sender=sender,
                                 sent_date_time=sent_date_time,
                                 subject=subject,
                                 microsoft_graph_message_to_recipients=microsoft_graph_message_to_recipients,
                                 unique_body=unique_body,
                                 web_link=web_link,
                                 attachments=attachments,
                                 extensions=extensions,
                                 multi_value_extended_properties=multi_value_extended_properties,
                                 single_value_extended_properties=single_value_extended_properties)


def usersactions_user_message_create_reply(client,
                                           user_id,
                                           message_id,
                                           body,
                                           comment=None,
                                           id_=None,
                                           categories=None,
                                           change_key=None,
                                           created_date_time=None,
                                           last_modified_date_time=None,
                                           bcc_recipients=None,
                                           body_preview=None,
                                           cc_recipients=None,
                                           conversation_id=None,
                                           conversation_index=None,
                                           flag=None,
                                           from=None,
                                           has_attachments=None,
                                           importance=None,
                                           inference_classification=None,
                                           internet_message_headers=None,
                                           internet_message_id=None,
                                           is_delivery_receipt_requested=None,
                                           is_draft=None,
                                           is_read=None,
                                           is_read_receipt_requested=None,
                                           parent_folder_id=None,
                                           received_date_time=None,
                                           reply_to=None,
                                           sender=None,
                                           sent_date_time=None,
                                           subject=None,
                                           to_recipients=None,
                                           unique_body=None,
                                           web_link=None,
                                           attachments=None,
                                           extensions=None,
                                           multi_value_extended_properties=None,
                                           single_value_extended_properties=None):
    return client.create_reply(user_id=user_id,
                               message_id=message_id,
                               comment=comment,
                               id=id_,
                               categories=categories,
                               change_key=change_key,
                               created_date_time=created_date_time,
                               last_modified_date_time=last_modified_date_time,
                               bcc_recipients=bcc_recipients,
                               body=body,
                               body_preview=body_preview,
                               cc_recipients=cc_recipients,
                               conversation_id=conversation_id,
                               conversation_index=conversation_index,
                               flag=flag,
                               from_parameter=from,
                               has_attachments=has_attachments,
                               importance=importance,
                               inference_classification=inference_classification,
                               internet_message_headers=internet_message_headers,
                               internet_message_id=internet_message_id,
                               is_delivery_receipt_requested=is_delivery_receipt_requested,
                               is_draft=is_draft,
                               is_read=is_read,
                               is_read_receipt_requested=is_read_receipt_requested,
                               parent_folder_id=parent_folder_id,
                               received_date_time=received_date_time,
                               reply_to=reply_to,
                               sender=sender,
                               sent_date_time=sent_date_time,
                               subject=subject,
                               to_recipients=to_recipients,
                               unique_body=unique_body,
                               web_link=web_link,
                               attachments=attachments,
                               extensions=extensions,
                               multi_value_extended_properties=multi_value_extended_properties,
                               single_value_extended_properties=single_value_extended_properties)


def usersactions_user_message_create_reply_all(client,
                                               user_id,
                                               message_id,
                                               body,
                                               comment=None,
                                               id_=None,
                                               categories=None,
                                               change_key=None,
                                               created_date_time=None,
                                               last_modified_date_time=None,
                                               bcc_recipients=None,
                                               body_preview=None,
                                               cc_recipients=None,
                                               conversation_id=None,
                                               conversation_index=None,
                                               flag=None,
                                               from=None,
                                               has_attachments=None,
                                               importance=None,
                                               inference_classification=None,
                                               internet_message_headers=None,
                                               internet_message_id=None,
                                               is_delivery_receipt_requested=None,
                                               is_draft=None,
                                               is_read=None,
                                               is_read_receipt_requested=None,
                                               parent_folder_id=None,
                                               received_date_time=None,
                                               reply_to=None,
                                               sender=None,
                                               sent_date_time=None,
                                               subject=None,
                                               to_recipients=None,
                                               unique_body=None,
                                               web_link=None,
                                               attachments=None,
                                               extensions=None,
                                               multi_value_extended_properties=None,
                                               single_value_extended_properties=None):
    return client.create_reply_all(user_id=user_id,
                                   message_id=message_id,
                                   comment=comment,
                                   id=id_,
                                   categories=categories,
                                   change_key=change_key,
                                   created_date_time=created_date_time,
                                   last_modified_date_time=last_modified_date_time,
                                   bcc_recipients=bcc_recipients,
                                   body=body,
                                   body_preview=body_preview,
                                   cc_recipients=cc_recipients,
                                   conversation_id=conversation_id,
                                   conversation_index=conversation_index,
                                   flag=flag,
                                   from_parameter=from,
                                   has_attachments=has_attachments,
                                   importance=importance,
                                   inference_classification=inference_classification,
                                   internet_message_headers=internet_message_headers,
                                   internet_message_id=internet_message_id,
                                   is_delivery_receipt_requested=is_delivery_receipt_requested,
                                   is_draft=is_draft,
                                   is_read=is_read,
                                   is_read_receipt_requested=is_read_receipt_requested,
                                   parent_folder_id=parent_folder_id,
                                   received_date_time=received_date_time,
                                   reply_to=reply_to,
                                   sender=sender,
                                   sent_date_time=sent_date_time,
                                   subject=subject,
                                   to_recipients=to_recipients,
                                   unique_body=unique_body,
                                   web_link=web_link,
                                   attachments=attachments,
                                   extensions=extensions,
                                   multi_value_extended_properties=multi_value_extended_properties,
                                   single_value_extended_properties=single_value_extended_properties)


def usersactions_user_message_forward(client,
                                      user_id,
                                      message_id,
                                      body,
                                      to_recipients=None,
                                      comment=None,
                                      id_=None,
                                      categories=None,
                                      change_key=None,
                                      created_date_time=None,
                                      last_modified_date_time=None,
                                      bcc_recipients=None,
                                      body_preview=None,
                                      cc_recipients=None,
                                      conversation_id=None,
                                      conversation_index=None,
                                      flag=None,
                                      from=None,
                                      has_attachments=None,
                                      importance=None,
                                      inference_classification=None,
                                      internet_message_headers=None,
                                      internet_message_id=None,
                                      is_delivery_receipt_requested=None,
                                      is_draft=None,
                                      is_read=None,
                                      is_read_receipt_requested=None,
                                      parent_folder_id=None,
                                      received_date_time=None,
                                      reply_to=None,
                                      sender=None,
                                      sent_date_time=None,
                                      subject=None,
                                      microsoft_graph_message_to_recipients=None,
                                      unique_body=None,
                                      web_link=None,
                                      attachments=None,
                                      extensions=None,
                                      multi_value_extended_properties=None,
                                      single_value_extended_properties=None):
    return client.forward(user_id=user_id,
                          message_id=message_id,
                          to_recipients=to_recipients,
                          comment=comment,
                          id=id_,
                          categories=categories,
                          change_key=change_key,
                          created_date_time=created_date_time,
                          last_modified_date_time=last_modified_date_time,
                          bcc_recipients=bcc_recipients,
                          body=body,
                          body_preview=body_preview,
                          cc_recipients=cc_recipients,
                          conversation_id=conversation_id,
                          conversation_index=conversation_index,
                          flag=flag,
                          from_parameter=from,
                          has_attachments=has_attachments,
                          importance=importance,
                          inference_classification=inference_classification,
                          internet_message_headers=internet_message_headers,
                          internet_message_id=internet_message_id,
                          is_delivery_receipt_requested=is_delivery_receipt_requested,
                          is_draft=is_draft,
                          is_read=is_read,
                          is_read_receipt_requested=is_read_receipt_requested,
                          parent_folder_id=parent_folder_id,
                          received_date_time=received_date_time,
                          reply_to=reply_to,
                          sender=sender,
                          sent_date_time=sent_date_time,
                          subject=subject,
                          microsoft_graph_message_to_recipients=microsoft_graph_message_to_recipients,
                          unique_body=unique_body,
                          web_link=web_link,
                          attachments=attachments,
                          extensions=extensions,
                          multi_value_extended_properties=multi_value_extended_properties,
                          single_value_extended_properties=single_value_extended_properties)


def usersactions_user_message_move(client,
                                   user_id,
                                   message_id,
                                   destination_id=None):
    return client.move(user_id=user_id,
                       message_id=message_id,
                       destination_id=destination_id)


def usersactions_user_message_reply(client,
                                    user_id,
                                    message_id,
                                    body,
                                    comment=None,
                                    id_=None,
                                    categories=None,
                                    change_key=None,
                                    created_date_time=None,
                                    last_modified_date_time=None,
                                    bcc_recipients=None,
                                    body_preview=None,
                                    cc_recipients=None,
                                    conversation_id=None,
                                    conversation_index=None,
                                    flag=None,
                                    from=None,
                                    has_attachments=None,
                                    importance=None,
                                    inference_classification=None,
                                    internet_message_headers=None,
                                    internet_message_id=None,
                                    is_delivery_receipt_requested=None,
                                    is_draft=None,
                                    is_read=None,
                                    is_read_receipt_requested=None,
                                    parent_folder_id=None,
                                    received_date_time=None,
                                    reply_to=None,
                                    sender=None,
                                    sent_date_time=None,
                                    subject=None,
                                    to_recipients=None,
                                    unique_body=None,
                                    web_link=None,
                                    attachments=None,
                                    extensions=None,
                                    multi_value_extended_properties=None,
                                    single_value_extended_properties=None):
    return client.reply(user_id=user_id,
                        message_id=message_id,
                        comment=comment,
                        id=id_,
                        categories=categories,
                        change_key=change_key,
                        created_date_time=created_date_time,
                        last_modified_date_time=last_modified_date_time,
                        bcc_recipients=bcc_recipients,
                        body=body,
                        body_preview=body_preview,
                        cc_recipients=cc_recipients,
                        conversation_id=conversation_id,
                        conversation_index=conversation_index,
                        flag=flag,
                        from_parameter=from,
                        has_attachments=has_attachments,
                        importance=importance,
                        inference_classification=inference_classification,
                        internet_message_headers=internet_message_headers,
                        internet_message_id=internet_message_id,
                        is_delivery_receipt_requested=is_delivery_receipt_requested,
                        is_draft=is_draft,
                        is_read=is_read,
                        is_read_receipt_requested=is_read_receipt_requested,
                        parent_folder_id=parent_folder_id,
                        received_date_time=received_date_time,
                        reply_to=reply_to,
                        sender=sender,
                        sent_date_time=sent_date_time,
                        subject=subject,
                        to_recipients=to_recipients,
                        unique_body=unique_body,
                        web_link=web_link,
                        attachments=attachments,
                        extensions=extensions,
                        multi_value_extended_properties=multi_value_extended_properties,
                        single_value_extended_properties=single_value_extended_properties)


def usersactions_user_message_reply_all(client,
                                        user_id,
                                        message_id,
                                        body,
                                        comment=None,
                                        id_=None,
                                        categories=None,
                                        change_key=None,
                                        created_date_time=None,
                                        last_modified_date_time=None,
                                        bcc_recipients=None,
                                        body_preview=None,
                                        cc_recipients=None,
                                        conversation_id=None,
                                        conversation_index=None,
                                        flag=None,
                                        from=None,
                                        has_attachments=None,
                                        importance=None,
                                        inference_classification=None,
                                        internet_message_headers=None,
                                        internet_message_id=None,
                                        is_delivery_receipt_requested=None,
                                        is_draft=None,
                                        is_read=None,
                                        is_read_receipt_requested=None,
                                        parent_folder_id=None,
                                        received_date_time=None,
                                        reply_to=None,
                                        sender=None,
                                        sent_date_time=None,
                                        subject=None,
                                        to_recipients=None,
                                        unique_body=None,
                                        web_link=None,
                                        attachments=None,
                                        extensions=None,
                                        multi_value_extended_properties=None,
                                        single_value_extended_properties=None):
    return client.reply_all(user_id=user_id,
                            message_id=message_id,
                            comment=comment,
                            id=id_,
                            categories=categories,
                            change_key=change_key,
                            created_date_time=created_date_time,
                            last_modified_date_time=last_modified_date_time,
                            bcc_recipients=bcc_recipients,
                            body=body,
                            body_preview=body_preview,
                            cc_recipients=cc_recipients,
                            conversation_id=conversation_id,
                            conversation_index=conversation_index,
                            flag=flag,
                            from_parameter=from,
                            has_attachments=has_attachments,
                            importance=importance,
                            inference_classification=inference_classification,
                            internet_message_headers=internet_message_headers,
                            internet_message_id=internet_message_id,
                            is_delivery_receipt_requested=is_delivery_receipt_requested,
                            is_draft=is_draft,
                            is_read=is_read,
                            is_read_receipt_requested=is_read_receipt_requested,
                            parent_folder_id=parent_folder_id,
                            received_date_time=received_date_time,
                            reply_to=reply_to,
                            sender=sender,
                            sent_date_time=sent_date_time,
                            subject=subject,
                            to_recipients=to_recipients,
                            unique_body=unique_body,
                            web_link=web_link,
                            attachments=attachments,
                            extensions=extensions,
                            multi_value_extended_properties=multi_value_extended_properties,
                            single_value_extended_properties=single_value_extended_properties)


def usersactions_user_message_send(client,
                                   user_id,
                                   message_id):
    return client.send(user_id=user_id,
                       message_id=message_id)


def usersactions_user_assign_license(client,
                                     user_id,
                                     add_licenses=None,
                                     remove_licenses=None):
    return client.assign_license(user_id=user_id,
                                 add_licenses=add_licenses,
                                 remove_licenses=remove_licenses)


def usersactions_user_change_password(client,
                                      user_id,
                                      current_password=None,
                                      new_password=None):
    return client.change_password(user_id=user_id,
                                  current_password=current_password,
                                  new_password=new_password)


def usersactions_user_check_member_group(client,
                                         user_id,
                                         group_ids=None):
    return client.check_member_group(user_id=user_id,
                                     group_ids=group_ids)


def usersactions_user_check_member_object(client,
                                          user_id,
                                          ids=None):
    return client.check_member_object(user_id=user_id,
                                      ids=ids)


def usersactions_user_export_personal_data(client,
                                           user_id,
                                           storage_location=None):
    return client.export_personal_data(user_id=user_id,
                                       storage_location=storage_location)


def usersactions_user_find_meeting_time(client,
                                        user_id,
                                        attendees=None,
                                        meeting_duration=None,
                                        max_candidates=None,
                                        is_organizer_optional=None,
                                        return_suggestion_reasons=None,
                                        minimum_attendee_percentage=None,
                                        activity_domain=None,
                                        time_slots=None,
                                        is_required=None,
                                        locations=None,
                                        suggest_location=None):
    if is_organizer_optional is None:
        is_organizer_optional = False
    if return_suggestion_reasons is None:
        return_suggestion_reasons = False
    return client.find_meeting_time(user_id=user_id,
                                    attendees=attendees,
                                    meeting_duration=meeting_duration,
                                    max_candidates=max_candidates,
                                    is_organizer_optional=is_organizer_optional,
                                    return_suggestion_reasons=return_suggestion_reasons,
                                    minimum_attendee_percentage=minimum_attendee_percentage,
                                    activity_domain=activity_domain,
                                    time_slots=time_slots,
                                    is_required=is_required,
                                    locations=locations,
                                    suggest_location=suggest_location)


def usersactions_user_get_available_extension_property(client,
                                                       is_synced_from_on_premises=None):
    if is_synced_from_on_premises is None:
        is_synced_from_on_premises = False
    return client.get_available_extension_property(is_synced_from_on_premises=is_synced_from_on_premises)


def usersactions_user_get_by_id(client,
                                ids=None,
                                types=None):
    return client.get_by_id(ids=ids,
                            types=types)


def usersactions_user_get_mail_tip(client,
                                   user_id,
                                   email_addresses=None,
                                   mail_tips_options=None):
    return client.get_mail_tip(user_id=user_id,
                               email_addresses=email_addresses,
                               mail_tips_options=mail_tips_options)


def usersactions_user_get_member_group(client,
                                       user_id,
                                       security_enabled_only=None):
    if security_enabled_only is None:
        security_enabled_only = False
    return client.get_member_group(user_id=user_id,
                                   security_enabled_only=security_enabled_only)


def usersactions_user_get_member_object(client,
                                        user_id,
                                        security_enabled_only=None):
    if security_enabled_only is None:
        security_enabled_only = False
    return client.get_member_object(user_id=user_id,
                                    security_enabled_only=security_enabled_only)


def usersactions_user_remove_all_device_from_management(client,
                                                        user_id):
    return client.remove_all_device_from_management(user_id=user_id)


def usersactions_user_reprocess_license_assignment(client,
                                                   user_id):
    return client.reprocess_license_assignment(user_id=user_id)


def usersactions_user_restore(client,
                              user_id):
    return client.restore(user_id=user_id)


def usersactions_user_revoke_sign_in_session(client,
                                             user_id):
    return client.revoke_sign_in_session(user_id=user_id)


def usersactions_user_send_mail(client,
                                user_id,
                                body,
                                save_to_sent_items=None,
                                id_=None,
                                categories=None,
                                change_key=None,
                                created_date_time=None,
                                last_modified_date_time=None,
                                bcc_recipients=None,
                                body_preview=None,
                                cc_recipients=None,
                                conversation_id=None,
                                conversation_index=None,
                                flag=None,
                                from=None,
                                has_attachments=None,
                                importance=None,
                                inference_classification=None,
                                internet_message_headers=None,
                                internet_message_id=None,
                                is_delivery_receipt_requested=None,
                                is_draft=None,
                                is_read=None,
                                is_read_receipt_requested=None,
                                parent_folder_id=None,
                                received_date_time=None,
                                reply_to=None,
                                sender=None,
                                sent_date_time=None,
                                subject=None,
                                to_recipients=None,
                                unique_body=None,
                                web_link=None,
                                attachments=None,
                                extensions=None,
                                multi_value_extended_properties=None,
                                single_value_extended_properties=None):
    if save_to_sent_items is None:
        save_to_sent_items = False
    return client.send_mail(user_id=user_id,
                            save_to_sent_items=save_to_sent_items,
                            id=id_,
                            categories=categories,
                            change_key=change_key,
                            created_date_time=created_date_time,
                            last_modified_date_time=last_modified_date_time,
                            bcc_recipients=bcc_recipients,
                            body=body,
                            body_preview=body_preview,
                            cc_recipients=cc_recipients,
                            conversation_id=conversation_id,
                            conversation_index=conversation_index,
                            flag=flag,
                            from_parameter=from,
                            has_attachments=has_attachments,
                            importance=importance,
                            inference_classification=inference_classification,
                            internet_message_headers=internet_message_headers,
                            internet_message_id=internet_message_id,
                            is_delivery_receipt_requested=is_delivery_receipt_requested,
                            is_draft=is_draft,
                            is_read=is_read,
                            is_read_receipt_requested=is_read_receipt_requested,
                            parent_folder_id=parent_folder_id,
                            received_date_time=received_date_time,
                            reply_to=reply_to,
                            sender=sender,
                            sent_date_time=sent_date_time,
                            subject=subject,
                            to_recipients=to_recipients,
                            unique_body=unique_body,
                            web_link=web_link,
                            attachments=attachments,
                            extensions=extensions,
                            multi_value_extended_properties=multi_value_extended_properties,
                            single_value_extended_properties=single_value_extended_properties)


def usersactions_user_translate_exchange_id(client,
                                            user_id,
                                            input_ids=None,
                                            target_id_type=None,
                                            source_id_type=None):
    return client.translate_exchange_id(user_id=user_id,
                                        input_ids=input_ids,
                                        target_id_type=target_id_type,
                                        source_id_type=source_id_type)


def usersactions_user_validate_property(client,
                                        entity_type=None,
                                        display_name=None,
                                        mail_nickname=None,
                                        on_behalf_of_user_id=None):
    return client.validate_property(entity_type=entity_type,
                                    display_name=display_name,
                                    mail_nickname=mail_nickname,
                                    on_behalf_of_user_id=on_behalf_of_user_id)


def usersactions_user_wipe_managed_app_registration_by_device_tag(client,
                                                                  user_id,
                                                                  device_tag=None):
    return client.wipe_managed_app_registration_by_device_tag(user_id=user_id,
                                                              device_tag=device_tag)


def usersactions_user_onenote_notebook_copy_notebook(client,
                                                     user_id,
                                                     notebook_id,
                                                     group_id=None,
                                                     rename_as=None,
                                                     notebook_folder=None,
                                                     site_collection_id=None,
                                                     site_id=None):
    return client.copy_notebook(user_id=user_id,
                                notebook_id=notebook_id,
                                group_id=group_id,
                                rename_as=rename_as,
                                notebook_folder=notebook_folder,
                                site_collection_id=site_collection_id,
                                site_id=site_id)


def usersactions_user_onenote_notebook_get_notebook_from_web_url(client,
                                                                 user_id,
                                                                 web_url=None):
    return client.get_notebook_from_web_url(user_id=user_id,
                                            web_url=web_url)


def usersactions_user_onenote_notebook_section_group_parent_notebook_copy_notebook(client,
                                                                                   user_id,
                                                                                   notebook_id,
                                                                                   section_group_id,
                                                                                   group_id=None,
                                                                                   rename_as=None,
                                                                                   notebook_folder=None,
                                                                                   site_collection_id=None,
                                                                                   site_id=None):
    return client.copy_notebook(user_id=user_id,
                                notebook_id=notebook_id,
                                section_group_id=section_group_id,
                                group_id=group_id,
                                rename_as=rename_as,
                                notebook_folder=notebook_folder,
                                site_collection_id=site_collection_id,
                                site_id=site_id)


def usersactions_user_onenote_notebook_section_group_section_copy_to_notebook(client,
                                                                              user_id,
                                                                              notebook_id,
                                                                              section_group_id,
                                                                              onenote_section_id,
                                                                              id_=None,
                                                                              group_id=None,
                                                                              rename_as=None,
                                                                              site_collection_id=None,
                                                                              site_id=None):
    return client.copy_to_notebook(user_id=user_id,
                                   notebook_id=notebook_id,
                                   section_group_id=section_group_id,
                                   onenote_section_id=onenote_section_id,
                                   id=id_,
                                   group_id=group_id,
                                   rename_as=rename_as,
                                   site_collection_id=site_collection_id,
                                   site_id=site_id)


def usersactions_user_onenote_notebook_section_group_section_copy_to_section_group(client,
                                                                                   user_id,
                                                                                   notebook_id,
                                                                                   section_group_id,
                                                                                   onenote_section_id,
                                                                                   id_=None,
                                                                                   group_id=None,
                                                                                   rename_as=None,
                                                                                   site_collection_id=None,
                                                                                   site_id=None):
    return client.copy_to_section_group(user_id=user_id,
                                        notebook_id=notebook_id,
                                        section_group_id=section_group_id,
                                        onenote_section_id=onenote_section_id,
                                        id=id_,
                                        group_id=group_id,
                                        rename_as=rename_as,
                                        site_collection_id=site_collection_id,
                                        site_id=site_id)


def usersactions_user_onenote_notebook_section_group_section_page_copy_to_section(client,
                                                                                  user_id,
                                                                                  notebook_id,
                                                                                  section_group_id,
                                                                                  onenote_section_id,
                                                                                  onenote_page_id,
                                                                                  id_=None,
                                                                                  group_id=None,
                                                                                  site_collection_id=None,
                                                                                  site_id=None):
    return client.copy_to_section(user_id=user_id,
                                  notebook_id=notebook_id,
                                  section_group_id=section_group_id,
                                  onenote_section_id=onenote_section_id,
                                  onenote_page_id=onenote_page_id,
                                  id=id_,
                                  group_id=group_id,
                                  site_collection_id=site_collection_id,
                                  site_id=site_id)


def usersactions_user_onenote_notebook_section_group_section_page_onenote_patch_content(client,
                                                                                        user_id,
                                                                                        notebook_id,
                                                                                        section_group_id,
                                                                                        onenote_section_id,
                                                                                        onenote_page_id,
                                                                                        commands=None):
    return client.onenote_patch_content(user_id=user_id,
                                        notebook_id=notebook_id,
                                        section_group_id=section_group_id,
                                        onenote_section_id=onenote_section_id,
                                        onenote_page_id=onenote_page_id,
                                        commands=commands)


def usersactions_user_onenote_notebook_section_group_section_page_parent_notebook_copy_notebook(client,
                                                                                                user_id,
                                                                                                notebook_id,
                                                                                                section_group_id,
                                                                                                onenote_section_id,
                                                                                                onenote_page_id,
                                                                                                group_id=None,
                                                                                                rename_as=None,
                                                                                                notebook_folder=None,
                                                                                                site_collection_id=None,
                                                                                                site_id=None):
    return client.copy_notebook(user_id=user_id,
                                notebook_id=notebook_id,
                                section_group_id=section_group_id,
                                onenote_section_id=onenote_section_id,
                                onenote_page_id=onenote_page_id,
                                group_id=group_id,
                                rename_as=rename_as,
                                notebook_folder=notebook_folder,
                                site_collection_id=site_collection_id,
                                site_id=site_id)


def usersactions_user_onenote_notebook_section_group_section_page_parent_section_copy_to_notebook(client,
                                                                                                  user_id,
                                                                                                  notebook_id,
                                                                                                  section_group_id,
                                                                                                  onenote_section_id,
                                                                                                  onenote_page_id,
                                                                                                  id_=None,
                                                                                                  group_id=None,
                                                                                                  rename_as=None,
                                                                                                  site_collection_id=None,
                                                                                                  site_id=None):
    return client.copy_to_notebook(user_id=user_id,
                                   notebook_id=notebook_id,
                                   section_group_id=section_group_id,
                                   onenote_section_id=onenote_section_id,
                                   onenote_page_id=onenote_page_id,
                                   id=id_,
                                   group_id=group_id,
                                   rename_as=rename_as,
                                   site_collection_id=site_collection_id,
                                   site_id=site_id)


def usersactions_user_onenote_notebook_section_group_section_page_parent_section_copy_to_section_group(client,
                                                                                                       user_id,
                                                                                                       notebook_id,
                                                                                                       section_group_id,
                                                                                                       onenote_section_id,
                                                                                                       onenote_page_id,
                                                                                                       id_=None,
                                                                                                       group_id=None,
                                                                                                       rename_as=None,
                                                                                                       site_collection_id=None,
                                                                                                       site_id=None):
    return client.copy_to_section_group(user_id=user_id,
                                        notebook_id=notebook_id,
                                        section_group_id=section_group_id,
                                        onenote_section_id=onenote_section_id,
                                        onenote_page_id=onenote_page_id,
                                        id=id_,
                                        group_id=group_id,
                                        rename_as=rename_as,
                                        site_collection_id=site_collection_id,
                                        site_id=site_id)


def usersactions_user_onenote_notebook_section_group_section_parent_notebook_copy_notebook(client,
                                                                                           user_id,
                                                                                           notebook_id,
                                                                                           section_group_id,
                                                                                           onenote_section_id,
                                                                                           group_id=None,
                                                                                           rename_as=None,
                                                                                           notebook_folder=None,
                                                                                           site_collection_id=None,
                                                                                           site_id=None):
    return client.copy_notebook(user_id=user_id,
                                notebook_id=notebook_id,
                                section_group_id=section_group_id,
                                onenote_section_id=onenote_section_id,
                                group_id=group_id,
                                rename_as=rename_as,
                                notebook_folder=notebook_folder,
                                site_collection_id=site_collection_id,
                                site_id=site_id)


def usersactions_user_onenote_notebook_section_copy_to_notebook(client,
                                                                user_id,
                                                                notebook_id,
                                                                onenote_section_id,
                                                                id_=None,
                                                                group_id=None,
                                                                rename_as=None,
                                                                site_collection_id=None,
                                                                site_id=None):
    return client.copy_to_notebook(user_id=user_id,
                                   notebook_id=notebook_id,
                                   onenote_section_id=onenote_section_id,
                                   id=id_,
                                   group_id=group_id,
                                   rename_as=rename_as,
                                   site_collection_id=site_collection_id,
                                   site_id=site_id)


def usersactions_user_onenote_notebook_section_copy_to_section_group(client,
                                                                     user_id,
                                                                     notebook_id,
                                                                     onenote_section_id,
                                                                     id_=None,
                                                                     group_id=None,
                                                                     rename_as=None,
                                                                     site_collection_id=None,
                                                                     site_id=None):
    return client.copy_to_section_group(user_id=user_id,
                                        notebook_id=notebook_id,
                                        onenote_section_id=onenote_section_id,
                                        id=id_,
                                        group_id=group_id,
                                        rename_as=rename_as,
                                        site_collection_id=site_collection_id,
                                        site_id=site_id)


def usersactions_user_onenote_notebook_section_page_copy_to_section(client,
                                                                    user_id,
                                                                    notebook_id,
                                                                    onenote_section_id,
                                                                    onenote_page_id,
                                                                    id_=None,
                                                                    group_id=None,
                                                                    site_collection_id=None,
                                                                    site_id=None):
    return client.copy_to_section(user_id=user_id,
                                  notebook_id=notebook_id,
                                  onenote_section_id=onenote_section_id,
                                  onenote_page_id=onenote_page_id,
                                  id=id_,
                                  group_id=group_id,
                                  site_collection_id=site_collection_id,
                                  site_id=site_id)


def usersactions_user_onenote_notebook_section_page_onenote_patch_content(client,
                                                                          user_id,
                                                                          notebook_id,
                                                                          onenote_section_id,
                                                                          onenote_page_id,
                                                                          commands=None):
    return client.onenote_patch_content(user_id=user_id,
                                        notebook_id=notebook_id,
                                        onenote_section_id=onenote_section_id,
                                        onenote_page_id=onenote_page_id,
                                        commands=commands)


def usersactions_user_onenote_notebook_section_page_parent_notebook_copy_notebook(client,
                                                                                  user_id,
                                                                                  notebook_id,
                                                                                  onenote_section_id,
                                                                                  onenote_page_id,
                                                                                  group_id=None,
                                                                                  rename_as=None,
                                                                                  notebook_folder=None,
                                                                                  site_collection_id=None,
                                                                                  site_id=None):
    return client.copy_notebook(user_id=user_id,
                                notebook_id=notebook_id,
                                onenote_section_id=onenote_section_id,
                                onenote_page_id=onenote_page_id,
                                group_id=group_id,
                                rename_as=rename_as,
                                notebook_folder=notebook_folder,
                                site_collection_id=site_collection_id,
                                site_id=site_id)


def usersactions_user_onenote_notebook_section_page_parent_section_copy_to_notebook(client,
                                                                                    user_id,
                                                                                    notebook_id,
                                                                                    onenote_section_id,
                                                                                    onenote_page_id,
                                                                                    id_=None,
                                                                                    group_id=None,
                                                                                    rename_as=None,
                                                                                    site_collection_id=None,
                                                                                    site_id=None):
    return client.copy_to_notebook(user_id=user_id,
                                   notebook_id=notebook_id,
                                   onenote_section_id=onenote_section_id,
                                   onenote_page_id=onenote_page_id,
                                   id=id_,
                                   group_id=group_id,
                                   rename_as=rename_as,
                                   site_collection_id=site_collection_id,
                                   site_id=site_id)


def usersactions_user_onenote_notebook_section_page_parent_section_copy_to_section_group(client,
                                                                                         user_id,
                                                                                         notebook_id,
                                                                                         onenote_section_id,
                                                                                         onenote_page_id,
                                                                                         id_=None,
                                                                                         group_id=None,
                                                                                         rename_as=None,
                                                                                         site_collection_id=None,
                                                                                         site_id=None):
    return client.copy_to_section_group(user_id=user_id,
                                        notebook_id=notebook_id,
                                        onenote_section_id=onenote_section_id,
                                        onenote_page_id=onenote_page_id,
                                        id=id_,
                                        group_id=group_id,
                                        rename_as=rename_as,
                                        site_collection_id=site_collection_id,
                                        site_id=site_id)


def usersactions_user_onenote_notebook_section_parent_notebook_copy_notebook(client,
                                                                             user_id,
                                                                             notebook_id,
                                                                             onenote_section_id,
                                                                             group_id=None,
                                                                             rename_as=None,
                                                                             notebook_folder=None,
                                                                             site_collection_id=None,
                                                                             site_id=None):
    return client.copy_notebook(user_id=user_id,
                                notebook_id=notebook_id,
                                onenote_section_id=onenote_section_id,
                                group_id=group_id,
                                rename_as=rename_as,
                                notebook_folder=notebook_folder,
                                site_collection_id=site_collection_id,
                                site_id=site_id)


def usersactions_user_onenote_notebook_section_parent_section_group_parent_notebook_copy_notebook(client,
                                                                                                  user_id,
                                                                                                  notebook_id,
                                                                                                  onenote_section_id,
                                                                                                  group_id=None,
                                                                                                  rename_as=None,
                                                                                                  notebook_folder=None,
                                                                                                  site_collection_id=None,
                                                                                                  site_id=None):
    return client.copy_notebook(user_id=user_id,
                                notebook_id=notebook_id,
                                onenote_section_id=onenote_section_id,
                                group_id=group_id,
                                rename_as=rename_as,
                                notebook_folder=notebook_folder,
                                site_collection_id=site_collection_id,
                                site_id=site_id)


def usersactions_user_onenote_notebook_section_parent_section_group_section_copy_to_notebook(client,
                                                                                             user_id,
                                                                                             notebook_id,
                                                                                             onenote_section_id,
                                                                                             onenote_section_id1,
                                                                                             id_=None,
                                                                                             group_id=None,
                                                                                             rename_as=None,
                                                                                             site_collection_id=None,
                                                                                             site_id=None):
    return client.copy_to_notebook(user_id=user_id,
                                   notebook_id=notebook_id,
                                   onenote_section_id=onenote_section_id,
                                   onenote_section_id1=onenote_section_id1,
                                   id=id_,
                                   group_id=group_id,
                                   rename_as=rename_as,
                                   site_collection_id=site_collection_id,
                                   site_id=site_id)


def usersactions_user_onenote_notebook_section_parent_section_group_section_copy_to_section_group(client,
                                                                                                  user_id,
                                                                                                  notebook_id,
                                                                                                  onenote_section_id,
                                                                                                  onenote_section_id1,
                                                                                                  id_=None,
                                                                                                  group_id=None,
                                                                                                  rename_as=None,
                                                                                                  site_collection_id=None,
                                                                                                  site_id=None):
    return client.copy_to_section_group(user_id=user_id,
                                        notebook_id=notebook_id,
                                        onenote_section_id=onenote_section_id,
                                        onenote_section_id1=onenote_section_id1,
                                        id=id_,
                                        group_id=group_id,
                                        rename_as=rename_as,
                                        site_collection_id=site_collection_id,
                                        site_id=site_id)


def usersactions_user_onenote_page_copy_to_section(client,
                                                   user_id,
                                                   onenote_page_id,
                                                   id_=None,
                                                   group_id=None,
                                                   site_collection_id=None,
                                                   site_id=None):
    return client.copy_to_section(user_id=user_id,
                                  onenote_page_id=onenote_page_id,
                                  id=id_,
                                  group_id=group_id,
                                  site_collection_id=site_collection_id,
                                  site_id=site_id)


def usersactions_user_onenote_page_onenote_patch_content(client,
                                                         user_id,
                                                         onenote_page_id,
                                                         commands=None):
    return client.onenote_patch_content(user_id=user_id,
                                        onenote_page_id=onenote_page_id,
                                        commands=commands)


def usersactions_user_onenote_page_parent_notebook_copy_notebook(client,
                                                                 user_id,
                                                                 onenote_page_id,
                                                                 group_id=None,
                                                                 rename_as=None,
                                                                 notebook_folder=None,
                                                                 site_collection_id=None,
                                                                 site_id=None):
    return client.copy_notebook(user_id=user_id,
                                onenote_page_id=onenote_page_id,
                                group_id=group_id,
                                rename_as=rename_as,
                                notebook_folder=notebook_folder,
                                site_collection_id=site_collection_id,
                                site_id=site_id)


def usersactions_user_onenote_page_parent_notebook_section_group_parent_notebook_copy_notebook(client,
                                                                                               user_id,
                                                                                               onenote_page_id,
                                                                                               section_group_id,
                                                                                               group_id=None,
                                                                                               rename_as=None,
                                                                                               notebook_folder=None,
                                                                                               site_collection_id=None,
                                                                                               site_id=None):
    return client.copy_notebook(user_id=user_id,
                                onenote_page_id=onenote_page_id,
                                section_group_id=section_group_id,
                                group_id=group_id,
                                rename_as=rename_as,
                                notebook_folder=notebook_folder,
                                site_collection_id=site_collection_id,
                                site_id=site_id)


def usersactions_user_onenote_page_parent_notebook_section_group_section_copy_to_notebook(client,
                                                                                          user_id,
                                                                                          onenote_page_id,
                                                                                          section_group_id,
                                                                                          onenote_section_id,
                                                                                          id_=None,
                                                                                          group_id=None,
                                                                                          rename_as=None,
                                                                                          site_collection_id=None,
                                                                                          site_id=None):
    return client.copy_to_notebook(user_id=user_id,
                                   onenote_page_id=onenote_page_id,
                                   section_group_id=section_group_id,
                                   onenote_section_id=onenote_section_id,
                                   id=id_,
                                   group_id=group_id,
                                   rename_as=rename_as,
                                   site_collection_id=site_collection_id,
                                   site_id=site_id)


def usersactions_user_onenote_page_parent_notebook_section_group_section_copy_to_section_group(client,
                                                                                               user_id,
                                                                                               onenote_page_id,
                                                                                               section_group_id,
                                                                                               onenote_section_id,
                                                                                               id_=None,
                                                                                               group_id=None,
                                                                                               rename_as=None,
                                                                                               site_collection_id=None,
                                                                                               site_id=None):
    return client.copy_to_section_group(user_id=user_id,
                                        onenote_page_id=onenote_page_id,
                                        section_group_id=section_group_id,
                                        onenote_section_id=onenote_section_id,
                                        id=id_,
                                        group_id=group_id,
                                        rename_as=rename_as,
                                        site_collection_id=site_collection_id,
                                        site_id=site_id)


def usersactions_user_onenote_page_parent_notebook_section_group_section_page_copy_to_section(client,
                                                                                              user_id,
                                                                                              onenote_page_id,
                                                                                              section_group_id,
                                                                                              onenote_section_id,
                                                                                              onenote_page_id1,
                                                                                              id_=None,
                                                                                              group_id=None,
                                                                                              site_collection_id=None,
                                                                                              site_id=None):
    return client.copy_to_section(user_id=user_id,
                                  onenote_page_id=onenote_page_id,
                                  section_group_id=section_group_id,
                                  onenote_section_id=onenote_section_id,
                                  onenote_page_id1=onenote_page_id1,
                                  id=id_,
                                  group_id=group_id,
                                  site_collection_id=site_collection_id,
                                  site_id=site_id)


def usersactions_user_onenote_page_parent_notebook_section_group_section_page_onenote_patch_content(client,
                                                                                                    user_id,
                                                                                                    onenote_page_id,
                                                                                                    section_group_id,
                                                                                                    onenote_section_id,
                                                                                                    onenote_page_id1,
                                                                                                    commands=None):
    return client.onenote_patch_content(user_id=user_id,
                                        onenote_page_id=onenote_page_id,
                                        section_group_id=section_group_id,
                                        onenote_section_id=onenote_section_id,
                                        onenote_page_id1=onenote_page_id1,
                                        commands=commands)


def usersactions_user_onenote_page_parent_notebook_section_group_section_parent_notebook_copy_notebook(client,
                                                                                                       user_id,
                                                                                                       onenote_page_id,
                                                                                                       section_group_id,
                                                                                                       onenote_section_id,
                                                                                                       group_id=None,
                                                                                                       rename_as=None,
                                                                                                       notebook_folder=None,
                                                                                                       site_collection_id=None,
                                                                                                       site_id=None):
    return client.copy_notebook(user_id=user_id,
                                onenote_page_id=onenote_page_id,
                                section_group_id=section_group_id,
                                onenote_section_id=onenote_section_id,
                                group_id=group_id,
                                rename_as=rename_as,
                                notebook_folder=notebook_folder,
                                site_collection_id=site_collection_id,
                                site_id=site_id)


def usersactions_user_onenote_page_parent_notebook_section_copy_to_notebook(client,
                                                                            user_id,
                                                                            onenote_page_id,
                                                                            onenote_section_id,
                                                                            id_=None,
                                                                            group_id=None,
                                                                            rename_as=None,
                                                                            site_collection_id=None,
                                                                            site_id=None):
    return client.copy_to_notebook(user_id=user_id,
                                   onenote_page_id=onenote_page_id,
                                   onenote_section_id=onenote_section_id,
                                   id=id_,
                                   group_id=group_id,
                                   rename_as=rename_as,
                                   site_collection_id=site_collection_id,
                                   site_id=site_id)


def usersactions_user_onenote_page_parent_notebook_section_copy_to_section_group(client,
                                                                                 user_id,
                                                                                 onenote_page_id,
                                                                                 onenote_section_id,
                                                                                 id_=None,
                                                                                 group_id=None,
                                                                                 rename_as=None,
                                                                                 site_collection_id=None,
                                                                                 site_id=None):
    return client.copy_to_section_group(user_id=user_id,
                                        onenote_page_id=onenote_page_id,
                                        onenote_section_id=onenote_section_id,
                                        id=id_,
                                        group_id=group_id,
                                        rename_as=rename_as,
                                        site_collection_id=site_collection_id,
                                        site_id=site_id)


def usersactions_user_onenote_page_parent_notebook_section_page_copy_to_section(client,
                                                                                user_id,
                                                                                onenote_page_id,
                                                                                onenote_section_id,
                                                                                onenote_page_id1,
                                                                                id_=None,
                                                                                group_id=None,
                                                                                site_collection_id=None,
                                                                                site_id=None):
    return client.copy_to_section(user_id=user_id,
                                  onenote_page_id=onenote_page_id,
                                  onenote_section_id=onenote_section_id,
                                  onenote_page_id1=onenote_page_id1,
                                  id=id_,
                                  group_id=group_id,
                                  site_collection_id=site_collection_id,
                                  site_id=site_id)


def usersactions_user_onenote_page_parent_notebook_section_page_onenote_patch_content(client,
                                                                                      user_id,
                                                                                      onenote_page_id,
                                                                                      onenote_section_id,
                                                                                      onenote_page_id1,
                                                                                      commands=None):
    return client.onenote_patch_content(user_id=user_id,
                                        onenote_page_id=onenote_page_id,
                                        onenote_section_id=onenote_section_id,
                                        onenote_page_id1=onenote_page_id1,
                                        commands=commands)


def usersactions_user_onenote_page_parent_notebook_section_parent_notebook_copy_notebook(client,
                                                                                         user_id,
                                                                                         onenote_page_id,
                                                                                         onenote_section_id,
                                                                                         group_id=None,
                                                                                         rename_as=None,
                                                                                         notebook_folder=None,
                                                                                         site_collection_id=None,
                                                                                         site_id=None):
    return client.copy_notebook(user_id=user_id,
                                onenote_page_id=onenote_page_id,
                                onenote_section_id=onenote_section_id,
                                group_id=group_id,
                                rename_as=rename_as,
                                notebook_folder=notebook_folder,
                                site_collection_id=site_collection_id,
                                site_id=site_id)


def usersactions_user_onenote_page_parent_notebook_section_parent_section_group_parent_notebook_copy_notebook(client,
                                                                                                              user_id,
                                                                                                              onenote_page_id,
                                                                                                              onenote_section_id,
                                                                                                              group_id=None,
                                                                                                              rename_as=None,
                                                                                                              notebook_folder=None,
                                                                                                              site_collection_id=None,
                                                                                                              site_id=None):
    return client.copy_notebook(user_id=user_id,
                                onenote_page_id=onenote_page_id,
                                onenote_section_id=onenote_section_id,
                                group_id=group_id,
                                rename_as=rename_as,
                                notebook_folder=notebook_folder,
                                site_collection_id=site_collection_id,
                                site_id=site_id)


def usersactions_user_onenote_page_parent_notebook_section_parent_section_group_section_copy_to_notebook(client,
                                                                                                         user_id,
                                                                                                         onenote_page_id,
                                                                                                         onenote_section_id,
                                                                                                         onenote_section_id1,
                                                                                                         id_=None,
                                                                                                         group_id=None,
                                                                                                         rename_as=None,
                                                                                                         site_collection_id=None,
                                                                                                         site_id=None):
    return client.copy_to_notebook(user_id=user_id,
                                   onenote_page_id=onenote_page_id,
                                   onenote_section_id=onenote_section_id,
                                   onenote_section_id1=onenote_section_id1,
                                   id=id_,
                                   group_id=group_id,
                                   rename_as=rename_as,
                                   site_collection_id=site_collection_id,
                                   site_id=site_id)


def usersactions_user_onenote_page_parent_notebook_section_parent_section_group_section_copy_to_section_group(client,
                                                                                                              user_id,
                                                                                                              onenote_page_id,
                                                                                                              onenote_section_id,
                                                                                                              onenote_section_id1,
                                                                                                              id_=None,
                                                                                                              group_id=None,
                                                                                                              rename_as=None,
                                                                                                              site_collection_id=None,
                                                                                                              site_id=None):
    return client.copy_to_section_group(user_id=user_id,
                                        onenote_page_id=onenote_page_id,
                                        onenote_section_id=onenote_section_id,
                                        onenote_section_id1=onenote_section_id1,
                                        id=id_,
                                        group_id=group_id,
                                        rename_as=rename_as,
                                        site_collection_id=site_collection_id,
                                        site_id=site_id)


def usersactions_user_onenote_page_parent_section_copy_to_notebook(client,
                                                                   user_id,
                                                                   onenote_page_id,
                                                                   id_=None,
                                                                   group_id=None,
                                                                   rename_as=None,
                                                                   site_collection_id=None,
                                                                   site_id=None):
    return client.copy_to_notebook(user_id=user_id,
                                   onenote_page_id=onenote_page_id,
                                   id=id_,
                                   group_id=group_id,
                                   rename_as=rename_as,
                                   site_collection_id=site_collection_id,
                                   site_id=site_id)


def usersactions_user_onenote_page_parent_section_copy_to_section_group(client,
                                                                        user_id,
                                                                        onenote_page_id,
                                                                        id_=None,
                                                                        group_id=None,
                                                                        rename_as=None,
                                                                        site_collection_id=None,
                                                                        site_id=None):
    return client.copy_to_section_group(user_id=user_id,
                                        onenote_page_id=onenote_page_id,
                                        id=id_,
                                        group_id=group_id,
                                        rename_as=rename_as,
                                        site_collection_id=site_collection_id,
                                        site_id=site_id)


def usersactions_user_onenote_page_parent_section_page_copy_to_section(client,
                                                                       user_id,
                                                                       onenote_page_id,
                                                                       onenote_page_id1,
                                                                       id_=None,
                                                                       group_id=None,
                                                                       site_collection_id=None,
                                                                       site_id=None):
    return client.copy_to_section(user_id=user_id,
                                  onenote_page_id=onenote_page_id,
                                  onenote_page_id1=onenote_page_id1,
                                  id=id_,
                                  group_id=group_id,
                                  site_collection_id=site_collection_id,
                                  site_id=site_id)


def usersactions_user_onenote_page_parent_section_page_onenote_patch_content(client,
                                                                             user_id,
                                                                             onenote_page_id,
                                                                             onenote_page_id1,
                                                                             commands=None):
    return client.onenote_patch_content(user_id=user_id,
                                        onenote_page_id=onenote_page_id,
                                        onenote_page_id1=onenote_page_id1,
                                        commands=commands)


def usersactions_user_onenote_page_parent_section_parent_notebook_copy_notebook(client,
                                                                                user_id,
                                                                                onenote_page_id,
                                                                                group_id=None,
                                                                                rename_as=None,
                                                                                notebook_folder=None,
                                                                                site_collection_id=None,
                                                                                site_id=None):
    return client.copy_notebook(user_id=user_id,
                                onenote_page_id=onenote_page_id,
                                group_id=group_id,
                                rename_as=rename_as,
                                notebook_folder=notebook_folder,
                                site_collection_id=site_collection_id,
                                site_id=site_id)


def usersactions_user_onenote_page_parent_section_parent_notebook_section_group_parent_notebook_copy_notebook(client,
                                                                                                              user_id,
                                                                                                              onenote_page_id,
                                                                                                              section_group_id,
                                                                                                              group_id=None,
                                                                                                              rename_as=None,
                                                                                                              notebook_folder=None,
                                                                                                              site_collection_id=None,
                                                                                                              site_id=None):
    return client.copy_notebook(user_id=user_id,
                                onenote_page_id=onenote_page_id,
                                section_group_id=section_group_id,
                                group_id=group_id,
                                rename_as=rename_as,
                                notebook_folder=notebook_folder,
                                site_collection_id=site_collection_id,
                                site_id=site_id)


def usersactions_user_onenote_page_parent_section_parent_notebook_section_group_section_copy_to_notebook(client,
                                                                                                         user_id,
                                                                                                         onenote_page_id,
                                                                                                         section_group_id,
                                                                                                         onenote_section_id,
                                                                                                         id_=None,
                                                                                                         group_id=None,
                                                                                                         rename_as=None,
                                                                                                         site_collection_id=None,
                                                                                                         site_id=None):
    return client.copy_to_notebook(user_id=user_id,
                                   onenote_page_id=onenote_page_id,
                                   section_group_id=section_group_id,
                                   onenote_section_id=onenote_section_id,
                                   id=id_,
                                   group_id=group_id,
                                   rename_as=rename_as,
                                   site_collection_id=site_collection_id,
                                   site_id=site_id)


def usersactions_user_onenote_page_parent_section_parent_notebook_section_group_section_copy_to_section_group(client,
                                                                                                              user_id,
                                                                                                              onenote_page_id,
                                                                                                              section_group_id,
                                                                                                              onenote_section_id,
                                                                                                              id_=None,
                                                                                                              group_id=None,
                                                                                                              rename_as=None,
                                                                                                              site_collection_id=None,
                                                                                                              site_id=None):
    return client.copy_to_section_group(user_id=user_id,
                                        onenote_page_id=onenote_page_id,
                                        section_group_id=section_group_id,
                                        onenote_section_id=onenote_section_id,
                                        id=id_,
                                        group_id=group_id,
                                        rename_as=rename_as,
                                        site_collection_id=site_collection_id,
                                        site_id=site_id)


def usersactions_user_onenote_page_parent_section_parent_notebook_section_copy_to_notebook(client,
                                                                                           user_id,
                                                                                           onenote_page_id,
                                                                                           onenote_section_id,
                                                                                           id_=None,
                                                                                           group_id=None,
                                                                                           rename_as=None,
                                                                                           site_collection_id=None,
                                                                                           site_id=None):
    return client.copy_to_notebook(user_id=user_id,
                                   onenote_page_id=onenote_page_id,
                                   onenote_section_id=onenote_section_id,
                                   id=id_,
                                   group_id=group_id,
                                   rename_as=rename_as,
                                   site_collection_id=site_collection_id,
                                   site_id=site_id)


def usersactions_user_onenote_page_parent_section_parent_notebook_section_copy_to_section_group(client,
                                                                                                user_id,
                                                                                                onenote_page_id,
                                                                                                onenote_section_id,
                                                                                                id_=None,
                                                                                                group_id=None,
                                                                                                rename_as=None,
                                                                                                site_collection_id=None,
                                                                                                site_id=None):
    return client.copy_to_section_group(user_id=user_id,
                                        onenote_page_id=onenote_page_id,
                                        onenote_section_id=onenote_section_id,
                                        id=id_,
                                        group_id=group_id,
                                        rename_as=rename_as,
                                        site_collection_id=site_collection_id,
                                        site_id=site_id)


def usersactions_user_onenote_page_parent_section_parent_section_group_parent_notebook_copy_notebook(client,
                                                                                                     user_id,
                                                                                                     onenote_page_id,
                                                                                                     group_id=None,
                                                                                                     rename_as=None,
                                                                                                     notebook_folder=None,
                                                                                                     site_collection_id=None,
                                                                                                     site_id=None):
    return client.copy_notebook(user_id=user_id,
                                onenote_page_id=onenote_page_id,
                                group_id=group_id,
                                rename_as=rename_as,
                                notebook_folder=notebook_folder,
                                site_collection_id=site_collection_id,
                                site_id=site_id)


def usersactions_user_onenote_page_parent_section_parent_section_group_parent_notebook_section_copy_to_notebook(client,
                                                                                                                user_id,
                                                                                                                onenote_page_id,
                                                                                                                onenote_section_id,
                                                                                                                id_=None,
                                                                                                                group_id=None,
                                                                                                                rename_as=None,
                                                                                                                site_collection_id=None,
                                                                                                                site_id=None):
    return client.copy_to_notebook(user_id=user_id,
                                   onenote_page_id=onenote_page_id,
                                   onenote_section_id=onenote_section_id,
                                   id=id_,
                                   group_id=group_id,
                                   rename_as=rename_as,
                                   site_collection_id=site_collection_id,
                                   site_id=site_id)


def usersactions_user_onenote_page_parent_section_parent_section_group_parent_notebook_section_copy_to_section_group(client,
                                                                                                                     user_id,
                                                                                                                     onenote_page_id,
                                                                                                                     onenote_section_id,
                                                                                                                     id_=None,
                                                                                                                     group_id=None,
                                                                                                                     rename_as=None,
                                                                                                                     site_collection_id=None,
                                                                                                                     site_id=None):
    return client.copy_to_section_group(user_id=user_id,
                                        onenote_page_id=onenote_page_id,
                                        onenote_section_id=onenote_section_id,
                                        id=id_,
                                        group_id=group_id,
                                        rename_as=rename_as,
                                        site_collection_id=site_collection_id,
                                        site_id=site_id)


def usersactions_user_onenote_page_parent_section_parent_section_group_section_copy_to_notebook(client,
                                                                                                user_id,
                                                                                                onenote_page_id,
                                                                                                onenote_section_id,
                                                                                                id_=None,
                                                                                                group_id=None,
                                                                                                rename_as=None,
                                                                                                site_collection_id=None,
                                                                                                site_id=None):
    return client.copy_to_notebook(user_id=user_id,
                                   onenote_page_id=onenote_page_id,
                                   onenote_section_id=onenote_section_id,
                                   id=id_,
                                   group_id=group_id,
                                   rename_as=rename_as,
                                   site_collection_id=site_collection_id,
                                   site_id=site_id)


def usersactions_user_onenote_page_parent_section_parent_section_group_section_copy_to_section_group(client,
                                                                                                     user_id,
                                                                                                     onenote_page_id,
                                                                                                     onenote_section_id,
                                                                                                     id_=None,
                                                                                                     group_id=None,
                                                                                                     rename_as=None,
                                                                                                     site_collection_id=None,
                                                                                                     site_id=None):
    return client.copy_to_section_group(user_id=user_id,
                                        onenote_page_id=onenote_page_id,
                                        onenote_section_id=onenote_section_id,
                                        id=id_,
                                        group_id=group_id,
                                        rename_as=rename_as,
                                        site_collection_id=site_collection_id,
                                        site_id=site_id)


def usersactions_user_onenote_section_group_parent_notebook_copy_notebook(client,
                                                                          user_id,
                                                                          section_group_id,
                                                                          group_id=None,
                                                                          rename_as=None,
                                                                          notebook_folder=None,
                                                                          site_collection_id=None,
                                                                          site_id=None):
    return client.copy_notebook(user_id=user_id,
                                section_group_id=section_group_id,
                                group_id=group_id,
                                rename_as=rename_as,
                                notebook_folder=notebook_folder,
                                site_collection_id=site_collection_id,
                                site_id=site_id)


def usersactions_user_onenote_section_group_parent_notebook_section_copy_to_notebook(client,
                                                                                     user_id,
                                                                                     section_group_id,
                                                                                     onenote_section_id,
                                                                                     id_=None,
                                                                                     group_id=None,
                                                                                     rename_as=None,
                                                                                     site_collection_id=None,
                                                                                     site_id=None):
    return client.copy_to_notebook(user_id=user_id,
                                   section_group_id=section_group_id,
                                   onenote_section_id=onenote_section_id,
                                   id=id_,
                                   group_id=group_id,
                                   rename_as=rename_as,
                                   site_collection_id=site_collection_id,
                                   site_id=site_id)


def usersactions_user_onenote_section_group_parent_notebook_section_copy_to_section_group(client,
                                                                                          user_id,
                                                                                          section_group_id,
                                                                                          onenote_section_id,
                                                                                          id_=None,
                                                                                          group_id=None,
                                                                                          rename_as=None,
                                                                                          site_collection_id=None,
                                                                                          site_id=None):
    return client.copy_to_section_group(user_id=user_id,
                                        section_group_id=section_group_id,
                                        onenote_section_id=onenote_section_id,
                                        id=id_,
                                        group_id=group_id,
                                        rename_as=rename_as,
                                        site_collection_id=site_collection_id,
                                        site_id=site_id)


def usersactions_user_onenote_section_group_parent_notebook_section_page_copy_to_section(client,
                                                                                         user_id,
                                                                                         section_group_id,
                                                                                         onenote_section_id,
                                                                                         onenote_page_id,
                                                                                         id_=None,
                                                                                         group_id=None,
                                                                                         site_collection_id=None,
                                                                                         site_id=None):
    return client.copy_to_section(user_id=user_id,
                                  section_group_id=section_group_id,
                                  onenote_section_id=onenote_section_id,
                                  onenote_page_id=onenote_page_id,
                                  id=id_,
                                  group_id=group_id,
                                  site_collection_id=site_collection_id,
                                  site_id=site_id)


def usersactions_user_onenote_section_group_parent_notebook_section_page_onenote_patch_content(client,
                                                                                               user_id,
                                                                                               section_group_id,
                                                                                               onenote_section_id,
                                                                                               onenote_page_id,
                                                                                               commands=None):
    return client.onenote_patch_content(user_id=user_id,
                                        section_group_id=section_group_id,
                                        onenote_section_id=onenote_section_id,
                                        onenote_page_id=onenote_page_id,
                                        commands=commands)


def usersactions_user_onenote_section_group_parent_notebook_section_page_parent_notebook_copy_notebook(client,
                                                                                                       user_id,
                                                                                                       section_group_id,
                                                                                                       onenote_section_id,
                                                                                                       onenote_page_id,
                                                                                                       group_id=None,
                                                                                                       rename_as=None,
                                                                                                       notebook_folder=None,
                                                                                                       site_collection_id=None,
                                                                                                       site_id=None):
    return client.copy_notebook(user_id=user_id,
                                section_group_id=section_group_id,
                                onenote_section_id=onenote_section_id,
                                onenote_page_id=onenote_page_id,
                                group_id=group_id,
                                rename_as=rename_as,
                                notebook_folder=notebook_folder,
                                site_collection_id=site_collection_id,
                                site_id=site_id)


def usersactions_user_onenote_section_group_parent_notebook_section_page_parent_section_copy_to_notebook(client,
                                                                                                         user_id,
                                                                                                         section_group_id,
                                                                                                         onenote_section_id,
                                                                                                         onenote_page_id,
                                                                                                         id_=None,
                                                                                                         group_id=None,
                                                                                                         rename_as=None,
                                                                                                         site_collection_id=None,
                                                                                                         site_id=None):
    return client.copy_to_notebook(user_id=user_id,
                                   section_group_id=section_group_id,
                                   onenote_section_id=onenote_section_id,
                                   onenote_page_id=onenote_page_id,
                                   id=id_,
                                   group_id=group_id,
                                   rename_as=rename_as,
                                   site_collection_id=site_collection_id,
                                   site_id=site_id)


def usersactions_user_onenote_section_group_parent_notebook_section_page_parent_section_copy_to_section_group(client,
                                                                                                              user_id,
                                                                                                              section_group_id,
                                                                                                              onenote_section_id,
                                                                                                              onenote_page_id,
                                                                                                              id_=None,
                                                                                                              group_id=None,
                                                                                                              rename_as=None,
                                                                                                              site_collection_id=None,
                                                                                                              site_id=None):
    return client.copy_to_section_group(user_id=user_id,
                                        section_group_id=section_group_id,
                                        onenote_section_id=onenote_section_id,
                                        onenote_page_id=onenote_page_id,
                                        id=id_,
                                        group_id=group_id,
                                        rename_as=rename_as,
                                        site_collection_id=site_collection_id,
                                        site_id=site_id)


def usersactions_user_onenote_section_group_parent_notebook_section_parent_notebook_copy_notebook(client,
                                                                                                  user_id,
                                                                                                  section_group_id,
                                                                                                  onenote_section_id,
                                                                                                  group_id=None,
                                                                                                  rename_as=None,
                                                                                                  notebook_folder=None,
                                                                                                  site_collection_id=None,
                                                                                                  site_id=None):
    return client.copy_notebook(user_id=user_id,
                                section_group_id=section_group_id,
                                onenote_section_id=onenote_section_id,
                                group_id=group_id,
                                rename_as=rename_as,
                                notebook_folder=notebook_folder,
                                site_collection_id=site_collection_id,
                                site_id=site_id)


def usersactions_user_onenote_section_group_section_copy_to_notebook(client,
                                                                     user_id,
                                                                     section_group_id,
                                                                     onenote_section_id,
                                                                     id_=None,
                                                                     group_id=None,
                                                                     rename_as=None,
                                                                     site_collection_id=None,
                                                                     site_id=None):
    return client.copy_to_notebook(user_id=user_id,
                                   section_group_id=section_group_id,
                                   onenote_section_id=onenote_section_id,
                                   id=id_,
                                   group_id=group_id,
                                   rename_as=rename_as,
                                   site_collection_id=site_collection_id,
                                   site_id=site_id)


def usersactions_user_onenote_section_group_section_copy_to_section_group(client,
                                                                          user_id,
                                                                          section_group_id,
                                                                          onenote_section_id,
                                                                          id_=None,
                                                                          group_id=None,
                                                                          rename_as=None,
                                                                          site_collection_id=None,
                                                                          site_id=None):
    return client.copy_to_section_group(user_id=user_id,
                                        section_group_id=section_group_id,
                                        onenote_section_id=onenote_section_id,
                                        id=id_,
                                        group_id=group_id,
                                        rename_as=rename_as,
                                        site_collection_id=site_collection_id,
                                        site_id=site_id)


def usersactions_user_onenote_section_group_section_page_copy_to_section(client,
                                                                         user_id,
                                                                         section_group_id,
                                                                         onenote_section_id,
                                                                         onenote_page_id,
                                                                         id_=None,
                                                                         group_id=None,
                                                                         site_collection_id=None,
                                                                         site_id=None):
    return client.copy_to_section(user_id=user_id,
                                  section_group_id=section_group_id,
                                  onenote_section_id=onenote_section_id,
                                  onenote_page_id=onenote_page_id,
                                  id=id_,
                                  group_id=group_id,
                                  site_collection_id=site_collection_id,
                                  site_id=site_id)


def usersactions_user_onenote_section_group_section_page_onenote_patch_content(client,
                                                                               user_id,
                                                                               section_group_id,
                                                                               onenote_section_id,
                                                                               onenote_page_id,
                                                                               commands=None):
    return client.onenote_patch_content(user_id=user_id,
                                        section_group_id=section_group_id,
                                        onenote_section_id=onenote_section_id,
                                        onenote_page_id=onenote_page_id,
                                        commands=commands)


def usersactions_user_onenote_section_group_section_page_parent_notebook_copy_notebook(client,
                                                                                       user_id,
                                                                                       section_group_id,
                                                                                       onenote_section_id,
                                                                                       onenote_page_id,
                                                                                       group_id=None,
                                                                                       rename_as=None,
                                                                                       notebook_folder=None,
                                                                                       site_collection_id=None,
                                                                                       site_id=None):
    return client.copy_notebook(user_id=user_id,
                                section_group_id=section_group_id,
                                onenote_section_id=onenote_section_id,
                                onenote_page_id=onenote_page_id,
                                group_id=group_id,
                                rename_as=rename_as,
                                notebook_folder=notebook_folder,
                                site_collection_id=site_collection_id,
                                site_id=site_id)


def usersactions_user_onenote_section_group_section_page_parent_notebook_section_copy_to_notebook(client,
                                                                                                  user_id,
                                                                                                  section_group_id,
                                                                                                  onenote_section_id,
                                                                                                  onenote_page_id,
                                                                                                  onenote_section_id1,
                                                                                                  id_=None,
                                                                                                  group_id=None,
                                                                                                  rename_as=None,
                                                                                                  site_collection_id=None,
                                                                                                  site_id=None):
    return client.copy_to_notebook(user_id=user_id,
                                   section_group_id=section_group_id,
                                   onenote_section_id=onenote_section_id,
                                   onenote_page_id=onenote_page_id,
                                   onenote_section_id1=onenote_section_id1,
                                   id=id_,
                                   group_id=group_id,
                                   rename_as=rename_as,
                                   site_collection_id=site_collection_id,
                                   site_id=site_id)


def usersactions_user_onenote_section_group_section_page_parent_notebook_section_copy_to_section_group(client,
                                                                                                       user_id,
                                                                                                       section_group_id,
                                                                                                       onenote_section_id,
                                                                                                       onenote_page_id,
                                                                                                       onenote_section_id1,
                                                                                                       id_=None,
                                                                                                       group_id=None,
                                                                                                       rename_as=None,
                                                                                                       site_collection_id=None,
                                                                                                       site_id=None):
    return client.copy_to_section_group(user_id=user_id,
                                        section_group_id=section_group_id,
                                        onenote_section_id=onenote_section_id,
                                        onenote_page_id=onenote_page_id,
                                        onenote_section_id1=onenote_section_id1,
                                        id=id_,
                                        group_id=group_id,
                                        rename_as=rename_as,
                                        site_collection_id=site_collection_id,
                                        site_id=site_id)


def usersactions_user_onenote_section_group_section_page_parent_section_copy_to_notebook(client,
                                                                                         user_id,
                                                                                         section_group_id,
                                                                                         onenote_section_id,
                                                                                         onenote_page_id,
                                                                                         id_=None,
                                                                                         group_id=None,
                                                                                         rename_as=None,
                                                                                         site_collection_id=None,
                                                                                         site_id=None):
    return client.copy_to_notebook(user_id=user_id,
                                   section_group_id=section_group_id,
                                   onenote_section_id=onenote_section_id,
                                   onenote_page_id=onenote_page_id,
                                   id=id_,
                                   group_id=group_id,
                                   rename_as=rename_as,
                                   site_collection_id=site_collection_id,
                                   site_id=site_id)


def usersactions_user_onenote_section_group_section_page_parent_section_copy_to_section_group(client,
                                                                                              user_id,
                                                                                              section_group_id,
                                                                                              onenote_section_id,
                                                                                              onenote_page_id,
                                                                                              id_=None,
                                                                                              group_id=None,
                                                                                              rename_as=None,
                                                                                              site_collection_id=None,
                                                                                              site_id=None):
    return client.copy_to_section_group(user_id=user_id,
                                        section_group_id=section_group_id,
                                        onenote_section_id=onenote_section_id,
                                        onenote_page_id=onenote_page_id,
                                        id=id_,
                                        group_id=group_id,
                                        rename_as=rename_as,
                                        site_collection_id=site_collection_id,
                                        site_id=site_id)


def usersactions_user_onenote_section_group_section_parent_notebook_copy_notebook(client,
                                                                                  user_id,
                                                                                  section_group_id,
                                                                                  onenote_section_id,
                                                                                  group_id=None,
                                                                                  rename_as=None,
                                                                                  notebook_folder=None,
                                                                                  site_collection_id=None,
                                                                                  site_id=None):
    return client.copy_notebook(user_id=user_id,
                                section_group_id=section_group_id,
                                onenote_section_id=onenote_section_id,
                                group_id=group_id,
                                rename_as=rename_as,
                                notebook_folder=notebook_folder,
                                site_collection_id=site_collection_id,
                                site_id=site_id)


def usersactions_user_onenote_section_group_section_parent_notebook_section_copy_to_notebook(client,
                                                                                             user_id,
                                                                                             section_group_id,
                                                                                             onenote_section_id,
                                                                                             onenote_section_id1,
                                                                                             id_=None,
                                                                                             group_id=None,
                                                                                             rename_as=None,
                                                                                             site_collection_id=None,
                                                                                             site_id=None):
    return client.copy_to_notebook(user_id=user_id,
                                   section_group_id=section_group_id,
                                   onenote_section_id=onenote_section_id,
                                   onenote_section_id1=onenote_section_id1,
                                   id=id_,
                                   group_id=group_id,
                                   rename_as=rename_as,
                                   site_collection_id=site_collection_id,
                                   site_id=site_id)


def usersactions_user_onenote_section_group_section_parent_notebook_section_copy_to_section_group(client,
                                                                                                  user_id,
                                                                                                  section_group_id,
                                                                                                  onenote_section_id,
                                                                                                  onenote_section_id1,
                                                                                                  id_=None,
                                                                                                  group_id=None,
                                                                                                  rename_as=None,
                                                                                                  site_collection_id=None,
                                                                                                  site_id=None):
    return client.copy_to_section_group(user_id=user_id,
                                        section_group_id=section_group_id,
                                        onenote_section_id=onenote_section_id,
                                        onenote_section_id1=onenote_section_id1,
                                        id=id_,
                                        group_id=group_id,
                                        rename_as=rename_as,
                                        site_collection_id=site_collection_id,
                                        site_id=site_id)


def usersactions_user_onenote_section_copy_to_notebook(client,
                                                       user_id,
                                                       onenote_section_id,
                                                       id_=None,
                                                       group_id=None,
                                                       rename_as=None,
                                                       site_collection_id=None,
                                                       site_id=None):
    return client.copy_to_notebook(user_id=user_id,
                                   onenote_section_id=onenote_section_id,
                                   id=id_,
                                   group_id=group_id,
                                   rename_as=rename_as,
                                   site_collection_id=site_collection_id,
                                   site_id=site_id)


def usersactions_user_onenote_section_copy_to_section_group(client,
                                                            user_id,
                                                            onenote_section_id,
                                                            id_=None,
                                                            group_id=None,
                                                            rename_as=None,
                                                            site_collection_id=None,
                                                            site_id=None):
    return client.copy_to_section_group(user_id=user_id,
                                        onenote_section_id=onenote_section_id,
                                        id=id_,
                                        group_id=group_id,
                                        rename_as=rename_as,
                                        site_collection_id=site_collection_id,
                                        site_id=site_id)


def usersactions_user_onenote_section_page_copy_to_section(client,
                                                           user_id,
                                                           onenote_section_id,
                                                           onenote_page_id,
                                                           id_=None,
                                                           group_id=None,
                                                           site_collection_id=None,
                                                           site_id=None):
    return client.copy_to_section(user_id=user_id,
                                  onenote_section_id=onenote_section_id,
                                  onenote_page_id=onenote_page_id,
                                  id=id_,
                                  group_id=group_id,
                                  site_collection_id=site_collection_id,
                                  site_id=site_id)


def usersactions_user_onenote_section_page_onenote_patch_content(client,
                                                                 user_id,
                                                                 onenote_section_id,
                                                                 onenote_page_id,
                                                                 commands=None):
    return client.onenote_patch_content(user_id=user_id,
                                        onenote_section_id=onenote_section_id,
                                        onenote_page_id=onenote_page_id,
                                        commands=commands)


def usersactions_user_onenote_section_page_parent_notebook_copy_notebook(client,
                                                                         user_id,
                                                                         onenote_section_id,
                                                                         onenote_page_id,
                                                                         group_id=None,
                                                                         rename_as=None,
                                                                         notebook_folder=None,
                                                                         site_collection_id=None,
                                                                         site_id=None):
    return client.copy_notebook(user_id=user_id,
                                onenote_section_id=onenote_section_id,
                                onenote_page_id=onenote_page_id,
                                group_id=group_id,
                                rename_as=rename_as,
                                notebook_folder=notebook_folder,
                                site_collection_id=site_collection_id,
                                site_id=site_id)


def usersactions_user_onenote_section_page_parent_notebook_section_group_parent_notebook_copy_notebook(client,
                                                                                                       user_id,
                                                                                                       onenote_section_id,
                                                                                                       onenote_page_id,
                                                                                                       section_group_id,
                                                                                                       group_id=None,
                                                                                                       rename_as=None,
                                                                                                       notebook_folder=None,
                                                                                                       site_collection_id=None,
                                                                                                       site_id=None):
    return client.copy_notebook(user_id=user_id,
                                onenote_section_id=onenote_section_id,
                                onenote_page_id=onenote_page_id,
                                section_group_id=section_group_id,
                                group_id=group_id,
                                rename_as=rename_as,
                                notebook_folder=notebook_folder,
                                site_collection_id=site_collection_id,
                                site_id=site_id)


def usersactions_user_onenote_section_page_parent_notebook_section_group_section_copy_to_notebook(client,
                                                                                                  user_id,
                                                                                                  onenote_section_id,
                                                                                                  onenote_page_id,
                                                                                                  section_group_id,
                                                                                                  onenote_section_id1,
                                                                                                  id_=None,
                                                                                                  group_id=None,
                                                                                                  rename_as=None,
                                                                                                  site_collection_id=None,
                                                                                                  site_id=None):
    return client.copy_to_notebook(user_id=user_id,
                                   onenote_section_id=onenote_section_id,
                                   onenote_page_id=onenote_page_id,
                                   section_group_id=section_group_id,
                                   onenote_section_id1=onenote_section_id1,
                                   id=id_,
                                   group_id=group_id,
                                   rename_as=rename_as,
                                   site_collection_id=site_collection_id,
                                   site_id=site_id)


def usersactions_user_onenote_section_page_parent_notebook_section_group_section_copy_to_section_group(client,
                                                                                                       user_id,
                                                                                                       onenote_section_id,
                                                                                                       onenote_page_id,
                                                                                                       section_group_id,
                                                                                                       onenote_section_id1,
                                                                                                       id_=None,
                                                                                                       group_id=None,
                                                                                                       rename_as=None,
                                                                                                       site_collection_id=None,
                                                                                                       site_id=None):
    return client.copy_to_section_group(user_id=user_id,
                                        onenote_section_id=onenote_section_id,
                                        onenote_page_id=onenote_page_id,
                                        section_group_id=section_group_id,
                                        onenote_section_id1=onenote_section_id1,
                                        id=id_,
                                        group_id=group_id,
                                        rename_as=rename_as,
                                        site_collection_id=site_collection_id,
                                        site_id=site_id)


def usersactions_user_onenote_section_page_parent_notebook_section_copy_to_notebook(client,
                                                                                    user_id,
                                                                                    onenote_section_id,
                                                                                    onenote_page_id,
                                                                                    onenote_section_id1,
                                                                                    id_=None,
                                                                                    group_id=None,
                                                                                    rename_as=None,
                                                                                    site_collection_id=None,
                                                                                    site_id=None):
    return client.copy_to_notebook(user_id=user_id,
                                   onenote_section_id=onenote_section_id,
                                   onenote_page_id=onenote_page_id,
                                   onenote_section_id1=onenote_section_id1,
                                   id=id_,
                                   group_id=group_id,
                                   rename_as=rename_as,
                                   site_collection_id=site_collection_id,
                                   site_id=site_id)


def usersactions_user_onenote_section_page_parent_notebook_section_copy_to_section_group(client,
                                                                                         user_id,
                                                                                         onenote_section_id,
                                                                                         onenote_page_id,
                                                                                         onenote_section_id1,
                                                                                         id_=None,
                                                                                         group_id=None,
                                                                                         rename_as=None,
                                                                                         site_collection_id=None,
                                                                                         site_id=None):
    return client.copy_to_section_group(user_id=user_id,
                                        onenote_section_id=onenote_section_id,
                                        onenote_page_id=onenote_page_id,
                                        onenote_section_id1=onenote_section_id1,
                                        id=id_,
                                        group_id=group_id,
                                        rename_as=rename_as,
                                        site_collection_id=site_collection_id,
                                        site_id=site_id)


def usersactions_user_onenote_section_page_parent_section_copy_to_notebook(client,
                                                                           user_id,
                                                                           onenote_section_id,
                                                                           onenote_page_id,
                                                                           id_=None,
                                                                           group_id=None,
                                                                           rename_as=None,
                                                                           site_collection_id=None,
                                                                           site_id=None):
    return client.copy_to_notebook(user_id=user_id,
                                   onenote_section_id=onenote_section_id,
                                   onenote_page_id=onenote_page_id,
                                   id=id_,
                                   group_id=group_id,
                                   rename_as=rename_as,
                                   site_collection_id=site_collection_id,
                                   site_id=site_id)


def usersactions_user_onenote_section_page_parent_section_copy_to_section_group(client,
                                                                                user_id,
                                                                                onenote_section_id,
                                                                                onenote_page_id,
                                                                                id_=None,
                                                                                group_id=None,
                                                                                rename_as=None,
                                                                                site_collection_id=None,
                                                                                site_id=None):
    return client.copy_to_section_group(user_id=user_id,
                                        onenote_section_id=onenote_section_id,
                                        onenote_page_id=onenote_page_id,
                                        id=id_,
                                        group_id=group_id,
                                        rename_as=rename_as,
                                        site_collection_id=site_collection_id,
                                        site_id=site_id)


def usersactions_user_onenote_section_parent_notebook_copy_notebook(client,
                                                                    user_id,
                                                                    onenote_section_id,
                                                                    group_id=None,
                                                                    rename_as=None,
                                                                    notebook_folder=None,
                                                                    site_collection_id=None,
                                                                    site_id=None):
    return client.copy_notebook(user_id=user_id,
                                onenote_section_id=onenote_section_id,
                                group_id=group_id,
                                rename_as=rename_as,
                                notebook_folder=notebook_folder,
                                site_collection_id=site_collection_id,
                                site_id=site_id)


def usersactions_user_onenote_section_parent_notebook_section_group_parent_notebook_copy_notebook(client,
                                                                                                  user_id,
                                                                                                  onenote_section_id,
                                                                                                  section_group_id,
                                                                                                  group_id=None,
                                                                                                  rename_as=None,
                                                                                                  notebook_folder=None,
                                                                                                  site_collection_id=None,
                                                                                                  site_id=None):
    return client.copy_notebook(user_id=user_id,
                                onenote_section_id=onenote_section_id,
                                section_group_id=section_group_id,
                                group_id=group_id,
                                rename_as=rename_as,
                                notebook_folder=notebook_folder,
                                site_collection_id=site_collection_id,
                                site_id=site_id)


def usersactions_user_onenote_section_parent_notebook_section_group_section_copy_to_notebook(client,
                                                                                             user_id,
                                                                                             onenote_section_id,
                                                                                             section_group_id,
                                                                                             onenote_section_id1,
                                                                                             id_=None,
                                                                                             group_id=None,
                                                                                             rename_as=None,
                                                                                             site_collection_id=None,
                                                                                             site_id=None):
    return client.copy_to_notebook(user_id=user_id,
                                   onenote_section_id=onenote_section_id,
                                   section_group_id=section_group_id,
                                   onenote_section_id1=onenote_section_id1,
                                   id=id_,
                                   group_id=group_id,
                                   rename_as=rename_as,
                                   site_collection_id=site_collection_id,
                                   site_id=site_id)


def usersactions_user_onenote_section_parent_notebook_section_group_section_copy_to_section_group(client,
                                                                                                  user_id,
                                                                                                  onenote_section_id,
                                                                                                  section_group_id,
                                                                                                  onenote_section_id1,
                                                                                                  id_=None,
                                                                                                  group_id=None,
                                                                                                  rename_as=None,
                                                                                                  site_collection_id=None,
                                                                                                  site_id=None):
    return client.copy_to_section_group(user_id=user_id,
                                        onenote_section_id=onenote_section_id,
                                        section_group_id=section_group_id,
                                        onenote_section_id1=onenote_section_id1,
                                        id=id_,
                                        group_id=group_id,
                                        rename_as=rename_as,
                                        site_collection_id=site_collection_id,
                                        site_id=site_id)


def usersactions_user_onenote_section_parent_notebook_section_copy_to_notebook(client,
                                                                               user_id,
                                                                               onenote_section_id,
                                                                               onenote_section_id1,
                                                                               id_=None,
                                                                               group_id=None,
                                                                               rename_as=None,
                                                                               site_collection_id=None,
                                                                               site_id=None):
    return client.copy_to_notebook(user_id=user_id,
                                   onenote_section_id=onenote_section_id,
                                   onenote_section_id1=onenote_section_id1,
                                   id=id_,
                                   group_id=group_id,
                                   rename_as=rename_as,
                                   site_collection_id=site_collection_id,
                                   site_id=site_id)


def usersactions_user_onenote_section_parent_notebook_section_copy_to_section_group(client,
                                                                                    user_id,
                                                                                    onenote_section_id,
                                                                                    onenote_section_id1,
                                                                                    id_=None,
                                                                                    group_id=None,
                                                                                    rename_as=None,
                                                                                    site_collection_id=None,
                                                                                    site_id=None):
    return client.copy_to_section_group(user_id=user_id,
                                        onenote_section_id=onenote_section_id,
                                        onenote_section_id1=onenote_section_id1,
                                        id=id_,
                                        group_id=group_id,
                                        rename_as=rename_as,
                                        site_collection_id=site_collection_id,
                                        site_id=site_id)


def usersactions_user_onenote_section_parent_section_group_parent_notebook_copy_notebook(client,
                                                                                         user_id,
                                                                                         onenote_section_id,
                                                                                         group_id=None,
                                                                                         rename_as=None,
                                                                                         notebook_folder=None,
                                                                                         site_collection_id=None,
                                                                                         site_id=None):
    return client.copy_notebook(user_id=user_id,
                                onenote_section_id=onenote_section_id,
                                group_id=group_id,
                                rename_as=rename_as,
                                notebook_folder=notebook_folder,
                                site_collection_id=site_collection_id,
                                site_id=site_id)


def usersactions_user_onenote_section_parent_section_group_parent_notebook_section_copy_to_notebook(client,
                                                                                                    user_id,
                                                                                                    onenote_section_id,
                                                                                                    onenote_section_id1,
                                                                                                    id_=None,
                                                                                                    group_id=None,
                                                                                                    rename_as=None,
                                                                                                    site_collection_id=None,
                                                                                                    site_id=None):
    return client.copy_to_notebook(user_id=user_id,
                                   onenote_section_id=onenote_section_id,
                                   onenote_section_id1=onenote_section_id1,
                                   id=id_,
                                   group_id=group_id,
                                   rename_as=rename_as,
                                   site_collection_id=site_collection_id,
                                   site_id=site_id)


def usersactions_user_onenote_section_parent_section_group_parent_notebook_section_copy_to_section_group(client,
                                                                                                         user_id,
                                                                                                         onenote_section_id,
                                                                                                         onenote_section_id1,
                                                                                                         id_=None,
                                                                                                         group_id=None,
                                                                                                         rename_as=None,
                                                                                                         site_collection_id=None,
                                                                                                         site_id=None):
    return client.copy_to_section_group(user_id=user_id,
                                        onenote_section_id=onenote_section_id,
                                        onenote_section_id1=onenote_section_id1,
                                        id=id_,
                                        group_id=group_id,
                                        rename_as=rename_as,
                                        site_collection_id=site_collection_id,
                                        site_id=site_id)


def usersactions_user_onenote_section_parent_section_group_section_copy_to_notebook(client,
                                                                                    user_id,
                                                                                    onenote_section_id,
                                                                                    onenote_section_id1,
                                                                                    id_=None,
                                                                                    group_id=None,
                                                                                    rename_as=None,
                                                                                    site_collection_id=None,
                                                                                    site_id=None):
    return client.copy_to_notebook(user_id=user_id,
                                   onenote_section_id=onenote_section_id,
                                   onenote_section_id1=onenote_section_id1,
                                   id=id_,
                                   group_id=group_id,
                                   rename_as=rename_as,
                                   site_collection_id=site_collection_id,
                                   site_id=site_id)


def usersactions_user_onenote_section_parent_section_group_section_copy_to_section_group(client,
                                                                                         user_id,
                                                                                         onenote_section_id,
                                                                                         onenote_section_id1,
                                                                                         id_=None,
                                                                                         group_id=None,
                                                                                         rename_as=None,
                                                                                         site_collection_id=None,
                                                                                         site_id=None):
    return client.copy_to_section_group(user_id=user_id,
                                        onenote_section_id=onenote_section_id,
                                        onenote_section_id1=onenote_section_id1,
                                        id=id_,
                                        group_id=group_id,
                                        rename_as=rename_as,
                                        site_collection_id=site_collection_id,
                                        site_id=site_id)


def usersactions_user_online_meeting_create_or_get(client,
                                                   user_id,
                                                   chat_info=None,
                                                   end_date_time=None,
                                                   external_id=None,
                                                   start_date_time=None,
                                                   subject=None,
                                                   attendees=None,
                                                   organizer=None):
    return client.create_or_get(user_id=user_id,
                                chat_info=chat_info,
                                end_date_time=end_date_time,
                                external_id=external_id,
                                start_date_time=start_date_time,
                                subject=subject,
                                attendees=attendees,
                                organizer=organizer)
