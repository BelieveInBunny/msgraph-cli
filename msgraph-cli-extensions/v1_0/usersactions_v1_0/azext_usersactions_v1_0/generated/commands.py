# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=line-too-long
# pylint: disable=too-many-lines
# pylint: disable=too-many-statements
# pylint: disable=too-many-locals

from msgraph.cli.core.commands import CliCommandType


def load_command_table(self, _):

    from azext_usersactions_v1_0.generated._client_factory import cf_user_calendar_calendar_view_attachment
    usersactions_v1_0_user_calendar_calendar_view_attachment = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_calendar_calendar_view_att'
        'achment_operations#UserCalendarCalendarViewAttachmentOperations.{}',
        client_factory=cf_user_calendar_calendar_view_attachment)
    with self.command_group('usersactions', usersactions_v1_0_user_calendar_calendar_view_attachment,
                            client_factory=cf_user_calendar_calendar_view_attachment) as g:
        g.custom_command('create-upload-session', 'usersactions_create_upload_session')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_calendar_calendar_view_calendar
    usersactions_v1_0_user_calendar_calendar_view_calendar = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_calendar_calendar_view_cal'
        'endar_operations#UserCalendarCalendarViewCalendarOperations.{}',
        client_factory=cf_user_calendar_calendar_view_calendar)
    with self.command_group('usersactions', usersactions_v1_0_user_calendar_calendar_view_calendar,
                            client_factory=cf_user_calendar_calendar_view_calendar) as g:
        g.custom_command('get-schedule', 'usersactions_get_schedule')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_calendar_calendar_view_instance
    usersactions_v1_0_user_calendar_calendar_view_instance = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_calendar_calendar_view_ins'
        'tance_operations#UserCalendarCalendarViewInstanceOperations.{}',
        client_factory=cf_user_calendar_calendar_view_instance)
    with self.command_group('usersactions', usersactions_v1_0_user_calendar_calendar_view_instance,
                            client_factory=cf_user_calendar_calendar_view_instance) as g:
        g.custom_command('accept', 'usersactions_accept')
        g.custom_command('decline', 'usersactions_decline')
        g.custom_command('dismiss-reminder', 'usersactions_dismiss_reminder')
        g.custom_command('snooze-reminder', 'usersactions_snooze_reminder')
        g.custom_command('tentatively-accept', 'usersactions_tentatively_accept')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_calendar_calendar_view
    usersactions_v1_0_user_calendar_calendar_view = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_calendar_calendar_view_ope'
        'rations#UserCalendarCalendarViewOperations.{}',
        client_factory=cf_user_calendar_calendar_view)
    with self.command_group('usersactions', usersactions_v1_0_user_calendar_calendar_view,
                            client_factory=cf_user_calendar_calendar_view) as g:
        g.custom_command('accept', 'usersactions_accept')
        g.custom_command('decline', 'usersactions_decline')
        g.custom_command('dismiss-reminder', 'usersactions_dismiss_reminder')
        g.custom_command('snooze-reminder', 'usersactions_snooze_reminder')
        g.custom_command('tentatively-accept', 'usersactions_tentatively_accept')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_calendar_event_attachment
    usersactions_v1_0_user_calendar_event_attachment = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_calendar_event_attachment_'
        'operations#UserCalendarEventAttachmentOperations.{}',
        client_factory=cf_user_calendar_event_attachment)
    with self.command_group('usersactions', usersactions_v1_0_user_calendar_event_attachment,
                            client_factory=cf_user_calendar_event_attachment) as g:
        g.custom_command('create-upload-session', 'usersactions_create_upload_session')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_calendar_event_calendar
    usersactions_v1_0_user_calendar_event_calendar = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_calendar_event_calendar_op'
        'erations#UserCalendarEventCalendarOperations.{}',
        client_factory=cf_user_calendar_event_calendar)
    with self.command_group('usersactions', usersactions_v1_0_user_calendar_event_calendar,
                            client_factory=cf_user_calendar_event_calendar) as g:
        g.custom_command('get-schedule', 'usersactions_get_schedule')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_calendar_event_instance
    usersactions_v1_0_user_calendar_event_instance = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_calendar_event_instance_op'
        'erations#UserCalendarEventInstanceOperations.{}',
        client_factory=cf_user_calendar_event_instance)
    with self.command_group('usersactions', usersactions_v1_0_user_calendar_event_instance,
                            client_factory=cf_user_calendar_event_instance) as g:
        g.custom_command('accept', 'usersactions_accept')
        g.custom_command('decline', 'usersactions_decline')
        g.custom_command('dismiss-reminder', 'usersactions_dismiss_reminder')
        g.custom_command('snooze-reminder', 'usersactions_snooze_reminder')
        g.custom_command('tentatively-accept', 'usersactions_tentatively_accept')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_calendar_event
    usersactions_v1_0_user_calendar_event = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_calendar_event_operations#'
        'UserCalendarEventOperations.{}',
        client_factory=cf_user_calendar_event)
    with self.command_group('usersactions', usersactions_v1_0_user_calendar_event,
                            client_factory=cf_user_calendar_event) as g:
        g.custom_command('accept', 'usersactions_accept')
        g.custom_command('decline', 'usersactions_decline')
        g.custom_command('dismiss-reminder', 'usersactions_dismiss_reminder')
        g.custom_command('snooze-reminder', 'usersactions_snooze_reminder')
        g.custom_command('tentatively-accept', 'usersactions_tentatively_accept')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_calendar
    usersactions_v1_0_user_calendar = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_calendar_operations#UserCa'
        'lendarOperations.{}',
        client_factory=cf_user_calendar)
    with self.command_group('usersactions', usersactions_v1_0_user_calendar, client_factory=cf_user_calendar) as g:
        g.custom_command('get-schedule', 'usersactions_get_schedule')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_calendar_group_calendar_calendar_view_attachment
    usersactions_v1_0_user_calendar_group_calendar_calendar_view_attachment = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_calendar_group_calendar_ca'
        'lendar_view_attachment_operations#UserCalendarGroupCalendarCalendarViewAttachmentOperations.{}',
        client_factory=cf_user_calendar_group_calendar_calendar_view_attachment)
    with self.command_group('usersactions', usersactions_v1_0_user_calendar_group_calendar_calendar_view_attachment,
                            client_factory=cf_user_calendar_group_calendar_calendar_view_attachment) as g:
        g.custom_command('create-upload-session', 'usersactions_create_upload_session')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_calendar_group_calendar_calendar_view_calendar
    usersactions_v1_0_user_calendar_group_calendar_calendar_view_calendar = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_calendar_group_calendar_ca'
        'lendar_view_calendar_operations#UserCalendarGroupCalendarCalendarViewCalendarOperations.{}',
        client_factory=cf_user_calendar_group_calendar_calendar_view_calendar)
    with self.command_group('usersactions', usersactions_v1_0_user_calendar_group_calendar_calendar_view_calendar,
                            client_factory=cf_user_calendar_group_calendar_calendar_view_calendar) as g:
        g.custom_command('get-schedule', 'usersactions_get_schedule')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_calendar_group_calendar_calendar_view_instance
    usersactions_v1_0_user_calendar_group_calendar_calendar_view_instance = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_calendar_group_calendar_ca'
        'lendar_view_instance_operations#UserCalendarGroupCalendarCalendarViewInstanceOperations.{}',
        client_factory=cf_user_calendar_group_calendar_calendar_view_instance)
    with self.command_group('usersactions', usersactions_v1_0_user_calendar_group_calendar_calendar_view_instance,
                            client_factory=cf_user_calendar_group_calendar_calendar_view_instance) as g:
        g.custom_command('accept', 'usersactions_accept')
        g.custom_command('decline', 'usersactions_decline')
        g.custom_command('dismiss-reminder', 'usersactions_dismiss_reminder')
        g.custom_command('snooze-reminder', 'usersactions_snooze_reminder')
        g.custom_command('tentatively-accept', 'usersactions_tentatively_accept')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_calendar_group_calendar_calendar_view
    usersactions_v1_0_user_calendar_group_calendar_calendar_view = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_calendar_group_calendar_ca'
        'lendar_view_operations#UserCalendarGroupCalendarCalendarViewOperations.{}',
        client_factory=cf_user_calendar_group_calendar_calendar_view)
    with self.command_group('usersactions', usersactions_v1_0_user_calendar_group_calendar_calendar_view,
                            client_factory=cf_user_calendar_group_calendar_calendar_view) as g:
        g.custom_command('accept', 'usersactions_accept')
        g.custom_command('decline', 'usersactions_decline')
        g.custom_command('dismiss-reminder', 'usersactions_dismiss_reminder')
        g.custom_command('snooze-reminder', 'usersactions_snooze_reminder')
        g.custom_command('tentatively-accept', 'usersactions_tentatively_accept')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_calendar_group_calendar_event_attachment
    usersactions_v1_0_user_calendar_group_calendar_event_attachment = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_calendar_group_calendar_ev'
        'ent_attachment_operations#UserCalendarGroupCalendarEventAttachmentOperations.{}',
        client_factory=cf_user_calendar_group_calendar_event_attachment)
    with self.command_group('usersactions', usersactions_v1_0_user_calendar_group_calendar_event_attachment,
                            client_factory=cf_user_calendar_group_calendar_event_attachment) as g:
        g.custom_command('create-upload-session', 'usersactions_create_upload_session')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_calendar_group_calendar_event_calendar
    usersactions_v1_0_user_calendar_group_calendar_event_calendar = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_calendar_group_calendar_ev'
        'ent_calendar_operations#UserCalendarGroupCalendarEventCalendarOperations.{}',
        client_factory=cf_user_calendar_group_calendar_event_calendar)
    with self.command_group('usersactions', usersactions_v1_0_user_calendar_group_calendar_event_calendar,
                            client_factory=cf_user_calendar_group_calendar_event_calendar) as g:
        g.custom_command('get-schedule', 'usersactions_get_schedule')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_calendar_group_calendar_event_instance
    usersactions_v1_0_user_calendar_group_calendar_event_instance = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_calendar_group_calendar_ev'
        'ent_instance_operations#UserCalendarGroupCalendarEventInstanceOperations.{}',
        client_factory=cf_user_calendar_group_calendar_event_instance)
    with self.command_group('usersactions', usersactions_v1_0_user_calendar_group_calendar_event_instance,
                            client_factory=cf_user_calendar_group_calendar_event_instance) as g:
        g.custom_command('accept', 'usersactions_accept')
        g.custom_command('decline', 'usersactions_decline')
        g.custom_command('dismiss-reminder', 'usersactions_dismiss_reminder')
        g.custom_command('snooze-reminder', 'usersactions_snooze_reminder')
        g.custom_command('tentatively-accept', 'usersactions_tentatively_accept')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_calendar_group_calendar_event
    usersactions_v1_0_user_calendar_group_calendar_event = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_calendar_group_calendar_ev'
        'ent_operations#UserCalendarGroupCalendarEventOperations.{}',
        client_factory=cf_user_calendar_group_calendar_event)
    with self.command_group('usersactions', usersactions_v1_0_user_calendar_group_calendar_event,
                            client_factory=cf_user_calendar_group_calendar_event) as g:
        g.custom_command('accept', 'usersactions_accept')
        g.custom_command('decline', 'usersactions_decline')
        g.custom_command('dismiss-reminder', 'usersactions_dismiss_reminder')
        g.custom_command('snooze-reminder', 'usersactions_snooze_reminder')
        g.custom_command('tentatively-accept', 'usersactions_tentatively_accept')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_calendar_group_calendar
    usersactions_v1_0_user_calendar_group_calendar = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_calendar_group_calendar_op'
        'erations#UserCalendarGroupCalendarOperations.{}',
        client_factory=cf_user_calendar_group_calendar)
    with self.command_group('usersactions', usersactions_v1_0_user_calendar_group_calendar,
                            client_factory=cf_user_calendar_group_calendar) as g:
        g.custom_command('get-schedule', 'usersactions_get_schedule')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_calendar_calendar_view_attachment
    usersactions_v1_0_user_calendar_calendar_view_attachment = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_calendar_calendar_view_att'
        'achment_operations#UserCalendarCalendarViewAttachmentOperations.{}',
        client_factory=cf_user_calendar_calendar_view_attachment)
    with self.command_group('usersactions', usersactions_v1_0_user_calendar_calendar_view_attachment,
                            client_factory=cf_user_calendar_calendar_view_attachment) as g:
        g.custom_command('create-upload-session', 'usersactions_create_upload_session')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_calendar_calendar_view_calendar
    usersactions_v1_0_user_calendar_calendar_view_calendar = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_calendar_calendar_view_cal'
        'endar_operations#UserCalendarCalendarViewCalendarOperations.{}',
        client_factory=cf_user_calendar_calendar_view_calendar)
    with self.command_group('usersactions', usersactions_v1_0_user_calendar_calendar_view_calendar,
                            client_factory=cf_user_calendar_calendar_view_calendar) as g:
        g.custom_command('get-schedule', 'usersactions_get_schedule')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_calendar_calendar_view_instance
    usersactions_v1_0_user_calendar_calendar_view_instance = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_calendar_calendar_view_ins'
        'tance_operations#UserCalendarCalendarViewInstanceOperations.{}',
        client_factory=cf_user_calendar_calendar_view_instance)
    with self.command_group('usersactions', usersactions_v1_0_user_calendar_calendar_view_instance,
                            client_factory=cf_user_calendar_calendar_view_instance) as g:
        g.custom_command('accept', 'usersactions_accept')
        g.custom_command('decline', 'usersactions_decline')
        g.custom_command('dismiss-reminder', 'usersactions_dismiss_reminder')
        g.custom_command('snooze-reminder', 'usersactions_snooze_reminder')
        g.custom_command('tentatively-accept', 'usersactions_tentatively_accept')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_calendar_calendar_view
    usersactions_v1_0_user_calendar_calendar_view = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_calendar_calendar_view_ope'
        'rations#UserCalendarCalendarViewOperations.{}',
        client_factory=cf_user_calendar_calendar_view)
    with self.command_group('usersactions', usersactions_v1_0_user_calendar_calendar_view,
                            client_factory=cf_user_calendar_calendar_view) as g:
        g.custom_command('accept', 'usersactions_accept')
        g.custom_command('decline', 'usersactions_decline')
        g.custom_command('dismiss-reminder', 'usersactions_dismiss_reminder')
        g.custom_command('snooze-reminder', 'usersactions_snooze_reminder')
        g.custom_command('tentatively-accept', 'usersactions_tentatively_accept')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_calendar_event_attachment
    usersactions_v1_0_user_calendar_event_attachment = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_calendar_event_attachment_'
        'operations#UserCalendarEventAttachmentOperations.{}',
        client_factory=cf_user_calendar_event_attachment)
    with self.command_group('usersactions', usersactions_v1_0_user_calendar_event_attachment,
                            client_factory=cf_user_calendar_event_attachment) as g:
        g.custom_command('create-upload-session', 'usersactions_create_upload_session')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_calendar_event_calendar
    usersactions_v1_0_user_calendar_event_calendar = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_calendar_event_calendar_op'
        'erations#UserCalendarEventCalendarOperations.{}',
        client_factory=cf_user_calendar_event_calendar)
    with self.command_group('usersactions', usersactions_v1_0_user_calendar_event_calendar,
                            client_factory=cf_user_calendar_event_calendar) as g:
        g.custom_command('get-schedule', 'usersactions_get_schedule')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_calendar_event_instance
    usersactions_v1_0_user_calendar_event_instance = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_calendar_event_instance_op'
        'erations#UserCalendarEventInstanceOperations.{}',
        client_factory=cf_user_calendar_event_instance)
    with self.command_group('usersactions', usersactions_v1_0_user_calendar_event_instance,
                            client_factory=cf_user_calendar_event_instance) as g:
        g.custom_command('accept', 'usersactions_accept')
        g.custom_command('decline', 'usersactions_decline')
        g.custom_command('dismiss-reminder', 'usersactions_dismiss_reminder')
        g.custom_command('snooze-reminder', 'usersactions_snooze_reminder')
        g.custom_command('tentatively-accept', 'usersactions_tentatively_accept')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_calendar_event
    usersactions_v1_0_user_calendar_event = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_calendar_event_operations#'
        'UserCalendarEventOperations.{}',
        client_factory=cf_user_calendar_event)
    with self.command_group('usersactions', usersactions_v1_0_user_calendar_event,
                            client_factory=cf_user_calendar_event) as g:
        g.custom_command('accept', 'usersactions_accept')
        g.custom_command('decline', 'usersactions_decline')
        g.custom_command('dismiss-reminder', 'usersactions_dismiss_reminder')
        g.custom_command('snooze-reminder', 'usersactions_snooze_reminder')
        g.custom_command('tentatively-accept', 'usersactions_tentatively_accept')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_calendar
    usersactions_v1_0_user_calendar = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_calendar_operations#UserCa'
        'lendarOperations.{}',
        client_factory=cf_user_calendar)
    with self.command_group('usersactions', usersactions_v1_0_user_calendar, client_factory=cf_user_calendar) as g:
        g.custom_command('get-schedule', 'usersactions_get_schedule')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_calendar_view_attachment
    usersactions_v1_0_user_calendar_view_attachment = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_calendar_view_attachment_o'
        'perations#UserCalendarViewAttachmentOperations.{}',
        client_factory=cf_user_calendar_view_attachment)
    with self.command_group('usersactions', usersactions_v1_0_user_calendar_view_attachment,
                            client_factory=cf_user_calendar_view_attachment) as g:
        g.custom_command('create-upload-session', 'usersactions_create_upload_session')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_calendar_view_calendar_calendar_view
    usersactions_v1_0_user_calendar_view_calendar_calendar_view = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_calendar_view_calendar_cal'
        'endar_view_operations#UserCalendarViewCalendarCalendarViewOperations.{}',
        client_factory=cf_user_calendar_view_calendar_calendar_view)
    with self.command_group('usersactions', usersactions_v1_0_user_calendar_view_calendar_calendar_view,
                            client_factory=cf_user_calendar_view_calendar_calendar_view) as g:
        g.custom_command('accept', 'usersactions_accept')
        g.custom_command('decline', 'usersactions_decline')
        g.custom_command('dismiss-reminder', 'usersactions_dismiss_reminder')
        g.custom_command('snooze-reminder', 'usersactions_snooze_reminder')
        g.custom_command('tentatively-accept', 'usersactions_tentatively_accept')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_calendar_view_calendar_event
    usersactions_v1_0_user_calendar_view_calendar_event = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_calendar_view_calendar_eve'
        'nt_operations#UserCalendarViewCalendarEventOperations.{}',
        client_factory=cf_user_calendar_view_calendar_event)
    with self.command_group('usersactions', usersactions_v1_0_user_calendar_view_calendar_event,
                            client_factory=cf_user_calendar_view_calendar_event) as g:
        g.custom_command('accept', 'usersactions_accept')
        g.custom_command('decline', 'usersactions_decline')
        g.custom_command('dismiss-reminder', 'usersactions_dismiss_reminder')
        g.custom_command('snooze-reminder', 'usersactions_snooze_reminder')
        g.custom_command('tentatively-accept', 'usersactions_tentatively_accept')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_calendar_view_calendar
    usersactions_v1_0_user_calendar_view_calendar = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_calendar_view_calendar_ope'
        'rations#UserCalendarViewCalendarOperations.{}',
        client_factory=cf_user_calendar_view_calendar)
    with self.command_group('usersactions', usersactions_v1_0_user_calendar_view_calendar,
                            client_factory=cf_user_calendar_view_calendar) as g:
        g.custom_command('get-schedule', 'usersactions_get_schedule')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_calendar_view_instance
    usersactions_v1_0_user_calendar_view_instance = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_calendar_view_instance_ope'
        'rations#UserCalendarViewInstanceOperations.{}',
        client_factory=cf_user_calendar_view_instance)
    with self.command_group('usersactions', usersactions_v1_0_user_calendar_view_instance,
                            client_factory=cf_user_calendar_view_instance) as g:
        g.custom_command('accept', 'usersactions_accept')
        g.custom_command('decline', 'usersactions_decline')
        g.custom_command('dismiss-reminder', 'usersactions_dismiss_reminder')
        g.custom_command('snooze-reminder', 'usersactions_snooze_reminder')
        g.custom_command('tentatively-accept', 'usersactions_tentatively_accept')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_calendar_view
    usersactions_v1_0_user_calendar_view = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_calendar_view_operations#U'
        'serCalendarViewOperations.{}',
        client_factory=cf_user_calendar_view)
    with self.command_group('usersactions', usersactions_v1_0_user_calendar_view,
                            client_factory=cf_user_calendar_view) as g:
        g.custom_command('accept', 'usersactions_accept')
        g.custom_command('decline', 'usersactions_decline')
        g.custom_command('dismiss-reminder', 'usersactions_dismiss_reminder')
        g.custom_command('snooze-reminder', 'usersactions_snooze_reminder')
        g.custom_command('tentatively-accept', 'usersactions_tentatively_accept')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_event_attachment
    usersactions_v1_0_user_event_attachment = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_event_attachment_operation'
        's#UserEventAttachmentOperations.{}',
        client_factory=cf_user_event_attachment)
    with self.command_group('usersactions', usersactions_v1_0_user_event_attachment,
                            client_factory=cf_user_event_attachment) as g:
        g.custom_command('create-upload-session', 'usersactions_create_upload_session')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_event_calendar_calendar_view
    usersactions_v1_0_user_event_calendar_calendar_view = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_event_calendar_calendar_vi'
        'ew_operations#UserEventCalendarCalendarViewOperations.{}',
        client_factory=cf_user_event_calendar_calendar_view)
    with self.command_group('usersactions', usersactions_v1_0_user_event_calendar_calendar_view,
                            client_factory=cf_user_event_calendar_calendar_view) as g:
        g.custom_command('accept', 'usersactions_accept')
        g.custom_command('decline', 'usersactions_decline')
        g.custom_command('dismiss-reminder', 'usersactions_dismiss_reminder')
        g.custom_command('snooze-reminder', 'usersactions_snooze_reminder')
        g.custom_command('tentatively-accept', 'usersactions_tentatively_accept')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_event_calendar_event
    usersactions_v1_0_user_event_calendar_event = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_event_calendar_event_opera'
        'tions#UserEventCalendarEventOperations.{}',
        client_factory=cf_user_event_calendar_event)
    with self.command_group('usersactions', usersactions_v1_0_user_event_calendar_event,
                            client_factory=cf_user_event_calendar_event) as g:
        g.custom_command('accept', 'usersactions_accept')
        g.custom_command('decline', 'usersactions_decline')
        g.custom_command('dismiss-reminder', 'usersactions_dismiss_reminder')
        g.custom_command('snooze-reminder', 'usersactions_snooze_reminder')
        g.custom_command('tentatively-accept', 'usersactions_tentatively_accept')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_event_calendar
    usersactions_v1_0_user_event_calendar = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_event_calendar_operations#'
        'UserEventCalendarOperations.{}',
        client_factory=cf_user_event_calendar)
    with self.command_group('usersactions', usersactions_v1_0_user_event_calendar,
                            client_factory=cf_user_event_calendar) as g:
        g.custom_command('get-schedule', 'usersactions_get_schedule')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_event_instance
    usersactions_v1_0_user_event_instance = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_event_instance_operations#'
        'UserEventInstanceOperations.{}',
        client_factory=cf_user_event_instance)
    with self.command_group('usersactions', usersactions_v1_0_user_event_instance,
                            client_factory=cf_user_event_instance) as g:
        g.custom_command('accept', 'usersactions_accept')
        g.custom_command('decline', 'usersactions_decline')
        g.custom_command('dismiss-reminder', 'usersactions_dismiss_reminder')
        g.custom_command('snooze-reminder', 'usersactions_snooze_reminder')
        g.custom_command('tentatively-accept', 'usersactions_tentatively_accept')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_event
    usersactions_v1_0_user_event = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_event_operations#UserEvent'
        'Operations.{}',
        client_factory=cf_user_event)
    with self.command_group('usersactions', usersactions_v1_0_user_event, client_factory=cf_user_event) as g:
        g.custom_command('accept', 'usersactions_accept')
        g.custom_command('decline', 'usersactions_decline')
        g.custom_command('dismiss-reminder', 'usersactions_dismiss_reminder')
        g.custom_command('snooze-reminder', 'usersactions_snooze_reminder')
        g.custom_command('tentatively-accept', 'usersactions_tentatively_accept')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_mail_folder_child_folder
    usersactions_v1_0_user_mail_folder_child_folder = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_mail_folder_child_folder_o'
        'perations#UserMailFolderChildFolderOperations.{}',
        client_factory=cf_user_mail_folder_child_folder)
    with self.command_group('usersactions', usersactions_v1_0_user_mail_folder_child_folder,
                            client_factory=cf_user_mail_folder_child_folder) as g:
        g.custom_command('copy', 'usersactions_copy')
        g.custom_command('move', 'usersactions_move')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_mail_folder_message_attachment
    usersactions_v1_0_user_mail_folder_message_attachment = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_mail_folder_message_attach'
        'ment_operations#UserMailFolderMessageAttachmentOperations.{}',
        client_factory=cf_user_mail_folder_message_attachment)
    with self.command_group('usersactions', usersactions_v1_0_user_mail_folder_message_attachment,
                            client_factory=cf_user_mail_folder_message_attachment) as g:
        g.custom_command('create-upload-session', 'usersactions_create_upload_session')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_mail_folder_message
    usersactions_v1_0_user_mail_folder_message = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_mail_folder_message_operat'
        'ions#UserMailFolderMessageOperations.{}',
        client_factory=cf_user_mail_folder_message)
    with self.command_group('usersactions', usersactions_v1_0_user_mail_folder_message,
                            client_factory=cf_user_mail_folder_message) as g:
        g.custom_command('copy', 'usersactions_copy')
        g.custom_command('create-forward', 'usersactions_create_forward')
        g.custom_command('create-reply', 'usersactions_create_reply')
        g.custom_command('create-reply-all', 'usersactions_create_reply_all')
        g.custom_command('forward', 'usersactions_forward')
        g.custom_command('move', 'usersactions_move')
        g.custom_command('reply', 'usersactions_reply')
        g.custom_command('reply-all', 'usersactions_reply_all')
        g.custom_command('send', 'usersactions_send')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_mail_folder
    usersactions_v1_0_user_mail_folder = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_mail_folder_operations#Use'
        'rMailFolderOperations.{}',
        client_factory=cf_user_mail_folder)
    with self.command_group('usersactions', usersactions_v1_0_user_mail_folder,
                            client_factory=cf_user_mail_folder) as g:
        g.custom_command('copy', 'usersactions_copy')
        g.custom_command('move', 'usersactions_move')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_managed_device
    usersactions_v1_0_user_managed_device = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_managed_device_operations#'
        'UserManagedDeviceOperations.{}',
        client_factory=cf_user_managed_device)
    with self.command_group('usersactions', usersactions_v1_0_user_managed_device,
                            client_factory=cf_user_managed_device) as g:
        g.custom_command('bypass-activation-lock', 'usersactions_bypass_activation_lock')
        g.custom_command('clean-window-device', 'usersactions_clean_window_device')
        g.custom_command('delete-user-from-shared-apple-device', 'usersactions_delete_user_from_shared_apple_device')
        g.custom_command('disable-lost-mode', 'usersactions_disable_lost_mode')
        g.custom_command('locate-device', 'usersactions_locate_device')
        g.custom_command('logout-shared-apple-device-active-user', 'usersactions_logout_shared_apple_device_active_user'
                         '')
        g.custom_command('reboot-now', 'usersactions_reboot_now')
        g.custom_command('recover-passcode', 'usersactions_recover_passcode')
        g.custom_command('remote-lock', 'usersactions_remote_lock')
        g.custom_command('request-remote-assistance', 'usersactions_request_remote_assistance')
        g.custom_command('reset-passcode', 'usersactions_reset_passcode')
        g.custom_command('retire', 'usersactions_retire')
        g.custom_command('shut-down', 'usersactions_shut_down')
        g.custom_command('sync-device', 'usersactions_sync_device')
        g.custom_command('update-window-device-account', 'usersactions_update_window_device_account')
        g.custom_command('window-defender-scan', 'usersactions_window_defender_scan')
        g.custom_command('window-defender-update-signature', 'usersactions_window_defender_update_signature')
        g.custom_command('wipe', 'usersactions_wipe')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_message_attachment
    usersactions_v1_0_user_message_attachment = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_message_attachment_operati'
        'ons#UserMessageAttachmentOperations.{}',
        client_factory=cf_user_message_attachment)
    with self.command_group('usersactions', usersactions_v1_0_user_message_attachment,
                            client_factory=cf_user_message_attachment) as g:
        g.custom_command('create-upload-session', 'usersactions_create_upload_session')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_message
    usersactions_v1_0_user_message = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_message_operations#UserMes'
        'sageOperations.{}',
        client_factory=cf_user_message)
    with self.command_group('usersactions', usersactions_v1_0_user_message, client_factory=cf_user_message) as g:
        g.custom_command('copy', 'usersactions_copy')
        g.custom_command('create-forward', 'usersactions_create_forward')
        g.custom_command('create-reply', 'usersactions_create_reply')
        g.custom_command('create-reply-all', 'usersactions_create_reply_all')
        g.custom_command('forward', 'usersactions_forward')
        g.custom_command('move', 'usersactions_move')
        g.custom_command('reply', 'usersactions_reply')
        g.custom_command('reply-all', 'usersactions_reply_all')
        g.custom_command('send', 'usersactions_send')

    from azext_usersactions_v1_0.generated._client_factory import cf_user
    usersactions_v1_0_user = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_operations#UserOperations.'
        '{}',
        client_factory=cf_user)
    with self.command_group('usersactions', usersactions_v1_0_user, client_factory=cf_user) as g:
        g.custom_command('assign-license', 'usersactions_assign_license')
        g.custom_command('change-password', 'usersactions_change_password')
        g.custom_command('check-member-group', 'usersactions_check_member_group')
        g.custom_command('check-member-object', 'usersactions_check_member_object')
        g.custom_command('export-personal-data', 'usersactions_export_personal_data')
        g.custom_command('find-meeting-time', 'usersactions_find_meeting_time')
        g.custom_command('get-available-extension-property', 'usersactions_get_available_extension_property')
        g.custom_command('get-by-id', 'usersactions_get_by_id')
        g.custom_command('get-mail-tip', 'usersactions_get_mail_tip')
        g.custom_command('get-member-group', 'usersactions_get_member_group')
        g.custom_command('get-member-object', 'usersactions_get_member_object')
        g.custom_command('remove-all-device-from-management', 'usersactions_remove_all_device_from_management')
        g.custom_command('reprocess-license-assignment', 'usersactions_reprocess_license_assignment')
        g.custom_command('restore', 'usersactions_restore')
        g.custom_command('revoke-sign-in-session', 'usersactions_revoke_sign_in_session')
        g.custom_command('send-mail', 'usersactions_send_mail')
        g.custom_command('translate-exchange-id', 'usersactions_translate_exchange_id')
        g.custom_command('validate-property', 'usersactions_validate_property')
        g.custom_command('wipe-managed-app-registration-by-device-tag', 'usersactions_wipe_managed_app_registration_by_'
                         'device_tag')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_notebook
    usersactions_v1_0_user_onenote_notebook = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_notebook_operation'
        's#UserOnenoteNotebookOperations.{}',
        client_factory=cf_user_onenote_notebook)
    with self.command_group('usersactions', usersactions_v1_0_user_onenote_notebook,
                            client_factory=cf_user_onenote_notebook) as g:
        g.custom_command('copy-notebook', 'usersactions_copy_notebook')
        g.custom_command('get-notebook-from-web-url', 'usersactions_get_notebook_from_web_url')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_notebook_section_group_parent_notebook
    usersactions_v1_0_user_onenote_notebook_section_group_parent_notebook = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_notebook_section_g'
        'roup_parent_notebook_operations#UserOnenoteNotebookSectionGroupParentNotebookOperations.{}',
        client_factory=cf_user_onenote_notebook_section_group_parent_notebook)
    with self.command_group('usersactions', usersactions_v1_0_user_onenote_notebook_section_group_parent_notebook,
                            client_factory=cf_user_onenote_notebook_section_group_parent_notebook) as g:
        g.custom_command('copy-notebook', 'usersactions_copy_notebook')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_notebook_section_group_section
    usersactions_v1_0_user_onenote_notebook_section_group_section = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_notebook_section_g'
        'roup_section_operations#UserOnenoteNotebookSectionGroupSectionOperations.{}',
        client_factory=cf_user_onenote_notebook_section_group_section)
    with self.command_group('usersactions', usersactions_v1_0_user_onenote_notebook_section_group_section,
                            client_factory=cf_user_onenote_notebook_section_group_section) as g:
        g.custom_command('copy-to-notebook', 'usersactions_copy_to_notebook')
        g.custom_command('copy-to-section-group', 'usersactions_copy_to_section_group')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_notebook_section_group_section_page
    usersactions_v1_0_user_onenote_notebook_section_group_section_page = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_notebook_section_g'
        'roup_section_page_operations#UserOnenoteNotebookSectionGroupSectionPageOperations.{}',
        client_factory=cf_user_onenote_notebook_section_group_section_page)
    with self.command_group('usersactions', usersactions_v1_0_user_onenote_notebook_section_group_section_page,
                            client_factory=cf_user_onenote_notebook_section_group_section_page) as g:
        g.custom_command('copy-to-section', 'usersactions_copy_to_section')
        g.custom_command('onenote-patch-content', 'usersactions_onenote_patch_content')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_notebook_section_group_section_page_parent_notebook
    usersactions_v1_0_user_onenote_notebook_section_group_section_page_parent_notebook = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_notebook_section_g'
        'roup_section_page_parent_notebook_operations#UserOnenoteNotebookSectionGroupSectionPageParentNotebookOperation'
        's.{}',
        client_factory=cf_user_onenote_notebook_section_group_section_page_parent_notebook)
    with self.command_group('usersactions',
                            usersactions_v1_0_user_onenote_notebook_section_group_section_page_parent_notebook,
                            client_factory=cf_user_onenote_notebook_section_group_section_page_parent_notebook) as g:
        g.custom_command('copy-notebook', 'usersactions_copy_notebook')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_notebook_section_group_section_page_parent_section
    usersactions_v1_0_user_onenote_notebook_section_group_section_page_parent_section = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_notebook_section_g'
        'roup_section_page_parent_section_operations#UserOnenoteNotebookSectionGroupSectionPageParentSectionOperations.'
        '{}',
        client_factory=cf_user_onenote_notebook_section_group_section_page_parent_section)
    with self.command_group('usersactions',
                            usersactions_v1_0_user_onenote_notebook_section_group_section_page_parent_section,
                            client_factory=cf_user_onenote_notebook_section_group_section_page_parent_section) as g:
        g.custom_command('copy-to-notebook', 'usersactions_copy_to_notebook')
        g.custom_command('copy-to-section-group', 'usersactions_copy_to_section_group')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_notebook_section_group_section_parent_notebook
    usersactions_v1_0_user_onenote_notebook_section_group_section_parent_notebook = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_notebook_section_g'
        'roup_section_parent_notebook_operations#UserOnenoteNotebookSectionGroupSectionParentNotebookOperations.{}',
        client_factory=cf_user_onenote_notebook_section_group_section_parent_notebook)
    with self.command_group('usersactions',
                            usersactions_v1_0_user_onenote_notebook_section_group_section_parent_notebook,
                            client_factory=cf_user_onenote_notebook_section_group_section_parent_notebook) as g:
        g.custom_command('copy-notebook', 'usersactions_copy_notebook')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_notebook_section
    usersactions_v1_0_user_onenote_notebook_section = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_notebook_section_o'
        'perations#UserOnenoteNotebookSectionOperations.{}',
        client_factory=cf_user_onenote_notebook_section)
    with self.command_group('usersactions', usersactions_v1_0_user_onenote_notebook_section,
                            client_factory=cf_user_onenote_notebook_section) as g:
        g.custom_command('copy-to-notebook', 'usersactions_copy_to_notebook')
        g.custom_command('copy-to-section-group', 'usersactions_copy_to_section_group')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_notebook_section_page
    usersactions_v1_0_user_onenote_notebook_section_page = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_notebook_section_p'
        'age_operations#UserOnenoteNotebookSectionPageOperations.{}',
        client_factory=cf_user_onenote_notebook_section_page)
    with self.command_group('usersactions', usersactions_v1_0_user_onenote_notebook_section_page,
                            client_factory=cf_user_onenote_notebook_section_page) as g:
        g.custom_command('copy-to-section', 'usersactions_copy_to_section')
        g.custom_command('onenote-patch-content', 'usersactions_onenote_patch_content')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_notebook_section_page_parent_notebook
    usersactions_v1_0_user_onenote_notebook_section_page_parent_notebook = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_notebook_section_p'
        'age_parent_notebook_operations#UserOnenoteNotebookSectionPageParentNotebookOperations.{}',
        client_factory=cf_user_onenote_notebook_section_page_parent_notebook)
    with self.command_group('usersactions', usersactions_v1_0_user_onenote_notebook_section_page_parent_notebook,
                            client_factory=cf_user_onenote_notebook_section_page_parent_notebook) as g:
        g.custom_command('copy-notebook', 'usersactions_copy_notebook')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_notebook_section_page_parent_section
    usersactions_v1_0_user_onenote_notebook_section_page_parent_section = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_notebook_section_p'
        'age_parent_section_operations#UserOnenoteNotebookSectionPageParentSectionOperations.{}',
        client_factory=cf_user_onenote_notebook_section_page_parent_section)
    with self.command_group('usersactions', usersactions_v1_0_user_onenote_notebook_section_page_parent_section,
                            client_factory=cf_user_onenote_notebook_section_page_parent_section) as g:
        g.custom_command('copy-to-notebook', 'usersactions_copy_to_notebook')
        g.custom_command('copy-to-section-group', 'usersactions_copy_to_section_group')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_notebook_section_parent_notebook
    usersactions_v1_0_user_onenote_notebook_section_parent_notebook = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_notebook_section_p'
        'arent_notebook_operations#UserOnenoteNotebookSectionParentNotebookOperations.{}',
        client_factory=cf_user_onenote_notebook_section_parent_notebook)
    with self.command_group('usersactions', usersactions_v1_0_user_onenote_notebook_section_parent_notebook,
                            client_factory=cf_user_onenote_notebook_section_parent_notebook) as g:
        g.custom_command('copy-notebook', 'usersactions_copy_notebook')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_notebook_section_parent_section_group_parent_notebook
    usersactions_v1_0_user_onenote_notebook_section_parent_section_group_parent_notebook = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_notebook_section_p'
        'arent_section_group_parent_notebook_operations#UserOnenoteNotebookSectionParentSectionGroupParentNotebookOpera'
        'tions.{}',
        client_factory=cf_user_onenote_notebook_section_parent_section_group_parent_notebook)
    with self.command_group('usersactions',
                            usersactions_v1_0_user_onenote_notebook_section_parent_section_group_parent_notebook,
                            client_factory=cf_user_onenote_notebook_section_parent_section_group_parent_notebook) as g:
        g.custom_command('copy-notebook', 'usersactions_copy_notebook')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_notebook_section_parent_section_group_section
    usersactions_v1_0_user_onenote_notebook_section_parent_section_group_section = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_notebook_section_p'
        'arent_section_group_section_operations#UserOnenoteNotebookSectionParentSectionGroupSectionOperations.{}',
        client_factory=cf_user_onenote_notebook_section_parent_section_group_section)
    with self.command_group('usersactions',
                            usersactions_v1_0_user_onenote_notebook_section_parent_section_group_section,
                            client_factory=cf_user_onenote_notebook_section_parent_section_group_section) as g:
        g.custom_command('copy-to-notebook', 'usersactions_copy_to_notebook')
        g.custom_command('copy-to-section-group', 'usersactions_copy_to_section_group')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_page
    usersactions_v1_0_user_onenote_page = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_page_operations#Us'
        'erOnenotePageOperations.{}',
        client_factory=cf_user_onenote_page)
    with self.command_group('usersactions', usersactions_v1_0_user_onenote_page,
                            client_factory=cf_user_onenote_page) as g:
        g.custom_command('copy-to-section', 'usersactions_copy_to_section')
        g.custom_command('onenote-patch-content', 'usersactions_onenote_patch_content')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_page_parent_notebook
    usersactions_v1_0_user_onenote_page_parent_notebook = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_page_parent_notebo'
        'ok_operations#UserOnenotePageParentNotebookOperations.{}',
        client_factory=cf_user_onenote_page_parent_notebook)
    with self.command_group('usersactions', usersactions_v1_0_user_onenote_page_parent_notebook,
                            client_factory=cf_user_onenote_page_parent_notebook) as g:
        g.custom_command('copy-notebook', 'usersactions_copy_notebook')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_page_parent_notebook_section_group_parent_notebook
    usersactions_v1_0_user_onenote_page_parent_notebook_section_group_parent_notebook = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_page_parent_notebo'
        'ok_section_group_parent_notebook_operations#UserOnenotePageParentNotebookSectionGroupParentNotebookOperations.'
        '{}',
        client_factory=cf_user_onenote_page_parent_notebook_section_group_parent_notebook)
    with self.command_group('usersactions',
                            usersactions_v1_0_user_onenote_page_parent_notebook_section_group_parent_notebook,
                            client_factory=cf_user_onenote_page_parent_notebook_section_group_parent_notebook) as g:
        g.custom_command('copy-notebook', 'usersactions_copy_notebook')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_page_parent_notebook_section_group_section
    usersactions_v1_0_user_onenote_page_parent_notebook_section_group_section = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_page_parent_notebo'
        'ok_section_group_section_operations#UserOnenotePageParentNotebookSectionGroupSectionOperations.{}',
        client_factory=cf_user_onenote_page_parent_notebook_section_group_section)
    with self.command_group('usersactions', usersactions_v1_0_user_onenote_page_parent_notebook_section_group_section,
                            client_factory=cf_user_onenote_page_parent_notebook_section_group_section) as g:
        g.custom_command('copy-to-notebook', 'usersactions_copy_to_notebook')
        g.custom_command('copy-to-section-group', 'usersactions_copy_to_section_group')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_page_parent_notebook_section_group_section_page
    usersactions_v1_0_user_onenote_page_parent_notebook_section_group_section_page = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_page_parent_notebo'
        'ok_section_group_section_page_operations#UserOnenotePageParentNotebookSectionGroupSectionPageOperations.{}',
        client_factory=cf_user_onenote_page_parent_notebook_section_group_section_page)
    with self.command_group('usersactions',
                            usersactions_v1_0_user_onenote_page_parent_notebook_section_group_section_page,
                            client_factory=cf_user_onenote_page_parent_notebook_section_group_section_page) as g:
        g.custom_command('copy-to-section', 'usersactions_copy_to_section')
        g.custom_command('onenote-patch-content', 'usersactions_onenote_patch_content')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_page_parent_notebook_section_group_section_parent_notebook
    usersactions_v1_0_user_onenote_page_parent_notebook_section_group_section_parent_notebook = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_page_parent_notebo'
        'ok_section_group_section_parent_notebook_operations#UserOnenotePageParentNotebookSectionGroupSectionParentNote'
        'bookOperations.{}',
        client_factory=cf_user_onenote_page_parent_notebook_section_group_section_parent_notebook)
    with self.command_group('usersactions',
                            usersactions_v1_0_user_onenote_page_parent_notebook_section_group_section_parent_notebook,
                            client_factory=cf_user_onenote_page_parent_notebook_section_group_section_parent_notebook) \
                            as g:
        g.custom_command('copy-notebook', 'usersactions_copy_notebook')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_page_parent_notebook_section
    usersactions_v1_0_user_onenote_page_parent_notebook_section = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_page_parent_notebo'
        'ok_section_operations#UserOnenotePageParentNotebookSectionOperations.{}',
        client_factory=cf_user_onenote_page_parent_notebook_section)
    with self.command_group('usersactions', usersactions_v1_0_user_onenote_page_parent_notebook_section,
                            client_factory=cf_user_onenote_page_parent_notebook_section) as g:
        g.custom_command('copy-to-notebook', 'usersactions_copy_to_notebook')
        g.custom_command('copy-to-section-group', 'usersactions_copy_to_section_group')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_page_parent_notebook_section_page
    usersactions_v1_0_user_onenote_page_parent_notebook_section_page = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_page_parent_notebo'
        'ok_section_page_operations#UserOnenotePageParentNotebookSectionPageOperations.{}',
        client_factory=cf_user_onenote_page_parent_notebook_section_page)
    with self.command_group('usersactions', usersactions_v1_0_user_onenote_page_parent_notebook_section_page,
                            client_factory=cf_user_onenote_page_parent_notebook_section_page) as g:
        g.custom_command('copy-to-section', 'usersactions_copy_to_section')
        g.custom_command('onenote-patch-content', 'usersactions_onenote_patch_content')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_page_parent_notebook_section_parent_notebook
    usersactions_v1_0_user_onenote_page_parent_notebook_section_parent_notebook = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_page_parent_notebo'
        'ok_section_parent_notebook_operations#UserOnenotePageParentNotebookSectionParentNotebookOperations.{}',
        client_factory=cf_user_onenote_page_parent_notebook_section_parent_notebook)
    with self.command_group('usersactions',
                            usersactions_v1_0_user_onenote_page_parent_notebook_section_parent_notebook,
                            client_factory=cf_user_onenote_page_parent_notebook_section_parent_notebook) as g:
        g.custom_command('copy-notebook', 'usersactions_copy_notebook')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_page_parent_notebook_section_parent_section_group_parent_notebook
    usersactions_v1_0_user_onenote_page_parent_notebook_section_parent_section_group_parent_notebook = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_page_parent_notebo'
        'ok_section_parent_section_group_parent_notebook_operations#UserOnenotePageParentNotebookSectionParentSectionGr'
        'oupParentNotebookOperations.{}',
        client_factory=cf_user_onenote_page_parent_notebook_section_parent_section_group_parent_notebook)
    with self.command_group('usersactions',
                            usersactions_v1_0_user_onenote_page_parent_notebook_section_parent_section_group_parent_notebook,
                            client_factory=\
                            cf_user_onenote_page_parent_notebook_section_parent_section_group_parent_notebook) as g:
        g.custom_command('copy-notebook', 'usersactions_copy_notebook')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_page_parent_notebook_section_parent_section_group_section
    usersactions_v1_0_user_onenote_page_parent_notebook_section_parent_section_group_section = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_page_parent_notebo'
        'ok_section_parent_section_group_section_operations#UserOnenotePageParentNotebookSectionParentSectionGroupSecti'
        'onOperations.{}',
        client_factory=cf_user_onenote_page_parent_notebook_section_parent_section_group_section)
    with self.command_group('usersactions',
                            usersactions_v1_0_user_onenote_page_parent_notebook_section_parent_section_group_section,
                            client_factory=cf_user_onenote_page_parent_notebook_section_parent_section_group_section) \
                            as g:
        g.custom_command('copy-to-notebook', 'usersactions_copy_to_notebook')
        g.custom_command('copy-to-section-group', 'usersactions_copy_to_section_group')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_page_parent_section
    usersactions_v1_0_user_onenote_page_parent_section = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_page_parent_sectio'
        'n_operations#UserOnenotePageParentSectionOperations.{}',
        client_factory=cf_user_onenote_page_parent_section)
    with self.command_group('usersactions', usersactions_v1_0_user_onenote_page_parent_section,
                            client_factory=cf_user_onenote_page_parent_section) as g:
        g.custom_command('copy-to-notebook', 'usersactions_copy_to_notebook')
        g.custom_command('copy-to-section-group', 'usersactions_copy_to_section_group')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_page_parent_section_page
    usersactions_v1_0_user_onenote_page_parent_section_page = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_page_parent_sectio'
        'n_page_operations#UserOnenotePageParentSectionPageOperations.{}',
        client_factory=cf_user_onenote_page_parent_section_page)
    with self.command_group('usersactions', usersactions_v1_0_user_onenote_page_parent_section_page,
                            client_factory=cf_user_onenote_page_parent_section_page) as g:
        g.custom_command('copy-to-section', 'usersactions_copy_to_section')
        g.custom_command('onenote-patch-content', 'usersactions_onenote_patch_content')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_page_parent_section_parent_notebook
    usersactions_v1_0_user_onenote_page_parent_section_parent_notebook = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_page_parent_sectio'
        'n_parent_notebook_operations#UserOnenotePageParentSectionParentNotebookOperations.{}',
        client_factory=cf_user_onenote_page_parent_section_parent_notebook)
    with self.command_group('usersactions', usersactions_v1_0_user_onenote_page_parent_section_parent_notebook,
                            client_factory=cf_user_onenote_page_parent_section_parent_notebook) as g:
        g.custom_command('copy-notebook', 'usersactions_copy_notebook')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_page_parent_section_parent_notebook_section_group_parent_notebook
    usersactions_v1_0_user_onenote_page_parent_section_parent_notebook_section_group_parent_notebook = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_page_parent_sectio'
        'n_parent_notebook_section_group_parent_notebook_operations#UserOnenotePageParentSectionParentNotebookSectionGr'
        'oupParentNotebookOperations.{}',
        client_factory=cf_user_onenote_page_parent_section_parent_notebook_section_group_parent_notebook)
    with self.command_group('usersactions',
                            usersactions_v1_0_user_onenote_page_parent_section_parent_notebook_section_group_parent_notebook,
                            client_factory=\
                            cf_user_onenote_page_parent_section_parent_notebook_section_group_parent_notebook) as g:
        g.custom_command('copy-notebook', 'usersactions_copy_notebook')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_page_parent_section_parent_notebook_section_group_section
    usersactions_v1_0_user_onenote_page_parent_section_parent_notebook_section_group_section = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_page_parent_sectio'
        'n_parent_notebook_section_group_section_operations#UserOnenotePageParentSectionParentNotebookSectionGroupSecti'
        'onOperations.{}',
        client_factory=cf_user_onenote_page_parent_section_parent_notebook_section_group_section)
    with self.command_group('usersactions',
                            usersactions_v1_0_user_onenote_page_parent_section_parent_notebook_section_group_section,
                            client_factory=cf_user_onenote_page_parent_section_parent_notebook_section_group_section) \
                            as g:
        g.custom_command('copy-to-notebook', 'usersactions_copy_to_notebook')
        g.custom_command('copy-to-section-group', 'usersactions_copy_to_section_group')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_page_parent_section_parent_notebook_section
    usersactions_v1_0_user_onenote_page_parent_section_parent_notebook_section = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_page_parent_sectio'
        'n_parent_notebook_section_operations#UserOnenotePageParentSectionParentNotebookSectionOperations.{}',
        client_factory=cf_user_onenote_page_parent_section_parent_notebook_section)
    with self.command_group('usersactions', usersactions_v1_0_user_onenote_page_parent_section_parent_notebook_section,
                            client_factory=cf_user_onenote_page_parent_section_parent_notebook_section) as g:
        g.custom_command('copy-to-notebook', 'usersactions_copy_to_notebook')
        g.custom_command('copy-to-section-group', 'usersactions_copy_to_section_group')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_page_parent_section_parent_section_group_parent_notebook
    usersactions_v1_0_user_onenote_page_parent_section_parent_section_group_parent_notebook = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_page_parent_sectio'
        'n_parent_section_group_parent_notebook_operations#UserOnenotePageParentSectionParentSectionGroupParentNotebook'
        'Operations.{}',
        client_factory=cf_user_onenote_page_parent_section_parent_section_group_parent_notebook)
    with self.command_group('usersactions',
                            usersactions_v1_0_user_onenote_page_parent_section_parent_section_group_parent_notebook,
                            client_factory=cf_user_onenote_page_parent_section_parent_section_group_parent_notebook) \
                            as g:
        g.custom_command('copy-notebook', 'usersactions_copy_notebook')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_page_parent_section_parent_section_group_parent_notebook_section
    usersactions_v1_0_user_onenote_page_parent_section_parent_section_group_parent_notebook_section = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_page_parent_sectio'
        'n_parent_section_group_parent_notebook_section_operations#UserOnenotePageParentSectionParentSectionGroupParent'
        'NotebookSectionOperations.{}',
        client_factory=cf_user_onenote_page_parent_section_parent_section_group_parent_notebook_section)
    with self.command_group('usersactions',
                            usersactions_v1_0_user_onenote_page_parent_section_parent_section_group_parent_notebook_section,
                            client_factory=\
                            cf_user_onenote_page_parent_section_parent_section_group_parent_notebook_section) as g:
        g.custom_command('copy-to-notebook', 'usersactions_copy_to_notebook')
        g.custom_command('copy-to-section-group', 'usersactions_copy_to_section_group')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_page_parent_section_parent_section_group_section
    usersactions_v1_0_user_onenote_page_parent_section_parent_section_group_section = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_page_parent_sectio'
        'n_parent_section_group_section_operations#UserOnenotePageParentSectionParentSectionGroupSectionOperations.{}',
        client_factory=cf_user_onenote_page_parent_section_parent_section_group_section)
    with self.command_group('usersactions',
                            usersactions_v1_0_user_onenote_page_parent_section_parent_section_group_section,
                            client_factory=cf_user_onenote_page_parent_section_parent_section_group_section) as g:
        g.custom_command('copy-to-notebook', 'usersactions_copy_to_notebook')
        g.custom_command('copy-to-section-group', 'usersactions_copy_to_section_group')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_section_group_parent_notebook
    usersactions_v1_0_user_onenote_section_group_parent_notebook = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_section_group_pare'
        'nt_notebook_operations#UserOnenoteSectionGroupParentNotebookOperations.{}',
        client_factory=cf_user_onenote_section_group_parent_notebook)
    with self.command_group('usersactions', usersactions_v1_0_user_onenote_section_group_parent_notebook,
                            client_factory=cf_user_onenote_section_group_parent_notebook) as g:
        g.custom_command('copy-notebook', 'usersactions_copy_notebook')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_section_group_parent_notebook_section
    usersactions_v1_0_user_onenote_section_group_parent_notebook_section = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_section_group_pare'
        'nt_notebook_section_operations#UserOnenoteSectionGroupParentNotebookSectionOperations.{}',
        client_factory=cf_user_onenote_section_group_parent_notebook_section)
    with self.command_group('usersactions', usersactions_v1_0_user_onenote_section_group_parent_notebook_section,
                            client_factory=cf_user_onenote_section_group_parent_notebook_section) as g:
        g.custom_command('copy-to-notebook', 'usersactions_copy_to_notebook')
        g.custom_command('copy-to-section-group', 'usersactions_copy_to_section_group')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_section_group_parent_notebook_section_page
    usersactions_v1_0_user_onenote_section_group_parent_notebook_section_page = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_section_group_pare'
        'nt_notebook_section_page_operations#UserOnenoteSectionGroupParentNotebookSectionPageOperations.{}',
        client_factory=cf_user_onenote_section_group_parent_notebook_section_page)
    with self.command_group('usersactions', usersactions_v1_0_user_onenote_section_group_parent_notebook_section_page,
                            client_factory=cf_user_onenote_section_group_parent_notebook_section_page) as g:
        g.custom_command('copy-to-section', 'usersactions_copy_to_section')
        g.custom_command('onenote-patch-content', 'usersactions_onenote_patch_content')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_section_group_parent_notebook_section_page_parent_notebook
    usersactions_v1_0_user_onenote_section_group_parent_notebook_section_page_parent_notebook = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_section_group_pare'
        'nt_notebook_section_page_parent_notebook_operations#UserOnenoteSectionGroupParentNotebookSectionPageParentNote'
        'bookOperations.{}',
        client_factory=cf_user_onenote_section_group_parent_notebook_section_page_parent_notebook)
    with self.command_group('usersactions',
                            usersactions_v1_0_user_onenote_section_group_parent_notebook_section_page_parent_notebook,
                            client_factory=cf_user_onenote_section_group_parent_notebook_section_page_parent_notebook) \
                            as g:
        g.custom_command('copy-notebook', 'usersactions_copy_notebook')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_section_group_parent_notebook_section_page_parent_section
    usersactions_v1_0_user_onenote_section_group_parent_notebook_section_page_parent_section = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_section_group_pare'
        'nt_notebook_section_page_parent_section_operations#UserOnenoteSectionGroupParentNotebookSectionPageParentSecti'
        'onOperations.{}',
        client_factory=cf_user_onenote_section_group_parent_notebook_section_page_parent_section)
    with self.command_group('usersactions',
                            usersactions_v1_0_user_onenote_section_group_parent_notebook_section_page_parent_section,
                            client_factory=cf_user_onenote_section_group_parent_notebook_section_page_parent_section) \
                            as g:
        g.custom_command('copy-to-notebook', 'usersactions_copy_to_notebook')
        g.custom_command('copy-to-section-group', 'usersactions_copy_to_section_group')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_section_group_parent_notebook_section_parent_notebook
    usersactions_v1_0_user_onenote_section_group_parent_notebook_section_parent_notebook = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_section_group_pare'
        'nt_notebook_section_parent_notebook_operations#UserOnenoteSectionGroupParentNotebookSectionParentNotebookOpera'
        'tions.{}',
        client_factory=cf_user_onenote_section_group_parent_notebook_section_parent_notebook)
    with self.command_group('usersactions',
                            usersactions_v1_0_user_onenote_section_group_parent_notebook_section_parent_notebook,
                            client_factory=cf_user_onenote_section_group_parent_notebook_section_parent_notebook) as g:
        g.custom_command('copy-notebook', 'usersactions_copy_notebook')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_section_group_section
    usersactions_v1_0_user_onenote_section_group_section = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_section_group_sect'
        'ion_operations#UserOnenoteSectionGroupSectionOperations.{}',
        client_factory=cf_user_onenote_section_group_section)
    with self.command_group('usersactions', usersactions_v1_0_user_onenote_section_group_section,
                            client_factory=cf_user_onenote_section_group_section) as g:
        g.custom_command('copy-to-notebook', 'usersactions_copy_to_notebook')
        g.custom_command('copy-to-section-group', 'usersactions_copy_to_section_group')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_section_group_section_page
    usersactions_v1_0_user_onenote_section_group_section_page = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_section_group_sect'
        'ion_page_operations#UserOnenoteSectionGroupSectionPageOperations.{}',
        client_factory=cf_user_onenote_section_group_section_page)
    with self.command_group('usersactions', usersactions_v1_0_user_onenote_section_group_section_page,
                            client_factory=cf_user_onenote_section_group_section_page) as g:
        g.custom_command('copy-to-section', 'usersactions_copy_to_section')
        g.custom_command('onenote-patch-content', 'usersactions_onenote_patch_content')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_section_group_section_page_parent_notebook
    usersactions_v1_0_user_onenote_section_group_section_page_parent_notebook = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_section_group_sect'
        'ion_page_parent_notebook_operations#UserOnenoteSectionGroupSectionPageParentNotebookOperations.{}',
        client_factory=cf_user_onenote_section_group_section_page_parent_notebook)
    with self.command_group('usersactions', usersactions_v1_0_user_onenote_section_group_section_page_parent_notebook,
                            client_factory=cf_user_onenote_section_group_section_page_parent_notebook) as g:
        g.custom_command('copy-notebook', 'usersactions_copy_notebook')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_section_group_section_page_parent_notebook_section
    usersactions_v1_0_user_onenote_section_group_section_page_parent_notebook_section = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_section_group_sect'
        'ion_page_parent_notebook_section_operations#UserOnenoteSectionGroupSectionPageParentNotebookSectionOperations.'
        '{}',
        client_factory=cf_user_onenote_section_group_section_page_parent_notebook_section)
    with self.command_group('usersactions',
                            usersactions_v1_0_user_onenote_section_group_section_page_parent_notebook_section,
                            client_factory=cf_user_onenote_section_group_section_page_parent_notebook_section) as g:
        g.custom_command('copy-to-notebook', 'usersactions_copy_to_notebook')
        g.custom_command('copy-to-section-group', 'usersactions_copy_to_section_group')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_section_group_section_page_parent_section
    usersactions_v1_0_user_onenote_section_group_section_page_parent_section = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_section_group_sect'
        'ion_page_parent_section_operations#UserOnenoteSectionGroupSectionPageParentSectionOperations.{}',
        client_factory=cf_user_onenote_section_group_section_page_parent_section)
    with self.command_group('usersactions', usersactions_v1_0_user_onenote_section_group_section_page_parent_section,
                            client_factory=cf_user_onenote_section_group_section_page_parent_section) as g:
        g.custom_command('copy-to-notebook', 'usersactions_copy_to_notebook')
        g.custom_command('copy-to-section-group', 'usersactions_copy_to_section_group')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_section_group_section_parent_notebook
    usersactions_v1_0_user_onenote_section_group_section_parent_notebook = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_section_group_sect'
        'ion_parent_notebook_operations#UserOnenoteSectionGroupSectionParentNotebookOperations.{}',
        client_factory=cf_user_onenote_section_group_section_parent_notebook)
    with self.command_group('usersactions', usersactions_v1_0_user_onenote_section_group_section_parent_notebook,
                            client_factory=cf_user_onenote_section_group_section_parent_notebook) as g:
        g.custom_command('copy-notebook', 'usersactions_copy_notebook')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_section_group_section_parent_notebook_section
    usersactions_v1_0_user_onenote_section_group_section_parent_notebook_section = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_section_group_sect'
        'ion_parent_notebook_section_operations#UserOnenoteSectionGroupSectionParentNotebookSectionOperations.{}',
        client_factory=cf_user_onenote_section_group_section_parent_notebook_section)
    with self.command_group('usersactions',
                            usersactions_v1_0_user_onenote_section_group_section_parent_notebook_section,
                            client_factory=cf_user_onenote_section_group_section_parent_notebook_section) as g:
        g.custom_command('copy-to-notebook', 'usersactions_copy_to_notebook')
        g.custom_command('copy-to-section-group', 'usersactions_copy_to_section_group')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_section
    usersactions_v1_0_user_onenote_section = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_section_operations'
        '#UserOnenoteSectionOperations.{}',
        client_factory=cf_user_onenote_section)
    with self.command_group('usersactions', usersactions_v1_0_user_onenote_section,
                            client_factory=cf_user_onenote_section) as g:
        g.custom_command('copy-to-notebook', 'usersactions_copy_to_notebook')
        g.custom_command('copy-to-section-group', 'usersactions_copy_to_section_group')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_section_page
    usersactions_v1_0_user_onenote_section_page = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_section_page_opera'
        'tions#UserOnenoteSectionPageOperations.{}',
        client_factory=cf_user_onenote_section_page)
    with self.command_group('usersactions', usersactions_v1_0_user_onenote_section_page,
                            client_factory=cf_user_onenote_section_page) as g:
        g.custom_command('copy-to-section', 'usersactions_copy_to_section')
        g.custom_command('onenote-patch-content', 'usersactions_onenote_patch_content')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_section_page_parent_notebook
    usersactions_v1_0_user_onenote_section_page_parent_notebook = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_section_page_paren'
        't_notebook_operations#UserOnenoteSectionPageParentNotebookOperations.{}',
        client_factory=cf_user_onenote_section_page_parent_notebook)
    with self.command_group('usersactions', usersactions_v1_0_user_onenote_section_page_parent_notebook,
                            client_factory=cf_user_onenote_section_page_parent_notebook) as g:
        g.custom_command('copy-notebook', 'usersactions_copy_notebook')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_section_page_parent_notebook_section_group_parent_notebook
    usersactions_v1_0_user_onenote_section_page_parent_notebook_section_group_parent_notebook = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_section_page_paren'
        't_notebook_section_group_parent_notebook_operations#UserOnenoteSectionPageParentNotebookSectionGroupParentNote'
        'bookOperations.{}',
        client_factory=cf_user_onenote_section_page_parent_notebook_section_group_parent_notebook)
    with self.command_group('usersactions',
                            usersactions_v1_0_user_onenote_section_page_parent_notebook_section_group_parent_notebook,
                            client_factory=cf_user_onenote_section_page_parent_notebook_section_group_parent_notebook) \
                            as g:
        g.custom_command('copy-notebook', 'usersactions_copy_notebook')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_section_page_parent_notebook_section_group_section
    usersactions_v1_0_user_onenote_section_page_parent_notebook_section_group_section = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_section_page_paren'
        't_notebook_section_group_section_operations#UserOnenoteSectionPageParentNotebookSectionGroupSectionOperations.'
        '{}',
        client_factory=cf_user_onenote_section_page_parent_notebook_section_group_section)
    with self.command_group('usersactions',
                            usersactions_v1_0_user_onenote_section_page_parent_notebook_section_group_section,
                            client_factory=cf_user_onenote_section_page_parent_notebook_section_group_section) as g:
        g.custom_command('copy-to-notebook', 'usersactions_copy_to_notebook')
        g.custom_command('copy-to-section-group', 'usersactions_copy_to_section_group')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_section_page_parent_notebook_section
    usersactions_v1_0_user_onenote_section_page_parent_notebook_section = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_section_page_paren'
        't_notebook_section_operations#UserOnenoteSectionPageParentNotebookSectionOperations.{}',
        client_factory=cf_user_onenote_section_page_parent_notebook_section)
    with self.command_group('usersactions', usersactions_v1_0_user_onenote_section_page_parent_notebook_section,
                            client_factory=cf_user_onenote_section_page_parent_notebook_section) as g:
        g.custom_command('copy-to-notebook', 'usersactions_copy_to_notebook')
        g.custom_command('copy-to-section-group', 'usersactions_copy_to_section_group')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_section_page_parent_section
    usersactions_v1_0_user_onenote_section_page_parent_section = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_section_page_paren'
        't_section_operations#UserOnenoteSectionPageParentSectionOperations.{}',
        client_factory=cf_user_onenote_section_page_parent_section)
    with self.command_group('usersactions', usersactions_v1_0_user_onenote_section_page_parent_section,
                            client_factory=cf_user_onenote_section_page_parent_section) as g:
        g.custom_command('copy-to-notebook', 'usersactions_copy_to_notebook')
        g.custom_command('copy-to-section-group', 'usersactions_copy_to_section_group')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_section_parent_notebook
    usersactions_v1_0_user_onenote_section_parent_notebook = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_section_parent_not'
        'ebook_operations#UserOnenoteSectionParentNotebookOperations.{}',
        client_factory=cf_user_onenote_section_parent_notebook)
    with self.command_group('usersactions', usersactions_v1_0_user_onenote_section_parent_notebook,
                            client_factory=cf_user_onenote_section_parent_notebook) as g:
        g.custom_command('copy-notebook', 'usersactions_copy_notebook')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_section_parent_notebook_section_group_parent_notebook
    usersactions_v1_0_user_onenote_section_parent_notebook_section_group_parent_notebook = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_section_parent_not'
        'ebook_section_group_parent_notebook_operations#UserOnenoteSectionParentNotebookSectionGroupParentNotebookOpera'
        'tions.{}',
        client_factory=cf_user_onenote_section_parent_notebook_section_group_parent_notebook)
    with self.command_group('usersactions',
                            usersactions_v1_0_user_onenote_section_parent_notebook_section_group_parent_notebook,
                            client_factory=cf_user_onenote_section_parent_notebook_section_group_parent_notebook) as g:
        g.custom_command('copy-notebook', 'usersactions_copy_notebook')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_section_parent_notebook_section_group_section
    usersactions_v1_0_user_onenote_section_parent_notebook_section_group_section = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_section_parent_not'
        'ebook_section_group_section_operations#UserOnenoteSectionParentNotebookSectionGroupSectionOperations.{}',
        client_factory=cf_user_onenote_section_parent_notebook_section_group_section)
    with self.command_group('usersactions',
                            usersactions_v1_0_user_onenote_section_parent_notebook_section_group_section,
                            client_factory=cf_user_onenote_section_parent_notebook_section_group_section) as g:
        g.custom_command('copy-to-notebook', 'usersactions_copy_to_notebook')
        g.custom_command('copy-to-section-group', 'usersactions_copy_to_section_group')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_section_parent_notebook_section
    usersactions_v1_0_user_onenote_section_parent_notebook_section = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_section_parent_not'
        'ebook_section_operations#UserOnenoteSectionParentNotebookSectionOperations.{}',
        client_factory=cf_user_onenote_section_parent_notebook_section)
    with self.command_group('usersactions', usersactions_v1_0_user_onenote_section_parent_notebook_section,
                            client_factory=cf_user_onenote_section_parent_notebook_section) as g:
        g.custom_command('copy-to-notebook', 'usersactions_copy_to_notebook')
        g.custom_command('copy-to-section-group', 'usersactions_copy_to_section_group')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_section_parent_section_group_parent_notebook
    usersactions_v1_0_user_onenote_section_parent_section_group_parent_notebook = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_section_parent_sec'
        'tion_group_parent_notebook_operations#UserOnenoteSectionParentSectionGroupParentNotebookOperations.{}',
        client_factory=cf_user_onenote_section_parent_section_group_parent_notebook)
    with self.command_group('usersactions',
                            usersactions_v1_0_user_onenote_section_parent_section_group_parent_notebook,
                            client_factory=cf_user_onenote_section_parent_section_group_parent_notebook) as g:
        g.custom_command('copy-notebook', 'usersactions_copy_notebook')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_section_parent_section_group_parent_notebook_section
    usersactions_v1_0_user_onenote_section_parent_section_group_parent_notebook_section = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_section_parent_sec'
        'tion_group_parent_notebook_section_operations#UserOnenoteSectionParentSectionGroupParentNotebookSectionOperati'
        'ons.{}',
        client_factory=cf_user_onenote_section_parent_section_group_parent_notebook_section)
    with self.command_group('usersactions',
                            usersactions_v1_0_user_onenote_section_parent_section_group_parent_notebook_section,
                            client_factory=cf_user_onenote_section_parent_section_group_parent_notebook_section) as g:
        g.custom_command('copy-to-notebook', 'usersactions_copy_to_notebook')
        g.custom_command('copy-to-section-group', 'usersactions_copy_to_section_group')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_section_parent_section_group_section
    usersactions_v1_0_user_onenote_section_parent_section_group_section = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_section_parent_sec'
        'tion_group_section_operations#UserOnenoteSectionParentSectionGroupSectionOperations.{}',
        client_factory=cf_user_onenote_section_parent_section_group_section)
    with self.command_group('usersactions', usersactions_v1_0_user_onenote_section_parent_section_group_section,
                            client_factory=cf_user_onenote_section_parent_section_group_section) as g:
        g.custom_command('copy-to-notebook', 'usersactions_copy_to_notebook')
        g.custom_command('copy-to-section-group', 'usersactions_copy_to_section_group')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_online_meeting
    usersactions_v1_0_user_online_meeting = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_online_meeting_operations#'
        'UserOnlineMeetingOperations.{}',
        client_factory=cf_user_online_meeting)
    with self.command_group('usersactions', usersactions_v1_0_user_online_meeting,
                            client_factory=cf_user_online_meeting) as g:
        g.custom_command('create-or-get', 'usersactions_create_or_get')
