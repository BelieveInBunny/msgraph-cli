# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=too-many-statements
# pylint: disable=too-many-locals
# pylint: disable=line-too-long

from msgraph.cli.core.commands import CliCommandType


def load_command_table(self, _):

    from azext_usersactions_v1_0.generated._client_factory import cf_user_calendar_calendar_view_attachment

    usersactions_v1_0_user_calendar_calendar_view_attachment = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_calendar_calendar_view_attachment_operations#UserCalendarCalendarViewAttachmentOperations.{}',
        client_factory=cf_user_calendar_calendar_view_attachment,
    )
    with self.command_group(
        'usersactions user-calendar-calendar-view-attachment',
        usersactions_v1_0_user_calendar_calendar_view_attachment,
        client_factory=cf_user_calendar_calendar_view_attachment,
    ) as g:
        g.custom_command(
            'create-upload-session', 'usersactions_user_calendar_calendar_view_attachment_create_upload_session'
        )

    from azext_usersactions_v1_0.generated._client_factory import cf_user_calendar_calendar_view_calendar

    usersactions_v1_0_user_calendar_calendar_view_calendar = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_calendar_calendar_view_calendar_operations#UserCalendarCalendarViewCalendarOperations.{}',
        client_factory=cf_user_calendar_calendar_view_calendar,
    )
    with self.command_group(
        'usersactions user-calendar-calendar-view-calendar',
        usersactions_v1_0_user_calendar_calendar_view_calendar,
        client_factory=cf_user_calendar_calendar_view_calendar,
    ) as g:
        g.custom_command('get-schedule', 'usersactions_user_calendar_calendar_view_calendar_get_schedule')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_calendar_calendar_view_instance

    usersactions_v1_0_user_calendar_calendar_view_instance = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_calendar_calendar_view_instance_operations#UserCalendarCalendarViewInstanceOperations.{}',
        client_factory=cf_user_calendar_calendar_view_instance,
    )
    with self.command_group(
        'usersactions user-calendar-calendar-view-instance',
        usersactions_v1_0_user_calendar_calendar_view_instance,
        client_factory=cf_user_calendar_calendar_view_instance,
    ) as g:
        g.custom_command('accept', 'usersactions_user_calendar_calendar_view_instance_accept')
        g.custom_command('decline', 'usersactions_user_calendar_calendar_view_instance_decline')
        g.custom_command('dismiss-reminder', 'usersactions_user_calendar_calendar_view_instance_dismiss_reminder')
        g.custom_command('snooze-reminder', 'usersactions_user_calendar_calendar_view_instance_snooze_reminder')
        g.custom_command('tentatively-accept', 'usersactions_user_calendar_calendar_view_instance_tentatively_accept')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_calendar_calendar_view

    usersactions_v1_0_user_calendar_calendar_view = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_calendar_calendar_view_operations#UserCalendarCalendarViewOperations.{}',
        client_factory=cf_user_calendar_calendar_view,
    )
    with self.command_group(
        'usersactions user-calendar-calendar-view',
        usersactions_v1_0_user_calendar_calendar_view,
        client_factory=cf_user_calendar_calendar_view,
    ) as g:
        g.custom_command('accept', 'usersactions_user_calendar_calendar_view_accept')
        g.custom_command('decline', 'usersactions_user_calendar_calendar_view_decline')
        g.custom_command('dismiss-reminder', 'usersactions_user_calendar_calendar_view_dismiss_reminder')
        g.custom_command('snooze-reminder', 'usersactions_user_calendar_calendar_view_snooze_reminder')
        g.custom_command('tentatively-accept', 'usersactions_user_calendar_calendar_view_tentatively_accept')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_calendar_event_attachment

    usersactions_v1_0_user_calendar_event_attachment = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_calendar_event_attachment_operations#UserCalendarEventAttachmentOperations.{}',
        client_factory=cf_user_calendar_event_attachment,
    )
    with self.command_group(
        'usersactions user-calendar-event-attachment',
        usersactions_v1_0_user_calendar_event_attachment,
        client_factory=cf_user_calendar_event_attachment,
    ) as g:
        g.custom_command('create-upload-session', 'usersactions_user_calendar_event_attachment_create_upload_session')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_calendar_event_calendar

    usersactions_v1_0_user_calendar_event_calendar = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_calendar_event_calendar_operations#UserCalendarEventCalendarOperations.{}',
        client_factory=cf_user_calendar_event_calendar,
    )
    with self.command_group(
        'usersactions user-calendar-event-calendar',
        usersactions_v1_0_user_calendar_event_calendar,
        client_factory=cf_user_calendar_event_calendar,
    ) as g:
        g.custom_command('get-schedule', 'usersactions_user_calendar_event_calendar_get_schedule')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_calendar_event_instance

    usersactions_v1_0_user_calendar_event_instance = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_calendar_event_instance_operations#UserCalendarEventInstanceOperations.{}',
        client_factory=cf_user_calendar_event_instance,
    )
    with self.command_group(
        'usersactions user-calendar-event-instance',
        usersactions_v1_0_user_calendar_event_instance,
        client_factory=cf_user_calendar_event_instance,
    ) as g:
        g.custom_command('accept', 'usersactions_user_calendar_event_instance_accept')
        g.custom_command('decline', 'usersactions_user_calendar_event_instance_decline')
        g.custom_command('dismiss-reminder', 'usersactions_user_calendar_event_instance_dismiss_reminder')
        g.custom_command('snooze-reminder', 'usersactions_user_calendar_event_instance_snooze_reminder')
        g.custom_command('tentatively-accept', 'usersactions_user_calendar_event_instance_tentatively_accept')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_calendar_event

    usersactions_v1_0_user_calendar_event = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_calendar_event_operations#UserCalendarEventOperations.{}',
        client_factory=cf_user_calendar_event,
    )
    with self.command_group(
        'usersactions user-calendar-event', usersactions_v1_0_user_calendar_event, client_factory=cf_user_calendar_event
    ) as g:
        g.custom_command('accept', 'usersactions_user_calendar_event_accept')
        g.custom_command('decline', 'usersactions_user_calendar_event_decline')
        g.custom_command('dismiss-reminder', 'usersactions_user_calendar_event_dismiss_reminder')
        g.custom_command('snooze-reminder', 'usersactions_user_calendar_event_snooze_reminder')
        g.custom_command('tentatively-accept', 'usersactions_user_calendar_event_tentatively_accept')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_calendar

    usersactions_v1_0_user_calendar = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_calendar_operations#UserCalendarOperations.{}',
        client_factory=cf_user_calendar,
    )
    with self.command_group(
        'usersactions user-calendar', usersactions_v1_0_user_calendar, client_factory=cf_user_calendar
    ) as g:
        g.custom_command('get-schedule', 'usersactions_user_calendar_get_schedule')

    from azext_usersactions_v1_0.generated._client_factory import (
        cf_user_calendar_group_calendar_calendar_view_attachment,
    )

    usersactions_v1_0_user_calendar_group_calendar_calendar_view_attachment = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_calendar_group_calendar_calendar_view_attachment_operations#UserCalendarGroupCalendarCalendarViewAttachmentOperations.{}',
        client_factory=cf_user_calendar_group_calendar_calendar_view_attachment,
    )
    with self.command_group(
        'usersactions user-calendar-group-calendar-calendar-view-attachment',
        usersactions_v1_0_user_calendar_group_calendar_calendar_view_attachment,
        client_factory=cf_user_calendar_group_calendar_calendar_view_attachment,
    ) as g:
        g.custom_command(
            'create-upload-session',
            'usersactions_user_calendar_group_calendar_calendar_view_attachment_create_upload_session',
        )

    from azext_usersactions_v1_0.generated._client_factory import cf_user_calendar_group_calendar_calendar_view_calendar

    usersactions_v1_0_user_calendar_group_calendar_calendar_view_calendar = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_calendar_group_calendar_calendar_view_calendar_operations#UserCalendarGroupCalendarCalendarViewCalendarOperations.{}',
        client_factory=cf_user_calendar_group_calendar_calendar_view_calendar,
    )
    with self.command_group(
        'usersactions user-calendar-group-calendar-calendar-view-calendar',
        usersactions_v1_0_user_calendar_group_calendar_calendar_view_calendar,
        client_factory=cf_user_calendar_group_calendar_calendar_view_calendar,
    ) as g:
        g.custom_command(
            'get-schedule', 'usersactions_user_calendar_group_calendar_calendar_view_calendar_get_schedule'
        )

    from azext_usersactions_v1_0.generated._client_factory import cf_user_calendar_group_calendar_calendar_view_instance

    usersactions_v1_0_user_calendar_group_calendar_calendar_view_instance = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_calendar_group_calendar_calendar_view_instance_operations#UserCalendarGroupCalendarCalendarViewInstanceOperations.{}',
        client_factory=cf_user_calendar_group_calendar_calendar_view_instance,
    )
    with self.command_group(
        'usersactions user-calendar-group-calendar-calendar-view-instance',
        usersactions_v1_0_user_calendar_group_calendar_calendar_view_instance,
        client_factory=cf_user_calendar_group_calendar_calendar_view_instance,
    ) as g:
        g.custom_command('accept', 'usersactions_user_calendar_group_calendar_calendar_view_instance_accept')
        g.custom_command('decline', 'usersactions_user_calendar_group_calendar_calendar_view_instance_decline')
        g.custom_command(
            'dismiss-reminder', 'usersactions_user_calendar_group_calendar_calendar_view_instance_dismiss_reminder'
        )
        g.custom_command(
            'snooze-reminder', 'usersactions_user_calendar_group_calendar_calendar_view_instance_snooze_reminder'
        )
        g.custom_command(
            'tentatively-accept', 'usersactions_user_calendar_group_calendar_calendar_view_instance_tentatively_accept'
        )

    from azext_usersactions_v1_0.generated._client_factory import cf_user_calendar_group_calendar_calendar_view

    usersactions_v1_0_user_calendar_group_calendar_calendar_view = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_calendar_group_calendar_calendar_view_operations#UserCalendarGroupCalendarCalendarViewOperations.{}',
        client_factory=cf_user_calendar_group_calendar_calendar_view,
    )
    with self.command_group(
        'usersactions user-calendar-group-calendar-calendar-view',
        usersactions_v1_0_user_calendar_group_calendar_calendar_view,
        client_factory=cf_user_calendar_group_calendar_calendar_view,
    ) as g:
        g.custom_command('accept', 'usersactions_user_calendar_group_calendar_calendar_view_accept')
        g.custom_command('decline', 'usersactions_user_calendar_group_calendar_calendar_view_decline')
        g.custom_command('dismiss-reminder', 'usersactions_user_calendar_group_calendar_calendar_view_dismiss_reminder')
        g.custom_command('snooze-reminder', 'usersactions_user_calendar_group_calendar_calendar_view_snooze_reminder')
        g.custom_command(
            'tentatively-accept', 'usersactions_user_calendar_group_calendar_calendar_view_tentatively_accept'
        )

    from azext_usersactions_v1_0.generated._client_factory import cf_user_calendar_group_calendar_event_attachment

    usersactions_v1_0_user_calendar_group_calendar_event_attachment = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_calendar_group_calendar_event_attachment_operations#UserCalendarGroupCalendarEventAttachmentOperations.{}',
        client_factory=cf_user_calendar_group_calendar_event_attachment,
    )
    with self.command_group(
        'usersactions user-calendar-group-calendar-event-attachment',
        usersactions_v1_0_user_calendar_group_calendar_event_attachment,
        client_factory=cf_user_calendar_group_calendar_event_attachment,
    ) as g:
        g.custom_command(
            'create-upload-session', 'usersactions_user_calendar_group_calendar_event_attachment_create_upload_session'
        )

    from azext_usersactions_v1_0.generated._client_factory import cf_user_calendar_group_calendar_event_calendar

    usersactions_v1_0_user_calendar_group_calendar_event_calendar = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_calendar_group_calendar_event_calendar_operations#UserCalendarGroupCalendarEventCalendarOperations.{}',
        client_factory=cf_user_calendar_group_calendar_event_calendar,
    )
    with self.command_group(
        'usersactions user-calendar-group-calendar-event-calendar',
        usersactions_v1_0_user_calendar_group_calendar_event_calendar,
        client_factory=cf_user_calendar_group_calendar_event_calendar,
    ) as g:
        g.custom_command('get-schedule', 'usersactions_user_calendar_group_calendar_event_calendar_get_schedule')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_calendar_group_calendar_event_instance

    usersactions_v1_0_user_calendar_group_calendar_event_instance = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_calendar_group_calendar_event_instance_operations#UserCalendarGroupCalendarEventInstanceOperations.{}',
        client_factory=cf_user_calendar_group_calendar_event_instance,
    )
    with self.command_group(
        'usersactions user-calendar-group-calendar-event-instance',
        usersactions_v1_0_user_calendar_group_calendar_event_instance,
        client_factory=cf_user_calendar_group_calendar_event_instance,
    ) as g:
        g.custom_command('accept', 'usersactions_user_calendar_group_calendar_event_instance_accept')
        g.custom_command('decline', 'usersactions_user_calendar_group_calendar_event_instance_decline')
        g.custom_command(
            'dismiss-reminder', 'usersactions_user_calendar_group_calendar_event_instance_dismiss_reminder'
        )
        g.custom_command('snooze-reminder', 'usersactions_user_calendar_group_calendar_event_instance_snooze_reminder')
        g.custom_command(
            'tentatively-accept', 'usersactions_user_calendar_group_calendar_event_instance_tentatively_accept'
        )

    from azext_usersactions_v1_0.generated._client_factory import cf_user_calendar_group_calendar_event

    usersactions_v1_0_user_calendar_group_calendar_event = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_calendar_group_calendar_event_operations#UserCalendarGroupCalendarEventOperations.{}',
        client_factory=cf_user_calendar_group_calendar_event,
    )
    with self.command_group(
        'usersactions user-calendar-group-calendar-event',
        usersactions_v1_0_user_calendar_group_calendar_event,
        client_factory=cf_user_calendar_group_calendar_event,
    ) as g:
        g.custom_command('accept', 'usersactions_user_calendar_group_calendar_event_accept')
        g.custom_command('decline', 'usersactions_user_calendar_group_calendar_event_decline')
        g.custom_command('dismiss-reminder', 'usersactions_user_calendar_group_calendar_event_dismiss_reminder')
        g.custom_command('snooze-reminder', 'usersactions_user_calendar_group_calendar_event_snooze_reminder')
        g.custom_command('tentatively-accept', 'usersactions_user_calendar_group_calendar_event_tentatively_accept')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_calendar_group_calendar

    usersactions_v1_0_user_calendar_group_calendar = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_calendar_group_calendar_operations#UserCalendarGroupCalendarOperations.{}',
        client_factory=cf_user_calendar_group_calendar,
    )
    with self.command_group(
        'usersactions user-calendar-group-calendar',
        usersactions_v1_0_user_calendar_group_calendar,
        client_factory=cf_user_calendar_group_calendar,
    ) as g:
        g.custom_command('get-schedule', 'usersactions_user_calendar_group_calendar_get_schedule')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_calendar_calendar_view_attachment

    usersactions_v1_0_user_calendar_calendar_view_attachment = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_calendar_calendar_view_attachment_operations#UserCalendarCalendarViewAttachmentOperations.{}',
        client_factory=cf_user_calendar_calendar_view_attachment,
    )
    with self.command_group(
        'usersactions user-calendar-calendar-view-attachment',
        usersactions_v1_0_user_calendar_calendar_view_attachment,
        client_factory=cf_user_calendar_calendar_view_attachment,
    ) as g:
        g.custom_command(
            'create-upload-session', 'usersactions_user_calendar_calendar_view_attachment_create_upload_session'
        )

    from azext_usersactions_v1_0.generated._client_factory import cf_user_calendar_calendar_view_calendar

    usersactions_v1_0_user_calendar_calendar_view_calendar = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_calendar_calendar_view_calendar_operations#UserCalendarCalendarViewCalendarOperations.{}',
        client_factory=cf_user_calendar_calendar_view_calendar,
    )
    with self.command_group(
        'usersactions user-calendar-calendar-view-calendar',
        usersactions_v1_0_user_calendar_calendar_view_calendar,
        client_factory=cf_user_calendar_calendar_view_calendar,
    ) as g:
        g.custom_command('get-schedule', 'usersactions_user_calendar_calendar_view_calendar_get_schedule')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_calendar_calendar_view_instance

    usersactions_v1_0_user_calendar_calendar_view_instance = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_calendar_calendar_view_instance_operations#UserCalendarCalendarViewInstanceOperations.{}',
        client_factory=cf_user_calendar_calendar_view_instance,
    )
    with self.command_group(
        'usersactions user-calendar-calendar-view-instance',
        usersactions_v1_0_user_calendar_calendar_view_instance,
        client_factory=cf_user_calendar_calendar_view_instance,
    ) as g:
        g.custom_command('accept', 'usersactions_user_calendar_calendar_view_instance_accept')
        g.custom_command('decline', 'usersactions_user_calendar_calendar_view_instance_decline')
        g.custom_command('dismiss-reminder', 'usersactions_user_calendar_calendar_view_instance_dismiss_reminder')
        g.custom_command('snooze-reminder', 'usersactions_user_calendar_calendar_view_instance_snooze_reminder')
        g.custom_command('tentatively-accept', 'usersactions_user_calendar_calendar_view_instance_tentatively_accept')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_calendar_calendar_view

    usersactions_v1_0_user_calendar_calendar_view = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_calendar_calendar_view_operations#UserCalendarCalendarViewOperations.{}',
        client_factory=cf_user_calendar_calendar_view,
    )
    with self.command_group(
        'usersactions user-calendar-calendar-view',
        usersactions_v1_0_user_calendar_calendar_view,
        client_factory=cf_user_calendar_calendar_view,
    ) as g:
        g.custom_command('accept', 'usersactions_user_calendar_calendar_view_accept')
        g.custom_command('decline', 'usersactions_user_calendar_calendar_view_decline')
        g.custom_command('dismiss-reminder', 'usersactions_user_calendar_calendar_view_dismiss_reminder')
        g.custom_command('snooze-reminder', 'usersactions_user_calendar_calendar_view_snooze_reminder')
        g.custom_command('tentatively-accept', 'usersactions_user_calendar_calendar_view_tentatively_accept')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_calendar_event_attachment

    usersactions_v1_0_user_calendar_event_attachment = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_calendar_event_attachment_operations#UserCalendarEventAttachmentOperations.{}',
        client_factory=cf_user_calendar_event_attachment,
    )
    with self.command_group(
        'usersactions user-calendar-event-attachment',
        usersactions_v1_0_user_calendar_event_attachment,
        client_factory=cf_user_calendar_event_attachment,
    ) as g:
        g.custom_command('create-upload-session', 'usersactions_user_calendar_event_attachment_create_upload_session')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_calendar_event_calendar

    usersactions_v1_0_user_calendar_event_calendar = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_calendar_event_calendar_operations#UserCalendarEventCalendarOperations.{}',
        client_factory=cf_user_calendar_event_calendar,
    )
    with self.command_group(
        'usersactions user-calendar-event-calendar',
        usersactions_v1_0_user_calendar_event_calendar,
        client_factory=cf_user_calendar_event_calendar,
    ) as g:
        g.custom_command('get-schedule', 'usersactions_user_calendar_event_calendar_get_schedule')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_calendar_event_instance

    usersactions_v1_0_user_calendar_event_instance = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_calendar_event_instance_operations#UserCalendarEventInstanceOperations.{}',
        client_factory=cf_user_calendar_event_instance,
    )
    with self.command_group(
        'usersactions user-calendar-event-instance',
        usersactions_v1_0_user_calendar_event_instance,
        client_factory=cf_user_calendar_event_instance,
    ) as g:
        g.custom_command('accept', 'usersactions_user_calendar_event_instance_accept')
        g.custom_command('decline', 'usersactions_user_calendar_event_instance_decline')
        g.custom_command('dismiss-reminder', 'usersactions_user_calendar_event_instance_dismiss_reminder')
        g.custom_command('snooze-reminder', 'usersactions_user_calendar_event_instance_snooze_reminder')
        g.custom_command('tentatively-accept', 'usersactions_user_calendar_event_instance_tentatively_accept')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_calendar_event

    usersactions_v1_0_user_calendar_event = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_calendar_event_operations#UserCalendarEventOperations.{}',
        client_factory=cf_user_calendar_event,
    )
    with self.command_group(
        'usersactions user-calendar-event', usersactions_v1_0_user_calendar_event, client_factory=cf_user_calendar_event
    ) as g:
        g.custom_command('accept', 'usersactions_user_calendar_event_accept')
        g.custom_command('decline', 'usersactions_user_calendar_event_decline')
        g.custom_command('dismiss-reminder', 'usersactions_user_calendar_event_dismiss_reminder')
        g.custom_command('snooze-reminder', 'usersactions_user_calendar_event_snooze_reminder')
        g.custom_command('tentatively-accept', 'usersactions_user_calendar_event_tentatively_accept')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_calendar

    usersactions_v1_0_user_calendar = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_calendar_operations#UserCalendarOperations.{}',
        client_factory=cf_user_calendar,
    )
    with self.command_group(
        'usersactions user-calendar', usersactions_v1_0_user_calendar, client_factory=cf_user_calendar
    ) as g:
        g.custom_command('get-schedule', 'usersactions_user_calendar_get_schedule')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_calendar_view_attachment

    usersactions_v1_0_user_calendar_view_attachment = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_calendar_view_attachment_operations#UserCalendarViewAttachmentOperations.{}',
        client_factory=cf_user_calendar_view_attachment,
    )
    with self.command_group(
        'usersactions user-calendar-view-attachment',
        usersactions_v1_0_user_calendar_view_attachment,
        client_factory=cf_user_calendar_view_attachment,
    ) as g:
        g.custom_command('create-upload-session', 'usersactions_user_calendar_view_attachment_create_upload_session')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_calendar_view_calendar_calendar_view

    usersactions_v1_0_user_calendar_view_calendar_calendar_view = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_calendar_view_calendar_calendar_view_operations#UserCalendarViewCalendarCalendarViewOperations.{}',
        client_factory=cf_user_calendar_view_calendar_calendar_view,
    )
    with self.command_group(
        'usersactions user-calendar-view-calendar-calendar-view',
        usersactions_v1_0_user_calendar_view_calendar_calendar_view,
        client_factory=cf_user_calendar_view_calendar_calendar_view,
    ) as g:
        g.custom_command('accept', 'usersactions_user_calendar_view_calendar_calendar_view_accept')
        g.custom_command('decline', 'usersactions_user_calendar_view_calendar_calendar_view_decline')
        g.custom_command('dismiss-reminder', 'usersactions_user_calendar_view_calendar_calendar_view_dismiss_reminder')
        g.custom_command('snooze-reminder', 'usersactions_user_calendar_view_calendar_calendar_view_snooze_reminder')
        g.custom_command(
            'tentatively-accept', 'usersactions_user_calendar_view_calendar_calendar_view_tentatively_accept'
        )

    from azext_usersactions_v1_0.generated._client_factory import cf_user_calendar_view_calendar_event

    usersactions_v1_0_user_calendar_view_calendar_event = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_calendar_view_calendar_event_operations#UserCalendarViewCalendarEventOperations.{}',
        client_factory=cf_user_calendar_view_calendar_event,
    )
    with self.command_group(
        'usersactions user-calendar-view-calendar-event',
        usersactions_v1_0_user_calendar_view_calendar_event,
        client_factory=cf_user_calendar_view_calendar_event,
    ) as g:
        g.custom_command('accept', 'usersactions_user_calendar_view_calendar_event_accept')
        g.custom_command('decline', 'usersactions_user_calendar_view_calendar_event_decline')
        g.custom_command('dismiss-reminder', 'usersactions_user_calendar_view_calendar_event_dismiss_reminder')
        g.custom_command('snooze-reminder', 'usersactions_user_calendar_view_calendar_event_snooze_reminder')
        g.custom_command('tentatively-accept', 'usersactions_user_calendar_view_calendar_event_tentatively_accept')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_calendar_view_calendar

    usersactions_v1_0_user_calendar_view_calendar = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_calendar_view_calendar_operations#UserCalendarViewCalendarOperations.{}',
        client_factory=cf_user_calendar_view_calendar,
    )
    with self.command_group(
        'usersactions user-calendar-view-calendar',
        usersactions_v1_0_user_calendar_view_calendar,
        client_factory=cf_user_calendar_view_calendar,
    ) as g:
        g.custom_command('get-schedule', 'usersactions_user_calendar_view_calendar_get_schedule')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_calendar_view_instance

    usersactions_v1_0_user_calendar_view_instance = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_calendar_view_instance_operations#UserCalendarViewInstanceOperations.{}',
        client_factory=cf_user_calendar_view_instance,
    )
    with self.command_group(
        'usersactions user-calendar-view-instance',
        usersactions_v1_0_user_calendar_view_instance,
        client_factory=cf_user_calendar_view_instance,
    ) as g:
        g.custom_command('accept', 'usersactions_user_calendar_view_instance_accept')
        g.custom_command('decline', 'usersactions_user_calendar_view_instance_decline')
        g.custom_command('dismiss-reminder', 'usersactions_user_calendar_view_instance_dismiss_reminder')
        g.custom_command('snooze-reminder', 'usersactions_user_calendar_view_instance_snooze_reminder')
        g.custom_command('tentatively-accept', 'usersactions_user_calendar_view_instance_tentatively_accept')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_calendar_view

    usersactions_v1_0_user_calendar_view = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_calendar_view_operations#UserCalendarViewOperations.{}',
        client_factory=cf_user_calendar_view,
    )
    with self.command_group(
        'usersactions user-calendar-view', usersactions_v1_0_user_calendar_view, client_factory=cf_user_calendar_view
    ) as g:
        g.custom_command('accept', 'usersactions_user_calendar_view_accept')
        g.custom_command('decline', 'usersactions_user_calendar_view_decline')
        g.custom_command('dismiss-reminder', 'usersactions_user_calendar_view_dismiss_reminder')
        g.custom_command('snooze-reminder', 'usersactions_user_calendar_view_snooze_reminder')
        g.custom_command('tentatively-accept', 'usersactions_user_calendar_view_tentatively_accept')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_event_attachment

    usersactions_v1_0_user_event_attachment = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_event_attachment_operations#UserEventAttachmentOperations.{}',
        client_factory=cf_user_event_attachment,
    )
    with self.command_group(
        'usersactions user-event-attachment',
        usersactions_v1_0_user_event_attachment,
        client_factory=cf_user_event_attachment,
    ) as g:
        g.custom_command('create-upload-session', 'usersactions_user_event_attachment_create_upload_session')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_event_calendar_calendar_view

    usersactions_v1_0_user_event_calendar_calendar_view = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_event_calendar_calendar_view_operations#UserEventCalendarCalendarViewOperations.{}',
        client_factory=cf_user_event_calendar_calendar_view,
    )
    with self.command_group(
        'usersactions user-event-calendar-calendar-view',
        usersactions_v1_0_user_event_calendar_calendar_view,
        client_factory=cf_user_event_calendar_calendar_view,
    ) as g:
        g.custom_command('accept', 'usersactions_user_event_calendar_calendar_view_accept')
        g.custom_command('decline', 'usersactions_user_event_calendar_calendar_view_decline')
        g.custom_command('dismiss-reminder', 'usersactions_user_event_calendar_calendar_view_dismiss_reminder')
        g.custom_command('snooze-reminder', 'usersactions_user_event_calendar_calendar_view_snooze_reminder')
        g.custom_command('tentatively-accept', 'usersactions_user_event_calendar_calendar_view_tentatively_accept')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_event_calendar_event

    usersactions_v1_0_user_event_calendar_event = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_event_calendar_event_operations#UserEventCalendarEventOperations.{}',
        client_factory=cf_user_event_calendar_event,
    )
    with self.command_group(
        'usersactions user-event-calendar-event',
        usersactions_v1_0_user_event_calendar_event,
        client_factory=cf_user_event_calendar_event,
    ) as g:
        g.custom_command('accept', 'usersactions_user_event_calendar_event_accept')
        g.custom_command('decline', 'usersactions_user_event_calendar_event_decline')
        g.custom_command('dismiss-reminder', 'usersactions_user_event_calendar_event_dismiss_reminder')
        g.custom_command('snooze-reminder', 'usersactions_user_event_calendar_event_snooze_reminder')
        g.custom_command('tentatively-accept', 'usersactions_user_event_calendar_event_tentatively_accept')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_event_calendar

    usersactions_v1_0_user_event_calendar = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_event_calendar_operations#UserEventCalendarOperations.{}',
        client_factory=cf_user_event_calendar,
    )
    with self.command_group(
        'usersactions user-event-calendar', usersactions_v1_0_user_event_calendar, client_factory=cf_user_event_calendar
    ) as g:
        g.custom_command('get-schedule', 'usersactions_user_event_calendar_get_schedule')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_event_instance

    usersactions_v1_0_user_event_instance = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_event_instance_operations#UserEventInstanceOperations.{}',
        client_factory=cf_user_event_instance,
    )
    with self.command_group(
        'usersactions user-event-instance', usersactions_v1_0_user_event_instance, client_factory=cf_user_event_instance
    ) as g:
        g.custom_command('accept', 'usersactions_user_event_instance_accept')
        g.custom_command('decline', 'usersactions_user_event_instance_decline')
        g.custom_command('dismiss-reminder', 'usersactions_user_event_instance_dismiss_reminder')
        g.custom_command('snooze-reminder', 'usersactions_user_event_instance_snooze_reminder')
        g.custom_command('tentatively-accept', 'usersactions_user_event_instance_tentatively_accept')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_event

    usersactions_v1_0_user_event = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_event_operations#UserEventOperations.{}',
        client_factory=cf_user_event,
    )
    with self.command_group('usersactions user-event', usersactions_v1_0_user_event, client_factory=cf_user_event) as g:
        g.custom_command('accept', 'usersactions_user_event_accept')
        g.custom_command('decline', 'usersactions_user_event_decline')
        g.custom_command('dismiss-reminder', 'usersactions_user_event_dismiss_reminder')
        g.custom_command('snooze-reminder', 'usersactions_user_event_snooze_reminder')
        g.custom_command('tentatively-accept', 'usersactions_user_event_tentatively_accept')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_mail_folder_child_folder

    usersactions_v1_0_user_mail_folder_child_folder = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_mail_folder_child_folder_operations#UserMailFolderChildFolderOperations.{}',
        client_factory=cf_user_mail_folder_child_folder,
    )
    with self.command_group(
        'usersactions user-mail-folder-child-folder',
        usersactions_v1_0_user_mail_folder_child_folder,
        client_factory=cf_user_mail_folder_child_folder,
    ) as g:
        g.custom_command('copy', 'usersactions_user_mail_folder_child_folder_copy')
        g.custom_command('move', 'usersactions_user_mail_folder_child_folder_move')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_mail_folder_message_attachment

    usersactions_v1_0_user_mail_folder_message_attachment = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_mail_folder_message_attachment_operations#UserMailFolderMessageAttachmentOperations.{}',
        client_factory=cf_user_mail_folder_message_attachment,
    )
    with self.command_group(
        'usersactions user-mail-folder-message-attachment',
        usersactions_v1_0_user_mail_folder_message_attachment,
        client_factory=cf_user_mail_folder_message_attachment,
    ) as g:
        g.custom_command(
            'create-upload-session', 'usersactions_user_mail_folder_message_attachment_create_upload_session'
        )

    from azext_usersactions_v1_0.generated._client_factory import cf_user_mail_folder_message

    usersactions_v1_0_user_mail_folder_message = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_mail_folder_message_operations#UserMailFolderMessageOperations.{}',
        client_factory=cf_user_mail_folder_message,
    )
    with self.command_group(
        'usersactions user-mail-folder-message',
        usersactions_v1_0_user_mail_folder_message,
        client_factory=cf_user_mail_folder_message,
    ) as g:
        g.custom_command('copy', 'usersactions_user_mail_folder_message_copy')
        g.custom_command('create-forward', 'usersactions_user_mail_folder_message_create_forward')
        g.custom_command('create-reply', 'usersactions_user_mail_folder_message_create_reply')
        g.custom_command('create-reply-all', 'usersactions_user_mail_folder_message_create_reply_all')
        g.custom_command('forward', 'usersactions_user_mail_folder_message_forward')
        g.custom_command('move', 'usersactions_user_mail_folder_message_move')
        g.custom_command('reply', 'usersactions_user_mail_folder_message_reply')
        g.custom_command('reply-all', 'usersactions_user_mail_folder_message_reply_all')
        g.custom_command('send', 'usersactions_user_mail_folder_message_send')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_mail_folder

    usersactions_v1_0_user_mail_folder = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_mail_folder_operations#UserMailFolderOperations.{}',
        client_factory=cf_user_mail_folder,
    )
    with self.command_group(
        'usersactions user-mail-folder', usersactions_v1_0_user_mail_folder, client_factory=cf_user_mail_folder
    ) as g:
        g.custom_command('copy', 'usersactions_user_mail_folder_copy')
        g.custom_command('move', 'usersactions_user_mail_folder_move')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_managed_device

    usersactions_v1_0_user_managed_device = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_managed_device_operations#UserManagedDeviceOperations.{}',
        client_factory=cf_user_managed_device,
    )
    with self.command_group(
        'usersactions user-managed-device', usersactions_v1_0_user_managed_device, client_factory=cf_user_managed_device
    ) as g:
        g.custom_command('bypass-activation-lock', 'usersactions_user_managed_device_bypass_activation_lock')
        g.custom_command('clean-window-device', 'usersactions_user_managed_device_clean_window_device')
        g.custom_command(
            'delete-user-from-shared-apple-device',
            'usersactions_user_managed_device_delete_user_from_shared_apple_device',
        )
        g.custom_command('disable-lost-mode', 'usersactions_user_managed_device_disable_lost_mode')
        g.custom_command('locate-device', 'usersactions_user_managed_device_locate_device')
        g.custom_command(
            'logout-shared-apple-device-active-user',
            'usersactions_user_managed_device_logout_shared_apple_device_active_user',
        )
        g.custom_command('reboot-now', 'usersactions_user_managed_device_reboot_now')
        g.custom_command('recover-passcode', 'usersactions_user_managed_device_recover_passcode')
        g.custom_command('remote-lock', 'usersactions_user_managed_device_remote_lock')
        g.custom_command('request-remote-assistance', 'usersactions_user_managed_device_request_remote_assistance')
        g.custom_command('reset-passcode', 'usersactions_user_managed_device_reset_passcode')
        g.custom_command('retire', 'usersactions_user_managed_device_retire')
        g.custom_command('shut-down', 'usersactions_user_managed_device_shut_down')
        g.custom_command('sync-device', 'usersactions_user_managed_device_sync_device')
        g.custom_command(
            'update-window-device-account', 'usersactions_user_managed_device_update_window_device_account'
        )
        g.custom_command('window-defender-scan', 'usersactions_user_managed_device_window_defender_scan')
        g.custom_command(
            'window-defender-update-signature', 'usersactions_user_managed_device_window_defender_update_signature'
        )
        g.custom_command('wipe', 'usersactions_user_managed_device_wipe')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_message_attachment

    usersactions_v1_0_user_message_attachment = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_message_attachment_operations#UserMessageAttachmentOperations.{}',
        client_factory=cf_user_message_attachment,
    )
    with self.command_group(
        'usersactions user-message-attachment',
        usersactions_v1_0_user_message_attachment,
        client_factory=cf_user_message_attachment,
    ) as g:
        g.custom_command('create-upload-session', 'usersactions_user_message_attachment_create_upload_session')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_message

    usersactions_v1_0_user_message = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_message_operations#UserMessageOperations.{}',
        client_factory=cf_user_message,
    )
    with self.command_group(
        'usersactions user-message', usersactions_v1_0_user_message, client_factory=cf_user_message
    ) as g:
        g.custom_command('copy', 'usersactions_user_message_copy')
        g.custom_command('create-forward', 'usersactions_user_message_create_forward')
        g.custom_command('create-reply', 'usersactions_user_message_create_reply')
        g.custom_command('create-reply-all', 'usersactions_user_message_create_reply_all')
        g.custom_command('forward', 'usersactions_user_message_forward')
        g.custom_command('move', 'usersactions_user_message_move')
        g.custom_command('reply', 'usersactions_user_message_reply')
        g.custom_command('reply-all', 'usersactions_user_message_reply_all')
        g.custom_command('send', 'usersactions_user_message_send')

    from azext_usersactions_v1_0.generated._client_factory import cf_user

    usersactions_v1_0_user = CliCommandType(
        operations_tmpl=(
            'azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_operations#UserOperations.{}'
        ),
        client_factory=cf_user,
    )
    with self.command_group('usersactions user', usersactions_v1_0_user, client_factory=cf_user) as g:
        g.custom_command('assign-license', 'usersactions_user_assign_license')
        g.custom_command('change-password', 'usersactions_user_change_password')
        g.custom_command('check-member-group', 'usersactions_user_check_member_group')
        g.custom_command('check-member-object', 'usersactions_user_check_member_object')
        g.custom_command('export-personal-data', 'usersactions_user_export_personal_data')
        g.custom_command('find-meeting-time', 'usersactions_user_find_meeting_time')
        g.custom_command('get-available-extension-property', 'usersactions_user_get_available_extension_property')
        g.custom_command('get-by-id', 'usersactions_user_get_by_id')
        g.custom_command('get-mail-tip', 'usersactions_user_get_mail_tip')
        g.custom_command('get-member-group', 'usersactions_user_get_member_group')
        g.custom_command('get-member-object', 'usersactions_user_get_member_object')
        g.custom_command('remove-all-device-from-management', 'usersactions_user_remove_all_device_from_management')
        g.custom_command('reprocess-license-assignment', 'usersactions_user_reprocess_license_assignment')
        g.custom_command('restore', 'usersactions_user_restore')
        g.custom_command('revoke-sign-in-session', 'usersactions_user_revoke_sign_in_session')
        g.custom_command('send-mail', 'usersactions_user_send_mail')
        g.custom_command('translate-exchange-id', 'usersactions_user_translate_exchange_id')
        g.custom_command('validate-property', 'usersactions_user_validate_property')
        g.custom_command(
            'wipe-managed-app-registration-by-device-tag',
            'usersactions_user_wipe_managed_app_registration_by_device_tag',
        )

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_notebook

    usersactions_v1_0_user_onenote_notebook = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_notebook_operations#UserOnenoteNotebookOperations.{}',
        client_factory=cf_user_onenote_notebook,
    )
    with self.command_group(
        'usersactions user-onenote-notebook',
        usersactions_v1_0_user_onenote_notebook,
        client_factory=cf_user_onenote_notebook,
    ) as g:
        g.custom_command('copy-notebook', 'usersactions_user_onenote_notebook_copy_notebook')
        g.custom_command('get-notebook-from-web-url', 'usersactions_user_onenote_notebook_get_notebook_from_web_url')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_notebook_section_group_parent_notebook

    usersactions_v1_0_user_onenote_notebook_section_group_parent_notebook = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_notebook_section_group_parent_notebook_operations#UserOnenoteNotebookSectionGroupParentNotebookOperations.{}',
        client_factory=cf_user_onenote_notebook_section_group_parent_notebook,
    )
    with self.command_group(
        'usersactions user-onenote-notebook-section-group-parent-notebook',
        usersactions_v1_0_user_onenote_notebook_section_group_parent_notebook,
        client_factory=cf_user_onenote_notebook_section_group_parent_notebook,
    ) as g:
        g.custom_command(
            'copy-notebook', 'usersactions_user_onenote_notebook_section_group_parent_notebook_copy_notebook'
        )

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_notebook_section_group_section

    usersactions_v1_0_user_onenote_notebook_section_group_section = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_notebook_section_group_section_operations#UserOnenoteNotebookSectionGroupSectionOperations.{}',
        client_factory=cf_user_onenote_notebook_section_group_section,
    )
    with self.command_group(
        'usersactions user-onenote-notebook-section-group-section',
        usersactions_v1_0_user_onenote_notebook_section_group_section,
        client_factory=cf_user_onenote_notebook_section_group_section,
    ) as g:
        g.custom_command(
            'copy-to-notebook', 'usersactions_user_onenote_notebook_section_group_section_copy_to_notebook'
        )
        g.custom_command(
            'copy-to-section-group', 'usersactions_user_onenote_notebook_section_group_section_copy_to_section_group'
        )

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_notebook_section_group_section_page

    usersactions_v1_0_user_onenote_notebook_section_group_section_page = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_notebook_section_group_section_page_operations#UserOnenoteNotebookSectionGroupSectionPageOperations.{}',
        client_factory=cf_user_onenote_notebook_section_group_section_page,
    )
    with self.command_group(
        'usersactions user-onenote-notebook-section-group-section-page',
        usersactions_v1_0_user_onenote_notebook_section_group_section_page,
        client_factory=cf_user_onenote_notebook_section_group_section_page,
    ) as g:
        g.custom_command(
            'copy-to-section', 'usersactions_user_onenote_notebook_section_group_section_page_copy_to_section'
        )
        g.custom_command(
            'onenote-patch-content',
            'usersactions_user_onenote_notebook_section_group_section_page_onenote_patch_content',
        )

    from azext_usersactions_v1_0.generated._client_factory import (
        cf_user_onenote_notebook_section_group_section_page_parent_notebook,
    )

    usersactions_v1_0_user_onenote_notebook_section_group_section_page_parent_notebook = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_notebook_section_group_section_page_parent_notebook_operations#UserOnenoteNotebookSectionGroupSectionPageParentNotebookOperations.{}',
        client_factory=cf_user_onenote_notebook_section_group_section_page_parent_notebook,
    )
    with self.command_group(
        'usersactions user-onenote-notebook-section-group-section-page-parent-notebook',
        usersactions_v1_0_user_onenote_notebook_section_group_section_page_parent_notebook,
        client_factory=cf_user_onenote_notebook_section_group_section_page_parent_notebook,
    ) as g:
        g.custom_command(
            'copy-notebook',
            'usersactions_user_onenote_notebook_section_group_section_page_parent_notebook_copy_notebook',
        )

    from azext_usersactions_v1_0.generated._client_factory import (
        cf_user_onenote_notebook_section_group_section_page_parent_section,
    )

    usersactions_v1_0_user_onenote_notebook_section_group_section_page_parent_section = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_notebook_section_group_section_page_parent_section_operations#UserOnenoteNotebookSectionGroupSectionPageParentSectionOperations.{}',
        client_factory=cf_user_onenote_notebook_section_group_section_page_parent_section,
    )
    with self.command_group(
        'usersactions user-onenote-notebook-section-group-section-page-parent-section',
        usersactions_v1_0_user_onenote_notebook_section_group_section_page_parent_section,
        client_factory=cf_user_onenote_notebook_section_group_section_page_parent_section,
    ) as g:
        g.custom_command(
            'copy-to-notebook',
            'usersactions_user_onenote_notebook_section_group_section_page_parent_section_copy_to_notebook',
        )
        g.custom_command(
            'copy-to-section-group',
            'usersactions_user_onenote_notebook_section_group_section_page_parent_section_copy_to_section_group',
        )

    from azext_usersactions_v1_0.generated._client_factory import (
        cf_user_onenote_notebook_section_group_section_parent_notebook,
    )

    usersactions_v1_0_user_onenote_notebook_section_group_section_parent_notebook = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_notebook_section_group_section_parent_notebook_operations#UserOnenoteNotebookSectionGroupSectionParentNotebookOperations.{}',
        client_factory=cf_user_onenote_notebook_section_group_section_parent_notebook,
    )
    with self.command_group(
        'usersactions user-onenote-notebook-section-group-section-parent-notebook',
        usersactions_v1_0_user_onenote_notebook_section_group_section_parent_notebook,
        client_factory=cf_user_onenote_notebook_section_group_section_parent_notebook,
    ) as g:
        g.custom_command(
            'copy-notebook', 'usersactions_user_onenote_notebook_section_group_section_parent_notebook_copy_notebook'
        )

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_notebook_section

    usersactions_v1_0_user_onenote_notebook_section = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_notebook_section_operations#UserOnenoteNotebookSectionOperations.{}',
        client_factory=cf_user_onenote_notebook_section,
    )
    with self.command_group(
        'usersactions user-onenote-notebook-section',
        usersactions_v1_0_user_onenote_notebook_section,
        client_factory=cf_user_onenote_notebook_section,
    ) as g:
        g.custom_command('copy-to-notebook', 'usersactions_user_onenote_notebook_section_copy_to_notebook')
        g.custom_command('copy-to-section-group', 'usersactions_user_onenote_notebook_section_copy_to_section_group')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_notebook_section_page

    usersactions_v1_0_user_onenote_notebook_section_page = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_notebook_section_page_operations#UserOnenoteNotebookSectionPageOperations.{}',
        client_factory=cf_user_onenote_notebook_section_page,
    )
    with self.command_group(
        'usersactions user-onenote-notebook-section-page',
        usersactions_v1_0_user_onenote_notebook_section_page,
        client_factory=cf_user_onenote_notebook_section_page,
    ) as g:
        g.custom_command('copy-to-section', 'usersactions_user_onenote_notebook_section_page_copy_to_section')
        g.custom_command(
            'onenote-patch-content', 'usersactions_user_onenote_notebook_section_page_onenote_patch_content'
        )

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_notebook_section_page_parent_notebook

    usersactions_v1_0_user_onenote_notebook_section_page_parent_notebook = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_notebook_section_page_parent_notebook_operations#UserOnenoteNotebookSectionPageParentNotebookOperations.{}',
        client_factory=cf_user_onenote_notebook_section_page_parent_notebook,
    )
    with self.command_group(
        'usersactions user-onenote-notebook-section-page-parent-notebook',
        usersactions_v1_0_user_onenote_notebook_section_page_parent_notebook,
        client_factory=cf_user_onenote_notebook_section_page_parent_notebook,
    ) as g:
        g.custom_command(
            'copy-notebook', 'usersactions_user_onenote_notebook_section_page_parent_notebook_copy_notebook'
        )

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_notebook_section_page_parent_section

    usersactions_v1_0_user_onenote_notebook_section_page_parent_section = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_notebook_section_page_parent_section_operations#UserOnenoteNotebookSectionPageParentSectionOperations.{}',
        client_factory=cf_user_onenote_notebook_section_page_parent_section,
    )
    with self.command_group(
        'usersactions user-onenote-notebook-section-page-parent-section',
        usersactions_v1_0_user_onenote_notebook_section_page_parent_section,
        client_factory=cf_user_onenote_notebook_section_page_parent_section,
    ) as g:
        g.custom_command(
            'copy-to-notebook', 'usersactions_user_onenote_notebook_section_page_parent_section_copy_to_notebook'
        )
        g.custom_command(
            'copy-to-section-group',
            'usersactions_user_onenote_notebook_section_page_parent_section_copy_to_section_group',
        )

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_notebook_section_parent_notebook

    usersactions_v1_0_user_onenote_notebook_section_parent_notebook = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_notebook_section_parent_notebook_operations#UserOnenoteNotebookSectionParentNotebookOperations.{}',
        client_factory=cf_user_onenote_notebook_section_parent_notebook,
    )
    with self.command_group(
        'usersactions user-onenote-notebook-section-parent-notebook',
        usersactions_v1_0_user_onenote_notebook_section_parent_notebook,
        client_factory=cf_user_onenote_notebook_section_parent_notebook,
    ) as g:
        g.custom_command('copy-notebook', 'usersactions_user_onenote_notebook_section_parent_notebook_copy_notebook')

    from azext_usersactions_v1_0.generated._client_factory import (
        cf_user_onenote_notebook_section_parent_section_group_parent_notebook,
    )

    usersactions_v1_0_user_onenote_notebook_section_parent_section_group_parent_notebook = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_notebook_section_parent_section_group_parent_notebook_operations#UserOnenoteNotebookSectionParentSectionGroupParentNotebookOperations.{}',
        client_factory=cf_user_onenote_notebook_section_parent_section_group_parent_notebook,
    )
    with self.command_group(
        'usersactions user-onenote-notebook-section-parent-section-group-parent-notebook',
        usersactions_v1_0_user_onenote_notebook_section_parent_section_group_parent_notebook,
        client_factory=cf_user_onenote_notebook_section_parent_section_group_parent_notebook,
    ) as g:
        g.custom_command(
            'copy-notebook',
            'usersactions_user_onenote_notebook_section_parent_section_group_parent_notebook_copy_notebook',
        )

    from azext_usersactions_v1_0.generated._client_factory import (
        cf_user_onenote_notebook_section_parent_section_group_section,
    )

    usersactions_v1_0_user_onenote_notebook_section_parent_section_group_section = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_notebook_section_parent_section_group_section_operations#UserOnenoteNotebookSectionParentSectionGroupSectionOperations.{}',
        client_factory=cf_user_onenote_notebook_section_parent_section_group_section,
    )
    with self.command_group(
        'usersactions user-onenote-notebook-section-parent-section-group-section',
        usersactions_v1_0_user_onenote_notebook_section_parent_section_group_section,
        client_factory=cf_user_onenote_notebook_section_parent_section_group_section,
    ) as g:
        g.custom_command(
            'copy-to-notebook',
            'usersactions_user_onenote_notebook_section_parent_section_group_section_copy_to_notebook',
        )
        g.custom_command(
            'copy-to-section-group',
            'usersactions_user_onenote_notebook_section_parent_section_group_section_copy_to_section_group',
        )

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_page

    usersactions_v1_0_user_onenote_page = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_page_operations#UserOnenotePageOperations.{}',
        client_factory=cf_user_onenote_page,
    )
    with self.command_group(
        'usersactions user-onenote-page', usersactions_v1_0_user_onenote_page, client_factory=cf_user_onenote_page
    ) as g:
        g.custom_command('copy-to-section', 'usersactions_user_onenote_page_copy_to_section')
        g.custom_command('onenote-patch-content', 'usersactions_user_onenote_page_onenote_patch_content')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_page_parent_notebook

    usersactions_v1_0_user_onenote_page_parent_notebook = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_page_parent_notebook_operations#UserOnenotePageParentNotebookOperations.{}',
        client_factory=cf_user_onenote_page_parent_notebook,
    )
    with self.command_group(
        'usersactions user-onenote-page-parent-notebook',
        usersactions_v1_0_user_onenote_page_parent_notebook,
        client_factory=cf_user_onenote_page_parent_notebook,
    ) as g:
        g.custom_command('copy-notebook', 'usersactions_user_onenote_page_parent_notebook_copy_notebook')

    from azext_usersactions_v1_0.generated._client_factory import (
        cf_user_onenote_page_parent_notebook_section_group_parent_notebook,
    )

    usersactions_v1_0_user_onenote_page_parent_notebook_section_group_parent_notebook = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_page_parent_notebook_section_group_parent_notebook_operations#UserOnenotePageParentNotebookSectionGroupParentNotebookOperations.{}',
        client_factory=cf_user_onenote_page_parent_notebook_section_group_parent_notebook,
    )
    with self.command_group(
        'usersactions user-onenote-page-parent-notebook-section-group-parent-notebook',
        usersactions_v1_0_user_onenote_page_parent_notebook_section_group_parent_notebook,
        client_factory=cf_user_onenote_page_parent_notebook_section_group_parent_notebook,
    ) as g:
        g.custom_command(
            'copy-notebook',
            'usersactions_user_onenote_page_parent_notebook_section_group_parent_notebook_copy_notebook',
        )

    from azext_usersactions_v1_0.generated._client_factory import (
        cf_user_onenote_page_parent_notebook_section_group_section,
    )

    usersactions_v1_0_user_onenote_page_parent_notebook_section_group_section = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_page_parent_notebook_section_group_section_operations#UserOnenotePageParentNotebookSectionGroupSectionOperations.{}',
        client_factory=cf_user_onenote_page_parent_notebook_section_group_section,
    )
    with self.command_group(
        'usersactions user-onenote-page-parent-notebook-section-group-section',
        usersactions_v1_0_user_onenote_page_parent_notebook_section_group_section,
        client_factory=cf_user_onenote_page_parent_notebook_section_group_section,
    ) as g:
        g.custom_command(
            'copy-to-notebook', 'usersactions_user_onenote_page_parent_notebook_section_group_section_copy_to_notebook'
        )
        g.custom_command(
            'copy-to-section-group',
            'usersactions_user_onenote_page_parent_notebook_section_group_section_copy_to_section_group',
        )

    from azext_usersactions_v1_0.generated._client_factory import (
        cf_user_onenote_page_parent_notebook_section_group_section_page,
    )

    usersactions_v1_0_user_onenote_page_parent_notebook_section_group_section_page = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_page_parent_notebook_section_group_section_page_operations#UserOnenotePageParentNotebookSectionGroupSectionPageOperations.{}',
        client_factory=cf_user_onenote_page_parent_notebook_section_group_section_page,
    )
    with self.command_group(
        'usersactions user-onenote-page-parent-notebook-section-group-section-page',
        usersactions_v1_0_user_onenote_page_parent_notebook_section_group_section_page,
        client_factory=cf_user_onenote_page_parent_notebook_section_group_section_page,
    ) as g:
        g.custom_command(
            'copy-to-section',
            'usersactions_user_onenote_page_parent_notebook_section_group_section_page_copy_to_section',
        )
        g.custom_command(
            'onenote-patch-content',
            'usersactions_user_onenote_page_parent_notebook_section_group_section_page_onenote_patch_content',
        )

    from azext_usersactions_v1_0.generated._client_factory import (
        cf_user_onenote_page_parent_notebook_section_group_section_parent_notebook,
    )

    usersactions_v1_0_user_onenote_page_parent_notebook_section_group_section_parent_notebook = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_page_parent_notebook_section_group_section_parent_notebook_operations#UserOnenotePageParentNotebookSectionGroupSectionParentNotebookOperations.{}',
        client_factory=cf_user_onenote_page_parent_notebook_section_group_section_parent_notebook,
    )
    with self.command_group(
        'usersactions user-onenote-page-parent-notebook-section-group-section-parent-notebook',
        usersactions_v1_0_user_onenote_page_parent_notebook_section_group_section_parent_notebook,
        client_factory=cf_user_onenote_page_parent_notebook_section_group_section_parent_notebook,
    ) as g:
        g.custom_command(
            'copy-notebook',
            'usersactions_user_onenote_page_parent_notebook_section_group_section_parent_notebook_copy_notebook',
        )

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_page_parent_notebook_section

    usersactions_v1_0_user_onenote_page_parent_notebook_section = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_page_parent_notebook_section_operations#UserOnenotePageParentNotebookSectionOperations.{}',
        client_factory=cf_user_onenote_page_parent_notebook_section,
    )
    with self.command_group(
        'usersactions user-onenote-page-parent-notebook-section',
        usersactions_v1_0_user_onenote_page_parent_notebook_section,
        client_factory=cf_user_onenote_page_parent_notebook_section,
    ) as g:
        g.custom_command('copy-to-notebook', 'usersactions_user_onenote_page_parent_notebook_section_copy_to_notebook')
        g.custom_command(
            'copy-to-section-group', 'usersactions_user_onenote_page_parent_notebook_section_copy_to_section_group'
        )

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_page_parent_notebook_section_page

    usersactions_v1_0_user_onenote_page_parent_notebook_section_page = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_page_parent_notebook_section_page_operations#UserOnenotePageParentNotebookSectionPageOperations.{}',
        client_factory=cf_user_onenote_page_parent_notebook_section_page,
    )
    with self.command_group(
        'usersactions user-onenote-page-parent-notebook-section-page',
        usersactions_v1_0_user_onenote_page_parent_notebook_section_page,
        client_factory=cf_user_onenote_page_parent_notebook_section_page,
    ) as g:
        g.custom_command(
            'copy-to-section', 'usersactions_user_onenote_page_parent_notebook_section_page_copy_to_section'
        )
        g.custom_command(
            'onenote-patch-content', 'usersactions_user_onenote_page_parent_notebook_section_page_onenote_patch_content'
        )

    from azext_usersactions_v1_0.generated._client_factory import (
        cf_user_onenote_page_parent_notebook_section_parent_notebook,
    )

    usersactions_v1_0_user_onenote_page_parent_notebook_section_parent_notebook = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_page_parent_notebook_section_parent_notebook_operations#UserOnenotePageParentNotebookSectionParentNotebookOperations.{}',
        client_factory=cf_user_onenote_page_parent_notebook_section_parent_notebook,
    )
    with self.command_group(
        'usersactions user-onenote-page-parent-notebook-section-parent-notebook',
        usersactions_v1_0_user_onenote_page_parent_notebook_section_parent_notebook,
        client_factory=cf_user_onenote_page_parent_notebook_section_parent_notebook,
    ) as g:
        g.custom_command(
            'copy-notebook', 'usersactions_user_onenote_page_parent_notebook_section_parent_notebook_copy_notebook'
        )

    from azext_usersactions_v1_0.generated._client_factory import (
        cf_user_onenote_page_parent_notebook_section_parent_section_group_parent_notebook,
    )

    usersactions_v1_0_user_onenote_page_parent_notebook_section_parent_section_group_parent_notebook = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_page_parent_notebook_section_parent_section_group_parent_notebook_operations#UserOnenotePageParentNotebookSectionParentSectionGroupParentNotebookOperations.{}',
        client_factory=cf_user_onenote_page_parent_notebook_section_parent_section_group_parent_notebook,
    )
    with self.command_group(
        'usersactions user-onenote-page-parent-notebook-section-parent-section-group-parent-notebook',
        usersactions_v1_0_user_onenote_page_parent_notebook_section_parent_section_group_parent_notebook,
        client_factory=cf_user_onenote_page_parent_notebook_section_parent_section_group_parent_notebook,
    ) as g:
        g.custom_command(
            'copy-notebook',
            'usersactions_user_onenote_page_parent_notebook_section_parent_section_group_parent_notebook_copy_notebook',
        )

    from azext_usersactions_v1_0.generated._client_factory import (
        cf_user_onenote_page_parent_notebook_section_parent_section_group_section,
    )

    usersactions_v1_0_user_onenote_page_parent_notebook_section_parent_section_group_section = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_page_parent_notebook_section_parent_section_group_section_operations#UserOnenotePageParentNotebookSectionParentSectionGroupSectionOperations.{}',
        client_factory=cf_user_onenote_page_parent_notebook_section_parent_section_group_section,
    )
    with self.command_group(
        'usersactions user-onenote-page-parent-notebook-section-parent-section-group-section',
        usersactions_v1_0_user_onenote_page_parent_notebook_section_parent_section_group_section,
        client_factory=cf_user_onenote_page_parent_notebook_section_parent_section_group_section,
    ) as g:
        g.custom_command(
            'copy-to-notebook',
            'usersactions_user_onenote_page_parent_notebook_section_parent_section_group_section_copy_to_notebook',
        )
        g.custom_command(
            'copy-to-section-group',
            'usersactions_user_onenote_page_parent_notebook_section_parent_section_group_section_copy_to_section_group',
        )

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_page_parent_section

    usersactions_v1_0_user_onenote_page_parent_section = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_page_parent_section_operations#UserOnenotePageParentSectionOperations.{}',
        client_factory=cf_user_onenote_page_parent_section,
    )
    with self.command_group(
        'usersactions user-onenote-page-parent-section',
        usersactions_v1_0_user_onenote_page_parent_section,
        client_factory=cf_user_onenote_page_parent_section,
    ) as g:
        g.custom_command('copy-to-notebook', 'usersactions_user_onenote_page_parent_section_copy_to_notebook')
        g.custom_command('copy-to-section-group', 'usersactions_user_onenote_page_parent_section_copy_to_section_group')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_page_parent_section_page

    usersactions_v1_0_user_onenote_page_parent_section_page = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_page_parent_section_page_operations#UserOnenotePageParentSectionPageOperations.{}',
        client_factory=cf_user_onenote_page_parent_section_page,
    )
    with self.command_group(
        'usersactions user-onenote-page-parent-section-page',
        usersactions_v1_0_user_onenote_page_parent_section_page,
        client_factory=cf_user_onenote_page_parent_section_page,
    ) as g:
        g.custom_command('copy-to-section', 'usersactions_user_onenote_page_parent_section_page_copy_to_section')
        g.custom_command(
            'onenote-patch-content', 'usersactions_user_onenote_page_parent_section_page_onenote_patch_content'
        )

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_page_parent_section_parent_notebook

    usersactions_v1_0_user_onenote_page_parent_section_parent_notebook = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_page_parent_section_parent_notebook_operations#UserOnenotePageParentSectionParentNotebookOperations.{}',
        client_factory=cf_user_onenote_page_parent_section_parent_notebook,
    )
    with self.command_group(
        'usersactions user-onenote-page-parent-section-parent-notebook',
        usersactions_v1_0_user_onenote_page_parent_section_parent_notebook,
        client_factory=cf_user_onenote_page_parent_section_parent_notebook,
    ) as g:
        g.custom_command('copy-notebook', 'usersactions_user_onenote_page_parent_section_parent_notebook_copy_notebook')

    from azext_usersactions_v1_0.generated._client_factory import (
        cf_user_onenote_page_parent_section_parent_notebook_section_group_parent_notebook,
    )

    usersactions_v1_0_user_onenote_page_parent_section_parent_notebook_section_group_parent_notebook = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_page_parent_section_parent_notebook_section_group_parent_notebook_operations#UserOnenotePageParentSectionParentNotebookSectionGroupParentNotebookOperations.{}',
        client_factory=cf_user_onenote_page_parent_section_parent_notebook_section_group_parent_notebook,
    )
    with self.command_group(
        'usersactions user-onenote-page-parent-section-parent-notebook-section-group-parent-notebook',
        usersactions_v1_0_user_onenote_page_parent_section_parent_notebook_section_group_parent_notebook,
        client_factory=cf_user_onenote_page_parent_section_parent_notebook_section_group_parent_notebook,
    ) as g:
        g.custom_command(
            'copy-notebook',
            'usersactions_user_onenote_page_parent_section_parent_notebook_section_group_parent_notebook_copy_notebook',
        )

    from azext_usersactions_v1_0.generated._client_factory import (
        cf_user_onenote_page_parent_section_parent_notebook_section_group_section,
    )

    usersactions_v1_0_user_onenote_page_parent_section_parent_notebook_section_group_section = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_page_parent_section_parent_notebook_section_group_section_operations#UserOnenotePageParentSectionParentNotebookSectionGroupSectionOperations.{}',
        client_factory=cf_user_onenote_page_parent_section_parent_notebook_section_group_section,
    )
    with self.command_group(
        'usersactions user-onenote-page-parent-section-parent-notebook-section-group-section',
        usersactions_v1_0_user_onenote_page_parent_section_parent_notebook_section_group_section,
        client_factory=cf_user_onenote_page_parent_section_parent_notebook_section_group_section,
    ) as g:
        g.custom_command(
            'copy-to-notebook',
            'usersactions_user_onenote_page_parent_section_parent_notebook_section_group_section_copy_to_notebook',
        )
        g.custom_command(
            'copy-to-section-group',
            'usersactions_user_onenote_page_parent_section_parent_notebook_section_group_section_copy_to_section_group',
        )

    from azext_usersactions_v1_0.generated._client_factory import (
        cf_user_onenote_page_parent_section_parent_notebook_section,
    )

    usersactions_v1_0_user_onenote_page_parent_section_parent_notebook_section = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_page_parent_section_parent_notebook_section_operations#UserOnenotePageParentSectionParentNotebookSectionOperations.{}',
        client_factory=cf_user_onenote_page_parent_section_parent_notebook_section,
    )
    with self.command_group(
        'usersactions user-onenote-page-parent-section-parent-notebook-section',
        usersactions_v1_0_user_onenote_page_parent_section_parent_notebook_section,
        client_factory=cf_user_onenote_page_parent_section_parent_notebook_section,
    ) as g:
        g.custom_command(
            'copy-to-notebook', 'usersactions_user_onenote_page_parent_section_parent_notebook_section_copy_to_notebook'
        )
        g.custom_command(
            'copy-to-section-group',
            'usersactions_user_onenote_page_parent_section_parent_notebook_section_copy_to_section_group',
        )

    from azext_usersactions_v1_0.generated._client_factory import (
        cf_user_onenote_page_parent_section_parent_section_group_parent_notebook,
    )

    usersactions_v1_0_user_onenote_page_parent_section_parent_section_group_parent_notebook = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_page_parent_section_parent_section_group_parent_notebook_operations#UserOnenotePageParentSectionParentSectionGroupParentNotebookOperations.{}',
        client_factory=cf_user_onenote_page_parent_section_parent_section_group_parent_notebook,
    )
    with self.command_group(
        'usersactions user-onenote-page-parent-section-parent-section-group-parent-notebook',
        usersactions_v1_0_user_onenote_page_parent_section_parent_section_group_parent_notebook,
        client_factory=cf_user_onenote_page_parent_section_parent_section_group_parent_notebook,
    ) as g:
        g.custom_command(
            'copy-notebook',
            'usersactions_user_onenote_page_parent_section_parent_section_group_parent_notebook_copy_notebook',
        )

    from azext_usersactions_v1_0.generated._client_factory import (
        cf_user_onenote_page_parent_section_parent_section_group_parent_notebook_section,
    )

    usersactions_v1_0_user_onenote_page_parent_section_parent_section_group_parent_notebook_section = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_page_parent_section_parent_section_group_parent_notebook_section_operations#UserOnenotePageParentSectionParentSectionGroupParentNotebookSectionOperations.{}',
        client_factory=cf_user_onenote_page_parent_section_parent_section_group_parent_notebook_section,
    )
    with self.command_group(
        'usersactions user-onenote-page-parent-section-parent-section-group-parent-notebook-section',
        usersactions_v1_0_user_onenote_page_parent_section_parent_section_group_parent_notebook_section,
        client_factory=cf_user_onenote_page_parent_section_parent_section_group_parent_notebook_section,
    ) as g:
        g.custom_command(
            'copy-to-notebook',
            'usersactions_user_onenote_page_parent_section_parent_section_group_parent_notebook_section_copy_to_notebook',
        )
        g.custom_command(
            'copy-to-section-group',
            'usersactions_user_onenote_page_parent_section_parent_section_group_parent_notebook_section_copy_to_section_group',
        )

    from azext_usersactions_v1_0.generated._client_factory import (
        cf_user_onenote_page_parent_section_parent_section_group_section,
    )

    usersactions_v1_0_user_onenote_page_parent_section_parent_section_group_section = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_page_parent_section_parent_section_group_section_operations#UserOnenotePageParentSectionParentSectionGroupSectionOperations.{}',
        client_factory=cf_user_onenote_page_parent_section_parent_section_group_section,
    )
    with self.command_group(
        'usersactions user-onenote-page-parent-section-parent-section-group-section',
        usersactions_v1_0_user_onenote_page_parent_section_parent_section_group_section,
        client_factory=cf_user_onenote_page_parent_section_parent_section_group_section,
    ) as g:
        g.custom_command(
            'copy-to-notebook',
            'usersactions_user_onenote_page_parent_section_parent_section_group_section_copy_to_notebook',
        )
        g.custom_command(
            'copy-to-section-group',
            'usersactions_user_onenote_page_parent_section_parent_section_group_section_copy_to_section_group',
        )

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_section_group_parent_notebook

    usersactions_v1_0_user_onenote_section_group_parent_notebook = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_section_group_parent_notebook_operations#UserOnenoteSectionGroupParentNotebookOperations.{}',
        client_factory=cf_user_onenote_section_group_parent_notebook,
    )
    with self.command_group(
        'usersactions user-onenote-section-group-parent-notebook',
        usersactions_v1_0_user_onenote_section_group_parent_notebook,
        client_factory=cf_user_onenote_section_group_parent_notebook,
    ) as g:
        g.custom_command('copy-notebook', 'usersactions_user_onenote_section_group_parent_notebook_copy_notebook')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_section_group_parent_notebook_section

    usersactions_v1_0_user_onenote_section_group_parent_notebook_section = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_section_group_parent_notebook_section_operations#UserOnenoteSectionGroupParentNotebookSectionOperations.{}',
        client_factory=cf_user_onenote_section_group_parent_notebook_section,
    )
    with self.command_group(
        'usersactions user-onenote-section-group-parent-notebook-section',
        usersactions_v1_0_user_onenote_section_group_parent_notebook_section,
        client_factory=cf_user_onenote_section_group_parent_notebook_section,
    ) as g:
        g.custom_command(
            'copy-to-notebook', 'usersactions_user_onenote_section_group_parent_notebook_section_copy_to_notebook'
        )
        g.custom_command(
            'copy-to-section-group',
            'usersactions_user_onenote_section_group_parent_notebook_section_copy_to_section_group',
        )

    from azext_usersactions_v1_0.generated._client_factory import (
        cf_user_onenote_section_group_parent_notebook_section_page,
    )

    usersactions_v1_0_user_onenote_section_group_parent_notebook_section_page = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_section_group_parent_notebook_section_page_operations#UserOnenoteSectionGroupParentNotebookSectionPageOperations.{}',
        client_factory=cf_user_onenote_section_group_parent_notebook_section_page,
    )
    with self.command_group(
        'usersactions user-onenote-section-group-parent-notebook-section-page',
        usersactions_v1_0_user_onenote_section_group_parent_notebook_section_page,
        client_factory=cf_user_onenote_section_group_parent_notebook_section_page,
    ) as g:
        g.custom_command(
            'copy-to-section', 'usersactions_user_onenote_section_group_parent_notebook_section_page_copy_to_section'
        )
        g.custom_command(
            'onenote-patch-content',
            'usersactions_user_onenote_section_group_parent_notebook_section_page_onenote_patch_content',
        )

    from azext_usersactions_v1_0.generated._client_factory import (
        cf_user_onenote_section_group_parent_notebook_section_page_parent_notebook,
    )

    usersactions_v1_0_user_onenote_section_group_parent_notebook_section_page_parent_notebook = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_section_group_parent_notebook_section_page_parent_notebook_operations#UserOnenoteSectionGroupParentNotebookSectionPageParentNotebookOperations.{}',
        client_factory=cf_user_onenote_section_group_parent_notebook_section_page_parent_notebook,
    )
    with self.command_group(
        'usersactions user-onenote-section-group-parent-notebook-section-page-parent-notebook',
        usersactions_v1_0_user_onenote_section_group_parent_notebook_section_page_parent_notebook,
        client_factory=cf_user_onenote_section_group_parent_notebook_section_page_parent_notebook,
    ) as g:
        g.custom_command(
            'copy-notebook',
            'usersactions_user_onenote_section_group_parent_notebook_section_page_parent_notebook_copy_notebook',
        )

    from azext_usersactions_v1_0.generated._client_factory import (
        cf_user_onenote_section_group_parent_notebook_section_page_parent_section,
    )

    usersactions_v1_0_user_onenote_section_group_parent_notebook_section_page_parent_section = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_section_group_parent_notebook_section_page_parent_section_operations#UserOnenoteSectionGroupParentNotebookSectionPageParentSectionOperations.{}',
        client_factory=cf_user_onenote_section_group_parent_notebook_section_page_parent_section,
    )
    with self.command_group(
        'usersactions user-onenote-section-group-parent-notebook-section-page-parent-section',
        usersactions_v1_0_user_onenote_section_group_parent_notebook_section_page_parent_section,
        client_factory=cf_user_onenote_section_group_parent_notebook_section_page_parent_section,
    ) as g:
        g.custom_command(
            'copy-to-notebook',
            'usersactions_user_onenote_section_group_parent_notebook_section_page_parent_section_copy_to_notebook',
        )
        g.custom_command(
            'copy-to-section-group',
            'usersactions_user_onenote_section_group_parent_notebook_section_page_parent_section_copy_to_section_group',
        )

    from azext_usersactions_v1_0.generated._client_factory import (
        cf_user_onenote_section_group_parent_notebook_section_parent_notebook,
    )

    usersactions_v1_0_user_onenote_section_group_parent_notebook_section_parent_notebook = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_section_group_parent_notebook_section_parent_notebook_operations#UserOnenoteSectionGroupParentNotebookSectionParentNotebookOperations.{}',
        client_factory=cf_user_onenote_section_group_parent_notebook_section_parent_notebook,
    )
    with self.command_group(
        'usersactions user-onenote-section-group-parent-notebook-section-parent-notebook',
        usersactions_v1_0_user_onenote_section_group_parent_notebook_section_parent_notebook,
        client_factory=cf_user_onenote_section_group_parent_notebook_section_parent_notebook,
    ) as g:
        g.custom_command(
            'copy-notebook',
            'usersactions_user_onenote_section_group_parent_notebook_section_parent_notebook_copy_notebook',
        )

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_section_group_section

    usersactions_v1_0_user_onenote_section_group_section = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_section_group_section_operations#UserOnenoteSectionGroupSectionOperations.{}',
        client_factory=cf_user_onenote_section_group_section,
    )
    with self.command_group(
        'usersactions user-onenote-section-group-section',
        usersactions_v1_0_user_onenote_section_group_section,
        client_factory=cf_user_onenote_section_group_section,
    ) as g:
        g.custom_command('copy-to-notebook', 'usersactions_user_onenote_section_group_section_copy_to_notebook')
        g.custom_command(
            'copy-to-section-group', 'usersactions_user_onenote_section_group_section_copy_to_section_group'
        )

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_section_group_section_page

    usersactions_v1_0_user_onenote_section_group_section_page = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_section_group_section_page_operations#UserOnenoteSectionGroupSectionPageOperations.{}',
        client_factory=cf_user_onenote_section_group_section_page,
    )
    with self.command_group(
        'usersactions user-onenote-section-group-section-page',
        usersactions_v1_0_user_onenote_section_group_section_page,
        client_factory=cf_user_onenote_section_group_section_page,
    ) as g:
        g.custom_command('copy-to-section', 'usersactions_user_onenote_section_group_section_page_copy_to_section')
        g.custom_command(
            'onenote-patch-content', 'usersactions_user_onenote_section_group_section_page_onenote_patch_content'
        )

    from azext_usersactions_v1_0.generated._client_factory import (
        cf_user_onenote_section_group_section_page_parent_notebook,
    )

    usersactions_v1_0_user_onenote_section_group_section_page_parent_notebook = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_section_group_section_page_parent_notebook_operations#UserOnenoteSectionGroupSectionPageParentNotebookOperations.{}',
        client_factory=cf_user_onenote_section_group_section_page_parent_notebook,
    )
    with self.command_group(
        'usersactions user-onenote-section-group-section-page-parent-notebook',
        usersactions_v1_0_user_onenote_section_group_section_page_parent_notebook,
        client_factory=cf_user_onenote_section_group_section_page_parent_notebook,
    ) as g:
        g.custom_command(
            'copy-notebook', 'usersactions_user_onenote_section_group_section_page_parent_notebook_copy_notebook'
        )

    from azext_usersactions_v1_0.generated._client_factory import (
        cf_user_onenote_section_group_section_page_parent_notebook_section,
    )

    usersactions_v1_0_user_onenote_section_group_section_page_parent_notebook_section = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_section_group_section_page_parent_notebook_section_operations#UserOnenoteSectionGroupSectionPageParentNotebookSectionOperations.{}',
        client_factory=cf_user_onenote_section_group_section_page_parent_notebook_section,
    )
    with self.command_group(
        'usersactions user-onenote-section-group-section-page-parent-notebook-section',
        usersactions_v1_0_user_onenote_section_group_section_page_parent_notebook_section,
        client_factory=cf_user_onenote_section_group_section_page_parent_notebook_section,
    ) as g:
        g.custom_command(
            'copy-to-notebook',
            'usersactions_user_onenote_section_group_section_page_parent_notebook_section_copy_to_notebook',
        )
        g.custom_command(
            'copy-to-section-group',
            'usersactions_user_onenote_section_group_section_page_parent_notebook_section_copy_to_section_group',
        )

    from azext_usersactions_v1_0.generated._client_factory import (
        cf_user_onenote_section_group_section_page_parent_section,
    )

    usersactions_v1_0_user_onenote_section_group_section_page_parent_section = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_section_group_section_page_parent_section_operations#UserOnenoteSectionGroupSectionPageParentSectionOperations.{}',
        client_factory=cf_user_onenote_section_group_section_page_parent_section,
    )
    with self.command_group(
        'usersactions user-onenote-section-group-section-page-parent-section',
        usersactions_v1_0_user_onenote_section_group_section_page_parent_section,
        client_factory=cf_user_onenote_section_group_section_page_parent_section,
    ) as g:
        g.custom_command(
            'copy-to-notebook', 'usersactions_user_onenote_section_group_section_page_parent_section_copy_to_notebook'
        )
        g.custom_command(
            'copy-to-section-group',
            'usersactions_user_onenote_section_group_section_page_parent_section_copy_to_section_group',
        )

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_section_group_section_parent_notebook

    usersactions_v1_0_user_onenote_section_group_section_parent_notebook = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_section_group_section_parent_notebook_operations#UserOnenoteSectionGroupSectionParentNotebookOperations.{}',
        client_factory=cf_user_onenote_section_group_section_parent_notebook,
    )
    with self.command_group(
        'usersactions user-onenote-section-group-section-parent-notebook',
        usersactions_v1_0_user_onenote_section_group_section_parent_notebook,
        client_factory=cf_user_onenote_section_group_section_parent_notebook,
    ) as g:
        g.custom_command(
            'copy-notebook', 'usersactions_user_onenote_section_group_section_parent_notebook_copy_notebook'
        )

    from azext_usersactions_v1_0.generated._client_factory import (
        cf_user_onenote_section_group_section_parent_notebook_section,
    )

    usersactions_v1_0_user_onenote_section_group_section_parent_notebook_section = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_section_group_section_parent_notebook_section_operations#UserOnenoteSectionGroupSectionParentNotebookSectionOperations.{}',
        client_factory=cf_user_onenote_section_group_section_parent_notebook_section,
    )
    with self.command_group(
        'usersactions user-onenote-section-group-section-parent-notebook-section',
        usersactions_v1_0_user_onenote_section_group_section_parent_notebook_section,
        client_factory=cf_user_onenote_section_group_section_parent_notebook_section,
    ) as g:
        g.custom_command(
            'copy-to-notebook',
            'usersactions_user_onenote_section_group_section_parent_notebook_section_copy_to_notebook',
        )
        g.custom_command(
            'copy-to-section-group',
            'usersactions_user_onenote_section_group_section_parent_notebook_section_copy_to_section_group',
        )

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_section

    usersactions_v1_0_user_onenote_section = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_section_operations#UserOnenoteSectionOperations.{}',
        client_factory=cf_user_onenote_section,
    )
    with self.command_group(
        'usersactions user-onenote-section',
        usersactions_v1_0_user_onenote_section,
        client_factory=cf_user_onenote_section,
    ) as g:
        g.custom_command('copy-to-notebook', 'usersactions_user_onenote_section_copy_to_notebook')
        g.custom_command('copy-to-section-group', 'usersactions_user_onenote_section_copy_to_section_group')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_section_page

    usersactions_v1_0_user_onenote_section_page = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_section_page_operations#UserOnenoteSectionPageOperations.{}',
        client_factory=cf_user_onenote_section_page,
    )
    with self.command_group(
        'usersactions user-onenote-section-page',
        usersactions_v1_0_user_onenote_section_page,
        client_factory=cf_user_onenote_section_page,
    ) as g:
        g.custom_command('copy-to-section', 'usersactions_user_onenote_section_page_copy_to_section')
        g.custom_command('onenote-patch-content', 'usersactions_user_onenote_section_page_onenote_patch_content')

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_section_page_parent_notebook

    usersactions_v1_0_user_onenote_section_page_parent_notebook = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_section_page_parent_notebook_operations#UserOnenoteSectionPageParentNotebookOperations.{}',
        client_factory=cf_user_onenote_section_page_parent_notebook,
    )
    with self.command_group(
        'usersactions user-onenote-section-page-parent-notebook',
        usersactions_v1_0_user_onenote_section_page_parent_notebook,
        client_factory=cf_user_onenote_section_page_parent_notebook,
    ) as g:
        g.custom_command('copy-notebook', 'usersactions_user_onenote_section_page_parent_notebook_copy_notebook')

    from azext_usersactions_v1_0.generated._client_factory import (
        cf_user_onenote_section_page_parent_notebook_section_group_parent_notebook,
    )

    usersactions_v1_0_user_onenote_section_page_parent_notebook_section_group_parent_notebook = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_section_page_parent_notebook_section_group_parent_notebook_operations#UserOnenoteSectionPageParentNotebookSectionGroupParentNotebookOperations.{}',
        client_factory=cf_user_onenote_section_page_parent_notebook_section_group_parent_notebook,
    )
    with self.command_group(
        'usersactions user-onenote-section-page-parent-notebook-section-group-parent-notebook',
        usersactions_v1_0_user_onenote_section_page_parent_notebook_section_group_parent_notebook,
        client_factory=cf_user_onenote_section_page_parent_notebook_section_group_parent_notebook,
    ) as g:
        g.custom_command(
            'copy-notebook',
            'usersactions_user_onenote_section_page_parent_notebook_section_group_parent_notebook_copy_notebook',
        )

    from azext_usersactions_v1_0.generated._client_factory import (
        cf_user_onenote_section_page_parent_notebook_section_group_section,
    )

    usersactions_v1_0_user_onenote_section_page_parent_notebook_section_group_section = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_section_page_parent_notebook_section_group_section_operations#UserOnenoteSectionPageParentNotebookSectionGroupSectionOperations.{}',
        client_factory=cf_user_onenote_section_page_parent_notebook_section_group_section,
    )
    with self.command_group(
        'usersactions user-onenote-section-page-parent-notebook-section-group-section',
        usersactions_v1_0_user_onenote_section_page_parent_notebook_section_group_section,
        client_factory=cf_user_onenote_section_page_parent_notebook_section_group_section,
    ) as g:
        g.custom_command(
            'copy-to-notebook',
            'usersactions_user_onenote_section_page_parent_notebook_section_group_section_copy_to_notebook',
        )
        g.custom_command(
            'copy-to-section-group',
            'usersactions_user_onenote_section_page_parent_notebook_section_group_section_copy_to_section_group',
        )

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_section_page_parent_notebook_section

    usersactions_v1_0_user_onenote_section_page_parent_notebook_section = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_section_page_parent_notebook_section_operations#UserOnenoteSectionPageParentNotebookSectionOperations.{}',
        client_factory=cf_user_onenote_section_page_parent_notebook_section,
    )
    with self.command_group(
        'usersactions user-onenote-section-page-parent-notebook-section',
        usersactions_v1_0_user_onenote_section_page_parent_notebook_section,
        client_factory=cf_user_onenote_section_page_parent_notebook_section,
    ) as g:
        g.custom_command(
            'copy-to-notebook', 'usersactions_user_onenote_section_page_parent_notebook_section_copy_to_notebook'
        )
        g.custom_command(
            'copy-to-section-group',
            'usersactions_user_onenote_section_page_parent_notebook_section_copy_to_section_group',
        )

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_section_page_parent_section

    usersactions_v1_0_user_onenote_section_page_parent_section = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_section_page_parent_section_operations#UserOnenoteSectionPageParentSectionOperations.{}',
        client_factory=cf_user_onenote_section_page_parent_section,
    )
    with self.command_group(
        'usersactions user-onenote-section-page-parent-section',
        usersactions_v1_0_user_onenote_section_page_parent_section,
        client_factory=cf_user_onenote_section_page_parent_section,
    ) as g:
        g.custom_command('copy-to-notebook', 'usersactions_user_onenote_section_page_parent_section_copy_to_notebook')
        g.custom_command(
            'copy-to-section-group', 'usersactions_user_onenote_section_page_parent_section_copy_to_section_group'
        )

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_section_parent_notebook

    usersactions_v1_0_user_onenote_section_parent_notebook = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_section_parent_notebook_operations#UserOnenoteSectionParentNotebookOperations.{}',
        client_factory=cf_user_onenote_section_parent_notebook,
    )
    with self.command_group(
        'usersactions user-onenote-section-parent-notebook',
        usersactions_v1_0_user_onenote_section_parent_notebook,
        client_factory=cf_user_onenote_section_parent_notebook,
    ) as g:
        g.custom_command('copy-notebook', 'usersactions_user_onenote_section_parent_notebook_copy_notebook')

    from azext_usersactions_v1_0.generated._client_factory import (
        cf_user_onenote_section_parent_notebook_section_group_parent_notebook,
    )

    usersactions_v1_0_user_onenote_section_parent_notebook_section_group_parent_notebook = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_section_parent_notebook_section_group_parent_notebook_operations#UserOnenoteSectionParentNotebookSectionGroupParentNotebookOperations.{}',
        client_factory=cf_user_onenote_section_parent_notebook_section_group_parent_notebook,
    )
    with self.command_group(
        'usersactions user-onenote-section-parent-notebook-section-group-parent-notebook',
        usersactions_v1_0_user_onenote_section_parent_notebook_section_group_parent_notebook,
        client_factory=cf_user_onenote_section_parent_notebook_section_group_parent_notebook,
    ) as g:
        g.custom_command(
            'copy-notebook',
            'usersactions_user_onenote_section_parent_notebook_section_group_parent_notebook_copy_notebook',
        )

    from azext_usersactions_v1_0.generated._client_factory import (
        cf_user_onenote_section_parent_notebook_section_group_section,
    )

    usersactions_v1_0_user_onenote_section_parent_notebook_section_group_section = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_section_parent_notebook_section_group_section_operations#UserOnenoteSectionParentNotebookSectionGroupSectionOperations.{}',
        client_factory=cf_user_onenote_section_parent_notebook_section_group_section,
    )
    with self.command_group(
        'usersactions user-onenote-section-parent-notebook-section-group-section',
        usersactions_v1_0_user_onenote_section_parent_notebook_section_group_section,
        client_factory=cf_user_onenote_section_parent_notebook_section_group_section,
    ) as g:
        g.custom_command(
            'copy-to-notebook',
            'usersactions_user_onenote_section_parent_notebook_section_group_section_copy_to_notebook',
        )
        g.custom_command(
            'copy-to-section-group',
            'usersactions_user_onenote_section_parent_notebook_section_group_section_copy_to_section_group',
        )

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_section_parent_notebook_section

    usersactions_v1_0_user_onenote_section_parent_notebook_section = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_section_parent_notebook_section_operations#UserOnenoteSectionParentNotebookSectionOperations.{}',
        client_factory=cf_user_onenote_section_parent_notebook_section,
    )
    with self.command_group(
        'usersactions user-onenote-section-parent-notebook-section',
        usersactions_v1_0_user_onenote_section_parent_notebook_section,
        client_factory=cf_user_onenote_section_parent_notebook_section,
    ) as g:
        g.custom_command(
            'copy-to-notebook', 'usersactions_user_onenote_section_parent_notebook_section_copy_to_notebook'
        )
        g.custom_command(
            'copy-to-section-group', 'usersactions_user_onenote_section_parent_notebook_section_copy_to_section_group'
        )

    from azext_usersactions_v1_0.generated._client_factory import (
        cf_user_onenote_section_parent_section_group_parent_notebook,
    )

    usersactions_v1_0_user_onenote_section_parent_section_group_parent_notebook = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_section_parent_section_group_parent_notebook_operations#UserOnenoteSectionParentSectionGroupParentNotebookOperations.{}',
        client_factory=cf_user_onenote_section_parent_section_group_parent_notebook,
    )
    with self.command_group(
        'usersactions user-onenote-section-parent-section-group-parent-notebook',
        usersactions_v1_0_user_onenote_section_parent_section_group_parent_notebook,
        client_factory=cf_user_onenote_section_parent_section_group_parent_notebook,
    ) as g:
        g.custom_command(
            'copy-notebook', 'usersactions_user_onenote_section_parent_section_group_parent_notebook_copy_notebook'
        )

    from azext_usersactions_v1_0.generated._client_factory import (
        cf_user_onenote_section_parent_section_group_parent_notebook_section,
    )

    usersactions_v1_0_user_onenote_section_parent_section_group_parent_notebook_section = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_section_parent_section_group_parent_notebook_section_operations#UserOnenoteSectionParentSectionGroupParentNotebookSectionOperations.{}',
        client_factory=cf_user_onenote_section_parent_section_group_parent_notebook_section,
    )
    with self.command_group(
        'usersactions user-onenote-section-parent-section-group-parent-notebook-section',
        usersactions_v1_0_user_onenote_section_parent_section_group_parent_notebook_section,
        client_factory=cf_user_onenote_section_parent_section_group_parent_notebook_section,
    ) as g:
        g.custom_command(
            'copy-to-notebook',
            'usersactions_user_onenote_section_parent_section_group_parent_notebook_section_copy_to_notebook',
        )
        g.custom_command(
            'copy-to-section-group',
            'usersactions_user_onenote_section_parent_section_group_parent_notebook_section_copy_to_section_group',
        )

    from azext_usersactions_v1_0.generated._client_factory import cf_user_onenote_section_parent_section_group_section

    usersactions_v1_0_user_onenote_section_parent_section_group_section = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_onenote_section_parent_section_group_section_operations#UserOnenoteSectionParentSectionGroupSectionOperations.{}',
        client_factory=cf_user_onenote_section_parent_section_group_section,
    )
    with self.command_group(
        'usersactions user-onenote-section-parent-section-group-section',
        usersactions_v1_0_user_onenote_section_parent_section_group_section,
        client_factory=cf_user_onenote_section_parent_section_group_section,
    ) as g:
        g.custom_command(
            'copy-to-notebook', 'usersactions_user_onenote_section_parent_section_group_section_copy_to_notebook'
        )
        g.custom_command(
            'copy-to-section-group',
            'usersactions_user_onenote_section_parent_section_group_section_copy_to_section_group',
        )

    from azext_usersactions_v1_0.generated._client_factory import cf_user_online_meeting

    usersactions_v1_0_user_online_meeting = CliCommandType(
        operations_tmpl='azext_usersactions_v1_0.vendored_sdks.usersactions.operations._user_online_meeting_operations#UserOnlineMeetingOperations.{}',
        client_factory=cf_user_online_meeting,
    )
    with self.command_group(
        'usersactions user-online-meeting', usersactions_v1_0_user_online_meeting, client_factory=cf_user_online_meeting
    ) as g:
        g.custom_command('create-or-get', 'usersactions_user_online_meeting_create_or_get')

    with self.command_group('usersactions_v1_0', is_experimental=True):
        pass
