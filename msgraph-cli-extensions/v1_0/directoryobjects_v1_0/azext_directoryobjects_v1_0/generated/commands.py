# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=too-many-statements
# pylint: disable=too-many-locals
# pylint: disable=bad-continuation
# pylint: disable=line-too-long

from msgraph.cli.core.commands import CliCommandType
from azext_directoryobjects_v1_0.generated._client_factory import cf_directoryobjectsdirectoryobject, cf_directoryobject


directoryobjects_v1_0_directoryobjectsdirectoryobject = CliCommandType(
    operations_tmpl='azext_directoryobjects_v1_0.vendored_sdks.directoryobjects.operations._directoryobjectsdirectoryobject_operations#directoryobjectsdirectoryobjectOperations.{}',
    client_factory=cf_directoryobjectsdirectoryobject,
)


directoryobjects_v1_0_directoryobject = CliCommandType(
    operations_tmpl='azext_directoryobjects_v1_0.vendored_sdks.directoryobjects.operations._directoryobjects_operations#directoryobjectsOperations.{}',
    client_factory=cf_directoryobject,
)


def load_command_table(self, _):

    with self.command_group(
        'directoryobjects directoryobjectsdirectoryobject',
        directoryobjects_v1_0_directoryobjectsdirectoryobject,
        client_factory=cf_directoryobjectsdirectoryobject,
    ) as g:
        g.custom_command(
            'create-directory-object', 'directoryobjects_directoryobjectsdirectoryobject_create_directory_object'
        )
        g.custom_command(
            'delete-directory-object', 'directoryobjects_directoryobjectsdirectoryobject_delete_directory_object'
        )
        g.custom_command(
            'list-directory-object', 'directoryobjects_directoryobjectsdirectoryobject_list_directory_object'
        )
        g.custom_command(
            'show-directory-object', 'directoryobjects_directoryobjectsdirectoryobject_show_directory_object'
        )
        g.custom_command(
            'update-directory-object', 'directoryobjects_directoryobjectsdirectoryobject_update_directory_object'
        )

    with self.command_group(
        'directoryobjects directoryobject', directoryobjects_v1_0_directoryobject, client_factory=cf_directoryobject
    ) as g:
        g.custom_command('check-member-group', 'directoryobjects_directoryobject_check_member_group')
        g.custom_command('check-member-object', 'directoryobjects_directoryobject_check_member_object')
        g.custom_command(
            'get-available-extension-property', 'directoryobjects_directoryobject_get_available_extension_property'
        )
        g.custom_command('get-by-id', 'directoryobjects_directoryobject_get_by_id')
        g.custom_command('get-member-group', 'directoryobjects_directoryobject_get_member_group')
        g.custom_command('get-member-object', 'directoryobjects_directoryobject_get_member_object')
        g.custom_command('restore', 'directoryobjects_directoryobject_restore')
        g.custom_command('validate-property', 'directoryobjects_directoryobject_validate_property')

    with self.command_group('directoryobjects_v1_0', is_experimental=True):
        pass
